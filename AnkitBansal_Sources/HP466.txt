      *****************  RPG PROGRAM HEADING  ************************
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP466
      * TITLE:       SPECIFY EXPENSE TICKET REPORT OPTIONS
      * PROGRAMMER:  LEANNE FEDOR
      * CREATED:     05/31/94
      *
      * FUNCTION: ALLOWS USER TO SPECIFY REPORT OPTIONS.
      *
      *           THIS PROGRAM IS CALLED FROM A MENU. IT USES QCMDEXC
      *           TO SUBMIT HP466CL WHICH USES AN OPNQRY TO SELECT
      *           RECORDS, KEY THE EXPENSE TICKET FILE AND CALL THE
      *           REPORT PROGRAM HP666.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 01/31/01  LeAnne Fedor
      *           In preparation for allowing groups on a farm to have different
      *           production types, we removed 'production type' as a selector.
      *
      * 07/18/02  LeAnne Fedor
      *           In preparation for allowing groups on a farm to have different
      *           production phases, we removed the 'match' edit between phase and farm.
      *
      * 07/06/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Continuous Flow Flag' to Hog Group file.
      *
      * 10/16/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      *
      * 04/15/16  Barb Gutierrez  (E5290)
      *           Changed dspf field name from dfalbo to dfbobo.  The CLP HP466cl was doing
      *           an open query against HSP048 for the allocated business office.  This
      *           field does not get populated until tickets are allocated which is after
      *           this report is ran.  Before we had multiple live offices, the selection was
      *           you select a live office, it only picks up tickets that were manually intered
      *           because the allcoated business office is populated.  We need all tickets for
      *           the business office selected within the date range specified.  The cl is now
      *           going to select agains the regular business office.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHPD466    CF   E             WORKSTN
     F                                     INFDS(IOFEED)
      *
     FHSP002    IF   E           K DISK
      *    FUNCTIONS                  (KEY: FNFNCD)
      *
     FHSP008    IF   E           K DISK
      *    REGION                     (KEY: RGRGCD)
      *
     FHSP009    IF   E           K DISK
      *    BUSINESS OFFICE            (KEY: BOBOBO)
      *
     FHSP011    IF   E           K DISK
      *    PRODUCTION PHASE           (KEY: PPPPCD)
      *
     FHSP018    IF   E           K DISK
      *    FARM SITE                  (KEY: FSFSCD)
      *
     FHSP034    IF   E           K DISK
      *    HOG GROUP                  (KEY: HGHGCD)
      *
     FHSP050    IF   E           K DISK
      *    EXPENSE CLASS              (KEY: ECECCD)
      *
     FHSL051A   IF   E           K DISK
      *    EXPENSE SUBCLASS           (KEY: ESESCD ESECCD)
      *
     FHSP052    IF   E           K DISK
      *    EXPENSE CODE               (KEY: EXEXCD)
      *
      /EJECT
      ****************************************************************
      * TABLE AND ARRAY SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  STANDARD MESSAGE ARRAYS
      *---------------------------------------------------------------
      *
      *---------------------------------------------------------------
      *  COMPILE TIME ARRAYS FOR SUBMIT JOB COMMAND USED IN QCMDEXC
      *---------------------------------------------------------------
     D CMD             S              1    DIM(80) CTDATA PERRCD(80)
      *---------------------------------------------------------------
      *
      /EJECT
      ****************************************************************
      * INPUT SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      * STANDARD ERROR MESSAGE HANDLING DATA STRUCTURES
      *---------------------------------------------------------------
      *
      * FOR ERROR MESSAGE HANDLING, A PACKED INDEX (E) IS REQUIRED.
      * FOR PROGRAM READABILITY, DEFINE A CORRESPONDING ERROR COUNT
      * FIELD CALLED 'ERROR'
      *
     D                 DS                  INZ
     D  ERROR                  1      2P 0
     D  E                      1      2P 0
      *
      * THIS DATA STRUCTURE SUPPLIES THE NAME OF THE MESSAGE FILE TO
      * THE MESSAGE HANDLING CL PROGRAM.  THE FIELD NAME MSGFIL MUST BE
      * CONSTANT. THE VALUE IN QUOTES IS THE NAME OF THE SPECIFIC
      * MESSAGE FILE CONTAINING THE USER DEFINED MESSAGES.
      *
     D                 DS                  INZ
     D  MSGFIL                 1     10    INZ('HSMSGF    ')
      *
      * THE FOLLOWING 3 DATA STRUCTURES ARE USED TO SPEED MESSAGE
      * HANDLING SINCE IT IS FASTER TO CLEAR DATA STRUCTURES THAN
      * ARRAYS.  EACH IS ASSOCIATED WITH A STANDARD MESSAGE ARRAY.
      *
     D MGI             DS           140    INZ
     D  MGID                   1    140
     D                                     DIM(20)                              MSG ID ARRAY
      *
     D MGD             DS          1000    INZ
     D  MGDT                   1   1000
     D                                     DIM(20)                              MSG PARMS
      *
     D MGWK            DS            50    INZ
     D  MGW                    1     50
     D                                     DIM(50)                              MSG WORK PARMS
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      * STANDARD WORKSTATION INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTWSFR (RECORD FORMAT: UTIDFRR)
     D IOFEED        E DS                  EXTNAME(UTWSFR)
      *
      *---------------------------------------------------------------
      * STANDARD DATABASE FILE INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTDBFR (RECORD FORMAT: FDBCKD)
     D DBFEED        E DS                  EXTNAME(UTDBFR)
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D CREATE          C                   CONST('CREATE')
     D REVISE          C                   CONST('REVISE')
     D DELETE          C                   CONST('DELETE')
     D VIEW            C                   CONST('VIEW  ')
     D SELECT          C                   CONST('SELECT')
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
     D SET1            C                   CONST('SET1  ')
     D EDIT1           C                   CONST('EDIT1 ')
     D SCRN1           C                   CONST('SCRN1 ')
     D EXIT            C                   CONST('EXIT  ')
     D UPDATE          C                   CONST('UPDATE')
     D ALL             C                   CONST('A')
      *
      *---------------------------------------------------------------
      *  LDA - REPORT OPTIONS
      *---------------------------------------------------------------
      *
     D LDA            UDS
     D  LDFROM                 1     08  0
     D  LDTO                   9     16  0
     D  LDRGCD                17     21
     D**LDALBO                22     26
     D  LDBOBO                22     26
     D  LDPPCD                27     31
     D  LDFSCD                37     41  0
     D  LDHGSN                42     48  0
     D  LDECCD                49     53
     D  LDESCD                54     58
     D  LDEXCD                59     63
      *
     D  LDHGCD                64     70
     D  LDBODS                71    100
     D  LDPPDS               111    140
     D  LDFSNM               141    165
     D  LDECDS               166    185
     D  LDESDS               186    205
     D  LDEXDS               206    225
     D  LDRGDS               226    245
     D  LDFMDY               251    256  0
     D  LDTMDY               261    266  0
      *
     D  LDCJD                271    282
     D  LDCOCD               283    285
      *
     D  LDOUTU               401    410
     D  LDHOLD               411    411
     D  LDCOPY               412    412  0
     D  LDOUTQ               413    422
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAIN LINE
      ****************************************************************
      *
     C                   MOVEL     SET1          ROUTNE
      *
     C     *INLR         DOWEQ     *OFF                                         MAIN DO LOOP
      *
     C     ROUTNE        CASEQ     SET1          $SET1
     C     ROUTNE        CASEQ     SCRN1         $SCRN1
     C     ROUTNE        CASEQ     EDIT1         $EDIT1
      *
     C     ROUTNE        CASEQ     EXIT          $EXIT
     C                   ENDCS
     C                   ENDDO                                                  MAIN DO LOOP
      *
      /EJECT
      *----------------------------------------------------------------
      * $SET1 - SUBROUTINE TO SET ENVIRONMENT FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SET1         BEGSR
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $SCRN1 - SUBROUTINE TO PERFORM OPERATOR I/O FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SCRN1        BEGSR
      *
      * IF THE USER FAILED THE INITIAL SECURITY CHECKS, SETON 99
      * TO PROTECT INPUT FIELDS AND INVALIDATE FUNCTION KEYS.
      *
     C     TERMFL        IFEQ      YES
     C                   SETON                                        99
     C                   ENDIF
      *
      * WRITE THE ERROR MESSAGES FROM THE ERROR ARRAYS TO THE
      * ERROR MESSAGE SUBFILE
      *
     C                   EXSR      $WRMSG
      *
      * WRITE SCREEN 1 TO CRT
      *
     C                   WRITE     HP466K1
     C                   WRITE     HP466EC
     C                   EXFMT     HP466R1
      *
      * CLEAR THE MESSAGES FROM THE MESSAGE DATA STRUCTURES AND PROGRAM
      * MESSAGE QUEUE.
      *
     C                   EXSR      $CLMSG
      *
      * GET USER'S ENTRY AND SET THE NEXT ROUTINE
      *
     C                   SELECT
     C     *IN03         WHENEQ    *ON                                          F3-EXIT
     C     TERMFL        OREQ      YES                                          BAD USER
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN17         WHENEQ    *ON                                          F17-PRINT OPT
     C                   MOVEL     SCRN1         ROUTNE
     C                   CALL      'HP451'
     C                   PARM                    SDPGM
     C     LDCOPY        PARM      LDCOPY        XXCOPY
     C                   PARM                    LDHOLD
     C                   PARM                    LDOUTQ
     C                   PARM                    XXNITE
     C                   PARM                    XXJOBQ
      *
     C     *IN20         WHENEQ    *ON                                          F20-WRKSPLF
     C                   CALL      'QEZOUTPT'
     C                   MOVEL     SCRN1         ROUTNE
      *
      * CHECK FOR A USER PROMPT FIRST. THE USER MAY WANT
      * TO SELECT A NEW BUSINESS OFFICE.
      *
     C     *IN04         WHENEQ    *ON                                          WH PROMPT
     C                   EXSR      $F4S1
     C                   MOVEL     SCRN1         ROUTNE
     C                   OTHER
      *
      * ALWAYS CHECK SECURITY FOR BUSINESS OFFICE
      *
     C                   MOVEL(P)  'HP466'       WKFNCD
     C                   EXSR      $CHKBO
     C                   MOVEL     EDIT1         ROUTNE
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $EDIT1 - SUBROUTINE TO EDIT INPUT FIELDS FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $EDIT1        BEGSR
      *
      * CLEAR ALL OUTPUT ONLY FIELDS.
      *
     C                   MOVE      *BLANK        DFRGDS
     C                   MOVE      *BLANK        DFPPDS
     C                   MOVE      *BLANK        DFFSNM
     C                   MOVE      *BLANK        DFCCDS
     C                   MOVE      *BLANK        DFECDS
     C                   MOVE      *BLANK        DFESDS
     C                   MOVE      *BLANK        DFEXDS
      *
     C                   Z-ADD     0             LDHGSN
     C                   MOVE      *BLANK        LDCOCD
      *
      * SETOFF INDICATORS USED WITH PROMPTING
      *
     C                   SETOFF                                       48
     C                   SETOFF                                       505152
     C                   SETOFF                                       535455
     C                   SETOFF                                       565758
      *
      * Verify that a business office is entered.
      *
     C     DFBOBO        IFEQ      *BLANK
     C                   SETON                                        31
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
     C                   ENDIF
      *
      * VERIFY THAT A FROM DATE IS ENTERED
      *
     C     DFFMDY        IFEQ      0                                            IF NO FROM
     C                   SETON                                        39
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
     C                   ELSE
      *
      * VERIFY THAT THE FROM DATE IS VALID
      *
     C                   Z-ADD     DFFMDY        PFRM8
     C                   Z-ADD     0             PTO8
     C                   MOVEL     'MDY '        PFRFMT
     C                   MOVEL     'CYMD'        PTOFMT
     C                   Z-ADD     0             PDAYS
     C                   MOVE      *BLANK        PCODE
     C                   MOVE      *BLANK        PRTRN
      *
     C                   EXSR      $DATE
      *
     C     PRTRN         IFNE      *BLANK                                       IF INVALID
     C                   SETON                                        39
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09004'     MGID(E)
     C                   ENDIF
     C                   ELSE
     C                   MOVE      PTO8          LDFROM
     C                   ENDIF                                                  IF INVALID
     C                   ENDIF                                                  IF NO FROM
      *
      * VERIFY THAT A TO DATE IS ENTERED
      *
     C     DFTMDY        IFEQ      0                                            IF NO TO
     C                   SETON                                        40
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
     C                   ELSE
      *
      * VERIFY THAT THE TO DATE IS VALID
      *
     C                   Z-ADD     DFTMDY        PFRM8
     C                   Z-ADD     0             PTO8
     C                   MOVEL     'MDY '        PFRFMT
     C                   MOVEL     'CYMD'        PTOFMT
     C                   Z-ADD     0             PDAYS
     C                   MOVE      *BLANK        PCODE
     C                   MOVE      *BLANK        PRTRN
      *
     C                   EXSR      $DATE
      *
     C     PRTRN         IFNE      *BLANK                                       IF INVALID
     C                   SETON                                        40
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09004'     MGID(E)
     C                   ENDIF
     C                   ELSE
     C                   MOVE      PTO8          LDTO
     C                   ENDIF                                                  IF INVALID
     C                   ENDIF                                                  IF NO TO
      *
      * IF THE DATES ARE VALID, THEN
      * VERIFY THAT THE "TO" DATE IS NOT EARLIER THAN THE "FROM" DATE
      *
     C     LDTO          IFLT      LDFROM                                       IF EARLIER
     C     *IN39         ANDEQ     *OFF
     C     *IN40         ANDEQ     *OFF
     C                   SETON                                        40
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09009'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                   IF EARLIER
      *
      * IF REGION IS KEYED, VALIDATE
      *
     C     DFRGCD        IFNE      *BLANK                                       IF REGION
     C     DFRGCD        CHAIN     HSP008                             97
     C     *IN97         IFEQ      *OFF                                         IF GOOD
     C                   MOVEL     RGRGDS        DFRGDS
     C                   ELSE
     C                   SETON                                        30
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00382'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFRGCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF GOOD
     C                   ENDIF                                                  IF REGION
      *
      * IF PRODUCTION PHASE IS KEYED, VALIDATE
      *
     C     DFPPCD        IFNE      *BLANK                                       IF PHASE
     C     DFPPCD        CHAIN     HSP011                             91
     C     *IN91         IFEQ      *OFF                                         IF GOOD PHAS
     C                   MOVEL     PPPPDS        DFPPDS
     C                   ELSE
     C                   SETON                                        33
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00170'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFPPCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF GOOD PHAS
     C                   ENDIF                                                  IF PHASE
      *
      *
      * IF FARM SITE IS KEYED, VALIDATE
      *
     C     DFFSCD        IFNE      0                                            IF SITE
     C     DFFSCD        CHAIN     HSP018                             92
     C     *IN92         IFEQ      *OFF                                         IF GOOD SITE
     C                   MOVEL     FSFSNM        DFFSNM
      *
      * IF FARM SITE KEYED,
      *    CHECK FOR MATCHES BETWEEN:
      *          FARM B.O. AND SCREEN B.O.
      *          FARM PRODUCTION TYPE AND SCREEN PRODUCTION TYPE
      *          FARM PRODUCTION PHASE AND SCREEN PRODUCTION PHASE
      *
      * CHECK FOR BUSINESS OFFICE MATCH
      *
     C     DFBOBO        IFNE      *BLANK                                       IF BLANK
     C     FSFMBO        IFNE      DFBOBO                                       IF BUS OFF
     C     FSFSBO        ANDNE     DFBOBO
     C                   SETON                                        34
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00158'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVE      DFFSCD        XXFSCD
     C                   MOVEA     XXFSCD        MGW(1)
     C                   MOVEA     FSFMBO        MGW(6)
     C                   MOVEA     DFBOBO        MGW(11)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF BLANK
     C                   ENDIF                                                  IF BUS OFF
      *
      *
     C                   ELSE
     C                   SETON                                        34
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00131'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVE      DFFSCD        XXFSCD
     C                   MOVEA     XXFSCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF GOOD SITE
     C                   ENDIF                                                  IF SITE
      *
      * IF COST CENTER IS KEYED, VALIDATE
      * (YOU MUST HAVE A VALID BUSINESS OFFICE ENTRY BEFORE
      * (YOU CAN VALIDATE COST CENTER.)
      *
     C     DFCJD         IFNE      *BLANK                                       IF COST CTR
     C     *IN31         ANDEQ     *OFF
      *
     C     DFBOBO        IFEQ      *BLANK                                       IF NO B/O
     C                   SETON                                        47
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00539'     MGID(E)
     C                   ENDIF
     C                   ELSE
      *
      * YOU MUST RETRIEVE THE COMPANY NUMBER ASSOCIATED WITH
      * THE BUSINESS OFFICE BEFORE YOU CAN VALIDATE COST CENTER
      *
     C     DFBOBO        CHAIN     HSP009                             98
     C     *IN98         IFEQ      *OFF                                         IF HIT BO
     C                   MOVEL     BOCOCD        LDCOCD
     C                   ENDIF                                                  IF HIT BO
      *
     C                   EXSR      $JDEC
     C     JDEFL         IFEQ      YES
     C                   SETON                                        47
     C                   ELSE
     C                   MOVEL     XXCCDS        DFCCDS
     C                   ENDIF
     C                   ENDIF                                                  IF NO B/O
     C                   ENDIF                                                  IF COST CTR
      *
      *
      * IF HOG GROUP IS KEYED, VALIDATE
      *
     C     DFHGCD        IFNE      *BLANK                                       IF GROUP
     C     DFHGCD        CHAIN     HSP034                             93
     C     *IN93         IFEQ      *OFF                                         IF GOOD GRP
     C                   Z-ADD     HGHGSN        LDHGSN
      *
      *
      * THE GROUP'S PRODUCTION PHASE MUST MATCH THE ONE KEYED
      * BY THE USER.
      *
     C     HGPPCD        IFNE      DFPPCD                                       IF DIFF PP
     C     DFPPCD        ANDNE     *BLANK
     C                   SETON                                        35
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00462'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFHGCD        MGW(1)
     C                   MOVEA     HGPPCD        MGW(8)
     C                   MOVEA     DFPPCD        MGW(13)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF DIFF PP
      *
      * THE GROUP'S FARM SITE MUST MATCH THE ONE KEYED
      * BY THE USER.
      *
     C     HGFSCD        IFNE      DFFSCD                                       IF DIFF FARM
     C     DFFSCD        ANDNE     0
     C                   SETON                                        35
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00468'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFHGCD        MGW(1)
     C                   MOVE      HGFSCD        XXFSCD
     C                   MOVEA     XXFSCD        MGW(8)
     C                   MOVE      DFFSCD        XXFSCD
     C                   MOVEA     XXFSCD        MGW(13)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF DIFF FARM
      *
     C                   ELSE
     C                   SETON                                        35
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00261'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFHGCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF GOOD GRP
     C                   ENDIF                                                  IF GROUP
      *
      * IF EXPENSE CLASS IS KEYED, VALIDATE
      *
     C     DFECCD        IFNE      *BLANK                                       IF CLASS
     C     DFECCD        CHAIN     HSP050                             94
     C     *IN94         IFEQ      *OFF                                         IF GOOD CLAS
     C                   MOVEL     ECECDS        DFECDS
     C                   ELSE
     C                   SETON                                        36
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00281'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFECCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF GOOD CLAS
     C                   ENDIF                                                  IF CLASS
      *
      * IF EXPENSE SUBCLASS IS KEYED, VALIDATE
      *
     C     DFESCD        IFNE      *BLANK                                       IF SUB
     C     DFESCD        CHAIN     HSL051A                            95
     C     *IN95         IFEQ      *OFF                                         IF GOOD SUB
     C                   MOVEL     ESESDS        DFESDS
     C                   ELSE
     C                   SETON                                        37
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00289'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFESCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF GOOD SUB
     C                   ENDIF                                                  IF SUB
      *
      * IF EXPENSE CODE IS KEYED, VALIDATE
      *
     C     DFEXCD        IFNE      *BLANK                                       IF EXP
     C     DFEXCD        CHAIN     HSP052                             96
     C     *IN96         IFEQ      *OFF                                         IF EXP VALID
     C                   MOVEL     EXEXDS        DFEXDS
     C                   ELSE
     C                   SETON                                        38
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00301'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFEXCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF EXP VALID
     C                   ENDIF                                                  IF EXP
      *
      *
      * IF THERE ARE NO ERRORS, EXECUTE THE SUBROUTINE TO PROCESS THE
      * USERS REQUEST
      *
     C     ERROR         IFEQ      0
     C     *IN44         IFEQ      *OFF
     C                   SETON                                        44
     C                   ELSE
     C                   EXSR      $PROC1
     C                   ENDIF
     C                   ELSE
     C                   SETOFF                                       44
     C                   ENDIF
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $JDEC - SUBROUTINE TO CALL THE EXTERNAL PROGRAM TO VALIDATE JDE
      *         COST CENTERS.
      *----------------------------------------------------------------
      *
     C     $JDEC         BEGSR
      *
     C                   MOVE      *BLANK        XXCCDS
     C                   MOVEL     NO            JDEFL
      *
     C                   CALL      'HPJDEC'
     C                   PARM                    MGI                            MSG ID'S
     C                   PARM                    MGD                            MSG DATA FLD
     C                   PARM                    ERROR                          # ERR MSGS
     C                   PARM                    DFCJD                          COST CENTER
     C                   PARM                    LDCOCD                         COMPANY
     C                   PARM                    XXCCDS                         DESCRIPTION
     C                   PARM                    JDEFL                          ERROR FLAG
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $CHKBO - CHECK THE BUSINESS OFFICE ENTERED AS A RESTRICTOR
      *----------------------------------------------------------------
      *
      * Validate the business office if entered:
      *    BE A VALID OFFICE IN THE BUSINESS OFFICE MASTER
      *    HAVE A SECURITY LOCATION TO WHICH THE USER IS AUTHORIZED
      *
     C     $CHKBO        BEGSR
      *
     C**   DFBOBO        IFEQ      *BLANK
     C**                 MOVEL     ALL           INBOFL
     C**                 ELSE
     C                   MOVEL     YES           INBOFL
     C**                 ENDIF
      *
     C                   EXSR      $SEC
      *
     C                   MOVEL     OUBODS        DFBODS
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $SEC   - CALL SECURITY PROGRAM
      *---------------------------------------------------------------
      *
     C     $SEC          BEGSR
      *
      * SETUP THE FIELDS TO SEND INTO THE SECURITY PROGRAM
      *
     C                   MOVEL     WKFNCD        INFNCD                         PGM NAME
     C                   MOVEL     DFBOBO        INBOBO                         SCREEN BO
      *
     C                   MOVE      *BLANK        OUBOBO                         BO CODE
     C                   MOVE      *BLANK        OUBODS                         BO DESC
     C                   MOVE      *BLANK        OUDVCD                         FUNCTION DIV
     C                   MOVEL     NO            TERMFL            1            TERMINAL FLG
      *
     C                   CALL      'HPSEC  '
      **** IN
     C                   PARM                    MGID                           MSGID ARRAY
     C                   PARM                    MGDT                           MSGDTA DATA
     C                   PARM                    ERROR                          # OF ERRORS
     C                   PARM                    INFNCD           10            FUNC CODE
     C                   PARM                    INBOBO            5            BO CODE
     C                   PARM                    INDVFL            1            CHECK DIV?
     C                   PARM                    INBOFL            1            CHECK B.O.?
      **** OUT
     C                   PARM                    OUBOBO            5            BO CODE
     C                   PARM                    OUBODS           30            BO DESC.
     C                   PARM                    OUDVCD            5            DIV CODE
     C                   PARM                    SECFL             1            SEC FLAG
     C                   PARM                    OUBOFL            1            BO ERRFLG
     C                   PARM                    OURMFL            1
      *
     C     OUBOFL        IFEQ      YES
     C                   SETON                                        31
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $PROC1 - SUBROUTINE TO PROCESS THE USER'S REQUEST
      *---------------------------------------------------------------
      *
     C     $PROC1        BEGSR
      *
      *  IF USER TOOK F8=SUBMIT REPORT
      *
     C     *IN08         IFEQ      *ON                                          IF F8
      *
      * MOVE DISPLAY FILE FIELDS INTO LDA
      *
     C                   MOVEL     DFRGCD        LDRGCD
     C***                MOVEL     DFALBO        LDALBO
     C                   MOVEL     DFBOBO        LDBOBO
     C                   MOVEL     DFPPCD        LDPPCD
     C                   Z-ADD     DFFSCD        LDFSCD
     C                   MOVEL     DFHGCD        LDHGCD
     C                   MOVEL     DFCJD         LDCJD
     C                   MOVEL     DFECCD        LDECCD
     C                   MOVEL     DFESCD        LDESCD
     C                   MOVEL     DFEXCD        LDEXCD
      *
     C                   MOVEL     DFRGDS        LDRGDS
     C                   MOVEL     DFBODS        LDBODS
     C                   MOVEL     DFPPDS        LDPPDS
     C                   MOVEL     DFFSNM        LDFSNM
     C                   MOVEL     DFECDS        LDECDS
     C                   MOVEL     DFESDS        LDESDS
     C                   MOVEL     DFEXDS        LDEXDS
      *
     C                   Z-ADD     DFFMDY        LDFMDY
     C                   Z-ADD     DFTMDY        LDTMDY
      *
     C                   OUT       LDA
      *
      *
      * MOVE THE 80-CHARACTER COMPILE TIME ARRAY 'CMD' TO A
      * 80-CHARACTER FIELD FOR SUBMITTING HP466CL TO QCMDEXC.
      *
     C                   MOVEA     XXJOBQ        CMD(51)
     C                   MOVEA     CMD           CMDSBM
      *
     C                   CALL      'QCMDEXC'
     C                   PARM                    CMDSBM
     C                   PARM                    LENGTH
      *
      * ISSUE STANDARD REQUEST SUBMISSION MESSAGE
      *
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09003'     MGID(E)
     C                   ENDIF                                                  IF F8
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $F4S1 - F4 PROMPT ON SCREEN 1
      *---------------------------------------------------------------
      *
     C     $F4S1         BEGSR
      *
     C                   SELECT
      *
      * BUSINESS OFFICE
      *
     C     FLD           WHENEQ    'DFBOBO'
     C                   MOVE      *BLANK        XXBOBO
     C                   MOVE      *BLANK        XXBODS
     C                   CALL      'HP503'
     C                   PARM                    XXBOBO
     C                   PARM                    XXBODS
     C                   PARM                    XXDVCD
     C                   SETON                                        51
     C     XXBOBO        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXBOBO        DFBOBO
     C                   MOVEL     XXBODS        DFBODS
     C                   ENDIF                                                  IF SELECTED
      *
      * REGION
      *
     C     FLD           WHENEQ    'DFRGCD'
     C                   CALL      'HP548'
     C                   PARM                    XXRGCD
     C                   PARM                    XXRGDS
     C                   SETON                                        50
     C     XXRGCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXRGCD        DFRGCD
     C                   ENDIF                                                  IF SELECTED
      *
      * PRODUCTION PHASE
      *
     C     FLD           WHENEQ    'DFPPCD'
     C                   CALL      'HP507'
     C                   PARM      *blank        XXPPCD
     C                   PARM      *blank        XXPPDS
     C                   SETON                                        53
     C     XXPPCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXPPCD        DFPPCD
     C                   MOVEL     XXPPDS        DFPPDS
     C                   ENDIF                                                  IF SELECTED
      *
      *  FARM SITE
      *
     C     FLD           WHENEQ    'DFFSCD'
     C                   CALL      'HP5040'
     C                   PARM      *blank        xxaist
     C                   PARM      0             WKFSCD
     C                   PARM      *blank        XXFSNM
     C                   SETON                                        54
     C     WKFSCD        IFNE      0                                            IF SELECTED
     C                   Z-ADD     WKFSCD        DFFSCD
     C                   MOVEL     XXFSNM        DFFSNM
     C                   ENDIF                                                  IF SELECTED
      *
      *  COST CENTER (AND USER HAS ENTERED A BUSINESS OFFICE)
      *
     C     FLD           WHENEQ    'DFCJD'
     C     DFBOBO        ANDNE     *BLANK
     C     DFBOBO        CHAIN     HSP009                             98
     C     *IN98         IFEQ      *OFF                                         IF HIT BO
     C                   MOVEL     BOCOCD        LDCOCD
     C                   ENDIF                                                  IF HIT BO
     C                   CALL      'HP514'
     C                   PARM                    LDCOCD
     C                   PARM                    XXCJD
     C                   PARM                    XXCCDS
     C                   SETON                                        48
     C     XXCJD         IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXCJD         DFCJD
     C                   MOVEL     XXCCDS        DFCCDS
     C                   ENDIF                                                  IF SELECTED
      *
      *  COST CENTER (AND USER HAS NOT ENTERED A BUSINESS OFFICE)
      *
     C     FLD           WHENEQ    'DFCJD'
     C     DFBOBO        ANDEQ     *BLANK
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00540'     MGID(E)
     C                   ENDIF
      *
      *
      *  HOG GROUP
      *
     C     FLD           WHENEQ    'DFHGCD'
     C                   MOVEL     DFBOBO        XXBOBO
     C                   Z-ADD     DFFSCD        WKFSCD
     C                   MOVE      *BLANK        XXHGCD
     C                   CALL      'HP541'
     C                   PARM                    XXBOBO
     C                   PARM                    WKFSCD
     C                   PARM                    XXHGCD
     C                   SETON                                        55
     C     XXHGCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXHGCD        DFHGCD
     C                   ENDIF                                                  IF SELECTED
      *
      * EXPENSE CLASS
      *
     C     FLD           WHENEQ    'DFECCD'
     C                   CALL      'HP556'
     C                   PARM      *blank        XXECCD
     C                   PARM      *blank        XXECDS
     C                   SETON                                        56
     C     XXECCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXECCD        DFECCD
     C                   ENDIF                                                  IF SELECTED
      *
      * EXPENSE SUBCLASS
      *
     C     FLD           WHENEQ    'DFESCD'
     C                   CALL      'HP557'
     C                   PARM      *blank        XXESCD
     C                   PARM      *blank        XXESDS
     C                   SETON                                        57
     C     XXESCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXESCD        DFESCD
     C                   ENDIF                                                  IF SELECTED
      *
      * EXPENSE CODE
      *
     C     FLD           WHENEQ    'DFEXCD'
     C                   CALL      'HP546'
     C                   PARM      *blank        XXEXCD
     C                   PARM      *blank        XXEXDS
     C                   SETON                                        58
     C     XXEXCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXEXCD        DFEXCD
     C                   ENDIF                                                  IF SELECTED
     C                   OTHER
      *
      * F4 NOT VALID FOR THIS FIELD SO ISSUE MESSAGE
      *
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09011'     MGID(E)
     C                   ENDIF
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $DATE -  MANIPULATE DATES WITH DATE UTILITY
      *---------------------------------------------------------------
      *
     C     $DATE         BEGSR
      *
     C                   CALL      'UT80060R'
     C                   PARM                    PFRM8             8 0
     C                   PARM                    PTO8              8 0
     C                   PARM                    PFRFMT            4
     C                   PARM                    PTOFMT            4
     C                   PARM                    PDAYS             4 0
     C                   PARM                    PCODE             1
     C                   PARM                    PRTRN             1
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $WRMSG - SUBROUTINE TO WRITE ERROR MESSAGES
      *---------------------------------------------------------------
      *
     C     $WRMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM                    MGID
     C                   PARM                    MGDT
     C                   PARM                    ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $CLMSG - SUBROUTINE TO CLEAR MESSAGES
      *----------------------------------------------------------------
      *
     C     $CLMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM      *BLANK        MGI
     C                   PARM      *BLANK        MGD
     C                   PARM      *ZEROS        ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $EXIT - SUBROUTINE TO SET ON LR AND END JOB
      *----------------------------------------------------------------
      *
     C     $EXIT         BEGSR
     C                   SETON                                        LR
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * *INZSR - INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      * PARM LISTS
      *     NONE
      *
      * DEFINE LDA
     C     *DTAARA       DEFINE    *LDA          LDA
     C                   IN        LDA
      *
      * Initialize LDA fields for printing
      *
     C                   MOVE      *BLANK        LDHOLD
     C                   Z-ADD     0             LDCOPY
     C                   MOVEL     LDOUTU        LDOUTQ
     C                   MOVEL     '*JOBD'       XXJOBQ           10
     C                   MOVEL     NO            XXNITE            1
     C                   Z-ADD     0             XXCOPY            1 0
      *
      * SET UP WORK FIELDS FOR STANDARD SECURITY CHECKS THAT INVOLVE
      * A BUSINESS OFFICE
      *
     C                   Z-ADD     0             LDFROM
     C                   Z-ADD     0             LDTO
      *
      * GET THIS FUNCTION'S NUMBER OF COPIES, HOLD YES/NO
      *
     C     SDPGM         CHAIN     HSP002                             92
     C     *IN92         IFEQ      *OFF
     C                   Z-ADD     FNCOPY        LDCOPY
     C                   MOVEL     FNHOLD        LDHOLD
     C                   ENDIF
      *
     C     LDCOPY        IFEQ      0
     C                   Z-ADD     1             LDCOPY
     C                   ENDIF
      *
     C     LDHOLD        IFEQ      *BLANK
     C                   MOVEL     NO            LDHOLD
     C                   ENDIF
      *
      * GLOBAL DEFINES
      *
     C                   MOVE      *BLANK        PGM              10            USED IN MSG
     C                   MOVE      *BLANK        MSGFL            10            USED IN MSG
     C                   MOVE      *BLANK        ROUTNE            6
     C                   MOVEL     '00'          RTNCD             2            RETURN CODE
      *
      * NUMERIC PARM FIELDS
      *
     C     *LIKE         DEFINE    DFFSCD        WKFSCD
      *
      * ALPHA PARM FIELDS
      *
     C                   MOVE      *BLANK        XXAIST            1
     C                   MOVE      *BLANK        XXFSCD            5
     C     *LIKE         DEFINE    DFBOBO        XXBOBO
     C     *LIKE         DEFINE    DFBODS        XXBODS
     C     *LIKE         DEFINE    DFFSNM        XXFSNM
     C     *LIKE         DEFINE    DFPPCD        XXPPCD
     C     *LIKE         DEFINE    DFPPDS        XXPPDS
     C     *LIKE         DEFINE    DFECCD        XXECCD
     C     *LIKE         DEFINE    DFECDS        XXECDS
     C     *LIKE         DEFINE    DFESCD        XXESCD
     C     *LIKE         DEFINE    DFESDS        XXESDS
     C     *LIKE         DEFINE    DFEXCD        XXEXCD
     C     *LIKE         DEFINE    DFEXDS        XXEXDS
     C     *LIKE         DEFINE    DFRGCD        XXRGCD
     C     *LIKE         DEFINE    DFRGDS        XXRGDS
     C     *LIKE         DEFINE    HGHGCD        XXHGCD
     C     *LIKE         DEFINE    OUDVCD        XXDVCD
     C     *LIKE         DEFINE    DFCJD         XXCJD
     C                   MOVE      *BLANK        XXCCDS           30
     C                   MOVE      *BLANK        JDEFL             1
      *
      *  PARMS FOR USE WITH QCMDEXC.  'LENGTH' IS THE LENGTH OF THE
      *  COMMAND THAT WILL BE ISSUED WITH QCMDEXC.  QCMDEXC REQUIRES
      *  THE FIELD CONTAINING LENGTH TO BE DEFINED AS 15 WITH 5 DECIMAL
      *  POSITIONS.  THE FIELD 'CMDSBM' WILL HOLD THE VALUES OF THE
      *  THE SUBMIT JOB COMMAND WHEN PASSED AS A PARM ON THE CALL TO
      *  QCMDEXC.
      *
     C                   Z-ADD     80            LENGTH           15 5          QCMDEXC PARM
     C                   MOVE      *BLANK        CMDSBM           80            QCMDEXC PARM
      *
      * THE FOLLOWING STANDARD CODE MUST BE INCLUDED TO MAKE THE
      * STANDARD ERROR MESSAGE HANDLING PROGRAM FUNCTION PROPERLY.
      * THIS CODE SETS AND CLEARS THE PROGRAM MESSAGE QUEUE.
      *
     C                   Z-ADD     20            MAXMSG            2 0
     C                   MOVEL     '*'           MSGPGM                         SET QUEUE
     C                   EXSR      $CLMSG                                       CLEAR MSG
      *
      *
      * EXECUTE THE SECURITY SUBROUTINE TO DETERMINE USER
      * AUTHORIZATIONS.
      *
     C                   MOVEL(P)  SDPGM         WKFNCD           10
      *
     C                   MOVEL     NO            INBOFL
     C                   EXSR      $SEC
     C                   MOVEL     YES           INBOFL            1
     C                   MOVEL     OUDVCD        XXDVCD                       E5190
      *
      * DO NOT MOVE THE DEFAULTED B.O. THAT IS RETURNED FROM THE
      * SECURITY PROGRAM TO THE SCREEN
      *
      ******************   MOVELOUBOBO    DFALBO
      ******************   MOVELOUBODS    DFBODS
      *
      * IF ERRORS ON INITIAL CALL, SET TERMINAL FLAG TO YES.
      *
     C     SECFL         IFEQ      YES
     C                   MOVEL     YES           TERMFL
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *****************************************************************
      * COMPILE TIME ARRAY NAMED 'CMD' USED IN QCMDEXC
      *****************************************************************
** CMD TABLE
SBMJOB CMD(CALL PGM(HP466CL)) JOB(EXPTKTRPT) JOBQ(__________)
