      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     HP4018
      * TITLE:       Work With Farm Health Status
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     02/13/03
      *
      *
      * FUNCTION: This Work With displays the records in the Farm Health Status file.
      *
      *           Restricter:
      *                Show last status only flag
      *
      *           Positioners:
      *                Farm site
      *
      *           Selectors:
      *                Health code
      *                Health status flag
      *                Effective date
      *                Cell
      *
      * NOTE: This program has been set up in the functions file as requiring no security.
      *       Therefore, it must be secured to the relevant users through the menu system.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 10/15/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhpd4018   cf   e             workstn
     F                                     sfile(hp4018s1:hdrrn1)
     F                                     infds(iofeed)
      *
      *
     Fhsp002    if   e           k disk
      *    Functions
      *
      *
     Fhsp018    if   e           k disk
      *    Farm site
      *
      *
     Fhsl112b   if   e           k disk
     F                                     infds(dbfeed)
      *    Farm health status
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D create          c                   'CREATE'
     D revise          c                   'REVISE'
     D delete          c                   'DELETE'
     D view            c                   'VIEW  '
     D select          c                   'SELECT'
     D yes             c                   'Y'
     D no              c                   'N'
     D set1            c                   'SET1  '
     D edit1           c                   'EDIT1 '
     D scrn1           c                   'SCRN1 '
     D exit            c                   'EXIT  '
     D update          c                   'UPDATE'
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  Compile time array for SBMJOB used in QCMDEXC - F7-list
      *---------------------------------------------------------------
     D cmd             s              1    dim(80) ctdata perrcd(80)
      *
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
     D mode            s              6
     D pgm             s             10
     D msgfl           s             10
     D maxmsg          s              2  0  inz(20)
     D routne          s              6
     D maxrrn          s              4  0
     D reset           s              1    inz('N')
     D norecs          s              1    inz('N')
     D count           s              2  0
     D wkflow          s                   like(idflow)
     D rtncd           s              2    inz('00')
     D svrrn1          s                   like(hdrrn1)
      *
      *
      *  Parms for use with QCMDEXC.  'LENGTH' is the length of the
      *  command that will be issued with QCMDEXC.  QCMDEXC requires
      *  the field containing length to be defined as 15 with 5 decimal
      *  positions.  The field 'CMDSBM' will hold the values of the
      *  submit job command when passed as a parm on the call to
      *  QCMDEXC.
      *
     D length          s             15  5 inz(80)
     D cmdsbm          s             80
      *
      *
      * Workfields required for subfile paging--see initialization
      * subroutine.
      *
     D wkplin          s              2  0
     D wkrlin          s              2  0
      *
      *
      * Save/work fields for restrictors/positioners/selectors
      *
     D svynfl          s                   like(c1ynfl)
     D svfscd          s                   like(c1fscd)
     D svhccd          s                   like(c1hccd)
     D svhsfl          s                   like(c1hsfl)
     D svcell          s                   like(c1cell)
     D svmdyefdt       s                   like(c1mdyefdt)
      *
      * Save fields for loading subfile when user has selected to see only the
      * last status records.
      *
     D svfscd2         s                   like(hffscd)
     D svhccd2         s                   like(hfhccd)
      *
      * Parms
      *
     D xxaist          s              1
     D xxfscd          s                   like(c1fscd)
     D xxcell          s                   like(c1cell)
     D xxfsnm          s             25
     D xxynfl          s                   like(c1ynfl)
     D xxhccd          s                   like(c1hccd)
     D xxhcds          s             50
     D xxhsfl          s                   like(hfhsfl)
     D xxdesc          s             20
     D xxmdyefdt       s              6  0
     D xxefdt          s              8  0
      *
     D xxfmdy          s              6  0
     D xxfcymd         s              8  0
     D xxtmdy          s              6  0
     D xxtcymd         s              8  0
      *
     D xxjobq          s             10     inz('*JOBD     ')
     D xxnite          s              1     inz('N')
     D xxcopy          s              1  0
      *
      *
      * Workfields for date manipulation
      *
     D wkisodate       s               D   datfmt(*iso)
     D wkefdt          s                   like(hfefdt)
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * standard error message handling data structures
      *---------------------------------------------------------------
      *
      * For error message handling, a packed index (3) is required.
      * For program readability, define a corresponding error count
      * field called 'error'
      *
     D                 ds                  inz
     D  error                         2p 0
     D   e                            2p 0 overlay(error)
      *
      * This data structure supplies the name of the message file to
      * the message handling CL program.  The field name MSGFIL must be
      * constant. The value in quotes is the name of the specific
      * message file containing the user defined messages.
      *
     D                 ds                  inz
     D  msgfil                       10    inz('HSMSGF    ')
      *
      *---------------------------------------------------------------
      *  Standard message data structures
      *---------------------------------------------------------------
      *
      * The following 3 data structures are used to speed message
      * handling since it is faster to clear data structures than
      * arrays.  Each is associated with a standard message array.
      *
     D mgi             ds                  inz
     D  mgid                          7    dim(20)
      *
     D mgd             ds                  inz
     D  mgdt                         50    dim(20)
      *
     D mgwk            ds                  inz
     D  mgw                           1    dim(50)
      *
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Standard workstation information data structure
      *---------------------------------------------------------------
      *    externally defined as UTWSFR (record format: UTIDFRR)
     D iofeed        e ds                  extname(utwsfr)
      *
      *
      *---------------------------------------------------------------
      * Standard database file information data structure
      *---------------------------------------------------------------
      *    externally defined as UTDBGR (record format: FDBCKD)
     D dbfeed        e ds                  extname(utdbfr)
      *
      *
      *---------------------------------------------------------------
      * Standard subfile option conversion
      *---------------------------------------------------------------
     D                 ds                  inz
     D d1opt                          2
     D   wkopt1                       1    overlay(d1opt)
     D   wkopt2                       1    overlay(d1opt:2)
      *
      *
      *---------------------------------------------------------------
      * Data areas
      *---------------------------------------------------------------
      *
      * Local data area.
      *
     Dlda             uds                  dtaara(*lda)
     D  ldynfl                 1      1
     D  ldfscd                 2      6  0
     D  ldhccd                 7     11
     D  ldhsfl                12     12
     D  ldcell                13     14  0
     D  ldfmdy                15     20  0
     D  ldfcymd               21     28  0
     D  ldtmdy                29     34  0
     D  ldtcymd               35     42  0
      *
     D  ldoutu               401    410
     D  ldhold               411    411
     D  ldcopy               412    412  0
     D  ldoutq               413    422
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
     C                   eval      routne = set1
      *
     C     *inlr         doweq     *off                                         Main do loop
     C     routne        caseq     set1          $set1
     C     routne        caseq     scrn1         $scrn1
     C     routne        caseq     edit1         $edit1
     C     routne        caseq     exit          $exit
     C                   endcs
     C                   enddo                                                  Main do loop
      /EJECT
      *----------------------------------------------------------------
      * Set environment for screen 1
      *----------------------------------------------------------------
      *
     C     $set1         begsr
      *
      * Clear and fill the subfile
      *
     C                   exsr      $clr1
     C                   exsr      $frsh1
      *
      * Set routine to display screen
      *
     C                   eval      routne = scrn1
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Perform operator I/O for screen 1
      *----------------------------------------------------------------
      *
     C     $scrn1        begsr
      *
      * Write the error messages from the error arrays to the
      * error message subfile
      *
     C                   exsr      $wrmsg
      *
      * Write screen 1 to crt
      *
     C                   write     hp4018k1
     C                   write     hp4018ec
     C                   exfmt     hp4018c1
      *
      * Save the value of the lowest subfile rrn on the screen for
      * later repositioning of the subfile
      *
     C                   eval      wkflow = idflow
      *
      * Clear the messages from the message data structures and
      * program message queue
      *
     C                   exsr      $clmsg
      *
      * Get user's entry and set next routine
      *
     C                   select
     C                   when      *in03 = *on                                  F3-EXIT
     C                   eval      routne = exit
      *
     C                   when      *in04 = *on                                  F4-prompt
     C                   exsr      $f4s1
      *
     C                   if        fld = 'C1YNFL' and
     C                             c1ynfl <> svynfl
     C                   exsr      $ynfl
     C                   endif
      *
     C                   if        error = 0
     C                   exsr      $chksv
     C                   else
     C                   eval      routne = scrn1
     C                   endif
      *
     C                   when      *in05 = *on and                              F5-refresh
     C                             (c1ynfl = yes or c1ynfl = no)
     C                   eval      reset = yes
     C                   eval      routne = set1
      *
     C                   when      *in06 = *on                                  F6-create
     C                   exsr      $creat
     C                   eval      hdpag1 = wkflow
     C                   eval      routne = scrn1
      *
     C                   when      *in07 = *on                                  F7-listing
     C                   exsr      $listopts
     C                   z-add     wkflow        hdpag1
     C                   eval      routne = scrn1
      *
     C                   when      *in17 = *on                                  F17-print options
     C                   eval      routne = scrn1
     C                   call      'HP451'
     C                   parm                    sdpgm
     C     ldcopy        parm      ldcopy        xxcopy
     C                   parm                    ldhold
     C                   parm                    ldoutq
     C                   parm                    xxnite
     C                   parm                    xxjobq
      *
     C                   when      *in20 = *on                                  F20-wrksplf
     C                   call      'QEZOUTPT'                                     API
     C                   eval      hdpag1 = wkflow
     C                   eval      routne = scrn1
      *
      * Reposition the subfile if the user has changed any of the
      * restrictors or positioners or selectors in the control record.
      *
     C                   when      c1ynfl <> svynfl or                          Positioners,etc
     C                             c1fscd <> svfscd or
     C                             c1cell <> svcell or
     C                             c1hccd <> svhccd or
     C                             c1hsfl <> svhsfl or
     C                             svmdyefdt <> c1mdyefdt
      *
     C                   if        c1ynfl <> svynfl                                              nge
     C                   exsr      $ynfl
     C                   endif                                                                   nge
      *
     C                   if        error = 0
     C                   exsr      $chksv
     C                   else
     C                   eval      routne = scrn1
     C                   endif
      *
     C                   when      *in25 = *on                                  F25-rollup
     C                   exsr      $load1
     C                   other
      *
      * User has pressed enter
      *
     C                   if        norecs = yes                                 If empty sfl
     C                   eval      routne = set1
     C                   else
     C                   eval      routne = edit1
     C                   endif                                                  If empty sfl
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Save the control record positioners/selectors
      *----------------------------------------------------------------
      *
     C     $chksv        begsr
      *
     C                   eval      reset = no
     C                   eval      routne = set1
      *
     C                   eval      svynfl = c1ynfl
     C                   eval      svfscd = c1fscd
     C                   eval      svhccd = c1hccd
     C                   eval      svhsfl = c1hsfl
     C                   eval      svcell = c1cell
      *
      *
      * Flip date selector from mmddyy to ccyymmdd format
      *
     C     *mdy          test(d)                 c1mdyefdt              92
     C                   if        *in92 = *on                                  If bad date
     C                   z-add     0             wkefdt               31
     C                   else
     C     *mdy          move      c1mdyefdt     wkisodate
     C                   move      wkisodate     wkefdt
     C                   endif                                                  If bad date
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Validate 'show only last status flag'
      *---------------------------------------------------------------
      *
     C     $ynfl         begsr
      *
     C                   if        c1ynfl <> yes and
     C                             c1ynfl <> no
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09106'
     C                   endif
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Edit input fields for screen 1
      *----------------------------------------------------------------
      *
     C     $edit1        begsr
      *
      * First, edit all the selections entered by the user in the
      * subfile option field to see that valid selections were input
      *
     C                   exsr      $edop1
      *
      * If there are no errors in the subfile option selectors entered
      * by the user, then execute the subroutine to reread and process
      * the records selected by the user.  After completing the
      * subroutine, set the routine to start over.
      *
     C                   if        error = 0                                    If no error
     C                   exsr      $proc1
      *
     C                   if        rtncd = '00'
     C                   eval      routne = set1
     C                   else
     C                   eval      hdpag1 = wkflow
     C                   eval      routne = scrn1
     C                   endif
      *
      * else there were errors in the subfile options entered,
      * so set to redisplay screen with errors to user
      *
     C                   else
     C                   eval      routne = scrn1
     C                   endif                                                  If no error
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      *  Logic for F7-Listing
      *---------------------------------------------------------------
      *
     C     $listopts     begsr
      *
      * Call the pop-up window to allow user to enter listing options.
      *
     C                   call      'HP4418'
     C                   parm      *blank        xxynfl
     C                   parm      0             xxfmdy
     C                   parm      0             xxfcymd
     C                   parm      0             xxtmdy
     C                   parm      0             xxtcymd
     C                   parm      *blank        xxhccd
     C                   parm      *blank        xxhsfl
     C                   parm      0             xxcell
     C                   parm      0             xxfscd
     C                   parm      *blank        rtncd
      *
      * If the user took the function key in the pop-up window to submit
      * the listing.
      *
     C                   if        rtncd = '08'
     C                   exsr      $list
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Print listing of farm health status
      *---------------------------------------------------------------
      *
     C     $list         begsr
      *
      * Move submission values into LDA
      *
     C                   move      xxynfl        ldynfl
     C                   z-add     xxcell        ldcell
     C                   z-add     xxfscd        ldfscd
     C                   move      xxhccd        ldhccd
     C                   move      xxhsfl        ldhsfl
     C                   z-add     xxfmdy        ldfmdy
     C                   z-add     xxfcymd       ldfcymd
     C                   z-add     xxtmdy        ldtmdy
     C                   z-add     xxtcymd       ldtcymd
      *
     C                   out       lda
      *
      * Move the 80-character compile time array 'CMD' to an
      * 80-character field for passing as a parm with QCMDEXC.
      *
     C                   movea     xxjobq        cmd(51)
     C                   movea     cmd           cmdsbm
     C                   call      'QCMDEXC'
     C                   parm                    cmdsbm
     C                   parm                    length
      *
      * Issue the standard request submission message
      *
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09003'
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Clear subfile for screen 1
      *---------------------------------------------------------------
      *
     C     $clr1         begsr
      *
     C                   eval      svrrn1 = 0
      *
     C                   clear                   hp4018s1
     C                   seton                                        83        sflclr
     C                   write     hp4018c1
     C                   setoff                                       818283
      *                                                    81=sfldsp
      *                                                    82=sflend
      *                                                    83=sflclr
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Refresh/fill the subfile for screen 1
      *---------------------------------------------------------------
      *
     C     $frsh1        begsr
      *
      * Set position in file
      *
     C                   z-add     0             svfscd2
     C                   move      *blank        svhccd2
      *
     C     c1fscd        setll     hsl112b
      *
      * The field 'reset' is a flag field to indicate whether you are
      * attempting to reposition the user close to where he was in the
      * subfile.
      * The lowest subfile RRN on the screen from the DSPF feedback
      * area (IDFLOW) was retrieved earlier and put in WKFLOW.
      * Add to WKFLOW the number of lines on your subfile page or the
      * number less 1 to determine a subfile RRN to reposition to.
      *
     C                   if        reset = yes
     C                   eval      maxrrn = wkflow + wkrlin
     C                   else
      *
      * Don't try to reposition the user, just start the subfile over
      *
     C                   eval      maxrrn = wkplin
     C                   endif
      *
      * Load the subfile until you have the required number of records.
      * The number will depend on whether uou are repositioning the
      * subfile or not. Stop if you get to the end of the subfile.
      *
     C                   dou       svrrn1 >= maxrrn or *in82 = *on
     C                   exsr      $load1
     C                   enddo
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Load subfile for screen 1
      *---------------------------------------------------------------
      *
     C     $load1        begsr
      *
     C                   eval      hdrrn1 = svrrn1
      *
      * Set the count of records on the subfile page to zero.
      *
     C                   eval      count = 0
      *
      * Fill the subfile until the end of the database file or
      * you have filled all the lines on the subfile page.
      *
     C                   setoff                                       82
     C                   dou       *in82 = *on or count >= wkplin               Do fill
      *
     C                   read      hsl112b                                82
     C                   if        *in82 = *off                                 If read
      *
      * If the user wants to see only the last status for each farm/health code
      *
     C                   if        c1ynfl = no or                               If process
     C                             (c1ynfl = yes and
     C                             (svfscd2 <> hffscd or
     C                              svhccd2 <> hfhccd))
      *
     C                   z-add     hffscd        svfscd2
     C                   move      hfhccd        svhccd2
      *
      *
      * Retrieve cell associated with farm site.
      *
     C     hffscd        chain     hsp018                             92
     C                   if        *in92 = *off                                 If found
     C                   z-add     fscell        d1cell
     C                   else
     C                   z-add     0             d1cell
     C                   endif                                                  If found
      *
      *
      * Only include records that match the user's selectors
      *
      *
     C                   if        c1hccd <> *blank and                         If code
     C                             c1hccd <> hfhccd
     C                   else
      *
     C                   if        c1hsfl <> *blank and                         If status
     C                             c1hsfl <> hfhsfl
     C                   else
      *
     C                   if        c1cell <> 0 and                              If cell
     C                             c1cell <> fscell
     C                   else
      *
     C                   if        wkefdt <> 0 and                              If date
     C                             wkefdt <> hfefdt
     C                   else
      *
     C                   add       1             count
     C                   add       1             hdrrn1
     C                   eval      d1opt = *blank
     C                   z-add     hffscd        d1fscd
     C                   move      hfhccd        d1hccd
     C                   move      hfhsfl        d1hsfl
     C                   z-add     hfefdt        hdefdt
      *
     C     *iso          test(d)                 hfefdt                 92
     C                   if        *in92 = *off                                 If OK date
     C                   move      hfefdt        wkisodate
     C     *mdy          move      wkisodate     d1mdyefdt
     C                   endif                                                  If OK date
      *
     C                   write     hp4018s1
     C                   seton                                        81
      *
      * For positioning, place the subfile relative record number into
      * the sflrcdnbr field (hdpag1)
      *
     C                   eval      hdpag1 = hdrrn1
      *
     C                   endif                                                  If date
     C                   endif                                                  If cell
     C                   endif                                                  If status
     C                   endif                                                  If code
     C                   endif                                                  If process
     C                   endif                                                  If read
     C                   enddo                                                  Do fill
      *
      * If no records were written to the subfile, then issue
      * the standard message 'No data to Display'.
      *
     C                   if        hdrrn1 = 0                                   If no recs
     C                   eval      norecs = yes
      *
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09002'
     C                   endif
      *
     C                   else
     C                   eval      norecs = no
     C                   endif                                                  If no recs
      *
     C                   eval      svrrn1 = hdrrn1
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Call the maintenance program when the user takes F6
      *---------------------------------------------------------------
      *
     C     $creat        begsr
      *
     C                   call      'HP1018'
     C                   parm      create        mode
     C                   parm      0             xxfscd
     C                   parm      *blank        xxhccd
     C                   parm      0             xxmdyefdt
     C                   parm      0             xxefdt
     C                   parm      '00'          rtncd
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------------
      * Read and edit changed subfile records for valid subfile options on screen 1
      *--------------------------------------------------------------------------------
      *
     C     $edop1        begsr
      *
     C                   eval      error = 0
      *
      * Read all changed subfile records, editing for valid options
      *
     C                   setoff                                       80
     C                   dou       *in80 = *on                                  Do readc
     C                   readc     hp4018s1                               80
     C                   if        *in80 = *off                                 If rec read
      *
      * Set off error indicator for subfile option field
      *
     C                   setoff                                       30
      *
      * Convert option user entered to standard format. For example,
      * a ' 1', '01', and '1 ' must be standardized to ' 1'.
      *
     C                   if        wkopt2 = *blank                              If 2 = blank
     C                   eval      wkopt2 = wkopt1
     C                   eval      wkopt1 = *blank
     C                   endif                                                  If 2 = blank
      *
     C                   if        wkopt1 = *zero                               If 1 is zero
     C                   eval      wkopt1 = *blank
     C                   endif                                                  If 1 is zero
      *
      * Test for valid subfile option entry on all changed records
      *
     C                   if        d1opt <> ' 2' and                            If bad opt
     C                             d1opt <> ' 4' and
     C                             d1opt <> '  '
     C                   seton                                        3085
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09006'
     C                   exsr      $err1
     C                   endif
     C                   else
      *
     C                   if        error = 0 and d1opt = *blank
     C                   setoff                                       85
     C                   else
     C                   seton                                        85
     C                   endif
     C                   endif                                                  If bad opt
      *
     C                   update    hp4018s1
     C                   setoff                                       8530
      *
     C                   endif                                                  If rec read
     C                   enddo                                                  Do readc
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Read subfile records and process user selections for screen 1
      *---------------------------------------------------------------
      *
     C     $proc1        begsr
      *
     C                   eval      error = 0
     C                   eval      rtncd = '00'
      *
      * Read all the changed subfile records processing the subfile
      * selection
      *
     C                   setoff                                       80
     C                   dou       *in80 = *on                                  Do process
     C                   readc     hp4018s1                               80
     C                   if        *in80 = *off                                 If rec read
      *
     C                   if        rtncd = '00'                                 If enter
      *
      * If user selected option 2=revise,
      * set the flag 'reset' to YES so that when you return to this
      * Work With you will reposition to the same place in the subfile
      *
     C                   select
     C                   when      d1opt = ' 2'
     C                   eval      reset = yes
     C                   call      'HP1018'
     C                   parm      revise        mode
     C                   parm      d1fscd        xxfscd
     C                   parm      d1hccd        xxhccd
     C                   parm      d1mdyefdt     xxmdyefdt
     C                   parm      hdefdt        xxefdt
     C                   parm                    rtncd
      *
      *
      * If user selected Option 4=delete,
      * set the flag 'reset' to YES so that when you return to this
      * Work With you will reposition to the same place in the subfile
      *
     C                   when      d1opt = ' 4'
     C                   eval      reset = yes
     C                   call      'HP1018'
     C                   parm      delete        mode
     C                   parm      d1fscd        xxfscd
     C                   parm      d1hccd        xxhccd
     C                   parm      d1mdyefdt     xxmdyefdt
     C                   parm      hdefdt        xxefdt
     C                   parm                    rtncd
     C                   endsl
      *
      * Upon returning from the called program,
      * clear the subfile option selected by the user and rewrite
      * the subfile record.
      *
     C                   eval      d1opt = *blank
     C                   setoff                                       85
     C                   else
     C                   seton                                        85
     C                   endif                                                  If enter
      *
     C                   update    hp4018s1
     C                   endif                                                  If rec read
      *
     C                   enddo                                                  Do process
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * F4 prompt on screen 1
      *---------------------------------------------------------------
      *
     C     $f4s1         begsr
      *
     C                   select
      *
      * Show last status only yes/no flag
      *
     C                   when      fld = 'C1YNFL'
     C                   call      'HP522'
     C                   parm                    xxynfl
     C                   seton                                        51
     C                   if        xxynfl <> *blank
     C                   movel     xxynfl        c1ynfl
     C                   endif
      *
      * Farm site
      *
     C                   when      fld = 'C1FSCD'
     C                   call      'HP5040'
     C                   parm      *blank        xxaist
     C                   parm      0             xxfscd
     C                   parm      *blank        xxfsnm
     C                   seton                                        52
     C                   if        xxfscd <> 0
     C                   z-add     xxfscd        c1fscd
     C                   endif
      *
      * Health code
     C                   when      fld = 'C1HCCD'
     C                   call      'HP553'
     C                   parm      *blank        xxaist
     C                   parm      *blank        xxhccd
     C                   parm      *blank        xxhcds
     C                   seton                                        54
     C                   if        xxhccd <> *blank
     C                   move      xxhccd        c1hccd
     C                   endif
      *
      * Health status
     C                   when      fld = 'C1HSFL'
     C                   call      'HP595'
     C                   parm      *blank        xxhsfl
     C                   parm      *blank        xxdesc
     C                   seton                                        53
     C                   if        xxhsfl <> *blank
     C                   move      xxhsfl        c1hsfl
     C                   endif
     C                   other
      *
      * F4 not valid for this field...issue message
      *
     C                   if        error < maxmsg
     C                   add       1             error                                        013
     C                   movel     'HS09011'     mgid(e)
     C                   endif
      *
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------------------
      * Set the subfile to redisplay at the first page that has errors on Screen 1
      *----------------------------------------------------------------------------
      *
     C     $err1         begsr
      *
     C                   if        error = 1
     C                   eval      hdpag1 = hdrrn1
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Seton last record and end job
      *---------------------------------------------------------------
      *
     C     $exit         begsr
     C                   seton                                        LR
     C                   endsr
      *
      *---------------------------------------------------------------
      * Write error messages
      *---------------------------------------------------------------
      *
     C     $wrmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm                    mgid
     C                   parm                    mgdt
     C                   parm                    error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on. So, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      *
      *----------------------------------------------------------------
      * Clear messages
      *----------------------------------------------------------------
      *
     C     $clmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm      *blank        mgi
     C                   parm      *blank        mgd
     C                   parm      *zero         error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on; so, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Initialization subroutine
      *----------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm lists
      *   none
      *
      * Key lists
      *   none
      *
      *
      * Default to 'yes' the value for control field 'last status only'
      *
     C                   move      yes           c1ynfl
     C                   move      yes           svynfl
      *
      * Initialize LDA fields
      *
     C                   move      *blank        ldynfl
     C                   z-add     0             ldfscd
     C                   move      *blank        ldhccd
     C                   move      *blank        ldhsfl
     C                   z-add     0             ldcell
     C                   z-add     0             ldfmdy
     C                   z-add     0             ldfcymd
     C                   z-add     0             ldtmdy
     C                   z-add     0             ldtcymd
      *
     C                   move      *blank        ldhold
     C                   z-add     0             ldcopy
     C                   movel     ldoutu        ldoutq
      *
      * Get this functions' number of copies, etc.
      *
     C     sdpgm         chain     hsp002                             92
     C                   if        *in92 = *off
     C                   z-add     fncopy        ldcopy
     C                   movel     fnhold        ldhold
     C                   endif
      *
     C                   if        ldcopy = 0
     C                   z-add     1             ldcopy
     C                   endif
      *
     C                   if        ldhold = *blank
     C                   movel     no            ldhold
     C                   endif
      *
      * To support F5-Refresh, logic requires the number of lines on
      * the subfile page and also the number of lines less 1.  By
      * setting these values up as constant work fields, the processing
      * logic can be standardized between programs.
      *
     C                   eval      wkplin = 9
     C                   eval      wkrlin = wkplin - 1
      *
      * The following standard code must be included to make the
      * standard error message handling program function properly.
      * This code sets and clears the program message queue.
      *
     C                   movel     '*'           msgpgm
     C                   exsr      $clmsg
      *
     C                   endsr
      /EJECT
      *****************************************************************
      * COMPILE TIME ARRAY 'CMD' USED IN QCMDEXC
      *****************************************************************
** CMD table 'CMD' submits listing when F7 selected
SBMJOB CMD(CALL PGM(HP4018CL)) JOB(LISTHEAL) JOBQ(__________)
