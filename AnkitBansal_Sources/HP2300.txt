      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      HPS Data Mart
      * PROGRAM:     HP2300 - Datamart BUD: Build Budget Workfiles
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     08/12/04
      *
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 10/13/04  LeAnne Fedor
      *           If we have a value in the new field 'Total Cost' we will use it
      *           instead of calculating a Total Cost. If we do not have a value,
      *           we will continue to calculate using the Cost Per Unit value which
      *           is now a 9,4 field instead of a 9,2 field.
      *
      *           Also, all logic that was based on the Request Date (from the Request
      *           Header file), is now based on the new Issue Date (from the Request
      *           Detail file).
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
      *
     Fhsp185    if   e           k disk
      *  Budget template header
      *
      *
     Fhsl188p   if   e           k disk
      *  Farm budget header
      *
      *
     Fhsl188q   if   e           k disk    rename(jhrec:jhreq)
      *  Farm budget header
      *
      *
     Fhsp189    if   e           k disk
      *  Farm budget detail
      *
      *
     Fhsp192    if   e           k disk
      *  Request header
      *
      *
     Fhsj193l   if   e           k disk
      *  Request detail + item
      *
      *
     Fhsp8189   uf a e           k disk
      *  Datamart BUD: Quantities
      *
      *
     Fhsp8300   uf a e           k disk
      *  Datamart BUD: Workfile--Farm budget header
      *
      *
     Fhsp8301   uf a e           k disk
      *  Datamart BUD: Workfile--Farm budget weeks
      *
      *
     Fhsp8302   uf a e           k disk
      *  Datamart BUD: Workfile--Quantities
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Control fields
      *
     D first           s              1    inz('Y')
     D countwk         s                   like(w1btwk)
      *
      *
      * Workfields
      *
     D wkfbam          s                   like(w3fbam)
     D wkusam          s                   like(w3fbam)
     D wkbgit          s                   like(w3bgit)
     D wkbgqt          s                   like(w3bgqt)
     D wkrqqt          s                   like(qdrqqt)
     D wkapqt          s                   like(qdapqt)
     D wkusqt          s                   like(qdusqt)
      *
     D wkmartqt        s                   like(d2bgqt)
     D wkmartam        s                   like(d2fbam)
     D wkleftqt        s                   like(d2bgqt)
     D wkleftam        s                   like(d2fbam)
      *
      * Workfields for dates
      *
     D wkbegdt         s              8  0
     D wkwedt          s              8  0
     D wkwbdt          s              8  0
     D wkthrudt        s              8  0
     D wkfirstdt       s              8  0
     D wkisodate       s               D   datfmt(*iso)
     D wkisofrom       s               D   datfmt(*iso)
     D wkisoto         s               D   datfmt(*iso)
     D wkcymdiso       s               D   datfmt(*iso)
      *
     D wkdays          s              3  0
     D wkwks           s              3  0
      *
      *
      * Parms
      *
     D xxrunfl         s              1
     D xxccyymmdd      s              8  0
     D xxsatdt         s              8  0
     D xxwedt          s              8  0
     D xxcdyr          s              4  0
     D xxcdwk          s              2  0
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *---------------------------------------------------------------
      * Definition for external data area DABUD
      *---------------------------------------------------------------
     D
     Ddabud            ds                  dtaara(dabud)
     D  dahwkbegdt            12     19  0
     D  dahwkenddt            21     28  0
     D  dacwkbegdt            36     43  0
     D  dacwkenddt            45     52  0
     D  dathrudt              77     84  0
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
      * Build all the Budget Data in the Workfiles
      *
     C                   exsr      $budgets
      *
      * Add the Order Data to the Workfiles
      *
     C                   exsr      $orders
      *
     C                   seton                                        lr
      /eject
      *---------------------------------------------------------------
      * Find the Saturday week-ending date for a given date
      *---------------------------------------------------------------
      *
     C     $saturday     begsr
      *
     C                   call      'HP8007'
     C                   parm                    xxccyymmdd
     C     xxwedt        parm      0             xxsatdt
     C                   parm      0             xxcdyr
     C                   parm      0             xxcdwk
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Build all the Budget Data in the Workfiles
      *---------------------------------------------------------------
      *
     C     $budgets      begsr
      *
      * Build workfile: Farm Budget Header
      *      Step 1: Farm Budgets with TO Dates
      *      Step 2: Farm Budgets with no TO Dates
      *
     C                   exsr      $step1
     C                   exsr      $step2
      *
      * Build workfile: Farm Budget Weeks
      *
     C                   exsr      $step3
      *
      * Build workfile: Budgeted Quantities
      *
     C                   exsr      $step4
      *
      * Build Datamart Quantities file
      *
     C                   exsr      $step5
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Build a workfile of Farm Budget Header records
      *---------------------------------------------------------------
      *
      * This step picks up the Farm Budget Header records that have a
      * 'To Date'.  The logical is keyed by 'To Date' so we are able to
      * position and read forward. This approach keeps us from having to
      * read every record in the Farm Budget Header file--therefore, it speeds
      * up overall processing.
      *
      *
      *
     C     $step1        begsr
      *
     C     wkbegdt       setll     hsl188p
      *
     C                   dou       *in91 = *on                                  Do header
     C                   read      hsl188p                                91
     C                   if        *in91 = *off and                             If not EOF
     C                             jhfbscd <> 'I' and
     C                             jhbfdt <= wkthrudt
      *
      * The above  logic excludes:
      *    1) all Inactive budgets
      *    2) all budgets whose FROM DATE is after the end date of this run
      *
      * Now, exclude all budgets whose TO DATE is:  A) not zero and B) prior to
      * the begin date. Write a workfile record for all budgets not excluded.
      *
     C                   if        jhbtdt <> 0 and
     C                             jhbtdt < wkbegdt
     C                   else
     C                   exsr      $wrt300
     C                   endif
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do header
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------
      * Build a workfile of Farm Budget Header records with NO To Dates
      *-----------------------------------------------------------------
      *
      * This step picks up all the Farm Budget Header records that have no
      * 'To Date'.  The logical selects only these records with no 'To Date'.
      * This approach speeds processing by allowing us to access only the
      * records that we did not process in Step 1.
      *
     C     $step2        begsr
      *
     C     *loval        setll     hsl188q
      *
     C                   dou       *in91 = *on                                  Do loop 2
     C                   read      hsl188q                                91
     C                   if        *in91 = *off and                             If not EOF
     C                             jhfbscd <> 'I' and
     C                             jhbfdt <= wkthrudt
      *
     C                   exsr      $wrt300
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do loop 2
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Write a Farm Budget Header record to the workfile
      *---------------------------------------------------------------
      *
     C     $wrt300       begsr
      *
      * Retrieve the Creation Schedule code.
      *
     C     jhbtcd        chain     hsp185                             92
     C                   if        *in92 = *off
     c                   move      thcscd        w1cscd
     C                   endif
      *
      * If the budget has a TO Date, calculate the Actual Budget Weeks.
      *
     C                   if        jhbtdt <> 0
     C                   exsr      $actual
     C                   endif
      *
      * Populate remaining fields
      *
     C                   z-add     jhfbsn        w1fbsn
     C                   z-add     jhfscd        w1fscd
     C                   move      jhbtcd        w1btcd
     C                   z-add     jhbtwk        w1btwk
     C                   z-add     jhbfdt        w1bfdt
     C                   z-add     jhbtdt        w1btdt
     C                   move      jhfbscd       w1fbscd
      *
     C                   write     w1rec
     C                   clear                   w1rec
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Calculate the Actual Budget Weeks for a Budget with a To Date
      *---------------------------------------------------------------
      *
     C     $actual       begsr
      *
     C                   z-add     0             wkwks
     C                   z-add     0             wkdays
      *
      * Find the Saturday week-ending date that the From Date falls in. Then,
      * find the Sunday that starts that week.
      *
     C                   z-add     jhbfdt        xxccyymmdd
     C                   exsr      $saturday
      *
     C     *iso          movel     xxwedt        wkcymdiso
     C     wkcymdiso     subdur    6:*d          wkcymdiso
     C                   movel     wkcymdiso     wkisofrom
      *
      * Find the Saturday after the To Date
      *
     C                   z-add     jhbtdt        xxccyymmdd
     C                   exsr      $saturday
     C                   z-add     xxwedt        xxccyymmdd
     C                   movel     xxccyymmdd    wkisoto
      *
      * Find the number of elapsed days between the From/To Saturday dates
      *
     C     wkisoto       subdur    wkisofrom     wkdays:*d
      *
      * Divide the Elapsed Days by 7 to get Weeks; then add 1 week.
      *
     C                   if        wkdays <> 0                                  If days
     C     wkdays        div       7             wkwks
     C                   add       1             wkwks
     C                   endif                                                  If days
      *
     C                   if        wkwks <> 0
     C                   z-add     wkwks         w1bawk
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Build the Weekly records for each Farm Budget in the Workfile
      *---------------------------------------------------------------
      *
     C     $step3        begsr
      *
     C     *loval        setll     hsp8300
      *
     C                   dou       *in91 = *on                                  Do headers
     C                   read      hsp8300                                91
     C                   if        *in91 = *off                                 If not EOF
      *
     C                   z-add     0             countwk
      *
      * Write the record for the first week of the Farm Budget
      *
     C                   exsr      $firstwk
      *
      * Now, continue writing weekly records for this Farm Budget until:
      *  1) The next week-ending date puts you past the THRU date of the run, or
      *  2) You have written the weekly record in which the TO DATE falls
      *
     C                   dow       wkwedt <= wkthrudt and
     C                             (w1btdt >= wkwbdt or w1btdt = 0)
     C                   exsr      $wrt301
     C                   enddo
      *
     C                   add       countwk       w1runwk
     C                   update    w1rec
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do headers
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * First weekly record for a Farm Budget
      *---------------------------------------------------------------
      *
     C     $firstwk      begsr
      *
      * Set the Week End date for the first week for each Farm Budget:
      *   1) If the Budget From Date is prior to the time-frame being built,
      *      then the first week of the time frame will be the starting week.
      *   1) If the Budget From Date is after the beginning date of the time
      *      frame being built, you have to get the Saturday subsequent to
      *      the From Date for the week-ending date of your first week.
      *
      *
     C                   select
     C                   when      w1bfdt < wkbegdt
     C                   z-add     wkfirstdt     wkwedt
     C                   other
      *
     C                   z-add     w1bfdt        xxccyymmdd
     C                   exsr      $saturday
     C                   z-add     xxwedt        wkwedt
     C                   endsl
      *
     C                   exsr      $wrt301
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Write a Farm Budget Weekly record to the workfile
      *---------------------------------------------------------------
      *
     C     $wrt301       begsr
      *
     C                   z-add     wkwedt        w2wedt
     C                   z-add     w1fscd        w2fscd
     C                   z-add     w1fbsn        w2fbsn
     C                   move      w1cscd        w2cscd
     C                   z-add     w1bfdt        w2bfdt
     C                   z-add     w1btdt        w2btdt
      *
     C                   write     w2rec
     C                   clear                   w2rec
     C                   add       1             countwk
      *
      * Calculate the next week-ending date and the Sunday that starts that week.
      *
      * Saturday
     C                   movel     wkwedt        wkisodate
     C                   adddur    7:*days       wkisodate
     C                   move      wkisodate     wkwedt
      * Sunday
     C                   subdur    6:*days       wkisodate
     C                   move      wkisodate     wkwbdt
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Build Budgeted Quantities
      *---------------------------------------------------------------
      *
     C     $step4        begsr
      *
     C     *loval        setll     hsp8300
      *
      * Process each record in the Workfile: Farm Budget Header
      *
     C                   dou       *in91 = *on                                  Do budget
     C                   read      hsp8300                                91
     C                   if        *in91 = *off                                 If not EOF
      *
      * Process each Budget Item for this Farm Budget writing a 'weekly'
      * record for this Budget Item for each week of that budget.
      *
     C     w1fbsn        setll     hsp189
      *
     C                   dou       *in93 = *on                                  Do items
     C     w1fbsn        reade     hsp189                                 93
     C                   if        *in93 = *off                                 If item
     C                   exsr      $quantity
     C                   endif                                                  If item
     C                   enddo                                                  Do items
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do budget
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Weekly Budget Item Quantities
      *---------------------------------------------------------------
      *
     C     $quantity     begsr
      *
      * Calculate a 'weekly' budget value for both Dollars and Quantity.
      *
     C                   select
     C                   when      w1bawk = 0 or w1bawk = w1btwk
      *
     C                   if        w1btwk <> 0
     C     jdfbam        div       w1btwk        wkfbam
     C     jdbgqt        div       w1btwk        wkbgqt
     C                   endif
     C                   other
      *
     C                   exsr      $datamart
     C     jdfbam        sub       wkmartam      wkleftam
     C     jdbgqt        sub       wkmartqt      wkleftqt
      *
     C                   if        w1runwk <> 0
     C     wkleftam      div       w1runwk       wkfbam
     C     wkleftqt      div       w1runwk       wkbgqt
     C                   endif
      *
     C                   endsl
      *
      * Read each Weekly workfile record for this Farm Budget and write
      * a Quantities record for that same week.
      *
     C     w1fbsn        setll     hsp8301
      *
     C                   dou       *in94 = *on                                  Do weeks
     C     w1fbsn        reade     hsp8301                                94
     C                   if        *in94 = *off                                 If item
     C                   exsr      $wrt302
     C                   endif                                                  If item
     C                   enddo                                                  Do weeks
      *
     C                   endsr
      /eject
      *-------------------------------------------------------------------
      * Total up all budget quantities/dollars already in the Datmart file
      *-------------------------------------------------------------------
      *
     C     $datamart     begsr
      *
     C                   z-add     0             wkmartqt
     C                   z-add     0             wkmartam
      *
     C     key02         setll     hsp8189
      *
     C                   dou       *in95 = *on                                  Do mart
     C     key02         reade(n)  hsp8189                                95
     C                   if        *in95 = *off
     C                   add       d2bgqt        wkmartqt
     C                   add       d2fbam        wkmartam
     C                   endif
     C                   enddo                                                  Do mart
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Write a Quantites workfile record
      *---------------------------------------------------------------
      *
     C     $wrt302       begsr
      *
     C                   z-add     w2fscd        w3fscd
     C                   z-add     w2fbsn        w3fbsn
     C                   z-add     w2wedt        w3wedt
     C                   move      w2cscd        w3cscd
      *
     C                   move      jdbgit        w3bgit
     C                   z-add     wkfbam        w3fbam
     C                   z-add     wkbgqt        w3bgqt
      *
     C                   write     w3rec
     C                   clear                   w3rec
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Write Datamart Quantities records from workfile
      *---------------------------------------------------------------
      *
     C     $step5        begsr
      *
     C     *loval        setll     hsp8302
      *
      * Process each record in the Workfile: Farm Budget Header
      *
     C                   dou       *in96 = *on                                  Do loop
     C                   read      hsp8302                                96
     C                   if        *in96 = *off                                 If not EOF
     C                   z-add     w3fscd        d2fscd
     C                   z-add     w3fbsn        d2fbsn
     C                   z-add     w3wedt        d2wedt
     C                   z-add     w3fbam        d2fbam
     C                   z-add     w3bgqt        d2bgqt
     C                   move      w3bgit        d2bgit
     C                   write     d2rec
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do loop
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Add all the Order Data to the Workfiles
      *---------------------------------------------------------------
      *
      * The join file used in this subroutine omits all orders with statuses
      * of H=hold, E=error, D=delete.
      *
     C     $orders       begsr
      *
     C                   z-add     0             wkwedt
      *
     C     wkbegdt       setll     hsj193l
      *
     C                   dou       *in91 = *on or                               Do orders
     C                             qdisdt > wkthrudt
     C                   read      hsj193l                                91
     C                   if        *in91 = *off and                             If not EOF
     C                             qdisdt <= wkthrudt
      *
      * Since you are reading the records in Issue Date sequence, you only
      * have to go get a week-ending date when you slip into a different week.
      *
     C                   select
     C                   when      first = yes
     C                   move      no            first
     C                   z-add     qdisdt        xxccyymmdd
     C                   exsr      $saturday
     C                   z-add     xxwedt        wkwedt
      *
     C                   when      qdisdt > wkwedt
     C                   z-add     qdisdt        xxccyymmdd
     C                   exsr      $saturday
     C                   z-add     xxwedt        wkwedt
     C                   endsl
      *
      * Calculate a Used Amount as:
      *   1) the request detail 'Total Cost' value, or
      *   2) the request detail Cost Per Unit times Used Quantity, or
      *   3) the item master Cost Per Unit times Used Quantity
      *
     C                   select
     C                   when      qdtcam <> 0
     C                   z-add     qdtcam        wkusam
      *
     C                   when      qdcpuam <> 0
     C     qdusqt        mult(h)   qdcpuam       wkusam
     C                   other
      *
     C     qdusqt        mult(h)   imcpuam       wkusam
     C                   endsl
      *
      * If this item does not have a Budget Item value, we will just use
      * the Item Code for the rest of our logic.
      *
     C                   if        imbgit <> *blank
     C                   movel     imbgit        wkbgit
     C                   else
     C                   movel     imitcd        wkbgit
     C                   endif
      *
      * If this Item has Volume, we need to do the volume thing.
      *
     C                   if        imvol = 0
     C                   z-add     qdrqqt        wkrqqt
     C                   z-add     qdapqt        wkapqt
     C                   z-add     qdusqt        wkusqt
     C                   else
     C     qdrqqt        mult      imvol         wkrqqt
     C     qdapqt        mult      imvol         wkapqt
     C     qdusqt        mult      imvol         wkusqt
     C                   endif
      *
     C                   exsr      $wrtupd302
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do orders
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Write/update Workfile record with order data
      *---------------------------------------------------------------
      *
     C     $wrtupd302    begsr
      *
      * Update a record
      *
     C     key01         chain     hsp8302                            92
     C                   if        *in92 = *off                                 If hit
     C                   add       wkrqqt        w3rqqt
     C                   add       wkapqt        w3apqt
     C                   add       wkusqt        w3usqt
     C                   add       wkusam        w3usam
      *
      * If the Requested Quantity is greater than the Approved Quantity or
      * there is an Override Reason Code,
      * increment the counter of "times that they tried to order over budget".
      *
     C                   if        qdrqqt > qdapqt or qdorcd <> *blank
     C                   add       1             w3over
     C                   endif
      *
     C                   update    w3rec
     C                   else
      *
      * Write a record
      *
     C                   z-add     wkwedt        w3wedt
     C                   move      'N'           w3cscd
      *
     C                   z-add     qdfbsn        w3fbsn
      *
     C                   move      wkbgit        w3bgit
     C                   z-add     0             w3fbam
     C                   z-add     0             w3bgqt
     C                   z-add     wkrqqt        w3rqqt
     C                   z-add     wkapqt        w3apqt
     C                   z-add     wkusqt        w3usqt
     C                   z-add     wkusam        w3usam
      *
      * Retrieve the Farm Site from the Request Header
      *
     C     qdrqsn        chain     hsp192                             92
     C                   if        *in92 = *off
     C                   z-add     qhfscd        w3fscd
     C                   endif
      *
      * If the Requested Quantity is greater than the Approved Quantity,
      * increment the counter of "times that they tried to order over budget".
      *
     C                   if        qdrqqt > qdapqt
     C                   z-add     1             w3over
     C                   endif
      *
     C                   write     w3rec
     C                   clear                   w3rec
     C                   endif                                                  If hit
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm lists
      *
     C     *entry        plist
     C                   parm                    xxrunfl
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    qdfbsn
     C                   kfld                    wkbgit
     C                   kfld                    wkwedt
      *
      *
     C     key02         klist
     C                   kfld                    w1fbsn
     C                   kfld                    jdbgit
      *
      *
      * Bring in the data area that contains the run dates.
      *
     C                   in        dabud
      *
      * Always set the date to stop extracting data.
      *
     C                   z-add     dathrudt      wkthrudt
      *
      * Set the 'begin' date and 'first week ending' date depending on whether this is
      * a History or Current run.
      *
     C                   select
      * History
     C                   when      xxrunfl = 'H'
     C                   z-add     dahwkbegdt    wkbegdt
     C                   z-add     dahwkenddt    wkfirstdt
      * Current
     C                   when      xxrunfl = ' '
     C                   z-add     dacwkbegdt    wkbegdt
     C                   z-add     dacwkenddt    wkfirstdt
     C                   endsl
      *
     C                   endsr
      /eject
