     H/TITLE WW Regulation Code M DF   Display file
     H DATFMT(*YMD) DATEDIT(*YMD) DEBUG(*YES)
     Z* CRTBNDRPG
     Z* DFTACTGRP(*NO) BNDDIR(YBNDDIR) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
      *
     H* SYNOPSIS :
     H* - Displays the records from DBF as a subfile
     H* - Loads the SFL from the DBF a page at a time
     H* - The DBF record at which the SFL display starts may be
     H*   controlled by positioning fields on the SFL header
     H* - Any key fields on the SFL header will be used as
     H*   positioning values
     H* - Any non-key fields on the SFL header will be used as
     H*   selection values: a maximum of W0SLM records will be
     H*   read from the DBF before giving up
      *
     H* Generated by CA 2E release 8.7 (1632)
     H* Function type : Display file
     H* Object type   : *PGM
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISELOUC
     H* Date          : 06/03/23  Time  : 09:04:53
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPUZIDFR#  CF   E             WORKSTN
     F                                     SFILE(#SFLRCD:##RR)
     F                                     INFDS(INFDS#)
      * DSP: WW Regulation Code M DF   Display file
      *
     FPUC8REL1  IF   E           K DISK
     F                                     INFDS(INFDS1)
      * RTV : Regulation Code Mst       Retrieval index
      *
     FCAEOREL1  IF   E           K DISK
      * RTV : Company Customer          Retrieval index
      *
     FPUC7REL1  IF   E           K DISK
      * RTV : PFS Regulation Code Mst   Retrieval index
      *
     FCADPREL1  IF   E           K DISK
      * RTV : System Values             Retrieval index       NV
      *
     FPDKMREL1  IF   E           K DISK
      * RTV : Company Values            Retrieval index
      *
     FCADRREL1  IF   E           K DISK
      * RTV : User Profile Control      Retrieval index       NV
      *
     FCADTREL1  IF   E           K DISK
      * RTV : User Application Profile  Retrieval index       NV
      *
     FCADNREL2  IF   E           K DISK
      * RSQ : Application               RSQ Application Code
      *
     FPUC7REL0  IF A E           K DISK
      * UPD : PFS Regulation Code Mst   Update index
      *
      * Screen: Field position and name array
     D W0BEG           S              5  0 DIM(010)CTDATA PERRCD(7)ASCEND
     D W0END           S              5  0 DIM(010)CTDATA PERRCD(7)ASCEND
     D W0NAM           S             10    DIM(010)CTDATA PERRCD(7)
      * Long constants
     D @CN#            S              6    DIM(10)CTDATA PERRCD(1)
     D @CN             S             25    DIM(10) ALT(@CN#)
      /EJECT
      * Data structures:
     D PGMDS         ESDS                  EXTNAME(Y2PGDSP)
      * Modified Program data structure
     D JBDTTM          DS
      * Job date/time
     D  ##JDT                  1      7  0
     D  ##JCC                  1      1  0
     D  ##JYY                  2      3  0
     D  ##JMM                  4      5  0
     D  ##JDD                  6      7  0
     D  ##JTM                  8     13  0
     D  ##JHH                  8      9  0
     D  ##JNN                 10     11  0
     D  ##JSS                 12     13  0
      * ABO DEFINE LARGE STRING FOR CL CMD
     D YARTCM          DS           512
     D  DUMMY1                 1      1
     D INFDS#        E DS                  EXTNAME(Y2I#DSP)
      * Display file information data structure
      *
     D INFDS1        E DS                  EXTNAME(Y2I1DSP)
      * File information data structure
      *
      * Outward parameters
     D PARC            DS           385
      * RCD : Regulation Code Mst       Retrieval index
      * I :  Regulation Code
     D  PACAAB                 1     10
      * I :  Regulation ID
     D  PACBAB                11     12
      * I :  Regulation Origin
     D  PACCAB                13     15
      * I :  Regulation Desc
     D  PAUVU1                16     45
      * I :  ShipTo Est Stm Stop Tot
     D  PAUWU1                46     75
      * I :  NonComp Stm1 StopTot
     D  PAUXU1                79    153
      * I :  NonComp Stm2 StopTot
     D  PAUYU1               154    228
      * I :  Compliancy Stm1 Item
     D  PAUZU1               229    278
      * I :  Compliancy Stm2 Item
     D  PAU0U1               279    328
      * I :  Record Status
     D  PAVSST               329    329
      * I :  Create Date
     D  PAMJDT               330    333P 0
      * I :  Create Time
     D  PABETM               334    337P 0
      * I :  Create User
     D  PACCVN               338    347
      * I :  Create Program
     D  PACDVN               348    357
      * I :  Change Date
     D  PAMKDT               358    361P 0
      * I :  Change Time
     D  PABFTM               362    365P 0
      * I :  Change User
     D  PACEVN               366    375
      * I :  Change Program
     D  PACFVN               376    385
      *
     D QPUC71        E DS                  EXTNAME(PUC7REL0)
      * UPD : PFS Regulation Code Mst   Update index
      * Renamed input format fields
     D  WAB4AB       E                     EXTFLD(C7B4AB)
     D  WAB8AB       E                     EXTFLD(C7B8AB)
     D  WAB5AB       E                     EXTFLD(C7B5AB)
     D  WAUOU1       E                     EXTFLD(C7UOU1)
     D  WAUPU1       E                     EXTFLD(C7UPU1)
     D  WACFAB       E                     EXTFLD(C7CFAB)
     D  WAOGSC       E                     EXTFLD(C7OGSC)
     D  WAUQU1       E                     EXTFLD(C7UQU1)
     D  WAURU1       E                     EXTFLD(C7URU1)
     D  WAUSU1       E                     EXTFLD(C7USU1)
     D  WAUTU1       E                     EXTFLD(C7UTU1)
     D  WAUWSX       E                     EXTFLD(C7UWSX)
     D  WAUXSX       E                     EXTFLD(C7UXSX)
     D  WAV3SX       E                     EXTFLD(C7V3SX)
     D  WAAHNY       E                     EXTFLD(C7AHNY)
     D  WAAINY       E                     EXTFLD(C7AINY)
     D  WAAJNY       E                     EXTFLD(C7AJNY)
     D  WAAKNY       E                     EXTFLD(C7AKNY)
      *
      *
      * Declared stand-alone variables
     D  P0RTN          S              7
     D  W0ICL          S              1
     D  W0RTN          S              7
     D  W0RSL          S              1
     D  W0RSF          S              1
     D  W0RTW          S              9  0
     D  W0ENV          S              3
     D  ##TME          S              6  0
     D  ##RRMX         S              5  0
     D  WZUVU1         S                   LIKE(#2UVU1)
     D  WZCAAB         S                   LIKE(#2CAAB)
     D  WZCBAB         S                   LIKE(#2CBAB)
     D  WZCCAB         S                   LIKE(#2CCAB)
     D  WQB10X         S             10
     D  WQUVU1         S                   LIKE(#2UVU1)
     D  WQA5N          S              5  0
     D  WQC10X         S             10
     D  ##RROK         S              5  0
     D  WKIND0         S              1
     D  ##RR           S              5  0
     D  ##RRRD         S              9  0
     D  ##SPG          S              3  0
     D  ##SLIN         S              3  0
     D  ##SFLN         S              9  0
     D  WQA3N          S              3  0
     D  WQB3N          S              3  0
     D  WQC3N          S              3  0
     D  WQD1           S              1
     D  WQE1           S              1
     D  WQF1           S              1
     D  WQG3N          S              3  0
     D  W0HLP          S              1
     D  YPMT04         S              1
     D  HELP25         S              1
     D  ##OFF          S             30
     D  ZHCSRW         S              5  0
     D  ZHCSCL         S              5  0
     D  ZZCSRW         S              3  0
     D  ZZCSCL         S              3  0
     D  W0HPMB         S             10
     D  YYHPFL         S             10
     D  YYHPLB         S             10
     D  YYHLVN         S             10
     D  YYUSOP         S             10
     D  YYRW           S              5  0
     D  YYCL           S              5  0
     D  YYLGCT         S              5  0
     D  YYLGVN         S             10
     D  ZAPGMQ         S             10
     D  ZAPGRL         S              5
     D  ZAFSMS         S              1
     D  W0DCF          S              1
     D  WQ0001         S             10
     D  W0CLPG         S             10
     D  WQ0002         S              3
     D  YL0001         S              3  0
     D  YL0002         S              3
     D  ZADFMF         S             10
     D  WQ0003         S              3
     D  YL0003         S             50
     D  ZQ             S              5  0
     D  YL0004         S            256
     D  YL0005         S             40
     D  Y0CX01         S              1
     D  YL0006         S             50
     D  WQ0004         S             50
     D  WQ0005         S             50
     D  WQ0006         S            256
     D  YL0007         S             80
     D  YL0008         S              7
     D  YL0009         S              1
     D  YL0010         S             15  5
     D  WQ0007         S              7
     D  WQ0008         S              6
     D  WQ0009         S             10
     D  WQ0010         S              1
     D  WQ0011         S             15  5
     D  WQ0012         S             25
     D  WQ0013         S             10
     D  WQ0014         S              4
     D  WQ0015         S              4
     D  WQ0016         S              1
     D  WQ0017         S             10
     D  WQ0018         S              3
     D  YPMTFD         S             10
     D  YAFSCH         S              4  0
     D  YPMRRN         S              4  0
     D  Y#SFRC         S              4  0
     D  ZHSTRW         S              4  0
     D  ZHNDRW         S              4  0
     D  ZHRLEN         S              4  0
     D  ZHF4RW         S              4  0
     D  ZHWK1#         S              4  0
     D  YZSFDL         S              4  0
     D  ##SFPG         S              3  0
     D  W0SLM          S              9  0
     D  W0SPG          S              3  0
     D  W0RR0          S              4  0
     D  W0GRP          S              1
     D  YN0001         S              3
     D  YN0002         S              3  0
     D  YN0003         S              3
     D  YN0004         S              1
     D  YN0005         S             10
     D  WN0001         S             10
     D  WN0002         S             10
     D  YL0011         S              3  0
     D  YL0012         S              3
     D  WL0001         S             10
     D  WL0002         S              6
     D  WL0003         S              3  0
     D  WL0004         S              3
     D  WQ0019         S              3
     D  WQ0020         S              3  0
     D  WUAUNA         S             30
     D  WQSI01         S                   LIKE(DNDNCD)
     D  WQSJ01         S                   LIKE(DNDNCD)
     D  WUDSC4         S             40
     D  WUDE40         S             40
     D  YSETCS         S              1
     D  WCSRLC         S              3
     D  ZINPOS         S              5  0
     D  W0CSRR         S              5  0
     D  F              S              3  0
     D  ZAMSID         S              7
     D  ZAMSGF         S             10
     D  ZAMSTP         S              7
     D  YILE           S              1
     D  W0CFL          S             10
     D  W0CRW          S              5  0
     D  W0CCL          S              5  0
     D  ZZFFL          S             10
     D  ZZFLB          S             10
     D  ZZFMB          S             10
     D  ZZFQL          S             21
     D  W0PMT          S              1
     D UCT             S              1    DIM(40)                              CENTER TABLE
      /EJECT
      * Parameter declarations
     D P1PARM          DS
      * FLD: Print Options
      * N :  PRT Description
     D  P1G3TX                 1     25
      * N :  PRT Printer Device
     D  P1WRST                26     35
      * N :  PRT Hold Output Sts
     D  P1WSST                36     39
      * N :  PRT Save Output Sts
     D  P1WTST                40     43
      * N :  PRT Number of Copies
     D  P1DYNB                44     45  0
      * N :  PRT Night Queue Run Sts
     D  P1WUST                46     46
      * N :  PRT Night Queue
     D  P1BVVN                47     56
     D                 DS
     D  ZAMSDA                 1    132
      * Message data for 'Generic Message 80'
      * Generic Message 80 USR
     D  ZA0001                 1     80
      * Message data for 'Application access denied'
      * User Profile Name
     D  ZA0002                 1     10
      * Application Code
     D  ZA0003                11     16
      * Message data for 'Application access denied'
      * User Profile Name
     D  ZA0004                 1     10
      * Application Code
     D  ZA0005                11     16
     I@C7REMM
      * PFS Regulation Code Mst   Update index
      * Renamed input format fields
     I              C7B4AB                      WAB4AB
     I              C7B8AB                      WAB8AB
     I              C7B5AB                      WAB5AB
     I              C7UOU1                      WAUOU1
     I              C7UPU1                      WAUPU1
     I              C7CFAB                      WACFAB
     I              C7OGSC                      WAOGSC
     I              C7UQU1                      WAUQU1
     I              C7URU1                      WAURU1
     I              C7USU1                      WAUSU1
     I              C7UTU1                      WAUTU1
     I              C7UWSX                      WAUWSX
     I              C7UXSX                      WAUXSX
     I              C7V3SX                      WAV3SX
     I              C7AHNY                      WAAHNY
     I              C7AINY                      WAAINY
     I              C7AJNY                      WAAJNY
     I              C7AKNY                      WAAKNY
      *
      /EJECT
      *****************************************************************
      * Entry parameters
     C     *ENTRY        PLIST
     C                   PARM                    P0RTN
      *****************************************************************
      * Initialize
     C                   EXSR      ZZINIT
      *
     C                   DO        *HIVAL
      * Initialise & load subfile page
     C                   EXSR      BAIZSF
     C                   MOVEL     'N'           W0RSF
      * Display screen until reload requested
      * Display screen
     C                   DOW       W0RSF = 'N'
     C                   EXSR      CAEXFM
      * Process response
      * Cancel & exit program
     C   03              CAS                     ZXEXPG
      * HOME: Request subfile reload
     C   30              CAS                     FBRQRL
      * Display next SFL page
     C   27              CAS                     BBLDSF
      * Process screen input
     C                   CAS                     DAPR##
     C                   END
      *
     C                   END                                                    OD W0RSF
     C                   END                                                    OD *HIVAL
      *****************************************************************
      /EJECT
     CSR   BAIZSF        BEGSR
      *================================================================
      * Initialise and load subfile page
      *================================================================
      * Clear subfile
     C                   SETON                                        80
     C                   WRITE     #SFLCTL
     C                   SETOFF                                       80
      * Reset no of records in subfile
     C                   Z-ADD     *ZERO         ##RRMX               81         SETOF 81
      * Position DBF file
     C     KPOS          KLIST
     C                   KFLD                    C8CAAB                         Regulation Code
     C                   KFLD                    C8CBAB                         Regulation ID
      * Setup key
     C                   MOVEL     #2CAAB        C8CAAB
     C                   MOVEL     #2CBAB        C8CBAB
     C     KPOS          SETLL     @C8REMU
     C                   READ      @C8REMU                              8782    *82=EOF
      * Save previous selector values
     C                   MOVEL     #2UVU1        WZUVU1                         Regulation Desc
     C                   MOVEL     #2CAAB        WZCAAB                         Regulation Code
     C                   MOVEL     #2CBAB        WZCBAB                         Regulation ID
     C                   MOVEL     #2CCAB        WZCCAB                         Regulation Orig
      * Translate search mask for text field
     C                   MOVEL     'QSYST'       WQB10X
     C                   MOVE      'RNTBL'       WQB10X
     C                   CALL      'QDCXLATE'
      * Length
     C                   PARM      30            WQA5N
     C                   PARM      #2UVU1        WQUVU1                         Regulation Desc
     C                   PARM                    WQB10X                         QSYSTRNTBL
     C                   PARM      'QSYS'        WQC10X
      * Load subfile page
     C                   Z-ADD     0             ##RROK
     C                   EXSR      BBLDSF
      *================================================================
     CSR   BAEXIT        ENDSR
      /EJECT
     CSR   BBLDSF        BEGSR
      *================================================================
      * Load subfile page
      *================================================================
      * Re-establish fields in read-ahead record
     C   27              DO
     C  N82              READP     @C8REMU                                90    *
     C  N82              READ      @C8REMU                                90    *
     C                   END
      *
      * Setof record error indicators
     C                   MOVEL     *ALL'0'       WKIND0
     C                   MOVEA     WKIND0        *IN(34)
      * Start at previous highest record in SFL
     C                   Z-ADD     ##RRMX        ##RR
      * Reset count of DBF records read
     C                   Z-ADD     0             ##RRRD
      * Set required pages based on *Set Cursor or *Subfile Pages
     C                   IF        W0RR0 > 0
     C     W0RR0         DIV       ##SFPG        ##SPG
     C                   MVR                     ##SLIN
     C                   IF        ##SLIN > 0
     C                   ADD       1             ##SPG
     C                   END
     C                   IF        W0SPG > ##SPG
     C                   Z-ADD     W0SPG         ##SPG
     C                   END
     C                   ELSE
     C                   Z-ADD     W0SPG         ##SPG
     C                   END
      * Compute lines required based on pages
     C     ##SPG         MULT      ##SFPG        ##SFLN
     C                   IF        ##SFLN > 999
     C                   Z-ADD     999           ##SFLN
     C                   END
      *................................................................
      * Load next SFL page until SFL page full, or
      * Scan limit reached
      * Check selection fields - if fail, read next record
     C                   DOW       NOT *IN82 AND
     C                             ##RROK < ##SFLN AND
     C                             ##RRRD < W0SLM
      * Scan for search string
     C                   IF        #2UVU1 <> ' '
     C                   CALL      'QCLSCAN'
     C                   PARM                    C8UVU1                         Regulation Desc
      * Length
     C                   PARM      30            WQA3N
      * Start
     C                   PARM      1             WQB3N
      * Mask
     C                   PARM                    WQUVU1
      * Length
     C                   PARM      30            WQC3N
      * Translate
     C                   PARM      '1'           WQD1
      * Trim
     C                   PARM      '1'           WQE1
      * Wild
     C                   PARM      '?'           WQF1
      * Result
     C                   PARM                    WQG3N
     C     WQG3N         CABLT     1             BB020
     C                   END
     C                   IF        #2CAAB = ' '
     C                   IF        #2CBAB <> ' '
     C     C8CBAB        CABNE     #2CBAB        BB020                          Regulation ID
     C                   END
     C                   END
     C                   IF        #2CCAB <> ' '
     C     C8CCAB        CABNE     #2CCAB        BB020                          Regulation Orig
     C                   END
      * Load SFL fields
     C                   EXSR      MBFL#1
      * Output to subfile
     C                   ADD       1             ##RR
     C                   ADD       1             ##RROK               81        *
      * If SFLRCD invalid, note that errors present
     C   98
     CANN99              SETON                                        99        *
     C                   WRITE     #SFLRCD
     C     BB020         TAG
      * Increment scan check count
     C                   ADD       1             ##RRRD
     C                   READ      @C8REMU                                82    *82=EOF
     C                   END                                                    OD 1 - ##SFPG
      *................................................................
     C     BB900         TAG
      *................................................................
      * If no DBF records found, display error message
      * Send message '*No data to display'
     C                   IF        ##RR = *ZERO AND
     C                             *IN82
     C                   MOVEL     'Y2U0008'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END                                                    FI ##RR = *ZERO
      *
      *................................................................
      * Save highest SFL record load can continue at end point
      * Calculate top line
     C                   IF        ##RR > ##RRMX
     C     ##RROK        DIV       ##SFPG        ##SPG
     C                   MVR                     ##SLIN
     C                   IF        ##SLIN > 0
     C     ##RR          SUB       ##SLIN        ##SFRC
     C                   ELSE
     C     ##RR          SUB       ##SFPG        ##SFRC
     C                   END
     C                   ADD       1             ##SFRC
     C                   Z-ADD     ##RR          ##RRMX
     C                   END
      * If scan limit reached, display error message
      * Send message '*Scan limit reached'
     C                   IF        ##RRRD >= W0SLM
     C                   MOVEL     'Y2U0017'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   ELSE
     C                   Z-ADD     0             ##RROK
     C                   END
      *================================================================
     CSR   BBEXIT        ENDSR
      /EJECT
     CSR   CAEXFM        BEGSR
      *================================================================
      * Display screen
      *================================================================
     C                   DOU       W0HLP = 'N'
     C                   MOVEL     'N'           W0HLP
     C                   MOVE      *IN04         YPMT04
     C                   MOVE      *IN25         HELP25
     C                   MOVE      *ALL'0'       ##OFF
     C                   MOVEA     ##OFF         *IN(1)
     C                   MOVE      YPMT04        *IN04
     C                   MOVE      HELP25        *IN25
      * Update screen time
     C                   TIME                    ##TME
      * Set cursor by *SET CURSOR data
     C                   IF        YSETCS = 'Y'
     C                   EXSR      Y0SET
     C                   END
     C                   WRITE     #MSGCTL
     C                   WRITE     #CMDTXT1
     C                   EXFMT     #SFLCTL
      * Maintain subfile position where possible
     C                   IF        @#SFRC > *ZERO
     C                   Z-ADD     @#SFRC        ##SFRC
     C                   END
      * Test cursor
     C                   EXSR      Y8TST
      * Check if prompt requested
     C                   EXSR      ZDVPMT
      * Clear set cursor DDS indicator
     C                   IF        WCSRLC = 'OFF'
     C                   SETOFF                                       94        *
     C                   END
     C                   EVALR     WCSRLC = ' '
      * If help requested, display help text
     C   25              EXSR      ZHHPKY
     C                   END
      * Update job time
     C                   TIME                    ##JTM
      * Clear messages from program message queue
     C                   CALL      'Y2CLMSC'
     C                   PARM      ##PGM         ZAPGMQ
     C                   PARM      '*SAME'       ZAPGRL
      * Reset first message only flag
     C                   MOVEL     'Y'           ZAFSMS                   99    *
     C                   SETOFF                                         8392    *
     C                   IF        YSETCS = 'Y'
     C                   EXSR      Y9CLR
     C                   END
      *================================================================
     CSR   CAEXIT        ENDSR
      /EJECT
     CSR   DAPR##        BEGSR
      *================================================================
      * Process screen input
      *================================================================
      *
      * Confirm/update is not deferred
     C                   MOVEL     'N'           W0DCF
     C                   IF        YPMTFD <> ' ' AND
     C                             YPMRRN = *ZERO
     C                   GOTO      DAEXIT
     C                   END
     C     YPMTFD        CABNE     *BLANKS       DATAG1
      * Change of position specified
     C     WZCAAB        CASNE     #2CAAB        FBRQRL
     C     WZCBAB        CASNE     #2CBAB        FBRQRL
     C     WZCCAB        CASNE     #2CCAB        FBRQRL
     C                   END
     C     DATAG1        TAG
      * USER: Process subfile control (Pre-confirm)
      * F04 - Prompt
      * CASE: PGM.*Cursor field <IS> CTL.Regulation Code
     C                   IF        YPMTFD = ' '
      * CASE: CTL.*CMD key is CF04
     C                   IF        W0CFL = '#2CAAB'
      * SEL Regulation Code SR - Regulation Code Mst  * 
     C                   IF        *IN04
     C                   CALL      'PUZNSRR'                            90      SEL Regulation
     C                   PARM      *BLANK        W0RTN
     C     #2CAAB        PARM      #2CAAB        WQ0001                         Regulation Code
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PUZNSRR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        9931      *
     C                   END
     C                   END                                                    *FI
     C                   END                                                    *FI
      * F06 - Create
      * CASE: CTL.*CMD key is CF06
      * EDT Regulation Code M E1 - Regulation Code Mst  * 
     C                   IF        *IN06
     C                   CLEAR                   PARC
     C                   MOVEL(P)  #2CAAB        PACAAB                         Regulation Code
     C                   MOVEL(P)  #2CBAB        PACBAB                         Regulation ID
     C                   MOVEL(P)  #2CCAB        PACCAB                         Regulation Orig
     C                   EVAL      PAUVU1 = ' '                                 Regulation Desc
     C                   EVAL      PAUWU1 = ' '                                 ShipTo Est Stm
     C                   EVAL      PAUXU1 = ' '                                 NonComp Stm1 St
     C                   EVAL      PAUYU1 = ' '                                 NonComp Stm2 St
     C                   EVAL      PAUZU1 = ' '                                 Compliancy Stm1
     C                   EVAL      PAU0U1 = ' '                                 Compliancy Stm2
     C                   EVAL      PAVSST = ' '                                 Record Status
     C                   Z-ADD     *ZERO         PAMJDT                         Create Date
     C                   Z-ADD     *ZERO         PABETM                         Create Time
     C                   EVAL      PACCVN = ' '                                 Create User
     C                   EVAL      PACDVN = ' '                                 Create Program
     C                   Z-ADD     *ZERO         PAMKDT                         Change Date
     C                   Z-ADD     *ZERO         PABFTM                         Change Time
     C                   EVAL      PACEVN = ' '                                 Change User
     C                   EVAL      PACFVN = ' '                                 Change Program
      *
     C                   CALL      'PUZQE1R'                            90      EDT Regulation
     C                   PARM      *BLANK        W0RTN
     C                   PARM                    PARC                           RCD: Regulation
     C                   PARM      'ADD'         WQ0002                         *Program mode
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PUZQE1R'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        993132    *
     C                   SETON                                        33        *
     C                   END
     C                   MOVEL     'Y'           W0RSF                          *Reload subfile
     C                   END                                                    *FI
      * F18 - Download to Carlisle
      * CASE: CTL.*CMD key is CF18
      * RTV 1st Rcd (get CO) RT - Company Customer  * 
     C                   IF        *IN18
     C                   EXSR      SARVGN
     C                   EVAL      YL0002 = ' '                                 Company Alpha
     C                   MOVEL     YL0001        YL0002                         Company Alpha
      * Copy PUC8REP to PUC7REP
      * RTV Reg Code Mst RT - Regulation Code Mst  * 
     C                   EXSR      SBRVGN
      * Build Regulation code file & Send to Carlisle.
      * EXC CPY Reg Carlisle CL - PFS Regulation Code Mst  * 
     C                   CALL      'PUZEUPC'                            90      EXC CPY Reg Car
     C                   PARM      YL0002        WQ0003                         Company Alpha
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PUZEUPC'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
     C                   END
      * Email created and sent
     C                   EXSR      UASUBR                                       Email created a
      * Send Info Msg.
      * CASE: *OTHERWISE
     C                   Z-ADD     0             ZQ
     C     @CN(006)      CAT(P)    @CN(007):ZQ   YL0007                         Generic Message
     C                   Z-ADD     1             ZQ
     C     YL0007        CAT(P)    YL0002:ZQ     YL0007                         Generic Message
     C                   Z-ADD     *ZERO         ZQ
     C     YL0007        CAT(P)    '.':ZQ        YL0007                         Generic Message
      * Setup message data for message
     C                   MOVEL     YL0007        ZA0001                         Generic Message
      * Send message 'Generic Message 80'
     C                   MOVEL     'USR4976'     ZAMSID
     C                   MOVEL     '*INFO  '     ZAMSTP                         Message type
     C                   EXSR      ZASNMS
      *
     C                   MOVEL     'Y'           W0DCF                          *Defer confirm
     C                   END                                                    *FI
      * F21 - Print
      * CASE: CTL.*CMD key is CF21
      * PMT Pass Status        UP - /UT User Programs  * 
     C                   IF        *IN21
     C                   CALL      'PDALUPR'                            90      PMT Pass Status
     C     YL0008        PARM      *BLANK        WQ0007                         Return Code Usr
     C                   PARM      'C/S'         WQ0008                         Application Cod
     C                   PARM      @CN(008)      WQ0009                         Program name US
     C     YL0009        PARM      YL0009        WQ0010                         Record Status
     C     YL0010        PARM      YL0010        WQ0011                         System Value Nu
     C                   PARM      @CN(009)      WQ0012                         PRT Description
     C     P1WRST        PARM      P1WRST        WQ0013                         PRT Printer Dev
     C     P1WSST        PARM      P1WSST        WQ0014                         PRT Hold Output
     C     P1WTST        PARM      P1WTST        WQ0015                         PRT Save Output
     C     P1WUST        PARM      P1WUST        WQ0016                         PRT Night Queue
     C     P1BVVN        PARM      P1BVVN        WQ0017                         PRT Night Queue
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PDALUPR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
     C                   END
      * CASE: LCL.Return Code Usr is *Blank
      * Send message 'Print has been Submitted'
     C                   IF        YL0008 = ' '
     C                   MOVEL     'USR1832'     ZAMSID
     C                   MOVEL     '*INFO  '     ZAMSTP                         Message type
     C                   EXSR      ZASNMS
      *
     C                   END                                                    *FI
     C                   MOVEL     'Y'           W0RSF                          *Reload subfile
     C                   END                                                    *FI
     C                   END
      * Reload subfile requested
     C                   IF        YPMTFD = ' '
     C     W0RSF         CABEQ     'Y'           DAEXIT
     C                   END
      * Process subfile records
     C                   IF        *IN81
     C                   EXSR      DBPRSF
     C                   END
     C     YPMTFD        CABNE     *BLANKS       DAEXIT
      * If error, quit processing
     C     *IN99         CABEQ     '1'           DAEXIT
      * Defer confirm/update requested
     C     W0DCF         CABEQ     'Y'           DAEXIT
      *================================================================
     CSR   DAEXIT        ENDSR
      /EJECT
     CSR   DBPRSF        BEGSR
      *================================================================
      * Process modified subfile record
      *================================================================
      * Read first changed slf record
     C                   IF        YAFSCH <> *ZERO
     C     YAFSCH        CHAIN     #SFLRCD                            92        *
     C                   ELSE
     C                   READC     #SFLRCD                                92    *
     C                   END
      * Process subfile record
     C                   DOW       NOT *IN92
     C                   EXSR      DCPRSR
     C                   UPDATE    #SFLRCD
     C                   READC     #SFLRCD                                92    *
     C                   END
      *================================================================
     CSR   DBEXIT        ENDSR
      /EJECT
     CSR   DCPRSR        BEGSR
      *================================================================
      * Process subfile record
      *================================================================
      * Setof error indicators and SFLNXTCHG
     C                   MOVEA     WKIND0        *IN(34)
     C                   SETOFF                                       98        *
     C     YPMTFD        CABNE     *BLANKS       DCEXIT
      * USER: Process subfile record (Pre-confirm)
      * CASE: RCD.*SFLSEL is *Change
      * EDT Regulation Code M E1 - Regulation Code Mst  * 
     C                   IF        #1SEL = '2'
     C                   CLEAR                   PARC
     C                   MOVEL(P)  #1CAAB        PACAAB                         Regulation Code
     C                   MOVEL(P)  #1CBAB        PACBAB                         Regulation ID
     C                   MOVEL(P)  #1CCAB        PACCAB                         Regulation Orig
     C                   MOVEL(P)  #1UVU1        PAUVU1                         Regulation Desc
     C                   MOVEL(P)  #1UWU1        PAUWU1                         ShipTo Est Stm
     C                   MOVEL(P)  #1UXU1        PAUXU1                         NonComp Stm1 St
     C                   MOVEL(P)  #1UYU1        PAUYU1                         NonComp Stm2 St
     C                   MOVEL(P)  #1UZU1        PAUZU1                         Compliancy Stm1
     C                   MOVEL(P)  #1U0U1        PAU0U1                         Compliancy Stm2
     C                   MOVEL(P)  #1VSST        PAVSST                         Record Status
     C                   Z-ADD     #1MJDT        PAMJDT                         Create Date
     C                   Z-ADD     #1BETM        PABETM                         Create Time
     C                   MOVEL(P)  #1CCVN        PACCVN                         Create User
     C                   MOVEL(P)  #1CDVN        PACDVN                         Create Program
     C                   Z-ADD     #1MKDT        PAMKDT                         Change Date
     C                   Z-ADD     #1BFTM        PABFTM                         Change Time
     C                   MOVEL(P)  #1CEVN        PACEVN                         Change User
     C                   MOVEL(P)  #1CFVN        PACFVN                         Change Program
      *
     C                   CALL      'PUZQE1R'                            90      EDT Regulation
     C                   PARM      *BLANK        W0RTN
     C                   PARM                    PARC                           RCD: Regulation
     C                   PARM      'CHG'         WQ0018                         *Program mode
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PUZQE1R'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        98        *
     C                   END
     C                   MOVEL     'Y'           W0RSF                          *Reload subfile
     C                   END                                                    *FI
      * SFLRCD invalid
     C                   IF        *IN98
     C  N99              Z-ADD     ##RR          ##SFRC               99        *
      * SFLNXTCHG
     C                   SETON                                        84
     C                   ELSE
      * SFLRCD valid
      * SFLNXTCHG
     C                   SETOFF                                       84
     C                   EVAL      #1SEL = ' '
     C                   END                                                    FI *IN98
      *================================================================
     CSR   DCEXIT        ENDSR
      /EJECT
     CSR   FBRQRL        BEGSR
      *================================================================
      * Request subfile reload
      *================================================================
     C                   MOVEL     'Y'           W0RSF
      *================================================================
     CSR   FBEXIT        ENDSR
      /EJECT
     CSR   MBFL#1        BEGSR
      *================================================================
      * Move @C8REMU fields to subfile
      *================================================================
     C                   EVAL      #1SEL = ' '
     C                   MOVEL     C8UXU1        #1UXU1                         NonComp Stm1 St
     C                   MOVEL     C8UWU1        #1UWU1                         ShipTo Est Stm
     C                   MOVEL     C8CDAB        #1CDAB                         Ship To Cust Ty
     C                   MOVEL     C8UYU1        #1UYU1                         NonComp Stm2 St
     C                   MOVEL     C8UZU1        #1UZU1                         Compliancy Stm1
     C                   MOVEL     C8U0U1        #1U0U1                         Compliancy Stm2
     C                   MOVEL     C8VSST        #1VSST                         Record Status
     C                   Z-ADD     C8MJDT        #1MJDT                         Create Date
     C                   Z-ADD     C8BETM        #1BETM                         Create Time
     C                   MOVEL     C8CCVN        #1CCVN                         Create User
     C                   MOVEL     C8CDVN        #1CDVN                         Create Program
     C                   Z-ADD     C8MKDT        #1MKDT                         Change Date
     C                   Z-ADD     C8BFTM        #1BFTM                         Change Time
     C                   MOVEL     C8CEVN        #1CEVN                         Change User
     C                   MOVEL     C8CFVN        #1CFVN                         Change Program
     C                   MOVEL     C8CAAB        #1CAAB                         Regulation Code
     C                   MOVEL     C8CBAB        #1CBAB                         Regulation ID
     C                   MOVEL     C8CCAB        #1CCAB                         Regulation Orig
     C                   MOVEL     C8UVU1        #1UVU1                         Regulation Desc
     C                   MOVEL     C8OHSC        #1OHSC                         Default Regulat
     C                   EVAL      #1SEL = ' '                                  *SFLSEL
      *================================================================
     CSR   MBEXIT        ENDSR
      /EJECT
     CSR   MEIZ#2        BEGSR
      *================================================================
      * Initialise subfile control
      *================================================================
     C                   EVAL      #2UVU1 = ' '                                 Regulation Desc
     C                   EVAL      #2CAAB = ' '                                 Regulation Code
     C                   EVAL      #2CBAB = ' '                                 Regulation ID
     C                   EVAL      #2CCAB = ' '                                 Regulation Orig
      *================================================================
     CSR   MEEXIT        ENDSR
      /EJECT
     CSR   SARVGN        BEGSR
      *================================================================
      * RTV 1st Rcd (get CO) RT - Company Customer  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KPSSA         KLIST
     C                   KFLD                    EOAIC3                         Company Number
      * Setup key
     C                   Z-ADD     *ZERO         EOAIC3                         Company Number
      * Establish starting position
     C     KPSSA         SETLL     @EOREXM                                      *
     C                   READ      @EOREXM                                90    *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR1007'     W0RTN
      * USER: Processing if Data record not found
     C                   MOVEL     'Y2U0005'     W0RTN                          *Return code
     C                   GOTO      SAEXIT
     C                   ENDIF
      *
      * USER: Process Data record
     C                   DOW       NOT *IN90
     C                   Z-ADD     EOAIC3        YL0001                         Company Number
     C                   GOTO      SAEXIT                                       *QUIT
     C                   READ      @EOREXM                                90    *
     C                   ENDDO
      *================================================================
     CSR   SAEXIT        ENDSR
      /EJECT
     CSR   SBRVGN        BEGSR
      *================================================================
      * RTV Reg Code Mst RT - Regulation Code Mst  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KPSSB         KLIST
     C                   KFLD                    C8CAAB                         Regulation Code
      * Setup key
     C                   EVAL      C8CAAB = ' '                                 Regulation Code
      * Establish starting position
     C     KPSSB         SETLL     @C8REMU                                      *
     C                   READ      @C8REMU                                90    *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR5316'     W0RTN
      * USER: Processing if Data record not found
     C                   MOVEL     'Y2U0005'     W0RTN                          *Return code
     C                   GOTO      SBEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * RTV/CRT PFS Reg Code RT - PFS Regulation Code Mst  * 
     C                   DOW       NOT *IN90
     C                   EXSR      SCRVGN
     C                   READ      @C8REMU                                90    *
     C                   ENDDO
      *================================================================
     CSR   SBEXIT        ENDSR
      /EJECT
     CSR   SCRVGN        BEGSR
      *================================================================
      * RTV/CRT PFS Reg Code RT - PFS Regulation Code Mst  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSC         KLIST
     C                   KFLD                    C7B4AB                         PFS Regulation
     C                   KFLD                    C7B8AB                         PFS Regulation
      * Setup key
     C                   MOVEL     C8CAAB        C7B4AB                         PFS Regulation
     C                   MOVEL     C8CBAB        C7B8AB                         PFS Regulation
      * Establish starting position
     C     KRSSC         CHAIN     @C7REMN                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR5309'     W0RTN
      * USER: Processing if Data record not found
      * Create Regulation Master - PFS Regulation Code Mst  * 
     C                   EXSR      SDCRRC
     C                   GOTO      SCEXIT
     C                   ENDIF
      *
      * USER: Process Data record
     C                   IF        NOT *IN90
     C                   MOVEL     'Y2U0003'     W0RTN                          *Return code
     C                   ENDIF
      *================================================================
     CSR   SCEXIT        ENDSR
      /EJECT
     CSR   SDCRRC        BEGSR
      *================================================================
      * Create Regulation Master - PFS Regulation Code Mst  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Move all fields to @C7REMM
     C                   MOVEL     C8CAAB        WAB4AB                         PFS Regulation
     C                   MOVEL     C8CBAB        WAB8AB                         PFS Regulation
     C                   MOVEL     C8CCAB        WAB5AB                         PFS Regulation
     C                   MOVEL     C8UVU1        WAUOU1                         PFS Regulation
     C                   MOVEL     C8UWU1        WAUPU1                         PFS ShipTo EstS
     C                   MOVEL     C8CDAB        WACFAB                         PFS Ship To Cus
     C                   MOVEL     C8OHSC        WAOGSC                         PFS Default Reg
     C                   MOVEL     C8UXU1        WAUQU1                         PFS NonComp Stm
     C                   MOVEL     C8UYU1        WAURU1                         PFS NonComp Stm
     C                   MOVEL     C8UZU1        WAUSU1                         PFS Compliancy
     C                   MOVEL     C8U0U1        WAUTU1                         PFS Compliancy
     C                   MOVEL     C8VSST        WAUWSX                         PFS Record Stat
     C                   Z-ADD     *ZERO         WAUXSX                         PFS Process Sta
     C                   EVAL      WAV3SX = ' '                                 PFS Error Reaso
     C                   Z-ADD     C8MJDT        WAAHNY                         PFS Create Date
     C                   Z-ADD     C8BETM        WAAINY                         PFS Create Time
     C                   Z-ADD     C8MKDT        WAAJNY                         PFS Change Date
     C                   Z-ADD     C8BFTM        WAAKNY                         PFS Change time
      *
      * USER: Processing before Data update
      * Set Create Stamp      IF
     C                   Z-ADD     *ZERO         WAUXSX                         PFS Process Sta
     C                   Z-ADD     ##JDT         WAAHNY                         PFS Create Date
     C                   Z-ADD     ##JTM         WAAINY                         PFS Create Time
     C     KLCRSD        KLIST
     C                   KFLD                    WAB4AB                         PFS Regulation
     C                   KFLD                    WAB8AB                         PFS Regulation
      * Check for duplicate primary key
     C     KLCRSD        SETLL     @C7REMM                                90    *
     C                   IF        *IN90
     C                   MOVEL     'USR5310'     W0RTN
      * Send message 'PFS Regulation Code Ms EX'
     C                   MOVEL     'USR5310'     ZAMSID
     C                   EXSR      ZASNMS
     C                   GOTO      SDEXIT
     C                   ENDIF
      *
     C                   WRITE     @C7REMM                              91      *
      *
      * Write error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
     C                   ENDIF
      *================================================================
     CSR   SDEXIT        ENDSR
      /EJECT
     CSR   SERVGN        BEGSR
      *================================================================
      * RTV System Value Alpha RT - System Values  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSE         KLIST
     C                   KFLD                    DPDOCD                         System Value Co
      * Setup key
     C                   EVALR     DPDOCD = ' '                                 System Value Co
     C                   MOVEL     'DTALIB'      DPDOCD                         System Value Co
      * Establish starting position
     C     KRSSE         CHAIN     @DPRETD                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0759'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   EVAL      YL0005 = ' '                                 System Value Al
     C                   GOTO      SEEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     DPBXTX        YL0005                         System Value Al
     C                   ENDIF
      *================================================================
     CSR   SEEXIT        ENDSR
      /EJECT
     CSR   SFRVGN        BEGSR
      *================================================================
      * RTV Alpha Value 2     RT - Company Values  * Get Email Address
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   EVAL      YL0006 = ' '                                 System Value Al
      * Define keylist
     C     KRSSF         KLIST
     C                   KFLD                    KMAIC3                         Company Number
     C                   KFLD                    KMV8CD                         Company Value C
      * Setup key
     C                   Z-ADD     YL0001        KMAIC3                         Company Number
     C                   EVALR     KMV8CD = ' '                                 Company Value C
     C                   MOVEL     'REGCODES'    KMV8CD                         Company Value C
      * Establish starting position
     C     KRSSF         CHAIN     @KMREHC                            90        *
      * Data record not found
     C   90              MOVEL     'USR2221'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     KMBXTX        YL0006                         System Value Al
     C                   ENDIF
      *================================================================
     CSR   SFEXIT        ENDSR
      /EJECT
     CSR   SGRVGN        BEGSR
      *================================================================
      * RTV Program Setup w/Co RT - User Profile Control  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSG         KLIST
     C                   KFLD                    DRAJVN                         User Profile Na
      * Setup key
     C                   MOVEL     WN0001        DRAJVN                         User Profile Na
      * Establish starting position
     C     KRSSG         CHAIN     @DRRETH                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0763'     W0RTN
      * USER: Processing if Data record not found
     C                   MOVEL     'Y2U0005'     W0RTN                          *Return code
     C                   GOTO      SGEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   Z-ADD     DRAIC3        YL0011                         Company Number
     C                   MOVEL     DRBUVN        WN0002                         User Code Model
     C                   ENDIF
      *================================================================
     CSR   SGEXIT        ENDSR
      /EJECT
     CSR   SHRVGN        BEGSR
      *================================================================
      * RTV Appl. Profile      RT - User Application Profile  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSH         KLIST
     C                   KFLD                    DTAJVN                         User Profile Na
     C                   KFLD                    DTDNCD                         Application Cod
      * Setup key
     C                   MOVEL     WL0001        DTAJVN                         User Profile Na
     C                   MOVEL     WL0002        DTDNCD                         Application Cod
      * Establish starting position
     C     KRSSH         CHAIN     @DTRETE                            90        *
      * Data record not found
     C   90              MOVEL     'USR0767'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   Z-ADD     DTAIC3        WL0003                         Company Number
     C                   MOVEL     DTAJCD        WL0004                         Warehouse Code
     C                   ENDIF
      *================================================================
     CSR   SHEXIT        ENDSR
      /EJECT
     CSR   SIRVGN        BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSI         KLIST
     C                   KFLD                    WQSI01                         Application Cod
      * Setup key
     C                   EVALR     WQSI01 = ' '                                 Application Cod
     C                   MOVEL     'OMS'         WQSI01                         Application Cod
      * Establish starting position
     C     KRSSI         SETLL     @DNRESF                                      *
     C     KRSSI         READE     @DNRESF                                90    *
      * Data record not found
     C   90              MOVEL     'USR0755'     W0RTN
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C                   DOW       NOT *IN90
      * PAR = DB1 By name
     C                   IF        DNRSCD = ' '
     C                   MOVEL     DNAUNA        WUAUNA                         Description
     C                   ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                   EXSR      SJRVGN
     C                   END                                                    *FI
     C     KRSSI         READE     @DNRESF                                90    *
     C                   ENDDO
      *================================================================
     CSR   SIEXIT        ENDSR
      /EJECT
     CSR   SJRVGN        BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSJ         KLIST
     C                   KFLD                    WQSJ01                         Application Cod
      * Setup key
     C                   MOVEL     DNRSCD        WQSJ01                         Application Cod
      * Establish starting position
     C     KRSSJ         SETLL     @DNRESF                                      *
     C     KRSSJ         READE     @DNRESF                                90    *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0755'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   EVAL      WUAUNA = ' '                                 Description
     C                   MOVEL     'Y2U0005'     W0RTN                          *Return code
     C                   GOTO      SJEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   DOW       NOT *IN90
     C                   MOVEL     DNAUNA        WUAUNA                         Description
     C     KRSSJ         READE     @DNRESF                                90    *
     C                   ENDDO
      *================================================================
     CSR   SJEXIT        ENDSR
      /EJECT
     CSR   UASUBR        BEGSR
      *================================================================
      * Email created and sent
      *================================================================
     C                   Z-ADD     1             ZQ
     C     'Co'          CAT(P)    YL0002:ZQ     YL0003                         Email Subject U
     C                   Z-ADD     1             ZQ
     C     YL0003        CAT(P)    @CN(001):ZQ   YL0003                         Email Subject U
     C                   Z-ADD     0             ZQ
     C     @CN(002)      CAT(P)    @CN(003):ZQ   YL0004                         Email Message U
     C                   Z-ADD     1             ZQ
     C     YL0004        CAT(P)    YL0002:ZQ     YL0004                         Email Message U
      * RTV System Value Alpha RT - System Values  * 
     C                   EXSR      SERVGN
      * Concatenate 'TEST' to Email Subject Line if Not Prod Data.
      * CASE:
      *  - NOTc1
      *   |- c1    : LCL.System Value Alpha is PRKFLIB
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        YL0005 = @CN(004)
     C                   ELSE
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   IF        Y0CX01 = '1'
     C                   Z-ADD     1             ZQ
     C     YL0003        CAT(P)    @CN(005):ZQ   YL0003                         Email Subject U
     C                   END                                                    *FI
      * Exc ESNDMAIL Generic  IF
      * Execute ESNDMAIL to Send Email Message.
      * RTV Alpha Value 2     RT - Company Values  * Get Email Address
     C                   EXSR      SFRVGN
      * CASE: LCL.Email Address is Entered
      * Exc ESNDMAIL Generic  CL - /UT User Programs  * Send Email
     C                   IF        YL0006 <> ' '
     C                   CALL      'PUE8UPC'                            90      Exc ESNDMAIL Ge
     C                   PARM      YL0006        WQ0004                         Email Address
     C                   PARM      YL0003        WQ0005                         Email Subject U
     C                   PARM      YL0004        WQ0006                         Email Message U
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PUE8UPC'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
     C                   END
     C                   END                                                    *FI
      *================================================================
     CSR   UAEXIT        ENDSR
      /EJECT
     CSR   UBSUBR        BEGSR
      *================================================================
      * Modifications History
      *================================================================
      * Eric L 05-2023 WI572 CA Prop 12 Creation
      *================================================================
     CSR   UBEXIT        ENDSR
      /EJECT
     CSR   Y0SET         BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR   Y0EXIT        ENDSR
      /EJECT
     CSR   Y8TST         BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                   Z-ADD     @#RWCL        ZINPOS
     C     ZINPOS        DIV       256           W0CRW
     C                   MVR                     W0CCL
      * Cursor in the subfile record area
      * Reset cursor position to the basic (first) record for lookup
     C                   IF        ZINPOS >= 02304 AND
     C                             ZINPOS <= 05632
     C     W0CRW         SUB       09            W0CSRR
     C     02304         ADD       W0CCL         ZINPOS
      * Calculate rrn of the cursor position
     C                   ADD       ##SFRC        W0CSRR
     C                   ENDIF
     C                   EVALR     W0CFL = ' '
     C                   Z-ADD     1             F
     C     ZINPOS        LOOKUP    W0END(F)                           96  96    LE
     C                   IF        *IN96 AND
     C                             ZINPOS >= W0BEG(F)
     C                   MOVEL     W0NAM(F)      W0CFL
     C                   ENDIF
     C                   IF        W0CFL = ' '
     C                   Z-ADD     0             W0CSRR
     C                   ENDIF
      *================================================================
     CSR   Y8EXIT        ENDSR
      /EJECT
     CSR   Y9CLR         BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR   Y9EXIT        ENDSR
      /EJECT
     CSR   ZASNMS        BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C                   IF        ZAPGMQ = ' '
     C                   MOVEL     ##PGM         ZAPGMQ
     C                   END
      * If no message file specified, use default
     C                   IF        ZAMSGF = ' '
     C                   MOVEL     ZADFMF        ZAMSGF
     C                   END
     C                   CALL      'Y2SNMGC'
     C                   PARM                    ZAPGMQ                         Program queue
     C                   PARM                    ZAPGRL                         Rel queue
     C                   PARM                    ZAMSID                         Message ID
     C                   PARM                    ZAMSGF                         Message file
     C                   PARM                    ZAMSDA                         Message data
     C                   PARM                    ZAMSTP                         Message type
     C                   PARM      'Y'           YILE
      * Clear all fields for default mechanism next time
     C                   EVAL      ZAPGMQ = ' '
     C                   EVAL      ZAPGRL = ' '
     C                   EVAL      ZAMSID = ' '
     C                   EVAL      ZAMSGF = ' '
     C                   EVAL      ZAMSDA = ' '
     C                   EVAL      ZAMSTP = ' '
      *================================================================
     CSR   ZAEXIT        ENDSR
      /EJECT
     CSR   ZDVPMT        BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                   EVAL      YPMTFD = ' '
     C                   Z-ADD     *ZERO         YAFSCH
     C                   Z-ADD     *ZERO         YPMRRN
      *
      *
      * Extract cursor row and column
     C                   IF        *IN04
     C     @#RWCL        DIV       256           ZHCSRW
     C                   MVR                     ZHCSCL
      *
      * Save cursor position for redisplay
     C                   Z-ADD     ZHCSRW        ZZCSRW                         Row
     C                   Z-ADD     ZHCSCL        ZZCSCL                         Column
      *
      * Save sfl rrn at top of page
     C                   Z-ADD     @#SFRC        Y#SFRC
      *
      * Initialise sfl workfields
     C                   Z-ADD     9             ZHSTRW
     C                   Z-ADD     21            ZHNDRW
     C                   Z-ADD     1             ZHRLEN
     C                   Z-ADD     *ZERO         ZHF4RW
     C                   Z-ADD     *ZERO         ZHWK1#
      *
      * Resolve prompt row number on sfl
     C                   IF        ZHCSRW >= ZHSTRW AND
     C                             ZHCSRW <= ZHNDRW
     C     ZHCSRW        SUB       ZHSTRW        ZHWK1#
     C     ZHWK1#        DIV       ZHRLEN        ZHWK1#
     C                   Z-ADD     ZHWK1#        YZSFDL
     C     ZHWK1#        MULT      ZHRLEN        ZHWK1#
     C     ZHCSRW        SUB       ZHWK1#        ZHF4RW
     C                   END
      *
      * Error if user defined prompting is not specified.
     C                   IF        YPMTFD = ' '
     C                   IF        W0PMT = 'N'
     C                   MOVEL     '*NONE'       YPMTFD
     C                   MOVEL     'Y'           W0HLP
     C                   MOVEL     'Y'           ZAFSMS
      * Send error message.
     C                   MOVEL     'Y2U0101'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END
     C                   END
      *
      * Save first changed  rrn
      *
     C                   IF        ZHCSRW >= ZHSTRW AND
     C                             ZHCSRW <= ZHNDRW AND
     C                             YPMTFD <> '*NONE'
     C                   IF        ##RR <> *ZERO
     C                   READC     #SFLRCD                                92    *
     C                   IF        NOT *IN92
     C                   Z-ADD     ##RR          YAFSCH
     C                   SETON                                        84        *
     C                   UPDATE    #SFLRCD
     C                   END
     C                   END
      *
      * Calculate rrn for prompt slf record
     C     ZHCSRW        SUB       ZHSTRW        ZHWK1#
     C     ZHWK1#        DIV       ZHRLEN        ZHWK1#
     C     ZHWK1#        ADD       Y#SFRC        YPMRRN
      *
      * Chain to sfl record
     C     YPMRRN        CHAIN     #SFLRCD                            9292      *
     C                   IF        NOT *IN92
     C                   SETON                                        84        *
     C                   UPDATE    #SFLRCD
     C                   ELSE
     C                   Z-ADD     *ZERO         YPMRRN
     C                   END
      *
      * Test first changed rrn/prompt rrn
     C                   IF        YAFSCH = *ZERO
     C                   Z-ADD     YPMRRN        YAFSCH
     C                   END
      *
      * If prompt rrn < first changed rrn
     C                   IF        YPMRRN <> *ZERO AND
     C                             YPMRRN < YAFSCH
     C                   Z-ADD     YPMRRN        YAFSCH
     C                   END
      *
     C                   END
      *
     C                   END
      *================================================================
     CSR   ZDEXIT        ENDSR
      /EJECT
     CSR   ZHHPKY        BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                   MOVEL     'Y'           W0HLP
      *
      * Extract cursor row and column
     C     @#RWCL        DIV       256           ZHCSRW                         Row
     C                   MVR                     ZHCSCL                         Column
      *
      * Save cursor position for redisplay
     C                   Z-ADD     ZHCSRW        ZZCSRW                         Row
     C                   Z-ADD     ZHCSCL        ZZCSCL                         Column
      *
      *
     C                   CALL      'YDDSHPR'
     C                   PARM      ##PGM         W0HPMB                         Help text sourc
     C                   PARM      *BLANK        YYHPFL                         Help text file
     C                   PARM      *BLANK        YYHPLB                         Help text libra
     C                   PARM                    W0RTN
     C                   PARM      '*CSRLOC'     YYHLVN                         Help label
     C                   PARM      '*NORMAL'     YYUSOP                         Options
     C                   PARM      ZHCSRW        YYRW                           Row
     C                   PARM      ZHCSCL        YYCL                           Column
     C                   PARM      *ZERO         YYLGCT                         # of grps
     C                   PARM      *BLANK        YYLGVN                         Label grps
      *
      * Clear set cursor DDS indicator
     C  N94              MOVEL     'OFF'         WCSRLC
     C  N94              SETON                                        94        *
      *================================================================
     CSR   ZHEXIT        ENDSR
      /EJECT
     CSR   ZXEXPG        BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
     C                   EXSR      ZYEXPG
      *================================================================
     CSR   ZXEXIT        ENDSR
      /EJECT
     CSR   ZYEXPG        BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                   SETON                                        LR
      *
      * Exit program
     C                   RETURN
      *
      *================================================================
     CSR   ZYEXIT        ENDSR
      /EJECT
     CSR   ZZINIT        BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C                   IF        W0ICL = ' '
     C                   MOVEL     'Y'           W0ICL                          *Initial call
     C                   ELSE
     C                   MOVEL     'N'           W0ICL
     C                   END
     C                   EVALR     P0RTN = ' '
     C                   EVALR     W0RTN = ' '
     C                   EVAL      W0RSL = ' '
     C                   EVAL      W0RSF = ' '
     C                   MOVEL     *ZEROS        W0RTW
     C                   MOVEL     '400'         W0ENV
      * Clear all neither parameters
     C                   EVAL      P1G3TX = ' '                                 PRT Description
     C                   EVAL      P1WRST = ' '                                 PRT Printer Dev
     C                   EVAL      P1WSST = ' '                                 PRT Hold Output
     C                   EVAL      P1WTST = ' '                                 PRT Save Output
     C                   Z-ADD     *ZERO         P1DYNB                         PRT Number of C
     C                   EVAL      P1WUST = ' '                                 PRT Night Queue
     C                   EVAL      P1BVVN = ' '                                 PRT Night Queue
      *
      * Retrieve job attributes
     C                   CALL      'Y2RTJCR'
     C                   PARM                    PGMDS
      * Setup job date/time
     C                   Z-ADD     ##SD7         ##JDT
     C                   TIME                    ##JTM
      * Update screen time
     C                   TIME                    ##TME
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WAUXSX                         PFS Process Sta
     C                   Z-ADD     *ZERO         WAAHNY                         PFS Create Date
     C                   Z-ADD     *ZERO         WAAINY                         PFS Create Time
     C                   Z-ADD     *ZERO         WAAJNY                         PFS Change Date
     C                   Z-ADD     *ZERO         WAAKNY                         PFS Change time
      * Obtain default message file
     C     *DTAARA       DEFINE    CAMGFLA       ZADFMF
     C                   IN        ZADFMF
      * Define work field Description
     C                   EVAL      WUAUNA = ' '
      * Define work field USR Description 40
     C                   EVAL      WUDSC4 = ' '
      * Define work field USR Description 40   2
     C                   EVAL      WUDE40 = ' '
      * Flag no *SET CURSOR in the program
     C                   MOVE      'N'           YSETCS
     C                   EVALR     WCSRLC = ' '
      * Define *Synon program work fields
     C                   EVAL      W0CFL = ' '                                  *Cursor field
     C                   Z-ADD     *ZEROS        W0CRW                          *Cursor row
     C                   Z-ADD     *ZEROS        W0CCL                          *Cursor column
      * Move main file information to JOB context
     C                   MOVE      @1FFL         ZZFFL                          Main file name
     C                   MOVE      @1FLB         ZZFLB                          Main file lib
     C                   MOVE      @1FMB         ZZFMB                          Main file mbr
     C                   CALL      'Y2QLVNR'
     C                   PARM                    ZZFFL
     C                   PARM                    ZZFLB
     C                   PARM                    ZZFQL                          LIBRARY/FILE
      * Dummy move for compiler
     C                   MOVE      '0'           @CN#(1)
     C                   MOVEL     'Y'           W0PMT
      * Define local variables for subroutine SHRVGN.
     C                   EVAL      WL0001 = ' '
     C                   EVAL      WL0002 = ' '
     C                   Z-ADD     *ZERO         WL0003
     C                   EVAL      WL0004 = ' '
      * Define local work field Company Number
     C                   Z-ADD     *ZERO         YL0001
      * Define local work field Company Alpha
     C                   EVAL      YL0002 = ' '
      * Define local work field Email Subject USR
     C                   EVAL      YL0003 = ' '
      * Define local work field Email Message USR
     C                   EVAL      YL0004 = ' '
      * Define local work field System Value Alpha
     C                   EVAL      YL0005 = ' '
      * Define local work field Email Address
     C                   EVAL      YL0006 = ' '
      * Define local work field Generic Message 80 USR
     C                   EVAL      YL0007 = ' '
      * Define local work field Return Code Usr
     C                   EVAL      YL0008 = ' '
      * Define local work field Record Status
     C                   EVAL      YL0009 = ' '
      * Define local work field System Value Numeric
     C                   Z-ADD     *ZERO         YL0010
      * Define null work field Warehouse Code
     C                   EVAL      YN0001 = ' '
      * Define null work field Company Number
     C                   Z-ADD     *ZERO         YN0002
      * Define null work field Salesperson Code
     C                   EVAL      YN0003 = ' '
      * Define null work field Allow Multi-Company
     C                   EVAL      YN0004 = ' '
      * Define null work field Default Printer
     C                   EVAL      YN0005 = ' '
      * Define local work field Company Number
     C                   Z-ADD     *ZERO         YL0011
      * Define local work field Warehouse Code
     C                   EVAL      YL0012 = ' '
      * *DTAARA = *COMPANY N
     C     *DTAARA       DEFINE    YYCOTXA       ##CMP
     C                   IN        *DTAARA
      *................................................................
     C                   Z-ADD     13            ##SFPG                         SFLPAG
     C                   Z-ADD     1             ##SFRC
      * Maximum record number
     C                   Z-ADD     *ZERO         ##RRMX
      * Scan limit
     C                   Z-ADD     000000500     W0SLM
      * Subfile pages
     C                   Z-ADD     1             W0SPG
      * Processed Subfile record
     C                   Z-ADD     0             W0RR0
      *................................................................
     C                   EVAL      W0GRP = ' '
      * USER: Initialize program
      * Modifications History
     C                   EXSR      UBSUBR                                       Modifications H
      *
     C                   EVAL      WN0001 = ' '                                 User Profile Na
      *
      * VAL Set Inter. Access  IF
     C                   MOVEL     ##USR         WN0001                         User Profile Na
      *
     C                   EVAL      WN0002 = ' '                                 User Code Model
      *
      * VAL User/Application   IF
      * RMC 5/11/09 Rtv default company from user profile --
      *   Override user code model company if it exists
      * RTV Program Setup w/Co RT - User Profile Control  * 
     C                   EXSR      SGRVGN
      * User Profile Record Not found
      * CASE: PGM.*Return code is *Record does not exist
      * SET Message Queue Dest US - /UT User Source  * 
     C                   IF        W0RTN = @CN(010)
     C                   MOVEL     '*PRV '       ZAPGRL                         PREVIOUS
      * Setup message data for message
     C                   MOVEL     WN0001        ZA0002                         User Profile Na
     C                   MOVEL     'OMS'         ZA0003                         Application Cod
      * Send message 'Application access denied'
     C                   MOVEL     'USR0810'     ZAMSID
     C                   MOVEL     '*PRV '       ZAPGRL                         Rel queue
     C                   MOVEL     '*COMP  '     ZAMSTP                         Message type
     C                   EXSR      ZASNMS
      *
     C                   MOVEL     'Y2U9999'     P0RTN                          *Return code
     C                   EXSR      ZYEXPG
     C                   END                                                    *FI
      * CASE: PAR.User Code Model is equal to blank
      * RTV Appl. Profile      RT - User Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                   IF        WN0002 = ' '
     C                   MOVEL(P)  WN0001        WL0001                         User Profile Na
     C                   MOVEL(P)  'OMS'         WL0002                         Application Cod
     C                   EXSR      SHRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0003        YN0002                         Company Number
     C                   MOVEL(P)  WL0004        YL0012                         Warehouse Code
     C                   ELSE
      * CASE: *OTHERWISE
      * RTV Appl. Profile      RT - User Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  WN0002        WL0001                         User Profile Na
     C                   MOVEL(P)  'OMS'         WL0002                         Application Cod
     C                   EXSR      SHRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0003        YN0002                         Company Number
     C                   MOVEL(P)  WL0004        YL0012                         Warehouse Code
     C                   END                                                    *FI
     C                   MOVEL     YL0012        YN0001                         Warehouse Code
      * Return code when not normal for Application Profile
      * CASE: PGM.*Return code is *Normal
     C                   IF        W0RTN = ' '
     C                   ELSE
      * CASE: *OTHERWISE
      * SET Message Queue Dest US - /UT User Source  * 
     C                   MOVEL     '*PRV '       ZAPGRL                         PREVIOUS
      * Setup message data for message
     C                   MOVEL     WN0001        ZA0004                         User Profile Na
     C                   MOVEL     'OMS'         ZA0005                         Application Cod
      * Send message 'Application access denied'
     C                   MOVEL     'USR0810'     ZAMSID
     C                   MOVEL     '*PRV '       ZAPGRL                         Rel queue
     C                   MOVEL     '*COMP  '     ZAMSTP                         Message type
     C                   EXSR      ZASNMS
      *
     C                   MOVEL     'Y2U9999'     P0RTN                          *Return code
     C                   EXSR      ZYEXPG
     C                   END                                                    *FI
      * Override company with User profile control's company if found
      * CASE: LCL.Company Number is not equal to zero
     C                   IF        YL0011 <> 0
     C                   Z-ADD     YL0011        YN0002                         Company Number
      * Get prod warehouse, if the appl got a warehouse
      * CASE: LCL.Warehouse Code is Not Blanks
      * RTV Prod Whse for Co  XF - Warehouse  * 
     C                   IF        YL0012 <> ' '
     C                   CALL      'PNKDXFR'                            90      RTV Prod Whse f
     C                   PARM      *BLANK        W0RTN
     C                   PARM      *BLANK        WQ0019                         Warehouse Code
     C                   PARM      YL0011        WQ0020                         Shipping Compan
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PNKDXFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        99        *
     C                   END
     C                   END                                                    *FI
     C                   END                                                    *FI
      * SET Screen Headings    IF
      * RTV Applic. Group Desc RT - Application  * 
     C                   EXSR      SIRVGN
     C                   EVAL      WUDSC4 = ' '                                 USR Description
     C                   MOVEL     WUAUNA        WUDSC4                         USR Description
      * CLC Center Txt Str 40  US - /UT User Source  * 
     C                   MOVEA     WUDSC4        UCT                            LOAD ARRAY
     C                   Z-ADD     40            UX                2 0          SET COUNTER
     C     UX            DOWGT     0
     C     UCT(UX)       IFEQ      ' '
     C                   SUB       1             UX
     C                   ELSE
     C                   Z-ADD     UX            UXH               2 0
     C                   Z-ADD     0             UX
     C                   END
     C                   END
     C     40            SUB       UXH           UX
     C     UX            DIV       2             UX
     C     UX            IFGT      0
     C                   MOVE      *BLANKS       UCT
     C                   MOVEA     WUDSC4        UCT(UX)
     C                   END
     C                   MOVEA     UCT           WUDE40                         LOAD OUTPUT
      * MOV Appl Desc-Co Head  US - /UT User Source  * 
     C                   MOVE      WUDE40        ##CMP            40
      * Initialise subfile control
     C                   EXSR      MEIZ#2
      *================================================================
     CSR   ZZEXIT        ENDSR
** W0BEG
01026020530206602078023060230902322
023340234602378
** W0END
01103020620206702080023060231802323
023360237502378
** W0NAM
#2ST1     #2CAAB    #2CBAB    #2CCAB    #1SEL     #1CAAB    #1CBAB
#1CCAB    #1UVU1    #1OHSC
** @CN
00001 Regulation Codes
00002 Regulation Codes sent to
00003 Carlisle - Co
00004 PRKFLIB
00005 - TEST
00006 Regulation Code Master se
00007 nt to Carlisle - Co
00008 PUZRPFR
00009 Compliancy Listing
00010 Y2U0005
