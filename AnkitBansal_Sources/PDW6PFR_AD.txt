// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDW6PFR
// ?Date: 14.08.2025 Time: 12:04:42
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('OMS');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


// WRK.USR Display field = CND.no
WRK.USR_Display_field = 'N';

//?USER: Record selection processing

// Call program UPD Copy Order Array   XF.
CALL PROGRAM(UPD Copy Order Array   XF) ('PDW1XFR');
PARAMETER(DB1.Company_Number);
PARAMETER(DB1.Order_Number);
PARAMETER('RT');
PARAMETER(PAR.Record_Found_USR);

CASE;

// IF PAR.Record Found USR is Record Not Found
IF PAR.Record_Found_USR = 'N';

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?USER: On print of first page format

// 1PG.Company Number = PAR.Company Number
X1PG_Company_Number = PAR.Company_Number;

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(X1PG_Company_Number);
PARAMETER(X1PG_Company_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// 1PG.User Original Entry = PAR.User Original Entry
X1PG_User_Original_Entry = PAR.User_Original_Entry;

EXECUTE FUNCTION(RTV Profile Desc.      RT) TYPE(RTVOBJ) FILE(CADRREP)          AC1253264;
PARAMETER(X1PG_User_Original_Entry);
PARAMETER(X1PG_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// 1PG.Date of Original Entry = PAR.Date of Original Entry
X1PG_Date_of_Original_Entry = PAR.Date_of_Original_Entry;

//?USER: Null report processing

// Execute function CLC Set for Null Rpt   US.
EXECUTE FUNCTION(CLC Set for Null Rpt   US) TYPE(EXCUSRSRC) ('PDUUUFR');
{
 C                     MOVEL'Y'       W0AP1P
 C                     MOVEL'Y'       W0NEWP
}


// WRK.USR Display field = CND.yes
WRK.USR_Display_field = 'Y';

//?USER: Print required level headings

// SUPPRESSED PRINT Accounting Company Number header format

// SUPPRESSED PRINT Date of Original Entry header format

// SUPPRESSED PRINT User Original Entry header format

//?USER: On print of detail format

// CUR.USR Shortened name = DB1.Ship To Name
CUR.USR_Shortened_name = DB1.Ship_To_Name;

EXECUTE FUNCTION(RTV Qty & Wght Ordered RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1455362;
PARAMETER(DB1.Company_Number);
PARAMETER(CUR.Order_Number);
PARAMETER(CUR.Order_Quantity);
PARAMETER(CUR.Weight_Ordered);
{
 //?USER: Initialize routine

 // PAR.Quantity Ordered = CON.*ZERO
 PAR.Quantity_Ordered = *ZERO;

 // PAR.Weight Ordered = CON.*ZERO
 PAR.Weight_Ordered = *ZERO;

 //?USER: Process Data record

 CASE;

 // IF DB1.Detail Line Status is Not cancelled
 IF DB1.Detail_Line_Status = 'L'/'A'/'C'/'R'/'E'/'H'/'I';

 // PAR.Quantity Ordered = PAR.Quantity Ordered + DB1.Quantity Ordered
 PAR.Quantity_Ordered = PAR.Quantity_Ordered + DB1.Quantity_Ordered;

 // PAR.Weight Ordered = PAR.Weight Ordered + DB1.Weight Ordered
 PAR.Weight_Ordered = PAR.Weight_Ordered + DB1.Weight_Ordered;

 ENDIF;

}


//?USER: Print required level totals

// SUPPRESSED PRINT User Original Entry totals format

// SUPPRESSED PRINT Date of Original Entry totals format

// SUPPRESSED PRINT Accounting Company Number totals format

