// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PODOXFR
// ?Date: 14.08.2025 Time: 03:36:48
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?***** Change Log and Comments
DO;

//?*****
//?* 12/4/00 Moved Item Balance Detail to the first purge in the
//?*       list so they are purged not depending on Item Balance.
//?*****
//?* 04/03/02 PKD Replaced purge Item Transaction Detail with purge
//?*       to history.
//?*****
//?** 08/10/2007 LJB FP1009
//?** Remove Item Transaction Detail from this program. It will
//?** have a different retention period and purge process.
//?** Removed company number, removed date calc routine - this is
//?** now done in the calling program. Date is passed in.
//?** Don't purge the Item Balance, only the the Item Values
//?*****
//?** Don't update chg dates with purge dates  E001078 LJB 11/2/10
//?*****
ENDDO;

//?** Purge Item Balance Detail
EXECUTE FUNCTION(UPD Prg Item Bal Dtl 2 RT) TYPE(RTVOBJ) FILE(CAB1REP)          AC1614242;
PARAMETER(PAR.USR_Purge_Date);
{
 //?USER: Initialize routine

 //?***** Change Log and Comments
 DO;

 //?** 12/1/00 new -  dont create qtemp rcd or check retention date.
 //?*****
 //?** 08/10/2007 LJB FP1009
 //?** Pass purge date in and purge records older than this date
 //?** if the quantity and weight are zeros and there is no
 //?** Item Lot Location record
 ENDDO;

 //?USER: Process Data record

 //?* Test qty & wt on hand, and prod date earlier than purge date.
 CASE;

 // IF DB1.Quantity on Hand - Weight EQ WRK.ZERO
 IF DB1.Quantity_on_Hand_Weight = WRK.ZERO;

 // AND DB1.Quantity on Hand - U/M1 EQ WRK.ZERO
 AND DB1.Quantity_on_Hand_UOM1 = WRK.ZERO;

 EXECUTE FUNCTION(Val Prod Date Exist   RT) TYPE(RTVOBJ) FILE(PDL5CPP)           AC1544117;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(DB1.Production_Date);
 PARAMETER(WRK.Record_Found_USR);
 {
  //?USER: Processing if Data record not found

  // PAR.Record Found USR = CND.Record Not Found
  PAR.Record_Found_USR = 'N';

  //?USER: Process Data record

  // PAR.Record Found USR = CND.Record Found
  PAR.Record_Found_USR = 'Y';

  QUIT;

 }

 //?** Purge Item Balance Detail & Item Lot Loc Trans
 CASE;

 // IF WRK.Record Found USR is Record Not Found
 IF WRK.Record_Found_USR = 'N';

 // AND DB1.Production Date LT PAR.USR Purge Date
 AND DB1.Production_Date < PAR.USR_Purge_Date;

 EXECUTE FUNCTION(CRT Item Bal Dtl Purge CR) TYPE(CRTOBJ) FILE(CAB1REP)          AC1849850;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(DB1.Production_Date);
 PARAMETER(DB1.Physical_Count_Weight);
 PARAMETER(DB1.Physical_Count_Qty_UOM1);
 PARAMETER(DB1.Physical_Count_Qty_UOM2);
 PARAMETER(DB1.Physical_Count_Qty_UOM3);
 PARAMETER(DB1.Physical_Count_Status);
 PARAMETER(DB1.Quantity_on_Hand_Weight);
 PARAMETER(DB1.Quantity_on_Hand_UOM1);
 PARAMETER(DB1.Quantity_on_Hand_UOM2);
 PARAMETER(DB1.Quantity_on_Hand_UOM3);
 PARAMETER(DB1.Quantity_In_Chill);
 PARAMETER(DB1.Weight_In_Chill);
 PARAMETER(DB1.Update_Exception_Status);
 PARAMETER(DB1.Physical_Start_Weight);
 PARAMETER(DB1.Physical_Start_UOM1);
 PARAMETER(DB1.Physical_Start_UOM2);
 PARAMETER(DB1.Physical_Start_UOM3);
 PARAMETER(DB1.Physical_Start_Date);
 PARAMETER(DB1.Unit_Cost_Per_Pound);
 PARAMETER(DB1.Last_Cost);
 PARAMETER(DB1.Value_of_On_Hand_Inventor);
 PARAMETER(DB1.Label_Date);
 PARAMETER(DB1.Item_Structure_Class_Code);
 PARAMETER(DB1.Item_Structure_Group_Code);
 PARAMETER(DB1.Item_Structure_Type_Code);
 PARAMETER(DB1.EDI_Status_1);
 PARAMETER(DB1.EDI_Status_2);
 PARAMETER(DB1.EDI_Status_3);
 PARAMETER(DB1.Record_Status);
 {
  //?USER: Processing before Data update

  //?** Don't replace change date with purge date-E001078 LJB 11/2/2010
 }

 EXECUTE FUNCTION(DLT Item Bal. Detail   DL) TYPE(DLTOBJ) FILE(CAB1REP)          AC1120964;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(DB1.Production_Date);
 ENDIF;

 ENDIF;

}


//?** Purge Item Values file, but not the Item Balance
EXECUTE FUNCTION(UPD Purge Inventory    RT) TYPE(RTVOBJ) FILE(CAB0REP)          AC1477859;
PARAMETER(PAR.USR_Purge_Date);
{
 //?USER: Initialize routine

 //?***** Change Log and Comments
 DO;

 //?*---------------------------------------------------------------*
 //?* 09/06/00 PKD Changed to process all Warehouses.
 //?* 12/01/00 RMC Dont create QTEMP rcds and change delete criteria
 //?         Moved purge for Item Bal Dtl,Item Trans to preceding XF
 //?*---------------------------------------------------------------*
 //?** 08/10/2007 LJB FP1009
 //?** Don't purge the Item Balance file - per Purva, 08/10/2007
 //?** Changed to purge by descending date
 //?*---------------------------------------------------------------*
 //?** Don't update chg dates with purge dates  E001078 LJB 11/2/10
 ENDDO;

 //?USER: Process Data record

 //?***** Commented code for Purge Item Valuse
 DO;

 //?** Don't update chg dates with purge dates  E001078 LJB 11/2/10
 ENDDO;

 //?* Don't purge the Item Balance, only the the Item Values
 CASE;

 // IF DB1.Record Status is Deleted
 IF DB1.Record_Status = 'D';

 // AND DB1.Job Date LT PAR.Purge Date USR
 AND DB1.Job_Date < PAR.Purge_Date_USR;

 EXECUTE FUNCTION(VAL Any Dtl Exists/Whs RT) TYPE(RTVOBJ) FILE(CAB1REP)          AC1478744;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(DB1.Item_Code);
 PARAMETER(PAR.Purge_Date_USR);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

 }

 //?** Check for existence of related files, purge if tests are met
 CASE;

 // IF PGM.*Return code is *Record does not exist
 IF PGM.*Return_code = 'Y2U0005';

 EXECUTE FUNCTION(VAL Trans Exists/Itm/W RT) TYPE(RTVOBJ) FILE(CAB7CPP)          AC1478745;
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(DB1.Item_Code);
 PARAMETER(PAR.Purge_Date_USR);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

 }

 //?Only delete if no bal detail, trans detail or prod sched exist
 CASE;

 // IF PGM.*Return code is *Record does not exist
 IF PGM.*Return_code = 'Y2U0005';

 EXECUTE FUNCTION(VAL Any Exist/Bal PurgeRT) TYPE(RTVOBJ) FILE(PDI8CPP)          AC1478760;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(PAR.Purge_Date_USR);
 PARAMETER(WRK.BLANK);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

 }

 //?** Purge Item Values file to tape file    FP1009 LJB
 CASE;

 // IF PGM.*Return code is *Record does not exist
 IF PGM.*Return_code = 'Y2U0005';

 EXECUTE FUNCTION(UPD Purge Item Balance RT) TYPE(RTVOBJ) FILE(PDKZCPP)          AC1478759;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(PAR.Purge_Date_USR);
 {
  //?USER: Initialize routine

  //?***** Change Log and Comments
  DO;

  //?*****
  //?** 10/01/2007 FP1009 LJB
  //?** Change purge routine to delete by descending date. Purge
  //?** date is passed in.
  //?*****
  ENDDO;

  //?USER: Process Data record

  EXECUTE FUNCTION(CRT Item Values Purge  CR) TYPE(CRTOBJ) FILE(PDKZCPP)          AC1849707;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Item_Code);
  PARAMETER(DB1.Warehouse_Code);
  PARAMETER(DB1.Revaluation_Eff_Date);
  PARAMETER(DB1.Revaluation_Eff_Time);
  PARAMETER(DB1.Unit_Cost_Per_Pound);
  PARAMETER(DB1.Pricing_Date_Used);
  PARAMETER(DB1.Revaluation_Cost_Type);
  PARAMETER(DB1.Revaluation_Date);
  PARAMETER(DB1.EDI_Status_1);
  PARAMETER(DB1.EDI_Status_2);
  PARAMETER(DB1.EDI_Status_3);
  PARAMETER(DB1.Record_Status);
  {
   //?USER: Processing before Data update

   //?** Don't update chg dates with purge dates  E001078 LJB 11/2/10
  }

  EXECUTE FUNCTION(DLT PD Item Values     DL) TYPE(DLTOBJ) FILE(PDKZCPP)          AC1414722;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Item_Code);
  PARAMETER(DB1.Warehouse_Code);
  PARAMETER(DB1.Revaluation_Eff_Date);
  PARAMETER(DB1.Revaluation_Eff_Time);
 }

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

}


//?*----------------------------------------------------------*
//?*----------------------------------------------------------*
