// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDJEE1R
// ?Date: 14.08.2025 Time: 03:28:30
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?1/20/09 SAZ added primary u/m pricing on the screen and code to pop
EXECUTE FUNCTION(VAL Rtv and Center Hdg IF) TYPE(EXCINTFUN)                     AC1258539;
PARAMETER('A/R');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


//?Set to add mode if Create is requested
CASE;

// IF PAR.Ship To Customer is equal to zero
IF PAR.Ship_To_Customer = *ZERO;

// OR PAR.Item Code is Not Entered
OR PAR.Item_Code = *ZERO;

// PGM.*Program mode = CND.*ADD
PGM.*Program_mode = 'ADD';

ENDIF;

//?USER: Initialize key screen

//?Company description
CASE;

// IF PAR.Accounting Company Number is not equal to zero
IF PAR.Company_Number <> *ZERO;

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(PAR.Company_Number);
PARAMETER(KEY.Company_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

//?Customer description
CASE;

// IF PAR.Ship To Customer is not equal to zero
IF PAR.Ship_To_Customer <> *ZERO;

EXECUTE FUNCTION(RTV Customer Name      RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1108159;
PARAMETER(PAR.Ship_To_Customer);
PARAMETER(KEY.Customer_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

//?Item description
CASE;

// IF PAR.Item Code is Entered
IF PAR.Item_Code <> *ZERO;

EXECUTE FUNCTION(Rtv Descriptions      RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1140665;
PARAMETER(KEY.Company_Number);
PARAMETER(KEY.Item_Code);
PARAMETER(KEY.Item_Description);
PARAMETER(WRK.Description_Line_Two);
PARAMETER(WRK.UOM_Primary);
PARAMETER(WRK.UOM_Second);
PARAMETER(WRK.UOM_Third);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

//?USER: Validate key screen

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(KEY.Company_Number);
PARAMETER(KEY.Company_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Customer Name      RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1108159;
PARAMETER(KEY.Ship_To_Customer);
PARAMETER(KEY.Customer_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv Descriptions      RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1140665;
PARAMETER(KEY.Company_Number);
PARAMETER(KEY.Item_Code);
PARAMETER(KEY.Item_Description);
PARAMETER(WRK.Description_Line_Two);
PARAMETER(WRK.UOM_Primary);
PARAMETER(WRK.UOM_Second);
PARAMETER(WRK.UOM_Third);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?USER: Initialize detail screen (new record)

// DTL.Record Status = CND.Active
DTL.Record_Status = 'A';

// PAR.USR Update Flag = CND.No
PAR.USR_Update_Flag = *BLANK;

// PAR.USR Formula Meth Type Sts = CND.no
PAR.USR_Formula_Meth_Type_Sts = 'N';

// PAR.USR Market Meth Type Sts = CND.no
PAR.USR_Market_Meth_Type_Sts = 'N';

// PAR.USR Manual Meth Type Sts = CND.no
PAR.USR_Manual_Meth_Type_Sts = 'N';

// PAR.USR Extend Meth Type Sts = CND.no
PAR.USR_Extend_Meth_Type_Sts = 'N';

// PAR.Seasonal Overage = CON.*ZERO
PAR.Seasonal_Overage = *ZERO;

// PAR.Market Overage = CON.*ZERO
PAR.Market_Overage = *ZERO;

// PAR.Formula Differential = CON.*ZERO
PAR.Formula_Differential = *ZERO;

// PAR.Formula Processing Fee = CON.*ZERO
PAR.Formula_Processing_Fee = *ZERO;

// DTL.Company Name = KEY.Company Name
DTL.Company_Name = KEY.Company_Name;

// DTL.Customer Name = KEY.Customer Name
DTL.Customer_Name = KEY.Customer_Name;

// DTL.Item Description = KEY.Item Description
DTL.Item_Description = KEY.Item_Description;

CASE;

// IF DTL.Item Code is Entered
IF DTL.Item_Code <> *ZERO;

//?saz 1/20/09 add rtv of price cde
EXECUTE FUNCTION(Rtv Item Pricing UOM  RT) TYPE(RTVOBJ) FILE(OMBYREP)           AC1825735;
PARAMETER(KEY.Item_Code);
PARAMETER(NLL.Description_Line_One);
PARAMETER(NLL.Description_Line_Two);
PARAMETER(DTL.UOM_Pricing);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// IF *OTHERWISE
IF *OTHERWISE;

// DTL.U/M - Pricing = CON.*BLANK
DTL.UOM_Pricing = *BLANK;

ENDIF;

//?USER: Initialize detail screen (existing record)

// PAR.USR Update Flag = CND.No
PAR.USR_Update_Flag = *BLANK;

// DTL.Company Name = KEY.Company Name
DTL.Company_Name = KEY.Company_Name;

// DTL.Customer Name = KEY.Customer Name
DTL.Customer_Name = KEY.Customer_Name;

// DTL.Item Description = KEY.Item Description
DTL.Item_Description = KEY.Item_Description;

// PAR.Seasonal Overage = DB1.Seasonal Overage
PAR.Seasonal_Overage = DB1.Seasonal_Overage;

// PAR.Market Overage = DB1.Market Overage
PAR.Market_Overage = DB1.Market_Overage;

//?saz 1/20/09 add rtv of price cde
EXECUTE FUNCTION(Rtv Item Pricing UOM  RT) TYPE(RTVOBJ) FILE(OMBYREP)           AC1825735;
PARAMETER(DB1.Item_Code);
PARAMETER(NLL.Description_Line_One);
PARAMETER(NLL.Description_Line_Two);
PARAMETER(DTL.UOM_Pricing);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// PAR.Formula Differential = DB1.Formula Differential
PAR.Formula_Differential = DB1.Formula_Differential;

// PAR.Formula Processing Fee = DB1.Formula Processing Fee
PAR.Formula_Processing_Fee = DB1.Formula_Processing_Fee;

// PAR.Record Status = DB1.Record Status
PAR.Record_Status = DB1.Record_Status;

// PAR.USR Formula Meth Type Sts = CND.no
PAR.USR_Formula_Meth_Type_Sts = 'N';

// PAR.USR Market Meth Type Sts = CND.no
PAR.USR_Market_Meth_Type_Sts = 'N';

// PAR.USR Manual Meth Type Sts = CND.no
PAR.USR_Manual_Meth_Type_Sts = 'N';

// PAR.USR Extend Meth Type Sts = CND.no
PAR.USR_Extend_Meth_Type_Sts = 'N';

//?USER: Process key screen request

CASE;

// IF PGM.*Program mode is *CHANGE
IF PGM.*Program_mode = 'CHG';

// Send error message - 'Function not allowed.'
ERROR(USR1833);

QUIT;

ENDIF;

//?USER: Validate detail screen fields

CASE;

// IF PGM.*Program mode is *CHANGE
IF PGM.*Program_mode = 'CHG';

//?Record Status change
CASE;

// IF PAR.Record Status NE DTL.Record Status
IF PAR.Record_Status <> DTL.Record_Status;

// PAR.USR Update Flag = CND.Yes
PAR.USR_Update_Flag = 'Y';

// PAR.USR Formula Meth Type Sts = CND.yes
PAR.USR_Formula_Meth_Type_Sts = 'Y';

// PAR.USR Market Meth. Type Sts = CND.yes
PAR.USR_Market_Meth_Type_Sts = 'Y';

ENDIF;

ENDIF;

//?Seasonal Overage change
CASE;

// IF PAR.Seasonal Overage NE DTL.Seasonal Overage
IF PAR.Seasonal_Overage <> DTL.Seasonal_Overage;

// PAR.USR Update Flag = CND.Yes
PAR.USR_Update_Flag = 'Y';

// PAR.USR Formula Meth Type Sts = CND.yes
PAR.USR_Formula_Meth_Type_Sts = 'Y';

// PAR.USR Market Meth. Type Sts = CND.yes
PAR.USR_Market_Meth_Type_Sts = 'Y';

ENDIF;

//?Market Overage Change
CASE;

// IF PAR.Market Overage NE DTL.Market Overage
IF PAR.Market_Overage <> DTL.Market_Overage;

// PAR.USR Update Flag = CND.Yes
PAR.USR_Update_Flag = 'Y';

// PAR.USR Market Meth. Type Sts = CND.yes
PAR.USR_Market_Meth_Type_Sts = 'Y';

ENDIF;

//?Formula Differential change
CASE;

// IF PAR.Formula Differential NE DTL.Formula Differential
IF PAR.Formula_Differential <> DTL.Formula_Differential;

// PAR.USR Update Flag = CND.Yes
PAR.USR_Update_Flag = 'Y';

// PAR.USR Formula Meth Type Sts = CND.yes
PAR.USR_Formula_Meth_Type_Sts = 'Y';

ENDIF;

//?Formula Processing Fee change
CASE;

// IF PAR.Formula Processing Fee NE DTL.Formula Processing Fee
IF PAR.Formula_Processing_Fee <> DTL.Formula_Processing_Fee;

// PAR.USR Update Flag = CND.Yes
PAR.USR_Update_Flag = 'Y';

// PAR.USR Formula Meth Type Sts = CND.yes
PAR.USR_Formula_Meth_Type_Sts = 'Y';

ENDIF;

//?USER: Create DBF record

EXECUTE FUNCTION(CRT PD Customer/Item   CR) TYPE(CRTOBJ) FILE(PDISREP)          AC1266629;
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Ship_To_Customer);
PARAMETER(DTL.Item_Code);
PARAMETER(DTL.Overage_Begin_Date);
PARAMETER(DTL.Overage_End_Date);
PARAMETER(DTL.Seasonal_Overage);
PARAMETER(DTL.Market_Overage);
PARAMETER(DTL.Formula_Differential);
PARAMETER(DTL.Formula_Processing_Fee);
PARAMETER(DTL.Commodity_Market_Code);
PARAMETER(DTL.EDI_Status_1);
PARAMETER(DTL.EDI_Status_2);
PARAMETER(DTL.EDI_Status_3);
PARAMETER(DTL.Record_Status);
PARAMETER(DTL.Job_Time);
PARAMETER(DTL.User_Id);
PARAMETER(DTL.Job_Name);
PARAMETER(DTL.Job_Date);

//?USER: Change DBF record

EXECUTE FUNCTION(CHG PD Customer/Item   CH) TYPE(CHGOBJ) FILE(PDISREP)          AC1266630;
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Ship_To_Customer);
PARAMETER(DTL.Item_Code);
PARAMETER(DTL.Overage_Begin_Date);
PARAMETER(DTL.Overage_End_Date);
PARAMETER(DTL.Seasonal_Overage);
PARAMETER(DTL.Market_Overage);
PARAMETER(DTL.Formula_Differential);
PARAMETER(DTL.Formula_Processing_Fee);
PARAMETER(DTL.Commodity_Market_Code);
PARAMETER(DTL.EDI_Status_1);
PARAMETER(DTL.EDI_Status_2);
PARAMETER(DTL.EDI_Status_3);
PARAMETER(DTL.Record_Status);
PARAMETER(DTL.Job_Time);
PARAMETER(DTL.User_Id);
PARAMETER(DTL.Job_Name);
PARAMETER(DTL.Job_Date);

//?USER: Process command keys

//?Price Audit
CASE;

// IF PAR.USR Update Flag is Yes
IF PAR.USR_Update_Flag = 'Y';

// Call program UPD Price Audit Update XF.
CALL PROGRAM(UPD Price Audit Update XF) ('PDMOXFR');
PARAMETER('PDISREP');
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Ship_To_Customer);
PARAMETER(DTL.Item_Code);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*ZERO);
PARAMETER(PAR.USR_Formula_Meth_Type_Sts);
PARAMETER(PAR.USR_Market_Meth_Type_Sts);
PARAMETER(PAR.USR_Manual_Meth_Type_Sts);
PARAMETER(PAR.USR_Extend_Meth_Type_Sts);

// PAR.USR Update Flag = CND.No
PAR.USR_Update_Flag = *BLANK;

ENDIF;

CASE;

// IF PGM.*Program mode is *CHANGE
IF PGM.*Program_mode = 'CHG';

RETURN;

ENDIF;

