// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PLWSXFR
// ?Date: 14.08.2025 Time: 02:55:37
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Modifications and Comments
DO;

//?E14209 JBB 11/29/2018 - Set BOH Status to Open for a Repayment
//?- When setting Paid records back to Unpaid for a repayment, set
//?  the BOH Status on the Buy Order Header to Open.
//?E13669 JBB  8/28/2018 - Prepare records for a Repayment
//?- Delete all Tattoo Ded/Add records for the Tattoo, except for the
//?  FRT record.
//?E3851 JJH 01/23/15 - This is a new function that will optionally
//? allow the removal of Carcass Detail and associated Holdovers.
//? The functionality is restricted by Buy Order Load.
//?H16853 ISE 11/05/2020 - Recompiled due to change in Buy Order Number
ENDDO;

CASE;

// IF PAR.Re-Env Sel Prod/Tatto Usr is Tattoo
IF PAR.Re_Env_Sel_Prod_Tatto_Usr = 'T';

EXECUTE FUNCTION(Upd Tattoo UnpaidCarcDRT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1323941;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.TH_Kill_Date);
PARAMETER(PAR.TH_Tattoo_Number);
PARAMETER(PAR.Carcass_Detail_Remove_Usr);
{
 //?USER: Process Data record

 // PGM.*Record selected = CND.*YES
 PGM.*Record_selected = 'Y';

 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 CASE;

 // IF DB1.TH Payment Sts is Paid Live
 IF DB1.TH_Payment_Sts = 'PL';

 // WRK.TH Payment Sts = CND.Select Live
 WRK.TH_Payment_Sts = 'SL';

 // IF DB1.TH Payment Sts is PD Carcass Merit
 IF DB1.TH_Payment_Sts = 'PC';

 // WRK.TH Payment Sts = CND.Sl Carcass Merit
 WRK.TH_Payment_Sts = 'SC';

 // IF DB1.TH Payment Sts is Post Int Carc
 IF DB1.TH_Payment_Sts = 'NC';

 // WRK.TH Payment Sts = CND.Sl Int Carc
 WRK.TH_Payment_Sts = 'IC';

 // IF DB1.TH Payment Sts is Post Int Live
 IF DB1.TH_Payment_Sts = 'NL';

 // WRK.TH Payment Sts = CND.Sl Int Live
 WRK.TH_Payment_Sts = 'IL';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // WRK.TH Payment Sts = DB1.TH Payment Sts
 WRK.TH_Payment_Sts = DB1.TH_Payment_Sts;

 ENDIF;

 //?E3851 JJH 01/23/15 - Do not update the Buy Order Load
 EXECUTE FUNCTION(Chg Paid Info Upd     RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1323944;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(*MISSING);
 PARAMETER(WRK.TH_Payment_Sts);
 PARAMETER('SLG');
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Chg Paid Info Upd     CH) TYPE(CHGOBJ) FILE(PKA1CPP)           AB1323943;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(DB1.TH_AP_Voucher_Document#);
  PARAMETER(PAR.TH_Payment_Sts);
  PARAMETER(DB1.TH_Voucher_Payment_Date);
  PARAMETER(*ZERO);
  PARAMETER(PAR.THP_Process_Code);
  PARAMETER(JOB.*USER);
  PARAMETER(JOB.*Job_date);
  PARAMETER(JOB.*Job_time);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?USER: Processing before Data read

   EXECUTE FUNCTION(HPE056 Payment Type) TYPE(EXCINTFUN)                           AB1189849;
   {
    //?Execute internal function

    //?1/10/96  HPE056   Allow payment type to be update based on
    //?                  what the payment status is at the time this
    //?                  tattoo is being updated
   }

   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // PAR.RS Date Changed = JOB.*Job date
    PAR.RS_Date_Changed = JOB.*Job_date;

    // PAR.RS Time Changed = JOB.*Job time
    PAR.RS_Time_Changed = JOB.*Job_time;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

   EXECUTE FUNCTION(Chg/Crt Tatto/Spc Flds IF) TYPE(EXCINTFUN)                     AB1189848;
   PARAMETER(DB1.TH_Payment_Sts);
   PARAMETER(DB1.TH_Payment_Type);
   {
    //?Execute internal function

    EXECUTE FUNCTION(HPE056 Payment Type) TYPE(EXCINTFUN)                           AB1189849;
    {
     //?Execute internal function

     //?1/10/96  HPE056   Allow payment type to be update based on
     //?                  what the payment status is at the time this
     //?                  tattoo is being updated
    }

    //?Function Description:  If there are any fields that need to be
    //?Changed/Created during the Change functions or Create function
    //?Presently: Payment Type
    //?Add this routine to all of the change objects and create object
    //?that update the Payment Type
    CASE;

    // IF PAR.TH Payment Sts is Live anything
    IF PAR.TH_Payment_Sts = 'ML'/'PL'/'NL'/'SL'/'IL';

    // PAR.TH Payment Type = CND.Live
    PAR.TH_Payment_Type = 'L';

    // IF *OTHERWISE
    IF *OTHERWISE;

    // PAR.TH Payment Type = CND.Carcass Merit
    PAR.TH_Payment_Type = 'C';

    ENDIF;

   }

   //?USER: Processing after Data update

   //?E3851 JJH 01/23/15 - At this time we will remove the update to the
   //? Buy Order Load.
   //?Upd Re-Ev BOH          RT - Buy Order Header
   EXECUTE FUNCTION(Upd Tattoo Hdr Job Sel RT) TYPE(RTVOBJ) FILE(PKDOREP)          AB1177706;
   PARAMETER('REPAY');
   PARAMETER(DB1.BOH_Company_Number);
   PARAMETER(DB1.BOH_Buy_Order_Number);
   PARAMETER(DB1.BOL_Load_Number);
   PARAMETER(DB1.TH_Tattoo_Number);
   PARAMETER(DB1.TH_Kill_Date);
   PARAMETER(WRK.Tattoo_Job_Sel_Sort_Fld);
   PARAMETER(WRK.Repayment_Status);
   PARAMETER(DB1.PD_Producer_Code);
   PARAMETER(DB1.PL_Location_Code);
   {
    //?USER: Processing if Data record not found

    EXECUTE FUNCTION(Crt Tattoo Header Job CO) TYPE(CRTOBJ) FILE(PKDOREP)           AB1177567;
    PARAMETER(PAR.Tattoo_Job_Sel_Name);
    PARAMETER(PAR.BOH_Company_Number);
    PARAMETER(PAR.BOH_Buy_Order_Number);
    PARAMETER(PAR.BOL_Load_Number);
    PARAMETER(PAR.TH_Tattoo_Number);
    PARAMETER(PAR.TH_Kill_Date);
    PARAMETER(PAR.Tattoo_Job_Sel_Sort_Fld);
    PARAMETER(PAR.Repayment_Status);
    PARAMETER(PAR.PD_Producer_Code);
    PARAMETER(PAR.PL_Location_Code);
    {
     //?USER: Processing before Data update

     EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
     PARAMETER(DB1.RS_Record_Status);
     PARAMETER(DB1.RS_Job);
     PARAMETER(DB1.RS_Program);
     PARAMETER(DB1.RS_User_Added);
     PARAMETER(DB1.RS_Date_Added);
     PARAMETER(DB1.RS_Time_Added);
     {
      //?Execute internal function

      // PAR.RS Record Status = CND.Active
      PAR.RS_Record_Status = 'A';

      // PAR.RS User Added = JOB.*USER
      PAR.RS_User_Added = JOB.*USER;

      // PAR.RS Date Added = JOB.*Job date
      PAR.RS_Date_Added = JOB.*Job_date;

      // PAR.RS Time Added = JOB.*Job time
      PAR.RS_Time_Added = JOB.*Job_time;

      // PAR.RS Program = JOB.*PROGRAM
      PAR.RS_Program = JOB.*PROGRAM;

      // PAR.RS Job = JOB.*JOB
      PAR.RS_Job = JOB.*JOB;

     }

    }

    //?USER: Process Data record

    EXECUTE FUNCTION(Chg Tattoo Header Job CH) TYPE(CHGOBJ) FILE(PKDOREP)           AB1177568;
    PARAMETER(DB1.Tattoo_Job_Sel_Name);
    PARAMETER(DB1.BOH_Company_Number);
    PARAMETER(DB1.BOH_Buy_Order_Number);
    PARAMETER(DB1.BOL_Load_Number);
    PARAMETER(DB1.TH_Tattoo_Number);
    PARAMETER(DB1.TH_Kill_Date);
    PARAMETER(DB1.Tattoo_Job_Sel_Sort_Fld);
    PARAMETER(DB1.Repayment_Status);
    PARAMETER(DB1.PD_Producer_Code);
    PARAMETER(DB1.PL_Location_Code);
    {
     //?USER: Processing before Data update

     EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
     PARAMETER(DB1.RS_User_Changed);
     PARAMETER(DB1.RS_Date_Changed);
     PARAMETER(DB1.RS_Time_Changed);
     PARAMETER(DB1.RS_Job);
     PARAMETER(DB1.RS_Program);
     {
      //?Execute internal function

      // PAR.RS User Changed = JOB.*USER
      PAR.RS_User_Changed = JOB.*USER;

      // PAR.RS Date Changed = JOB.*Job date
      PAR.RS_Date_Changed = JOB.*Job_date;

      // PAR.RS Time Changed = JOB.*Job time
      PAR.RS_Time_Changed = JOB.*Job_time;

      // PAR.RS Job = JOB.*JOB
      PAR.RS_Job = JOB.*JOB;

      // PAR.RS Program = JOB.*PROGRAM
      PAR.RS_Program = JOB.*PROGRAM;

     }

    }

   }

   EXECUTE FUNCTION(Rtv/Chg Ttt/Kl D/A Sts RT) TYPE(RTVOBJ) FILE(PKCDCPP)          AB1186963;
   PARAMETER(DB1.BOH_Company_Number);
   PARAMETER(DB1.BOH_Buy_Order_Number);
   PARAMETER(DB1.BOL_Load_Number);
   PARAMETER(DB1.TH_Tattoo_Number);
   PARAMETER(DB1.TH_Kill_Date);
   PARAMETER(PAR.TH_Payment_Sts);
   {
    //?USER: Process Data record

    EXECUTE FUNCTION(Change Tattoo Deduction) TYPE(CHGOBJ) FILE(PKCDCPP)            AB1107818;
    PARAMETER(DB1.BOH_Company_Number);
    PARAMETER(DB1.BOH_Buy_Order_Number);
    PARAMETER(DB1.BOL_Load_Number);
    PARAMETER(DB1.TH_Tattoo_Number);
    PARAMETER(DB1.TH_Kill_Date);
    PARAMETER(DB1.DED_D_A_Code);
    PARAMETER(DB1.THD_Ded_Add_Amount);
    PARAMETER(DB1.THD_Ded_Add_Amount);
    PARAMETER(DB1.THD_Unit_Amt_Sign);
    PARAMETER(DB1.THD_UOM);
    PARAMETER(DB1.THD_Transaction_Created);
    PARAMETER(DB1.THD_GL_Code);
    PARAMETER(DB1.THD_Contra_Gl_Code);
    PARAMETER(DB1.THD_Re_imbursement_Head);
    PARAMETER(PAR.THD_Payment_Sts);
    PARAMETER(DB1.THD_Expense_Paid_by);
    PARAMETER(DB1.THD_Expense_Type);
    PARAMETER(DB1.THD_Reserve_Account_Upd);
    PARAMETER(DB1.THD_Commission_Deduction);
    PARAMETER(DB1.THD_Deferred_Payment);
    PARAMETER(DB1.THD_Status_4);
    PARAMETER(DB1.THD_Status_5);
    PARAMETER(DB1.RS_User_Changed);
    PARAMETER(DB1.RS_Date_Changed);
    PARAMETER(DB1.RS_Time_Changed);
    PARAMETER(DB1.RS_Record_Status);
    PARAMETER(DB1.RS_Job);
    PARAMETER(DB1.RS_Program);
    PARAMETER(DB1.RS_User_Added);
    PARAMETER(DB1.RS_Date_Added);
    PARAMETER(DB1.RS_Time_Added);
    {
     //?USER: Processing before Data update

     EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
     PARAMETER(DB1.RS_User_Changed);
     PARAMETER(DB1.RS_Date_Changed);
     PARAMETER(DB1.RS_Time_Changed);
     PARAMETER(DB1.RS_Job);
     PARAMETER(DB1.RS_Program);
     {
      //?Execute internal function

      // PAR.RS User Changed = JOB.*USER
      PAR.RS_User_Changed = JOB.*USER;

      // PAR.RS Date Changed = JOB.*Job date
      PAR.RS_Date_Changed = JOB.*Job_date;

      // PAR.RS Time Changed = JOB.*Job time
      PAR.RS_Time_Changed = JOB.*Job_time;

      // PAR.RS Job = JOB.*JOB
      PAR.RS_Job = JOB.*JOB;

      // PAR.RS Program = JOB.*PROGRAM
      PAR.RS_Program = JOB.*PROGRAM;

     }

    }

   }

  }

 }

 //?11/29/2018 JBB E14165 - Set BOH Status to Open on a Repayment
 EXECUTE FUNCTION(Chg BOH Status-Repay  CH) TYPE(CHGOBJ) FILE(PKAWCPP)           AB1347375;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER('O');
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

 EXECUTE FUNCTION(Dlt Ttt D/A excpt FRT RT) TYPE(RTVOBJ) FILE(PKCDCPP)           AB1346412;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 {
  //?USER: Process Data record

  //?If D/A Code <> FRT, delete the record
  CASE;

  // IF NOT DB1.DED D/A Code is Freight
  IF ! DB1.DED_D_A_Code = 'FRT';

  EXECUTE FUNCTION(Delete Tattoo Deduction) TYPE(DLTOBJ) FILE(PKCDCPP)            AB1107819;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(DB1.DED_D_A_Code);
  ENDIF;

 }

 CASE;

 // IF PAR.Carcass Detail Remove Usr is *Yes
 IF PAR.Carcass_Detail_Remove_Usr = *YES;

 //?E3851 JJH 01/23/15 - Delete by Buy Order Load and Tattoo.
 //? No longer Restrict by Kill Date, so any Holdovers will be
 //? removed.
 EXECUTE FUNCTION(Dlt CrcsDtl By BoLdTatto) TYPE(RTVOBJ) FILE(PKB1CPP)           AB1323942;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Dlt Carcass Detail    DL) TYPE(DLTOBJ) FILE(PKB1CPP)           AB1104739;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(DB1.CD_Scale_Sequence_Number);
  PARAMETER(DB1.CD_Carcass_Number);
  PARAMETER(DB1.CD_Carcass_Number_Insert);
 }

 ENDIF;

 ENDIF;

}


// IF PAR.Re-Env Sel Prod/Tatto Usr is All Tattoos
IF PAR.Re_Env_Sel_Prod_Tatto_Usr = 'A';

EXECUTE FUNCTION(Upd All TattUnpaidCarc Rt) TYPE(RTVOBJ) FILE(PKA1CPP)          AB1323945;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.TH_Kill_Date);
PARAMETER(PAR.Kill_Date_2_USR);
PARAMETER(PAR.Carcass_Detail_Remove_Usr);
{
 //?USER: Process Data record

 // PGM.*Record selected = CND.*YES
 PGM.*Record_selected = 'Y';

 //?Check kill date
 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 CASE;

 // IF PAR.Kill Date 2 USR is Enter Date
 IF PAR.Kill_Date_2_USR > *ZERO;

 //?Check date
 CASE;

 // IF DB1.TH Kill Date GE PAR.TH Kill Date
 IF DB1.TH_Kill_Date >= PAR.TH_Kill_Date;

 // AND DB1.TH Kill Date LE PAR.Kill Date 2 USR
 AND DB1.TH_Kill_Date <= PAR.Kill_Date_2_USR;

 // PGM.*Record selected = CND.*YES
 PGM.*Record_selected = 'Y';

 //?Check date
 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 ENDIF;

 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 CASE;

 // IF DB1.TH Payment Sts is Paid Live
 IF DB1.TH_Payment_Sts = 'PL';

 // WRK.TH Payment Sts = CND.Select Live
 WRK.TH_Payment_Sts = 'SL';

 // IF DB1.TH Payment Sts is PD Carcass Merit
 IF DB1.TH_Payment_Sts = 'PC';

 // WRK.TH Payment Sts = CND.Sl Carcass Merit
 WRK.TH_Payment_Sts = 'SC';

 // IF DB1.TH Payment Sts is Post Int Carc
 IF DB1.TH_Payment_Sts = 'NC';

 // WRK.TH Payment Sts = CND.Sl Int Carc
 WRK.TH_Payment_Sts = 'IC';

 // IF DB1.TH Payment Sts is Post Int Live
 IF DB1.TH_Payment_Sts = 'NL';

 // WRK.TH Payment Sts = CND.Sl Int Live
 WRK.TH_Payment_Sts = 'IL';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // WRK.TH Payment Sts = DB1.TH Payment Sts
 WRK.TH_Payment_Sts = DB1.TH_Payment_Sts;

 ENDIF;

 //?E3851 JJH 01/23/15 - Do not update the Buy Order Load
 EXECUTE FUNCTION(Chg Paid Info Upd     RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1323944;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(*MISSING);
 PARAMETER(WRK.TH_Payment_Sts);
 PARAMETER('SLG');
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Chg Paid Info Upd     CH) TYPE(CHGOBJ) FILE(PKA1CPP)           AB1323943;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(DB1.TH_AP_Voucher_Document#);
  PARAMETER(PAR.TH_Payment_Sts);
  PARAMETER(DB1.TH_Voucher_Payment_Date);
  PARAMETER(*ZERO);
  PARAMETER(PAR.THP_Process_Code);
  PARAMETER(JOB.*USER);
  PARAMETER(JOB.*Job_date);
  PARAMETER(JOB.*Job_time);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?USER: Processing before Data read

   EXECUTE FUNCTION(HPE056 Payment Type) TYPE(EXCINTFUN)                           AB1189849;
   {
    //?Execute internal function

    //?1/10/96  HPE056   Allow payment type to be update based on
    //?                  what the payment status is at the time this
    //?                  tattoo is being updated
   }

   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // PAR.RS Date Changed = JOB.*Job date
    PAR.RS_Date_Changed = JOB.*Job_date;

    // PAR.RS Time Changed = JOB.*Job time
    PAR.RS_Time_Changed = JOB.*Job_time;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

   EXECUTE FUNCTION(Chg/Crt Tatto/Spc Flds IF) TYPE(EXCINTFUN)                     AB1189848;
   PARAMETER(DB1.TH_Payment_Sts);
   PARAMETER(DB1.TH_Payment_Type);
   {
    //?Execute internal function

    EXECUTE FUNCTION(HPE056 Payment Type) TYPE(EXCINTFUN)                           AB1189849;
    {
     //?Execute internal function

     //?1/10/96  HPE056   Allow payment type to be update based on
     //?                  what the payment status is at the time this
     //?                  tattoo is being updated
    }

    //?Function Description:  If there are any fields that need to be
    //?Changed/Created during the Change functions or Create function
    //?Presently: Payment Type
    //?Add this routine to all of the change objects and create object
    //?that update the Payment Type
    CASE;

    // IF PAR.TH Payment Sts is Live anything
    IF PAR.TH_Payment_Sts = 'ML'/'PL'/'NL'/'SL'/'IL';

    // PAR.TH Payment Type = CND.Live
    PAR.TH_Payment_Type = 'L';

    // IF *OTHERWISE
    IF *OTHERWISE;

    // PAR.TH Payment Type = CND.Carcass Merit
    PAR.TH_Payment_Type = 'C';

    ENDIF;

   }

   //?USER: Processing after Data update

   //?E3851 JJH 01/23/15 - At this time we will remove the update to the
   //? Buy Order Load.
   //?Upd Re-Ev BOH          RT - Buy Order Header
   EXECUTE FUNCTION(Upd Tattoo Hdr Job Sel RT) TYPE(RTVOBJ) FILE(PKDOREP)          AB1177706;
   PARAMETER('REPAY');
   PARAMETER(DB1.BOH_Company_Number);
   PARAMETER(DB1.BOH_Buy_Order_Number);
   PARAMETER(DB1.BOL_Load_Number);
   PARAMETER(DB1.TH_Tattoo_Number);
   PARAMETER(DB1.TH_Kill_Date);
   PARAMETER(WRK.Tattoo_Job_Sel_Sort_Fld);
   PARAMETER(WRK.Repayment_Status);
   PARAMETER(DB1.PD_Producer_Code);
   PARAMETER(DB1.PL_Location_Code);
   {
    //?USER: Processing if Data record not found

    EXECUTE FUNCTION(Crt Tattoo Header Job CO) TYPE(CRTOBJ) FILE(PKDOREP)           AB1177567;
    PARAMETER(PAR.Tattoo_Job_Sel_Name);
    PARAMETER(PAR.BOH_Company_Number);
    PARAMETER(PAR.BOH_Buy_Order_Number);
    PARAMETER(PAR.BOL_Load_Number);
    PARAMETER(PAR.TH_Tattoo_Number);
    PARAMETER(PAR.TH_Kill_Date);
    PARAMETER(PAR.Tattoo_Job_Sel_Sort_Fld);
    PARAMETER(PAR.Repayment_Status);
    PARAMETER(PAR.PD_Producer_Code);
    PARAMETER(PAR.PL_Location_Code);
    {
     //?USER: Processing before Data update

     EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
     PARAMETER(DB1.RS_Record_Status);
     PARAMETER(DB1.RS_Job);
     PARAMETER(DB1.RS_Program);
     PARAMETER(DB1.RS_User_Added);
     PARAMETER(DB1.RS_Date_Added);
     PARAMETER(DB1.RS_Time_Added);
     {
      //?Execute internal function

      // PAR.RS Record Status = CND.Active
      PAR.RS_Record_Status = 'A';

      // PAR.RS User Added = JOB.*USER
      PAR.RS_User_Added = JOB.*USER;

      // PAR.RS Date Added = JOB.*Job date
      PAR.RS_Date_Added = JOB.*Job_date;

      // PAR.RS Time Added = JOB.*Job time
      PAR.RS_Time_Added = JOB.*Job_time;

      // PAR.RS Program = JOB.*PROGRAM
      PAR.RS_Program = JOB.*PROGRAM;

      // PAR.RS Job = JOB.*JOB
      PAR.RS_Job = JOB.*JOB;

     }

    }

    //?USER: Process Data record

    EXECUTE FUNCTION(Chg Tattoo Header Job CH) TYPE(CHGOBJ) FILE(PKDOREP)           AB1177568;
    PARAMETER(DB1.Tattoo_Job_Sel_Name);
    PARAMETER(DB1.BOH_Company_Number);
    PARAMETER(DB1.BOH_Buy_Order_Number);
    PARAMETER(DB1.BOL_Load_Number);
    PARAMETER(DB1.TH_Tattoo_Number);
    PARAMETER(DB1.TH_Kill_Date);
    PARAMETER(DB1.Tattoo_Job_Sel_Sort_Fld);
    PARAMETER(DB1.Repayment_Status);
    PARAMETER(DB1.PD_Producer_Code);
    PARAMETER(DB1.PL_Location_Code);
    {
     //?USER: Processing before Data update

     EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
     PARAMETER(DB1.RS_User_Changed);
     PARAMETER(DB1.RS_Date_Changed);
     PARAMETER(DB1.RS_Time_Changed);
     PARAMETER(DB1.RS_Job);
     PARAMETER(DB1.RS_Program);
     {
      //?Execute internal function

      // PAR.RS User Changed = JOB.*USER
      PAR.RS_User_Changed = JOB.*USER;

      // PAR.RS Date Changed = JOB.*Job date
      PAR.RS_Date_Changed = JOB.*Job_date;

      // PAR.RS Time Changed = JOB.*Job time
      PAR.RS_Time_Changed = JOB.*Job_time;

      // PAR.RS Job = JOB.*JOB
      PAR.RS_Job = JOB.*JOB;

      // PAR.RS Program = JOB.*PROGRAM
      PAR.RS_Program = JOB.*PROGRAM;

     }

    }

   }

   EXECUTE FUNCTION(Rtv/Chg Ttt/Kl D/A Sts RT) TYPE(RTVOBJ) FILE(PKCDCPP)          AB1186963;
   PARAMETER(DB1.BOH_Company_Number);
   PARAMETER(DB1.BOH_Buy_Order_Number);
   PARAMETER(DB1.BOL_Load_Number);
   PARAMETER(DB1.TH_Tattoo_Number);
   PARAMETER(DB1.TH_Kill_Date);
   PARAMETER(PAR.TH_Payment_Sts);
   {
    //?USER: Process Data record

    EXECUTE FUNCTION(Change Tattoo Deduction) TYPE(CHGOBJ) FILE(PKCDCPP)            AB1107818;
    PARAMETER(DB1.BOH_Company_Number);
    PARAMETER(DB1.BOH_Buy_Order_Number);
    PARAMETER(DB1.BOL_Load_Number);
    PARAMETER(DB1.TH_Tattoo_Number);
    PARAMETER(DB1.TH_Kill_Date);
    PARAMETER(DB1.DED_D_A_Code);
    PARAMETER(DB1.THD_Ded_Add_Amount);
    PARAMETER(DB1.THD_Ded_Add_Amount);
    PARAMETER(DB1.THD_Unit_Amt_Sign);
    PARAMETER(DB1.THD_UOM);
    PARAMETER(DB1.THD_Transaction_Created);
    PARAMETER(DB1.THD_GL_Code);
    PARAMETER(DB1.THD_Contra_Gl_Code);
    PARAMETER(DB1.THD_Re_imbursement_Head);
    PARAMETER(PAR.THD_Payment_Sts);
    PARAMETER(DB1.THD_Expense_Paid_by);
    PARAMETER(DB1.THD_Expense_Type);
    PARAMETER(DB1.THD_Reserve_Account_Upd);
    PARAMETER(DB1.THD_Commission_Deduction);
    PARAMETER(DB1.THD_Deferred_Payment);
    PARAMETER(DB1.THD_Status_4);
    PARAMETER(DB1.THD_Status_5);
    PARAMETER(DB1.RS_User_Changed);
    PARAMETER(DB1.RS_Date_Changed);
    PARAMETER(DB1.RS_Time_Changed);
    PARAMETER(DB1.RS_Record_Status);
    PARAMETER(DB1.RS_Job);
    PARAMETER(DB1.RS_Program);
    PARAMETER(DB1.RS_User_Added);
    PARAMETER(DB1.RS_Date_Added);
    PARAMETER(DB1.RS_Time_Added);
    {
     //?USER: Processing before Data update

     EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
     PARAMETER(DB1.RS_User_Changed);
     PARAMETER(DB1.RS_Date_Changed);
     PARAMETER(DB1.RS_Time_Changed);
     PARAMETER(DB1.RS_Job);
     PARAMETER(DB1.RS_Program);
     {
      //?Execute internal function

      // PAR.RS User Changed = JOB.*USER
      PAR.RS_User_Changed = JOB.*USER;

      // PAR.RS Date Changed = JOB.*Job date
      PAR.RS_Date_Changed = JOB.*Job_date;

      // PAR.RS Time Changed = JOB.*Job time
      PAR.RS_Time_Changed = JOB.*Job_time;

      // PAR.RS Job = JOB.*JOB
      PAR.RS_Job = JOB.*JOB;

      // PAR.RS Program = JOB.*PROGRAM
      PAR.RS_Program = JOB.*PROGRAM;

     }

    }

   }

  }

 }

 //?11/29/2018 JBB E14165 - Set BOH Status to Open on a Repayment
 EXECUTE FUNCTION(Chg BOH Status-Repay  CH) TYPE(CHGOBJ) FILE(PKAWCPP)           AB1347375;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER('O');
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

 EXECUTE FUNCTION(Dlt Ttt D/A excpt FRT RT) TYPE(RTVOBJ) FILE(PKCDCPP)           AB1346412;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 {
  //?USER: Process Data record

  //?If D/A Code <> FRT, delete the record
  CASE;

  // IF NOT DB1.DED D/A Code is Freight
  IF ! DB1.DED_D_A_Code = 'FRT';

  EXECUTE FUNCTION(Delete Tattoo Deduction) TYPE(DLTOBJ) FILE(PKCDCPP)            AB1107819;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(DB1.DED_D_A_Code);
  ENDIF;

 }

 CASE;

 // IF PAR.Carcass Detail Remove Usr is *Yes
 IF PAR.Carcass_Detail_Remove_Usr = *YES;

 //?E3851 JJH 01/23/15 - Delete by Buy Order Load and Tattoo.
 //? No longer Restrict by Kill Date, so any Holdovers will be
 //? removed.
 EXECUTE FUNCTION(Dlt CrcsDtl By BoLdTatto) TYPE(RTVOBJ) FILE(PKB1CPP)           AB1323942;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Dlt Carcass Detail    DL) TYPE(DLTOBJ) FILE(PKB1CPP)           AB1104739;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(DB1.CD_Scale_Sequence_Number);
  PARAMETER(DB1.CD_Carcass_Number);
  PARAMETER(DB1.CD_Carcass_Number_Insert);
 }

 ENDIF;

 ENDIF;

}


ENDIF;

