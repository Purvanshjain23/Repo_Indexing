     H/TITLE Exc Auto Inv RestCmpWIMXF Execute external functio
     H DATFMT(*YMD) DATEDIT(*YMD) DEBUG(*YES)
     Z* CRTBNDRPG
     Z* DFTACTGRP(*NO) BNDDIR(YBNDDIR) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
      *
     H* SYNOPSIS :
     H*  Perform user function
     H*  As defined by action diagram
      *
     H* Generated by CA 2E release 8.7 (1632)
     H* Function type : Execute external function
     H* Object type   : *PGM
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISDNGUY
     H* Date          : 07/17/23  Time  : 13:10:39
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPDJYREL3  IF   E           K DISK
      * RTV : Company Defaults Internal Plant Companies Only CO
      *
     FCAADREL9  IF   E           K DISK
      * RSQ : Warehouse Codes           ShipCo/Warehouse
      *
     FOMHCCPL1  IF   E           K DISK
      * RTV : Physical Count Control    Retrieval index
      *
     FPDKMREL1  IF   E           K DISK
      * RTV : Company Values            Retrieval index
      *
     FCADPREL1  IF   E           K DISK
      * RTV : System Values             Retrieval index       NV
      *
     FCAB0RELC  IF   E           K DISK
      * RSQ : Item Balance              Co/Whse/Item
      *
     FPUCYCPL2  IF   E           K DISK
      * RSQ : WIM PFS Inv Restoration   Co/Whse/TransDte/Time/Se
      *
      * Long constants
     D @CN#            S              6    DIM(12)CTDATA PERRCD(1)
     D @CN             S             25    DIM(12) ALT(@CN#)
     D YDOW            S              1     DIM(7)
      /EJECT
      * Data structures:
     D PGMDS         ESDS                  EXTNAME(Y2PGDSP)
      * Modified Program data structure
     D JBDTTM          DS
      * Job date/time
     D  ##JDT                  1      7  0
     D  ##JCC                  1      1  0
     D  ##JYY                  2      3  0
     D  ##JMM                  4      5  0
     D  ##JDD                  6      7  0
     D  ##JTM                  8     13  0
     D  ##JHH                  8      9  0
     D  ##JNN                 10     11  0
     D  ##JSS                 12     13  0
     D YL0014          DS           500
      /EJECT
     D XDINT           DS
      * Internal date
     D  XDINDT                 1      7  0
     D  XDINYY                 1      3  0
     D  XDINMM                 4      5  0
     D  XDINDD                 6      7  0
      /EJECT
     D XD2T            DS
      * Internal date
     D  XDINT2                 1      7  0
     D  XDINY2                 1      3  0
     D  XDINM2                 4      5  0
     D  XDIND2                 6      7  0
      *
      * Declared stand-alone variables
     D  P0RTN          S              7
     D  WP0001         S              1
     D  W0ICL          S              1
     D  W0RTN          S              7
     D  W0RSL          S              1
     D  W0RSF          S              1
     D  W0RTW          S              9  0
     D  W0ENV          S              3
     D  ##TME          S              6  0
     D  YL0001         S              1
     D  YL0002         S              3  0
     D  WL0001         S              3  0
     D  WL0002         S              1
     D  WL0003         S              3  0
     D  YL0003         S              3  0
     D  YL0004         S              7  0
     D  WQSB01         S                   LIKE(WBBWC3)
     D  WL0004         S              3  0
     D  WL0005         S              3
     D  WL0006         S              7  0
     D  WQSC01         S                   LIKE(WCAIC3)
     D  WQSC02         S                   LIKE(WCAJCD)
     D  WQSC03         S                   LIKE(WCDHDT)
     D  YL0005         S             50
     D  WQ0001         S              3  0
     D  WQ0002         S             10
     D  WQ0003         S             40
     D  W0CLPG         S             10
     D  YL0006         S              3
     D  YL0007         S            100
     D  ZAMSID         S              7
     D  ZAMSGF         S             10
     D  W0MTX          S            132
     D  ZADFMF         S             10
     D  YL0008         S              3
     D  YL0009         S              7  0
     D  YL0010         S              8  0
     D  YL0011         S              8  0
     D  YL0012         S             50
     D  YL0013         S              1
     D  YL0015         S            100
     D  ZQ             S              5  0
     D  YL0016         S             10
     D  WN0001         S              4  0
     D  WN0002         S              2  0
     D  WN0003         S              2  0
     D  WN0004         S              4
     D  WN0005         S              2
     D  WN0006         S              2
     D  XDWK1          S              8  0
     D  XDAY1          S              6  0
     D  XDAY2          S              6  0
     D  XDSEL          S              1
     D  XDCDW          S              7
     D  XDWSL          S              1  0
     D  WUDLN          S             10
     D  XABEG          S              6  0
     D  XAEND          S              6  0
     D  XDURR          S              8  0
     D  XDLSW          S              1  0
     D  YY             S              6  0
     D  YL0017         S             10
     D  YN0001         S             10
     D  YL0018         S            100
     D  YL0019         S            100
     D  WQSD01         S                   LIKE(WBBWC3)
     D  YL0020         S             11  2
     D  WL0007         S              3  0
     D  WL0008         S              3
     D  WL0009         S             11  2
     D  WQSG01         S                   LIKE(WFAIC3)
     D  WQSG02         S                   LIKE(WFAJCD)
     D  XDTSDL         S             26
     D  WQSH01         S                   LIKE(WGY1NX)
     D  WQSH02         S                   LIKE(WGU4SX)
     D  WQSH03         S                   LIKE(WGAID8)
     D  Y0CX01         S              1
     D  YL0021         S              1
     D  WQ0004         S             50
     D  WQ0005         S             80
     D  WQ0006         S            500
     D  ZAPGMQ         S             10
     D  ZAPGRL         S              5
     D  ZAMSTP         S              7
     D  YILE           S              1
     D  W0PMT          S              1
      /EJECT
      * Parameter declarations
     D P1PARM          DS
      * FLD: OMS Transformation Ctl
      * I :  Module Release Status
     D  P1OCSC                 1      1
     D                 DS
     D  ZAMSDA                 1    132
      * Message data for 'Auto Inv Restorat'n Notfy'
      * Company Number Alpha
     D  ZA0001                 1      3
      * Message data for 'ESNDMAIL-AutoInvRest-Co'
      * Email Address
     D  ZA0002                 1     50
      * Subject Line USR
     D  ZA0003                51    150
      * Office Message USR
     D  ZA0004               151    282
     I@JYREEY
      * Company Defaults Internal Plant Companies Only CO
      * Renamed input format fields
     I              JYAIC3                      WAAIC3
     I              JYZ9ST                      WAZ9ST
     I              JYCSST                      WACSST
     I              JYZ8ST                      WAZ8ST
     I              JYCXST                      WACXST
     I              JYSWST                      WASWST
     I              JYXXTM                      WAXXTM
     I              JYUECD                      WAUECD
     I              JYHSST                      WAHSST
     I              JYAMEO                      WAAMEO
     I              JYSSDF                      WASSDF
     I              JYPDFT                      WAPDFT
     I              JYYISX                      WAYISX
     I              JYYJSX                      WAYJSX
     I              JYYKSX                      WAYKSX
     I              JYYLSX                      WAYLSX
     I              JYYMSX                      WAYMSX
     I              JYYNSX                      WAYNSX
     I              JYUVST                      WAUVST
     I              JYUWST                      WAUWST
     I              JYUXST                      WAUXST
     I              JYVSST                      WAVSST
     I              JYAATM                      WAAATM
     I              JYAYNA                      WAAYNA
     I              JYA0NA                      WAA0NA
     I              JYAXDT                      WAAXDT
      *
     I@ADREWA
      * Warehouse Codes           ShipCo/Warehouse
      * Renamed input format fields
     I              ADAJCD                      WBAJCD
     I              ADF8NA                      WBF8NA
     I              ADACNA                      WBACNA
     I              ADADNA                      WBADNA
     I              ADAENA                      WBAENA
     I              ADAJNA                      WBAJNA
     I              ADBTTX                      WBBTTX
     I              ADAOCD                      WBAOCD
     I              ADBGCD                      WBBGCD
     I              ADVHST                      WBVHST
     I              ADMPNA                      WBMPNA
     I              ADWPST                      WBWPST
     I              ADXUST                      WBXUST
     I              ADT0ST                      WBT0ST
     I              ADT1ST                      WBT1ST
     I              ADDBNB                      WBDBNB
     I              ADT2ST                      WBT2ST
     I              ADT3ST                      WBT3ST
     I              ADT4ST                      WBT4ST
     I              ADT6ST                      WBT6ST
     I              ADBWC3                      WBBWC3
     I              ADBTC3                      WBBTC3
     I              ADBUC3                      WBBUC3
     I              ADBVC3                      WBBVC3
     I              ADFCAA                      WBFCAA
     I              ADRQSX                      WBRQSX
     I              ADRRSX                      WBRRSX
     I              ADRSSX                      WBRSSX
     I              ADRTSX                      WBRTSX
     I              ADT7ST                      WBT7ST
     I              ADT8ST                      WBT8ST
     I              ADRNSX                      WBRNSX
     I              ADROSX                      WBROSX
     I              ADRPSX                      WBRPSX
     I              ADUVST                      WBUVST
     I              ADUWST                      WBUWST
     I              ADUXST                      WBUXST
     I              ADVSST                      WBVSST
     I              ADAATM                      WBAATM
     I              ADAYNA                      WBAYNA
     I              ADA0NA                      WBA0NA
     I              ADAXDT                      WBAXDT
      *
     I@HCCPJ0
      * Physical Count Control    Retrieval index
      * Renamed input format fields
     I              HCAIC3                      WCAIC3
     I              HCAJCD                      WCAJCD
     I              HCDHDT                      WCDHDT
     I              HCOFCD                      WCOFCD
     I              HCTGST                      WCTGST
     I              HCUVST                      WCUVST
     I              HCUWST                      WCUWST
     I              HCUXST                      WCUXST
     I              HCAATM                      WCAATM
     I              HCAYNA                      WCAYNA
     I              HCA0NA                      WCA0NA
     I              HCAXDT                      WCAXDT
      *
     I@KMREHC
      * Company Values            Retrieval index
      * Renamed input format fields
     I              KMAIC3                      WDAIC3
     I              KMV8CD                      WDV8CD
     I              KMAUNA                      WDAUNA
     I              KMI5ST                      WDI5ST
     I              KMBXTX                      WDBXTX
     I              KMM8NB                      WDM8NB
     I              KMUVST                      WDUVST
     I              KMUWST                      WDUWST
     I              KMUXST                      WDUXST
     I              KMVSST                      WDVSST
     I              KMAATM                      WDAATM
     I              KMAYNA                      WDAYNA
     I              KMA0NA                      WDA0NA
     I              KMAXDT                      WDAXDT
      *
     I@DPRETD
      * System Values             Retrieval index       NV
      * Renamed input format fields
     I              DPDOCD                      WEDOCD
     I              DPAUNA                      WEAUNA
     I              DPI5ST                      WEI5ST
     I              DPBXTX                      WEBXTX
     I              DPM8NB                      WEM8NB
     I              DPUVST                      WEUVST
     I              DPUWST                      WEUWST
     I              DPUXST                      WEUXST
     I              DPVSST                      WEVSST
     I              DPAATM                      WEAATM
     I              DPAYNA                      WEAYNA
     I              DPA0NA                      WEA0NA
     I              DPAXDT                      WEAXDT
      *
     I@B0REHD
      * Item Balance              Co/Whse/Item
      * Renamed input format fields
     I              B0AIC3                      WFAIC3
     I              B0HGCD                      WFHGCD
     I              B0AJCD                      WFAJCD
     I              B0AGCS                      WFAGCS
     I              B0AECS                      WFAECS
     I              B0BACS                      WFBACS
     I              B0BBCS                      WFBBCS
     I              B0CBPR                      WFCBPR
     I              B0GUDT                      WFGUDT
     I              B0XYST                      WFXYST
     I              B0CTPR                      WFCTPR
     I              B0G4DT                      WFG4DT
     I              B0BOWG                      WFBOWG
     I              B0DDQT                      WFDDQT
     I              B0DEQT                      WFDEQT
     I              B0DFQT                      WFDFQT
     I              B0HDQT                      WFHDQT
     I              B0HEQT                      WFHEQT
     I              B0AJQT                      WFAJQT
     I              B0AQQT                      WFAQQT
     I              B0AUQT                      WFAUQT
     I              B0EMQT                      WFEMQT
     I              B0DOQT                      WFDOQT
     I              B0ATNA                      WFATNA
     I              B0AKDT                      WFAKDT
     I              B0ANDT                      WFANDT
     I              B0IDVA                      WFIDVA
     I              B0JVST                      WFJVST
     I              B0BZPC                      WFBZPC
     I              B0DGQT                      WFDGQT
     I              B0DIDT                      WFDIDT
     I              B0ALCD                      WFALCD
     I              B0BFDY                      WFBFDY
     I              B0DJDT                      WFDJDT
     I              B0BGDY                      WFBGDY
     I              B0DKDT                      WFDKDT
     I              B0J2ST                      WFJ2ST
     I              B0DJQT                      WFDJQT
     I              B0BNWG                      WFBNWG
     I              B0DLDT                      WFDLDT
     I              B0DPQT                      WFDPQT
     I              B0DQQT                      WFDQQT
     I              B0DMDT                      WFDMDT
     I              B0M0ST                      WFM0ST
     I              B0J9ST                      WFJ9ST
     I              B0KBST                      WFKBST
     I              B0AKC8                      WFAKC8
     I              B0RINB                      WFRINB
     I              B0RHNB                      WFRHNB
     I              B0RGNB                      WFRGNB
     I              B0UVST                      WFUVST
     I              B0UWST                      WFUWST
     I              B0UXST                      WFUXST
     I              B0VSST                      WFVSST
     I              B0AATM                      WFAATM
     I              B0AYNA                      WFAYNA
     I              B0A0NA                      WFA0NA
     I              B0AXDT                      WFAXDT
      *
     I@CYCPM0
      * WIM PFS Inv Restoration   Co/Whse/TransDte/Time/Se
      * Renamed input format fields
     I              CYY1NX                      WGY1NX
     I              CYAID8                      WGAID8
     I              CYAFTS                      WGAFTS
     I              CYBCNY                      WGBCNY
     I              CYXKSX                      WGXKSX
     I              CYY2NX                      WGY2NX
     I              CYU4SX                      WGU4SX
     I              CYADNY                      WGADNY
     I              CYZ6NX                      WGZ6NX
     I              CYP7DT                      WGP7DT
     I              CYBMTS                      WGBMTS
     I              CYZ4NX                      WGZ4NX
     I              CYBOTS                      WGBOTS
     I              CYACNY                      WGACNY
     I              CYBPTS                      WGBPTS
     I              CYBNTS                      WGBNTS
     I              CYCUNY                      WGCUNY
     I              CYCVNY                      WGCVNY
     I              CYUWSX                      WGUWSX
     I              CYUXSX                      WGUXSX
     I              CYV3SX                      WGV3SX
     I              CYBQTS                      WGBQTS
     I              CYBRTS                      WGBRTS
      *
      /EJECT
      *****************************************************************
      * Entry parameters
     C     *ENTRY        PLIST
     C                   PARM                    P0RTN
     C     P1OCSC        PARM                    WP0001                         Module Release
      *****************************************************************
      * Initialize
     C                   EXSR      ZZINIT
      *
      * Exc Auto Inv RestCmpWIMXF
      * NOTE: Clone from PBOHXFR. Any changes here should consider changi
      *       PBOHXFR also.
      * Rtv Auto Inv RestCmpWIMRT - Company Defaults Internal  * 
     C                   EXSR      SARVGN
      *----------------------------------------------------------------
      * Exit program
     C     AAEXIT        TAG
     C                   EVAL      P0RTN = ' '
     C                   EXSR      ZYEXPG
      *================================================================
      /EJECT
     CSR   SARVGN        BEGSR
      *================================================================
      * Rtv Auto Inv RestCmpWIMRT - Company Defaults Internal  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Establish starting position
     C     *LOVAL        SETLL     @JYREEY                                      *
     C                   READ      @JYREEY                                90    *
      * Data record not found
     C   90              MOVEL     'USR2025'     W0RTN
      * USER: Process Data record
      * If record is active, process it
      * CASE: DB1.Record Status is Active
     C                   DOW       NOT *IN90
      * Determine if Auto Inventory Restoration set up for company
      * RTV WHS Auto Inv Rest  RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                   IF        WAVSST = 'A'
     C                   Z-ADD     WAAIC3        WL0001                         Shipping Compan
     C                   EXSR      SBRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0002        YL0001                         WHS Auto Inv Re
     C                   Z-ADD     WL0003        YL0002                         WHS Auto Inv Re
      * Set WHS Auto Inv Rest USR or Send Email if not processed
      * CASE: LCL.WHS Auto Inv Rest Co  USR is Yes
      * If Count = zero
      * CASE: LCL.WHS Auto Inv Rest Cnt USR is Eq Zero
     C                   IF        YL0001 = 'Y'
      * No Warehouses were processed for Company
     C                   IF        YL0002 = 0
     C                   MOVEL     'N'           YL0001                         WHS Auto Inv Re
      * Send Email Message
      * Rtv Alpha Value       XF - Company Values  * 
     C                   CALL      'POMTXFR'                            90      Rtv Alpha Value
     C                   PARM      *BLANK        W0RTN
     C                   PARM      WAAIC3        WQ0001                         Company Number
     C                   PARM      @CN(002)      WQ0002                         Company Value C
     C     YL0005        PARM      *BLANK        WQ0003                         System Value Al
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'POMTXFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        99        *
     C                   END
      * If Email address is found, send email
      * CASE: LCL.Email Address is Entered
     C                   IF        YL0005 <> ' '
     C                   EVAL      YL0006 = ' '                                 Company Number
     C                   MOVEL     WAAIC3        YL0006                         Company Number
      * S13816 DN 09/28/18-Changed Message Content & use RTV MsgID USR509
      * Setup message data for message
     C                   MOVEL     YL0006        ZA0001                         Company Number
      * Retrieve message Auto Inv Restorat'n Notfy
     C                   MOVEL     ZADFMF        ZAMSGF
     C                   CALL      'Y2RVMGC'                            90      *
     C                   PARM      *BLANK        W0RTN                          Return code
     C                   PARM      'USR5090'     ZAMSID                         Message ID
     C                   PARM                    ZAMSGF                         Message file
     C                   PARM                    ZAMSDA                         Message data
     C     YL0007        PARM                    W0MTX                          Returned messag
     C                   EVAL      ZAMSDA = ' '
     C                   EVAL      ZAMSGF = ' '
      * S13816 DN 09/28/18-Commented Out. Doesn't Work & is Not Required.
      * Setup message data for message
     C                   MOVEL     YL0005        ZA0002                         Email Address
     C                   MOVEL     YL0007        ZA0003                         Subject Line US
     C                   EVAL      ZA0004 = ' '                                 Office Message
      *
      * Execute message
     C                   MOVEL     ZADFMF        ZAMSGF
     C                   CALL      'Y2EXMCC'                            90      *
     C                   PARM      *BLANK        W0RTN                          Return code
     C                   PARM      'USR4974'     ZAMSID                         Message ID
     C                   PARM                    ZAMSGF                         Message file
     C                   PARM                    ZAMSDA                         Message data
     C                   EVAL      ZAMSDA = ' '
     C                   EVAL      ZAMSGF = ' '
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   END
      *
      * Error detected during execution
     C                   IF        W0RTN <> ' '
     C                   SETON                                        99        *
     C                   END
      *
     C                   END                                                    *FI
     C                   ELSE
      * CASE: *OTHERWISE
      * At least one Warehouse was processed for the Company
     C                   MOVEL     'Y'           YL0001                         WHS Auto Inv Re
     C                   END                                                    *FI
     C                   ELSE
      * CASE: *OTHERWISE
      * This Company is not using Auto Inventory Restoration
     C                   MOVEL     'N'           YL0001                         WHS Auto Inv Re
     C                   END                                                    *FI
      * Rtv Auto Inv RestCmpWIMRT - Warehouse Codes  * 
     C                   EXSR      SDRVGN
     C                   END                                                    *FI
     C                   READ      @JYREEY                                90    *
     C                   ENDDO
      *================================================================
     CSR   SAEXIT        ENDSR
      /EJECT
     CSR   SBRVGN        BEGSR
      *================================================================
      * RTV WHS Auto Inv Rest  RT - Warehouse  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
     C                   MOVEL     'N'           WL0002                         WHS Auto Inv Re
     C                   Z-ADD     *ZERO         WL0003                         WHS Auto Inv Re
     C                   Z-ADD     *ZERO         YL0003                         WHS Auto Inv Re
     C                   Z-ADD     ##JDT         YL0004                         Physical Start
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSB         KLIST
     C                   KFLD                    WQSB01                         Shipping Compan
      * Setup key
     C                   Z-ADD     WL0001        WQSB01                         Shipping Compan
      * Establish starting position
     C     KRSSB         SETLL     @ADREWA                                      *
     C     KRSSB         READE     @ADREWA                                90    *
      * Data record not found
     C   90              MOVEL     'USR0007'     W0RTN
      * USER: Process Data record
      * CASE: DB1.WHS Auto Inv Restoration is Yes
     C                   DOW       NOT *IN90
     C                   IF        WBRPSX = 'Y'
     C                   MOVEL     'Y'           WL0002                         WHS Auto Inv Re
      * Rtv Auto Inv Rest Cmp  RT - Physical Count Control  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     WL0001        WL0004                         Company Number
     C                   MOVEL(P)  WBAJCD        WL0005                         Warehouse Code
     C                   Z-ADD     YL0004        WL0006                         Physical Start
     C                   EXSR      SCRVGN
      * CASE: PGM.*Return code is *Record already exists
     C                   IF        W0RTN = @CN(001)
     C                   ADD       1             YL0003                         WHS Auto Inv Re
     C                   END                                                    *FI
     C                   END                                                    *FI
     C     KRSSB         READE     @ADREWA                                90    *
     C                   ENDDO
      * USER: Exit processing
     C                   Z-ADD     YL0003        WL0003                         WHS Auto Inv Re
      *================================================================
     CSR   SBEXIT        ENDSR
      /EJECT
     CSR   SCRVGN        BEGSR
      *================================================================
      * Rtv Auto Inv Rest Cmp  RT - Physical Count Control  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSC         KLIST
     C                   KFLD                    WQSC01                         Company Number
     C                   KFLD                    WQSC02                         Warehouse Code
     C                   KFLD                    WQSC03                         Physical Start
      * Setup key
     C                   Z-ADD     WL0004        WQSC01                         Company Number
     C                   MOVEL     WL0005        WQSC02                         Warehouse Code
     C                   Z-ADD     WL0006        WQSC03                         Physical Start
      * Establish starting position
     C     KRSSC         SETLL     @HCCPJ0                                      *
     C     KRSSC         READE     @HCCPJ0                                90    *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR1487'     W0RTN
      * USER: Processing if Data record not found
     C                   MOVEL     'Y2U0005'     W0RTN                          *Return code
     C                   GOTO      SCEXIT
     C                   ENDIF
      *
      * USER: Process Data record
     C                   DOW       NOT *IN90
     C                   MOVEL     'Y2U0003'     W0RTN                          *Return code
     C     KRSSC         READE     @HCCPJ0                                90    *
     C                   ENDDO
      *================================================================
     CSR   SCEXIT        ENDSR
      /EJECT
     CSR   SDRVGN        BEGSR
      *================================================================
      * Rtv Auto Inv RestCmpWIMRT - Warehouse Codes  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
     C                   EVAL      YL0008 = ' '                                 Company Number
     C                   MOVEL     WAAIC3        YL0008                         Company Number
     C                   Z-ADD     ##JDT         YL0009                         Physical Start
      * LCL.Transaction Date D8# USR = JOB.*Job date
     C                   IF        ##JDT = *ZERO
     C                   Z-ADD     *ZERO         YL0010
     C                   ELSE
     C     ##JDT         ADD       19000000      YL0010                         Transaction Dat
     C                   END
     C                   Z-ADD     YL0010        YL0011                         PFS Transaction
      * Initialize for Email Messaging.
      * CASE: *OTHERWISE
      * RTV Alpha Value        RT - Company Values  * INVRST for Email Ad
     C                   EXSR      SERVGN
     C                   MOVEL     'N'           YL0013                         Send Email USR
     C                   EVAL      YL0014 = ' '                                 Email Message 2
     C                   Z-ADD     0             ZQ
     C     @CN(003)      CAT(P)    @CN(004):ZQ   YL0015                         Subject Line US
     C                   Z-ADD     1             ZQ
     C     YL0015        CAT(P)    YL0008:ZQ     YL0015                         Subject Line US
     C                   Z-ADD     1             ZQ
     C     YL0015        CAT(P)    'Date':ZQ     YL0015                         Subject Line US
      * Format Date.
      * CASE: *OTHERWISE
      *
     C                   Z-ADD     *ZERO         WN0001                         YYYY numeric US
     C                   Z-ADD     *ZERO         WN0002                         MM   numeric US
     C                   Z-ADD     *ZERO         WN0003                         DD   numeric US
     C                   EVAL      WN0004 = ' '                                 YYYY alpha   US
     C                   EVAL      WN0005 = ' '                                 MM   alpha   US
     C                   EVAL      WN0006 = ' '                                 DD   alpha   US
      *
      * Cvt DTE to MM/DD/YYYY  IF
      * Break apart date.
      * PAR.YYYY numeric USR = PAR.@Date - ATR *YEAR
     C     ##JDT         ADD       1000000       XDINDT
     C     1800          ADD       XDINYY        WN0001
      * PAR.MM   numeric USR = PAR.@Date - ATR *MONTH
     C     ##JDT         ADD       1000000       XDINDT
     C                   Z-ADD     XDINMM        WN0002
      * PAR.DD   numeric USR = PAR.@Date - ATR *DAY OF MONTH
     C     ##JDT         ADD       1000000       XDINDT
     C                   EXSR      XCVTA
     C                   Z-ADD     XDAY1         XDAY2
     C                   Z-ADD     0             XDINDD
     C                   EXSR      XCVTA
     C                   MOVEL     '1'           XDSEL
     C                   MOVEL     '1111111'     XDCDW
     C                   EXSR      XDOWS
     C                   MOVEL     'NONE'        WUDLN
     C                   EXSR      XDUDY
     C                   MOVE      XDURR         WN0003
      * Convert to alpha.
     C                   EVAL      WN0004 = ' '                                 YYYY alpha   US
     C                   MOVEL     WN0001        WN0004                         YYYY alpha   US
     C                   MOVEL     WN0002        WN0005                         MM   alpha   US
     C                   MOVEL     WN0003        WN0006                         DD   alpha   US
      * Put back together.
     C                   Z-ADD     *ZERO         ZQ
     C     WN0005        CAT(P)    '/':ZQ        YL0016                         Date mm/dd/yyyy
     C                   Z-ADD     *ZERO         ZQ
     C     YL0016        CAT(P)    WN0006:ZQ     YL0016                         Date mm/dd/yyyy
     C                   Z-ADD     *ZERO         ZQ
     C     YL0016        CAT(P)    '/':ZQ        YL0016                         Date mm/dd/yyyy
     C                   Z-ADD     *ZERO         ZQ
     C     YL0016        CAT(P)    WN0004:ZQ     YL0016                         Date mm/dd/yyyy
     C                   Z-ADD     1             ZQ
     C     YL0015        CAT(P)    YL0016:ZQ     YL0015                         Subject Line US
      * RTV Data Libraries     RT - System Values  * In TEST or PROD
     C                   EXSR      SFRVGN
      * If Not PROD Then Append 'TEST' to Subject Line.
      * CASE: LCL.Library List Code is Not PRKFLIB
     C                   IF        YL0017 <> @CN(007)
     C                   Z-ADD     1             ZQ
     C     YL0015        CAT(P)    @CN(008):ZQ   YL0015                         Subject Line US
     C                   END                                                    *FI
     C                   EVAL      YL0018 = ' '                                 Email Msg Line-
     C                   MOVEL     @CN(009)      YL0018                         Email Msg Line-
     C                   EVAL      YL0019 = ' '                                 Email Msg Line-
     C                   MOVEL     @CN(010)      YL0019                         Email Msg Line-
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSD         KLIST
     C                   KFLD                    WQSD01                         Shipping Compan
      * Setup key
     C                   Z-ADD     WAAIC3        WQSD01                         Shipping Compan
      * Establish starting position
     C     KRSSD         SETLL     @ADREWA                                      *
     C     KRSSD         READE     @ADREWA                                90    *
      * Data record not found
     C   90              MOVEL     'USR0007'     W0RTN
      * USER: Process Data record
      * If Warehouse Auto Inventory Restoration Company, check warehouse
      * CASE: PAR.WHS Auto Inv Rest Co  USR is Yes
     C                   DOW       NOT *IN90
      * If Whs Auto Inventory Restoration Company, Check WIM REL Status.
      * CASE: DB1.WHS Auto Inv Restoration is Yes
     C                   IF        YL0001 = 'Y'
      * If WIM REL 1 is 'Live', continue with existing process.
      * CASE: PAR.Module Release Status is Is Live
     C                   IF        WBRPSX = 'Y'
      * Rtv Auto Inv Rest Cmp  RT - Physical Count Control  * 
      * Move input parameters to subroutine local variables.
     C                   IF        P1OCSC = 'Y'
     C                   Z-ADD     WBBWC3        WL0004                         Company Number
     C                   MOVEL(P)  WBAJCD        WL0005                         Warehouse Code
     C                   Z-ADD     YL0009        WL0006                         Physical Start
     C                   EXSR      SCRVGN
      * Check Return Code.
      * CASE: PGM.*Return code is *Record does not exist
      * WI517 DN 05/04/23-Replaced Item Lot Location with Item Balance Fi
      * RTV On Hand Qty f/WIM RT - Item Balance  * 
      * Move input parameters to subroutine local variables.
     C                   IF        W0RTN = @CN(011)
     C                   Z-ADD     WAAIC3        WL0007                         Company Number
     C                   MOVEL(P)  WBAJCD        WL0008                         Warehouse Code
     C                   EXSR      SGRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0009        YL0020                         On Hand UOM1 Su
      * Qty On Hand > 0, Send Email.
      * CASE: LCL.On Hand UOM1 Summary is Greater than zero
      * Add to 'Not Received' Email Msg Line.
     C                   IF        YL0020 > 0
     C                   MOVEL     'Y'           YL0013                         Send Email USR
     C                   Z-ADD     1             ZQ
     C     YL0019        CAT(P)    WBAJCD:ZQ     YL0019                         Email Msg Line-
     C                   END                                                    *FI
     C                   ELSE
      * CASE: *OTHERWISE
      * Add to 'Posted' Email Message Line.
     C                   MOVEL     'Y'           YL0013                         Send Email USR
     C                   Z-ADD     1             ZQ
     C     YL0018        CAT(P)    WBAJCD:ZQ     YL0018                         Email Msg Line-
     C                   END                                                    *FI
     C                   END                                                    *FI
      * If WIM REL 1 is 'Parallel', check WIM PFS Inv Restoration File.
      * CASE: PAR.Module Release Status is Parallel
      * Rtv for Existence     RT - WIM PFS Inv Restoration  * 
     C                   IF        P1OCSC = 'P'
     C                   EXSR      SHRVGN
      * Check Return Code.
      * CASE: PGM.*Return code is *Normal
      * Add to 'Posted' Email Message Line.
     C                   IF        W0RTN = ' '
     C                   MOVEL     'Y'           YL0013                         Send Email USR
     C                   Z-ADD     1             ZQ
     C     YL0018        CAT(P)    WBAJCD:ZQ     YL0018                         Email Msg Line-
     C                   ELSE
      * CASE: *OTHERWISE
      * RTV On Hand Qty f/WIM RT - Item Balance  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     WAAIC3        WL0007                         Company Number
     C                   MOVEL(P)  WBAJCD        WL0008                         Warehouse Code
     C                   EXSR      SGRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0009        YL0020                         On Hand UOM1 Su
      * Qty On Hand > 0, Send Email.
      * CASE: LCL.On Hand UOM1 Summary is Greater than zero
      * Add to 'Not Received' Email Msg Line.
     C                   IF        YL0020 > 0
     C                   MOVEL     'Y'           YL0013                         Send Email USR
     C                   Z-ADD     1             ZQ
     C     YL0019        CAT(P)    WBAJCD:ZQ     YL0019                         Email Msg Line-
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C     KRSSD         READE     @ADREWA                                90    *
     C                   ENDDO
      * USER: Exit processing
      * Send Email?
      * CASE:
      *  - c1 AND c2
      *   |- c1    : LCL.Send Email USR is Yes
      *   |- c2    : LCL.Email Address is Entered
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        YL0013 = 'Y'
     C                   IF        YL0012 <> ' '
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Format Email Message Body.
      * CASE: *OTHERWISE
     C                   IF        Y0CX01 = '1'
     C                   MOVEL     'N'           YL0021                         Force New Line
      * Posted Transactions Exist?
      * CASE: LCL.Email Msg Line-Posted U is            Posted:
      * No Warehouse recorded.
     C                   IF        YL0018 = @CN(009)
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      YL0014 = ' '                                 Email Message 2
     C                   MOVEL     YL0018        YL0014                         Email Message 2
     C                   MOVEL     'Y'           YL0021                         Force New Line
     C                   END                                                    *FI
      * Not Received Transactions Exist?
      * CASE: LCL.Email Msg Line-Not Rcvd U is Not Received:
      * No Warehouse recorded.
     C                   IF        YL0019 = @CN(010)
     C                   ELSE
      * CASE: *OTHERWISE
      * Force New Line?
      * CASE: LCL.Force New Line USR is Yes
     C                   IF        YL0021 = 'Y'
     C                   Z-ADD     1             ZQ
     C     YL0014        CAT(P)    '&N':ZQ       YL0014                         Email Message 2
     C                   Z-ADD     1             ZQ
     C     YL0014        CAT(P)    YL0019:ZQ     YL0014                         Email Message 2
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      YL0014 = ' '                                 Email Message 2
     C                   MOVEL     YL0019        YL0014                         Email Message 2
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Exc ESNDMAIL Generic2 CL - /UT User Programs  * 
     C                   CALL      'PUX2UPC'                            90      Exc ESNDMAIL Ge
     C                   PARM      YL0012        WQ0004                         Email Address
     C                   PARM      YL0015        WQ0005                         Email Subject 2
     C                   PARM      YL0014        WQ0006                         Email Message 2
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PUX2UPC'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
     C                   END
     C                   END                                                    *FI
      *================================================================
     CSR   SDEXIT        ENDSR
      /EJECT
     CSR   SERVGN        BEGSR
      *================================================================
      * RTV Alpha Value        RT - Company Values  * INVRST for Email A
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSE         KLIST
     C                   KFLD                    WDAIC3                         Company Number
     C                   KFLD                    WDV8CD                         Company Value C
      * Setup key
     C                   Z-ADD     WAAIC3        WDAIC3                         Company Number
     C                   MOVEL     @CN(002)      WDV8CD                         Company Value C
      * Establish starting position
     C     KRSSE         CHAIN     @KMREHC                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR2221'     W0RTN
      * USER: Processing if Data record not found
     C                   MOVEL     'Y2U0005'     W0RTN                          *Return code
     C                   GOTO      SEEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     WDBXTX        YL0012                         System Value Al
     C                   ENDIF
      *================================================================
     CSR   SEEXIT        ENDSR
      /EJECT
     CSR   SFRVGN        BEGSR
      *================================================================
      * RTV Data Libraries     RT - System Values  * In TEST or PROD
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KPSSF         KLIST
     C                   KFLD                    WEDOCD                         System Value Co
      * Setup key
     C                   EVALR     WEDOCD = ' '                                 System Value Co
     C                   MOVEL     'DTALIB'      WEDOCD                         System Value Co
      * Establish starting position
     C     KPSSF         SETLL     @DPRETD                                      *
     C                   READ      @DPRETD                                90    *
      * Data record not found
     C   90              MOVEL     'USR0759'     W0RTN
      * USER: Process Data record
      * CASE: DB1.System Value Code is Data File Library
     C                   DOW       NOT *IN90
     C                   IF        WEDOCD = @CN(005)
     C                   MOVEL     WEBXTX        YL0017                         Library List Co
     C                   ELSE
      * CASE: DB1.System Value Code is History File Library
     C                   IF        WEDOCD = @CN(006)
     C                   MOVEL     WEBXTX        YN0001                         @Library List C
     C                   GOTO      SFEXIT                                       *QUIT
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   READ      @DPRETD                                90    *
     C                   ENDDO
      *================================================================
     CSR   SFEXIT        ENDSR
      /EJECT
     CSR   SGRVGN        BEGSR
      *================================================================
      * RTV On Hand Qty f/WIM RT - Item Balance  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   Z-ADD     *ZERO         WL0009                         On Hand UOM1 Su
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSG         KLIST
     C                   KFLD                    WQSG01                         Company Number
     C                   KFLD                    WQSG02                         Warehouse Code
      * Setup key
     C                   Z-ADD     WL0007        WQSG01                         Company Number
     C                   MOVEL     WL0008        WQSG02                         Warehouse Code
      * Establish starting position
     C     KRSSG         SETLL     @B0REHD                                      *
     C     KRSSG         READE     @B0REHD                                90    *
      * Data record not found
     C   90              MOVEL     'USR0328'     W0RTN
      * USER: Process Data record
      * CASE: DB1.On Hand UOM1 Summary is Greater than zero
     C                   DOW       NOT *IN90
      * PAR = DB1 By name
     C                   IF        WFDDQT > 0
     C                   Z-ADD     WFDDQT        WL0009                         On Hand UOM1 Su
     C                   GOTO      SGEXIT                                       *QUIT
     C                   END                                                    *FI
     C     KRSSG         READE     @B0REHD                                90    *
     C                   ENDDO
      *================================================================
     CSR   SGEXIT        ENDSR
      /EJECT
     CSR   SHRVGN        BEGSR
      *================================================================
      * Rtv for Existence     RT - WIM PFS Inv Restoration  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSH         KLIST
     C                   KFLD                    WQSH01                         PFS Company Num
     C                   KFLD                    WQSH02                         PFS Warehouse C
     C                   KFLD                    WQSH03                         PFS Transaction
      * Setup key
     C                   Z-ADD     WBBWC3        WQSH01                         PFS Company Num
     C                   MOVEL     WBAJCD        WQSH02                         PFS Warehouse C
     C                   Z-ADD     YL0011        WQSH03                         PFS Transaction
      * Establish starting position
     C     KRSSH         SETLL     @CYCPM0                                      *
     C     KRSSH         READE     @CYCPM0                                90    *
      * Data record not found
     C   90              MOVEL     'USR5287'     W0RTN
      *================================================================
     CSR   SHEXIT        ENDSR
      /EJECT
     CSR   XCVTA         BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C     XDINYY        SUB       1             XDWK1
     C     XDWK1         MULT      365.25        XDAY1
     C                   IF        XDWK1 >= 300
     C                   SUB       2             XDAY1
     C                   ELSE
     C                   IF        XDWK1 >= 100
     C                   SUB       1             XDAY1
     C                   END
     C                   END
      * (from the beginning of the year to the beginning of the month:)
     C     XDINMM        SUB       1             XDWK1
      *     ...+31*(MM-1) (for January-February) ...
     C                   IF        XDINMM < 3
     C                   MULT      31            XDWK1
     C                   ADD       XDWK1         XDAY1
     C                   ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                   MULT      30            XDWK1
     C                   ADD       XDWK1         XDAY1
      *         ...-2 (for preceding February) ...
     C                   SUB       2             XDAY1
      *         ...+1 (for preceding February, if leap year) ...
     C                   IF        XDINYY <> 100 AND
     C                             XDINYY <> 300
     C     XDINYY        DIV       4             XDWK1
     C                   MVR                     XDWK1
     C                   IF        XDWK1 = 0
     C                   ADD       1             XDAY1
     C                   END
     C                   END
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C                   IF        XDINMM < 8
     C     XDINMM        MULT      .5            XDWK1
     C                   ADD       XDWK1         XDAY1
     C                   ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C     XDINMM        ADD       1             XDWK1
     C                   MULT      .5            XDWK1
     C                   ADD       XDWK1         XDAY1
     C                   END
     C                   END
      * ...+DD (days in the month up to the ending date)
     C                   ADD       XDINDD        XDAY1
      *================================================================
     CSR   XCVTAE        ENDSR
      /EJECT
     CSR   XDOWS         BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                   MOVEA     XDCDW         YDOW
     C                   Z-ADD     0             XDWSL
     C                   Z-ADD     1             YY
     C                   DOW       YY <= 7
     C                   IF        YDOW(YY) = XDSEL
     C                   ADD       1             XDWSL
     C                   END
     C                   ADD       1             YY
     C                   END
      *================================================================
     CSR   XDOWSE        ENDSR
      /EJECT
     CSR   XDUDY         BEGSR
      *================================================================
      * Calculate duration, *DAYS
      *================================================================
     C                   IF        XDAY1 < 1 OR
     C                             XDAY2 < 1
     C                   Z-ADD     0             XDURR
     C                   MOVEL     'Y2U0006'     W0RTN
     C                   GOTO      XDUDYE
     C                   END
      * From date2 to date1
     C                   IF        XDAY1 >= XDAY2
     C                   Z-ADD     XDAY2         XABEG
     C                   Z-ADD     XDAY1         XAEND
     C                   ELSE
      * From date1 to date2
     C                   Z-ADD     XDAY1         XABEG
     C                   Z-ADD     XDAY2         XAEND
     C                   END
      * None days of week selected
     C                   IF        XDWSL = 0
     C                   Z-ADD     0             XDURR
     C                   GOTO      XDUDYC
     C                   END
     C     XAEND         SUB       XABEG         XDURR
      * All days of week selected
     C                   IF        XDWSL = 7
     C                   GOTO      XDUDYC
     C                   END
      * Some days of week selected
     C                   DIV       7             XDURR
     C                   MVR                     XDLSW
     C                   MULT      XDWSL         XDURR
      * Determine day of week of the beginning date
     C                   IF        XDLSW <> 0
     C     XABEG         ADD       3             YY
     C                   DIV       7             YY
     C                   MVR                     YY
      * Loop: Increment the date by the last week
      * Increment the day of week
     C                   DOW       XDLSW > 0
     C                   ADD       1             YY
     C                   SUB       1             XDLSW
      * Put day of week into the range 1-7
     C                   IF        YY = 8
     C                   Z-ADD     1             YY
     C                   END
      * Selected day of the last week has been processed
      * Increment duration
     C                   IF        YDOW(YY) = XDSEL
     C                   ADD       1             XDURR
     C                   END
      * End of loop
     C                   END
     C                   END
     C     XDUDYC        TAG
      * Return Code: Unable to calculate duration
     C                   IF        XDURR = 0
     C                   MOVEL     'Y2U0060'     W0RTN
     C                   ELSE
     C                   EVAL      W0RTN = ' '
     C                   END
      *================================================================
     CSR   XDUDYE        ENDSR
      /EJECT
     CSR   ZASNMS        BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C                   IF        ZAPGMQ = ' '
     C                   MOVEL     ##PGM         ZAPGMQ
     C                   END
      * If no message file specified, use default
     C                   IF        ZAMSGF = ' '
     C                   MOVEL     ZADFMF        ZAMSGF
     C                   END
     C                   CALL      'Y2SNMGC'
     C                   PARM                    ZAPGMQ                         Program queue
     C                   PARM                    ZAPGRL                         Rel queue
     C                   PARM                    ZAMSID                         Message ID
     C                   PARM                    ZAMSGF                         Message file
     C                   PARM                    ZAMSDA                         Message data
     C                   PARM                    ZAMSTP                         Message type
     C                   PARM      'Y'           YILE
      * Clear all fields for default mechanism next time
     C                   EVAL      ZAPGMQ = ' '
     C                   EVAL      ZAPGRL = ' '
     C                   EVAL      ZAMSID = ' '
     C                   EVAL      ZAMSGF = ' '
     C                   EVAL      ZAMSDA = ' '
     C                   EVAL      ZAMSTP = ' '
      *================================================================
     CSR   ZAEXIT        ENDSR
      /EJECT
     CSR   ZXEXPG        BEGSR
      *================================================================
      * Exit program: Normal
      *================================================================
     C                   EXSR      ZYEXPG
      *================================================================
     CSR   ZXEXIT        ENDSR
      /EJECT
     CSR   ZYEXPG        BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                   SETON                                        LR
      *
      * Exit program
     C                   RETURN
      *
      *================================================================
     CSR   ZYEXIT        ENDSR
      /EJECT
     CSR   ZZINIT        BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C                   IF        W0ICL = ' '
     C                   MOVEL     'Y'           W0ICL                          *Initial call
     C                   ELSE
     C                   MOVEL     'N'           W0ICL
     C                   END
     C                   EVALR     P0RTN = ' '
     C                   EVALR     W0RTN = ' '
     C                   EVAL      W0RSL = ' '
     C                   EVAL      W0RSF = ' '
     C                   MOVEL     *ZEROS        W0RTW
     C                   MOVEL     '400'         W0ENV
      * Retrieve job attributes
     C                   CALL      'Y2RTJCR'
     C                   PARM                    PGMDS
      * Setup job date/time
     C                   Z-ADD     ##SD7         ##JDT
     C                   TIME                    ##JTM
      * Update screen time
     C                   TIME                    ##TME
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WAAIC3                         Company Number
     C                   Z-ADD     *ZERO         WAXXTM                         Departure Time
     C                   Z-ADD     *ZERO         WAAATM                         Job Time
     C                   Z-ADD     *ZERO         WAAXDT                         Job Date
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WBDBNB                         Warehouse Chill
     C                   Z-ADD     *ZERO         WBBWC3                         Shipping Compan
     C                   Z-ADD     *ZERO         WBBTC3                         Accounting Comp
     C                   Z-ADD     *ZERO         WBBUC3                         WHS Sched Prod
     C                   Z-ADD     *ZERO         WBBVC3                         WHS Inventory C
     C                   Z-ADD     *ZERO         WBAATM                         Job Time
     C                   Z-ADD     *ZERO         WBAXDT                         Job Date
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WCAIC3                         Company Number
     C                   Z-ADD     *ZERO         WCDHDT                         Physical Start
     C                   Z-ADD     *ZERO         WCAATM                         Job Time
     C                   Z-ADD     *ZERO         WCAXDT                         Job Date
      * Obtain default message file
     C     *DTAARA       DEFINE    CAMGFLA       ZADFMF
     C                   IN        ZADFMF
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WDAIC3                         Company Number
     C                   Z-ADD     *ZERO         WDM8NB                         System Value Nu
     C                   Z-ADD     *ZERO         WDAATM                         Job Time
     C                   Z-ADD     *ZERO         WDAXDT                         Job Date
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WEM8NB                         System Value Nu
     C                   Z-ADD     *ZERO         WEAATM                         Job Time
     C                   Z-ADD     *ZERO         WEAXDT                         Job Date
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WFAIC3                         Company Number
     C                   Z-ADD     *ZERO         WFHGCD                         Item Code
     C                   Z-ADD     *ZERO         WFAGCS                         Unit Cost Per P
     C                   Z-ADD     *ZERO         WFAECS                         Last Cost
     C                   Z-ADD     *ZERO         WFBACS                         Cost per Primar
     C                   Z-ADD     *ZERO         WFBBCS                         Cost per Pricin
     C                   Z-ADD     *ZERO         WFCBPR                         Revaluation Cos
     C                   Z-ADD     *ZERO         WFGUDT                         Revaluation Eff
     C                   Z-ADD     *ZERO         WFCTPR                         Last Revaluatio
     C                   Z-ADD     *ZERO         WFG4DT                         Last Revaluatio
     C                   Z-ADD     *ZERO         WFBOWG                         On Hand Weight
     C                   Z-ADD     *ZERO         WFDDQT                         On Hand UOM1 Su
     C                   Z-ADD     *ZERO         WFDEQT                         On Hand UOM2 Su
     C                   Z-ADD     *ZERO         WFDFQT                         On Hand UOM3 Su
     C                   Z-ADD     *ZERO         WFHDQT                         Quantity In Chi
     C                   Z-ADD     *ZERO         WFHEQT                         Weight In Chill
     C                   Z-ADD     *ZERO         WFAJQT                         Quantity Schedu
     C                   Z-ADD     *ZERO         WFAQQT                         Quantity on Sal
     C                   Z-ADD     *ZERO         WFAUQT                         Quantity on Pur
     C                   Z-ADD     *ZERO         WFEMQT                         Quantity on Tra
     C                   Z-ADD     *ZERO         WFDOQT                         Quantity Avail
     C                   Z-ADD     *ZERO         WFAKDT                         Date of Last Or
     C                   Z-ADD     *ZERO         WFANDT                         Date of Last Sh
     C                   Z-ADD     *ZERO         WFIDVA                         Value of On Han
     C                   Z-ADD     *ZERO         WFBZPC                         Safety Allowanc
     C                   Z-ADD     *ZERO         WFDGQT                         Safety Allowanc
     C                   Z-ADD     *ZERO         WFDIDT                         Stock Out Date
     C                   Z-ADD     *ZERO         WFBFDY                         Lead Time Last
     C                   Z-ADD     *ZERO         WFDJDT                         Lead Time Date
     C                   Z-ADD     *ZERO         WFBGDY                         Lead Time Next
     C                   Z-ADD     *ZERO         WFDKDT                         Lead Time Date
     C                   Z-ADD     *ZERO         WFDJQT                         Usage Qty per C
     C                   Z-ADD     *ZERO         WFBNWG                         Usage Weight pe
     C                   Z-ADD     *ZERO         WFDLDT                         Inventory Manag
     C                   Z-ADD     *ZERO         WFDPQT                         Minimum Quantit
     C                   Z-ADD     *ZERO         WFDQQT                         Maximum Quantit
     C                   Z-ADD     *ZERO         WFDMDT                         Last Physical C
     C                   Z-ADD     *ZERO         WFAKC8                         Vendor Item_Whs
     C                   Z-ADD     *ZERO         WFRINB                         Item Structure
     C                   Z-ADD     *ZERO         WFRHNB                         Item Structure
     C                   Z-ADD     *ZERO         WFRGNB                         Item Structure
     C                   Z-ADD     *ZERO         WFAATM                         Job Time
     C                   Z-ADD     *ZERO         WFAXDT                         Job Date
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WGY1NX                         PFS Company Num
     C                   Z-ADD     *ZERO         WGAID8                         PFS Transaction
     C                   Z-ADD     *ZERO         WGAFTS                         PFS Transaction
     C                   Z-ADD     *ZERO         WGBCNY                         PFS Transaction
     C                   Z-ADD     *ZERO         WGY2NX                         PFS Item Code
     C                   Z-ADD     *ZERO         WGADNY                         PFS Location Co
     C                   Z-ADD     *ZERO         WGZ6NX                         PFS Tracking Ty
     C                   Z-ADD     *ZERO         WGP7DT                         PFS Production
     C                   MOVE(P)   '0'           XDTSDL
     C                   MOVEL     @CN(012)      XDTSDL
     C                   MOVEL     XDTSDL        WGBMTS                         PFS Prod Date T
     C                   Z-ADD     *ZERO         WGZ4NX                         PFS Label Date
     C                   MOVEL     XDTSDL        WGBOTS                         PFS Label Date
     C                   Z-ADD     *ZERO         WGACNY                         PFS Receive Loc
     C                   MOVEL     XDTSDL        WGBPTS                         PFS Rvcv Loc Dt
     C                   MOVEL     XDTSDL        WGBNTS                         PFS Trans Date
     C                   Z-ADD     *ZERO         WGCUNY                         PFS On Hand Qua
     C                   Z-ADD     *ZERO         WGCVNY                         PFS On Hand Wei
     C                   Z-ADD     *ZERO         WGUXSX                         PFS Process Sta
     C                   MOVEL     XDTSDL        WGBQTS                         PFS Create Time
     C                   MOVEL     XDTSDL        WGBRTS                         PFS Update Time
      * Dummy move for compiler
     C                   MOVE      '0'           @CN#(1)
     C                   MOVEL     'N'           W0PMT
      * Define local variables for subroutine SBRVGN.
     C                   Z-ADD     *ZERO         WL0001
     C                   EVAL      WL0002 = ' '
     C                   Z-ADD     *ZERO         WL0003
      * Define local variables for subroutine SCRVGN.
     C                   Z-ADD     *ZERO         WL0004
     C                   EVAL      WL0005 = ' '
     C                   Z-ADD     *ZERO         WL0006
      * Define local variables for subroutine SGRVGN.
     C                   Z-ADD     *ZERO         WL0007
     C                   EVAL      WL0008 = ' '
     C                   Z-ADD     *ZERO         WL0009
      * Define local work field WHS Auto Inv Rest Co  USR
     C                   EVAL      YL0001 = ' '
      * Define local work field WHS Auto Inv Rest Cnt USR
     C                   Z-ADD     *ZERO         YL0002
      * Define local work field WHS Auto Inv Rest Cnt USR
     C                   Z-ADD     *ZERO         YL0003
      * Define local work field Physical Start Date
     C                   Z-ADD     *ZERO         YL0004
      * Define local work field Email Address
     C                   EVAL      YL0005 = ' '
      * Define local work field Company Number Alpha
     C                   EVAL      YL0006 = ' '
      * Define local work field Subject Line USR
     C                   EVAL      YL0007 = ' '
      * Define local work field Company Number Alpha
     C                   EVAL      YL0008 = ' '
      * Define local work field Physical Start Date
     C                   Z-ADD     *ZERO         YL0009
      * Define local work field Transaction Date D8# USR
     C                   Z-ADD     *ZERO         YL0010
      * Define local work field PFS Transaction Date
     C                   Z-ADD     *ZERO         YL0011
      * Define local work field Email Address
     C                   EVAL      YL0012 = ' '
      * Define local work field Send Email USR
     C                   EVAL      YL0013 = ' '
      * Define local work field Email Message 2 USR
     C                   EVAL      YL0014 = ' '
      * Define local work field Subject Line USR
     C                   EVAL      YL0015 = ' '
      * Define local work field Date mm/dd/yyyy USR
     C                   EVAL      YL0016 = ' '
      * Define local work field Library List Code
     C                   EVAL      YL0017 = ' '
      * Define null work field @Library List Code
     C                   EVAL      YN0001 = ' '
      * Define local work field Email Msg Line-Posted U
     C                   EVAL      YL0018 = ' '
      * Define local work field Email Msg Line-Not Rcvd U
     C                   EVAL      YL0019 = ' '
      * Define local work field On Hand UOM1 Summary
     C                   Z-ADD     *ZERO         YL0020
      * Define local work field Force New Line USR
     C                   EVAL      YL0021 = ' '
      *================================================================
     CSR   ZZEXIT        ENDSR
** @CN
00001 Y2U0003
00002 INVRST
00003 WIM CARLISLE INVENTORY RE
00004 STORATION FOR
00005 DTALIB
00006 HISLIB
00007 PRKFLIB
00008 - TEST
00009            Posted:
00010 Not Received:
00011 Y2U0005
00012 0001-01-01-00.00.00.00000
