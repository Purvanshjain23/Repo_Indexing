// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PBGREFR
// ?Date: 14.08.2025 Time: 03:47:54
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv and Center Hdg IF) TYPE(EXCINTFUN)                     AC1258539;
PARAMETER('OMS');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


//?USER: Initialize subfile record (existing record)

CASE;

// IF CTL.MPR Country is Entered
IF CTL.MPR_Country <> *BLANK;

// AND DB1.MPR Country NE CTL.MPR Country
AND DB1.MPR_Country <> CTL.MPR_Country;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

CASE;

// IF CTL.MPR Region is Entered
IF CTL.MPR_Region <> *ZERO;

// AND DB1.MPR Region NE CTL.MPR Region
AND DB1.MPR_Region <> CTL.MPR_Region;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

CASE;

// IF CTL.MPR State Code is State code not Blanks
IF CTL.MPR_State_Code <> *BLANK;

// AND DB1.MPR State Code NE CTL.MPR State Code
AND DB1.MPR_State_Code <> CTL.MPR_State_Code;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

CASE;

// IF CTL.MPR Zip Code is Entered
IF CTL.MPR_Zip_Code <> *ZERO;

// AND DB1.MPR Zip Code NE CTL.MPR Zip Code
AND DB1.MPR_Zip_Code <> CTL.MPR_Zip_Code;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

CASE;

// IF CTL.MPR FOB Rate per Mile is Entered
IF CTL.MPR_FOB_Rate_per_Mile <> *ZERO;

// AND DB1.MPR FOB Rate per Mile NE CTL.MPR FOB Rate per Mile
AND DB1.MPR_FOB_Rate_per_Mile <> CTL.MPR_FOB_Rate_per_Mile;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?USER: Validate subfile control

CASE;

// IF CTL.*CMD key is CF10
IF CTL.*CMD_key = '10';

// Call program Edt MPR FOB Omaha Ctl EF.
CALL PROGRAM(Edt MPR FOB Omaha Ctl EF) ('PBGVEFR');
PARAMETER('OMS');
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.User_Profile_Name);
PARAMETER(PAR.Allow_Multi_Company);
PARAMETER(PAR.Default_Printer);

ENDIF;

//?Upd rates per region
CASE;

// IF CTL.*CMD key is CF15
IF CTL.*CMD_key = '15';

// Call program Pmt Chg Rate per Regn PV.
CALL PROGRAM(Pmt Chg Rate per Regn PV) ('PBIBPVR');
PARAMETER(PAR.User_Profile_Name);
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.Allow_Multi_Company);
PARAMETER(PAR.Default_Printer);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

CASE;

// IF CTL.MPR Country NE LCL.MPR Country
IF CTL.MPR_Country <> LCL.MPR_Country;

// LCL.MPR Country = CTL.MPR Country
LCL.MPR_Country = CTL.MPR_Country;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

CASE;

// IF CTL.MPR State Code NE LCL.MPR State Code
IF CTL.MPR_State_Code <> LCL.MPR_State_Code;

// LCL.MPR State Code = CTL.MPR State Code
LCL.MPR_State_Code = CTL.MPR_State_Code;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

CASE;

// IF CTL.MPR Region NE LCL.MPR Region
IF CTL.MPR_Region <> LCL.MPR_Region;

// LCL.MPR Region = CTL.MPR Region
LCL.MPR_Region = CTL.MPR_Region;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

CASE;

// IF CTL.MPR Zip Code NE LCL.MPR Zip Code
IF CTL.MPR_Zip_Code <> LCL.MPR_Zip_Code;

// LCL.MPR Zip Code = CTL.MPR Zip Code
LCL.MPR_Zip_Code = CTL.MPR_Zip_Code;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

CASE;

// IF CTL.MPR FOB Rate per Mile NE LCL.MPR FOB Rate per Mile
IF CTL.MPR_FOB_Rate_per_Mile <> LCL.MPR_FOB_Rate_per_Mile;

// LCL.MPR FOB Rate per Mile = CTL.MPR FOB Rate per Mile
LCL.MPR_FOB_Rate_per_Mile = CTL.MPR_FOB_Rate_per_Mile;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?USER: Validate subfile record fields

CASE;

// IF RCD.*SFLSEL is *Edit
IF RCD.*SFLSEL = '2'/'2';

// Call program Zzz Chg Region        PV.
CALL PROGRAM(Zzz Chg Region        PV) ('PBIDPVR');
PARAMETER(RCD.MPR_Country);
PARAMETER(RCD.MPR_Region);
PARAMETER(RCD.MPR_State_Code);
PARAMETER(RCD.MPR_Zip_Code);
PARAMETER(RCD.MPR_FOB_Rate_per_Mile);
PARAMETER(RCD.MPR_FOB_Miles_to_Omaha);

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?USER: Create DBF record

EXECUTE FUNCTION(Crt MPR FOB Omaha Rt  CR) TYPE(CRTOBJ) FILE(PBARCPP)           AC2056367;
PARAMETER(RCD.MPR_Country);
PARAMETER(RCD.MPR_Region);
PARAMETER(RCD.MPR_State_Code);
PARAMETER(RCD.MPR_Zip_Code);
PARAMETER(RCD.MPR_FOB_Rate_per_Mile);
PARAMETER(RCD.MPR_FOB_Miles_to_Omaha);
PARAMETER(RCD.MPR_FOB_Unused_Date);
PARAMETER(RCD.MPR_FOB_Unused_Text);
PARAMETER(RCD.MPR_FOB_Unused_Text_2);
PARAMETER(RCD.Record_Status);
PARAMETER(RCD.Create_Date);
PARAMETER(RCD.Create_Time);
PARAMETER(RCD.Create_User);
PARAMETER(RCD.Create_Program);
PARAMETER(RCD.Change_Date);
PARAMETER(RCD.Change_Time);
PARAMETER(RCD.Change_User);
PARAMETER(RCD.Change_Program);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
 PARAMETER(DB1.Record_Status);
 PARAMETER(DB1.Create_Date);
 PARAMETER(DB1.Create_Time);
 PARAMETER(DB1.Create_User);
 PARAMETER(DB1.Create_Program);
 PARAMETER(DB1.Change_Date);
 PARAMETER(DB1.Change_Time);
 PARAMETER(DB1.Change_User);
 PARAMETER(DB1.Change_Program);
 {
  //?Execute internal function

  //?*** Set RECORD STATUS field. ***
  // PAR.Record Status = CND.Active
  PAR.Record_Status = 'A';

  //?*** Set CREATE fields. ***
  // PAR.Create Date = JOB.*Job date
  PAR.Create_Date = JOB.*Job_date;

  // PAR.Create Time = JOB.*Job time
  PAR.Create_Time = JOB.*Job_time;

  // PAR.Create User = JOB.*USER
  PAR.Create_User = JOB.*USER;

  // PAR.Create Program = JOB.*PROGRAM
  PAR.Create_Program = JOB.*PROGRAM;

  //?*** Set CHANGE fields. ***
  // PAR.Change Date = CON.*ZERO
  PAR.Change_Date = *ZERO;

  // PAR.Change Time = CON.*ZERO
  PAR.Change_Time = *ZERO;

  // PAR.Change User = CON.*BLANK
  PAR.Change_User = *BLANK;

  // PAR.Change Program = CON.*BLANK
  PAR.Change_Program = *BLANK;

 }

}


//?USER: Change DBF record

EXECUTE FUNCTION(Chg MPR FOB Omaha Rt  CH) TYPE(CHGOBJ) FILE(PBARCPP)           AC2056368;
PARAMETER(RCD.MPR_Country);
PARAMETER(RCD.MPR_Region);
PARAMETER(RCD.MPR_State_Code);
PARAMETER(RCD.MPR_Zip_Code);
PARAMETER(RCD.MPR_FOB_Rate_per_Mile);
PARAMETER(RCD.MPR_FOB_Miles_to_Omaha);
PARAMETER(RCD.MPR_FOB_Unused_Date);
PARAMETER(RCD.MPR_FOB_Unused_Text);
PARAMETER(RCD.MPR_FOB_Unused_Text_2);
PARAMETER(RCD.Record_Status);
PARAMETER(RCD.Create_Date);
PARAMETER(RCD.Create_Time);
PARAMETER(RCD.Create_User);
PARAMETER(RCD.Create_Program);
PARAMETER(RCD.Change_Date);
PARAMETER(RCD.Change_Time);
PARAMETER(RCD.Change_User);
PARAMETER(RCD.Change_Program);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Chg Date/Time      IF) TYPE(EXCINTFUN)                     AC1523476;
 PARAMETER(DB1.Change_Date);
 PARAMETER(DB1.Change_Time);
 PARAMETER(DB1.Change_User);
 PARAMETER(DB1.Change_Program);
 {
  //?Execute internal function

  // PAR.Change Date = JOB.*Job date
  PAR.Change_Date = JOB.*Job_date;

  // PAR.Change Time = JOB.*Job time
  PAR.Change_Time = JOB.*Job_time;

  // PAR.Change User = JOB.*USER
  PAR.Change_User = JOB.*USER;

  // PAR.Change Program = JOB.*PROGRAM
  PAR.Change_Program = JOB.*PROGRAM;

 }

}


