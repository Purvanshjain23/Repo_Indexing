// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PPJMDFR
// ?Date: 14.08.2025 Time: 03:40:51
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Set Inter. Access  IF) TYPE(EXCINTFUN)                     AC1144606;
PARAMETER('C/S');
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.Allow_Multi_Company);
PARAMETER(PAR.Default_Printer);
PARAMETER(PAR.Salesperson_Code);
{
 //?Execute internal function

 // PAR.User Profile Name = JOB.*USER
 PAR.User_Profile_Name = JOB.*USER;

 EXECUTE FUNCTION(VAL User/Application   IF) TYPE(EXCINTFUN)                     AC1144188;
 PARAMETER(PAR.User_Profile_Name);
 PARAMETER(PAR.Application_Code);
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.Allow_Multi_Company);
 PARAMETER(PAR.Default_Printer);
 PARAMETER(PAR.Salesperson_Code);
 {
  //?Execute internal function

  //?RMC 5/11/09 Rtv default company from user profile --
  //?  Override user code model company if it exists
  EXECUTE FUNCTION(RTV Program Setup w/Co RT) TYPE(RTVOBJ) FILE(CADRREP)          AC1935572;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Allow_Multi_Company);
  PARAMETER(PAR.Default_Printer);
  PARAMETER(PAR.Salesperson_Code);
  PARAMETER(LCL.Company_Number);
  PARAMETER(PAR.User_Code_Model);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?User Profile Record Not found
  CASE;

  // IF PGM.*Return code is *Record does not exist
  IF PGM.*Return_code = 'Y2U0005';

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  CASE;

  // IF PAR.User Code Model is equal to blank
  IF PAR.User_Code_Model = *BLANK;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Code_Model);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  ENDIF;

  // PAR.Warehouse Code = LCL.Warehouse Code
  PAR.Warehouse_Code = LCL.Warehouse_Code;

  //?Return code when not normal for Application Profile
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  //?Return code when not normal for Application Profile
  // IF *OTHERWISE
  IF *OTHERWISE;

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  //?Override company with User profile control's company if found
  CASE;

  // IF LCL.Company Number is not equal to zero
  IF LCL.Company_Number <> *ZERO;

  // PAR.Company Number = LCL.Company Number
  PAR.Company_Number = LCL.Company_Number;

  //?Get prod warehouse, if the appl got a warehouse
  CASE;

  // IF LCL.Warehouse Code is Not Blanks
  IF LCL.Warehouse_Code <> *BLANK;

  // Call program RTV Prod Whse for Co  XF.
  CALL PROGRAM(RTV Prod Whse for Co  XF) ('PNKDXFR');
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(LCL.Company_Number);

  ENDIF;

  ENDIF;

 }

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


// WRK.First Time Flag = CND.Yes
WRK.First_Time_Flag = 'Y';

// PAR.PRT Night Queue Run Sts = CND.no
PAR.PRT_Night_Queue_Run_Sts = 'N';

// PAR.PRT Printer Device = CON.*BLANK
PAR.PRT_Printer_Device = *BLANK;

// WRK.Display Prt Opt Pmt USR = CND.*YES
WRK.Display_Prt_Opt_Pmt_USR = *YES;

//?USER: Initialize subfile control

CASE;

// IF WRK.First Time Flag is Yes
IF WRK.First_Time_Flag = 'Y';

// CTL.Item Code = CVTVAR(PAR.Item Code Txt)
CTL.Item_Code = CVTVAR(PAR.Item_Code_Txt);

// CTL.Record Status = CND.Active
CTL.Record_Status = 'A';

// WRK.First Time Flag = CND.NO
WRK.First_Time_Flag = 'N';

CASE;

// IF CTL.Item Code is Entered
IF CTL.Item_Code <> *ZERO;

// IF *OTHERWISE
IF *OTHERWISE;

// CTL.Item Type Code = CND.Finished Good
CTL.Item_Type_Code = 'FG';

ENDIF;

CASE;

// IF PAR.Allow Multi-Company is no
IF PAR.Allow_Multi_Company = 'N';

// CTL.Company Number = PAR.Company Number
CTL.Company_Number = PAR.Company_Number;

ENDIF;

ENDIF;

//?USER: Initialize subfile record from DBF record

//?** 10/08/2005 LJB - Nested tests so they don't cancel each other out
//?** Only display records where the company number matches
CASE;

// IF CTL.Company Number is not equal to zero
IF CTL.Company_Number <> *ZERO;

CASE;

// IF DB1.Company Number NE CTL.Company Number
IF DB1.Company_Number <> CTL.Company_Number;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

// IF *OTHERWISE
IF *OTHERWISE;

//?Only display for specific co. if multi-co not allowed
CASE;

// IF PAR.Allow Multi-Company is no
IF PAR.Allow_Multi_Company = 'N';

// AND DB1.Company Number NE PAR.Company Number
AND DB1.Company_Number <> PAR.Company_Number;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

//?Only display for specific co. if multi-co not allowed
// IF *OTHERWISE
IF *OTHERWISE;

//?If item type entered, display only matching records
CASE;

// IF CTL.Item Code is Entered
IF CTL.Item_Code <> *ZERO;

// AND DB1.Item Type Code NE CTL.Item Type Code
AND DB1.Item_Type_Code <> CTL.Item_Type_Code;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

//?If item type entered, display only matching records
// IF *OTHERWISE
IF *OTHERWISE;

//?If item number entered, display only records for specified item
CASE;

// IF CTL.Item Code is Entered
IF CTL.Item_Code <> *ZERO;

CASE;

// IF DB1.Item Code LT CTL.Item Code
IF DB1.Item_Code < CTL.Item_Code;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

ENDIF;

ENDIF;

ENDIF;

ENDIF;

// RCD.Record Status 3 usr = CND.*blank
RCD.Record_Status_3_usr = *BLANK;

CASE;

// IF DB1.Item Category Code 6 is Entered
IF DB1.Item_Primal_Sched_Report > *BLANK;

EXECUTE FUNCTION(Val Item Category     Rt) TYPE(RTVOBJ) FILE(PDJIREP)           AC2045216;
PARAMETER(RCD.Company_Number);
PARAMETER(06);
PARAMETER(RCD.Item_Primal_Sched_Report);
PARAMETER(WRK.Return_Code_Usr);
PARAMETER(RCD.Record_Status_3_usr);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PAR.Return Code Usr = CND.*Record does not exist
 PAR.Return_Code_Usr = 'Y2U0005';

 // PAR.Record Status 3 usr = CND.*blank
 PAR.Record_Status_3_usr = *BLANK;

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PAR.Return Code Usr = CND.*Blank
 PAR.Return_Code_Usr = *BLANK;

 // PAR.Record Status 3 usr = DB1.Record Status
 PAR.Record_Status_3_usr = DB1.Record_Status;

}


ENDIF;

//?USER: Process subfile control (Pre-confirm)

//?F4=Prompt warehouse
CASE;

// IF CTL.*CMD key is *Prompt
IF CTL.*CMD_key = '04';

CASE;

// IF PGM.*Cursor field <IS> CTL.Default Warehouse
IF PGM.*Cursor_field = CTL.Default_Warehouse;

CASE;

// IF CTL.Company Number is greater than zero
IF CTL.Company_Number > *ZERO;

// Call program SEL ShipCo/Warehouse   SR.
CALL PROGRAM(SEL ShipCo/Warehouse   SR) ('PPHQSRR');
PARAMETER(CTL.Default_Warehouse);
PARAMETER(CTL.Company_Number);

// IF *OTHERWISE
IF *OTHERWISE;

// Call program SEL Prod Whse          SR.
CALL PROGRAM(SEL Prod Whse          SR) ('PDLISRR');
PARAMETER(CTL.Default_Warehouse);

ENDIF;

ENDIF;

ENDIF;

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

//?Process Print Listing request
CASE;

// IF CTL.*CMD key is *Print 21
IF CTL.*CMD_key = '21';

// PAR.Company Number Pass   USR = CTL.Company Number
PAR.Company_Number_Pass_USR = CTL.Company_Number;

// WRK.Item Str Class PASS   USR = CTL.Item Structure Class Code
WRK.Item_Str_Class_PASS_USR = CTL.Item_Structure_Class_Code;

// Call program PRT Company Items      UP.
CALL PROGRAM(PRT Company Items      UP) ('PDYXUPR');
PARAMETER(WRK.Return_Code_Usr);
PARAMETER('I/C');
PARAMETER('OMHUCLP');
PARAMETER(PAR.Company_Number_Pass_USR);
PARAMETER(CTL.Item_Type_Code);
PARAMETER(CTL.Base_Conv_Loss_Item);
PARAMETER(WRK.Item_Str_Class_PASS_USR);
PARAMETER(CTL.Catch_Weight_Status);
PARAMETER(CTL.UOM_Primary);
PARAMETER(CTL.Production_Date_Control);
PARAMETER(CTL.Record_Status);
PARAMETER(CTL.System_Value_Numeric);
PARAMETER('Company/Item Listing');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);

CASE;

// IF WRK.Return Code Usr is *Blank
IF WRK.Return_Code_Usr = *BLANK;

// Send information message - 'Print List has been submitted'
MESSAGE(USR1742 *INFO);

ENDIF;

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

//?Process Print Item BOM Listing
CASE;

// IF CTL.*CMD key is CF23
IF CTL.*CMD_key = '23';

// PAR.Company Number Pass   USR = CTL.Company Number
PAR.Company_Number_Pass_USR = CTL.Company_Number;

// LCL.Item Code Txt = CVTVAR(CTL.Item Code)
LCL.Item_Code_Txt = CVTVAR(CTL.Item_Code);

// Call program PRT PMT&Pas Co/Itm/BCF UP.
CALL PROGRAM(PRT PMT&Pas Co/Itm/BCF UP) ('PDBCUPR');
PARAMETER(WRK.Return_Code_Usr);
PARAMETER('I/C');
PARAMETER('PDBBCLP');
PARAMETER(PAR.Company_Number_Pass_USR);
PARAMETER(CTL.Item_Type_Code);
PARAMETER(CTL.Base_Conv_Loss_Item);
PARAMETER(LCL.Item_Code_Txt);
PARAMETER(CTL.System_Value_Numeric);
PARAMETER('Item BOM Listing');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);

CASE;

// IF WRK.Return Code Usr is *Blank
IF WRK.Return_Code_Usr = *BLANK;

// Send information message - 'Print List has been submitted'
MESSAGE(USR1742 *INFO);

ENDIF;

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

//?USER: Process subfile record (Pre-confirm)

//?5 - Process Company Item Display Request
CASE;

// IF RCD.*SFLSEL is *Display
IF RCD.*SFLSEL = '5'/'5';

// CTL.Item Code = RCD.Item Code
CTL.Item_Code = RCD.Item_Code;

EXECUTE FUNCTION(RTV Box Item code      RT) TYPE(RTVOBJ) FILE(PDIOREP)          AC1402262;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Item_Code);
PARAMETER(LCL.Box_iD);
{
 //?USER: Initialize routine

 // PAR.Component Item Code = CON.*ZERO
 PAR.Component_Item_Code = *ZERO;

 //?USER: Process Data record

 EXECUTE FUNCTION(Rtv Item Type/Pack Cd  RT) TYPE(RTVOBJ) FILE(CABZREP)          AC1302162;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Component_Item_Code);
 PARAMETER(WRK.Item_Type_Code);
 PARAMETER(PAR.Package_Type_Code);
 PARAMETER(WRK.Pallet_Tare_Weight);
 PARAMETER(WRK.Misc_Tare_Weight);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF PAR.Package Type Code is Box
 IF PAR.Package_Type_Code = 'B';

 // PAR.Component Item Code = DB1.Component Item Code
 PAR.Component_Item_Code = DB1.Component_Item_Code;

 QUIT;

 ENDIF;

}


// Call program Dsp Company Item Spc   DR.
CALL PROGRAM(Dsp Company Item Spc   DR) ('PPJPD1R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Item_Code);

// RCD.*SFLSEL = CND.*Reset to blank
RCD.*SFLSEL = *BLANK;

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?6 - Print Item BOM
CASE;

// IF RCD.*SFLSEL is *Print
IF RCD.*SFLSEL = '6'/'6';

//?Print Prompt
CASE;

// IF WRK.Display Prt Opt Pmt USR is *YES
IF WRK.Display_Prt_Opt_Pmt_USR = *YES;

// Call program PMT Prt Opt w/PSz SHR  PV.
CALL PROGRAM(PMT Prt Opt w/PSz SHR  PV) ('PDV8PVR');
PARAMETER('Item BOM');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Number_of_Copies);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(PAR.Application_Code);
PARAMETER(*MISSING);
PARAMETER(1);

// WRK.Display Prt Opt Pmt USR = CND.*NO
WRK.Display_Prt_Opt_Pmt_USR = *NO;

ENDIF;

//?Submit
CASE;

// IF PGM.*Return code is *User QUIT requested
IF PGM.*Return_code = 'Y2U9999';

//?Submit
// IF *OTHERWISE
IF *OTHERWISE;

// Execute command - 'Print Item BOM'
EXECUTE COMMAND(USR2377);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Number_of_Copies);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER('PDP0PFR');
PARAMETER('PDP0PFR$');
PARAMETER(PAR.Application_Code);
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Item_Code);
PARAMETER('PRTITMBOM');

// RCD.*SFLSEL = CND.*Reset to blank
RCD.*SFLSEL = *BLANK;

ENDIF;

ENDIF;

//?7 - Process Item/Warehouse request
CASE;

// IF RCD.*SFLSEL is Option 7
IF RCD.*SFLSEL = '7'/'7';

//?W019732 MD  05/02/24 - Added code to retrieve Module Release Status
EXECUTE FUNCTION(Rtv Module Release Sts RT) TYPE(RTVOBJ) FILE(PUC6REP)          AC2212908;
PARAMETER('WIM');
PARAMETER(1);
PARAMETER(LCL.Module_Release_Status);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 CASE;

 // IF DB1.Record Status is Active
 IF DB1.Record_Status = 'A';

 MOVE *ALL (To: PAR From: DB1);

 ENDIF;

}


//?W019732 MD  05/02/24 - Added New Parameter Module Release Status
// Call program WW Item/Warehouse     DF.
CALL PROGRAM(WW Item/Warehouse     DF) ('ICNQDFR');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Item_Code);
PARAMETER('D');
PARAMETER(LCL.Module_Release_Status);

// RCD.*SFLSEL = CND.*Reset to blank
RCD.*SFLSEL = *BLANK;

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

//?8 - ** Display Bill of Material -  12/12/2005 LJB
CASE;

// IF RCD.*SFLSEL is Option 8
IF RCD.*SFLSEL = '8'/'8';

CASE;

// IF RCD.Item Type Code is Packaging and Supplies
IF RCD.Item_Type_Code = 'PS';

// Send error message - 'Option is not allowed.'
ERROR(USR2262);
MSGPARM(RCD.*SFLSEL);

// IF *OTHERWISE
IF *OTHERWISE;

// CTL.Item Code = RCD.Item Code
CTL.Item_Code = RCD.Item_Code;

//?Default 360 for the Plant company number to be displayed
//?Since the Item Default does not have a company will be using
//?the first plant - 360 for the default.
// LCL.Company Number = RCD.Company Number
LCL.Company_Number = RCD.Company_Number;

// LCL.BOM Type Usr = CND.Consumed - Meat
LCL.BOM_Type_Usr = 'C';

// Call program DSP Bill of Material   ET.
CALL PROGRAM(DSP Bill of Material   ET) ('PPVMETR');
PARAMETER(LCL.Company_Number);
PARAMETER(RCD.Item_Code);

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

// RCD.*SFLSEL = CND.*Reset to blank
RCD.*SFLSEL = *BLANK;

ENDIF;

ENDIF;

//?16 - Print Item BOM Reference
CASE;

// IF RCD.*SFLSEL is Option 16
IF RCD.*SFLSEL = '16';

//?Print Prompt
CASE;

// IF WRK.Display Prt Opt Pmt USR is *YES
IF WRK.Display_Prt_Opt_Pmt_USR = *YES;

// Call program PMT Prt Opt w/PSz SHR  PV.
CALL PROGRAM(PMT Prt Opt w/PSz SHR  PV) ('PDV8PVR');
PARAMETER('Item BOM Reference');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Number_of_Copies);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(PAR.Application_Code);
PARAMETER(*MISSING);
PARAMETER(1);

// WRK.Display Prt Opt Pmt USR = CND.*NO
WRK.Display_Prt_Opt_Pmt_USR = *NO;

ENDIF;

//?Submit
CASE;

// IF PGM.*Return code is *User QUIT requested
IF PGM.*Return_code = 'Y2U9999';

//?Submit
// IF *OTHERWISE
IF *OTHERWISE;

// Execute command - 'Print Item BOM'
EXECUTE COMMAND(USR2377);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Number_of_Copies);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER('PDBUPFR');
PARAMETER('PDBUPFR$');
PARAMETER(PAR.Application_Code);
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Item_Code);
PARAMETER('PRTBOMREF');

// RCD.*SFLSEL = CND.*Reset to blank
RCD.*SFLSEL = *BLANK;

ENDIF;

ENDIF;

//?17 - Display Box Where Used
CASE;

// IF RCD.*SFLSEL is Option 17
IF RCD.*SFLSEL = '17';

// Call program Dsp Box Code Usage    DF.
CALL PROGRAM(Dsp Box Code Usage    DF) ('POGLDFR');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Item_Code);

// RCD.*SFLSEL = CND.*Reset to blank
RCD.*SFLSEL = *BLANK;

ENDIF;

//?USER: Final processing (Pre-confirm)

// WRK.Display Prt Opt Pmt USR = CND.*YES
WRK.Display_Prt_Opt_Pmt_USR = *YES;

