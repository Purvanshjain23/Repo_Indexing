     H*OPTION(*SRCSTMT : *NODEBUGIO)
     H DFTACTGRP(*NO)
     H BNDDIR('RDB2000')
       //----------------------------------------------------------------------
       // Program To Get F0014 Records from E1 and Insert into EZ0010 Wordld
       // Programmer  :RST SoLution
       // Date : 5/11/20
       //----------------------------------------------------------------------
      //*******************************************************************************
     FEZ0014L0  UF A E           K DISK
     FF55PICK2  IF A E             DISK
     FF55CONFIG1IF   E           K DISK
      // RDB Example program
      //
      // This program provides and example of the use of the RDB APIs
      //*******************************************************************************
      /COPY RDB50/RDBSRC,RDBPROTO
     D Id              S             10I 0
     D rc              S             10I 0
     D @ErrId          S              7A
     D @ErrText        S            100A
     D vBatch          S              8  0 inz
     D $$DOC           S             10  0 inz
     D vBatch1         S             15A
     D X_A7            S             30A   inz
     D X_A8            S             30A   inz
     d sFileSchema     s             30a   inz
     C     BCKY01        KLIST
     C                   KFLD                    BCPTC
     C                   KFLD                    BCACTS
      //
      //     Connect to the remote system using created in the RDB
      //     configuration screen (RDBCFG)
      /FREE
           setll *start F55CONFIG1;
           READ F55CONFIG1;
           Dow Not %EOF(F55CONFIG1);
           X_A7=%TRIML(%TRIMR(S2DL01));
           X_A8=%TRIML(%TRIMR(S2DL02));
           READ F55CONFIG1;
           EndDo;
           BCACTS=%TIMESTAMP();                                                 //|Get a number
       Id = RdbConnect(X_A7);
       If Id >= 0;
         sFileSchema = '[' + %trimr(X_A8) + '].[F580911F]';
         //     After the connection is established, prepare the statement.
         rc = RdbPrepStmt(Id:
             'Select * from' + %trimr(sFileSchema) +
             ' where FFEV01 = ?' +
             ' and FFPID = ?');
         rc = RdbSetStr(Id: 1: '1');
         rc = RdbSetStr(Id: 2: 'R580014');
         rc = RdbPrepExec(Id);
         //     Fetch the first record of the result set that was generated with the
         //     previously executed statement.
         rc = RdbFetchNxt(Id);
          //  Load the local variables from the remote server.  The get ty  pe must match
          // the remote type and the local variable.
         dow  rc >= 0;
           SSUKID= RdbGetNum(Id:1);                                             //|Get a number
           WRITE I55PICK;                                                       //|Get a number
           rc = RdbFetchNxt(Id);
         enddo;
       EndIf;
         //
         //-------------------------------
         // Free the Statement
         //-------------------------------
           RdbFreeStmt(id);
           sFileSchema = '[' + %trimr(X_A8) + '].[F580014]';
           setll *start F55PICK2;
           READ F55PICK2;
           Dow Not %EOF(F55PICK2);
           vBatch=SSUKID;
           vBatch1=%CHAR(SSUKID);
         //
         //     After the connection is established, prepare the statement.
         rc = RdbPrepStmt(Id:
             'Select * from' + %trimr(sFileSchema) +
             ' where PNUKID = ?');
         //     Set the value of the first parameter as a Date
         rc = RdbSetNum(Id: 1: SSUKID);
         rc = RdbPrepExec(Id);
         //
         rc = RdbFetchNxt(Id);
          //  Load the local variables from the remote server.  The get ty  pe must match
          // the remote type and the local variable.
         dow  rc >= 0;
           BCPTC= RdbGetStr(Id:2);                                              //|Get a number
           BCPTD = RdbGetStr(Id:3);                                             //|Get a String
           BCDCP = RdbGetNum(Id:4);
           BCDCD = RdbGetNum(Id:5);                                             //|Get a Timestamp
           BCNDTP= RdbGetNum(Id:6);                                             //|Get a Timestamp
           BCDDJ = RdbGetNum(Id:7);                                             //|Get a Timestamp
           BCNSP = RdbGetNum(Id:8);                                             //|Get a Timestamp
           BCDTPA = RdbGetNum(Id:9);
           BCEIR  = RdbGetNum(Id:10);
           BCUSER = RdbGetStr(Id:11);
           BCPID  = RdbGetStr(Id:12);
           BCUPMJ = RdbGetNum(Id:13);
           BCJOBN = RdbGetStr(Id:14);
           BCUPMT = RdbGetNum(Id:15);
           BCPXDM = RdbGetNum(Id:16);
           BCPXDD = RdbGetNum(Id:17);
           chain BCKY01 EZ0014L0;
           if not %found(EZ0014L0);
           WRITE @BCCPEZ;
           else;
           UPDATE @BCCPEZ;
           endIf;
           rc = RdbFetchNxt(Id);
         enddo;
         if rc < 0;
           RdbError(@ErrId: @ErrText);
         endif;
            Read F55PICK2;
           EndDo;
         //
         //
         //-------------------------------
         // Free the Statement
         //-------------------------------
           RdbFreeStmt(id);
         sFileSchema = '[' + %trimr(X_A8) + '].[F580911F]';
           setll *start F55PICK2;
           READ F55PICK2;
           Dow Not %EOF(F55PICK2);
         //
         //     After the connection is established, prepare the statement.
         rc = RdbPrepStmt(Id:
             'Update '+ %trimr(sFileSchema) +
             ' set FFEV01 = ? where FFUKID = ?');
         //
         //     Set the value of the first parameter as a Date
         rc = RdbSetNum(Id: 2: SSUKID);
         rc = RdbSetStr(Id: 1: '2');
         rc = RdbPrepExec(Id);
         if rc < 0;
           RdbError(@ErrId: @ErrText);
         endif;
            Read F55PICK2;
           EndDo;
         //
         //     Close the connection to the remote system.
         RdbClose(Id);
       //
       *Inlr = *On;
      /END-FREE
