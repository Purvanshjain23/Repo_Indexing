// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDW2XFR
// ?Date: 14.08.2025 Time: 03:30:24
// ?------------------------------------------------------------------------------------------------

//?Execute user function

EXECUTE FUNCTION(RTV Auto Appl CM       RT) TYPE(RTVOBJ) FILE(ARBDCPP)          AC1348569;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Invoice_Number);
PARAMETER(PAR.Invoice_Suffix);
PARAMETER(PAR.Transaction_Amount);
{
 //?USER: Initialize routine

 //?RMC 12/23/05 get g/l posting co
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 //?Add an ACM non-cash Payment adjustment and an ARC A/R Credit Adjustment
 //?       Get Adjustment Record and next sequence number
 EXECUTE FUNCTION(RTV Adj Limits         RT) TYPE(RTVOBJ) FILE(PDJ3CPP)          AC1334715;
 PARAMETER(PAR.Company_Number);
 PARAMETER('ACM');
 PARAMETER(PAR.Adjustment_Description);
 PARAMETER(PAR.Effect_on_Account);
 PARAMETER(PAR.G_L_ID_Code_JDE);
 PARAMETER(PAR.Adjustment_Limit_Amount);
 PARAMETER(PAR.Cash_Adj);
 PARAMETER(PAR.User_Enter_G_L_Status);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 EXECUTE FUNCTION(RTV Next Seq. No.      RT) TYPE(RTVOBJ) FILE(ARBECPP)          AC1336580;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Invoice_Number);
 PARAMETER(PAR.Invoice_Suffix);
 PARAMETER(PAR.Sequence_Number);
 {
  //?USER: Processing if Data record not found

  // PAR.Sequence Number = CON.1
  PAR.Sequence_Number = 1;

  //?USER: Process Data record

  // PAR.Sequence Number = DB1.Sequence Number
  PAR.Sequence_Number = DB1.Sequence_Number;

  //?USER: Exit processing

  // PAR.Sequence Number = PAR.Sequence Number + CON.1
  PAR.Sequence_Number = PAR.Sequence_Number + 1;

 }

 EXECUTE FUNCTION(RTV OH Tf Exempt Code RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC1750290;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Invoice_Number);
 PARAMETER(LCL.A_R_TF_Exempt_Code);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 // Call program VAL Acct ID JDE-8 dgt  UP.
 CALL PROGRAM(VAL Acct ID JDE-8 dgt  UP) ('ARACTRET');
 PARAMETER(PAR.G_L_ID_Code_JDE);
 PARAMETER(NLL.Cost_Center);
 PARAMETER(NLL.Object_Account);
 PARAMETER(NLL.Subsidiary);
 PARAMETER(NLL.Description);
 PARAMETER(PAR.G_L_Posting_Company);
 PARAMETER(NLL.JDE_Posting_Edit_Code_USR);
 PARAMETER(NLL.Error_Return_text);

 EXECUTE FUNCTION(CRT A/R Detail Appl    CR) TYPE(CRTOBJ) FILE(ARBECPP)          AC1338635;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Invoice_Number);
 PARAMETER(PAR.Invoice_Suffix);
 PARAMETER(PAR.Sequence_Number);
 PARAMETER('ACM');
 PARAMETER(PAR.Transaction_Amount);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(JOB.*Job_date);
 PARAMETER(JOB.*Job_date);
 PARAMETER(JOB.*Job_time);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(PAR.Cash_Adj);
 PARAMETER('E');
 PARAMETER(JOB.*PROGRAM);
 PARAMETER(PAR.Effect_on_Account);
 PARAMETER(PAR.G_L_Posting_Company);
 PARAMETER(PAR.G_L_ID_Code_JDE);
 PARAMETER('Y');
 PARAMETER(LCL.A_R_TF_Exempt_Code);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(DB1.EDI_Status_1);
 PARAMETER(DB1.EDI_Status_2);
 PARAMETER(DB1.EDI_Status_3);
 PARAMETER(DB1.AR_Customer_Number);
 PARAMETER(WRK.Access_Denied_Y_N);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

  //?USER: Processing after Data update

  // PAR.Access Denied (Y/N) = CND.no
  PAR.Access_Denied_Y_N = 'N';

 }

 CASE;

 // IF LCL.A/R TF Exempt Code is *ALL values
 IF LCL.A_R_TF_Exempt_Code = 'NE'/'PC'/'EC'/'EP';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.A/R TF Exempt Code = CND.Not Exempt
 LCL.A_R_TF_Exempt_Code = 'NE';

 ENDIF;

 //?Credit Accounts Receivable with Customers G/L Account
}


//?Error Return field
CASE;

// IF PGM.*Return code is *Record does not exist
IF PGM.*Return_code = 'Y2U0005';

// PAR.Error Return text = CND.Error Return
PAR.Error_Return_text = 'ERR';

//?Error Return field
// IF *OTHERWISE
IF *OTHERWISE;

// PAR.Error Return text = CND.Blank
PAR.Error_Return_text = *BLANK;

ENDIF;

