// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PVA3XFR
// ?Date: 14.08.2025 Time: 03:51:49
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Build WIM Item Balance (PUCGCPP) Table.
EXECUTE FUNCTION(Cnv Bld WIM Item Bal  RT) TYPE(RTVOBJ) FILE(CAB0REP)           AC2217230;
{
 //?USER: Initialize routine

 // LCL.Update Date Timestamp = CON.0001-01-01-00.00.00.00000
 LCL.Update_Date_Timestamp = '0001-01-01-00.00.00.00000';

 //?USER: Process Data record

 //?Per RyanH, create all records even if orphan records exist.
 CASE;

 // IF DB1.Company Number is not equal to zero
 IF DB1.Company_Number <> *ZERO;

 EXECUTE FUNCTION(Rtv Label Type        RT) TYPE(RTVOBJ) FILE(CABZREP)           AC2219283;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(LCL.Label_Type);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?Override 'Inventory Item Type' if 'WP' (Work in Progress).
 CASE;

 // IF LCL.Label Type is Work In Process
 IF LCL.Label_Type = 'WP';

 // LCL.Inventory Item Type = CND.Work in Progress
 LCL.Inventory_Item_Type = 'WP';

 //?Override 'Inventory Item Type' if 'WP' (Work in Progress).
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Inventory Item Type = CND.Finished Good
 LCL.Inventory_Item_Type = 'FG';

 ENDIF;

 EXECUTE FUNCTION(Crt WIM Item Balance  CR) TYPE(CRTOBJ) FILE(PUCGCPP)           AC2209097;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(LCL.Inventory_Item_Type);
 PARAMETER(DB1.On_Hand_Weight_Summary);
 PARAMETER(DB1.On_Hand_UOM1_Summary);
 PARAMETER(*ZERO);
 PARAMETER(DB1.Quantity_on_Transfer);
 PARAMETER(DB1.Quantity_Avail_To_Sell);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(DB1.Item_Structure_Class_Code);
 PARAMETER(DB1.Item_Structure_Group_Code);
 PARAMETER(DB1.Item_Structure_Type_Code);
 PARAMETER(DB1.Record_Status);
 PARAMETER(LCL.Update_Date_Timestamp);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Crt Time Stamp DDL IF) TYPE(EXCINTFUN)                     AC2212929;
  PARAMETER(DB1.Create_Date_Timestamp);
  PARAMETER(DB1.Create_User_ID);
  PARAMETER(DB1.Create_Program_Name);
  PARAMETER(DB1.Update_User_Id);
  PARAMETER(DB1.Update_Program_Name);
  {
   //?Execute internal function

   //?*** Set CREATE Time Stamp Info.
   // PAR.Create Date Timestamp = JOB.*System timestamp
   PAR.Create_Date_Timestamp = JOB.*System_timestamp;

   // PAR.Create User ID = JOB.*USER
   PAR.Create_User_ID = JOB.*USER;

   // PAR.Create Program Name = JOB.*PROGRAM
   PAR.Create_Program_Name = JOB.*PROGRAM;

   //?*** Set CHANGE Time Stamp Info.
   //?Cannot set Update Date TS here, will error.
   // PAR.Update User Id = CON.*BLANK
   PAR.Update_User_Id = *BLANK;

   // PAR.Update Program Name = CON.*BLANK
   PAR.Update_Program_Name = *BLANK;

  }

 }

 ENDIF;

}


//?Build WIM Item Balance Detail (PUCHCPP) Table.
EXECUTE FUNCTION(Cnv Bld WIM Item Bal DtRT) TYPE(RTVOBJ) FILE(CAB1REP)          AC2217232;
{
 //?USER: Initialize routine

 // LCL.Update Date Timestamp = CON.0001-01-01-00.00.00.00000
 LCL.Update_Date_Timestamp = '0001-01-01-00.00.00.00000';

 //?USER: Process Data record

 //?Per RyanH, create all records even if orphan records exist.
 CASE;

 // IF DB1.Company Number is not equal to zero
 IF DB1.Company_Number <> *ZERO;

 EXECUTE FUNCTION(Rtv Label Type        RT) TYPE(RTVOBJ) FILE(CABZREP)           AC2219283;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(LCL.Label_Type);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?Override 'Inventory Item Type' if 'WP' (Work in Progress).
 CASE;

 // IF LCL.Label Type is Work In Process
 IF LCL.Label_Type = 'WP';

 // LCL.Inventory Item Type = CND.Work in Progress
 LCL.Inventory_Item_Type = 'WP';

 //?Override 'Inventory Item Type' if 'WP' (Work in Progress).
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Inventory Item Type = CND.Finished Good
 LCL.Inventory_Item_Type = 'FG';

 ENDIF;

 //?Format Physical Start Date.
 CASE;

 // IF DB1.Physical Start Date is entered
 IF DB1.Physical_Start_Date <> *ZERO;

 EXECUTE FUNCTION(CVT *CYMD toYYYY-MM-DD IF) TYPE(EXCINTFUN)                     AC2211847;
 PARAMETER(DB1.Physical_Start_Date);
 PARAMETER(LCL.Date_Format);
 {
  //?Execute internal function

  // PAR.Date (Alpha) USR = CVTVAR(PAR.Date                  USR)
  PAR.Date_Alpha_USR = CVTVAR(PAR.Date_USR);

  //?** YEAR **
  // PAR.Year  (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.2,CON.2)
  PAR.Year_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:2:2);

  // LCL.Year Alpha (YYYY) USR = CONCAT(CON.20,PAR.Year  (Char) USR,CON.*ZERO)
  LCL.Year_Alpha_YYYY_USR = '20' + PAR.Year_Char_USR (*ZERO);

  // LCL.Text USR 5 = CONCAT(LCL.Year Alpha (YYYY) USR,CON.-,CON.*ZERO)
  LCL.Text_USR_5 = LCL.Year_Alpha_YYYY_USR + '-' (*ZERO);

  //?** MONTH **
  // PAR.Month (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.4,CON.2)
  PAR.Month_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:4:2);

  // LCL.Text 3 Length USR = CONCAT(PAR.Month (Char) USR,CON.-,CON.*ZERO)
  LCL.Text_3_Length_USR = PAR.Month_Char_USR + '-' (*ZERO);

  //?** DAY **
  // PAR.Day   (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.6,CON.2)
  PAR.Day_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:6:2);

  // LCL.AS Date MM/DD = CONCAT(LCL.Text 3 Length USR,PAR.Day   (Char) USR,CON.*ZERO)
  LCL.AS_Date_MM_DD = LCL.Text_3_Length_USR + PAR.Day_Char_USR (*ZERO);

  // PAR.Date Format = CONCAT(LCL.Text USR 5,LCL.AS Date MM/DD,CON.*ZERO)
  PAR.Date_Format = LCL.Text_USR_5 + LCL.AS_Date_MM_DD (*ZERO);

 }

 // LCL.Date Timestamp Txt U = CONCAT(LCL.Date Format,CON.-00.00.00.000000,CON.*ZERO)
 LCL.Date_Timestamp_Txt_U = LCL.Date_Format + '-00.00.00.000000' (*ZERO);

 // LCL.Physical Start Timestamp = CVTVAR(LCL.Date Timestamp Txt U)
 LCL.Physical_Start_Timestamp = CVTVAR(LCL.Date_Timestamp_Txt_U);

 //?Format Physical Start Date.
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Physical Start Timestamp = CON.0001-01-01-00.00.00.00000
 LCL.Physical_Start_Timestamp = '0001-01-01-00.00.00.00000';

 ENDIF;

 // LCL.Production Date = DB1.Production Date
 LCL.Production_Date = DB1.Production_Date;

 // LCL.Production Date YYYYMMDD = DB1.Production Date
 LCL.Production_Date_YYYYMMDD = DB1.Production_Date;

 //?If Prod Date=0 & is Bulk Item then Set Prod Date=930101.
 CASE;

 // IF DB1.Production Date is not entered
 IF DB1.Production_Date = *ZERO;

 EXECUTE FUNCTION(RTV Production Control RT) TYPE(RTVOBJ) FILE(CABZREP)          AC1397166;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(LCL.Production_Date_Control);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?Bulk Item.
 CASE;

 // IF LCL.Production Date Control is no
 IF LCL.Production_Date_Control = 'N';

 // LCL.Production Date = CON.930101
 LCL.Production_Date = 930101;

 // LCL.Production Date YYYYMMDD = LCL.Production Date
 LCL.Production_Date_YYYYMMDD = LCL.Production_Date;

 ENDIF;

 //?Default Prod Date=1993-01-01 If 0.
 CASE;

 // IF LCL.Production Date is not entered
 IF LCL.Production_Date = *ZERO;

 // LCL.Production Date = CON.930101
 LCL.Production_Date = 930101;

 // LCL.Production Date YYYYMMDD = CON.1993-01-01
 LCL.Production_Date_YYYYMMDD = '1993-01-01';

 ENDIF;

 ENDIF;

 EXECUTE FUNCTION(Crt WIM Item Bal Dtl  CR) TYPE(CRTOBJ) FILE(PUCHCPP)           AC2209117;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(LCL.Inventory_Item_Type);
 PARAMETER(LCL.Production_Date);
 PARAMETER(DB1.Physical_Count_Weight);
 PARAMETER(DB1.Physical_Count_Qty_UOM1);
 PARAMETER(DB1.Physical_Count_Status);
 PARAMETER(DB1.Quantity_on_Hand_Weight);
 PARAMETER(DB1.Quantity_on_Hand_UOM1);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(DB1.Physical_Start_Weight);
 PARAMETER(DB1.Physical_Start_UOM1);
 PARAMETER(DB1.Physical_Start_Date);
 PARAMETER(LCL.Physical_Start_Timestamp);
 PARAMETER(LCL.Production_Date_YYYYMMDD);
 PARAMETER(DB1.Item_Structure_Class_Code);
 PARAMETER(DB1.Item_Structure_Group_Code);
 PARAMETER(DB1.Item_Structure_Type_Code);
 PARAMETER(DB1.Record_Status);
 PARAMETER(0001-01-01-00.00.00.00000);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Crt Time Stamp DDL IF) TYPE(EXCINTFUN)                     AC2212929;
  PARAMETER(DB1.Create_Date_Timestamp);
  PARAMETER(DB1.Create_User_ID);
  PARAMETER(DB1.Create_Program_Name);
  PARAMETER(DB1.Update_User_Id);
  PARAMETER(DB1.Update_Program_Name);
  {
   //?Execute internal function

   //?*** Set CREATE Time Stamp Info.
   // PAR.Create Date Timestamp = JOB.*System timestamp
   PAR.Create_Date_Timestamp = JOB.*System_timestamp;

   // PAR.Create User ID = JOB.*USER
   PAR.Create_User_ID = JOB.*USER;

   // PAR.Create Program Name = JOB.*PROGRAM
   PAR.Create_Program_Name = JOB.*PROGRAM;

   //?*** Set CHANGE Time Stamp Info.
   //?Cannot set Update Date TS here, will error.
   // PAR.Update User Id = CON.*BLANK
   PAR.Update_User_Id = *BLANK;

   // PAR.Update Program Name = CON.*BLANK
   PAR.Update_Program_Name = *BLANK;

  }

 }

 ENDIF;

}


