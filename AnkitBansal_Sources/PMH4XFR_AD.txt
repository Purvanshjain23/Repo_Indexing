// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMH4XFR
// ?Date: 14.08.2025 Time: 03:43:13
// ?------------------------------------------------------------------------------------------------

//?Execute user function

EXECUTE FUNCTION(Rtv Calendar YR/Per.   RT) TYPE(RTVOBJ) FILE(CAAFREP)          AC1105774;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.SDA_Actual_Ship_Date);
PARAMETER(LCL.Accounting_Year_Code);
PARAMETER(LCL.Accounting_Period_Code);
{
 //?USER: Process Data record

 // PAR.Accounting Period Code = DB1.Accounting Period Code
 PAR.Accounting_Period_Code = DB1.Accounting_Period_Code;

 // PAR.Accounting Year Code = DB1.Accounting Year Code
 PAR.Accounting_Year_Code = DB1.Accounting_Year_Code;

}


EXECUTE FUNCTION(RTV First Dte of PeriodRT) TYPE(RTVOBJ) FILE(CAATREP)          AC1470512;
PARAMETER(PAR.Company_Number);
PARAMETER(LCL.Accounting_Year_Code);
PARAMETER(LCL.Accounting_Period_Code);
PARAMETER(PAR.Period_Beginning_Date);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


EXECUTE FUNCTION(RTV Last Date of PeriodRT) TYPE(RTVOBJ) FILE(CAATREP)          AC1470484;
PARAMETER(PAR.Company_Number);
PARAMETER(LCL.Accounting_Year_Code);
PARAMETER(LCL.Accounting_Period_Code);
PARAMETER(PAR.Period_Ending_Date);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


EXECUTE FUNCTION(Rtv Accum Mo Sales $  RT) TYPE(RTVOBJ) FILE(OMHRCPP)           AC1828928;
PARAMETER(PAR.Accrual_Code);
PARAMETER(PAR.Broker_Code);
PARAMETER(PAR.Ship_To_Customer);
PARAMETER(PAR.Period_Beginning_Date);
PARAMETER(PAR.Period_Beginning_Date);
PARAMETER(PAR.Period_Ending_Date);
PARAMETER(PAR.Sales_Net_Amount);
{
 //?USER: Initialize routine

 // PAR.Sales Net Amount = CON.*ZERO
 PAR.Sales_Net_Amount = *ZERO;

 // PAR.Order Number Saved USR = CON.*ZERO
 PAR.Order_Number_Saved_USR = *ZERO;

 //?USER: Process Data record

 CASE;

 // IF DB1.SDA Actual Ship Date GE PAR.Period Beginning Date
 IF DB1.SDA_Actual_Ship_Date >= PAR.Period_Beginning_Date;

 // AND DB1.SDA Actual Ship Date LE PAR.Period Ending Date
 AND DB1.SDA_Actual_Ship_Date <= PAR.Period_Ending_Date;

 CASE;

 // IF DB1.Order Number NE PAR.Order Number Saved USR
 IF DB1.Order_Number <> PAR.Order_Number_Saved_USR;

 EXECUTE FUNCTION(RTV Net Sales-been pd RT) TYPE(RTVOBJ) FILE(OMHSTPP)           AC1828951;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(LCL.FOB_Gross_Amount);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  //?Per the SEIDAI contract:
  //? Accum Sale Amount only if the Invoice has been paid in full
  EXECUTE FUNCTION(RTV Invoice/Remaining  RT) TYPE(RTVOBJ) FILE(ARBDCPP)          AC1508113;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Invoice_Number);
  PARAMETER(DB1.Invoice_Suffix);
  PARAMETER(LCL.Remaining_Balance_Due);
  PARAMETER(LCL.AR_Customer_Number);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  CASE;

  // IF LCL.Remaining Balance Due is equal to zero
  IF LCL.Remaining_Balance_Due = *ZERO;

  // Compute:Net Sale Amt
  PAR.FOB_Gross_Amount = ( PAR.FOB_Gross_Amount + DB1.FOB_Gross_Amount )
  - DB1.Ledgrd_Trd_Fund_Accrl_Amt;

  ENDIF;

 }

 // PAR.Sales Net Amount = PAR.Sales Net Amount + LCL.FOB Gross Amount
 PAR.Sales_Net_Amount = PAR.Sales_Net_Amount + LCL.FOB_Gross_Amount;

 //?Accum at order number break -  so save it
 // PAR.Order Number Saved USR = DB1.Order Number
 PAR.Order_Number_Saved_USR = DB1.Order_Number;

 ENDIF;

 ENDIF;

}


