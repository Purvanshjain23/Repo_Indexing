// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKOFXFR
// ?Date: 14.08.2025 Time: 02:52:18
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Modifications and Comments
DO;

//?H16853 ISE 11/09/2020 - Recompiled due to change in Buy Order Number
ENDDO;

// WRK.Number 1 USR = CON.1
WRK.Number_1_USR = 1;

// WRK.Number 2 USR = JOB.*Job date *DAY OF MONTH
WRK.Number_2_USR = DATEDTLS(JOB.*Job_date 'DM' 1111111 'NONE' 'N' 1);

//?Get first day of month
CASE;

// IF WRK.Number 2 USR NE WRK.Number 1 USR
IF WRK.Number_2_USR <> WRK.Number_1_USR;

// WRK.Number 3 USR = WRK.Number 2 USR - CON.1
WRK.Number_3_USR = WRK.Number_2_USR - 1;

// WRK.Number 3 USR = CON.*ZERO - WRK.Number 3 USR
WRK.Number_3_USR = *ZERO - WRK.Number_3_USR;

// PAR.Date From USR = JOB.*Job date + WRK.Number 3 USR *DAYS
PAR.Date_From_USR = DATEINCR(JOB.*Job_date WRK.Number_3_USR 'DY' 1111111 'NONE' 'N' 1);

//?Get first day of month
// IF *OTHERWISE
IF *OTHERWISE;

// PAR.Date From USR = JOB.*Job date
PAR.Date_From_USR = JOB.*Job_date;

ENDIF;

EXECUTE FUNCTION(Clc Reserve Acct Int  RT) TYPE(RTVOBJ) FILE(PKEECPP)           AB1208895;
PARAMETER(PAR.Date_From_USR);
{
 //?USER: Process Data record

 //?Documentation
 DO;

 //?par.Date From Usr is the starting date for the month.
 //?par.Date Usr is the date currently being processed.
 //?par.Process Month Usr is the month of the starting date
 //?par.Process Month 2 Usr is the month of the processing date
 //?average daily balance calculation:
 //?   Sum the ending balance for each day in the month being processed.
 //?   then divide by the number of days in the month
 ENDDO;

 //?initialize fields for each contract
 EXECUTE FUNCTION(Del Clr Rsrv Acct Bal DR) TYPE(DLTOBJ) ARRAY(Reserve_Acct_DailyAB1208989;
 // PAR.Total Balance = CON.*ZERO
 PAR.Total_Balance = *ZERO;

 // PAR.Count USR = CON.*ZERO
 PAR.Count_USR = *ZERO;

 // PAR.Date USR = PAR.Date From USR
 PAR.Date_USR = PAR.Date_From_USR;

 // PAR.Process Month Usr = PAR.Date USR *MONTH
 PAR.Process_Month_Usr = DATEDTLS(PAR.Date_USR 'MO' 1111111 'NONE' 'N' 1);

 // PAR.Process Month 2 Usr = PAR.Process Month Usr
 PAR.Process_Month_2_Usr = PAR.Process_Month_Usr;

 EXECUTE FUNCTION(Rtv Starting Balance  RT) TYPE(RTVOBJ) FILE(PKEGCPP)           AB1208963;
 PARAMETER(DB1.PC_Contract_Code);
 PARAMETER(PAR.Date_USR);
 PARAMETER(PAR.Total_Balance);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?Process transactions for each day in month
 // DOW PAR.Process Month 2 Usr EQ PAR.Process Month Usr
 DOW PAR.Process_Month_2_Usr = PAR.Process_Month_Usr;

 EXECUTE FUNCTION(Rtv Sum Trans for Dte RT) TYPE(RTVOBJ) FILE(PKEFCPP)           AB1208964;
 PARAMETER(DB1.PC_Contract_Code);
 PARAMETER(PAR.Date_USR);
 PARAMETER(*ZERO);
 PARAMETER(PAR.Days_Transactions);
 {
  //?USER: Initialize routine

  // PAR.Days Transactions = CON.*ZERO
  PAR.Days_Transactions = *ZERO;

  //?USER: Process Data record

  // PAR.Days Transactions = PAR.Days Transactions + DB1.PAD Transaction Amount
  PAR.Days_Transactions = PAR.Days_Transactions + DB1.PAD_Transaction_Amount;

 }

 // PAR.Total Balance = PAR.Total Balance + PAR.Days Transactions
 PAR.Total_Balance = PAR.Total_Balance + PAR.Days_Transactions;

 EXECUTE FUNCTION(Crt Rsrv Acct Dly Bal CR) TYPE(CRTOBJ) ARRAY(Reserve_Acct_DailyAB1208987;
 PARAMETER(PAR.Date_USR);
 PARAMETER(PAR.Total_Balance);
 // PAR.Count USR = PAR.Count USR + CON.1
 PAR.Count_USR = PAR.Count_USR + 1;

 // PAR.Date USR = PAR.Date USR + CON.1 *DAYS
 PAR.Date_USR = DATEINCR(PAR.Date_USR 1 'DY' 1111111 'NONE' 'N' 1);

 // PAR.Process Month 2 Usr = PAR.Date USR *MONTH
 PAR.Process_Month_2_Usr = DATEDTLS(PAR.Date_USR 'MO' 1111111 'NONE' 'N' 1);

 ENDDO;

 //?Average Daily Balance calc
 CASE;

 // IF PAR.Count USR NE WRK.Zero USR
 IF PAR.Count_USR <> WRK.Zero_USR;

 EXECUTE FUNCTION(Rtv Sum Rsrv Acct Bal RT) TYPE(RTVOBJ) ARRAY(Reserve_Acct_DailyAB1208988;
 PARAMETER(PAR.Date_From_USR);
 PARAMETER(PAR.Total_Balance);
 {
  //?USER: Initialize routine

  // PAR.Total Balance = CON.*ZERO
  PAR.Total_Balance = *ZERO;

  //?USER: Process Data record

  // PAR.Total Balance = PAR.Total Balance + DB1.Total Balance
  PAR.Total_Balance = PAR.Total_Balance + DB1.Total_Balance;

 }

 // PAR.Average Daily Balance = PAR.Total Balance / PAR.Count USR *
 PAR.Average_Daily_Balance = PAR.Total_Balance / PAR.Count_USR;

 //?Average Daily Balance calc
 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.Average Daily Balance = CON.*ZERO
 PAR.Average_Daily_Balance = *ZERO;

 ENDIF;

 //?Calculate Interest and create transaction
 CASE;

 // IF PAR.Average Daily Balance GT WRK.Zero USR
 IF PAR.Average_Daily_Balance > WRK.Zero_USR;

 //?calculate interest on average daily balance
 EXECUTE FUNCTION(Rtv Prime Int Rate    RT) TYPE(RTVOBJ) FILE(PKEDCPP)           AB1208929;
 PARAMETER(DB1.PC_Contract_Code);
 PARAMETER(PAR.Date_From_USR);
 PARAMETER(PAR.PCI_Prime_Interest_Rate);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 // PGM.*Synon (15,5) work field = PAR.PCI Prime Interest Rate / CON.100 *Rounded
 PGM.*Synon_155_work_field = PAR.PCI_Prime_Interest_Rate / 100 'H';

 // PAR.Month Days USR = JOB.*Job date *MONTH LENGTH
 PAR.Month_Days_USR = DATEDTLS(JOB.*Job_date 'ML' 1111111 'NONE' 'N' 1);

 // Transaction Amount
 PAR.PAD_Transaction_Amount = ( PAR.Average_Daily_Balance * PGM.*Synon_155_work_field 'H' ) *
 ( PAR.Month_Days_USR / 365 'H' ) 'H';

 //?write interest charge transaction
 EXECUTE FUNCTION(Rtv Last Seq# for Dte RT) TYPE(RTVOBJ) FILE(PKEFCPP)           AB1208742;
 PARAMETER(DB1.PC_Contract_Code);
 PARAMETER(JOB.*Job_date);
 PARAMETER(PAR.PAD_Transaction_Sequence);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 // PAR.PAD Transaction Sequence = PAR.PAD Transaction Sequence + CON.1
 PAR.PAD_Transaction_Sequence = PAR.PAD_Transaction_Sequence + 1;

 EXECUTE FUNCTION(Crt Reserve Acct Dtl  CR) TYPE(CRTOBJ) FILE(PKEFCPP)           AB1208636;
 PARAMETER(DB1.PC_Contract_Code);
 PARAMETER(JOB.*Job_date);
 PARAMETER(PAR.PAD_Transaction_Sequence);
 PARAMETER(PAR.PAD_Transaction_Amount);
 PARAMETER('INT');
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(JOB.*JOB);
 PARAMETER(JOB.*PROGRAM);
 PARAMETER(JOB.*USER);
 PARAMETER(JOB.*Job_date);
 PARAMETER(JOB.*Job_time);
 {
  //?USER: Processing after Data update

  EXECUTE FUNCTION(Chg Account Balance   CH) TYPE(CHGOBJ) FILE(PKEECPP)           AB1208757;
  PARAMETER(DB1.PC_Contract_Code);
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.PAD_Transaction_Amount);
  {
   //?USER: Processing after Data read

   // DB1.PAH Account Balance = DB1.PAH Account Balance + PAR.PAD Transaction Amount
   DB1.PAH_Account_Balance = DB1.PAH_Account_Balance + PAR.PAD_Transaction_Amount;

  }

 }

 ENDIF;

}


