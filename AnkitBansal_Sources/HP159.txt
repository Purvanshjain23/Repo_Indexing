      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     HP159
      * TITLE:       Set up Capacity and Revise Managers for a Farm
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     02/22/02
      *
      *
      * FUNCTION: Uses an edit record format to production values for a farm site for
      *           existing farms.  This function always updates records.....it never
      *           creates or deletes records.
      *
      *           This program is called from HP150-Revise Farm Site when the 'version'
      *           is 'production' or blank and from HP450 via an option.
      *
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 01/09/02  LeAnne Fedor
      *           Added new fields: fax number, e-mail address, active/inactive status
      *                             miles/minutes to plant, miles/minutes to tran office
      *
      * 10/15/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhpd159    cf   e             workstn
     F                                     infds(iofeed)
      *
      *
     Fhsp016    if   e           k disk
      *    Manager
      *
      *
     Fhsp018    uf a e           k disk
      *    Farm site
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D revise          c                   'REVISE'
     D yes             c                   'Y'
     D no              c                   'N'
     D set1            c                   'SET1  '
     D edit1           c                   'EDIT1 '
     D scrn1           c                   'SCRN1 '
     D exit            c                   'EXIT  '
     D update          c                   'UPDATE'
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
     D mode            s              6
     D pgm             s             10
     D msgfl           s             10
     D routne          s              6
     D action          s                   like(mode)
     D maxmsg          s              2  0  inz(20)
     D rtncd           s              2
      *
      *
      * Workfields
      *
     D wkmgcd          s                   like(mgmgcd)
     D wkmgnm          s                   like(mgmgnm)
      *
      *
      * Parm fields
      *
     D xxmgcd          s                   like(mgmgcd)
     D xxmgnm          s                   like(mgmgnm)
     D xxfscd          s                   like(fsfscd)
     D xxfssqft        s                   like(d1fssqft)
     D xxaist          s                   like(fsaist)
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * standard error message handling data structures
      *---------------------------------------------------------------
      *
      * For error message handling, a packed index (3) is required.
      * For program readability, define a corresponding error count
      * field called 'error'
      *
     D                 ds                  inz
     D  error                         2p 0
     D   e                            2p 0 overlay(error)
      *
      * This data structure supplies the name of the message file to
      * the message handling CL program.  The field name MSGFIL must be
      * constant. The value in quotes is the name of the specific
      * message file containing the user defined messages.
      *
     D                 ds                  inz
     D  msgfil                       10    inz('HSMSGF    ')
      *
      *---------------------------------------------------------------
      *  Standard message data structures
      *---------------------------------------------------------------
      *
      * The following 3 data structures are used to speed message
      * handling since it is faster to clear data structures than
      * arrays.  Each is associated with a standard message array.
      *
     D mgi             ds                  inz
     D  mgid                          7    dim(20)
      *
     D mgd             ds                  inz
     D  mgdt                         50    dim(20)
      *
     D mgwk            ds                  inz
     D  mgw                           1    dim(50)
      *
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Standard workstation information data structure
      *---------------------------------------------------------------
      *    externally defined as UTWSFR (record format: UTIDFRR)
     D iofeed        e ds                  extname(utwsfr)
      *
      *
      *---------------------------------------------------------------
      * Standard database file information data structure
      *---------------------------------------------------------------
      *    externally defined as UTDBGR (record format: FDBCKD)
     D dbfeed        e ds                  extname(utdbfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /eject
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
     C                   eval      routne = set1
      *
     C     *inlr         doweq     *off                                         Main do loop
     C     routne        caseq     set1          $set1
     C     routne        caseq     scrn1         $scrn1
     C     routne        caseq     edit1         $edit1
     C     routne        caseq     update        $upd1
     C     routne        caseq     exit          $exit
     C                   endcs
     C                   enddo                                                  Main do loop
      /eject
      *----------------------------------------------------------------
      * $set1 - set environment for screen 1
      *----------------------------------------------------------------
      *
     C     $set1         begsr
      *
      * Retrieve (but do not lock) farm site record.
      *
     C     d1fscd        chain(n)  hsp018                             92
     C                   if        *in92 = *off                                 If found
     C                   z-add     fshdsqft      d1hdsqft
     C                   move      fscmgcd       d1cmgcd
     C                   move      fspmgcd       d1pmgcd
     C                   move      fsmmgcd       d1mmgcd
      *
     C                   z-add     fstomn        d1tomn
     C                   z-add     fstomi        d1tomi
     C                   z-add     fsplmn        d1plmn
     C                   z-add     fsplmi        d1plmi
      *
     C                   movel     fsaist        d1aist
     C                   movel     fsemail       d1email
     C                   z-add     fsfxacno      d1fxacno
     C                   z-add     fsfxphno      d1fxphno
      *
      * Retrieve manager names
      *   1) cell manager
      *   2) production manager
      *   3) multisite manager
      *
     C                   move      fscmgcd       wkmgcd
     C                   exsr      $mgnm
     C                   move      wkmgnm        d1cmgnm
      *
     C                   move      fspmgcd       wkmgcd
     C                   exsr      $mgnm
     C                   move      wkmgnm        d1pmgnm
      *
     C                   move      fsmmgcd       wkmgcd
     C                   exsr      $mgnm
     C                   move      wkmgnm        d1mmgnm
      *
      * Call the generic program to return the 'total square feet' for the farm.
      *
     C                   call      'HP8003'
     C                   parm      fsfscd        xxfscd
     C     d1fssqft      parm      0             xxfssqft
     C                   else
      *
      * Farm site not found
      *
     C                   seton                                        62
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09008'
     C                   endif
     C                   endif                                                  If found
      *
      *
      * Display the screen.
      *
     C                   eval      routne = scrn1
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * $scrn1 - perform operator I/O for screen 1
      *----------------------------------------------------------------
      *
     C     $scrn1        begsr
      *
      * Write the error messages from the error arrays to the
      * error message subfile
      *
     C                   exsr      $wrmsg
      *
      * Write screen 1 to CRT
      *
     C                   write     hp159k1
     C                   write     hp159ec
     C                   exfmt     hp159r1
      *
      * Clear messages
      *
     C                   exsr      $clmsg
      *
      *
      * Get user's input and set routine
      *
     C                   select
     C                   when      *in03 = *on                                  F3-exit
     C                   eval      rtncd = '03'
     C                   eval      routne = exit
      *
     C                   when      *in04 = *on                                  F4-prompt
     C                   exsr      $f4s1
      *
     C                   when      *in05 = *on                                  F5-refresh
     C                   eval      routne = set1
     C                   other
      *
      * User has pressed enter
      *
     C                   eval      routne = edit1
     C                   endsl
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Edit input fields for screen 1
      *----------------------------------------------------------------
      *
     C     $edit1        begsr
      *
      * *IN62 will be on if the record the user is trying to access has
      * been deleted by another user.  So, only perform the edits for the
      * fields on the screen if the indicator is off
      *
     C                   if        *in62 = *off                                 If here
      *
      * Validate:
      *   1) active/inactive status
      *   2) target square feet per pig
      *
     C                   exsr      $aist
     C                   exsr      $hdsqft
      *
      *
      * Validate:
      *   1) cell manager
      *   2) productiom manager
      *   3) multisite manager
      *
     C                   exsr      $cmgcd
     C                   exsr      $pmgcd
     C                   exsr      $mmgcd
      *
      * Validate:
      *   1) minutes to plant
      *   2) miles to plant
      *   3) minutes to transportation office
      *   4) miles to transportation office
      *
     C                   exsr      $plmn
     C                   exsr      $plmi
     C                   exsr      $tomn
     C                   exsr      $tomi
      *
      * Validate:
      *   1) FAX number
     C                   exsr      $fax
      *
      *
     C                   endif                                                  If here
      *
      * If there are no errors, attempt the update; otherwise,
      * redisplay the screen.  If a record has been deleted out from
      * under the user (*IN62 is ON), then the error message will be
      * issued in the update subroutine.  So, always perform this code.
      *
     C                   if        error = 0
     C                   exsr      $upd1
     C                   else
     C                   eval      routne = scrn1
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Validate status
      *---------------------------------------------------------------
      *
     C     $aist         begsr
      *
     C                   select
     C                   when      d1aist = *blank
     C                   seton                                        39
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
     C
     C                   when      d1aist <> 'A' and d1aist <> 'I'
     C                   seton                                        39
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09105'
     C                   endif
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Validate targeted square feet per pig
      *---------------------------------------------------------------
      *
     C     $hdsqft       begsr
      *
     C                   select
     C                   when      d1hdsqft < 0
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Validate cell manager
      *---------------------------------------------------------------
      *
     C     $cmgcd        begsr
      *
     C                   move      *blank        d1cmgnm
      *
     C                   select
     C                   when      d1cmgcd = *blank
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09001'     mgid(e)
     C                   endif
     C                   other
      *
     C     d1cmgcd       chain     hsp016                             92
     C                   if        *in92 = *on                                  If invalid mgr
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00151'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1cmgcd       mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
      *
     C                   move      mgmgnm        d1cmgnm
      *
      * Check for active manager status
      *
     C                   if        mgmgst <> 'A'
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00154'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1cmgcd       mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif
      *
     C                   endif                                                  If invalid mgr
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Validate production manager
      *---------------------------------------------------------------
      *
     C     $pmgcd        begsr
      *
     C                   move      *blank        d1pmgnm
      *
     C                   select
     C                   when      d1pmgcd = *blank
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09001'     mgid(e)
     C                   endif
     C                   other
      *
     C     d1pmgcd       chain     hsp016                             92
     C                   if        *in92 = *on                                  If invalid mgr
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00151'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1pmgcd       mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
      *
     C                   move      mgmgnm        d1pmgnm
      *
      * Check for active manager status
      *
     C                   if        mgmgst <> 'A'
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00154'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1pmgcd       mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif
      *
     C                   endif                                                  If invalid mgr
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Validate multisite manager
      *---------------------------------------------------------------
      *
     C     $mmgcd        begsr
      *
     C                   move      *blank        d1mmgnm
      *
     C                   select
     C                   when      d1mmgcd = *blank
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09001'     mgid(e)
     C                   endif
     C                   other
      *
     C     d1mmgcd       chain     hsp016                             92
     C                   if        *in92 = *on                                  If invalid mgr
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00151'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1mmgcd       mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
      *
     C                   move      mgmgnm        d1mmgnm
      *
      * Check for active manager status
      *
     C                   if        mgmgst <> 'A'
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00154'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1mmgcd       mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif
      *
     C                   endif                                                  If invalid mgr
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Validate minutes to plant
      *---------------------------------------------------------------
      *
     C     $plmn         begsr
      *
     C                   select
     C                   when      d1plmn < 0
     C                   seton                                        46
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Validate miles to plant
      *---------------------------------------------------------------
      *
     C     $plmi         begsr
      *
     C                   select
     C                   when      d1plmi < 0
     C                   seton                                        47
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Validate minutes to transportation office
      *---------------------------------------------------------------
      *
     C     $tomn         begsr
      *
     C                   select
     C                   when      d1tomn < 0
     C                   seton                                        48
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Validate miles to transportation office
      *---------------------------------------------------------------
      *
     C     $tomi         begsr
      *
     C                   select
     C                   when      d1tomi < 0
     C                   seton                                        49
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endsl
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Validate FAX number
      *----------------------------------------------------------------
      *
      * Fax number is not required. But, if area code is entered, you must
      * have number and vice versa.
      *
     C     $fax          begsr
      *
      * FAX area code
      *
     C                   select
     C                   when      d1fxacno < 0
     C                   seton                                        37
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
      *
     C                   when      d1fxacno = 0 and d1fxphno <> 0
     C                   seton                                        37
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09048'     mgid(e)
     C                   endif
     C                   endsl
      *
      *
      * FAX phone number
      *
     C                   select
     C                   when      d1fxphno < 0
     C                   seton                                        38
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
      *
     C                   when      d1fxphno = 0 and d1fxacno <> 0
     C                   seton                                        38
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09049'     mgid(e)
     C                   endif
     C                   endsl
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Retrieve manager name
      *----------------------------------------------------------------
      *
     C     $mgnm         begsr
      *
     C     wkmgcd        chain     hsp016                             92
     C                   if        *in92 = *off
     C                   move      mgmgnm        wkmgnm
     C                   else
     C                   move      *blank        wkmgnm
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Prompt on screen 1
      *---------------------------------------------------------------
      *
     C     $f4s1         begsr
      *
      *
      * Active/inactive status
      *
     C                   select
     C                   when      fld = 'D1AIST'
     C                   call      'HP512'
     C                   parm      *blank        xxaist
     C                   seton                                        59
     C                   if        xxaist <> *blank
     C                   move      xxaist        d1aist
     C                   endif
      *
      * Cell manager
     C                   when      fld = 'D1CMGCD'
     C                   call      'HP508'
     C                   parm      *blank        xxmgcd
     C                   parm      *blank        xxmgnm
     C                   seton                                        51
     C                   if        xxmgcd <> *blank
     C                   movel     xxmgcd        d1cmgcd
     C                   movel     xxmgnm        d1cmgnm
     C                   endif
      *
      *
      * Production manager
      *
     C                   when      fld = 'D1PMGCD'
     C                   call      'HP508'
     C                   parm      *blank        xxmgcd
     C                   parm      *blank        xxmgnm
     C                   seton                                        52
     C                   if        xxmgcd <> *blank
     C                   movel     xxmgcd        d1pmgcd
     C                   movel     xxmgnm        d1pmgnm
     C                   endif
      *
      *
      * Multisite manager
      *
     C                   when      fld = 'D1MMGCD'
     C                   call      'HP508'
     C                   parm      *blank        xxmgcd
     C                   parm      *blank        xxmgnm
     C                   seton                                        53
     C                   if        xxmgcd <> *blank
     C                   movel     xxmgcd        d1mmgcd
     C                   movel     xxmgnm        d1mmgnm
     C                   endif
     C                   other
      *
      * F4 not valid for this field...issue message
      *
     C                   if        error < maxmsg
     C                   add       1             error                                        013
     C                   movel     'HS09011'     mgid(e)
     C                   endif
      *
     C                   endsl
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * $upd1  - write/update/delete record in database file
      *----------------------------------------------------------------
      *
     C     $upd1         begsr
      *
      * Determine that the record being accessed still exists, prior to
      * attempting to update the record. Lock the record.
      *
      *
     C                   if        error = 0                                    If OK
     C     d1fscd        chain     hsp018                             92
     C                   if        *in92 = *on                                  If not found
     C                   seton                                        62
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09008'
     C                   endif
     C                   endif                                                  If not found
     C                   endif                                                  If OK
      *
      *
      * If there are no errors, update the record.
      *
     C                   if        error = 0                                    If no error
      *
      * Move DSPF fields to database file fields
      *
     C                   z-add     d1hdsqft      fshdsqft
     C                   move      d1cmgcd       fscmgcd
     C                   move      d1pmgcd       fspmgcd
     C                   move      d1mmgcd       fsmmgcd
      *
     C                   z-add     d1tomn        fstomn
     C                   z-add     d1tomi        fstomi
     C                   z-add     d1plmn        fsplmn
     C                   z-add     d1plmi        fsplmi
      *
     C                   move      d1aist        fsaist
     C                   movel     d1email       fsemail
     C                   z-add     d1fxacno      fsfxacno
     C                   z-add     d1fxphno      fsfxphno
      *
     C                   update    fsrec
      *
     C                   endif                                                  If no error
      *
      * Set next routine
      * If there are any errors, redisplay the screen; otherwise, exit
      * the program automatically. (The user does not have to take any
      * function key to exit.)
      *
     C                   if        error > 0
     C                   movel     scrn1         routne
     C                   else
     C                   movel     exit          routne
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * $wrmsg - write error messages
      *---------------------------------------------------------------
      *
     C     $wrmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm                    mgid
     C                   parm                    mgdt
     C                   parm                    error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on. So, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      *
      *----------------------------------------------------------------
      * $clmsg - clear messages
      *----------------------------------------------------------------
      *
     C     $clmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm      *blank        mgi
     C                   parm      *blank        mgd
     C                   parm      *zero         error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on; so, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * $exit - set on last record indicator and end job
      *----------------------------------------------------------------
      *
     C     $exit         begsr
     C                   seton                                        lr
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * *inzsr - initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Key lists
      *     None
      *
      * Parm Lists
      *
     C     *entry        plist
     C                   parm                    d1fscd
     C                   parm                    d1fsnm
      *
     C                   movel     revise        action
     C                   movel     revise        mode
      *
      * The following standard code must be included to make the
      * standard error message handling program function properly.
      * This code sets and clears the program message queue.
      *
     C                   movel     '*'           msgpgm
     C                   exsr      $clmsg
      *
     C                   endsr
      /eject
