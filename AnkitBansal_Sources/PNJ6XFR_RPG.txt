     H/TITLE TST Order Det Bld Sch XF  Execute external functio
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H*  Perform user function
     H*  As defined by action diagram
      *
     H* Generated by CA 2E release 8.7 (1632)
     H* Function type : Execute external function
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISRCENT
     H* Date          : 05/17/22  Time  : 16:38:37
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPME6CPL4IF  E           K        DISK
      * RSQ : Order Detail Build Sched  Pick/SchSh/DdtTm/Ord
      *
     FCABZREL1IF  E           K        DISK
      * RTV : Company Item              Retrieval index       NV
      *
     FCAADREL1IF  E           K        DISK
      * RTV : Warehouse                 Retrieval index       NV
      *
     FPOB6CPL1IF  E           K        DISK
      * RTV : Order Detail Sched-Consmd Retrieval index
      *
     FPDKNCPL1IF  E           K        DISK
      * RTV : Order Detail Schedule     Retrieval index
      *
     FOPBGWKL1IF  E           K        DISK
      * RTV : Order Detail              Retrieval index
      *
     FPDKNCPLBIF  E           K        DISK
      * RSQ : Order Detail Schedule     Co/Ord/Seq/Ssq/PDt-a Rlc
      *
     FPOB5CPL1IF  E           K        DISK
      * RTV : Order Detail Sched-Inv    Retrieval index
      *
     FCAAFREL1IF  E           K        DISK
      * RTV : Calendar                  Retrieval index       NV
      *
     FOPBFCPL1IF  E           K        DISK
      * RTV : Order Header TRG          Retrieval index       NV
      *
     FPOCWCPL1IF  E           K        DISK
      * RTV : PS Prod Item Inventory    Retrieval index
      *
     FPOB5CPL3IF  E           K        DISK
      * RSQ : Order Detail Sched-Inv    Co/Itm/Whs/PDte/Ord
      *
     FPDI8CPL1IF  E           K        DISK
      * RTV : PS Prod Item Schedule     Retrieval index
      *
     FCAADREL3IF  E           K        DISK
      * RTV : Warehouse                 Active records only
      *
     FPMFDREL2IF  E           K        DISK
      * RSQ : Company Item Ext          RTV, select Active
      *
     FOPBFCPLOIF  E           K        DISK
      * RSQ : Order Header TRG          Ord-D/Co
      *
     FCAAFREL8IF  E           K        DISK
      * RTV : Calendar                  Co/Date PrdDaySts=Y
      *
     FCAAFREL3IF  E           K        DISK
      * RSQ : Calendar                  Co/Date               NV
      *
     FPDJCCPL1IF  E           K        DISK
      * RTV : PS Prod Schedule          Retrieval index
      *
     FPDI8CPL4IF  E           K        DISK
      * RSQ : PS Prod Item Schedule     Co/Itm/Whs/PrdDte/Typ
      *
     FPOB6CPL3IF  E           K        DISK
      * RSQ : Order Detail Sched-Consmd Co/Ord/PrdDt/Cns/Itm/Seq
      *
     FCAAFREL6IF  E           K        DISK
      * RSQ : Calendar                  RSQ Co/Date Descending
      *
     FPOB6CPL0UF  E           K        DISK                      A
      * UPD : Order Detail Sched-Consmd Update index
      *
     FPDKNCPL0UF  E           K        DISK                      A
      * UPD : Order Detail Schedule     Update index
      *
     FPOB5CPL0UF  E           K        DISK                      A
      * UPD : Order Detail Sched-Inv    Update index
      *
     FPDI8CPL0UF  E           K        DISK                      A
      * UPD : PS Prod Item Schedule     Update index
      *
     FOPBGWKL0UF  E           K        DISK
      * UPD : Order Detail              Update index
      *
     FPME6CPL0UF  E           K        DISK
      * UPD : Order Detail Build Sched  Update index
      *
      * Long constants
     E                    @CN#    1  03  6   @CN    25
     E                    YDOW        7  1               *Days of week
     I@E6CPAI
      * Order Detail Build Sched  Pick/SchSh/DdtTm/Ord
      * Renamed input format fields
     I              E6AIC3                          WAAIC3
     I              E6C4NB                          WAC4NB
     I              E6DPNB                          WADPNB
     I              E6UENB                          WAUENB
     I              E6AODT                          WAAODT
     I              E6DBST                          WADBST
     I              E6GMST                          WAGMST
     I              E6GWST                          WAGWST
     I              E6JNCD                          WAJNCD
     I              E6HGCD                          WAHGCD
     I              E6NUDT                          WANUDT
     I              E6AJCD                          WAAJCD
     I              E6RPCD                          WARPCD
     I              E6AVQT                          WAAVQT
     I              E6D0WG                          WAD0WG
     I              E6CCQT                          WACCQT
     I              E6AUWG                          WAAUWG
     I              E6JPCD                          WAJPCD
     I              E6NVDT                          WANVDT
     I              E6BUTM                          WABUTM
     I              E6WPST                          WAWPST
     I              E6RMNB                          WARMNB
     I              E6U2ST                          WAU2ST
     I              E6BKC7                          WABKC7
     I              E6XJST                          WAXJST
     I              E6XIST                          WAXIST
     I              E6PKST                          WAPKST
     I              E6BZNA                          WABZNA
     I              E6CXDT                          WACXDT
     I              E6BQTM                          WABQTM
     I              E6DCST                          WADCST
     I              E6DDST                          WADDST
     I              E6OFNY                          WAOFNY
     I              E6EIDT                          WAEIDT
     I              E6RINY                          WARINY
     I              E6TIDT                          WATIDT
     I              E6TJDT                          WATJDT
     I              E6TNDT                          WATNDT
     I              E6TODT                          WATODT
     I              E6IIST                          WAIIST
     I              E6IJST                          WAIJST
     I              E6R4CD                          WAR4CD
     I              E6BGCD                          WABGCD
     I              E6X3CD                          WAX3CD
     I              E6A5DT                          WAA5DT
     I              E6VUDT                          WAVUDT
     I              E6VVDT                          WAVVDT
     I              E6VWDT                          WAVWDT
     I              E6BWSC                          WABWSC
     I              E6BXSC                          WABXSC
     I              E6BYSC                          WABYSC
      *
     I@BZREJU
      * Company Item              Retrieval index       NV
      * Renamed input format fields
     I              BZAIC3                          WBAIC3
     I              BZHGCD                          WBHGCD
     I              BZAVNA                          WBAVNA
     I              BZAWNA                          WBAWNA
     I              BZL7NA                          WBL7NA
     I              BZL8NA                          WBL8NA
     I              BZL6NA                          WBL6NA
     I              BZMFNA                          WBMFNA
     I              BZADCD                          WBADCD
     I              BZAWPC                          WBAWPC
     I              BZLXST                          WBLXST
     I              BZAECD                          WBAECD
     I              BZAXPC                          WBAXPC
     I              BZLYST                          WBLYST
     I              BZAFCD                          WBAFCD
     I              BZAICD                          WBAICD
     I              BZAIWG                          WBAIWG
     I              BZHICD                          WBHICD
     I              BZRBCD                          WBRBCD
     I              BZFZST                          WBFZST
     I              BZAVST                          WBAVST
     I              BZCZWG                          WBCZWG
     I              BZC0WG                          WBC0WG
     I              BZURTN                          WBURTN
     I              BZAJC8                          WBAJC8
     I              BZRINB                          WBRINB
     I              BZRHNB                          WBRHNB
     I              BZRGNB                          WBRGNB
     I              BZLNCD                          WBLNCD
     I              BZTFNB                          WBTFNB
     I              BZN0CD                          WBN0CD
     I              BZX4ST                          WBX4ST
     I              BZTMVA                          WBTMVA
     I              BZTNVA                          WBTNVA
     I              BZBLPR                          WBBLPR
     I              BZBMPR                          WBBMPR
     I              BZLRCD                          WBLRCD
     I              BZU9ST                          WBU9ST
     I              BZCMCO                          WBCMCO
     I              BZQ1CD                          WBQ1CD
     I              BZQ8CD                          WBQ8CD
     I              BZCHTM                          WBCHTM
     I              BZQZCD                          WBQZCD
     I              BZXWST                          WBXWST
     I              BZXXST                          WBXXST
     I              BZVMST                          WBVMST
     I              BZSWGH                          WBSWGH
     I              BZPPHE                          WBPPHE
     I              BZR3CD                          WBR3CD
     I              BZSDCD                          WBSDCD
     I              BZICN1                          WBICN1
     I              BZSVCD                          WBSVCD
     I              BZICN2                          WBICN2
     I              BZSWCD                          WBSWCD
     I              BZV2NB                          WBV2NB
     I              BZSXCD                          WBSXCD
     I              BZITCN                          WBITCN
     I              BZSYCD                          WBSYCD
     I              BZITC5                          WBITC5
     I              BZSZCD                          WBSZCD
     I              BZICN6                          WBICN6
     I              BZS0CD                          WBS0CD
     I              BZICN7                          WBICN7
     I              BZS1CD                          WBS1CD
     I              BZICN8                          WBICN8
     I              BZS2CD                          WBS2CD
     I              BZICN9                          WBICN9
     I              BZS3CD                          WBS3CD
     I              BZICN0                          WBICN0
     I              BZS4CD                          WBS4CD
     I              BZSFNB                          WBSFNB
     I              BZA3WG                          WBA3WG
     I              BZSJNB                          WBSJNB
     I              BZLLCD                          WBLLCD
     I              BZLMCD                          WBLMCD
     I              BZP3ST                          WBP3ST
     I              BZSKNB                          WBSKNB
     I              BZSLNB                          WBSLNB
     I              BZSMNB                          WBSMNB
     I              BZP4ST                          WBP4ST
     I              BZCFNB                          WBCFNB
     I              BZCGNB                          WBCGNB
     I              BZILNB                          WBILNB
     I              BZCHNB                          WBCHNB
     I              BZCINB                          WBCINB
     I              BZCJNB                          WBCJNB
     I              BZCMNB                          WBCMNB
     I              BZCNNB                          WBCNNB
     I              BZCRNB                          WBCRNB
     I              BZCSNB                          WBCSNB
     I              BZCVNB                          WBCVNB
     I              BZCWNB                          WBCWNB
     I              BZCXNB                          WBCXNB
     I              BZCZNB                          WBCZNB
     I              BZC0NB                          WBC0NB
     I              BZN1CD                          WBN1CD
     I              BZB4NB                          WBB4NB
     I              BZB5NB                          WBB5NB
     I              BZX5ST                          WBX5ST
     I              BZX6ST                          WBX6ST
     I              BZX7ST                          WBX7ST
     I              BZPCCT                          WBPCCT
     I              BZBDNB                          WBBDNB
     I              BZBJNB                          WBBJNB
     I              BZSUST                          WBSUST
     I              BZSVST                          WBSVST
     I              BZSYST                          WBSYST
     I              BZSZST                          WBSZST
     I              BZS1ST                          WBS1ST
     I              BZXRCD                          WBXRCD
     I              BZXTCD                          WBXTCD
     I              BZXUCD                          WBXUCD
     I              BZF5WG                          WBF5WG
     I              BZF6WG                          WBF6WG
     I              BZF7WG                          WBF7WG
     I              BZBLNB                          WBBLNB
     I              BZBNNB                          WBBNNB
     I              BZS2ST                          WBS2ST
     I              BZS4ST                          WBS4ST
     I              BZS5ST                          WBS5ST
     I              BZS6ST                          WBS6ST
     I              BZS8ST                          WBS8ST
     I              BZS9ST                          WBS9ST
     I              BZTCST                          WBTCST
     I              BZTDST                          WBTDST
     I              BZUVST                          WBUVST
     I              BZUWST                          WBUWST
     I              BZUXST                          WBUXST
     I              BZVSST                          WBVSST
     I              BZAATM                          WBAATM
     I              BZAYNA                          WBAYNA
     I              BZA0NA                          WBA0NA
     I              BZAXDT                          WBAXDT
      *
     I@ADREAO
      * Warehouse                 Retrieval index       NV
      * Renamed input format fields
     I              ADAJCD                          WCAJCD
     I              ADF8NA                          WCF8NA
     I              ADACNA                          WCACNA
     I              ADADNA                          WCADNA
     I              ADAENA                          WCAENA
     I              ADAJNA                          WCAJNA
     I              ADBTTX                          WCBTTX
     I              ADAOCD                          WCAOCD
     I              ADBGCD                          WCBGCD
     I              ADVHST                          WCVHST
     I              ADMPNA                          WCMPNA
     I              ADWPST                          WCWPST
     I              ADXUST                          WCXUST
     I              ADT0ST                          WCT0ST
     I              ADT1ST                          WCT1ST
     I              ADDBNB                          WCDBNB
     I              ADT2ST                          WCT2ST
     I              ADT3ST                          WCT3ST
     I              ADT4ST                          WCT4ST
     I              ADT6ST                          WCT6ST
     I              ADBWC3                          WCBWC3
     I              ADBTC3                          WCBTC3
     I              ADBUC3                          WCBUC3
     I              ADBVC3                          WCBVC3
     I              ADFCAA                          WCFCAA
     I              ADRQSX                          WCRQSX
     I              ADRRSX                          WCRRSX
     I              ADRSSX                          WCRSSX
     I              ADRTSX                          WCRTSX
     I              ADT7ST                          WCT7ST
     I              ADT8ST                          WCT8ST
     I              ADRNSX                          WCRNSX
     I              ADROSX                          WCROSX
     I              ADRPSX                          WCRPSX
     I              ADUVST                          WCUVST
     I              ADUWST                          WCUWST
     I              ADUXST                          WCUXST
     I              ADVSST                          WCVSST
     I              ADAATM                          WCAATM
     I              ADAYNA                          WCAYNA
     I              ADA0NA                          WCA0NA
     I              ADAXDT                          WCAXDT
      *
     I@B6CPNB
      * Order Detail Sched-Consmd Retrieval index
      * Renamed input format fields
     I              B6AIC3                          WDAIC3
     I              B6C4NB                          WDC4NB
     I              B6DPNB                          WDDPNB
     I              B6UENB                          WDUENB
     I              B6JGDT                          WDJGDT
     I              B6OONY                          WDOONY
     I              B6AODT                          WDAODT
     I              B6AJCD                          WDAJCD
     I              B6NUDT                          WDNUDT
     I              B6HGCD                          WDHGCD
     I              B6IGQT                          WDIGQT
     I              B6FLWG                          WDFLWG
     I              B6NSQT                          WDNSQT
     I              B6JQWG                          WDJQWG
     I              B6NVDT                          WDNVDT
     I              B6BUTM                          WDBUTM
     I              B6UVST                          WDUVST
     I              B6UWST                          WDUWST
     I              B6UXST                          WDUXST
     I              B6VSST                          WDVSST
     I              B6AATM                          WDAATM
     I              B6AYNA                          WDAYNA
     I              B6A0NA                          WDA0NA
     I              B6AXDT                          WDAXDT
      *
     I@B6CPNA
      * Order Detail Sched-Consmd Update index
      * Renamed input format fields
     I              B6AIC3                          WEAIC3
     I              B6C4NB                          WEC4NB
     I              B6DPNB                          WEDPNB
     I              B6UENB                          WEUENB
     I              B6JGDT                          WEJGDT
     I              B6OONY                          WEOONY
     I              B6AODT                          WEAODT
     I              B6AJCD                          WEAJCD
     I              B6NUDT                          WENUDT
     I              B6HGCD                          WEHGCD
     I              B6IGQT                          WEIGQT
     I              B6FLWG                          WEFLWG
     I              B6NSQT                          WENSQT
     I              B6JQWG                          WEJQWG
     I              B6NVDT                          WENVDT
     I              B6BUTM                          WEBUTM
     I              B6UVST                          WEUVST
     I              B6UWST                          WEUWST
     I              B6UXST                          WEUXST
     I              B6VSST                          WEVSST
     I              B6AATM                          WEAATM
     I              B6AYNA                          WEAYNA
     I              B6A0NA                          WEA0NA
     I              B6AXDT                          WEAXDT
      *
     I@KNCPHO
      * Order Detail Schedule     Retrieval index
      * Renamed input format fields
     I              KNAIC3                          WFAIC3
     I              KNC4NB                          WFC4NB
     I              KNDPNB                          WFDPNB
     I              KNUENB                          WFUENB
     I              KNJGDT                          WFJGDT
     I              KNAODT                          WFAODT
     I              KNAJCD                          WFAJCD
     I              KNAYAA                          WFAYAA
     I              KNHGCD                          WFHGCD
     I              KNIGQT                          WFIGQT
     I              KNFLWG                          WFFLWG
     I              KNIUQT                          WFIUQT
     I              KNF3WG                          WFF3WG
     I              KNIVQT                          WFIVQT
     I              KNF4WG                          WFF4WG
     I              KNP7ST                          WFP7ST
     I              KNP8ST                          WFP8ST
     I              KNQAST                          WFQAST
     I              KNUVST                          WFUVST
     I              KNUWST                          WFUWST
     I              KNUXST                          WFUXST
     I              KNVSST                          WFVSST
     I              KNAATM                          WFAATM
     I              KNAYNA                          WFAYNA
     I              KNA0NA                          WFA0NA
     I              KNAXDT                          WFAXDT
      *
     I@KNCPHN
      * Order Detail Schedule     Update index
      * Renamed input format fields
     I              KNAIC3                          WGAIC3
     I              KNC4NB                          WGC4NB
     I              KNDPNB                          WGDPNB
     I              KNUENB                          WGUENB
     I              KNJGDT                          WGJGDT
     I              KNAODT                          WGAODT
     I              KNAJCD                          WGAJCD
     I              KNAYAA                          WGAYAA
     I              KNHGCD                          WGHGCD
     I              KNIGQT                          WGIGQT
     I              KNFLWG                          WGFLWG
     I              KNIUQT                          WGIUQT
     I              KNF3WG                          WGF3WG
     I              KNIVQT                          WGIVQT
     I              KNF4WG                          WGF4WG
     I              KNP7ST                          WGP7ST
     I              KNP8ST                          WGP8ST
     I              KNQAST                          WGQAST
     I              KNUVST                          WGUVST
     I              KNUWST                          WGUWST
     I              KNUXST                          WGUXST
     I              KNVSST                          WGVSST
     I              KNAATM                          WGAATM
     I              KNAYNA                          WGAYNA
     I              KNA0NA                          WGA0NA
     I              KNAXDT                          WGAXDT
      *
     I@BGWKL1
      * Order Detail              Retrieval index
      * Renamed input format fields
     I              OMAIC3                          WHAIC3
     I              OMC4NB                          WHC4NB
     I              OMDPNB                          WHDPNB
     I              OMUENB                          WHUENB
     I              OMHGCD                          WHHGCD
     I              OMAJCD                          WHAJCD
     I              OMBKC7                          WHBKC7
     I              OMCFC7                          WHCFC7
     I              OMGMST                          WHGMST
     I              OMGNST                          WHGNST
     I              OMMAVA                          WHMAVA
     I              OMKDVA                          WHKDVA
     I              OML8VA                          WHL8VA
     I              OML9VA                          WHL9VA
     I              OMGTST                          WHGTST
     I              OMGVST                          WHGVST
     I              OMGUST                          WHGUST
     I              OMQFST                          WHQFST
     I              OMAYVA                          WHAYVA
     I              OMEXDT                          WHEXDT
     I              OMLQCD                          WHLQCD
     I              OMRDCD                          WHRDCD
     I              OMQ7CD                          WHQ7CD
     I              OMBZPR                          WHBZPR
     I              OML6NB                          WHL6NB
     I              OMU1ST                          WHU1ST
     I              OMGIDT                          WHGIDT
     I              OMCRCD                          WHCRCD
     I              OMAGCD                          WHAGCD
     I              OMRZST                          WHRZST
     I              OMR0ST                          WHR0ST
     I              OMR1ST                          WHR1ST
     I              OMG7NA                          WHG7NA
     I              OMG8NA                          WHG8NA
     I              OMRPCD                          WHRPCD
     I              OMVEST                          WHVEST
     I              OMVGST                          WHVGST
     I              OMAVST                          WHAVST
     I              OMU0ST                          WHU0ST
     I              OMRFCD                          WHRFCD
     I              OMFZST                          WHFZST
     I              OMR1NB                          WHR1NB
     I              OMAVQT                          WHAVQT
     I              OMD0WG                          WHD0WG
     I              OMCCQT                          WHCCQT
     I              OMAUWG                          WHAUWG
     I              OMCBQT                          WHCBQT
     I              OMATWG                          WHATWG
     I              OMAQCS                          WHAQCS
     I              OMAGCS                          WHAGCS
     I              OMAKPR                          WHAKPR
     I              OMALPR                          WHALPR
     I              OMAUPR                          WHAUPR
     I              OMAVWG                          WHAVWG
     I              OMA4WG                          WHA4WG
     I              OMA5DT                          WHA5DT
     I              OMAODT                          WHAODT
     I              OMGNDT                          WHGNDT
     I              OMAMST                          WHAMST
     I              OMANST                          WHANST
     I              OMVAST                          WHVAST
     I              OMRGNB                          WHRGNB
     I              OMRHNB                          WHRHNB
     I              OMRINB                          WHRINB
     I              OMRBCD                          WHRBCD
     I              OMHICD                          WHHICD
     I              OMRNCD                          WHRNCD
     I              OMROCD                          WHROCD
     I              OMCXDT                          WHCXDT
     I              OMAJVN                          WHAJVN
     I              OMKXCD                          WHKXCD
     I              OMJPCD                          WHJPCD
     I              OMCQCD                          WHCQCD
     I              OMR4CD                          WHR4CD
     I              OMZ1ST                          WHZ1ST
     I              OMZ3ST                          WHZ3ST
     I              OMZ4ST                          WHZ4ST
     I              OMDUPR                          WHDUPR
     I              OMB6VL                          WHB6VL
     I              OMA1AA                          WHA1AA
     I              OMFZSX                          WHFZSX
     I              OMF0SX                          WHF0SX
     I              OMF1SX                          WHF1SX
     I              OMF2SX                          WHF2SX
     I              OMF3SX                          WHF3SX
     I              OMF4SX                          WHF4SX
     I              OMF5SX                          WHF5SX
     I              OMF6SX                          WHF6SX
     I              OMF7SX                          WHF7SX
     I              OMNTDT                          WHNTDT
     I              OMNUDT                          WHNUDT
     I              OMNVDT                          WHNVDT
     I              OMNWDT                          WHNWDT
     I              OMNXDT                          WHNXDT
     I              OMBUTM                          WHBUTM
     I              OMBVTM                          WHBVTM
     I              OMBWTM                          WHBWTM
     I              OMBXTM                          WHBXTM
     I              OMBYTM                          WHBYTM
     I              OMH5NX                          WHH5NX
     I              OMH6NX                          WHH6NX
     I              OMH7NX                          WHH7NX
     I              OMH8NX                          WHH8NX
     I              OMH9NX                          WHH9NX
     I              OMDVPR                          WHDVPR
     I              OMDWPR                          WHDWPR
     I              OMDXPR                          WHDXPR
     I              OMDYPR                          WHDYPR
     I              OMDZPR                          WHDZPR
     I              OMGSPR                          WHGSPR
     I              OMGTPR                          WHGTPR
     I              OMGUPR                          WHGUPR
     I              OMHOST                          WHHOST
     I              OMHPST                          WHHPST
     I              OMIOST                          WHIOST
     I              OMPEWG                          WHPEWG
     I              OMRINY                          WHRINY
     I              OMTIDT                          WHTIDT
     I              OMTJDT                          WHTJDT
     I              OMH2ST                          WHH2ST
     I              OMH0ST                          WHH0ST
     I              OMH1ST                          WHH1ST
     I              OMTKDT                          WHTKDT
     I              OMTLDT                          WHTLDT
     I              OMTMDT                          WHTMDT
     I              OMUVST                          WHUVST
     I              OMUWST                          WHUWST
     I              OMUXST                          WHUXST
     I              OMAATM                          WHAATM
     I              OMAYNA                          WHAYNA
     I              OMA0NA                          WHA0NA
     I              OMAXDT                          WHAXDT
      *
     I@KNCPOC
      * Order Detail Schedule     Co/Ord/Seq/Ssq/PDt-a Rlc
      * Renamed input format fields
     I              KNAIC3                          WIAIC3
     I              KNC4NB                          WIC4NB
     I              KNDPNB                          WIDPNB
     I              KNUENB                          WIUENB
     I              KNJGDT                          WIJGDT
     I              KNAODT                          WIAODT
     I              KNAJCD                          WIAJCD
     I              KNAYAA                          WIAYAA
     I              KNHGCD                          WIHGCD
     I              KNIGQT                          WIIGQT
     I              KNFLWG                          WIFLWG
     I              KNIUQT                          WIIUQT
     I              KNF3WG                          WIF3WG
     I              KNIVQT                          WIIVQT
     I              KNF4WG                          WIF4WG
     I              KNP7ST                          WIP7ST
     I              KNP8ST                          WIP8ST
     I              KNQAST                          WIQAST
     I              KNUVST                          WIUVST
     I              KNUWST                          WIUWST
     I              KNUXST                          WIUXST
     I              KNVSST                          WIVSST
     I              KNAATM                          WIAATM
     I              KNAYNA                          WIAYNA
     I              KNA0NA                          WIA0NA
     I              KNAXDT                          WIAXDT
      *
     I@B5CPM2
      * Order Detail Sched-Inv    Retrieval index
      * Renamed input format fields
     I              B5AIC3                          WJAIC3
     I              B5C4NB                          WJC4NB
     I              B5DPNB                          WJDPNB
     I              B5UENB                          WJUENB
     I              B5JGDT                          WJJGDT
     I              B5AODT                          WJAODT
     I              B5AJCD                          WJAJCD
     I              B5HGCD                          WJHGCD
     I              B5IUQT                          WJIUQT
     I              B5F3WG                          WJF3WG
     I              B5UVST                          WJUVST
     I              B5UWST                          WJUWST
     I              B5UXST                          WJUXST
     I              B5VSST                          WJVSST
     I              B5AATM                          WJAATM
     I              B5AYNA                          WJAYNA
     I              B5A0NA                          WJA0NA
     I              B5AXDT                          WJAXDT
      *
     I@B5CPM1
      * Order Detail Sched-Inv    Update index
      * Renamed input format fields
     I              B5AIC3                          WKAIC3
     I              B5C4NB                          WKC4NB
     I              B5DPNB                          WKDPNB
     I              B5UENB                          WKUENB
     I              B5JGDT                          WKJGDT
     I              B5AODT                          WKAODT
     I              B5AJCD                          WKAJCD
     I              B5HGCD                          WKHGCD
     I              B5IUQT                          WKIUQT
     I              B5F3WG                          WKF3WG
     I              B5UVST                          WKUVST
     I              B5UWST                          WKUWST
     I              B5UXST                          WKUXST
     I              B5VSST                          WKVSST
     I              B5AATM                          WKAATM
     I              B5AYNA                          WKAYNA
     I              B5A0NA                          WKA0NA
     I              B5AXDT                          WKAXDT
      *
     I@AFREBE
      * Calendar                  Retrieval index       NV
      * Renamed input format fields
     I              AFAIC3                          WLAIC3
     I              AFBCDT                          WLBCDT
     I              AFCQNB                          WLCQNB
     I              AFESNB                          WLESNB
     I              AFETNB                          WLETNB
     I              AFBZNB                          WLBZNB
     I              AFA9ST                          WLA9ST
     I              AFEINB                          WLEINB
     I              AFC5ST                          WLC5ST
     I              AFAQNB                          WLAQNB
     I              AFCMST                          WLCMST
     I              AFV9ST                          WLV9ST
     I              AFWAST                          WLWAST
     I              AFX2ST                          WLX2ST
     I              AFOJDT                          WLOJDT
     I              AFNQNX                          WLNQNX
     I              AFNRNX                          WLNRNX
     I              AFI9SX                          WLI9SX
     I              AFJASX                          WLJASX
     I              AFOKDT                          WLOKDT
     I              AFOLDT                          WLOLDT
     I              AFUVST                          WLUVST
     I              AFUWST                          WLUWST
     I              AFUXST                          WLUXST
     I              AFAATM                          WLAATM
     I              AFAYNA                          WLAYNA
     I              AFA0NA                          WLA0NA
     I              AFAXDT                          WLAXDT
      *
     I@BECPFK
      * Order Header TRG          Retrieval index       NV
      * Renamed input format fields
     I              BEAIC3                          WMAIC3
     I              BEC4NB                          WMC4NB
     I              BEJNCD                          WMJNCD
     I              BEANC7                          WMANC7
     I              BEBKC7                          WMBKC7
     I              BEBRTX                          WMBRTX
     I              BEHMNA                          WMHMNA
     I              BEHONA                          WMHONA
     I              BEHPNA                          WMHPNA
     I              BEHNNA                          WMHNNA
     I              BEDBCD                          WMDBCD
     I              BECKTX                          WMCKTX
     I              BEB0C7                          WMB0C7
     I              BEAETX                          WMAETX
     I              BEB1NA                          WMB1NA
     I              BEB3NA                          WMB3NA
     I              BEB4NA                          WMB4NA
     I              BEB2NA                          WMB2NA
     I              BEBHCD                          WMBHCD
     I              BEC8TX                          WMC8TX
     I              BEBCNA                          WMBCNA
     I              BEA0DT                          WMA0DT
     I              BEA5DT                          WMA5DT
     I              BEGNDT                          WMGNDT
     I              BEACDT                          WMACDT
     I              BEAQCD                          WMAQCD
     I              BEB6NA                          WMB6NA
     I              BEBYNA                          WMBYNA
     I              BEBZNA                          WMBZNA
     I              BEGTST                          WMGTST
     I              BEGVST                          WMGVST
     I              BEGUST                          WMGUST
     I              BEQFST                          WMQFST
     I              BECQCD                          WMCQCD
     I              BEGJST                          WMGJST
     I              BEGWST                          WMGWST
     I              BEGXST                          WMGXST
     I              BEGYST                          WMGYST
     I              BEAODT                          WMAODT
     I              BEAIVN                          WMAIVN
     I              BECXDT                          WMCXDT
     I              BEJZVA                          WMJZVA
     I              BEA1WG                          WMA1WG
     I              BEXIST                          WMXIST
     I              BEXJST                          WMXJST
     I              BEXKST                          WMXKST
     I              BEEIDT                          WMEIDT
     I              BEAFTM                          WMAFTM
     I              BEE8CD                          WME8CD
     I              BEE9CD                          WME9CD
     I              BERMNB                          WMRMNB
     I              BETBNB                          WMTBNB
     I              BER1NB                          WMR1NB
     I              BEPJST                          WMPJST
     I              BEU0ST                          WMU0ST
     I              BEU1ST                          WMU1ST
     I              BEQ2CD                          WMQ2CD
     I              BEU2ST                          WMU2ST
     I              BEVEST                          WMVEST
     I              BEVFST                          WMVFST
     I              BEVGST                          WMVGST
     I              BERPCD                          WMRPCD
     I              BERNNB                          WMRNNB
     I              BEVDST                          WMVDST
     I              BEATIN                          WMATIN
     I              BEU4ST                          WMU4ST
     I              BEU5ST                          WMU5ST
     I              BERSRN                          WMRSRN
     I              BEMHNA                          WMMHNA
     I              BEMINA                          WMMINA
     I              BEWBST                          WMWBST
     I              BER4CD                          WMR4CD
     I              BEBFCD                          WMBFCD
     I              BEQ4CD                          WMQ4CD
     I              BET3NB                          WMT3NB
     I              BESICD                          WMSICD
     I              BECONB                          WMCONB
     I              BECEST                          WMCEST
     I              BEAWDT                          WMAWDT
     I              BEJPCD                          WMJPCD
     I              BEXUST                          WMXUST
     I              BEZ1ST                          WMZ1ST
     I              BEVRVA                          WMVRVA
     I              BEOBST                          WMOBST
     I              BEBCST                          WMBCST
     I              BEBDST                          WMBDST
     I              BEB7VL                          WMB7VL
     I              BEGASX                          WMGASX
     I              BEGBSX                          WMGBSX
     I              BEGCSX                          WMGCSX
     I              BEGDSX                          WMGDSX
     I              BEFNSX                          WMFNSX
     I              BEFOSX                          WMFOSX
     I              BEFPSX                          WMFPSX
     I              BEFQSX                          WMFQSX
     I              BEFRSX                          WMFRSX
     I              BEFSSX                          WMFSSX
     I              BEFTSX                          WMFTSX
     I              BEFUSX                          WMFUSX
     I              BEFVSX                          WMFVSX
     I              BEFWSX                          WMFWSX
     I              BEFXSX                          WMFXSX
     I              BEFYSX                          WMFYSX
     I              BENODT                          WMNODT
     I              BENPDT                          WMNPDT
     I              BENQDT                          WMNQDT
     I              BENRDT                          WMNRDT
     I              BENSDT                          WMNSDT
     I              BEBPTM                          WMBPTM
     I              BEBQTM                          WMBQTM
     I              BEBRTM                          WMBRTM
     I              BEBSTM                          WMBSTM
     I              BEBTTM                          WMBTTM
     I              BEH0NX                          WMH0NX
     I              BEH1NX                          WMH1NX
     I              BEH2NX                          WMH2NX
     I              BEH3NX                          WMH3NX
     I              BEH4NX                          WMH4NX
     I              BEC0C7                          WMC0C7
     I              BEUVST                          WMUVST
     I              BEUWST                          WMUWST
     I              BEUXST                          WMUXST
     I              BEAATM                          WMAATM
     I              BEAYNA                          WMAYNA
     I              BEA0NA                          WMA0NA
     I              BEAXDT                          WMAXDT
      *
     I@CWCPQW
      * PS Prod Item Inventory    Retrieval index
      * Renamed input format fields
     I              CWAIC3                          WOAIC3
     I              CWHGCD                          WOHGCD
     I              CWAJCD                          WOAJCD
     I              CWELDT                          WOELDT
     I              CWACWG                          WOACWG
     I              CWARQT                          WOARQT
     I              CWK7DT                          WOK7DT
     I              CWUVST                          WOUVST
     I              CWUWST                          WOUWST
     I              CWUXST                          WOUXST
     I              CWVSST                          WOVSST
     I              CWAATM                          WOAATM
     I              CWAYNA                          WOAYNA
     I              CWA0NA                          WOA0NA
     I              CWAXDT                          WOAXDT
      *
     I@B5CPM4
      * Order Detail Sched-Inv    Co/Itm/Whs/PDte/Ord
      * Renamed input format fields
     I              B5AIC3                          WRAIC3
     I              B5C4NB                          WRC4NB
     I              B5DPNB                          WRDPNB
     I              B5UENB                          WRUENB
     I              B5JGDT                          WRJGDT
     I              B5AODT                          WRAODT
     I              B5AJCD                          WRAJCD
     I              B5HGCD                          WRHGCD
     I              B5IUQT                          WRIUQT
     I              B5F3WG                          WRF3WG
     I              B5UVST                          WRUVST
     I              B5UWST                          WRUWST
     I              B5UXST                          WRUXST
     I              B5VSST                          WRVSST
     I              B5AATM                          WRAATM
     I              B5AYNA                          WRAYNA
     I              B5A0NA                          WRA0NA
     I              B5AXDT                          WRAXDT
      *
     I@I8CPUS
      * PS Prod Item Schedule     Retrieval index
      * Renamed input format fields
     I              I8AIC3                          WSAIC3
     I              I8V5ST                          WSV5ST
     I              I8ELDT                          WSELDT
     I              I8HGCD                          WSHGCD
     I              I8AJCD                          WSAJCD
     I              I8GPDT                          WSGPDT
     I              I8WTSP                          WSWTSP
     I              I8QTSP                          WSQTSP
     I              I8DJPC                          WSDJPC
     I              I8F8WG                          WSF8WG
     I              I8WTIN                          WSWTIN
     I              I8D5NB                          WSD5NB
     I              I8DXWG                          WSDXWG
     I              I8B2NB                          WSB2NB
     I              I8WTCN                          WSWTCN
     I              I8PSCV                          WSPSCV
     I              I8SAWT                          WSSAWT
     I              I8B9NB                          WSB9NB
     I              I8D1WG                          WSD1WG
     I              I8CBNB                          WSCBNB
     I              I8EZWG                          WSEZWG
     I              I8CCNB                          WSCCNB
     I              I8E0WG                          WSE0WG
     I              I8D6NB                          WSD6NB
     I              I8OAWT                          WSOAWT
     I              I8CDNB                          WSCDNB
     I              I8UNW2                          WSUNW2
     I              I8CENB                          WSCENB
     I              I8F9WG                          WSF9WG
     I              I8BPNB                          WSBPNB
     I              I8GAWG                          WSGAWG
     I              I8BQNB                          WSBQNB
     I              I8GBWG                          WSGBWG
     I              I8BRNB                          WSBRNB
     I              I8GCWG                          WSGCWG
     I              I8BSNB                          WSBSNB
     I              I8GDWG                          WSGDWG
     I              I8BWNB                          WSBWNB
     I              I8GEWG                          WSGEWG
     I              I8PS6U                          WSPS6U
     I              I8WCST                          WSWCST
     I              I8WPST                          WSWPST
     I              I8B5ST                          WSB5ST
     I              I8TFST                          WSTFST
     I              I8TEST                          WSTEST
     I              I8THST                          WSTHST
     I              I8UDST                          WSUDST
     I              I8UFST                          WSUFST
     I              I8UGST                          WSUGST
     I              I8UHST                          WSUHST
     I              I8B6ST                          WSB6ST
     I              I8B7ST                          WSB7ST
     I              I8DVWG                          WSDVWG
     I              I8D7NB                          WSD7NB
     I              I8FCAD                          WSFCAD
     I              I8D9NB                          WSD9NB
     I              I8DWWG                          WSDWWG
     I              I8EANB                          WSEANB
     I              I8SHWT                          WSSHWT
     I              I8EBNB                          WSEBNB
     I              I8AVWT                          WSAVWT
     I              I8ECNB                          WSECNB
     I              I8WTON                          WSWTON
     I              I8EDNB                          WSEDNB
     I              I8FNWT                          WSFNWT
     I              I8EENB                          WSEENB
     I              I8QTAS                          WSQTAS
     I              I8EFNB                          WSEFNB
     I              I8WAIO                          WSWAIO
     I              I8EGNB                          WSEGNB
     I              I8R3CD                          WSR3CD
     I              I8RGNB                          WSRGNB
     I              I8RHNB                          WSRHNB
     I              I8RINB                          WSRINB
     I              I8XRCD                          WSXRCD
     I              I8UVST                          WSUVST
     I              I8UWST                          WSUWST
     I              I8UXST                          WSUXST
     I              I8VSST                          WSVSST
     I              I8AATM                          WSAATM
     I              I8AYNA                          WSAYNA
     I              I8A0NA                          WSA0NA
     I              I8AXDT                          WSAXDT
      *
     I@I8CPUR
      * PS Prod Item Schedule     Update index
      * Renamed input format fields
     I              I8AIC3                          WTAIC3
     I              I8V5ST                          WTV5ST
     I              I8ELDT                          WTELDT
     I              I8HGCD                          WTHGCD
     I              I8AJCD                          WTAJCD
     I              I8GPDT                          WTGPDT
     I              I8WTSP                          WTWTSP
     I              I8QTSP                          WTQTSP
     I              I8DJPC                          WTDJPC
     I              I8F8WG                          WTF8WG
     I              I8WTIN                          WTWTIN
     I              I8D5NB                          WTD5NB
     I              I8DXWG                          WTDXWG
     I              I8B2NB                          WTB2NB
     I              I8WTCN                          WTWTCN
     I              I8PSCV                          WTPSCV
     I              I8SAWT                          WTSAWT
     I              I8B9NB                          WTB9NB
     I              I8D1WG                          WTD1WG
     I              I8CBNB                          WTCBNB
     I              I8EZWG                          WTEZWG
     I              I8CCNB                          WTCCNB
     I              I8E0WG                          WTE0WG
     I              I8D6NB                          WTD6NB
     I              I8OAWT                          WTOAWT
     I              I8CDNB                          WTCDNB
     I              I8UNW2                          WTUNW2
     I              I8CENB                          WTCENB
     I              I8F9WG                          WTF9WG
     I              I8BPNB                          WTBPNB
     I              I8GAWG                          WTGAWG
     I              I8BQNB                          WTBQNB
     I              I8GBWG                          WTGBWG
     I              I8BRNB                          WTBRNB
     I              I8GCWG                          WTGCWG
     I              I8BSNB                          WTBSNB
     I              I8GDWG                          WTGDWG
     I              I8BWNB                          WTBWNB
     I              I8GEWG                          WTGEWG
     I              I8PS6U                          WTPS6U
     I              I8WCST                          WTWCST
     I              I8WPST                          WTWPST
     I              I8B5ST                          WTB5ST
     I              I8TFST                          WTTFST
     I              I8TEST                          WTTEST
     I              I8THST                          WTTHST
     I              I8UDST                          WTUDST
     I              I8UFST                          WTUFST
     I              I8UGST                          WTUGST
     I              I8UHST                          WTUHST
     I              I8B6ST                          WTB6ST
     I              I8B7ST                          WTB7ST
     I              I8DVWG                          WTDVWG
     I              I8D7NB                          WTD7NB
     I              I8FCAD                          WTFCAD
     I              I8D9NB                          WTD9NB
     I              I8DWWG                          WTDWWG
     I              I8EANB                          WTEANB
     I              I8SHWT                          WTSHWT
     I              I8EBNB                          WTEBNB
     I              I8AVWT                          WTAVWT
     I              I8ECNB                          WTECNB
     I              I8WTON                          WTWTON
     I              I8EDNB                          WTEDNB
     I              I8FNWT                          WTFNWT
     I              I8EENB                          WTEENB
     I              I8QTAS                          WTQTAS
     I              I8EFNB                          WTEFNB
     I              I8WAIO                          WTWAIO
     I              I8EGNB                          WTEGNB
     I              I8R3CD                          WTR3CD
     I              I8RGNB                          WTRGNB
     I              I8RHNB                          WTRHNB
     I              I8RINB                          WTRINB
     I              I8XRCD                          WTXRCD
     I              I8UVST                          WTUVST
     I              I8UWST                          WTUWST
     I              I8UXST                          WTUXST
     I              I8VSST                          WTVSST
     I              I8AATM                          WTAATM
     I              I8AYNA                          WTAYNA
     I              I8A0NA                          WTA0NA
     I              I8AXDT                          WTAXDT
      *
     I@ADRET1
      * Warehouse                 Active records only
      * Renamed input format fields
     I              ADAJCD                          WVAJCD
     I              ADF8NA                          WVF8NA
     I              ADACNA                          WVACNA
     I              ADADNA                          WVADNA
     I              ADAENA                          WVAENA
     I              ADAJNA                          WVAJNA
     I              ADBTTX                          WVBTTX
     I              ADAOCD                          WVAOCD
     I              ADBGCD                          WVBGCD
     I              ADVHST                          WVVHST
     I              ADMPNA                          WVMPNA
     I              ADWPST                          WVWPST
     I              ADXUST                          WVXUST
     I              ADT0ST                          WVT0ST
     I              ADT1ST                          WVT1ST
     I              ADDBNB                          WVDBNB
     I              ADT2ST                          WVT2ST
     I              ADT3ST                          WVT3ST
     I              ADT4ST                          WVT4ST
     I              ADT6ST                          WVT6ST
     I              ADBWC3                          WVBWC3
     I              ADBTC3                          WVBTC3
     I              ADBUC3                          WVBUC3
     I              ADBVC3                          WVBVC3
     I              ADFCAA                          WVFCAA
     I              ADRQSX                          WVRQSX
     I              ADRRSX                          WVRRSX
     I              ADRSSX                          WVRSSX
     I              ADRTSX                          WVRTSX
     I              ADT7ST                          WVT7ST
     I              ADT8ST                          WVT8ST
     I              ADRNSX                          WVRNSX
     I              ADROSX                          WVROSX
     I              ADRPSX                          WVRPSX
     I              ADUVST                          WVUVST
     I              ADUWST                          WVUWST
     I              ADUXST                          WVUXST
     I              ADVSST                          WVVSST
     I              ADAATM                          WVAATM
     I              ADAYNA                          WVAYNA
     I              ADA0NA                          WVA0NA
     I              ADAXDT                          WVAXDT
      *
     I@FDREAW
      * Company Item Ext          RTV, select Active
      * Renamed input format fields
     I              FDAIC3                          WWAIC3
     I              FDHGCD                          WWHGCD
     I              FDD0ST                          WWD0ST
     I              FDD2ST                          WWD2ST
     I              FDD6ST                          WWD6ST
     I              FDWESP                          WWWESP
     I              FDEDST                          WWEDST
     I              FDEFST                          WWEFST
     I              FDEHST                          WWEHST
     I              FDEMST                          WWEMST
     I              FDENST                          WWENST
     I              FDEOST                          WWEOST
     I              FDEPST                          WWEPST
     I              FDEQST                          WWEQST
     I              FDOQNY                          WWOQNY
     I              FDORNY                          WWORNY
     I              FDS2DT                          WWS2DT
     I              FDUFT1                          WWUFT1
     I              FDKUAA                          WWKUAA
     I              FDVSST                          WWVSST
     I              FDMJDT                          WWMJDT
     I              FDBETM                          WWBETM
     I              FDCCVN                          WWCCVN
     I              FDCDVN                          WWCDVN
     I              FDMKDT                          WWMKDT
     I              FDBFTM                          WWBFTM
     I              FDCEVN                          WWCEVN
     I              FDCFVN                          WWCFVN
      *
     I@BFCPY2
      * Order Header TRG          Ord-D/Co
      * Renamed input format fields
     I              BEAIC3                          WXAIC3
     I              BEC4NB                          WXC4NB
     I              BEJNCD                          WXJNCD
     I              BEANC7                          WXANC7
     I              BEBKC7                          WXBKC7
     I              BEBRTX                          WXBRTX
     I              BEHMNA                          WXHMNA
     I              BEHONA                          WXHONA
     I              BEHPNA                          WXHPNA
     I              BEHNNA                          WXHNNA
     I              BEDBCD                          WXDBCD
     I              BECKTX                          WXCKTX
     I              BEB0C7                          WXB0C7
     I              BEAETX                          WXAETX
     I              BEB1NA                          WXB1NA
     I              BEB3NA                          WXB3NA
     I              BEB4NA                          WXB4NA
     I              BEB2NA                          WXB2NA
     I              BEBHCD                          WXBHCD
     I              BEC8TX                          WXC8TX
     I              BEBCNA                          WXBCNA
     I              BEA0DT                          WXA0DT
     I              BEA5DT                          WXA5DT
     I              BEGNDT                          WXGNDT
     I              BEACDT                          WXACDT
     I              BEAQCD                          WXAQCD
     I              BEB6NA                          WXB6NA
     I              BEBYNA                          WXBYNA
     I              BEBZNA                          WXBZNA
     I              BEGTST                          WXGTST
     I              BEGVST                          WXGVST
     I              BEGUST                          WXGUST
     I              BEQFST                          WXQFST
     I              BECQCD                          WXCQCD
     I              BEGJST                          WXGJST
     I              BEGWST                          WXGWST
     I              BEGXST                          WXGXST
     I              BEGYST                          WXGYST
     I              BEAODT                          WXAODT
     I              BEAIVN                          WXAIVN
     I              BECXDT                          WXCXDT
     I              BEJZVA                          WXJZVA
     I              BEA1WG                          WXA1WG
     I              BEXIST                          WXXIST
     I              BEXJST                          WXXJST
     I              BEXKST                          WXXKST
     I              BEEIDT                          WXEIDT
     I              BEAFTM                          WXAFTM
     I              BEE8CD                          WXE8CD
     I              BEE9CD                          WXE9CD
     I              BERMNB                          WXRMNB
     I              BETBNB                          WXTBNB
     I              BER1NB                          WXR1NB
     I              BEPJST                          WXPJST
     I              BEU0ST                          WXU0ST
     I              BEU1ST                          WXU1ST
     I              BEQ2CD                          WXQ2CD
     I              BEU2ST                          WXU2ST
     I              BEVEST                          WXVEST
     I              BEVFST                          WXVFST
     I              BEVGST                          WXVGST
     I              BERPCD                          WXRPCD
     I              BERNNB                          WXRNNB
     I              BEVDST                          WXVDST
     I              BEATIN                          WXATIN
     I              BEU4ST                          WXU4ST
     I              BEU5ST                          WXU5ST
     I              BERSRN                          WXRSRN
     I              BEMHNA                          WXMHNA
     I              BEMINA                          WXMINA
     I              BEWBST                          WXWBST
     I              BER4CD                          WXR4CD
     I              BEBFCD                          WXBFCD
     I              BEQ4CD                          WXQ4CD
     I              BET3NB                          WXT3NB
     I              BESICD                          WXSICD
     I              BECONB                          WXCONB
     I              BECEST                          WXCEST
     I              BEAWDT                          WXAWDT
     I              BEJPCD                          WXJPCD
     I              BEXUST                          WXXUST
     I              BEZ1ST                          WXZ1ST
     I              BEVRVA                          WXVRVA
     I              BEOBST                          WXOBST
     I              BEBCST                          WXBCST
     I              BEBDST                          WXBDST
     I              BEB7VL                          WXB7VL
     I              BEGASX                          WXGASX
     I              BEGBSX                          WXGBSX
     I              BEGCSX                          WXGCSX
     I              BEGDSX                          WXGDSX
     I              BEFNSX                          WXFNSX
     I              BEFOSX                          WXFOSX
     I              BEFPSX                          WXFPSX
     I              BEFQSX                          WXFQSX
     I              BEFRSX                          WXFRSX
     I              BEFSSX                          WXFSSX
     I              BEFTSX                          WXFTSX
     I              BEFUSX                          WXFUSX
     I              BEFVSX                          WXFVSX
     I              BEFWSX                          WXFWSX
     I              BEFXSX                          WXFXSX
     I              BEFYSX                          WXFYSX
     I              BENODT                          WXNODT
     I              BENPDT                          WXNPDT
     I              BENQDT                          WXNQDT
     I              BENRDT                          WXNRDT
     I              BENSDT                          WXNSDT
     I              BEBPTM                          WXBPTM
     I              BEBQTM                          WXBQTM
     I              BEBRTM                          WXBRTM
     I              BEBSTM                          WXBSTM
     I              BEBTTM                          WXBTTM
     I              BEH0NX                          WXH0NX
     I              BEH1NX                          WXH1NX
     I              BEH2NX                          WXH2NX
     I              BEH3NX                          WXH3NX
     I              BEH4NX                          WXH4NX
     I              BEC0C7                          WXC0C7
     I              BEUVST                          WXUVST
     I              BEUWST                          WXUWST
     I              BEUXST                          WXUXST
     I              BEAATM                          WXAATM
     I              BEAYNA                          WXAYNA
     I              BEA0NA                          WXA0NA
     I              BEAXDT                          WXAXDT
      *
     I@AFREY1
      * Calendar                  Co/Date PrdDaySts=Y
      * Renamed input format fields
     I              AFAIC3                          WYAIC3
     I              AFBCDT                          WYBCDT
     I              AFCQNB                          WYCQNB
     I              AFESNB                          WYESNB
     I              AFETNB                          WYETNB
     I              AFBZNB                          WYBZNB
     I              AFA9ST                          WYA9ST
     I              AFEINB                          WYEINB
     I              AFC5ST                          WYC5ST
     I              AFAQNB                          WYAQNB
     I              AFCMST                          WYCMST
     I              AFV9ST                          WYV9ST
     I              AFWAST                          WYWAST
     I              AFX2ST                          WYX2ST
     I              AFOJDT                          WYOJDT
     I              AFNQNX                          WYNQNX
     I              AFNRNX                          WYNRNX
     I              AFI9SX                          WYI9SX
     I              AFJASX                          WYJASX
     I              AFOKDT                          WYOKDT
     I              AFOLDT                          WYOLDT
     I              AFUVST                          WYUVST
     I              AFUWST                          WYUWST
     I              AFUXST                          WYUXST
     I              AFAATM                          WYAATM
     I              AFAYNA                          WYAYNA
     I              AFA0NA                          WYA0NA
     I              AFAXDT                          WYAXDT
      *
     I@AFREYY
      * Calendar                  Co/Date               NV
      * Renamed input format fields
     I              AFAIC3                          TAAIC3
     I              AFBCDT                          TABCDT
     I              AFCQNB                          TACQNB
     I              AFESNB                          TAESNB
     I              AFETNB                          TAETNB
     I              AFBZNB                          TABZNB
     I              AFA9ST                          TAA9ST
     I              AFEINB                          TAEINB
     I              AFC5ST                          TAC5ST
     I              AFAQNB                          TAAQNB
     I              AFCMST                          TACMST
     I              AFV9ST                          TAV9ST
     I              AFWAST                          TAWAST
     I              AFX2ST                          TAX2ST
     I              AFOJDT                          TAOJDT
     I              AFNQNX                          TANQNX
     I              AFNRNX                          TANRNX
     I              AFI9SX                          TAI9SX
     I              AFJASX                          TAJASX
     I              AFOKDT                          TAOKDT
     I              AFOLDT                          TAOLDT
     I              AFUVST                          TAUVST
     I              AFUWST                          TAUWST
     I              AFUXST                          TAUXST
     I              AFAATM                          TAAATM
     I              AFAYNA                          TAAYNA
     I              AFA0NA                          TAA0NA
     I              AFAXDT                          TAAXDT
      *
     I@JCCPVC
      * PS Prod Schedule          Retrieval index
      * Renamed input format fields
     I              JCAIC3                          TBAIC3
     I              JCV5ST                          TBV5ST
     I              JCELDT                          TBELDT
     I              JCHVHD                          TBHVHD
     I              JCZ6NB                          TBZ6NB
     I              JCZ7NB                          TBZ7NB
     I              JCDGPC                          TBDGPC
     I              JCAVCW                          TBAVCW
     I              JCDIPC                          TBDIPC
     I              JCZ0NB                          TBZ0NB
     I              JCAVLE                          TBAVLE
     I              JCECWG                          TBECWG
     I              JCUVST                          TBUVST
     I              JCUWST                          TBUWST
     I              JCUXST                          TBUXST
     I              JCVSST                          TBVSST
     I              JCAATM                          TBAATM
     I              JCAYNA                          TBAYNA
     I              JCA0NA                          TBA0NA
     I              JCAXDT                          TBAXDT
      *
     I@I8CPXP
      * PS Prod Item Schedule     Co/Itm/Whs/PrdDte/Typ
      * Renamed input format fields
     I              I8AIC3                          TCAIC3
     I              I8V5ST                          TCV5ST
     I              I8ELDT                          TCELDT
     I              I8HGCD                          TCHGCD
     I              I8AJCD                          TCAJCD
     I              I8GPDT                          TCGPDT
     I              I8WTSP                          TCWTSP
     I              I8QTSP                          TCQTSP
     I              I8DJPC                          TCDJPC
     I              I8F8WG                          TCF8WG
     I              I8WTIN                          TCWTIN
     I              I8D5NB                          TCD5NB
     I              I8DXWG                          TCDXWG
     I              I8B2NB                          TCB2NB
     I              I8WTCN                          TCWTCN
     I              I8PSCV                          TCPSCV
     I              I8SAWT                          TCSAWT
     I              I8B9NB                          TCB9NB
     I              I8D1WG                          TCD1WG
     I              I8CBNB                          TCCBNB
     I              I8EZWG                          TCEZWG
     I              I8CCNB                          TCCCNB
     I              I8E0WG                          TCE0WG
     I              I8D6NB                          TCD6NB
     I              I8OAWT                          TCOAWT
     I              I8CDNB                          TCCDNB
     I              I8UNW2                          TCUNW2
     I              I8CENB                          TCCENB
     I              I8F9WG                          TCF9WG
     I              I8BPNB                          TCBPNB
     I              I8GAWG                          TCGAWG
     I              I8BQNB                          TCBQNB
     I              I8GBWG                          TCGBWG
     I              I8BRNB                          TCBRNB
     I              I8GCWG                          TCGCWG
     I              I8BSNB                          TCBSNB
     I              I8GDWG                          TCGDWG
     I              I8BWNB                          TCBWNB
     I              I8GEWG                          TCGEWG
     I              I8PS6U                          TCPS6U
     I              I8WCST                          TCWCST
     I              I8WPST                          TCWPST
     I              I8B5ST                          TCB5ST
     I              I8TFST                          TCTFST
     I              I8TEST                          TCTEST
     I              I8THST                          TCTHST
     I              I8UDST                          TCUDST
     I              I8UFST                          TCUFST
     I              I8UGST                          TCUGST
     I              I8UHST                          TCUHST
     I              I8B6ST                          TCB6ST
     I              I8B7ST                          TCB7ST
     I              I8DVWG                          TCDVWG
     I              I8D7NB                          TCD7NB
     I              I8FCAD                          TCFCAD
     I              I8D9NB                          TCD9NB
     I              I8DWWG                          TCDWWG
     I              I8EANB                          TCEANB
     I              I8SHWT                          TCSHWT
     I              I8EBNB                          TCEBNB
     I              I8AVWT                          TCAVWT
     I              I8ECNB                          TCECNB
     I              I8WTON                          TCWTON
     I              I8EDNB                          TCEDNB
     I              I8FNWT                          TCFNWT
     I              I8EENB                          TCEENB
     I              I8QTAS                          TCQTAS
     I              I8EFNB                          TCEFNB
     I              I8WAIO                          TCWAIO
     I              I8EGNB                          TCEGNB
     I              I8R3CD                          TCR3CD
     I              I8RGNB                          TCRGNB
     I              I8RHNB                          TCRHNB
     I              I8RINB                          TCRINB
     I              I8XRCD                          TCXRCD
     I              I8UVST                          TCUVST
     I              I8UWST                          TCUWST
     I              I8UXST                          TCUXST
     I              I8VSST                          TCVSST
     I              I8AATM                          TCAATM
     I              I8AYNA                          TCAYNA
     I              I8A0NA                          TCA0NA
     I              I8AXDT                          TCAXDT
      *
     I@B6CPAG
      * Order Detail Sched-Consmd Co/Ord/PrdDt/Cns/Itm/Seq
      * Renamed input format fields
     I              B6AIC3                          TDAIC3
     I              B6C4NB                          TDC4NB
     I              B6DPNB                          TDDPNB
     I              B6UENB                          TDUENB
     I              B6JGDT                          TDJGDT
     I              B6OONY                          TDOONY
     I              B6AODT                          TDAODT
     I              B6AJCD                          TDAJCD
     I              B6NUDT                          TDNUDT
     I              B6HGCD                          TDHGCD
     I              B6IGQT                          TDIGQT
     I              B6FLWG                          TDFLWG
     I              B6NSQT                          TDNSQT
     I              B6JQWG                          TDJQWG
     I              B6NVDT                          TDNVDT
     I              B6BUTM                          TDBUTM
     I              B6UVST                          TDUVST
     I              B6UWST                          TDUWST
     I              B6UXST                          TDUXST
     I              B6VSST                          TDVSST
     I              B6AATM                          TDAATM
     I              B6AYNA                          TDAYNA
     I              B6A0NA                          TDA0NA
     I              B6AXDT                          TDAXDT
      *
     I@AFREPU
      * Calendar                  RSQ Co/Date Descending
      * Renamed input format fields
     I              AFAIC3                          TEAIC3
     I              AFBCDT                          TEBCDT
     I              AFCQNB                          TECQNB
     I              AFESNB                          TEESNB
     I              AFETNB                          TEETNB
     I              AFBZNB                          TEBZNB
     I              AFA9ST                          TEA9ST
     I              AFEINB                          TEEINB
     I              AFC5ST                          TEC5ST
     I              AFAQNB                          TEAQNB
     I              AFCMST                          TECMST
     I              AFV9ST                          TEV9ST
     I              AFWAST                          TEWAST
     I              AFX2ST                          TEX2ST
     I              AFOJDT                          TEOJDT
     I              AFNQNX                          TENQNX
     I              AFNRNX                          TENRNX
     I              AFI9SX                          TEI9SX
     I              AFJASX                          TEJASX
     I              AFOKDT                          TEOKDT
     I              AFOLDT                          TEOLDT
     I              AFUVST                          TEUVST
     I              AFUWST                          TEUWST
     I              AFUXST                          TEUXST
     I              AFAATM                          TEAATM
     I              AFAYNA                          TEAYNA
     I              AFA0NA                          TEA0NA
     I              AFAXDT                          TEAXDT
      *
     I@BGWKL0
      * Order Detail              Update index
      * Renamed input format fields
     I              OMAIC3                          TFAIC3
     I              OMC4NB                          TFC4NB
     I              OMDPNB                          TFDPNB
     I              OMUENB                          TFUENB
     I              OMHGCD                          TFHGCD
     I              OMAJCD                          TFAJCD
     I              OMBKC7                          TFBKC7
     I              OMCFC7                          TFCFC7
     I              OMGMST                          TFGMST
     I              OMGNST                          TFGNST
     I              OMMAVA                          TFMAVA
     I              OMKDVA                          TFKDVA
     I              OML8VA                          TFL8VA
     I              OML9VA                          TFL9VA
     I              OMGTST                          TFGTST
     I              OMGVST                          TFGVST
     I              OMGUST                          TFGUST
     I              OMQFST                          TFQFST
     I              OMAYVA                          TFAYVA
     I              OMEXDT                          TFEXDT
     I              OMLQCD                          TFLQCD
     I              OMRDCD                          TFRDCD
     I              OMQ7CD                          TFQ7CD
     I              OMBZPR                          TFBZPR
     I              OML6NB                          TFL6NB
     I              OMU1ST                          TFU1ST
     I              OMGIDT                          TFGIDT
     I              OMCRCD                          TFCRCD
     I              OMAGCD                          TFAGCD
     I              OMRZST                          TFRZST
     I              OMR0ST                          TFR0ST
     I              OMR1ST                          TFR1ST
     I              OMG7NA                          TFG7NA
     I              OMG8NA                          TFG8NA
     I              OMRPCD                          TFRPCD
     I              OMVEST                          TFVEST
     I              OMVGST                          TFVGST
     I              OMAVST                          TFAVST
     I              OMU0ST                          TFU0ST
     I              OMRFCD                          TFRFCD
     I              OMFZST                          TFFZST
     I              OMR1NB                          TFR1NB
     I              OMAVQT                          TFAVQT
     I              OMD0WG                          TFD0WG
     I              OMCCQT                          TFCCQT
     I              OMAUWG                          TFAUWG
     I              OMCBQT                          TFCBQT
     I              OMATWG                          TFATWG
     I              OMAQCS                          TFAQCS
     I              OMAGCS                          TFAGCS
     I              OMAKPR                          TFAKPR
     I              OMALPR                          TFALPR
     I              OMAUPR                          TFAUPR
     I              OMAVWG                          TFAVWG
     I              OMA4WG                          TFA4WG
     I              OMA5DT                          TFA5DT
     I              OMAODT                          TFAODT
     I              OMGNDT                          TFGNDT
     I              OMAMST                          TFAMST
     I              OMANST                          TFANST
     I              OMVAST                          TFVAST
     I              OMRGNB                          TFRGNB
     I              OMRHNB                          TFRHNB
     I              OMRINB                          TFRINB
     I              OMRBCD                          TFRBCD
     I              OMHICD                          TFHICD
     I              OMRNCD                          TFRNCD
     I              OMROCD                          TFROCD
     I              OMCXDT                          TFCXDT
     I              OMAJVN                          TFAJVN
     I              OMKXCD                          TFKXCD
     I              OMJPCD                          TFJPCD
     I              OMCQCD                          TFCQCD
     I              OMR4CD                          TFR4CD
     I              OMZ1ST                          TFZ1ST
     I              OMZ3ST                          TFZ3ST
     I              OMZ4ST                          TFZ4ST
     I              OMDUPR                          TFDUPR
     I              OMB6VL                          TFB6VL
     I              OMA1AA                          TFA1AA
     I              OMFZSX                          TFFZSX
     I              OMF0SX                          TFF0SX
     I              OMF1SX                          TFF1SX
     I              OMF2SX                          TFF2SX
     I              OMF3SX                          TFF3SX
     I              OMF4SX                          TFF4SX
     I              OMF5SX                          TFF5SX
     I              OMF6SX                          TFF6SX
     I              OMF7SX                          TFF7SX
     I              OMNTDT                          TFNTDT
     I              OMNUDT                          TFNUDT
     I              OMNVDT                          TFNVDT
     I              OMNWDT                          TFNWDT
     I              OMNXDT                          TFNXDT
     I              OMBUTM                          TFBUTM
     I              OMBVTM                          TFBVTM
     I              OMBWTM                          TFBWTM
     I              OMBXTM                          TFBXTM
     I              OMBYTM                          TFBYTM
     I              OMH5NX                          TFH5NX
     I              OMH6NX                          TFH6NX
     I              OMH7NX                          TFH7NX
     I              OMH8NX                          TFH8NX
     I              OMH9NX                          TFH9NX
     I              OMDVPR                          TFDVPR
     I              OMDWPR                          TFDWPR
     I              OMDXPR                          TFDXPR
     I              OMDYPR                          TFDYPR
     I              OMDZPR                          TFDZPR
     I              OMGSPR                          TFGSPR
     I              OMGTPR                          TFGTPR
     I              OMGUPR                          TFGUPR
     I              OMHOST                          TFHOST
     I              OMHPST                          TFHPST
     I              OMIOST                          TFIOST
     I              OMPEWG                          TFPEWG
     I              OMRINY                          TFRINY
     I              OMTIDT                          TFTIDT
     I              OMTJDT                          TFTJDT
     I              OMH2ST                          TFH2ST
     I              OMH0ST                          TFH0ST
     I              OMH1ST                          TFH1ST
     I              OMTKDT                          TFTKDT
     I              OMTLDT                          TFTLDT
     I              OMTMDT                          TFTMDT
     I              OMUVST                          TFUVST
     I              OMUWST                          TFUWST
     I              OMUXST                          TFUXST
     I              OMAATM                          TFAATM
     I              OMAYNA                          TFAYNA
     I              OMA0NA                          TFA0NA
     I              OMAXDT                          TFAXDT
      *
     I@E6CPZT
      * Order Detail Build Sched  Update index
      * Renamed input format fields
     I              E6AIC3                          TGAIC3
     I              E6C4NB                          TGC4NB
     I              E6DPNB                          TGDPNB
     I              E6UENB                          TGUENB
     I              E6AODT                          TGAODT
     I              E6DBST                          TGDBST
     I              E6GMST                          TGGMST
     I              E6GWST                          TGGWST
     I              E6JNCD                          TGJNCD
     I              E6HGCD                          TGHGCD
     I              E6NUDT                          TGNUDT
     I              E6AJCD                          TGAJCD
     I              E6RPCD                          TGRPCD
     I              E6AVQT                          TGAVQT
     I              E6D0WG                          TGD0WG
     I              E6CCQT                          TGCCQT
     I              E6AUWG                          TGAUWG
     I              E6JPCD                          TGJPCD
     I              E6NVDT                          TGNVDT
     I              E6BUTM                          TGBUTM
     I              E6WPST                          TGWPST
     I              E6RMNB                          TGRMNB
     I              E6U2ST                          TGU2ST
     I              E6BKC7                          TGBKC7
     I              E6XJST                          TGXJST
     I              E6XIST                          TGXIST
     I              E6PKST                          TGPKST
     I              E6BZNA                          TGBZNA
     I              E6CXDT                          TGCXDT
     I              E6BQTM                          TGBQTM
     I              E6DCST                          TGDCST
     I              E6DDST                          TGDDST
     I              E6OFNY                          TGOFNY
     I              E6EIDT                          TGEIDT
     I              E6RINY                          TGRINY
     I              E6TIDT                          TGTIDT
     I              E6TJDT                          TGTJDT
     I              E6TNDT                          TGTNDT
     I              E6TODT                          TGTODT
     I              E6IIST                          TGIIST
     I              E6IJST                          TGIJST
     I              E6R4CD                          TGR4CD
     I              E6BGCD                          TGBGCD
     I              E6X3CD                          TGX3CD
     I              E6A5DT                          TGA5DT
     I              E6VUDT                          TGVUDT
     I              E6VVDT                          TGVVDT
     I              E6VWDT                          TGVWDT
     I              E6BWSC                          TGBWSC
     I              E6BXSC                          TGBXSC
     I              E6BYSC                          TGBYSC
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
     IQPOB61    E DSPOB6CPL0
      * UPD : Order Detail Sched-Consmd Update index
      * Renamed input format fields
     I              B6AIC3                          WEAIC3
     I              B6C4NB                          WEC4NB
     I              B6DPNB                          WEDPNB
     I              B6UENB                          WEUENB
     I              B6JGDT                          WEJGDT
     I              B6OONY                          WEOONY
     I              B6AODT                          WEAODT
     I              B6AJCD                          WEAJCD
     I              B6NUDT                          WENUDT
     I              B6HGCD                          WEHGCD
     I              B6IGQT                          WEIGQT
     I              B6FLWG                          WEFLWG
     I              B6NSQT                          WENSQT
     I              B6JQWG                          WEJQWG
     I              B6NVDT                          WENVDT
     I              B6BUTM                          WEBUTM
     I              B6UVST                          WEUVST
     I              B6UWST                          WEUWST
     I              B6UXST                          WEUXST
     I              B6VSST                          WEVSST
     I              B6AATM                          WEAATM
     I              B6AYNA                          WEAYNA
     I              B6A0NA                          WEA0NA
     I              B6AXDT                          WEAXDT
      *
      * Message data for message Y2U0009.
     IMD0009      DS
     I                                        1  10 MDPGM
     I                                       11  20 MDACP
     I                                       21  30 MDFMT
     I                                       31  34 MDACT
     I                                       35  40 MDLBL
     IQPDKN1    E DSPDKNCPL0
      * UPD : Order Detail Schedule     Update index
      * Renamed input format fields
     I              KNAIC3                          WGAIC3
     I              KNC4NB                          WGC4NB
     I              KNDPNB                          WGDPNB
     I              KNUENB                          WGUENB
     I              KNJGDT                          WGJGDT
     I              KNAODT                          WGAODT
     I              KNAJCD                          WGAJCD
     I              KNAYAA                          WGAYAA
     I              KNHGCD                          WGHGCD
     I              KNIGQT                          WGIGQT
     I              KNFLWG                          WGFLWG
     I              KNIUQT                          WGIUQT
     I              KNF3WG                          WGF3WG
     I              KNIVQT                          WGIVQT
     I              KNF4WG                          WGF4WG
     I              KNP7ST                          WGP7ST
     I              KNP8ST                          WGP8ST
     I              KNQAST                          WGQAST
     I              KNUVST                          WGUVST
     I              KNUWST                          WGUWST
     I              KNUXST                          WGUXST
     I              KNVSST                          WGVSST
     I              KNAATM                          WGAATM
     I              KNAYNA                          WGAYNA
     I              KNA0NA                          WGA0NA
     I              KNAXDT                          WGAXDT
      *
     IYARDCS      DS                            100
     IQPOB51    E DSPOB5CPL0
      * UPD : Order Detail Sched-Inv    Update index
      * Renamed input format fields
     I              B5AIC3                          WKAIC3
     I              B5C4NB                          WKC4NB
     I              B5DPNB                          WKDPNB
     I              B5UENB                          WKUENB
     I              B5JGDT                          WKJGDT
     I              B5AODT                          WKAODT
     I              B5AJCD                          WKAJCD
     I              B5HGCD                          WKHGCD
     I              B5IUQT                          WKIUQT
     I              B5F3WG                          WKF3WG
     I              B5UVST                          WKUVST
     I              B5UWST                          WKUWST
     I              B5UXST                          WKUXST
     I              B5VSST                          WKVSST
     I              B5AATM                          WKAATM
     I              B5AYNA                          WKAYNA
     I              B5A0NA                          WKA0NA
     I              B5AXDT                          WKAXDT
      *
     IYBRDCS      DS                             69
     IYCRDCS      DS                            100
     IQPDI81    E DSPDI8CPL0
      * UPD : PS Prod Item Schedule     Update index
      * Renamed input format fields
     I              I8AIC3                          WTAIC3
     I              I8V5ST                          WTV5ST
     I              I8ELDT                          WTELDT
     I              I8HGCD                          WTHGCD
     I              I8AJCD                          WTAJCD
     I              I8GPDT                          WTGPDT
     I              I8WTSP                          WTWTSP
     I              I8QTSP                          WTQTSP
     I              I8DJPC                          WTDJPC
     I              I8F8WG                          WTF8WG
     I              I8WTIN                          WTWTIN
     I              I8D5NB                          WTD5NB
     I              I8DXWG                          WTDXWG
     I              I8B2NB                          WTB2NB
     I              I8WTCN                          WTWTCN
     I              I8PSCV                          WTPSCV
     I              I8SAWT                          WTSAWT
     I              I8B9NB                          WTB9NB
     I              I8D1WG                          WTD1WG
     I              I8CBNB                          WTCBNB
     I              I8EZWG                          WTEZWG
     I              I8CCNB                          WTCCNB
     I              I8E0WG                          WTE0WG
     I              I8D6NB                          WTD6NB
     I              I8OAWT                          WTOAWT
     I              I8CDNB                          WTCDNB
     I              I8UNW2                          WTUNW2
     I              I8CENB                          WTCENB
     I              I8F9WG                          WTF9WG
     I              I8BPNB                          WTBPNB
     I              I8GAWG                          WTGAWG
     I              I8BQNB                          WTBQNB
     I              I8GBWG                          WTGBWG
     I              I8BRNB                          WTBRNB
     I              I8GCWG                          WTGCWG
     I              I8BSNB                          WTBSNB
     I              I8GDWG                          WTGDWG
     I              I8BWNB                          WTBWNB
     I              I8GEWG                          WTGEWG
     I              I8PS6U                          WTPS6U
     I              I8WCST                          WTWCST
     I              I8WPST                          WTWPST
     I              I8B5ST                          WTB5ST
     I              I8TFST                          WTTFST
     I              I8TEST                          WTTEST
     I              I8THST                          WTTHST
     I              I8UDST                          WTUDST
     I              I8UFST                          WTUFST
     I              I8UGST                          WTUGST
     I              I8UHST                          WTUHST
     I              I8B6ST                          WTB6ST
     I              I8B7ST                          WTB7ST
     I              I8DVWG                          WTDVWG
     I              I8D7NB                          WTD7NB
     I              I8FCAD                          WTFCAD
     I              I8D9NB                          WTD9NB
     I              I8DWWG                          WTDWWG
     I              I8EANB                          WTEANB
     I              I8SHWT                          WTSHWT
     I              I8EBNB                          WTEBNB
     I              I8AVWT                          WTAVWT
     I              I8ECNB                          WTECNB
     I              I8WTON                          WTWTON
     I              I8EDNB                          WTEDNB
     I              I8FNWT                          WTFNWT
     I              I8EENB                          WTEENB
     I              I8QTAS                          WTQTAS
     I              I8EFNB                          WTEFNB
     I              I8WAIO                          WTWAIO
     I              I8EGNB                          WTEGNB
     I              I8R3CD                          WTR3CD
     I              I8RGNB                          WTRGNB
     I              I8RHNB                          WTRHNB
     I              I8RINB                          WTRINB
     I              I8XRCD                          WTXRCD
     I              I8UVST                          WTUVST
     I              I8UWST                          WTUWST
     I              I8UXST                          WTUXST
     I              I8VSST                          WTVSST
     I              I8AATM                          WTAATM
     I              I8AYNA                          WTAYNA
     I              I8A0NA                          WTA0NA
     I              I8AXDT                          WTAXDT
      *
     IYDRDCS      DS                            326
     IYERDCS      DS                            100
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXD2T        DS
      * Internal date
     I                                        1   70XDINT2
     I                                        1   30XDINY2
     I                                        4   50XDINM2
     I                                        6   70XDIND2
     IYFRDCS      DS                            100
     IYGRDCS      DS                            326
     IYHRDCS      DS                            326
     IYIRDCS      DS                             91
     IYJRDCS      DS                            326
     IQOPBG1    E DSOPBGWKL0
      * UPD : Order Detail              Update index
      * Renamed input format fields
     I              OMAIC3                          TFAIC3
     I              OMC4NB                          TFC4NB
     I              OMDPNB                          TFDPNB
     I              OMUENB                          TFUENB
     I              OMHGCD                          TFHGCD
     I              OMAJCD                          TFAJCD
     I              OMBKC7                          TFBKC7
     I              OMCFC7                          TFCFC7
     I              OMGMST                          TFGMST
     I              OMGNST                          TFGNST
     I              OMMAVA                          TFMAVA
     I              OMKDVA                          TFKDVA
     I              OML8VA                          TFL8VA
     I              OML9VA                          TFL9VA
     I              OMGTST                          TFGTST
     I              OMGVST                          TFGVST
     I              OMGUST                          TFGUST
     I              OMQFST                          TFQFST
     I              OMAYVA                          TFAYVA
     I              OMEXDT                          TFEXDT
     I              OMLQCD                          TFLQCD
     I              OMRDCD                          TFRDCD
     I              OMQ7CD                          TFQ7CD
     I              OMBZPR                          TFBZPR
     I              OML6NB                          TFL6NB
     I              OMU1ST                          TFU1ST
     I              OMGIDT                          TFGIDT
     I              OMCRCD                          TFCRCD
     I              OMAGCD                          TFAGCD
     I              OMRZST                          TFRZST
     I              OMR0ST                          TFR0ST
     I              OMR1ST                          TFR1ST
     I              OMG7NA                          TFG7NA
     I              OMG8NA                          TFG8NA
     I              OMRPCD                          TFRPCD
     I              OMVEST                          TFVEST
     I              OMVGST                          TFVGST
     I              OMAVST                          TFAVST
     I              OMU0ST                          TFU0ST
     I              OMRFCD                          TFRFCD
     I              OMFZST                          TFFZST
     I              OMR1NB                          TFR1NB
     I              OMAVQT                          TFAVQT
     I              OMD0WG                          TFD0WG
     I              OMCCQT                          TFCCQT
     I              OMAUWG                          TFAUWG
     I              OMCBQT                          TFCBQT
     I              OMATWG                          TFATWG
     I              OMAQCS                          TFAQCS
     I              OMAGCS                          TFAGCS
     I              OMAKPR                          TFAKPR
     I              OMALPR                          TFALPR
     I              OMAUPR                          TFAUPR
     I              OMAVWG                          TFAVWG
     I              OMA4WG                          TFA4WG
     I              OMA5DT                          TFA5DT
     I              OMAODT                          TFAODT
     I              OMGNDT                          TFGNDT
     I              OMAMST                          TFAMST
     I              OMANST                          TFANST
     I              OMVAST                          TFVAST
     I              OMRGNB                          TFRGNB
     I              OMRHNB                          TFRHNB
     I              OMRINB                          TFRINB
     I              OMRBCD                          TFRBCD
     I              OMHICD                          TFHICD
     I              OMRNCD                          TFRNCD
     I              OMROCD                          TFROCD
     I              OMCXDT                          TFCXDT
     I              OMAJVN                          TFAJVN
     I              OMKXCD                          TFKXCD
     I              OMJPCD                          TFJPCD
     I              OMCQCD                          TFCQCD
     I              OMR4CD                          TFR4CD
     I              OMZ1ST                          TFZ1ST
     I              OMZ3ST                          TFZ3ST
     I              OMZ4ST                          TFZ4ST
     I              OMDUPR                          TFDUPR
     I              OMB6VL                          TFB6VL
     I              OMA1AA                          TFA1AA
     I              OMFZSX                          TFFZSX
     I              OMF0SX                          TFF0SX
     I              OMF1SX                          TFF1SX
     I              OMF2SX                          TFF2SX
     I              OMF3SX                          TFF3SX
     I              OMF4SX                          TFF4SX
     I              OMF5SX                          TFF5SX
     I              OMF6SX                          TFF6SX
     I              OMF7SX                          TFF7SX
     I              OMNTDT                          TFNTDT
     I              OMNUDT                          TFNUDT
     I              OMNVDT                          TFNVDT
     I              OMNWDT                          TFNWDT
     I              OMNXDT                          TFNXDT
     I              OMBUTM                          TFBUTM
     I              OMBVTM                          TFBVTM
     I              OMBWTM                          TFBWTM
     I              OMBXTM                          TFBXTM
     I              OMBYTM                          TFBYTM
     I              OMH5NX                          TFH5NX
     I              OMH6NX                          TFH6NX
     I              OMH7NX                          TFH7NX
     I              OMH8NX                          TFH8NX
     I              OMH9NX                          TFH9NX
     I              OMDVPR                          TFDVPR
     I              OMDWPR                          TFDWPR
     I              OMDXPR                          TFDXPR
     I              OMDYPR                          TFDYPR
     I              OMDZPR                          TFDZPR
     I              OMGSPR                          TFGSPR
     I              OMGTPR                          TFGTPR
     I              OMGUPR                          TFGUPR
     I              OMHOST                          TFHOST
     I              OMHPST                          TFHPST
     I              OMIOST                          TFIOST
     I              OMPEWG                          TFPEWG
     I              OMRINY                          TFRINY
     I              OMTIDT                          TFTIDT
     I              OMTJDT                          TFTJDT
     I              OMH2ST                          TFH2ST
     I              OMH0ST                          TFH0ST
     I              OMH1ST                          TFH1ST
     I              OMTKDT                          TFTKDT
     I              OMTLDT                          TFTLDT
     I              OMTMDT                          TFTMDT
     I              OMUVST                          TFUVST
     I              OMUWST                          TFUWST
     I              OMUXST                          TFUXST
     I              OMAATM                          TFAATM
     I              OMAYNA                          TFAYNA
     I              OMA0NA                          TFA0NA
     I              OMAXDT                          TFAXDT
      *
     IYKRDCS      DS                            525
     IYLRDCS      DS                            525
     IQPME61    E DSPME6CPL0
      * UPD : Order Detail Build Sched  Update index
      * Renamed input format fields
     I              E6AIC3                          TGAIC3
     I              E6C4NB                          TGC4NB
     I              E6DPNB                          TGDPNB
     I              E6UENB                          TGUENB
     I              E6AODT                          TGAODT
     I              E6DBST                          TGDBST
     I              E6GMST                          TGGMST
     I              E6GWST                          TGGWST
     I              E6JNCD                          TGJNCD
     I              E6HGCD                          TGHGCD
     I              E6NUDT                          TGNUDT
     I              E6AJCD                          TGAJCD
     I              E6RPCD                          TGRPCD
     I              E6AVQT                          TGAVQT
     I              E6D0WG                          TGD0WG
     I              E6CCQT                          TGCCQT
     I              E6AUWG                          TGAUWG
     I              E6JPCD                          TGJPCD
     I              E6NVDT                          TGNVDT
     I              E6BUTM                          TGBUTM
     I              E6WPST                          TGWPST
     I              E6RMNB                          TGRMNB
     I              E6U2ST                          TGU2ST
     I              E6BKC7                          TGBKC7
     I              E6XJST                          TGXJST
     I              E6XIST                          TGXIST
     I              E6PKST                          TGPKST
     I              E6BZNA                          TGBZNA
     I              E6CXDT                          TGCXDT
     I              E6BQTM                          TGBQTM
     I              E6DCST                          TGDCST
     I              E6DDST                          TGDDST
     I              E6OFNY                          TGOFNY
     I              E6EIDT                          TGEIDT
     I              E6RINY                          TGRINY
     I              E6TIDT                          TGTIDT
     I              E6TJDT                          TGTJDT
     I              E6TNDT                          TGTNDT
     I              E6TODT                          TGTODT
     I              E6IIST                          TGIIST
     I              E6IJST                          TGIJST
     I              E6R4CD                          TGR4CD
     I              E6BGCD                          TGBGCD
     I              E6X3CD                          TGX3CD
     I              E6A5DT                          TGA5DT
     I              E6VUDT                          TGVUDT
     I              E6VVDT                          TGVVDT
     I              E6VWDT                          TGVWDT
     I              E6BWSC                          TGBWSC
     I              E6BXSC                          TGBXSC
     I              E6BYSC                          TGBYSC
      *
     IYMRDCS      DS                            153
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * N :  Company Number
     I                                    P   1   20P1AIC3
     IP2PARM      DS
      * N :  PPS Process STS
     I                                        1   1 P2MWSX
     IP3PARM      DS
      * N :  Production Date RGT
     I                                    P   1   40P3GWDT
     IP4PARM      DS
      * N :  Scheduled Ship Date USR
     I                                    P   1   40P4HODT
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * TST Order Det Bld Sch XF
      * **----------------------------------------------**
      * PKD --- I DID NOT MAKE ANY CHANGES TO THIS TEST PROGRAM FOR
      *         FOR THE CHANGE FROM USING SCHEDULED SHIP DATE FOR PA
      *         PROCESSING TO USING REQUESTED SHIP DATE.
      * **----------------------------------------------**
      * ********************
      * FP1054 New
      * Create Order Detail Build Sched file which will be read to alloca
      * production to open orders in the specified sequence.
      * ********************
      * Delete Order Detail Schedule for orders older than 3 days ago
      *   They wont be reallocated in the following routines
      *   To Remove the detail record, set report typ = "D"
      * Del Order Detail Build Sched for shipped orders
      * Build Order Detail Build Sched workfile : Start with 3 days prior
      *      Stop with Production Date RGT (Last date in pdi8cpp)
      * 1. Process Workfile in sequence per logical for:
      *      a. Partially Picked, thru Current Schedule Ship Date
     C                     Z-ADD##JDT     P4HODT           Scheduled Ship
      * BPS Proc ODBS f/Curr  RT - Order Detail Build Sched  * 
     C                     EXSR SARVGN
      * 2. Process Workfile in sequence per logical for:
      *      a. Partial Picked, Frozen then ship date then order
      *         then  Fresh/ship date/order #
      * 3. Process Order Detail Build with New Production Hold = 1
      * 3.b  Process Order Detail Build with Override Sched = Y
      *   to see if theres more inventory avail sans scheduling productio
      * 4. Process Order Detail Build and Post Orders
      *     a. Unlock Load if still Order Header Status = H
      *     B. Lock Load if Order Header Status n= H and it passes valida
      *     c. Do not lock unless shipping today              E00495
      * 5. Build Ps Prod Item Schedule "X" record which is a copy of the
      *  record right after the am build. it will be displayed on the
      *  Dsp Schedule Variance screen when they want to see what has been
      *  made so far by comparing the "X" rcds to the current "S" rcds.
      *----------------------------------------------------------------
      * Exit program
     C           AAEXIT    TAG
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
      /EJECT
     CSR         NARVGN    BEGSR
      *================================================================
      * Clc Date (descending) RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WUCNTU           Count USR
      * Declare restrictor key work fields
     C           *LIKE     DEFN TEAIC3    WQNA01           Company Number
      * Define keylist
     C           KPSNA     KLIST
     C                     KFLD           WQNA01           Company Number
     C                     KFLD           TEBCDT           Post to G/L Dat
      * Define keylist
     C           KRSNA     KLIST
     C                     KFLD           WQNA01           Company Number
      * Setup key
     C                     Z-ADDWL0324    WQNA01           Company Number
     C                     Z-ADDWL0325    TEBCDT           Post to G/L Dat
      * Establish starting position
     C           KPSNA     SETLL@AFREPU                    *
     C           KRSNA     READE@AFREPU                  90*
      * Data record not found
     C   90                MOVEL'USR0018' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: PAR.Post to G/L Date EQ DB1.Post to G/L Date
     C           WL0325    IFEQ TEBCDT                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
      * CASE: WRK.Count USR EQ PAR.*Duration (factor)
     C           WUCNTU    IFEQ WL0328                     *IF
     C                     Z-ADDTEBCDT    WL0326           *Date1 (ending)
     C                     GOTO NAEXIT                     *QUIT
     C                     END                             *FI
     C           KRSNA     READE@AFREPU                  90*
     C                     ENDDO
      *================================================================
     CSR         NAEXIT    ENDSR
      /EJECT
     CSR         NBRVGN    BEGSR
      *================================================================
      * Clc Date (ascending)  RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WUCNTU           Count USR
      * Declare restrictor key work fields
     C           *LIKE     DEFN TAAIC3    WQNB01           Company Number
      * Define keylist
     C           KPSNB     KLIST
     C                     KFLD           WQNB01           Company Number
     C                     KFLD           TABCDT           Post to G/L Dat
      * Define keylist
     C           KRSNB     KLIST
     C                     KFLD           WQNB01           Company Number
      * Setup key
     C                     Z-ADDWL0329    WQNB01           Company Number
     C                     Z-ADDWL0330    TABCDT           Post to G/L Dat
      * Establish starting position
     C           KPSNB     SETLL@AFREYY                    *
     C           KRSNB     READE@AFREYY                  90*
      * Data record not found
     C   90                MOVEL'USR0018' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: PAR.Post to G/L Date EQ DB1.Post to G/L Date
     C           WL0330    IFEQ TABCDT                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
      * CASE: WRK.Count USR EQ PAR.*Duration (factor)
     C           WUCNTU    IFEQ WL0333                     *IF
     C                     Z-ADDTABCDT    WL0331           *Date1 (ending)
     C                     GOTO NBEXIT                     *QUIT
     C                     END                             *FI
     C           KRSNB     READE@AFREYY                  90*
     C                     ENDDO
      *================================================================
     CSR         NBEXIT    ENDSR
      /EJECT
     CSR         NCCHRC    BEGSR
      *================================================================
      * Chg Qty/WgtSch & Shrt CH - Order Detail  * 
      *================================================================
      * This is a shared subroutine
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0766  70       Item Code
     C                     MOVEL*BLANK    WN0767  3        Warehouse Code
     C                     Z-ADD*ZERO     WN0768  70       Ship To Custome
     C                     Z-ADD*ZERO     WN0769  70       Order Group Cod
     C                     MOVEL*BLANK    WN0770  1        Detail Line Sta
     C                     MOVEL*BLANK    WN0771  1        Detail Line Sta
     C                     Z-ADD*ZERO     WN0772 112       Billing Detail
     C                     Z-ADD*ZERO     WN0773 112       Billing Detail
     C                     Z-ADD*ZERO     WN0774 112       Billing Detail
     C                     Z-ADD*ZERO     WN0775 112       Quantity to Sub
     C                     MOVEL*BLANK    WN0776  1        Comment Print A
     C                     MOVEL*BLANK    WN0777  1        Comment Print I
     C                     MOVEL*BLANK    WN0778  1        Comment Print P
     C                     MOVEL*BLANK    WN0779  1        Comment Print S
     C                     Z-ADD*ZERO     WN0780 112       Extended Amount
     C                     Z-ADD*ZERO     WN0781  70       Market Pricing
     C                     MOVEL*BLANK    WN0782  3        Commodity Marke
     C                     MOVEL*BLANK    WN0783  3        Date Method Cod
     C                     MOVEL*BLANK    WN0784  3        Price Method Co
     C                     Z-ADD*ZERO     WN0785 114       Price Overage O
     C                     Z-ADD*ZERO     WN0786  70       Contract Number
     C                     MOVEL*BLANK    WN0787  1        Price Status
     C                     Z-ADD*ZERO     WN0788  70       Pricing Date Us
     C                     MOVEL*BLANK    WN0789  2        U/M - Base Pric
     C                     MOVEL*BLANK    WN0790  2        U/M - Ordered
     C                     MOVEL*BLANK    WN0791  1        Work Confirm St
     C                     MOVEL*BLANK    WN0792  1        Work Over/Short
     C                     MOVEL*BLANK    WN0793  1        OD Production P
     C                     MOVEL*BLANK    WN0794 30        Order Desc. Lin
     C                     MOVEL*BLANK    WN0795 30        Order Desc. Lin
     C                     MOVEL*BLANK    WN0796  1        Age Code
     C                     MOVEL*BLANK    WN0797  1        Palletize
     C                     MOVEL*BLANK    WN0798  1        Slip Sheet
     C                     MOVEL*BLANK    WN0799  1        Catch Weight St
     C                     MOVEL*BLANK    WN0800  1        Price Audit
     C                     MOVEL*BLANK    WN0801  3        Price Audit Rea
     C                     MOVEL*BLANK    WN0802  1        Production Date
     C                     Z-ADD*ZERO     WN0803 112       Rated Freight
     C                     Z-ADD*ZERO     WN0804 112       Quantity Ordere
     C                     Z-ADD*ZERO     WN0805 112       Weight Ordered
     C                     Z-ADD*ZERO     WN0806 112       Quantity Shippe
     C                     Z-ADD*ZERO     WN0807 112       Weight Shipped
     C                     Z-ADD*ZERO     WN0808 114       Unit Cost Prici
     C                     Z-ADD*ZERO     WN0809 114       Unit Cost Per P
     C                     Z-ADD*ZERO     WN0810 114       Unit Price
     C                     Z-ADD*ZERO     WN0811 114       Unit Price - Cr
     C                     Z-ADD*ZERO     WN0812 114       Unit Price Orde
     C                     Z-ADD*ZERO     WN0813 112       Unit Weight Ord
     C                     Z-ADD*ZERO     WN0814 112       Tare Weight Tot
     C                     Z-ADD*ZERO     WN0815  70       Requested Ship
     C                     Z-ADD*ZERO     WN0816  70       Scheduled Ship
     C                     Z-ADD*ZERO     WN0817  70       Actual Shipped
     C                     MOVEL*BLANK    WN0818  1        Affect Inventor
     C                     MOVEL*BLANK    WN0819  1        Affect Sales Do
     C                     MOVEL*BLANK    WN0820  1        Affect Sales Pn
     C                     Z-ADD*ZERO     WN0821  30       Item Structure
     C                     Z-ADD*ZERO     WN0822  30       Item Structure
     C                     Z-ADD*ZERO     WN0823  30       Item Structure
     C                     MOVEL*BLANK    WN0824  2        Item Level
     C                     MOVEL*BLANK    WN0825  2        Quality Level
     C                     MOVEL*BLANK    WN0826  2        Pricing Product
     C                     MOVEL*BLANK    WN0827  2        Season Product
     C                     Z-ADD*ZERO     WN0828  70       Date of Origina
     C                     MOVEL*BLANK    WN0829 10        User Profile Na
     C                     MOVEL*BLANK    WN0830  6        Country Code
     C                     MOVEL*BLANK    WN0831  2        Event Code
     C                     MOVEL*BLANK    WN0832  3        Reason Code
     C                     MOVEL*BLANK    WN0833  3        Sales Route Cod
     C                     MOVEL*BLANK    WN0834  1        Modified Flag
     C                     MOVEL*BLANK    WN0835  1        Substituted Fla
     C                     MOVEL*BLANK    WN0836  1        OD Schedule Ove
     C                     Z-ADD*ZERO     WN0837 114       Invoice Unit Pr
     C                     Z-ADD*ZERO     WN0838 112       Invoice Extende
     C                     Z-ADD*ZERO     WN0839  30       Ham Group Numbe
     C                     MOVEL*BLANK    WN0840  1        OD Adj Type Ove
     C                     MOVEL*BLANK    WN0841  1        Affect Trade Fu
     C                     MOVEL*BLANK    WN0842  1        Affect Commissi
     C                     MOVEL*BLANK    WN0843  1        Affect Pricing
     C                     MOVEL*BLANK    WN0844  1        Released by Use
     C                     MOVEL*BLANK    WN0845  2        Ord TF Exempt C
     C                     MOVEL*BLANK    WN0846  2        OD Pallet Type
     C                     MOVEL*BLANK    WN0847  3        Production Ware
     C                     MOVEL*BLANK    WN0848  3        OD Price Type
     C                     Z-ADD*ZERO     WN0849  70       Warehouse Palle
     C                     Z-ADD*ZERO     WN0850  70       Consumed Item C
     C                     Z-ADD*ZERO     WN0851  70       Deadline Depart
     C                     Z-ADD*ZERO     WN0852  70       OD Price Type R
     C                     Z-ADD*ZERO     WN0853  70       OD Firm Date
     C                     Z-ADD*ZERO     WN0854  60       Deadline Depart
     C                     Z-ADD*ZERO     WN0855  60       Price Code
     C                     Z-ADD*ZERO     WN0856  60       Maximum Net Wei
     C                     Z-ADD*ZERO     WN0857  60       Substitution Li
     C                     Z-ADD*ZERO     WN0858  60       Max Qty to sche
     C                     Z-ADD*ZERO     WN0859 112       Warehouse Palle
     C                     Z-ADD*ZERO     WN0860 112       Warehouse Avg P
     C                     Z-ADD*ZERO     WN0861 112       OD Item Target
     C                     Z-ADD*ZERO     WN0862 112       OD Estimated Gr
     C                     Z-ADD*ZERO     WN0863 112       OD Maximum Unit
     C                     Z-ADD*ZERO     WN0864 114       Order Gate/Fina
     C                     Z-ADD*ZERO     WN0865 114       OD Ceiling Pric
     C                     Z-ADD*ZERO     WN0866 114       OD Gate/Final P
     C                     Z-ADD*ZERO     WN0867 114       OD Weighted Avg
     C                     Z-ADD*ZERO     WN0868 114       OD Original Ord
     C                     Z-ADD*ZERO     WN0869 114       OD Cancel Date
     C                     Z-ADD*ZERO     WN0870 114       OD Unused Prc 7
     C                     Z-ADD*ZERO     WN0871 114       OD Unused Prc 8
     C                     MOVEL*BLANK    WN0872  1        OD MPR Sent to
     C                     MOVEL*BLANK    WN0873  1        OD MPR Prc Read
     C                     MOVEL*BLANK    WN0874  1        OD UnUsed Price
     C                     Z-ADD*ZERO     WN0875 112       Weight Amount E
     C                     Z-ADD*ZERO     WN0876  40       Item Age Days
     C                     Z-ADD*ZERO     WN0877  70       Production Ovr
     C                     Z-ADD*ZERO     WN0878  70       Production Ovr
     C                     MOVEL*BLANK    WN0879  1        OD Spot Buy
     C                     MOVEL*BLANK    WN0880  2        OD Clm Full Ret
     C                     MOVEL*BLANK    WN0881  3        Order Line Erro
     C                     Z-ADD*ZERO     WN0882  70       OD Market Begin
     C                     Z-ADD*ZERO     WN0883  70       OD Market Endin
     C                     Z-ADD*ZERO     WN0884  70       OD Atch to Ord
     C                     MOVEL*BLANK    WN0885  1        EDI Status 1
     C                     MOVEL*BLANK    WN0886  1        EDI Status 2
     C                     MOVEL*BLANK    WN0887  1        EDI Status 3
     C                     Z-ADD*ZERO     WN0888  60       Job Time
     C                     MOVEL*BLANK    WN0889 10        User Id
     C                     MOVEL*BLANK    WN0890 10        Job Name
     C                     Z-ADD*ZERO     WN0891  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YKRDC   1
      *
      * Move key fields to @BGWKL0
     C                     Z-ADDWL0334    TFAIC3           Company Number
     C                     Z-ADDWL0335    TFC4NB           Order Number
     C                     Z-ADDWL0336    TFDPNB           Order Sequence
     C                     Z-ADDWL0337    TFUENB           Order Secondary
      *
     C           KLCHNC    KLIST
     C                     KFLD           TFAIC3           Company Number
     C                     KFLD           TFC4NB           Order Number
     C                     KFLD           TFDPNB           Order Sequence
     C                     KFLD           TFUENB           Order Secondary
     C           KLCHNC    CHAIN@BGWKL0              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'OPBGWKL0'MDACP
     C                     MOVEL'@BGWKL0' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL014.
     C                     MOVEL'LBL014'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO NCEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO NCEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QOPBG1    YKRDCS
      * Move non-key fields to @BGWKL0
     C                     Z-ADDWL0338    TFCCQT           Quantity Schedu
     C                     Z-ADDWL0339    TFAUWG           Weight Schedule
      *
      * Set PGM.*Record Data Changed flag
     C           QOPBG1    IFNE YKRDCS
     C           YKRDC     ANDNE'N'
     C                     MOVE 'Y'       YKRDC
     C                     ENDIF
      * USER: Processing before Data update
      * Set Record Stamp CHGOB IF
     C                     Z-ADD##JTM     TFAATM           Job Time
     C                     MOVEL##USR     TFAYNA           User Id
     C                     MOVEL##PGM     TFA0NA           Job Name
     C                     Z-ADD##JDT     TFAXDT           Job Date
      * Set PGM.*Record Data Changed flag
     C           QOPBG1    IFNE YKRDCS
     C           YKRDC     ANDNE'N'
     C                     MOVE 'Y'       YKRDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YKRDC     IFEQ 'Y'
     C                     UPDAT@BGWKL0                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKOPBGWKL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         NCEXIT    ENDSR
      /EJECT
     CSR         NDRVGN    BEGSR
      *================================================================
      * Dlt Ord Dtl Sched     RT - Order Detail Schedule  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WFAIC3    WQND01           Company Number
     C           *LIKE     DEFN WFC4NB    WQND02           Order Number
     C           *LIKE     DEFN WFDPNB    WQND03           Order Sequence
     C           *LIKE     DEFN WFUENB    WQND04           Order Secondary
      * Define keylist
     C           KRSND     KLIST
     C                     KFLD           WQND01           Company Number
     C                     KFLD           WQND02           Order Number
     C                     KFLD           WQND03           Order Sequence
     C                     KFLD           WQND04           Order Secondary
      * Setup key
     C                     Z-ADDWL0340    WQND01           Company Number
     C                     Z-ADDWL0341    WQND02           Order Number
     C                     Z-ADDWL0342    WQND03           Order Sequence
     C                     Z-ADDWL0343    WQND04           Order Secondary
      * Establish starting position
     C           KRSND     SETLL@KNCPHO                    *
     C           KRSND     READE@KNCPHO                  90*
      * Data record not found
     C   90                MOVEL'USR2238' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * DLT Ord Detail Sched   DL - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWFAIC3    WL0077           Company Number
     C                     Z-ADDWFC4NB    WL0078           Order Number
     C                     Z-ADDWFDPNB    WL0079           Order Sequence
     C                     Z-ADDWFUENB    WL0080           Order Secondary
     C                     Z-ADDWFJGDT    WL0081           OD Production D
     C                     EXSR SODLRC
     C           KRSND     READE@KNCPHO                  90*
     C                     ENDDO
      *================================================================
     CSR         NDEXIT    ENDSR
      /EJECT
     CSR         NERVGN    BEGSR
      *================================================================
      * Rtv User Rls Override RT - Order Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSNE     KLIST
     C                     KFLD           WHAIC3           Company Number
     C                     KFLD           WHC4NB           Order Number
     C                     KFLD           WHDPNB           Order Sequence
     C                     KFLD           WHUENB           Order Secondary
      * Setup key
     C                     Z-ADDWL0344    WHAIC3           Company Number
     C                     Z-ADDWL0345    WHC4NB           Order Number
     C                     Z-ADDWL0346    WHDPNB           Order Sequence
     C                     Z-ADDWL0347    WHUENB           Order Secondary
      * Establish starting position
     C           KRSNE     CHAIN@BGWKL1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1309' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0348           Released by Use
     C                     GOTO NEEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWHF3SX    WL0348           Released by Use
     C                     ENDIF
      *================================================================
     CSR         NEEXIT    ENDSR
      /EJECT
     CSR         NFCHRC    BEGSR
      *================================================================
      * Chg Qty/Wgt Scheduled CH - Order Detail  * 
      *================================================================
      * This is a shared subroutine
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0892  70       Item Code
     C                     MOVEL*BLANK    WN0893  3        Warehouse Code
     C                     Z-ADD*ZERO     WN0894  70       Ship To Custome
     C                     Z-ADD*ZERO     WN0895  70       Order Group Cod
     C                     MOVEL*BLANK    WN0896  1        Detail Line Sta
     C                     MOVEL*BLANK    WN0897  1        Detail Line Sta
     C                     Z-ADD*ZERO     WN0898 112       Billing Detail
     C                     Z-ADD*ZERO     WN0899 112       Billing Detail
     C                     Z-ADD*ZERO     WN0900 112       Billing Detail
     C                     Z-ADD*ZERO     WN0901 112       Quantity to Sub
     C                     MOVEL*BLANK    WN0902  1        Comment Print A
     C                     MOVEL*BLANK    WN0903  1        Comment Print I
     C                     MOVEL*BLANK    WN0904  1        Comment Print P
     C                     MOVEL*BLANK    WN0905  1        Comment Print S
     C                     Z-ADD*ZERO     WN0906 112       Extended Amount
     C                     Z-ADD*ZERO     WN0907  70       Market Pricing
     C                     MOVEL*BLANK    WN0908  3        Commodity Marke
     C                     MOVEL*BLANK    WN0909  3        Date Method Cod
     C                     MOVEL*BLANK    WN0910  3        Price Method Co
     C                     Z-ADD*ZERO     WN0911 114       Price Overage O
     C                     Z-ADD*ZERO     WN0912  70       Contract Number
     C                     MOVEL*BLANK    WN0913  1        Price Status
     C                     Z-ADD*ZERO     WN0914  70       Pricing Date Us
     C                     MOVEL*BLANK    WN0915  2        U/M - Base Pric
     C                     MOVEL*BLANK    WN0916  2        U/M - Ordered
     C                     MOVEL*BLANK    WN0917  1        Work Confirm St
     C                     MOVEL*BLANK    WN0918  1        Work Over/Short
     C                     MOVEL*BLANK    WN0919  1        OD Production P
     C                     MOVEL*BLANK    WN0920 30        Order Desc. Lin
     C                     MOVEL*BLANK    WN0921 30        Order Desc. Lin
     C                     MOVEL*BLANK    WN0922  1        Age Code
     C                     MOVEL*BLANK    WN0923  1        Palletize
     C                     MOVEL*BLANK    WN0924  1        Slip Sheet
     C                     MOVEL*BLANK    WN0925  1        Catch Weight St
     C                     MOVEL*BLANK    WN0926  1        Price Audit
     C                     MOVEL*BLANK    WN0927  3        Price Audit Rea
     C                     MOVEL*BLANK    WN0928  1        Production Date
     C                     Z-ADD*ZERO     WN0929 112       Rated Freight
     C                     Z-ADD*ZERO     WN0930 112       Quantity Ordere
     C                     Z-ADD*ZERO     WN0931 112       Weight Ordered
     C                     Z-ADD*ZERO     WN0932 112       Quantity Shippe
     C                     Z-ADD*ZERO     WN0933 112       Weight Shipped
     C                     Z-ADD*ZERO     WN0934 114       Unit Cost Prici
     C                     Z-ADD*ZERO     WN0935 114       Unit Cost Per P
     C                     Z-ADD*ZERO     WN0936 114       Unit Price
     C                     Z-ADD*ZERO     WN0937 114       Unit Price - Cr
     C                     Z-ADD*ZERO     WN0938 114       Unit Price Orde
     C                     Z-ADD*ZERO     WN0939 112       Unit Weight Ord
     C                     Z-ADD*ZERO     WN0940 112       Tare Weight Tot
     C                     Z-ADD*ZERO     WN0941  70       Requested Ship
     C                     Z-ADD*ZERO     WN0942  70       Scheduled Ship
     C                     Z-ADD*ZERO     WN0943  70       Actual Shipped
     C                     MOVEL*BLANK    WN0944  1        Affect Inventor
     C                     MOVEL*BLANK    WN0945  1        Affect Sales Do
     C                     MOVEL*BLANK    WN0946  1        Affect Sales Pn
     C                     Z-ADD*ZERO     WN0947  30       Item Structure
     C                     Z-ADD*ZERO     WN0948  30       Item Structure
     C                     Z-ADD*ZERO     WN0949  30       Item Structure
     C                     MOVEL*BLANK    WN0950  2        Item Level
     C                     MOVEL*BLANK    WN0951  2        Quality Level
     C                     MOVEL*BLANK    WN0952  2        Pricing Product
     C                     MOVEL*BLANK    WN0953  2        Season Product
     C                     Z-ADD*ZERO     WN0954  70       Date of Origina
     C                     MOVEL*BLANK    WN0955 10        User Profile Na
     C                     MOVEL*BLANK    WN0956  6        Country Code
     C                     MOVEL*BLANK    WN0957  2        Event Code
     C                     MOVEL*BLANK    WN0958  3        Reason Code
     C                     MOVEL*BLANK    WN0959  3        Sales Route Cod
     C                     MOVEL*BLANK    WN0960  1        Modified Flag
     C                     MOVEL*BLANK    WN0961  1        Substituted Fla
     C                     MOVEL*BLANK    WN0962  1        OD Schedule Ove
     C                     Z-ADD*ZERO     WN0963 114       Invoice Unit Pr
     C                     Z-ADD*ZERO     WN0964 112       Invoice Extende
     C                     Z-ADD*ZERO     WN0965  30       Ham Group Numbe
     C                     MOVEL*BLANK    WN0966  1        OD Adj Type Ove
     C                     MOVEL*BLANK    WN0967  1        Affect Trade Fu
     C                     MOVEL*BLANK    WN0968  1        Affect Commissi
     C                     MOVEL*BLANK    WN0969  1        Affect Pricing
     C                     MOVEL*BLANK    WN0970  1        Released by Use
     C                     MOVEL*BLANK    WN0971  2        Ord TF Exempt C
     C                     MOVEL*BLANK    WN0972  2        OD Pallet Type
     C                     MOVEL*BLANK    WN0973  3        Production Ware
     C                     MOVEL*BLANK    WN0974  3        OD Price Type
     C                     Z-ADD*ZERO     WN0975  70       Warehouse Palle
     C                     Z-ADD*ZERO     WN0976  70       Consumed Item C
     C                     Z-ADD*ZERO     WN0977  70       Deadline Depart
     C                     Z-ADD*ZERO     WN0978  70       OD Price Type R
     C                     Z-ADD*ZERO     WN0979  70       OD Firm Date
     C                     Z-ADD*ZERO     WN0980  60       Deadline Depart
     C                     Z-ADD*ZERO     WN0981  60       Price Code
     C                     Z-ADD*ZERO     WN0982  60       Maximum Net Wei
     C                     Z-ADD*ZERO     WN0983  60       Substitution Li
     C                     Z-ADD*ZERO     WN0984  60       Max Qty to sche
     C                     Z-ADD*ZERO     WN0985 112       Warehouse Palle
     C                     Z-ADD*ZERO     WN0986 112       Warehouse Avg P
     C                     Z-ADD*ZERO     WN0987 112       OD Item Target
     C                     Z-ADD*ZERO     WN0988 112       OD Estimated Gr
     C                     Z-ADD*ZERO     WN0989 112       OD Maximum Unit
     C                     Z-ADD*ZERO     WN0990 114       Order Gate/Fina
     C                     Z-ADD*ZERO     WN0991 114       OD Ceiling Pric
     C                     Z-ADD*ZERO     WN0992 114       OD Gate/Final P
     C                     Z-ADD*ZERO     WN0993 114       OD Weighted Avg
     C                     Z-ADD*ZERO     WN0994 114       OD Original Ord
     C                     Z-ADD*ZERO     WN0995 114       OD Cancel Date
     C                     Z-ADD*ZERO     WN0996 114       OD Unused Prc 7
     C                     Z-ADD*ZERO     WN0997 114       OD Unused Prc 8
     C                     MOVEL*BLANK    WN0998  1        OD MPR Sent to
     C                     MOVEL*BLANK    WN0999  1        OD MPR Prc Read
     C                     MOVEL*BLANK    WN1000  1        OD UnUsed Price
     C                     Z-ADD*ZERO     WN1001 112       Weight Amount E
     C                     Z-ADD*ZERO     WN1002  40       Item Age Days
     C                     Z-ADD*ZERO     WN1003  70       Production Ovr
     C                     Z-ADD*ZERO     WN1004  70       Production Ovr
     C                     MOVEL*BLANK    WN1005  1        OD Spot Buy
     C                     MOVEL*BLANK    WN1006  2        OD Clm Full Ret
     C                     MOVEL*BLANK    WN1007  3        Order Line Erro
     C                     Z-ADD*ZERO     WN1008  70       OD Market Begin
     C                     Z-ADD*ZERO     WN1009  70       OD Market Endin
     C                     Z-ADD*ZERO     WN1010  70       OD Atch to Ord
     C                     MOVEL*BLANK    WN1011  1        EDI Status 1
     C                     MOVEL*BLANK    WN1012  1        EDI Status 2
     C                     MOVEL*BLANK    WN1013  1        EDI Status 3
     C                     Z-ADD*ZERO     WN1014  60       Job Time
     C                     MOVEL*BLANK    WN1015 10        User Id
     C                     MOVEL*BLANK    WN1016 10        Job Name
     C                     Z-ADD*ZERO     WN1017  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YLRDC   1
      *
      * Move key fields to @BGWKL0
     C                     Z-ADDWL0349    TFAIC3           Company Number
     C                     Z-ADDWL0350    TFC4NB           Order Number
     C                     Z-ADDWL0351    TFDPNB           Order Sequence
     C                     Z-ADDWL0352    TFUENB           Order Secondary
      *
     C           KLCHNF    KLIST
     C                     KFLD           TFAIC3           Company Number
     C                     KFLD           TFC4NB           Order Number
     C                     KFLD           TFDPNB           Order Sequence
     C                     KFLD           TFUENB           Order Secondary
     C           KLCHNF    CHAIN@BGWKL0              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'OPBGWKL0'MDACP
     C                     MOVEL'@BGWKL0' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL015.
     C                     MOVEL'LBL015'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO NFEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO NFEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QOPBG1    YLRDCS
      * Move non-key fields to @BGWKL0
     C                     Z-ADDWL0353    TFCCQT           Quantity Schedu
     C                     Z-ADDWL0354    TFAUWG           Weight Schedule
      *
      * Set PGM.*Record Data Changed flag
     C           QOPBG1    IFNE YLRDCS
     C           YLRDC     ANDNE'N'
     C                     MOVE 'Y'       YLRDC
     C                     ENDIF
      * USER: Processing before Data update
      * Set Record Stamp CHGOB IF
     C                     Z-ADD##JTM     TFAATM           Job Time
     C                     MOVEL##USR     TFAYNA           User Id
     C                     MOVEL##PGM     TFA0NA           Job Name
     C                     Z-ADD##JDT     TFAXDT           Job Date
      * Set PGM.*Record Data Changed flag
     C           QOPBG1    IFNE YLRDCS
     C           YLRDC     ANDNE'N'
     C                     MOVE 'Y'       YLRDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YLRDC     IFEQ 'Y'
     C                     UPDAT@BGWKL0                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKOPBGWKL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         NFEXIT    ENDSR
      /EJECT
     CSR         NGCHRC    BEGSR
      *================================================================
      * Chg New Prod Hold Sts CH - Order Detail Build Sched  * 
      *================================================================
      * This is a shared subroutine
      *================================================================
      *
     C                     Z-ADD*ZERO     WN1018  70       Scheduled Ship
     C                     MOVEL*BLANK    WN1019  1        ODBS Partial Pi
     C                     MOVEL*BLANK    WN1020  1        Detail Line Sta
     C                     MOVEL*BLANK    WN1021  1        Header Status
     C                     MOVEL*BLANK    WN1022  2        Order Type - Sa
     C                     Z-ADD*ZERO     WN1023  70       Item Code
     C                     Z-ADD*ZERO     WN1024  70       Consumed Item C
     C                     MOVEL*BLANK    WN1025  3        Warehouse Code
     C                     MOVEL*BLANK    WN1026  1        Age Code
     C                     Z-ADD*ZERO     WN1027 112       Quantity Ordere
     C                     Z-ADD*ZERO     WN1028 112       Weight Ordered
     C                     Z-ADD*ZERO     WN1029 112       Quantity Schedu
     C                     Z-ADD*ZERO     WN1030 112       Weight Schedule
     C                     MOVEL*BLANK    WN1031  2        Event Code
     C                     Z-ADD*ZERO     WN1032  70       Deadline Depart
     C                     Z-ADD*ZERO     WN1033  60       Deadline Depart
     C                     MOVEL*BLANK    WN1034  2        Warehouse Type
     C                     Z-ADD*ZERO     WN1035  70       Load ID
     C                     MOVEL*BLANK    WN1036  1        Export Status
     C                     Z-ADD*ZERO     WN1037  70       Ship To Custome
     C                     MOVEL*BLANK    WN1038  1        Production Hold
     C                     MOVEL*BLANK    WN1039  1        Credit Hold
     C                     MOVEL*BLANK    WN1040  1        Load Status
     C                     MOVEL*BLANK    WN1041  3        Carrier Code
     C                     Z-ADD*ZERO     WN1042  70       Date of Origina
     C                     Z-ADD*ZERO     WN1043  60       Time of Origina
     C                     MOVEL*BLANK    WN1044  1        ODBS Sched Over
     C                     MOVEL*BLANK    WN1045  2        OD Adj Type
     C                     Z-ADD*ZERO     WN1046  70       Requested Deliv
     C                     Z-ADD*ZERO     WN1047  40       Item Age Days
     C                     Z-ADD*ZERO     WN1048  70       Production Ovr
     C                     Z-ADD*ZERO     WN1049  70       Production Ovr
     C                     Z-ADD*ZERO     WN1050  70       Production AgeD
     C                     Z-ADD*ZERO     WN1051  70       Production AgeD
     C                     MOVEL*BLANK    WN1052  1        ODBS Block Orde
     C                     MOVEL*BLANK    WN1053  2        ODBS Status 2 -
     C                     Z-ADD*ZERO     WN1054  70       Requested Ship
     C                     Z-ADD*ZERO     WN1055  70       ODBS Unused Dat
     C                     Z-ADD*ZERO     WN1056  70       ODBS Unused Dat
     C                     Z-ADD*ZERO     WN1057  70       ODBS Unused Dat
     C                     MOVEL*BLANK    WN1058  1        ODBS Unused Sta
     C                     MOVEL*BLANK    WN1059  1        ODBS Unused Sta
     C                     MOVEL*BLANK    WN1060  2        ODBS Unused Sta
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YMRDC   1
      *
      * Move key fields to @E6CPZT
     C                     Z-ADDWL0355    TGAIC3           Company Number
     C                     Z-ADDWL0356    TGC4NB           Order Number
     C                     Z-ADDWL0357    TGDPNB           Order Sequence
     C                     Z-ADDWL0358    TGUENB           Order Secondary
      *
     C           KLCHNG    KLIST
     C                     KFLD           TGAIC3           Company Number
     C                     KFLD           TGC4NB           Order Number
     C                     KFLD           TGDPNB           Order Sequence
     C                     KFLD           TGUENB           Order Secondary
     C           KLCHNG    CHAIN@E6CPZT              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PME6CPL0'MDACP
     C                     MOVEL'@E6CPZT' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL016.
     C                     MOVEL'LBL016'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO NGEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO NGEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPME61    YMRDCS
      * Move non-key fields to @E6CPZT
     C                     Z-ADDWL0359    TGOFNY           ODBS New Prod H
     C                     MOVELWL0360    TGR4CD    P      Sales Route Cod
     C                     MOVELWL0361    TGBGCD    P      State Code
     C                     MOVELWL0362    TGX3CD    P      Territory Code
      *
      * Set PGM.*Record Data Changed flag
     C           QPME61    IFNE YMRDCS
     C           YMRDC     ANDNE'N'
     C                     MOVE 'Y'       YMRDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YMRDC     IFEQ 'Y'
     C                     UPDAT@E6CPZT                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPME6CPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         NGEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * BPS Proc ODBS f/Curr  RT - Order Detail Build Sched  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * ***** PA PROCESS - USE REQUESTED SHIP DATE FOR Ship Date USR ****
      * FP1054 Read orders held over thru curr ship date only
      * C01360 RMC 2.18.2011 dont look at sched override sts here
     C                     Z-ADD*ZERO     YL0001           Company Number
     C                     Z-ADD*ZERO     YL0002           Order Number
     C                     MOVEL'Y'       YL0003           First Time Flag
      * Establish starting position
     C           *LOVAL    SETLL@E6CPAI                    *
     C                     READ @E6CPAI                  90*
      * Data record not found
     C   90                MOVEL'USR4107' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * First Time Processing
      * CASE: LCL.First Time Flag is Yes
     C           YL0003    IFEQ 'Y'                        *IF
     C                     MOVEL'SC'      YL0004           ATS Adj Type US
     C                     MOVEL'N'       YL0003           First Time Flag
     C                     END                             *FI
      * Process Orders Scheduled to Ship Today Only
      * CASE: DB1.Scheduled Ship Date GT PAR.Scheduled Ship Date USR
     C           WAAODT    IFGT P4HODT                     *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'Y'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     Z-ADD0767555   WUCAC7           Order Number Re
      * CASE: DB1.Order Number EQ WRK.Order Number Ref
     C           WAC4NB    IFEQ WUCAC7                     *IF
     C                     MOVEL'TF'      WUX8SX           Produced By Sts
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'SF'      WUX8SX           Produced By Sts
     C                     END                             *FI
      * CASE: PGM.*Record selected is *YES
     C           W0RSL     IFEQ 'Y'                        *IF
      * Process Record
      * CASE:
      *  - c1ORc2
      *   |- c1    : DB1.Order Type - Sales is Regular Order
      *   |- c2    : DB1.Order Type - Sales is Transfer Order
      *   '-
     C           WAJNCD    IFEQ 'OR'                       *IF
     C           WAJNCD    OREQ 'TR'                       *OR
      * CASE: DB1.Detail Line Status is Conf/Comp/Canc
     C           WAGMST    IFEQ 'X'                        *IF
     C           WAGMST    OREQ 'C'
     C           WAGMST    OREQ 'R'
     C                     ELSE
      * CASE: *OTHERWISE
      *
     C                     Z-ADD*ZERO     WN0001 155       System Value Nu
      *
      * UPS Rtv Company/Item  IF
      * Rtv Prd Sch Info   PS RT - Company Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWAAIC3    WL0001           Company Number
     C                     Z-ADDWAHGCD    WL0002           Item Code
     C                     EXSR SBRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    WUAVNA    P      Description Lin
     C                     MOVELWL0004    YL0005    P      UOM Primary
     C                     Z-ADDWL0005    YL0006           Unit Weight
     C                     Z-ADDWL0006    WURINB           Item Structure
     C                     Z-ADDWL0007    WURHNB           Item Structure
     C                     Z-ADDWL0008    WURGNB           Item Structure
     C                     MOVELWL0009    WUN0CD    P      Item Type Code
     C                     MOVELWL0010    WUQ1CD    P      Default Warehou
     C                     Z-ADDWL0011    YL0007           Fresh Chilling
     C                     MOVELWL0012    YL0008    P      Base_Conv_Loss
     C                     MOVELWL0013    WUXWST    P      Variety_Rendere
     C                     MOVELWL0014    WUVMST    P      Credit Item Sta
     C                     Z-ADDWL0015    WUSWGH           Std Weight_Head
     C                     Z-ADDWL0016    YL0009           Pieces Per Head
     C                     MOVELWL0017    WUR3CD    P      Department Code
     C                     MOVELWL0018    WUSDCD    P      Group for Packa
     C                     MOVELWL0019    WUX5ST    P      Seconds Item
     C                     MOVELWL0020    YL0010    P      Piece Count Ite
     C                     Z-ADDWL0021    YL0011           Pieces Per Bag
     C                     Z-ADDWL0022    YL0012           Bags Per Unit
     C                     MOVELWL0023    WUSUST    P      Export_Domestic
     C                     MOVELWL0024    WUSVST    P      Print On Schedu
     C                     MOVELWL0025    WUSYST    P      Fresh Inv Alloc
     C                     MOVELWL0026    WUSZST    P      Fresh Sched As
     C                     MOVELWL0027    WUS1ST    P      Frozen Inv Allo
     C                     MOVELWL0028    WUXRCD    P      Primal Group Co
      * BPS Rtv Whs Info      RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWAAJCD    WL0029    P      Warehouse Code
     C                     EXSR SCRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0030    YL0013    P      Warehouse Type
     C                     MOVELWL0031    WUXUST    P      Trans Contol AS
     C                     MOVELWL0032    WUT0ST    P      Warehouse Locat
     C                     MOVELWL0033    YL0014    P      Warehouse Std C
     C                     Z-ADDWL0034    YL0015           Warehouse Chill
      * Reallocate Item
      * CASE: DB1.Detail Line Status is Conf/Comp/Canc
     C           WAGMST    IFEQ 'X'                        *IF
     C           WAGMST    OREQ 'C'
     C           WAGMST    OREQ 'R'
     C                     ELSE
      * CASE: *OTHERWISE
      * Dont look at this for curr day orders -- we want it to take inv i
     C                     MOVELWUUAT1    YL0016           ODBS Sched Over
      * CASE: LCL.ODBS Sched Override Sts is eq Yes
     C           YL0016    IFEQ 'Y'                        *IF
      * If schedule was overriden in WW Ord Prod Sch POQJDFR, call this
      *  to make the changes stick.
      * Del OrdDtl Sch-Consmd RT - Order Detail Sched-Consmd  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWAAIC3    WL0035           Company Number
     C                     Z-ADDWAC4NB    WL0036           Order Number
     C                     Z-ADDWADPNB    WL0037           Order Sequence
     C                     Z-ADDWAUENB    WL0038           Order Secondary
     C                     EXSR SDRVGN
      * Rtv & Chg ALC sts    RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWAAIC3    WL0045           Company Number
     C                     Z-ADDWAC4NB    WL0046           Order Number
     C                     Z-ADDWADPNB    WL0047           Order Sequence
     C                     Z-ADDWAUENB    WL0048           Order Secondary
     C                     EXSR SFRVGN
     C                     Z-ADD*ZERO     YL0017           Quantity Schedu
     C                     Z-ADD*ZERO     YL0018           Weight Schedule
      * UPS Re-Alc Inv/Prd OV RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWAAIC3    WL0055           Company Number
     C                     Z-ADDWAC4NB    WL0056           Order Number
     C                     Z-ADDWADPNB    WL0057           Order Sequence
     C                     Z-ADDWAUENB    WL0058           Order Secondary
     C                     Z-ADDYL0017    WL0059           Quantity Schedu
     C                     Z-ADDYL0018    WL0060           Weight Schedule
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0059    YL0017           Quantity Schedu
     C                     Z-ADDWL0060    YL0018           Weight Schedule
     C                     ELSE
      * CASE: *OTHERWISE
      * Dlt Ord Dtl Sched     RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWAAIC3    WL0340           Company Number
     C                     Z-ADDWAC4NB    WL0341           Order Number
     C                     Z-ADDWADPNB    WL0342           Order Sequence
     C                     Z-ADDWAUENB    WL0343           Order Secondary
     C                     EXSR NDRVGN
      * Del OrdDtl Sch-Consmd RT - Order Detail Sched-Consmd  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWAAIC3    WL0035           Company Number
     C                     Z-ADDWAC4NB    WL0036           Order Number
     C                     Z-ADDWADPNB    WL0037           Order Sequence
     C                     Z-ADDWAUENB    WL0038           Order Secondary
     C                     EXSR SDRVGN
     C                     Z-ADD*ZERO     YL0017           Quantity Schedu
     C                     Z-ADD*ZERO     YL0018           Weight Schedule
      * Rtv User Rls Override RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWAAIC3    WL0344           Company Number
     C                     Z-ADDWAC4NB    WL0345           Order Number
     C                     Z-ADDWADPNB    WL0346           Order Sequence
     C                     Z-ADDWAUENB    WL0347           Order Secondary
     C                     EXSR NERVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0348    YL0075    P      Released by Use
      * LCL.Quantity/Weight Ordered
      * CASE: LCL.Released by User Sts Y/N is yes
     C           YL0075    IFEQ 'Y'                        *IF
     C                     Z-ADDWACCQT    YL0076           Quantity Ordere
     C                     Z-ADDWAAUWG    YL0077           Weight Ordered
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWAAVQT    YL0076           Quantity Ordere
     C                     Z-ADDWAD0WG    YL0077           Weight Ordered
     C                     END                             *FI
      * FP1309 PASS NEW FIELDS
      * UPD Avail-To-Sell  ORD XF - /UT Inv. Interface Funcs  * 
     C                     CALL 'PDQNXFR'              90  UPD Avail-To-Se
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WAAIC3    WQ0117  30       Company Number
     C                     PARM WAC4NB    WQ0118  70       Order Number
     C                     PARM WADPNB    WQ0119  30       Order Sequence
     C                     PARM WAUENB    WQ0120  30       Order Secondary
     C                     PARM WAHGCD    WQ0121  70       Item Code
     C                     PARM WAAJCD    WQ0122  3        Warehouse Code
     C                     PARM WAA5DT    WQ0123  70       Ship Date USR
     C                     PARM YL0076    WQ0124 112       Quantity Ordere
     C                     PARM YL0077    WQ0125 112       Weight Ordered
     C           YL0017    PARM YL0017    WQ0126 112       Quantity Schedu
     C           YL0018    PARM YL0018    WQ0127 112       Weight Schedule
     C                     PARM WADDST    WQ0128  2        ATS Adj Type US
     C                     PARM 'REALC'   WQ0129 10        PSAA Program Na
     C                     PARM WARINY    WQ0130  40       Item Age Days
     C                     PARM WATIDT    WQ0131  70       Production Ovr
     C                     PARM WATJDT    WQ0132  70       Production Ovr
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDQNXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
      * Short  -- make it ship off cut and retry   RMC-change 8.12.19
      * CASE:
      *  - c1OR(c2ANDc3)
      *   |- c1    : LCL.Quantity Scheduled LT DB1.Quantity Ordered
      *   |- c2    : LCL.Quantity Scheduled is Equal to zero
      *   |- c3    : DB1.Quantity Scheduled is Equal to zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0017    IFLT WAAVQT                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C           Y0CX01    IFNE '1'                        *IF
     C           YL0017    IFEQ 0                          *IF
     C           WACCQT    IFEQ 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * WHD 48909 RMC Chg compare to lcl.sched < db1.ordered
      * Added the compare to both being 0. it wouldnt work if they did
      * CASE: DB1.Warehouse Type is Fresh
     C           WAWPST    IFEQ 'FR'                       *IF
      * Ship Off Cut  - Fresh only can be ship off cut
      * CASE: DB1.Scheduled Ship Date LE JOB.*Job date
     C           WAAODT    IFLE ##JDT                      *IF
      * RMC 5/13/19 pass qty ordered instead of db1.scheduled which is -0
      * UPD Avail-To-Sell  ORD XF - /UT Inv. Interface Funcs  * 
     C                     CALL 'PDQNXFR'              90  UPD Avail-To-Se
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WAAIC3    WQ0133  30       Company Number
     C                     PARM WAC4NB    WQ0134  70       Order Number
     C                     PARM WADPNB    WQ0135  30       Order Sequence
     C                     PARM WAUENB    WQ0136  30       Order Secondary
     C                     PARM WAHGCD    WQ0137  70       Item Code
     C                     PARM WAAJCD    WQ0138  3        Warehouse Code
     C                     PARM WAA5DT    WQ0139  70       Ship Date USR
     C                     PARM WAAVQT    WQ0140 112       Quantity Ordere
     C                     PARM WAD0WG    WQ0141 112       Weight Ordered
     C           YL0017    PARM YL0017    WQ0142 112       Quantity Schedu
     C           YL0018    PARM YL0018    WQ0143 112       Weight Schedule
     C                     PARM 'SC'      WQ0144  2        ATS Adj Type US
     C                     PARM @CN,003   WQ0145 10        PSAA Program Na
     C                     PARM WARINY    WQ0146  40       Item Age Days
     C                     PARM WATIDT    WQ0147  70       Production Ovr
     C                     PARM WATJDT    WQ0148  70       Production Ovr
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDQNXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Chg Qty/Wgt Scheduled CH - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWAAIC3    WL0349           Company Number
     C                     Z-ADDWAC4NB    WL0350           Order Number
     C                     Z-ADDWADPNB    WL0351           Order Sequence
     C                     Z-ADDWAUENB    WL0352           Order Secondary
     C                     Z-ADDYL0017    WL0353           Quantity Schedu
     C                     Z-ADDYL0018    WL0354           Weight Schedule
     C                     EXSR NFCHRC
      * UPD: New Production Hold Sts
      * CASE: DB1.Quantity Ordered NE LCL.Quantity Scheduled
     C           WAAVQT    IFNE YL0017                     *IF
      * Rtv User Rls Override RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWAAIC3    WL0344           Company Number
     C                     Z-ADDWAC4NB    WL0345           Order Number
     C                     Z-ADDWADPNB    WL0346           Order Sequence
     C                     Z-ADDWAUENB    WL0347           Order Secondary
     C                     EXSR NERVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0348    YL0075    P      Released by Use
      * CASE: LCL.Released by User Sts Y/N is yes
     C           YL0075    IFEQ 'Y'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Chg New Prod Hold Sts CH - Order Detail Build Sched  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWAAIC3    WL0355           Company Number
     C                     Z-ADDWAC4NB    WL0356           Order Number
     C                     Z-ADDWADPNB    WL0357           Order Sequence
     C                     Z-ADDWAUENB    WL0358           Order Secondary
     C                     Z-ADD1         WL0359           ODBS New Prod H
     C                     MOVELWAR4CD    WL0360    P      Sales Route Cod
     C                     MOVELWABGCD    WL0361    P      State Code
     C                     MOVELWAX3CD    WL0362    P      Territory Code
     C                     EXSR NGCHRC
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     READ @E6CPAI                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * Rtv Prd Sch Info   PS RT - Company Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WBAIC3           Company Number
     C                     KFLD           WBHGCD           Item Code
      * Setup key
     C                     Z-ADDWL0001    WBAIC3           Company Number
     C                     Z-ADDWL0002    WBHGCD           Item Code
      * Establish starting position
     C           KRSSB     CHAIN@BZREJU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0003           Description Lin
     C                     MOVEL*BLANK    WL0004           UOM Primary
     C                     Z-ADD*ZERO     WL0005           Unit Weight
     C                     Z-ADD*ZERO     WL0006           Item Structure
     C                     Z-ADD*ZERO     WL0007           Item Structure
     C                     Z-ADD*ZERO     WL0008           Item Structure
     C                     MOVEL*BLANK    WL0009           Item Type Code
     C                     MOVEL*BLANK    WL0010           Default Warehou
     C                     Z-ADD*ZERO     WL0011           Fresh Chilling
     C                     MOVEL*BLANK    WL0012           Base_Conv_Loss
     C                     MOVEL*BLANK    WL0013           Variety_Rendere
     C                     MOVEL*BLANK    WL0014           Credit Item Sta
     C                     Z-ADD*ZERO     WL0015           Std Weight_Head
     C                     Z-ADD*ZERO     WL0016           Pieces Per Head
     C                     MOVEL*BLANK    WL0017           Department Code
     C                     MOVEL*BLANK    WL0018           Group for Packa
     C                     MOVEL*BLANK    WL0019           Seconds Item
     C                     MOVEL*BLANK    WL0020           Piece Count Ite
     C                     Z-ADD*ZERO     WL0021           Pieces Per Bag
     C                     Z-ADD*ZERO     WL0022           Bags Per Unit
     C                     MOVEL*BLANK    WL0023           Export_Domestic
     C                     MOVEL*BLANK    WL0024           Print On Schedu
     C                     MOVEL*BLANK    WL0025           Fresh Inv Alloc
     C                     MOVEL*BLANK    WL0026           Fresh Sched As
     C                     MOVEL*BLANK    WL0027           Frozen Inv Allo
     C                     MOVEL*BLANK    WL0028           Primal Group Co
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWBAVNA    WL0003           Description Lin
     C                     MOVELWBADCD    WL0004           UOM Primary
     C                     Z-ADDWBAIWG    WL0005           Unit Weight
     C                     Z-ADDWBRINB    WL0006           Item Structure
     C                     Z-ADDWBRHNB    WL0007           Item Structure
     C                     Z-ADDWBRGNB    WL0008           Item Structure
     C                     MOVELWBN0CD    WL0009           Item Type Code
     C                     MOVELWBQ1CD    WL0010           Default Warehou
     C                     Z-ADDWBCHTM    WL0011           Fresh Chilling
     C                     MOVELWBQZCD    WL0012           Base_Conv_Loss
     C                     MOVELWBXWST    WL0013           Variety_Rendere
     C                     MOVELWBVMST    WL0014           Credit Item Sta
     C                     Z-ADDWBSWGH    WL0015           Std Weight_Head
     C                     Z-ADDWBPPHE    WL0016           Pieces Per Head
     C                     MOVELWBR3CD    WL0017           Department Code
     C                     MOVELWBSDCD    WL0018           Group for Packa
     C                     MOVELWBX5ST    WL0019           Seconds Item
     C                     MOVELWBPCCT    WL0020           Piece Count Ite
     C                     Z-ADDWBBDNB    WL0021           Pieces Per Bag
     C                     Z-ADDWBBJNB    WL0022           Bags Per Unit
     C                     MOVELWBSUST    WL0023           Export_Domestic
     C                     MOVELWBSVST    WL0024           Print On Schedu
     C                     MOVELWBSYST    WL0025           Fresh Inv Alloc
     C                     MOVELWBSZST    WL0026           Fresh Sched As
     C                     MOVELWBS1ST    WL0027           Frozen Inv Allo
     C                     MOVELWBXRCD    WL0028           Primal Group Co
     C                     ENDIF
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * BPS Rtv Whs Info      RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           WCAJCD           Warehouse Code
      * Setup key
     C                     MOVELWL0029    WCAJCD           Warehouse Code
      * Establish starting position
     C           KRSSC     CHAIN@ADREAO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0030           Warehouse Type
     C                     MOVEL*BLANK    WL0031           Trans Contol AS
     C                     MOVEL*BLANK    WL0032           Warehouse Locat
     C                     MOVEL*BLANK    WL0033           Warehouse Std C
     C                     Z-ADD*ZERO     WL0034           Warehouse Chill
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWCWPST    WL0030           Warehouse Type
     C                     MOVELWCXUST    WL0031           Trans Contol AS
     C                     MOVELWCT0ST    WL0032           Warehouse Locat
     C                     MOVELWCT1ST    WL0033           Warehouse Std C
     C                     Z-ADDWCDBNB    WL0034           Warehouse Chill
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * Del OrdDtl Sch-Consmd RT - Order Detail Sched-Consmd  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WDAIC3    WQSD01           Company Number
     C           *LIKE     DEFN WDC4NB    WQSD02           Order Number
     C           *LIKE     DEFN WDDPNB    WQSD03           Order Sequence
     C           *LIKE     DEFN WDUENB    WQSD04           Order Secondary
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           WQSD01           Company Number
     C                     KFLD           WQSD02           Order Number
     C                     KFLD           WQSD03           Order Sequence
     C                     KFLD           WQSD04           Order Secondary
      * Setup key
     C                     Z-ADDWL0035    WQSD01           Company Number
     C                     Z-ADDWL0036    WQSD02           Order Number
     C                     Z-ADDWL0037    WQSD03           Order Sequence
     C                     Z-ADDWL0038    WQSD04           Order Secondary
      * Establish starting position
     C           KRSSD     SETLL@B6CPNB                    *
     C           KRSSD     READE@B6CPNB                  90*
      * Data record not found
     C   90                MOVEL'USR3152' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * Del OrdDtl Sch-Consmd DL - Order Detail Sched-Consmd  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWDAIC3    WL0039           Company Number
     C                     Z-ADDWDC4NB    WL0040           Order Number
     C                     Z-ADDWDDPNB    WL0041           Order Sequence
     C                     Z-ADDWDUENB    WL0042           Order Secondary
     C                     Z-ADDWDJGDT    WL0043           OD Production D
     C                     Z-ADDWDOONY    WL0044           ODS Sequence Nu
     C                     EXSR SEDLRC
     C           KRSSD     READE@B6CPNB                  90*
     C                     ENDDO
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SEDLRC    BEGSR
      *================================================================
      * Del OrdDtl Sch-Consmd DL - Order Detail Sched-Consmd  * 
      *================================================================
      * This is a shared subroutine
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move key fields to @B6CPNA
     C                     Z-ADDWL0039    WEAIC3           Company Number
     C                     Z-ADDWL0040    WEC4NB           Order Number
     C                     Z-ADDWL0041    WEDPNB           Order Sequence
     C                     Z-ADDWL0042    WEUENB           Order Secondary
     C                     Z-ADDWL0043    WEJGDT           OD Production D
     C                     Z-ADDWL0044    WEOONY           ODS Sequence Nu
      *
     C           KLDLSE    KLIST
     C                     KFLD           WEAIC3           Company Number
     C                     KFLD           WEC4NB           Order Number
     C                     KFLD           WEDPNB           Order Sequence
     C                     KFLD           WEUENB           Order Secondary
     C                     KFLD           WEJGDT           OD Production D
     C                     KFLD           WEOONY           ODS Sequence Nu
     C           KLDLSE    CHAIN@B6CPNA              9091  *
     C           *IN90     IFEQ '1'
      * Record already deleted
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'POB6CPL0'MDACP
     C                     MOVEL'@B6CPNA' MDFMT
     C                     MOVEL'*DLT'    MDACT
      * Record not found label: LBL001.
     C                     MOVEL'LBL001'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SEEXIT
     C                     ENDIF
      *
      *................................................................
     C                     DELET@B6CPNA                91  *
     C           *IN91     IFEQ '1'
      * Delete error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * Rtv & Chg ALC sts    RT - Order Detail Schedule  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WFAIC3    WQSF01           Company Number
     C           *LIKE     DEFN WFC4NB    WQSF02           Order Number
     C           *LIKE     DEFN WFDPNB    WQSF03           Order Sequence
     C           *LIKE     DEFN WFUENB    WQSF04           Order Secondary
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           WQSF01           Company Number
     C                     KFLD           WQSF02           Order Number
     C                     KFLD           WQSF03           Order Sequence
     C                     KFLD           WQSF04           Order Secondary
      * Setup key
     C                     Z-ADDWL0045    WQSF01           Company Number
     C                     Z-ADDWL0046    WQSF02           Order Number
     C                     Z-ADDWL0047    WQSF03           Order Sequence
     C                     Z-ADDWL0048    WQSF04           Order Secondary
      * Establish starting position
     C           KRSSF     SETLL@KNCPHO                    *
     C           KRSSF     READE@KNCPHO                  90*
      * Data record not found
     C   90                MOVEL'USR2238' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * Chg Reallocate Sts    CH - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWFAIC3    WL0049           Company Number
     C                     Z-ADDWFC4NB    WL0050           Order Number
     C                     Z-ADDWFDPNB    WL0051           Order Sequence
     C                     Z-ADDWFUENB    WL0052           Order Secondary
     C                     Z-ADDWFJGDT    WL0053           OD Production D
     C                     MOVEL'Y'       WL0054    P      OD Reallocate S
     C                     EXSR SGCHRC
     C           KRSSF     READE@KNCPHO                  90*
     C                     ENDDO
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGCHRC    BEGSR
      *================================================================
      * Chg Reallocate Sts    CH - Order Detail Schedule  * 
      *================================================================
      * This is a shared subroutine
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0002  70       Scheduled Ship
     C                     MOVEL*BLANK    WN0003  3        Warehouse Code
     C                     MOVEL*BLANK    WN0004  3        Order From Ware
     C                     Z-ADD*ZERO     WN0005  70       Item Code
     C                     Z-ADD*ZERO     WN0006 112       OD Qty/Cnsmd Pi
     C                     Z-ADD*ZERO     WN0007 112       OD Weight Sched
     C                     Z-ADD*ZERO     WN0008 112       OD Quantity Inv
     C                     Z-ADD*ZERO     WN0009 112       OD Weight Inv S
     C                     Z-ADD*ZERO     WN0010 112       OD Quantity Unu
     C                     Z-ADD*ZERO     WN0011 112       OD Unused weigh
     C                     MOVEL*BLANK    WN0012  1        OD Added to Sch
     C                     MOVEL*BLANK    WN0013  2        OD Status Unuse
     C                     MOVEL*BLANK    WN0014  1        EDI Status 1
     C                     MOVEL*BLANK    WN0015  1        EDI Status 2
     C                     MOVEL*BLANK    WN0016  1        EDI Status 3
     C                     MOVEL*BLANK    WN0017  1        Record Status
     C                     Z-ADD*ZERO     WN0018  60       Job Time
     C                     MOVEL*BLANK    WN0019 10        User Id
     C                     MOVEL*BLANK    WN0020 10        Job Name
     C                     Z-ADD*ZERO     WN0021  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YARDC   1
      *
      * Move key fields to @KNCPHN
     C                     Z-ADDWL0049    WGAIC3           Company Number
     C                     Z-ADDWL0050    WGC4NB           Order Number
     C                     Z-ADDWL0051    WGDPNB           Order Sequence
     C                     Z-ADDWL0052    WGUENB           Order Secondary
     C                     Z-ADDWL0053    WGJGDT           OD Production D
      *
     C           KLCHSG    KLIST
     C                     KFLD           WGAIC3           Company Number
     C                     KFLD           WGC4NB           Order Number
     C                     KFLD           WGDPNB           Order Sequence
     C                     KFLD           WGUENB           Order Secondary
     C                     KFLD           WGJGDT           OD Production D
     C           KLCHSG    CHAIN@KNCPHN              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PDKNCPL0'MDACP
     C                     MOVEL'@KNCPHN' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL002.
     C                     MOVEL'LBL002'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SGEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SGEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPDKN1    YARDCS
      * Move non-key fields to @KNCPHN
     C                     MOVELWL0054    WGP8ST    P      OD Reallocate S
      *
      * Set PGM.*Record Data Changed flag
     C           QPDKN1    IFNE YARDCS
     C           YARDC     ANDNE'N'
     C                     MOVE 'Y'       YARDC
     C                     ENDIF
      * USER: Processing before Data update
      * Set Record Stamp CHGOB IF
     C                     Z-ADD##JTM     WGAATM           Job Time
     C                     MOVEL##USR     WGAYNA           User Id
     C                     MOVEL##PGM     WGA0NA           Job Name
     C                     Z-ADD##JDT     WGAXDT           Job Date
      * Set PGM.*Record Data Changed flag
     C           QPDKN1    IFNE YARDCS
     C           YARDC     ANDNE'N'
     C                     MOVE 'Y'       YARDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YARDC     IFEQ 'Y'
     C                     UPDAT@KNCPHN                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPDKNCPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHRVGN    BEGSR
      *================================================================
      * UPS Re-Alc Inv/Prd OV RT - Order Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * R5947 5/13/16 RMC Dont alloc inventory for Block orders- added bl
      * E2073 8/01/12 RMC For inventory calcs, use Whs Inventory Chill fi
      * Define keylist
     C           KRSSH     KLIST
     C                     KFLD           WHAIC3           Company Number
     C                     KFLD           WHC4NB           Order Number
     C                     KFLD           WHDPNB           Order Sequence
     C                     KFLD           WHUENB           Order Secondary
      * Setup key
     C                     Z-ADDWL0055    WHAIC3           Company Number
     C                     Z-ADDWL0056    WHC4NB           Order Number
     C                     Z-ADDWL0057    WHDPNB           Order Sequence
     C                     Z-ADDWL0058    WHUENB           Order Secondary
      * Establish starting position
     C           KRSSH     CHAIN@BGWKL1              90    *
      * Data record not found
     C   90                MOVEL'USR1309' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * CASE: DB1.Detail Line Status is Conf/Comp/Canc
     C           WHGMST    IFEQ 'X'                        *IF
     C           WHGMST    OREQ 'C'
     C           WHGMST    OREQ 'R'
     C                     ELSE
      * CASE: *OTHERWISE
      *
     C                     Z-ADD*ZERO     WN0022 155       System Value Nu
      *
      * UPS Rtv Company/Item  IF
      * Rtv Prd Sch Info   PS RT - Company Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWHAIC3    WL0001           Company Number
     C                     Z-ADDWHHGCD    WL0002           Item Code
     C                     EXSR SBRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    WUAVNA    P      Description Lin
     C                     MOVELWL0004    YL0019    P      UOM Primary
     C                     Z-ADDWL0005    YL0020           Unit Weight
     C                     Z-ADDWL0006    WURINB           Item Structure
     C                     Z-ADDWL0007    WURHNB           Item Structure
     C                     Z-ADDWL0008    WURGNB           Item Structure
     C                     MOVELWL0009    WUN0CD    P      Item Type Code
     C                     MOVELWL0010    WUQ1CD    P      Default Warehou
     C                     Z-ADDWL0011    YL0021           Fresh Chilling
     C                     MOVELWL0012    YL0022    P      Base_Conv_Loss
     C                     MOVELWL0013    WUXWST    P      Variety_Rendere
     C                     MOVELWL0014    WUVMST    P      Credit Item Sta
     C                     Z-ADDWL0015    WUSWGH           Std Weight_Head
     C                     Z-ADDWL0016    YL0023           Pieces Per Head
     C                     MOVELWL0017    WUR3CD    P      Department Code
     C                     MOVELWL0018    WUSDCD    P      Group for Packa
     C                     MOVELWL0019    WUX5ST    P      Seconds Item
     C                     MOVELWL0020    YL0024    P      Piece Count Ite
     C                     Z-ADDWL0021    YL0025           Pieces Per Bag
     C                     Z-ADDWL0022    YL0026           Bags Per Unit
     C                     MOVELWL0023    WUSUST    P      Export_Domestic
     C                     MOVELWL0024    WUSVST    P      Print On Schedu
     C                     MOVELWL0025    WUSYST    P      Fresh Inv Alloc
     C                     MOVELWL0026    WUSZST    P      Fresh Sched As
     C                     MOVELWL0027    WUS1ST    P      Frozen Inv Allo
     C                     MOVELWL0028    WUXRCD    P      Primal Group Co
      * BPS Rtv Whs Info      RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWHAJCD    WL0029    P      Warehouse Code
     C                     EXSR SCRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0030    YL0027    P      Warehouse Type
     C                     MOVELWL0031    WUXUST    P      Trans Contol AS
     C                     MOVELWL0032    WUT0ST    P      Warehouse Locat
     C                     MOVELWL0033    YL0028    P      Warehouse Std C
     C                     Z-ADDWL0034    YL0029           Warehouse Chill
      * RTV Warehous Inv ChillRT - Warehouse  * 
     C                     EXSR SIRVGN
      * UPS Re-Alc Inv/Prd OV RT - Order Detail Schedule  * 
     C                     EXSR SJRVGN
      * We don't want to create a negative availability for the future.
      * Chg Qty/WgtSch & Shrt CH - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWHAIC3    WL0334           Company Number
     C                     Z-ADDWHC4NB    WL0335           Order Number
     C                     Z-ADDWHDPNB    WL0336           Order Sequence
     C                     Z-ADDWHUENB    WL0337           Order Secondary
     C                     Z-ADDYL0031    WL0338           Quantity Schedu
     C                     Z-ADDYL0032    WL0339           Weight Schedule
     C                     EXSR NCCHRC
     C                     END                             *FI
     C                     ENDIF
      * USER: Exit processing
      * EDT Post Open Orders   XF - Order Header TRG  * 
     C                     CALL 'PDHRXFR'              90  EDT Post Open O
     C                     PARM *BLANK    W0RTN   7
     C                     PARM YL0072    WQ0111  30       Company Number
     C                     PARM YL0073    WQ0112  70       Order Number
     C                     PARM YL0074    WQ0113  70       Ship To Custome
     C           WUJZVA    PARM WUJZVA    WQ0114 112       Order Value Tot
     C           WUA1WG    PARM *ZERO     WQ0115 112       Order Weight To
     C                     PARM 'PS'      WQ0116  3        Pricing Event C
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDHRXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     Z-ADDYL0031    WL0059           Quantity Schedu
     C                     Z-ADDYL0032    WL0060           Weight Schedule
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * RTV Warehous Inv ChillRT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSI     KLIST
     C                     KFLD           WCAJCD           Warehouse Code
      * Setup key
     C                     MOVELWHAJCD    WCAJCD           Warehouse Code
      * Establish starting position
     C           KRSSI     CHAIN@ADREAO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     YL0030           WHS Inventory C
     C                     GOTO SIEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWCBVC3    YL0030           WHS Inventory C
     C                     ENDIF
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * UPS Re-Alc Inv/Prd OV RT - Order Detail Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0023 112       ATS Quantity Ne
     C                     Z-ADD*ZERO     WN0024 112       ATS Weight Need
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * S7354 9/28/16 RMC chg dates on getting age dates in INV section
      * R5947 5/13/16 RMC Dont alloc inventory for Block orders-added blo
      * E2073 9/05/12 RMC instead of pdkncpl9 use, pdkncplb w/ date ascen
      *    and try to get inventory for sched overridden dates
      * E2073 8/01/12 RMC For inventory calcs, use Whs Inventory Chill fi
      * Del OrdDtl Sch-Consmd RT - Order Detail Sched-Consmd  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWHAIC3    WL0035           Company Number
     C                     Z-ADDWHC4NB    WL0036           Order Number
     C                     Z-ADDWHDPNB    WL0037           Order Sequence
     C                     Z-ADDWHUENB    WL0038           Order Secondary
     C                     EXSR SDRVGN
      * Del Ord Dtl Sch-Inv   RT - Order Detail Sched-Inv  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWHAIC3    WL0061           Company Number
     C                     Z-ADDWHC4NB    WL0062           Order Number
     C                     Z-ADDWHDPNB    WL0063           Order Sequence
     C                     Z-ADDWHUENB    WL0064           Order Secondary
     C                     EXSR SKRVGN
     C                     Z-ADD*ZERO     YL0031           Quantity Schedu
     C                     Z-ADD*ZERO     YL0032           Weight Schedule
      * Declare restrictor key work fields
     C           *LIKE     DEFN WIAIC3    WQSJ01           Company Number
     C           *LIKE     DEFN WIC4NB    WQSJ02           Order Number
     C           *LIKE     DEFN WIDPNB    WQSJ03           Order Sequence
     C           *LIKE     DEFN WIUENB    WQSJ04           Order Secondary
      * Define keylist
     C           KRSSJ     KLIST
     C                     KFLD           WQSJ01           Company Number
     C                     KFLD           WQSJ02           Order Number
     C                     KFLD           WQSJ03           Order Sequence
     C                     KFLD           WQSJ04           Order Secondary
      * Setup key
     C                     Z-ADDWHAIC3    WQSJ01           Company Number
     C                     Z-ADDWHC4NB    WQSJ02           Order Number
     C                     Z-ADDWHDPNB    WQSJ03           Order Sequence
     C                     Z-ADDWHUENB    WQSJ04           Order Secondary
      * Establish starting position
     C           KRSSJ     SETLL@KNCPOC                    *
     C           KRSSJ     READE@KNCPOC                  90*
      * Data record not found
     C   90                MOVEL'USR2238' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0070           Company Number
     C                     Z-ADDWIJGDT    WL0071           Post to G/L Dat
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0072    YL0034    P      Production Day
      * S0538 RMC Always alloc orders 3/16/2010
     C                     MOVEL'Y'       YL0034           Production Day
      * FP1309  Pull the requested delivery date from the order header
      * RTV Requested Dlvry dt RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0073           Company Number
     C                     Z-ADDWIC4NB    WL0074           Order Number
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0075    YL0035           Requested Deliv
     C                     Z-ADDWL0076    YL0036           Requested Deliv
      * Allocate Inventory/Production
      * CASE: LCL.Production Day Status is yes
     C           YL0034    IFEQ 'Y'                        *IF
      * Production Date < Job Date, Allocate Inventory.
      * CASE: DB1.OD Production Date LT JOB.*Job date
     C           WIJGDT    IFLT ##JDT                      *IF
      * Quantity Ordered
      * LCL.Quantity Ordered =
      *    *COMPUTE (x1 + x2)
      * x1    : DB1.OD Qty/Cnsmd Pieces Sched
      * +     : PGM.*Synon (15,0) work field
      * x2    : DB1.OD Quantity Inv Sched
     C           WIIGQT    ADD  WIIUQT    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    YL0037           Quantity Ordere
      * Weight Ordered
      * LCL.Weight Ordered =
      *    *COMPUTE (x1 + x2)
      * x1    : DB1.OD Weight Scheduled
      * +     : PGM.*Synon (15,2) work field
      * x2    : DB1.OD Weight Inv Sched
     C           WIFLWG    ADD  WIF3WG    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    YL0038           Weight Ordered
      * Delete old record with Prod Date < Job Date
      * DLT Ord Detail Sched   DL - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0077           Company Number
     C                     Z-ADDWIC4NB    WL0078           Order Number
     C                     Z-ADDWIDPNB    WL0079           Order Sequence
     C                     Z-ADDWIUENB    WL0080           Order Secondary
     C                     Z-ADDWIJGDT    WL0081           OD Production D
     C                     EXSR SODLRC
      * Age Limit    age days or from/to dates
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           YL0028    IFEQ 'Y'                        *IF
      * CASE: PAR.WHS Inventory Chill Time is greater than zero
     C           YL0030    IFGT 0                          *IF
      * E2073 8/1/12
      * CLC PA Age FrmToDates XF - Calendar  * 
     C                     CALL 'PNO7XFR'              90  CLC PA Age FrmT
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WIAIC3    WQ0001  30       Company Number
     C                     PARM YL0030    WQ0002  52       Chilling Time U
     C                     PARM WHA5DT    WQ0003  70       Scheduled Ship
     C                     PARM YL0035    WQ0004  70       Requested Deliv
     C                     PARM WHRINY    WQ0005  40       Item Age Days
     C                     PARM WHTIDT    WQ0006  70       Production Ovr
     C                     PARM WHTJDT    WQ0007  70       Production Ovr
     C           YL0039    PARM YL0039    WQ0008  70       Production AgeD
     C           YL0040    PARM YL0040    WQ0009  70       Production AgeD
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNO7XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     ELSE
      * CASE: *OTHERWISE
      * CLC PA Age FrmToDates XF - Calendar  * 
     C                     CALL 'PNO7XFR'              90  CLC PA Age FrmT
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WIAIC3    WQ0010  30       Company Number
     C                     PARM YL0029    WQ0011  52       Chilling Time U
     C                     PARM WHA5DT    WQ0012  70       Scheduled Ship
     C                     PARM YL0035    WQ0013  70       Requested Deliv
     C                     PARM WHRINY    WQ0014  40       Item Age Days
     C                     PARM WHTIDT    WQ0015  70       Production Ovr
     C                     PARM WHTJDT    WQ0016  70       Production Ovr
     C           YL0039    PARM YL0039    WQ0017  70       Production AgeD
     C           YL0040    PARM YL0040    WQ0018  70       Production AgeD
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNO7XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * CLC PA Age FrmToDates XF - Calendar  * 
     C                     CALL 'PNO7XFR'              90  CLC PA Age FrmT
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WIAIC3    WQ0019  30       Company Number
     C                     PARM YL0021    WQ0020  52       Chilling Time U
     C                     PARM WHA5DT    WQ0021  70       Scheduled Ship
     C                     PARM YL0035    WQ0022  70       Requested Deliv
     C                     PARM WHRINY    WQ0023  40       Item Age Days
     C                     PARM WHTIDT    WQ0024  70       Production Ovr
     C                     PARM WHTJDT    WQ0025  70       Production Ovr
     C           YL0039    PARM YL0039    WQ0026  70       Production AgeD
     C           YL0040    PARM YL0040    WQ0027  70       Production AgeD
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNO7XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
      * Quantity Ordered > 0
      * CASE: LCL.Quantity Ordered is Greater than zero
     C           YL0037    IFGT 0                          *IF
     C                     Z-ADD##JDT     YL0041           Production Date
     C                     Z-ADD*ZERO     YL0042           Quantity Schedu
     C                     Z-ADD*ZERO     YL0043           Weight Schedule
     C                     Z-ADDYL0037    YL0044           ATS Quantity Ne
     C                     Z-ADDYL0038    YL0045           ATS Weight Need
      * ** This will create the new order detail schedule record **
      *    for the current date.
      *
     C                     Z-ADD*ZERO     WN0025 110       ATS Quantity Av
     C                     Z-ADD*ZERO     WN0026 112       ATS Weight Avai
     C                     Z-ADD*ZERO     WN0027 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0028  92       Weight Allocate
      *
      * UPD Allocate Inv      IF
      * FP1054 4/14/09 Changed to pass par.to date usr to RTV
      * Allocate Inventory
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date RGF LT JOB.*Job date
      *   |- c2    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0039    IFLT ##JDT                      *IF
     C           YL0044    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * UPD Allocate Inv      RT - PS Prod Item Inventory  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0082           Company Number
     C                     Z-ADDWIHGCD    WL0083           Item Code
     C                     MOVELWIAJCD    WL0084    P      Warehouse Code
     C                     Z-ADDYL0039    WL0085           Production Date
     C                     Z-ADDYL0020    WL0086           Unit Weight
     C                     MOVELYL0024    WL0087    P      Piece Count Ite
     C                     Z-ADDYL0025    WL0088           Pieces Per Bag
     C                     Z-ADDYL0026    WL0089           Bags Per Unit
     C                     Z-ADDWIC4NB    WL0090           Order Number
     C                     Z-ADDWIDPNB    WL0091           Order Sequence
     C                     Z-ADDWIUENB    WL0092           Order Secondary
     C                     Z-ADDYL0037    WL0093           Quantity Ordere
     C                     Z-ADDYL0038    WL0094           Weight Ordered
     C                     Z-ADDYL0042    WL0095           Quantity Schedu
     C                     Z-ADDYL0043    WL0096           Weight Schedule
     C                     Z-ADDYL0044    WL0097           ATS Quantity Ne
     C                     Z-ADDYL0045    WL0098           ATS Weight Need
     C                     Z-ADDWHA5DT    WL0099           Ship Date USR
     C                     Z-ADD##JDT     WL0100           To Date
     C                     EXSR SPRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0095    YL0042           Quantity Schedu
     C                     Z-ADDWL0096    YL0043           Weight Schedule
     C                     Z-ADDWL0097    YL0044           ATS Quantity Ne
     C                     Z-ADDWL0098    YL0045           ATS Weight Need
     C                     END                             *FI
     C                     END                             *FI
      * this will happen when curr day rcd is processed
     C                     ADD  YL0042    YL0031           Quantity Schedu
     C                     ADD  YL0043    YL0032           Weight Schedule
     C                     END                             *FI
      * Production Date >= Job Date, Allocate Inv, Prod, or Std  NEW 2.5.
      * CASE: DB1.OD Production Date GE JOB.*Job date
     C           WIJGDT    IFGE ##JDT                      *IF
     C                     Z-ADDWIJGDT    YL0041           Production Date
      * Save records qty/wts
     C                     Z-ADDWIIUQT    YL0050           OD Quantity Inv
     C                     Z-ADDWIF3WG    YL0051           OD Weight Inv S
     C                     Z-ADDWIIGQT    YL0052           OD Qty/Cnsmd Pi
     C                     Z-ADDWIFLWG    YL0053           OD Weight Sched
      * Delete old record with Prod Date
      * Delete rcd with prod date if inv is 0 ,, else leave inventory
      * CASE: DB1.OD Quantity Inv Sched is Equal to zero
     C           WIIUQT    IFEQ 0                          *IF
      * DLT Ord Detail Sched   DL - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0077           Company Number
     C                     Z-ADDWIC4NB    WL0078           Order Number
     C                     Z-ADDWIDPNB    WL0079           Order Sequence
     C                     Z-ADDWIUENB    WL0080           Order Secondary
     C                     Z-ADDWIJGDT    WL0081           OD Production D
     C                     EXSR SODLRC
     C                     ELSE
      * CASE: *OTHERWISE
      * Leave inventory
      * CHG Qty/Wgt Sched only CH - Order Detail Schedule  * 
     C                     EXSR SZCHRC
     C                     END                             *FI
      * ------------------------------
      * E2885 RMC 1/30/14 For Override, If FZ then dont take inv for futu
      *     If FR then take inventory if its there  5/13/16 if not Block
      *  IF Fresh try to get inv
      * CASE: PAR.Warehouse Type is Fresh
     C           YL0027    IFEQ 'FR'                       *IF
      * E2885 inv may exist if created from a past prod date in above rtn
     C                     Z-ADDYL0052    YL0050           OD Quantity Inv
     C                     Z-ADDYL0053    YL0051           OD Weight Inv S
     C                     Z-ADD*ZERO     YL0042           Quantity Schedu
     C                     Z-ADD*ZERO     YL0043           Weight Schedule
      * ------------------------------
      * Allocate Inventory
      * CASE: LCL.OD Quantity Inv Sched is GT Zero
     C           YL0050    IFGT 0                          *IF
      * Age Limit  age days and from/to dates
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           YL0028    IFEQ 'Y'                        *IF
      * CASE: PAR.WHS Inventory Chill Time is greater than zero
     C           YL0030    IFGT 0                          *IF
      * E2073 8/01/12
      * E2073 8/01/12
      * CLC PA Age FrmToDates XF - Calendar  * 
     C                     CALL 'PNO7XFR'              90  CLC PA Age FrmT
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WIAIC3    WQ0028  30       Company Number
     C                     PARM YL0030    WQ0029  52       Chilling Time U
     C                     PARM WHA5DT    WQ0030  70       Scheduled Ship
     C                     PARM YL0035    WQ0031  70       Requested Deliv
     C                     PARM WHRINY    WQ0032  40       Item Age Days
     C                     PARM WHTIDT    WQ0033  70       Production Ovr
     C                     PARM WHTJDT    WQ0034  70       Production Ovr
     C           YL0039    PARM YL0039    WQ0035  70       Production AgeD
     C           YL0040    PARM YL0040    WQ0036  70       Production AgeD
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNO7XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     ELSE
      * CASE: *OTHERWISE
      * CLC PA Age FrmToDates XF - Calendar  * 
     C                     CALL 'PNO7XFR'              90  CLC PA Age FrmT
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WIAIC3    WQ0037  30       Company Number
     C                     PARM YL0029    WQ0038  52       Chilling Time U
     C                     PARM WHA5DT    WQ0039  70       Scheduled Ship
     C                     PARM YL0035    WQ0040  70       Requested Deliv
     C                     PARM WHRINY    WQ0041  40       Item Age Days
     C                     PARM WHTIDT    WQ0042  70       Production Ovr
     C                     PARM WHTJDT    WQ0043  70       Production Ovr
     C           YL0039    PARM YL0039    WQ0044  70       Production AgeD
     C           YL0040    PARM YL0040    WQ0045  70       Production AgeD
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNO7XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * CLC PA Age FrmToDates XF - Calendar  * 
     C                     CALL 'PNO7XFR'              90  CLC PA Age FrmT
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WIAIC3    WQ0046  30       Company Number
     C                     PARM YL0021    WQ0047  52       Chilling Time U
     C                     PARM WHA5DT    WQ0048  70       Scheduled Ship
     C                     PARM YL0035    WQ0049  70       Requested Deliv
     C                     PARM WHRINY    WQ0050  40       Item Age Days
     C                     PARM WHTIDT    WQ0051  70       Production Ovr
     C                     PARM WHTJDT    WQ0052  70       Production Ovr
     C           YL0039    PARM YL0039    WQ0053  70       Production AgeD
     C           YL0040    PARM YL0040    WQ0054  70       Production AgeD
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNO7XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
     C                     Z-ADDYL0050    YL0037           Quantity Ordere
     C                     Z-ADDYL0051    YL0038           Weight Ordered
     C                     Z-ADD*ZERO     YL0042           Quantity Schedu
     C                     Z-ADD*ZERO     YL0043           Weight Schedule
     C                     Z-ADDYL0037    YL0044           ATS Quantity Ne
     C                     Z-ADDYL0038    YL0045           ATS Weight Need
      * ** This will create the new order detail schedule record **
      *    for the current date.
      *
     C                     Z-ADD*ZERO     WN0183 110       ATS Quantity Av
     C                     Z-ADD*ZERO     WN0184 112       ATS Weight Avai
     C                     Z-ADD*ZERO     WN0185 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0186  92       Weight Allocate
      *
      * UPD Allocate Inv      IF
      * FP1054 4/14/09 Changed to pass par.to date usr to RTV
      * Allocate Inventory
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date RGF LT JOB.*Job date
      *   |- c2    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0039    IFLT ##JDT                      *IF
     C           YL0044    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * UPD Allocate Inv      RT - PS Prod Item Inventory  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0082           Company Number
     C                     Z-ADDWIHGCD    WL0083           Item Code
     C                     MOVELWIAJCD    WL0084    P      Warehouse Code
     C                     Z-ADDYL0039    WL0085           Production Date
     C                     Z-ADDYL0020    WL0086           Unit Weight
     C                     MOVELYL0024    WL0087    P      Piece Count Ite
     C                     Z-ADDYL0025    WL0088           Pieces Per Bag
     C                     Z-ADDYL0026    WL0089           Bags Per Unit
     C                     Z-ADDWIC4NB    WL0090           Order Number
     C                     Z-ADDWIDPNB    WL0091           Order Sequence
     C                     Z-ADDWIUENB    WL0092           Order Secondary
     C                     Z-ADDYL0037    WL0093           Quantity Ordere
     C                     Z-ADDYL0038    WL0094           Weight Ordered
     C                     Z-ADDYL0042    WL0095           Quantity Schedu
     C                     Z-ADDYL0043    WL0096           Weight Schedule
     C                     Z-ADDYL0044    WL0097           ATS Quantity Ne
     C                     Z-ADDYL0045    WL0098           ATS Weight Need
     C                     Z-ADDWHA5DT    WL0099           Ship Date USR
     C                     Z-ADD##JDT     WL0100           To Date
     C                     EXSR SPRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0095    YL0042           Quantity Schedu
     C                     Z-ADDWL0096    YL0043           Weight Schedule
     C                     Z-ADDWL0097    YL0044           ATS Quantity Ne
     C                     Z-ADDWL0098    YL0045           ATS Weight Need
     C                     END                             *FI
     C                     ADD  YL0042    YL0031           Quantity Schedu
     C                     ADD  YL0043    YL0032           Weight Schedule
     C                     END                             *FI
      * ------------------------------
      * E2073 RMC 8/27/12 For Override, If inventory taken, then reduce s
      * by access inv taken... this is the new need
      * CASE: LCL.Quantity Scheduled LT LCL.OD Qty/Cnsmd Pieces Sched
     C           YL0042    IFLT YL0052                     *IF
     C                     SUB  YL0042    YL0052           OD Qty/Cnsmd Pi
     C                     SUB  YL0043    YL0053           OD Weight Sched
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     YL0052           OD Qty/Cnsmd Pi
     C                     Z-ADD*ZERO     YL0053           OD Weight Sched
     C                     END                             *FI
     C                     END                             *FI
      * ------------------------------
      * Allocate Production Or Standard
      * CASE: LCL.OD Qty/Cnsmd Pieces Sched is Greater than zero
     C           YL0052    IFGT 0                          *IF
     C                     Z-ADDYL0052    YL0037           Quantity Ordere
     C                     Z-ADDYL0053    YL0038           Weight Ordered
     C                     Z-ADDYL0052    YL0044           ATS Quantity Ne
     C                     Z-ADDYL0053    YL0045           ATS Weight Need
     C                     Z-ADD*ZERO     YL0042           Quantity Schedu
     C                     Z-ADD*ZERO     YL0043           Weight Schedule
      * CASE: PAR.Warehouse Type is Frozen
     C           YL0027    IFEQ 'FZ'                       *IF
      * If Base, allocated Production. If Converted, allocate Standard
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           YL0022    IFEQ 'B'                        *IF
      * Rtv Productin Whs     RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWIAJCD    WL0127    P      Warehouse Code
     C                     EXSR TARVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0128    YL0054    P      Production Ware
     C                     Z-ADDWL0129    YL0055           Accounting Comp
      * IF ord's whse <> prodctn whse, 1st move prod from prod whse to or
      * CASE: DB1.Warehouse Code NE LCL.Production Warehouse Code
     C           WIAJCD    IFNE YL0054                     *IF
     C                     Z-ADDYL0052    WN0023           ATS Quantity Ne
     C                     Z-ADDYL0053    WN0024           ATS Weight Need
     C                     Z-ADD*ZERO     YL0042           Quantity Schedu
     C                     Z-ADD*ZERO     YL0043           Weight Schedule
      *
     C                     MOVEL*BLANK    WN0187  1        Production Type
     C                     Z-ADD*ZERO     WN0188 110       ATS Quantity Av
     C                     Z-ADD*ZERO     WN0189 112       ATS Weight Avai
     C                     Z-ADD*ZERO     WN0190  70       ATS Pieces Avai
     C                     Z-ADD*ZERO     WN0191 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0192  92       Weight Allocate
     C                     Z-ADD*ZERO     WN0193  70       Pieces Allocate
     C                     Z-ADD*ZERO     WN0194  52       Chilling Time U
     C                     Z-ADD*ZERO     WN0195  92       PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0196  52       Production Yiel
     C                     Z-ADD*ZERO     WN0197  70       SM Pieces Need
     C                     Z-ADD*ZERO     WN0198 112       SM Weight Need
      *
      * UPD Allocate Prd      IF
      * documentation
     C                     EXSR UASUBR                     documentation
      * CASE: PAR.PSAA Program Name is Sched as ordered-Override
     C           @CN,002   IFEQ @CN,002                    *IF
      * IF called from sched override routine, dont get block order flag
     C                     MOVEL*BLANK    YL0056           Block Order Fla
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Block Order Flag  RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0055    WL0130           Company Number
     C                     Z-ADDWIC4NB    WL0131           Order Number
     C                     EXSR TBRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0132    YL0056    P      Block Order Fla
     C                     END                             *FI
      * FRESH - Alloc Forward / Backward per Item Allocation Method
      * CASE: PAR.Warehouse Type is Fresh
     C           YL0027    IFEQ 'FR'                       *IF
      * Rtv CIE Alloc Method  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0055    WL0133           Company Number
     C                     Z-ADDWIHGCD    WL0134           Item Code
     C                     Z-ADDWIC4NB    WL0136           Order Number
     C                     EXSR TCRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0135    YL0057    P      Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           YL0028    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0029    WN0194           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0021    WN0194           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDWIJGDT    YL0060           Production Date
      * DOC:  Allocation
     C                     EXSR UBSUBR                     DOC:  Allocatio
      * CASE: Allocation Method is Forward - ASAP
      * CASE: LCL.Allocation Method is Forward - ASAP
     C           YL0057    IFEQ 'F'                        *IF
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           WIJGDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0041           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           WIJGDT    IFLT ##JDT                      *IF
     C                     Z-ADDWIJGDT    YL0060           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0056    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           YL0041    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0041
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0041
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWIJGDT    YL0041           Production Date
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           YL0041    IFEQ ##JDT                      *IF
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0056    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           YL0041    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0041
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0041
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte <= Prd Dte RGT & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date LE LCL.Production Date To
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           YL0041    IFLE YL0060                     *IF
     C           WN0023    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0055    WL0070           Company Number
     C                     Z-ADDYL0041    WL0071           Post to G/L Dat
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0072    YL0061    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0055    WL0137           Company Number
     C                     Z-ADDWIHGCD    WL0138           Item Code
     C                     Z-ADDYL0041    WL0139           Production Date
     C                     MOVELYL0062    WL0140    P      Production Day
     C                     EXSR TFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0140    YL0062    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0061    IFEQ 'Y'                        *IF
     C           YL0062    IFEQ *BLANK                     *IF
     C           YL0062    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           YL0041    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0187           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0055    WL0141           Company Number
     C                     MOVELWN0187    WL0142    P      Production Type
     C                     Z-ADDYL0041    WL0143           Production Date
     C                     EXSR THRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0144    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0187           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           YL0041    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0187           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0055    WL0145           Company Number
     C                     MOVELWN0187    WL0146    P      Production Type
     C                     Z-ADDYL0041    WL0147           Production Date
     C                     Z-ADDWIHGCD    WL0148           Item Code
     C                     MOVELYL0054    WL0149    P      Warehouse Code
     C                     Z-ADDWN0189    WL0151           ATS Weight Avai
     C                     Z-ADDWN0190    WL0152           ATS Pieces Avai
     C                     Z-ADDWN0194    WL0153           Chilling Time U
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0150    WN0195           PS Avg Piece Wg
     C                     Z-ADDWL0151    WN0189           ATS Weight Avai
     C                     Z-ADDWL0152    WN0190           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0024    IFEQ 'Y'                        *IF
     C           YL0025    IFGT 0                          *IF
     C           YL0026    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           YL0025    MULT YL0026    W0WJ01           *Synon (15,0) w
     C           WN0190    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0188           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'N'
     C           YL0020    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0189    DIV  YL0020    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0188           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0188           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           'AO'      IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0188    IFLT WN0023                     *IF
     C                     Z-ADDWN0023    WN0188           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0188    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           WN0023    IFGT WN0188                     *IF
     C                     ADD  WN0188    YL0042           Quantity Schedu
     C           WN0188    MULT YL0020    WN0189           ATS Weight Avai
     C                     ADD  WN0189    YL0043           Weight Schedule
     C                     Z-ADDWN0189    WN0192           Weight Allocate
     C                     Z-ADDWN0188    WN0191           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           WN0023    IFLE WN0188                     *IF
     C                     ADD  WN0023    YL0042           Quantity Schedu
     C           WN0023    MULT YL0020    WN0024           ATS Weight Need
     C                     ADD  WN0024    YL0043           Weight Schedule
     C                     Z-ADDWN0024    WN0192           Weight Allocate
     C                     Z-ADDWN0023    WN0191           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0191    IFGT 0                          *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           YL0024    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0191    MULT YL0025    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT YL0026    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0193           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0193    MULT WN0195    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0192           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           YL0054    IFEQ WIAJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0055    WL0154           Company Number
     C                     Z-ADDWIC4NB    WL0155           Order Number
     C                     Z-ADDWIDPNB    WL0156           Order Sequence
     C                     Z-ADDWIUENB    WL0157           Order Secondary
     C                     Z-ADDYL0041    WL0158           OD Production D
     C                     Z-ADDWHA5DT    WL0159           Scheduled Ship
     C                     MOVELYL0054    WL0160    P      Warehouse Code
     C                     MOVELYL0054    WL0161    P      Order From Ware
     C                     Z-ADDWIHGCD    WL0162           Item Code
     C                     Z-ADDWN0192    WL0163           Weight Allocate
     C                     Z-ADDWN0191    WL0164           Quantity Alloca
     C                     MOVELYL0022    WL0165    P      Base_Conv_Loss
     C                     EXSR TKRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           YL0054    IFNE WIAJCD                     *IF
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           YL0022    IFEQ 'B'                        *IF
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0055    WL0176           Company Number
     C                     MOVELWN0187    WL0177    P      Production Type
     C                     Z-ADDYL0041    WL0178           Production Date
     C                     Z-ADDWIHGCD    WL0179           Item Code
     C                     MOVELYL0054    WL0180    P      Warehouse Code
     C                     Z-ADDWN0192    WL0181           Weight Allocate
     C                     Z-ADDWN0193    WL0182           Pieces Allocate
     C                     Z-ADDWIC4NB    WL0183           Order Number
     C                     Z-ADDWIDPNB    WL0184           Order Sequence
     C                     Z-ADDWIUENB    WL0185           Order Secondary
     C                     MOVEL'N'       WL0186    P      Status Flag 19
     C                     EXSR TMRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0274           Company Number
     C                     MOVELWN0187    WL0275    P      Production Type
     C                     Z-ADDYL0041    WL0276           Production Date
     C                     Z-ADDWIHGCD    WL0277           Item Code
     C                     MOVELWIAJCD    WL0278    P      Warehouse Code
     C                     Z-ADDWN0193    WL0279           Pieces Schedule
     C                     Z-ADDWN0192    WL0280           Weight Schedule
     C                     EXSR TQRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0055    WL0281           Company Number
     C                     MOVELWN0187    WL0282    P      Production Type
     C                     Z-ADDYL0041    WL0283           Production Date
     C                     Z-ADDWIHGCD    WL0284           Item Code
     C                     MOVELYL0054    WL0285    P      Warehouse Code
     C                     Z-ADDWN0192    WL0286           Weight Allocate
     C                     Z-ADDWN0193    WL0287           Pieces Allocate
     C                     Z-ADDWIC4NB    WL0288           Order Number
     C                     Z-ADDWIDPNB    WL0289           Order Sequence
     C                     Z-ADDWIUENB    WL0290           Order Secondary
     C                     MOVEL'N'       WL0291    P      Status Flag 19
     C                     EXSR TSRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0191           Quantity Alloca
     C                     Z-ADD*ZERO     WN0192           Weight Allocate
     C                     Z-ADD*ZERO     YL0042           Quantity Schedu
     C                     Z-ADD*ZERO     YL0043           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     YL0042           Quantity Schedu
     C                     ADD  *ZERO     YL0043           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           1         IFLT 0                          *IF
     C           1         MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0055    WL0324           Company Number
     C                     Z-ADDYL0041    WL0325           Post to G/L Dat
     C                     Z-ADDYL0041    WL0327           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0328           *Duration (fact
     C                     EXSR NARVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0326    YL0041           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           1         IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0055    WL0329           Company Number
     C                     Z-ADDYL0041    WL0330           Post to G/L Dat
     C                     Z-ADDYL0041    WL0332           *Date2 (beginni
     C                     Z-ADD1         WL0333           *Duration (fact
     C                     EXSR NBRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0331    YL0041           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           1         IFEQ 0                          *IF
     C                     Z-ADDYL0041    YL0041           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           WIIGQT    SUB  YL0042    WN0023           ATS Quantity Ne
     C           WIFLWG    SUB  YL0043    WN0024           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
      * CASE: Allocation Method is Backwards - JIT
      * CASE: LCL.Allocation Method is Backwards - JIT
     C           YL0057    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDWIJGDT    YL0070           Production Date
     C                     Z-ADDWIJGDT    YL0041           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           WIJGDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0070           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           WIJGDT    IFLT ##JDT                      *IF
     C                     Z-ADDWIJGDT    YL0060           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0056    IFEQ 'B'                        *IF
      * LCL.Production Date RGF = LCL.Production Date RGF + CON.1 *DAYS
     C           YL0070    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0070
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0070
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWIJGDT    YL0041           Production Date
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           YL0041    IFEQ ##JDT                      *IF
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0056    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           YL0041    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0041
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0041
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           YL0041    IFGE YL0070                     *IF
     C           WN0023    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0055    WL0070           Company Number
     C                     Z-ADDYL0041    WL0071           Post to G/L Dat
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0072    YL0061    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0055    WL0137           Company Number
     C                     Z-ADDWIHGCD    WL0138           Item Code
     C                     Z-ADDYL0041    WL0139           Production Date
     C                     MOVELYL0062    WL0140    P      Production Day
     C                     EXSR TFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0140    YL0062    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0061    IFEQ 'Y'                        *IF
     C           YL0062    IFEQ *BLANK                     *IF
     C           YL0062    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           YL0041    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0187           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0055    WL0141           Company Number
     C                     MOVELWN0187    WL0142    P      Production Type
     C                     Z-ADDYL0041    WL0143           Production Date
     C                     EXSR THRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0144    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0187           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           YL0041    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0187           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0055    WL0145           Company Number
     C                     MOVELWN0187    WL0146    P      Production Type
     C                     Z-ADDYL0041    WL0147           Production Date
     C                     Z-ADDWIHGCD    WL0148           Item Code
     C                     MOVELYL0054    WL0149    P      Warehouse Code
     C                     Z-ADDWN0189    WL0151           ATS Weight Avai
     C                     Z-ADDWN0190    WL0152           ATS Pieces Avai
     C                     Z-ADDWN0194    WL0153           Chilling Time U
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0150    WN0195           PS Avg Piece Wg
     C                     Z-ADDWL0151    WN0189           ATS Weight Avai
     C                     Z-ADDWL0152    WN0190           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0024    IFEQ 'Y'                        *IF
     C           YL0025    IFGT 0                          *IF
     C           YL0026    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           YL0025    MULT YL0026    W0WJ01           *Synon (15,0) w
     C           WN0190    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0188           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'N'
     C           YL0020    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0189    DIV  YL0020    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0188           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0188           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           'AO'      IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0188    IFLT WN0023                     *IF
     C                     Z-ADDWN0023    WN0188           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0188    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           WN0023    IFGT WN0188                     *IF
     C                     ADD  WN0188    YL0042           Quantity Schedu
     C           WN0188    MULT YL0020    WN0189           ATS Weight Avai
     C                     ADD  WN0189    YL0043           Weight Schedule
     C                     Z-ADDWN0189    WN0192           Weight Allocate
     C                     Z-ADDWN0188    WN0191           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           WN0023    IFLE WN0188                     *IF
     C                     ADD  WN0023    YL0042           Quantity Schedu
     C           WN0023    MULT YL0020    WN0024           ATS Weight Need
     C                     ADD  WN0024    YL0043           Weight Schedule
     C                     Z-ADDWN0024    WN0192           Weight Allocate
     C                     Z-ADDWN0023    WN0191           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0191    IFGT 0                          *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           YL0024    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0191    MULT YL0025    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT YL0026    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0193           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0193    MULT WN0195    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0192           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           YL0054    IFEQ WIAJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0055    WL0154           Company Number
     C                     Z-ADDWIC4NB    WL0155           Order Number
     C                     Z-ADDWIDPNB    WL0156           Order Sequence
     C                     Z-ADDWIUENB    WL0157           Order Secondary
     C                     Z-ADDYL0041    WL0158           OD Production D
     C                     Z-ADDWHA5DT    WL0159           Scheduled Ship
     C                     MOVELYL0054    WL0160    P      Warehouse Code
     C                     MOVELYL0054    WL0161    P      Order From Ware
     C                     Z-ADDWIHGCD    WL0162           Item Code
     C                     Z-ADDWN0192    WL0163           Weight Allocate
     C                     Z-ADDWN0191    WL0164           Quantity Alloca
     C                     MOVELYL0022    WL0165    P      Base_Conv_Loss
     C                     EXSR TKRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           YL0054    IFNE WIAJCD                     *IF
      * FP1054 Use input Warehouse and co
      * FOR BASE ONLY  6/02/09 maybe
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           YL0022    IFEQ 'B'                        *IF
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0055    WL0176           Company Number
     C                     MOVELWN0187    WL0177    P      Production Type
     C                     Z-ADDYL0041    WL0178           Production Date
     C                     Z-ADDWIHGCD    WL0179           Item Code
     C                     MOVELYL0054    WL0180    P      Warehouse Code
     C                     Z-ADDWN0192    WL0181           Weight Allocate
     C                     Z-ADDWN0193    WL0182           Pieces Allocate
     C                     Z-ADDWIC4NB    WL0183           Order Number
     C                     Z-ADDWIDPNB    WL0184           Order Sequence
     C                     Z-ADDWIUENB    WL0185           Order Secondary
     C                     MOVEL'N'       WL0186    P      Status Flag 19
     C                     EXSR TMRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0274           Company Number
     C                     MOVELWN0187    WL0275    P      Production Type
     C                     Z-ADDYL0041    WL0276           Production Date
     C                     Z-ADDWIHGCD    WL0277           Item Code
     C                     MOVELWIAJCD    WL0278    P      Warehouse Code
     C                     Z-ADDWN0193    WL0279           Pieces Schedule
     C                     Z-ADDWN0192    WL0280           Weight Schedule
     C                     EXSR TQRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0055    WL0281           Company Number
     C                     MOVELWN0187    WL0282    P      Production Type
     C                     Z-ADDYL0041    WL0283           Production Date
     C                     Z-ADDWIHGCD    WL0284           Item Code
     C                     MOVELYL0054    WL0285    P      Warehouse Code
     C                     Z-ADDWN0192    WL0286           Weight Allocate
     C                     Z-ADDWN0193    WL0287           Pieces Allocate
     C                     Z-ADDWIC4NB    WL0288           Order Number
     C                     Z-ADDWIDPNB    WL0289           Order Sequence
     C                     Z-ADDWIUENB    WL0290           Order Secondary
     C                     MOVEL'N'       WL0291    P      Status Flag 19
     C                     EXSR TSRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0191           Quantity Alloca
     C                     Z-ADD*ZERO     WN0192           Weight Allocate
     C                     Z-ADD*ZERO     YL0042           Quantity Schedu
     C                     Z-ADD*ZERO     YL0043           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     YL0042           Quantity Schedu
     C                     ADD  *ZERO     YL0043           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT 0                          *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0055    WL0324           Company Number
     C                     Z-ADDYL0041    WL0325           Post to G/L Dat
     C                     Z-ADDYL0041    WL0327           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0328           *Duration (fact
     C                     EXSR NARVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0326    YL0041           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0055    WL0329           Company Number
     C                     Z-ADDYL0041    WL0330           Post to G/L Dat
     C                     Z-ADDYL0041    WL0332           *Date2 (beginni
     C                     Z-ADD-1        WL0333           *Duration (fact
     C                     EXSR NBRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0331    YL0041           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ 0                          *IF
     C                     Z-ADDYL0041    YL0041           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           WIIGQT    SUB  YL0042    WN0023           ATS Quantity Ne
     C           WIFLWG    SUB  YL0043    WN0024           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           WIIGQT    SUB  YL0042    WN0023           ATS Quantity Ne
     C           WIFLWG    SUB  YL0043    WN0024           ATS Weight Need
     C                     END                             *FI
      * FROZEN - allocate backwards - new for FP1054
      * CASE: PAR.Warehouse Type is Frozen
     C           YL0027    IFEQ 'FZ'                       *IF
     C                     MOVEL'B'       YL0071           Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           YL0028    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0029    WN0194           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0021    WN0194           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDWIJGDT    YL0060           Production Date
      * DOC:  Allocation
     C                     EXSR UCSUBR                     DOC:  Allocatio
      * CASE: LCL.Allocation Method USR is Backward
     C           YL0071    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDWIJGDT    YL0070           Production Date
     C                     Z-ADDWIJGDT    YL0041           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           WIJGDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0070           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           WIJGDT    IFLT ##JDT                      *IF
     C                     Z-ADDWIJGDT    YL0060           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0056    IFEQ 'B'                        *IF
      * LCL.Production Date RGF = LCL.Production Date RGF + CON.1 *DAYS
     C           YL0070    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0070
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0070
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWIJGDT    YL0041           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           YL0041    IFGE YL0070                     *IF
     C           WN0023    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0055    WL0070           Company Number
     C                     Z-ADDYL0041    WL0071           Post to G/L Dat
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0072    YL0061    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0055    WL0137           Company Number
     C                     Z-ADDWIHGCD    WL0138           Item Code
     C                     Z-ADDYL0041    WL0139           Production Date
     C                     MOVELYL0062    WL0140    P      Production Day
     C                     EXSR TFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0140    YL0062    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0061    IFEQ 'Y'                        *IF
     C           YL0062    IFEQ *BLANK                     *IF
     C           YL0062    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           YL0041    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0187           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0055    WL0141           Company Number
     C                     MOVELWN0187    WL0142    P      Production Type
     C                     Z-ADDYL0041    WL0143           Production Date
     C                     EXSR THRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0144    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0187           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           YL0041    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0187           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0055    WL0145           Company Number
     C                     MOVELWN0187    WL0146    P      Production Type
     C                     Z-ADDYL0041    WL0147           Production Date
     C                     Z-ADDWIHGCD    WL0148           Item Code
     C                     MOVELYL0054    WL0149    P      Warehouse Code
     C                     Z-ADDWN0189    WL0151           ATS Weight Avai
     C                     Z-ADDWN0190    WL0152           ATS Pieces Avai
     C                     Z-ADDWN0194    WL0153           Chilling Time U
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0150    WN0195           PS Avg Piece Wg
     C                     Z-ADDWL0151    WN0189           ATS Weight Avai
     C                     Z-ADDWL0152    WN0190           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0024    IFEQ 'Y'                        *IF
     C           YL0025    IFGT 0                          *IF
     C           YL0026    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           YL0025    MULT YL0026    W0WJ01           *Synon (15,0) w
     C           WN0190    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0188           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'N'
     C           YL0020    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0189    DIV  YL0020    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0188           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0188           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           'AO'      IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0188    IFLT WN0023                     *IF
     C                     Z-ADDWN0023    WN0188           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0188    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           WN0023    IFGT WN0188                     *IF
     C                     ADD  WN0188    YL0042           Quantity Schedu
     C           WN0188    MULT YL0020    WN0189           ATS Weight Avai
     C                     ADD  WN0189    YL0043           Weight Schedule
     C                     Z-ADDWN0189    WN0192           Weight Allocate
     C                     Z-ADDWN0188    WN0191           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           WN0023    IFLE WN0188                     *IF
     C                     ADD  WN0023    YL0042           Quantity Schedu
     C           WN0023    MULT YL0020    WN0024           ATS Weight Need
     C                     ADD  WN0024    YL0043           Weight Schedule
     C                     Z-ADDWN0024    WN0192           Weight Allocate
     C                     Z-ADDWN0023    WN0191           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0191    IFGT 0                          *IF
      * 8/05/11 RMC MOVE UP HERE FROM BELOW ORDER DTL SCHED UPD
      * CASE: PAR.Piece Count Item is yes
     C           YL0024    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           WN0191    MULT YL0025    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT YL0026    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0193           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0193    MULT WN0195    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0192           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           YL0054    IFEQ WIAJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0055    WL0154           Company Number
     C                     Z-ADDWIC4NB    WL0155           Order Number
     C                     Z-ADDWIDPNB    WL0156           Order Sequence
     C                     Z-ADDWIUENB    WL0157           Order Secondary
     C                     Z-ADDYL0041    WL0158           OD Production D
     C                     Z-ADDWHA5DT    WL0159           Scheduled Ship
     C                     MOVELYL0054    WL0160    P      Warehouse Code
     C                     MOVELYL0054    WL0161    P      Order From Ware
     C                     Z-ADDWIHGCD    WL0162           Item Code
     C                     Z-ADDWN0192    WL0163           Weight Allocate
     C                     Z-ADDWN0191    WL0164           Quantity Alloca
     C                     MOVELYL0022    WL0165    P      Base_Conv_Loss
     C                     EXSR TKRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           YL0054    IFNE WIAJCD                     *IF
      * FP1054 Use input Warehouse and co
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0055    WL0176           Company Number
     C                     MOVELWN0187    WL0177    P      Production Type
     C                     Z-ADDYL0041    WL0178           Production Date
     C                     Z-ADDWIHGCD    WL0179           Item Code
     C                     MOVELYL0054    WL0180    P      Warehouse Code
     C                     Z-ADDWN0192    WL0181           Weight Allocate
     C                     Z-ADDWN0193    WL0182           Pieces Allocate
     C                     Z-ADDWIC4NB    WL0183           Order Number
     C                     Z-ADDWIDPNB    WL0184           Order Sequence
     C                     Z-ADDWIUENB    WL0185           Order Secondary
     C                     MOVEL'N'       WL0186    P      Status Flag 19
     C                     EXSR TMRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0274           Company Number
     C                     MOVELWN0187    WL0275    P      Production Type
     C                     Z-ADDYL0041    WL0276           Production Date
     C                     Z-ADDWIHGCD    WL0277           Item Code
     C                     MOVELWIAJCD    WL0278    P      Warehouse Code
     C                     Z-ADDWN0193    WL0279           Pieces Schedule
     C                     Z-ADDWN0192    WL0280           Weight Schedule
     C                     EXSR TQRVGN
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0055    WL0281           Company Number
     C                     MOVELWN0187    WL0282    P      Production Type
     C                     Z-ADDYL0041    WL0283           Production Date
     C                     Z-ADDWIHGCD    WL0284           Item Code
     C                     MOVELYL0054    WL0285    P      Warehouse Code
     C                     Z-ADDWN0192    WL0286           Weight Allocate
     C                     Z-ADDWN0193    WL0287           Pieces Allocate
     C                     Z-ADDWIC4NB    WL0288           Order Number
     C                     Z-ADDWIDPNB    WL0289           Order Sequence
     C                     Z-ADDWIUENB    WL0290           Order Secondary
     C                     MOVEL'N'       WL0291    P      Status Flag 19
     C                     EXSR TSRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0191           Quantity Alloca
     C                     Z-ADD*ZERO     WN0192           Weight Allocate
     C                     Z-ADD*ZERO     YL0042           Quantity Schedu
     C                     Z-ADD*ZERO     YL0043           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     YL0042           Quantity Schedu
     C                     ADD  *ZERO     YL0043           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT 0                          *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0055    WL0324           Company Number
     C                     Z-ADDYL0041    WL0325           Post to G/L Dat
     C                     Z-ADDYL0041    WL0327           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0328           *Duration (fact
     C                     EXSR NARVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0326    YL0041           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0055    WL0329           Company Number
     C                     Z-ADDYL0041    WL0330           Post to G/L Dat
     C                     Z-ADDYL0041    WL0332           *Date2 (beginni
     C                     Z-ADD-1        WL0333           *Duration (fact
     C                     EXSR NBRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0331    YL0041           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ 0                          *IF
     C                     Z-ADDYL0041    YL0041           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           WIIGQT    SUB  YL0042    WN0023           ATS Quantity Ne
     C           WIFLWG    SUB  YL0043    WN0024           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           WIIGQT    SUB  YL0042    WN0023           ATS Quantity Ne
     C           WIFLWG    SUB  YL0043    WN0024           ATS Weight Need
     C                     END                             *FI
     C                     Z-ADD*ZERO     YL0042           Quantity Schedu
     C                     Z-ADD*ZERO     YL0043           Weight Schedule
     C                     END                             *FI
      *
     C                     MOVEL*BLANK    WN0718  1        Production Type
     C                     Z-ADD*ZERO     WN0719 110       ATS Quantity Av
     C                     Z-ADD*ZERO     WN0720 112       ATS Weight Avai
     C                     Z-ADD*ZERO     WN0721  70       ATS Pieces Avai
     C                     Z-ADD*ZERO     WN0722 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0723  92       Weight Allocate
     C                     Z-ADD*ZERO     WN0724  70       Pieces Allocate
     C                     Z-ADD*ZERO     WN0725  52       Chilling Time U
     C                     Z-ADD*ZERO     WN0726  92       PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0727  52       Production Yiel
     C                     Z-ADD*ZERO     WN0728  70       SM Pieces Need
     C                     Z-ADD*ZERO     WN0729 112       SM Weight Need
      *
      * UPD Allocate Prd      IF
      * documentation
     C                     EXSR UDSUBR                     documentation
      * CASE: PAR.PSAA Program Name is Sched as ordered-Override
     C           @CN,002   IFEQ @CN,002                    *IF
      * IF called from sched override routine, dont get block order flag
     C                     MOVEL*BLANK    YL0056           Block Order Fla
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Block Order Flag  RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0130           Company Number
     C                     Z-ADDWIC4NB    WL0131           Order Number
     C                     EXSR TBRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0132    YL0056    P      Block Order Fla
     C                     END                             *FI
      * FRESH - Alloc Forward / Backward per Item Allocation Method
      * CASE: PAR.Warehouse Type is Fresh
     C           YL0027    IFEQ 'FR'                       *IF
      * Rtv CIE Alloc Method  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0133           Company Number
     C                     Z-ADDWIHGCD    WL0134           Item Code
     C                     Z-ADDWIC4NB    WL0136           Order Number
     C                     EXSR TCRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0135    YL0057    P      Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           YL0028    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0029    WN0725           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0021    WN0725           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDWIJGDT    YL0060           Production Date
      * DOC:  Allocation
     C                     EXSR UESUBR                     DOC:  Allocatio
      * CASE: Allocation Method is Forward - ASAP
      * CASE: LCL.Allocation Method is Forward - ASAP
     C           YL0057    IFEQ 'F'                        *IF
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           WIJGDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0041           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           WIJGDT    IFLT ##JDT                      *IF
     C                     Z-ADDWIJGDT    YL0060           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0056    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           YL0041    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0041
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0041
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWIJGDT    YL0041           Production Date
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           YL0041    IFEQ ##JDT                      *IF
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0056    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           YL0041    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0041
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0041
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte <= Prd Dte RGT & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date LE LCL.Production Date To
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           YL0041    IFLE YL0060                     *IF
     C           YL0044    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0070           Company Number
     C                     Z-ADDYL0041    WL0071           Post to G/L Dat
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0072    YL0061    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0137           Company Number
     C                     Z-ADDWIHGCD    WL0138           Item Code
     C                     Z-ADDYL0041    WL0139           Production Date
     C                     MOVELYL0062    WL0140    P      Production Day
     C                     EXSR TFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0140    YL0062    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0061    IFEQ 'Y'                        *IF
     C           YL0062    IFEQ *BLANK                     *IF
     C           YL0062    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           YL0041    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0718           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0141           Company Number
     C                     MOVELWN0718    WL0142    P      Production Type
     C                     Z-ADDYL0041    WL0143           Production Date
     C                     EXSR THRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0144    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0718           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           YL0041    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0718           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0145           Company Number
     C                     MOVELWN0718    WL0146    P      Production Type
     C                     Z-ADDYL0041    WL0147           Production Date
     C                     Z-ADDWIHGCD    WL0148           Item Code
     C                     MOVELWIAJCD    WL0149    P      Warehouse Code
     C                     Z-ADDWN0720    WL0151           ATS Weight Avai
     C                     Z-ADDWN0721    WL0152           ATS Pieces Avai
     C                     Z-ADDWN0725    WL0153           Chilling Time U
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0150    WN0726           PS Avg Piece Wg
     C                     Z-ADDWL0151    WN0720           ATS Weight Avai
     C                     Z-ADDWL0152    WN0721           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0024    IFEQ 'Y'                        *IF
     C           YL0025    IFGT 0                          *IF
     C           YL0026    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           YL0025    MULT YL0026    W0WJ01           *Synon (15,0) w
     C           WN0721    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0719           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'N'
     C           YL0020    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0720    DIV  YL0020    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0719           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0719           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           'AO'      IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0719    IFLT YL0044                     *IF
     C                     Z-ADDYL0044    WN0719           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0719    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           YL0044    IFGT WN0719                     *IF
     C                     ADD  WN0719    YL0042           Quantity Schedu
     C           WN0719    MULT YL0020    WN0720           ATS Weight Avai
     C                     ADD  WN0720    YL0043           Weight Schedule
     C                     Z-ADDWN0720    WN0723           Weight Allocate
     C                     Z-ADDWN0719    WN0722           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           YL0044    IFLE WN0719                     *IF
     C                     ADD  YL0044    YL0042           Quantity Schedu
     C           YL0044    MULT YL0020    YL0045           ATS Weight Need
     C                     ADD  YL0045    YL0043           Weight Schedule
     C                     Z-ADDYL0045    WN0723           Weight Allocate
     C                     Z-ADDYL0044    WN0722           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0722    IFGT 0                          *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           YL0024    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0722    MULT YL0025    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT YL0026    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0724           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0724    MULT WN0726    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0723           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           WIAJCD    IFEQ WIAJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0154           Company Number
     C                     Z-ADDWIC4NB    WL0155           Order Number
     C                     Z-ADDWIDPNB    WL0156           Order Sequence
     C                     Z-ADDWIUENB    WL0157           Order Secondary
     C                     Z-ADDYL0041    WL0158           OD Production D
     C                     Z-ADDWHA5DT    WL0159           Scheduled Ship
     C                     MOVELWIAJCD    WL0160    P      Warehouse Code
     C                     MOVELWIAJCD    WL0161    P      Order From Ware
     C                     Z-ADDWIHGCD    WL0162           Item Code
     C                     Z-ADDWN0723    WL0163           Weight Allocate
     C                     Z-ADDWN0722    WL0164           Quantity Alloca
     C                     MOVELYL0022    WL0165    P      Base_Conv_Loss
     C                     EXSR TKRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           WIAJCD    IFNE WIAJCD                     *IF
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           YL0022    IFEQ 'B'                        *IF
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0176           Company Number
     C                     MOVELWN0718    WL0177    P      Production Type
     C                     Z-ADDYL0041    WL0178           Production Date
     C                     Z-ADDWIHGCD    WL0179           Item Code
     C                     MOVELWIAJCD    WL0180    P      Warehouse Code
     C                     Z-ADDWN0723    WL0181           Weight Allocate
     C                     Z-ADDWN0724    WL0182           Pieces Allocate
     C                     Z-ADDWIC4NB    WL0183           Order Number
     C                     Z-ADDWIDPNB    WL0184           Order Sequence
     C                     Z-ADDWIUENB    WL0185           Order Secondary
     C                     MOVEL'N'       WL0186    P      Status Flag 19
     C                     EXSR TMRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0274           Company Number
     C                     MOVELWN0718    WL0275    P      Production Type
     C                     Z-ADDYL0041    WL0276           Production Date
     C                     Z-ADDWIHGCD    WL0277           Item Code
     C                     MOVELWIAJCD    WL0278    P      Warehouse Code
     C                     Z-ADDWN0724    WL0279           Pieces Schedule
     C                     Z-ADDWN0723    WL0280           Weight Schedule
     C                     EXSR TQRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0281           Company Number
     C                     MOVELWN0718    WL0282    P      Production Type
     C                     Z-ADDYL0041    WL0283           Production Date
     C                     Z-ADDWIHGCD    WL0284           Item Code
     C                     MOVELWIAJCD    WL0285    P      Warehouse Code
     C                     Z-ADDWN0723    WL0286           Weight Allocate
     C                     Z-ADDWN0724    WL0287           Pieces Allocate
     C                     Z-ADDWIC4NB    WL0288           Order Number
     C                     Z-ADDWIDPNB    WL0289           Order Sequence
     C                     Z-ADDWIUENB    WL0290           Order Secondary
     C                     MOVEL'N'       WL0291    P      Status Flag 19
     C                     EXSR TSRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0722           Quantity Alloca
     C                     Z-ADD*ZERO     WN0723           Weight Allocate
     C                     Z-ADD*ZERO     YL0042           Quantity Schedu
     C                     Z-ADD*ZERO     YL0043           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     YL0042           Quantity Schedu
     C                     ADD  *ZERO     YL0043           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           1         IFLT 0                          *IF
     C           1         MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0324           Company Number
     C                     Z-ADDYL0041    WL0325           Post to G/L Dat
     C                     Z-ADDYL0041    WL0327           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0328           *Duration (fact
     C                     EXSR NARVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0326    YL0041           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           1         IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0329           Company Number
     C                     Z-ADDYL0041    WL0330           Post to G/L Dat
     C                     Z-ADDYL0041    WL0332           *Date2 (beginni
     C                     Z-ADD1         WL0333           *Duration (fact
     C                     EXSR NBRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0331    YL0041           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           1         IFEQ 0                          *IF
     C                     Z-ADDYL0041    YL0041           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           YL0037    SUB  YL0042    YL0044           ATS Quantity Ne
     C           YL0038    SUB  YL0043    YL0045           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
      * CASE: Allocation Method is Backwards - JIT
      * CASE: LCL.Allocation Method is Backwards - JIT
     C           YL0057    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDWIJGDT    YL0070           Production Date
     C                     Z-ADDWIJGDT    YL0041           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           WIJGDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0070           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           WIJGDT    IFLT ##JDT                      *IF
     C                     Z-ADDWIJGDT    YL0060           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0056    IFEQ 'B'                        *IF
      * LCL.Production Date RGF = LCL.Production Date RGF + CON.1 *DAYS
     C           YL0070    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0070
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0070
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWIJGDT    YL0041           Production Date
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           YL0041    IFEQ ##JDT                      *IF
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0056    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           YL0041    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0041
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0041
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           YL0041    IFGE YL0070                     *IF
     C           YL0044    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0070           Company Number
     C                     Z-ADDYL0041    WL0071           Post to G/L Dat
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0072    YL0061    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0137           Company Number
     C                     Z-ADDWIHGCD    WL0138           Item Code
     C                     Z-ADDYL0041    WL0139           Production Date
     C                     MOVELYL0062    WL0140    P      Production Day
     C                     EXSR TFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0140    YL0062    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0061    IFEQ 'Y'                        *IF
     C           YL0062    IFEQ *BLANK                     *IF
     C           YL0062    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           YL0041    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0718           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0141           Company Number
     C                     MOVELWN0718    WL0142    P      Production Type
     C                     Z-ADDYL0041    WL0143           Production Date
     C                     EXSR THRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0144    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0718           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           YL0041    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0718           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0145           Company Number
     C                     MOVELWN0718    WL0146    P      Production Type
     C                     Z-ADDYL0041    WL0147           Production Date
     C                     Z-ADDWIHGCD    WL0148           Item Code
     C                     MOVELWIAJCD    WL0149    P      Warehouse Code
     C                     Z-ADDWN0720    WL0151           ATS Weight Avai
     C                     Z-ADDWN0721    WL0152           ATS Pieces Avai
     C                     Z-ADDWN0725    WL0153           Chilling Time U
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0150    WN0726           PS Avg Piece Wg
     C                     Z-ADDWL0151    WN0720           ATS Weight Avai
     C                     Z-ADDWL0152    WN0721           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0024    IFEQ 'Y'                        *IF
     C           YL0025    IFGT 0                          *IF
     C           YL0026    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           YL0025    MULT YL0026    W0WJ01           *Synon (15,0) w
     C           WN0721    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0719           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'N'
     C           YL0020    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0720    DIV  YL0020    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0719           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0719           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           'AO'      IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0719    IFLT YL0044                     *IF
     C                     Z-ADDYL0044    WN0719           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0719    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           YL0044    IFGT WN0719                     *IF
     C                     ADD  WN0719    YL0042           Quantity Schedu
     C           WN0719    MULT YL0020    WN0720           ATS Weight Avai
     C                     ADD  WN0720    YL0043           Weight Schedule
     C                     Z-ADDWN0720    WN0723           Weight Allocate
     C                     Z-ADDWN0719    WN0722           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           YL0044    IFLE WN0719                     *IF
     C                     ADD  YL0044    YL0042           Quantity Schedu
     C           YL0044    MULT YL0020    YL0045           ATS Weight Need
     C                     ADD  YL0045    YL0043           Weight Schedule
     C                     Z-ADDYL0045    WN0723           Weight Allocate
     C                     Z-ADDYL0044    WN0722           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0722    IFGT 0                          *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           YL0024    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0722    MULT YL0025    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT YL0026    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0724           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0724    MULT WN0726    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0723           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           WIAJCD    IFEQ WIAJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0154           Company Number
     C                     Z-ADDWIC4NB    WL0155           Order Number
     C                     Z-ADDWIDPNB    WL0156           Order Sequence
     C                     Z-ADDWIUENB    WL0157           Order Secondary
     C                     Z-ADDYL0041    WL0158           OD Production D
     C                     Z-ADDWHA5DT    WL0159           Scheduled Ship
     C                     MOVELWIAJCD    WL0160    P      Warehouse Code
     C                     MOVELWIAJCD    WL0161    P      Order From Ware
     C                     Z-ADDWIHGCD    WL0162           Item Code
     C                     Z-ADDWN0723    WL0163           Weight Allocate
     C                     Z-ADDWN0722    WL0164           Quantity Alloca
     C                     MOVELYL0022    WL0165    P      Base_Conv_Loss
     C                     EXSR TKRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           WIAJCD    IFNE WIAJCD                     *IF
      * FP1054 Use input Warehouse and co
      * FOR BASE ONLY  6/02/09 maybe
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           YL0022    IFEQ 'B'                        *IF
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0176           Company Number
     C                     MOVELWN0718    WL0177    P      Production Type
     C                     Z-ADDYL0041    WL0178           Production Date
     C                     Z-ADDWIHGCD    WL0179           Item Code
     C                     MOVELWIAJCD    WL0180    P      Warehouse Code
     C                     Z-ADDWN0723    WL0181           Weight Allocate
     C                     Z-ADDWN0724    WL0182           Pieces Allocate
     C                     Z-ADDWIC4NB    WL0183           Order Number
     C                     Z-ADDWIDPNB    WL0184           Order Sequence
     C                     Z-ADDWIUENB    WL0185           Order Secondary
     C                     MOVEL'N'       WL0186    P      Status Flag 19
     C                     EXSR TMRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0274           Company Number
     C                     MOVELWN0718    WL0275    P      Production Type
     C                     Z-ADDYL0041    WL0276           Production Date
     C                     Z-ADDWIHGCD    WL0277           Item Code
     C                     MOVELWIAJCD    WL0278    P      Warehouse Code
     C                     Z-ADDWN0724    WL0279           Pieces Schedule
     C                     Z-ADDWN0723    WL0280           Weight Schedule
     C                     EXSR TQRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0281           Company Number
     C                     MOVELWN0718    WL0282    P      Production Type
     C                     Z-ADDYL0041    WL0283           Production Date
     C                     Z-ADDWIHGCD    WL0284           Item Code
     C                     MOVELWIAJCD    WL0285    P      Warehouse Code
     C                     Z-ADDWN0723    WL0286           Weight Allocate
     C                     Z-ADDWN0724    WL0287           Pieces Allocate
     C                     Z-ADDWIC4NB    WL0288           Order Number
     C                     Z-ADDWIDPNB    WL0289           Order Sequence
     C                     Z-ADDWIUENB    WL0290           Order Secondary
     C                     MOVEL'N'       WL0291    P      Status Flag 19
     C                     EXSR TSRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0722           Quantity Alloca
     C                     Z-ADD*ZERO     WN0723           Weight Allocate
     C                     Z-ADD*ZERO     YL0042           Quantity Schedu
     C                     Z-ADD*ZERO     YL0043           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     YL0042           Quantity Schedu
     C                     ADD  *ZERO     YL0043           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT 0                          *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0324           Company Number
     C                     Z-ADDYL0041    WL0325           Post to G/L Dat
     C                     Z-ADDYL0041    WL0327           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0328           *Duration (fact
     C                     EXSR NARVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0326    YL0041           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0329           Company Number
     C                     Z-ADDYL0041    WL0330           Post to G/L Dat
     C                     Z-ADDYL0041    WL0332           *Date2 (beginni
     C                     Z-ADD-1        WL0333           *Duration (fact
     C                     EXSR NBRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0331    YL0041           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ 0                          *IF
     C                     Z-ADDYL0041    YL0041           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           YL0037    SUB  YL0042    YL0044           ATS Quantity Ne
     C           YL0038    SUB  YL0043    YL0045           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           YL0037    SUB  YL0042    YL0044           ATS Quantity Ne
     C           YL0038    SUB  YL0043    YL0045           ATS Weight Need
     C                     END                             *FI
      * FROZEN - allocate backwards - new for FP1054
      * CASE: PAR.Warehouse Type is Frozen
     C           YL0027    IFEQ 'FZ'                       *IF
     C                     MOVEL'B'       YL0071           Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           YL0028    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0029    WN0725           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0021    WN0725           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDWIJGDT    YL0060           Production Date
      * DOC:  Allocation
     C                     EXSR UFSUBR                     DOC:  Allocatio
      * CASE: LCL.Allocation Method USR is Backward
     C           YL0071    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDWIJGDT    YL0070           Production Date
     C                     Z-ADDWIJGDT    YL0041           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           WIJGDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0070           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           WIJGDT    IFLT ##JDT                      *IF
     C                     Z-ADDWIJGDT    YL0060           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0056    IFEQ 'B'                        *IF
      * LCL.Production Date RGF = LCL.Production Date RGF + CON.1 *DAYS
     C           YL0070    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0070
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0070
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWIJGDT    YL0041           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           YL0041    IFGE YL0070                     *IF
     C           YL0044    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0070           Company Number
     C                     Z-ADDYL0041    WL0071           Post to G/L Dat
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0072    YL0061    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0137           Company Number
     C                     Z-ADDWIHGCD    WL0138           Item Code
     C                     Z-ADDYL0041    WL0139           Production Date
     C                     MOVELYL0062    WL0140    P      Production Day
     C                     EXSR TFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0140    YL0062    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0061    IFEQ 'Y'                        *IF
     C           YL0062    IFEQ *BLANK                     *IF
     C           YL0062    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           YL0041    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0718           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0141           Company Number
     C                     MOVELWN0718    WL0142    P      Production Type
     C                     Z-ADDYL0041    WL0143           Production Date
     C                     EXSR THRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0144    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0718           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           YL0041    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0718           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0145           Company Number
     C                     MOVELWN0718    WL0146    P      Production Type
     C                     Z-ADDYL0041    WL0147           Production Date
     C                     Z-ADDWIHGCD    WL0148           Item Code
     C                     MOVELWIAJCD    WL0149    P      Warehouse Code
     C                     Z-ADDWN0720    WL0151           ATS Weight Avai
     C                     Z-ADDWN0721    WL0152           ATS Pieces Avai
     C                     Z-ADDWN0725    WL0153           Chilling Time U
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0150    WN0726           PS Avg Piece Wg
     C                     Z-ADDWL0151    WN0720           ATS Weight Avai
     C                     Z-ADDWL0152    WN0721           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0024    IFEQ 'Y'                        *IF
     C           YL0025    IFGT 0                          *IF
     C           YL0026    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           YL0025    MULT YL0026    W0WJ01           *Synon (15,0) w
     C           WN0721    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0719           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'N'
     C           YL0020    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0720    DIV  YL0020    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0719           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0719           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           'AO'      IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0719    IFLT YL0044                     *IF
     C                     Z-ADDYL0044    WN0719           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0719    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           YL0044    IFGT WN0719                     *IF
     C                     ADD  WN0719    YL0042           Quantity Schedu
     C           WN0719    MULT YL0020    WN0720           ATS Weight Avai
     C                     ADD  WN0720    YL0043           Weight Schedule
     C                     Z-ADDWN0720    WN0723           Weight Allocate
     C                     Z-ADDWN0719    WN0722           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           YL0044    IFLE WN0719                     *IF
     C                     ADD  YL0044    YL0042           Quantity Schedu
     C           YL0044    MULT YL0020    YL0045           ATS Weight Need
     C                     ADD  YL0045    YL0043           Weight Schedule
     C                     Z-ADDYL0045    WN0723           Weight Allocate
     C                     Z-ADDYL0044    WN0722           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0722    IFGT 0                          *IF
      * 8/05/11 RMC MOVE UP HERE FROM BELOW ORDER DTL SCHED UPD
      * CASE: PAR.Piece Count Item is yes
     C           YL0024    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           WN0722    MULT YL0025    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT YL0026    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0724           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0724    MULT WN0726    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0723           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           WIAJCD    IFEQ WIAJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0154           Company Number
     C                     Z-ADDWIC4NB    WL0155           Order Number
     C                     Z-ADDWIDPNB    WL0156           Order Sequence
     C                     Z-ADDWIUENB    WL0157           Order Secondary
     C                     Z-ADDYL0041    WL0158           OD Production D
     C                     Z-ADDWHA5DT    WL0159           Scheduled Ship
     C                     MOVELWIAJCD    WL0160    P      Warehouse Code
     C                     MOVELWIAJCD    WL0161    P      Order From Ware
     C                     Z-ADDWIHGCD    WL0162           Item Code
     C                     Z-ADDWN0723    WL0163           Weight Allocate
     C                     Z-ADDWN0722    WL0164           Quantity Alloca
     C                     MOVELYL0022    WL0165    P      Base_Conv_Loss
     C                     EXSR TKRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           WIAJCD    IFNE WIAJCD                     *IF
      * FP1054 Use input Warehouse and co
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0176           Company Number
     C                     MOVELWN0718    WL0177    P      Production Type
     C                     Z-ADDYL0041    WL0178           Production Date
     C                     Z-ADDWIHGCD    WL0179           Item Code
     C                     MOVELWIAJCD    WL0180    P      Warehouse Code
     C                     Z-ADDWN0723    WL0181           Weight Allocate
     C                     Z-ADDWN0724    WL0182           Pieces Allocate
     C                     Z-ADDWIC4NB    WL0183           Order Number
     C                     Z-ADDWIDPNB    WL0184           Order Sequence
     C                     Z-ADDWIUENB    WL0185           Order Secondary
     C                     MOVEL'N'       WL0186    P      Status Flag 19
     C                     EXSR TMRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0274           Company Number
     C                     MOVELWN0718    WL0275    P      Production Type
     C                     Z-ADDYL0041    WL0276           Production Date
     C                     Z-ADDWIHGCD    WL0277           Item Code
     C                     MOVELWIAJCD    WL0278    P      Warehouse Code
     C                     Z-ADDWN0724    WL0279           Pieces Schedule
     C                     Z-ADDWN0723    WL0280           Weight Schedule
     C                     EXSR TQRVGN
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0281           Company Number
     C                     MOVELWN0718    WL0282    P      Production Type
     C                     Z-ADDYL0041    WL0283           Production Date
     C                     Z-ADDWIHGCD    WL0284           Item Code
     C                     MOVELWIAJCD    WL0285    P      Warehouse Code
     C                     Z-ADDWN0723    WL0286           Weight Allocate
     C                     Z-ADDWN0724    WL0287           Pieces Allocate
     C                     Z-ADDWIC4NB    WL0288           Order Number
     C                     Z-ADDWIDPNB    WL0289           Order Sequence
     C                     Z-ADDWIUENB    WL0290           Order Secondary
     C                     MOVEL'N'       WL0291    P      Status Flag 19
     C                     EXSR TSRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0722           Quantity Alloca
     C                     Z-ADD*ZERO     WN0723           Weight Allocate
     C                     Z-ADD*ZERO     YL0042           Quantity Schedu
     C                     Z-ADD*ZERO     YL0043           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     YL0042           Quantity Schedu
     C                     ADD  *ZERO     YL0043           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT 0                          *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0324           Company Number
     C                     Z-ADDYL0041    WL0325           Post to G/L Dat
     C                     Z-ADDYL0041    WL0327           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0328           *Duration (fact
     C                     EXSR NARVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0326    YL0041           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0329           Company Number
     C                     Z-ADDYL0041    WL0330           Post to G/L Dat
     C                     Z-ADDYL0041    WL0332           *Date2 (beginni
     C                     Z-ADD-1        WL0333           *Duration (fact
     C                     EXSR NBRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0331    YL0041           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ 0                          *IF
     C                     Z-ADDYL0041    YL0041           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           YL0037    SUB  YL0042    YL0044           ATS Quantity Ne
     C           YL0038    SUB  YL0043    YL0045           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           YL0037    SUB  YL0042    YL0044           ATS Quantity Ne
     C           YL0038    SUB  YL0043    YL0045           ATS Weight Need
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Base/Conv/Loss Item is Converted/Fabricated
     C           YL0022    IFEQ 'C'                        *IF
     C           YL0022    OREQ 'F'
      * rmc added this 11/11/09
      *
     C                     MOVEL*BLANK    WN0730  1        Production Type
     C                     Z-ADD*ZERO     WN0731 110       ATS Quantity Av
     C                     Z-ADD*ZERO     WN0732 112       ATS Weight Avai
     C                     Z-ADD*ZERO     WN0733  70       ATS Pieces Avai
     C                     Z-ADD*ZERO     WN0734 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0735  92       Weight Allocate
     C                     Z-ADD*ZERO     WN0736  70       Pieces Allocate
     C                     Z-ADD*ZERO     WN0737  52       Chilling Time U
     C                     Z-ADD*ZERO     WN0738  92       PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0739  52       Production Yiel
     C                     Z-ADD*ZERO     WN0740  70       SM Pieces Need
     C                     Z-ADD*ZERO     WN0741 112       SM Weight Need
      *
      * UPD Allocate Prd      IF
      * documentation
     C                     EXSR UGSUBR                     documentation
      * CASE: PAR.PSAA Program Name is Sched as ordered-Override
     C           @CN,002   IFEQ @CN,002                    *IF
      * IF called from sched override routine, dont get block order flag
     C                     MOVEL*BLANK    YL0056           Block Order Fla
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Block Order Flag  RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0130           Company Number
     C                     Z-ADDWIC4NB    WL0131           Order Number
     C                     EXSR TBRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0132    YL0056    P      Block Order Fla
     C                     END                             *FI
      * FRESH - Alloc Forward / Backward per Item Allocation Method
      * CASE: PAR.Warehouse Type is Fresh
     C           YL0027    IFEQ 'FR'                       *IF
      * Rtv CIE Alloc Method  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0133           Company Number
     C                     Z-ADDWIHGCD    WL0134           Item Code
     C                     Z-ADDWIC4NB    WL0136           Order Number
     C                     EXSR TCRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0135    YL0057    P      Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           YL0028    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0029    WN0737           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0021    WN0737           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDWIJGDT    YL0060           Production Date
      * DOC:  Allocation
     C                     EXSR UHSUBR                     DOC:  Allocatio
      * CASE: Allocation Method is Forward - ASAP
      * CASE: LCL.Allocation Method is Forward - ASAP
     C           YL0057    IFEQ 'F'                        *IF
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           WIJGDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0041           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           WIJGDT    IFLT ##JDT                      *IF
     C                     Z-ADDWIJGDT    YL0060           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0056    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           YL0041    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0041
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0041
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWIJGDT    YL0041           Production Date
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           YL0041    IFEQ ##JDT                      *IF
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0056    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           YL0041    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0041
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0041
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte <= Prd Dte RGT & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date LE LCL.Production Date To
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           YL0041    IFLE YL0060                     *IF
     C           YL0044    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0070           Company Number
     C                     Z-ADDYL0041    WL0071           Post to G/L Dat
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0072    YL0061    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0137           Company Number
     C                     Z-ADDWIHGCD    WL0138           Item Code
     C                     Z-ADDYL0041    WL0139           Production Date
     C                     MOVELYL0062    WL0140    P      Production Day
     C                     EXSR TFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0140    YL0062    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0061    IFEQ 'Y'                        *IF
     C           YL0062    IFEQ *BLANK                     *IF
     C           YL0062    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           YL0041    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0730           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0141           Company Number
     C                     MOVELWN0730    WL0142    P      Production Type
     C                     Z-ADDYL0041    WL0143           Production Date
     C                     EXSR THRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0144    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0730           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           YL0041    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0730           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0145           Company Number
     C                     MOVELWN0730    WL0146    P      Production Type
     C                     Z-ADDYL0041    WL0147           Production Date
     C                     Z-ADDWIHGCD    WL0148           Item Code
     C                     MOVELWIAJCD    WL0149    P      Warehouse Code
     C                     Z-ADDWN0732    WL0151           ATS Weight Avai
     C                     Z-ADDWN0733    WL0152           ATS Pieces Avai
     C                     Z-ADDWN0737    WL0153           Chilling Time U
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0150    WN0738           PS Avg Piece Wg
     C                     Z-ADDWL0151    WN0732           ATS Weight Avai
     C                     Z-ADDWL0152    WN0733           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0024    IFEQ 'Y'                        *IF
     C           YL0025    IFGT 0                          *IF
     C           YL0026    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           YL0025    MULT YL0026    W0WJ01           *Synon (15,0) w
     C           WN0733    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0731           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'N'
     C           YL0020    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0732    DIV  YL0020    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0731           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0731           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           'OA'      IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0731    IFLT YL0044                     *IF
     C                     Z-ADDYL0044    WN0731           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0731    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           YL0044    IFGT WN0731                     *IF
     C                     ADD  WN0731    YL0042           Quantity Schedu
     C           WN0731    MULT YL0020    WN0732           ATS Weight Avai
     C                     ADD  WN0732    YL0043           Weight Schedule
     C                     Z-ADDWN0732    WN0735           Weight Allocate
     C                     Z-ADDWN0731    WN0734           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           YL0044    IFLE WN0731                     *IF
     C                     ADD  YL0044    YL0042           Quantity Schedu
     C           YL0044    MULT YL0020    YL0045           ATS Weight Need
     C                     ADD  YL0045    YL0043           Weight Schedule
     C                     Z-ADDYL0045    WN0735           Weight Allocate
     C                     Z-ADDYL0044    WN0734           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0734    IFGT 0                          *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           YL0024    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0734    MULT YL0025    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT YL0026    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0736           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0736    MULT WN0738    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0735           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           WIAJCD    IFEQ WIAJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0154           Company Number
     C                     Z-ADDWIC4NB    WL0155           Order Number
     C                     Z-ADDWIDPNB    WL0156           Order Sequence
     C                     Z-ADDWIUENB    WL0157           Order Secondary
     C                     Z-ADDYL0041    WL0158           OD Production D
     C                     Z-ADDWHA5DT    WL0159           Scheduled Ship
     C                     MOVELWIAJCD    WL0160    P      Warehouse Code
     C                     MOVELWIAJCD    WL0161    P      Order From Ware
     C                     Z-ADDWIHGCD    WL0162           Item Code
     C                     Z-ADDWN0735    WL0163           Weight Allocate
     C                     Z-ADDWN0734    WL0164           Quantity Alloca
     C                     MOVELYL0022    WL0165    P      Base_Conv_Loss
     C                     EXSR TKRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           WIAJCD    IFNE WIAJCD                     *IF
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           YL0022    IFEQ 'B'                        *IF
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0176           Company Number
     C                     MOVELWN0730    WL0177    P      Production Type
     C                     Z-ADDYL0041    WL0178           Production Date
     C                     Z-ADDWIHGCD    WL0179           Item Code
     C                     MOVELWIAJCD    WL0180    P      Warehouse Code
     C                     Z-ADDWN0735    WL0181           Weight Allocate
     C                     Z-ADDWN0736    WL0182           Pieces Allocate
     C                     Z-ADDWIC4NB    WL0183           Order Number
     C                     Z-ADDWIDPNB    WL0184           Order Sequence
     C                     Z-ADDWIUENB    WL0185           Order Secondary
     C                     MOVEL'N'       WL0186    P      Status Flag 19
     C                     EXSR TMRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0274           Company Number
     C                     MOVELWN0730    WL0275    P      Production Type
     C                     Z-ADDYL0041    WL0276           Production Date
     C                     Z-ADDWIHGCD    WL0277           Item Code
     C                     MOVELWIAJCD    WL0278    P      Warehouse Code
     C                     Z-ADDWN0736    WL0279           Pieces Schedule
     C                     Z-ADDWN0735    WL0280           Weight Schedule
     C                     EXSR TQRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0281           Company Number
     C                     MOVELWN0730    WL0282    P      Production Type
     C                     Z-ADDYL0041    WL0283           Production Date
     C                     Z-ADDWIHGCD    WL0284           Item Code
     C                     MOVELWIAJCD    WL0285    P      Warehouse Code
     C                     Z-ADDWN0735    WL0286           Weight Allocate
     C                     Z-ADDWN0736    WL0287           Pieces Allocate
     C                     Z-ADDWIC4NB    WL0288           Order Number
     C                     Z-ADDWIDPNB    WL0289           Order Sequence
     C                     Z-ADDWIUENB    WL0290           Order Secondary
     C                     MOVEL'N'       WL0291    P      Status Flag 19
     C                     EXSR TSRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0734           Quantity Alloca
     C                     Z-ADD*ZERO     WN0735           Weight Allocate
     C                     Z-ADD*ZERO     YL0042           Quantity Schedu
     C                     Z-ADD*ZERO     YL0043           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     YL0042           Quantity Schedu
     C                     ADD  *ZERO     YL0043           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           1         IFLT 0                          *IF
     C           1         MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0324           Company Number
     C                     Z-ADDYL0041    WL0325           Post to G/L Dat
     C                     Z-ADDYL0041    WL0327           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0328           *Duration (fact
     C                     EXSR NARVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0326    YL0041           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           1         IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0329           Company Number
     C                     Z-ADDYL0041    WL0330           Post to G/L Dat
     C                     Z-ADDYL0041    WL0332           *Date2 (beginni
     C                     Z-ADD1         WL0333           *Duration (fact
     C                     EXSR NBRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0331    YL0041           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           1         IFEQ 0                          *IF
     C                     Z-ADDYL0041    YL0041           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           YL0037    SUB  YL0042    YL0044           ATS Quantity Ne
     C           YL0038    SUB  YL0043    YL0045           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
      * CASE: Allocation Method is Backwards - JIT
      * CASE: LCL.Allocation Method is Backwards - JIT
     C           YL0057    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDWIJGDT    YL0070           Production Date
     C                     Z-ADDWIJGDT    YL0041           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           WIJGDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0070           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           WIJGDT    IFLT ##JDT                      *IF
     C                     Z-ADDWIJGDT    YL0060           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0056    IFEQ 'B'                        *IF
      * LCL.Production Date RGF = LCL.Production Date RGF + CON.1 *DAYS
     C           YL0070    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0070
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0070
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWIJGDT    YL0041           Production Date
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           YL0041    IFEQ ##JDT                      *IF
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0056    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           YL0041    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0041
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0041
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           YL0041    IFGE YL0070                     *IF
     C           YL0044    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0070           Company Number
     C                     Z-ADDYL0041    WL0071           Post to G/L Dat
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0072    YL0061    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0137           Company Number
     C                     Z-ADDWIHGCD    WL0138           Item Code
     C                     Z-ADDYL0041    WL0139           Production Date
     C                     MOVELYL0062    WL0140    P      Production Day
     C                     EXSR TFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0140    YL0062    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0061    IFEQ 'Y'                        *IF
     C           YL0062    IFEQ *BLANK                     *IF
     C           YL0062    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           YL0041    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0730           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0141           Company Number
     C                     MOVELWN0730    WL0142    P      Production Type
     C                     Z-ADDYL0041    WL0143           Production Date
     C                     EXSR THRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0144    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0730           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           YL0041    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0730           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0145           Company Number
     C                     MOVELWN0730    WL0146    P      Production Type
     C                     Z-ADDYL0041    WL0147           Production Date
     C                     Z-ADDWIHGCD    WL0148           Item Code
     C                     MOVELWIAJCD    WL0149    P      Warehouse Code
     C                     Z-ADDWN0732    WL0151           ATS Weight Avai
     C                     Z-ADDWN0733    WL0152           ATS Pieces Avai
     C                     Z-ADDWN0737    WL0153           Chilling Time U
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0150    WN0738           PS Avg Piece Wg
     C                     Z-ADDWL0151    WN0732           ATS Weight Avai
     C                     Z-ADDWL0152    WN0733           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0024    IFEQ 'Y'                        *IF
     C           YL0025    IFGT 0                          *IF
     C           YL0026    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           YL0025    MULT YL0026    W0WJ01           *Synon (15,0) w
     C           WN0733    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0731           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'N'
     C           YL0020    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0732    DIV  YL0020    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0731           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0731           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           'OA'      IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0731    IFLT YL0044                     *IF
     C                     Z-ADDYL0044    WN0731           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0731    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           YL0044    IFGT WN0731                     *IF
     C                     ADD  WN0731    YL0042           Quantity Schedu
     C           WN0731    MULT YL0020    WN0732           ATS Weight Avai
     C                     ADD  WN0732    YL0043           Weight Schedule
     C                     Z-ADDWN0732    WN0735           Weight Allocate
     C                     Z-ADDWN0731    WN0734           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           YL0044    IFLE WN0731                     *IF
     C                     ADD  YL0044    YL0042           Quantity Schedu
     C           YL0044    MULT YL0020    YL0045           ATS Weight Need
     C                     ADD  YL0045    YL0043           Weight Schedule
     C                     Z-ADDYL0045    WN0735           Weight Allocate
     C                     Z-ADDYL0044    WN0734           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0734    IFGT 0                          *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           YL0024    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0734    MULT YL0025    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT YL0026    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0736           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0736    MULT WN0738    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0735           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           WIAJCD    IFEQ WIAJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0154           Company Number
     C                     Z-ADDWIC4NB    WL0155           Order Number
     C                     Z-ADDWIDPNB    WL0156           Order Sequence
     C                     Z-ADDWIUENB    WL0157           Order Secondary
     C                     Z-ADDYL0041    WL0158           OD Production D
     C                     Z-ADDWHA5DT    WL0159           Scheduled Ship
     C                     MOVELWIAJCD    WL0160    P      Warehouse Code
     C                     MOVELWIAJCD    WL0161    P      Order From Ware
     C                     Z-ADDWIHGCD    WL0162           Item Code
     C                     Z-ADDWN0735    WL0163           Weight Allocate
     C                     Z-ADDWN0734    WL0164           Quantity Alloca
     C                     MOVELYL0022    WL0165    P      Base_Conv_Loss
     C                     EXSR TKRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           WIAJCD    IFNE WIAJCD                     *IF
      * FP1054 Use input Warehouse and co
      * FOR BASE ONLY  6/02/09 maybe
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           YL0022    IFEQ 'B'                        *IF
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0176           Company Number
     C                     MOVELWN0730    WL0177    P      Production Type
     C                     Z-ADDYL0041    WL0178           Production Date
     C                     Z-ADDWIHGCD    WL0179           Item Code
     C                     MOVELWIAJCD    WL0180    P      Warehouse Code
     C                     Z-ADDWN0735    WL0181           Weight Allocate
     C                     Z-ADDWN0736    WL0182           Pieces Allocate
     C                     Z-ADDWIC4NB    WL0183           Order Number
     C                     Z-ADDWIDPNB    WL0184           Order Sequence
     C                     Z-ADDWIUENB    WL0185           Order Secondary
     C                     MOVEL'N'       WL0186    P      Status Flag 19
     C                     EXSR TMRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0274           Company Number
     C                     MOVELWN0730    WL0275    P      Production Type
     C                     Z-ADDYL0041    WL0276           Production Date
     C                     Z-ADDWIHGCD    WL0277           Item Code
     C                     MOVELWIAJCD    WL0278    P      Warehouse Code
     C                     Z-ADDWN0736    WL0279           Pieces Schedule
     C                     Z-ADDWN0735    WL0280           Weight Schedule
     C                     EXSR TQRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0281           Company Number
     C                     MOVELWN0730    WL0282    P      Production Type
     C                     Z-ADDYL0041    WL0283           Production Date
     C                     Z-ADDWIHGCD    WL0284           Item Code
     C                     MOVELWIAJCD    WL0285    P      Warehouse Code
     C                     Z-ADDWN0735    WL0286           Weight Allocate
     C                     Z-ADDWN0736    WL0287           Pieces Allocate
     C                     Z-ADDWIC4NB    WL0288           Order Number
     C                     Z-ADDWIDPNB    WL0289           Order Sequence
     C                     Z-ADDWIUENB    WL0290           Order Secondary
     C                     MOVEL'N'       WL0291    P      Status Flag 19
     C                     EXSR TSRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0734           Quantity Alloca
     C                     Z-ADD*ZERO     WN0735           Weight Allocate
     C                     Z-ADD*ZERO     YL0042           Quantity Schedu
     C                     Z-ADD*ZERO     YL0043           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     YL0042           Quantity Schedu
     C                     ADD  *ZERO     YL0043           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT 0                          *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0324           Company Number
     C                     Z-ADDYL0041    WL0325           Post to G/L Dat
     C                     Z-ADDYL0041    WL0327           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0328           *Duration (fact
     C                     EXSR NARVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0326    YL0041           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0329           Company Number
     C                     Z-ADDYL0041    WL0330           Post to G/L Dat
     C                     Z-ADDYL0041    WL0332           *Date2 (beginni
     C                     Z-ADD-1        WL0333           *Duration (fact
     C                     EXSR NBRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0331    YL0041           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ 0                          *IF
     C                     Z-ADDYL0041    YL0041           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           YL0037    SUB  YL0042    YL0044           ATS Quantity Ne
     C           YL0038    SUB  YL0043    YL0045           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           YL0037    SUB  YL0042    YL0044           ATS Quantity Ne
     C           YL0038    SUB  YL0043    YL0045           ATS Weight Need
     C                     END                             *FI
      * FROZEN - allocate backwards - new for FP1054
      * CASE: PAR.Warehouse Type is Frozen
     C           YL0027    IFEQ 'FZ'                       *IF
     C                     MOVEL'B'       YL0071           Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           YL0028    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0029    WN0737           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0021    WN0737           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDWIJGDT    YL0060           Production Date
      * DOC:  Allocation
     C                     EXSR UISUBR                     DOC:  Allocatio
      * CASE: LCL.Allocation Method USR is Backward
     C           YL0071    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDWIJGDT    YL0070           Production Date
     C                     Z-ADDWIJGDT    YL0041           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           WIJGDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0070           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           WIJGDT    IFLT ##JDT                      *IF
     C                     Z-ADDWIJGDT    YL0060           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0056    IFEQ 'B'                        *IF
      * LCL.Production Date RGF = LCL.Production Date RGF + CON.1 *DAYS
     C           YL0070    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0070
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0070
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWIJGDT    YL0041           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           YL0041    IFGE YL0070                     *IF
     C           YL0044    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0070           Company Number
     C                     Z-ADDYL0041    WL0071           Post to G/L Dat
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0072    YL0061    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0137           Company Number
     C                     Z-ADDWIHGCD    WL0138           Item Code
     C                     Z-ADDYL0041    WL0139           Production Date
     C                     MOVELYL0062    WL0140    P      Production Day
     C                     EXSR TFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0140    YL0062    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0061    IFEQ 'Y'                        *IF
     C           YL0062    IFEQ *BLANK                     *IF
     C           YL0062    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           YL0041    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0730           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0141           Company Number
     C                     MOVELWN0730    WL0142    P      Production Type
     C                     Z-ADDYL0041    WL0143           Production Date
     C                     EXSR THRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0144    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0730           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           YL0041    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0730           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0145           Company Number
     C                     MOVELWN0730    WL0146    P      Production Type
     C                     Z-ADDYL0041    WL0147           Production Date
     C                     Z-ADDWIHGCD    WL0148           Item Code
     C                     MOVELWIAJCD    WL0149    P      Warehouse Code
     C                     Z-ADDWN0732    WL0151           ATS Weight Avai
     C                     Z-ADDWN0733    WL0152           ATS Pieces Avai
     C                     Z-ADDWN0737    WL0153           Chilling Time U
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0150    WN0738           PS Avg Piece Wg
     C                     Z-ADDWL0151    WN0732           ATS Weight Avai
     C                     Z-ADDWL0152    WN0733           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0024    IFEQ 'Y'                        *IF
     C           YL0025    IFGT 0                          *IF
     C           YL0026    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           YL0025    MULT YL0026    W0WJ01           *Synon (15,0) w
     C           WN0733    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0731           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'N'
     C           YL0020    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0732    DIV  YL0020    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0731           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0731           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           'OA'      IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0731    IFLT YL0044                     *IF
     C                     Z-ADDYL0044    WN0731           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0731    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           YL0044    IFGT WN0731                     *IF
     C                     ADD  WN0731    YL0042           Quantity Schedu
     C           WN0731    MULT YL0020    WN0732           ATS Weight Avai
     C                     ADD  WN0732    YL0043           Weight Schedule
     C                     Z-ADDWN0732    WN0735           Weight Allocate
     C                     Z-ADDWN0731    WN0734           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           YL0044    IFLE WN0731                     *IF
     C                     ADD  YL0044    YL0042           Quantity Schedu
     C           YL0044    MULT YL0020    YL0045           ATS Weight Need
     C                     ADD  YL0045    YL0043           Weight Schedule
     C                     Z-ADDYL0045    WN0735           Weight Allocate
     C                     Z-ADDYL0044    WN0734           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0734    IFGT 0                          *IF
      * 8/05/11 RMC MOVE UP HERE FROM BELOW ORDER DTL SCHED UPD
      * CASE: PAR.Piece Count Item is yes
     C           YL0024    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           WN0734    MULT YL0025    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT YL0026    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0736           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0736    MULT WN0738    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0735           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           WIAJCD    IFEQ WIAJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0154           Company Number
     C                     Z-ADDWIC4NB    WL0155           Order Number
     C                     Z-ADDWIDPNB    WL0156           Order Sequence
     C                     Z-ADDWIUENB    WL0157           Order Secondary
     C                     Z-ADDYL0041    WL0158           OD Production D
     C                     Z-ADDWHA5DT    WL0159           Scheduled Ship
     C                     MOVELWIAJCD    WL0160    P      Warehouse Code
     C                     MOVELWIAJCD    WL0161    P      Order From Ware
     C                     Z-ADDWIHGCD    WL0162           Item Code
     C                     Z-ADDWN0735    WL0163           Weight Allocate
     C                     Z-ADDWN0734    WL0164           Quantity Alloca
     C                     MOVELYL0022    WL0165    P      Base_Conv_Loss
     C                     EXSR TKRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           WIAJCD    IFNE WIAJCD                     *IF
      * FP1054 Use input Warehouse and co
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0176           Company Number
     C                     MOVELWN0730    WL0177    P      Production Type
     C                     Z-ADDYL0041    WL0178           Production Date
     C                     Z-ADDWIHGCD    WL0179           Item Code
     C                     MOVELWIAJCD    WL0180    P      Warehouse Code
     C                     Z-ADDWN0735    WL0181           Weight Allocate
     C                     Z-ADDWN0736    WL0182           Pieces Allocate
     C                     Z-ADDWIC4NB    WL0183           Order Number
     C                     Z-ADDWIDPNB    WL0184           Order Sequence
     C                     Z-ADDWIUENB    WL0185           Order Secondary
     C                     MOVEL'N'       WL0186    P      Status Flag 19
     C                     EXSR TMRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0274           Company Number
     C                     MOVELWN0730    WL0275    P      Production Type
     C                     Z-ADDYL0041    WL0276           Production Date
     C                     Z-ADDWIHGCD    WL0277           Item Code
     C                     MOVELWIAJCD    WL0278    P      Warehouse Code
     C                     Z-ADDWN0736    WL0279           Pieces Schedule
     C                     Z-ADDWN0735    WL0280           Weight Schedule
     C                     EXSR TQRVGN
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0281           Company Number
     C                     MOVELWN0730    WL0282    P      Production Type
     C                     Z-ADDYL0041    WL0283           Production Date
     C                     Z-ADDWIHGCD    WL0284           Item Code
     C                     MOVELWIAJCD    WL0285    P      Warehouse Code
     C                     Z-ADDWN0735    WL0286           Weight Allocate
     C                     Z-ADDWN0736    WL0287           Pieces Allocate
     C                     Z-ADDWIC4NB    WL0288           Order Number
     C                     Z-ADDWIDPNB    WL0289           Order Sequence
     C                     Z-ADDWIUENB    WL0290           Order Secondary
     C                     MOVEL'N'       WL0291    P      Status Flag 19
     C                     EXSR TSRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0734           Quantity Alloca
     C                     Z-ADD*ZERO     WN0735           Weight Allocate
     C                     Z-ADD*ZERO     YL0042           Quantity Schedu
     C                     Z-ADD*ZERO     YL0043           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     YL0042           Quantity Schedu
     C                     ADD  *ZERO     YL0043           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT 0                          *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0324           Company Number
     C                     Z-ADDYL0041    WL0325           Post to G/L Dat
     C                     Z-ADDYL0041    WL0327           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0328           *Duration (fact
     C                     EXSR NARVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0326    YL0041           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0329           Company Number
     C                     Z-ADDYL0041    WL0330           Post to G/L Dat
     C                     Z-ADDYL0041    WL0332           *Date2 (beginni
     C                     Z-ADD-1        WL0333           *Duration (fact
     C                     EXSR NBRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0331    YL0041           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ 0                          *IF
     C                     Z-ADDYL0041    YL0041           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           YL0037    SUB  YL0042    YL0044           ATS Quantity Ne
     C           YL0038    SUB  YL0043    YL0045           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           YL0037    SUB  YL0042    YL0044           ATS Quantity Ne
     C           YL0038    SUB  YL0043    YL0045           ATS Weight Need
     C                     END                             *FI
      * UPD Allocate Std      XF - /UT Inv. Interface Funcs  * 
     C                     CALL 'PDHMXFR'              90  UPD Allocate St
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WIAJCD    WQ0055  3        Warehouse Code
     C                     PARM WIAIC3    WQ0056  30       Company Number
     C                     PARM WIHGCD    WQ0057  70       Item Code
     C           YL0041    PARM YL0041    WQ0058  70       Production Date
     C                     PARM YL0019    WQ0059  2        UOM Primary
     C                     PARM YL0020    WQ0060 112       Unit Weight
     C                     PARM YL0021    WQ0061  52       Fresh Chilling
     C                     PARM YL0024    WQ0062  1        Piece Count Ite
     C                     PARM YL0025    WQ0063  70       Pieces Per Bag
     C                     PARM YL0026    WQ0064  70       Bags Per Unit
     C                     PARM YL0027    WQ0065  2        Warehouse Type
     C                     PARM YL0028    WQ0066  1        Warehouse Std C
     C                     PARM YL0029    WQ0067  52       Warehouse Chill
     C                     PARM WIC4NB    WQ0068  70       Order Number
     C                     PARM WIDPNB    WQ0069  30       Order Sequence
     C                     PARM WIUENB    WQ0070  30       Order Secondary
     C                     PARM WIJGDT    WQ0071  70       Production Date
     C                     PARM WIJGDT    WQ0072  70       Production Date
     C                     PARM YL0037    WQ0073 112       Quantity Ordere
     C                     PARM YL0038    WQ0074 112       Weight Ordered
     C           YL0042    PARM YL0042    WQ0075 112       Quantity Schedu
     C           YL0043    PARM YL0043    WQ0076 112       Weight Schedule
     C           YL0044    PARM YL0044    WQ0077 112       ATS Quantity Ne
     C           YL0045    PARM YL0045    WQ0078 112       ATS Weight Need
     C                     PARM WHA5DT    WQ0079  70       Ship Date USR
     C                     PARM 'AO'      WQ0080  2        ATS Adj Type US
     C                     PARM @CN,002   WQ0081 10        PSAA Program Na
     C                     PARM WIAYAA    WQ0082  3        Order From Ware
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDHMXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * If Base, allocated Production. If Converted, allocate Standard
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           YL0022    IFEQ 'B'                        *IF
      * Rtv Productin Whs     RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWIAJCD    WL0127    P      Warehouse Code
     C                     EXSR TARVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0128    YL0054    P      Production Ware
     C                     Z-ADDWL0129    YL0055           Accounting Comp
      *
     C                     MOVEL*BLANK    WN0742  1        Production Type
     C                     Z-ADD*ZERO     WN0743 110       ATS Quantity Av
     C                     Z-ADD*ZERO     WN0744 112       ATS Weight Avai
     C                     Z-ADD*ZERO     WN0745  70       ATS Pieces Avai
     C                     Z-ADD*ZERO     WN0746 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0747  92       Weight Allocate
     C                     Z-ADD*ZERO     WN0748  70       Pieces Allocate
     C                     Z-ADD*ZERO     WN0749  52       Chilling Time U
     C                     Z-ADD*ZERO     WN0750  92       PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0751  52       Production Yiel
     C                     Z-ADD*ZERO     WN0752  70       SM Pieces Need
     C                     Z-ADD*ZERO     WN0753 112       SM Weight Need
      *
      * UPD Allocate Prd      IF
      * documentation
     C                     EXSR UJSUBR                     documentation
      * CASE: PAR.PSAA Program Name is Sched as ordered-Override
     C           @CN,002   IFEQ @CN,002                    *IF
      * IF called from sched override routine, dont get block order flag
     C                     MOVEL*BLANK    YL0056           Block Order Fla
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Block Order Flag  RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0130           Company Number
     C                     Z-ADDWIC4NB    WL0131           Order Number
     C                     EXSR TBRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0132    YL0056    P      Block Order Fla
     C                     END                             *FI
      * FRESH - Alloc Forward / Backward per Item Allocation Method
      * CASE: PAR.Warehouse Type is Fresh
     C           YL0027    IFEQ 'FR'                       *IF
      * Rtv CIE Alloc Method  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0133           Company Number
     C                     Z-ADDWIHGCD    WL0134           Item Code
     C                     Z-ADDWIC4NB    WL0136           Order Number
     C                     EXSR TCRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0135    YL0057    P      Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           YL0028    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0029    WN0749           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0021    WN0749           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDWIJGDT    YL0060           Production Date
      * DOC:  Allocation
     C                     EXSR UKSUBR                     DOC:  Allocatio
      * CASE: Allocation Method is Forward - ASAP
      * CASE: LCL.Allocation Method is Forward - ASAP
     C           YL0057    IFEQ 'F'                        *IF
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           WIJGDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0041           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           WIJGDT    IFLT ##JDT                      *IF
     C                     Z-ADDWIJGDT    YL0060           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0056    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           YL0041    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0041
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0041
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWIJGDT    YL0041           Production Date
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           YL0041    IFEQ ##JDT                      *IF
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0056    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           YL0041    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0041
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0041
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte <= Prd Dte RGT & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date LE LCL.Production Date To
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           YL0041    IFLE YL0060                     *IF
     C           YL0044    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0070           Company Number
     C                     Z-ADDYL0041    WL0071           Post to G/L Dat
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0072    YL0061    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0137           Company Number
     C                     Z-ADDWIHGCD    WL0138           Item Code
     C                     Z-ADDYL0041    WL0139           Production Date
     C                     MOVELYL0062    WL0140    P      Production Day
     C                     EXSR TFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0140    YL0062    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0061    IFEQ 'Y'                        *IF
     C           YL0062    IFEQ *BLANK                     *IF
     C           YL0062    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           YL0041    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0742           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0141           Company Number
     C                     MOVELWN0742    WL0142    P      Production Type
     C                     Z-ADDYL0041    WL0143           Production Date
     C                     EXSR THRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0144    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0742           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           YL0041    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0742           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0145           Company Number
     C                     MOVELWN0742    WL0146    P      Production Type
     C                     Z-ADDYL0041    WL0147           Production Date
     C                     Z-ADDWIHGCD    WL0148           Item Code
     C                     MOVELWIAJCD    WL0149    P      Warehouse Code
     C                     Z-ADDWN0744    WL0151           ATS Weight Avai
     C                     Z-ADDWN0745    WL0152           ATS Pieces Avai
     C                     Z-ADDWN0749    WL0153           Chilling Time U
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0150    WN0750           PS Avg Piece Wg
     C                     Z-ADDWL0151    WN0744           ATS Weight Avai
     C                     Z-ADDWL0152    WN0745           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0024    IFEQ 'Y'                        *IF
     C           YL0025    IFGT 0                          *IF
     C           YL0026    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           YL0025    MULT YL0026    W0WJ01           *Synon (15,0) w
     C           WN0745    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0743           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'N'
     C           YL0020    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0744    DIV  YL0020    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0743           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0743           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           'AO'      IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0743    IFLT YL0044                     *IF
     C                     Z-ADDYL0044    WN0743           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0743    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           YL0044    IFGT WN0743                     *IF
     C                     ADD  WN0743    YL0042           Quantity Schedu
     C           WN0743    MULT YL0020    WN0744           ATS Weight Avai
     C                     ADD  WN0744    YL0043           Weight Schedule
     C                     Z-ADDWN0744    WN0747           Weight Allocate
     C                     Z-ADDWN0743    WN0746           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           YL0044    IFLE WN0743                     *IF
     C                     ADD  YL0044    YL0042           Quantity Schedu
     C           YL0044    MULT YL0020    YL0045           ATS Weight Need
     C                     ADD  YL0045    YL0043           Weight Schedule
     C                     Z-ADDYL0045    WN0747           Weight Allocate
     C                     Z-ADDYL0044    WN0746           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0746    IFGT 0                          *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           YL0024    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0746    MULT YL0025    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT YL0026    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0748           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0748    MULT WN0750    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0747           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           WIAJCD    IFEQ WIAJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0154           Company Number
     C                     Z-ADDWIC4NB    WL0155           Order Number
     C                     Z-ADDWIDPNB    WL0156           Order Sequence
     C                     Z-ADDWIUENB    WL0157           Order Secondary
     C                     Z-ADDYL0041    WL0158           OD Production D
     C                     Z-ADDWHA5DT    WL0159           Scheduled Ship
     C                     MOVELWIAJCD    WL0160    P      Warehouse Code
     C                     MOVELWIAJCD    WL0161    P      Order From Ware
     C                     Z-ADDWIHGCD    WL0162           Item Code
     C                     Z-ADDWN0747    WL0163           Weight Allocate
     C                     Z-ADDWN0746    WL0164           Quantity Alloca
     C                     MOVELYL0022    WL0165    P      Base_Conv_Loss
     C                     EXSR TKRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           WIAJCD    IFNE WIAJCD                     *IF
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           YL0022    IFEQ 'B'                        *IF
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0176           Company Number
     C                     MOVELWN0742    WL0177    P      Production Type
     C                     Z-ADDYL0041    WL0178           Production Date
     C                     Z-ADDWIHGCD    WL0179           Item Code
     C                     MOVELWIAJCD    WL0180    P      Warehouse Code
     C                     Z-ADDWN0747    WL0181           Weight Allocate
     C                     Z-ADDWN0748    WL0182           Pieces Allocate
     C                     Z-ADDWIC4NB    WL0183           Order Number
     C                     Z-ADDWIDPNB    WL0184           Order Sequence
     C                     Z-ADDWIUENB    WL0185           Order Secondary
     C                     MOVEL'N'       WL0186    P      Status Flag 19
     C                     EXSR TMRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0274           Company Number
     C                     MOVELWN0742    WL0275    P      Production Type
     C                     Z-ADDYL0041    WL0276           Production Date
     C                     Z-ADDWIHGCD    WL0277           Item Code
     C                     MOVELWIAJCD    WL0278    P      Warehouse Code
     C                     Z-ADDWN0748    WL0279           Pieces Schedule
     C                     Z-ADDWN0747    WL0280           Weight Schedule
     C                     EXSR TQRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0281           Company Number
     C                     MOVELWN0742    WL0282    P      Production Type
     C                     Z-ADDYL0041    WL0283           Production Date
     C                     Z-ADDWIHGCD    WL0284           Item Code
     C                     MOVELWIAJCD    WL0285    P      Warehouse Code
     C                     Z-ADDWN0747    WL0286           Weight Allocate
     C                     Z-ADDWN0748    WL0287           Pieces Allocate
     C                     Z-ADDWIC4NB    WL0288           Order Number
     C                     Z-ADDWIDPNB    WL0289           Order Sequence
     C                     Z-ADDWIUENB    WL0290           Order Secondary
     C                     MOVEL'N'       WL0291    P      Status Flag 19
     C                     EXSR TSRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0746           Quantity Alloca
     C                     Z-ADD*ZERO     WN0747           Weight Allocate
     C                     Z-ADD*ZERO     YL0042           Quantity Schedu
     C                     Z-ADD*ZERO     YL0043           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     YL0042           Quantity Schedu
     C                     ADD  *ZERO     YL0043           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           1         IFLT 0                          *IF
     C           1         MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0324           Company Number
     C                     Z-ADDYL0041    WL0325           Post to G/L Dat
     C                     Z-ADDYL0041    WL0327           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0328           *Duration (fact
     C                     EXSR NARVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0326    YL0041           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           1         IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0329           Company Number
     C                     Z-ADDYL0041    WL0330           Post to G/L Dat
     C                     Z-ADDYL0041    WL0332           *Date2 (beginni
     C                     Z-ADD1         WL0333           *Duration (fact
     C                     EXSR NBRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0331    YL0041           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           1         IFEQ 0                          *IF
     C                     Z-ADDYL0041    YL0041           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           YL0037    SUB  YL0042    YL0044           ATS Quantity Ne
     C           YL0038    SUB  YL0043    YL0045           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
      * CASE: Allocation Method is Backwards - JIT
      * CASE: LCL.Allocation Method is Backwards - JIT
     C           YL0057    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDWIJGDT    YL0070           Production Date
     C                     Z-ADDWIJGDT    YL0041           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           WIJGDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0070           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           WIJGDT    IFLT ##JDT                      *IF
     C                     Z-ADDWIJGDT    YL0060           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0056    IFEQ 'B'                        *IF
      * LCL.Production Date RGF = LCL.Production Date RGF + CON.1 *DAYS
     C           YL0070    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0070
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0070
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWIJGDT    YL0041           Production Date
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           YL0041    IFEQ ##JDT                      *IF
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0056    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           YL0041    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0041
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0041
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           YL0041    IFGE YL0070                     *IF
     C           YL0044    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0070           Company Number
     C                     Z-ADDYL0041    WL0071           Post to G/L Dat
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0072    YL0061    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0137           Company Number
     C                     Z-ADDWIHGCD    WL0138           Item Code
     C                     Z-ADDYL0041    WL0139           Production Date
     C                     MOVELYL0062    WL0140    P      Production Day
     C                     EXSR TFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0140    YL0062    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0061    IFEQ 'Y'                        *IF
     C           YL0062    IFEQ *BLANK                     *IF
     C           YL0062    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           YL0041    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0742           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0141           Company Number
     C                     MOVELWN0742    WL0142    P      Production Type
     C                     Z-ADDYL0041    WL0143           Production Date
     C                     EXSR THRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0144    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0742           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           YL0041    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0742           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0145           Company Number
     C                     MOVELWN0742    WL0146    P      Production Type
     C                     Z-ADDYL0041    WL0147           Production Date
     C                     Z-ADDWIHGCD    WL0148           Item Code
     C                     MOVELWIAJCD    WL0149    P      Warehouse Code
     C                     Z-ADDWN0744    WL0151           ATS Weight Avai
     C                     Z-ADDWN0745    WL0152           ATS Pieces Avai
     C                     Z-ADDWN0749    WL0153           Chilling Time U
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0150    WN0750           PS Avg Piece Wg
     C                     Z-ADDWL0151    WN0744           ATS Weight Avai
     C                     Z-ADDWL0152    WN0745           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0024    IFEQ 'Y'                        *IF
     C           YL0025    IFGT 0                          *IF
     C           YL0026    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           YL0025    MULT YL0026    W0WJ01           *Synon (15,0) w
     C           WN0745    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0743           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'N'
     C           YL0020    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0744    DIV  YL0020    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0743           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0743           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           'AO'      IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0743    IFLT YL0044                     *IF
     C                     Z-ADDYL0044    WN0743           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0743    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           YL0044    IFGT WN0743                     *IF
     C                     ADD  WN0743    YL0042           Quantity Schedu
     C           WN0743    MULT YL0020    WN0744           ATS Weight Avai
     C                     ADD  WN0744    YL0043           Weight Schedule
     C                     Z-ADDWN0744    WN0747           Weight Allocate
     C                     Z-ADDWN0743    WN0746           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           YL0044    IFLE WN0743                     *IF
     C                     ADD  YL0044    YL0042           Quantity Schedu
     C           YL0044    MULT YL0020    YL0045           ATS Weight Need
     C                     ADD  YL0045    YL0043           Weight Schedule
     C                     Z-ADDYL0045    WN0747           Weight Allocate
     C                     Z-ADDYL0044    WN0746           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0746    IFGT 0                          *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           YL0024    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0746    MULT YL0025    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT YL0026    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0748           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0748    MULT WN0750    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0747           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           WIAJCD    IFEQ WIAJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0154           Company Number
     C                     Z-ADDWIC4NB    WL0155           Order Number
     C                     Z-ADDWIDPNB    WL0156           Order Sequence
     C                     Z-ADDWIUENB    WL0157           Order Secondary
     C                     Z-ADDYL0041    WL0158           OD Production D
     C                     Z-ADDWHA5DT    WL0159           Scheduled Ship
     C                     MOVELWIAJCD    WL0160    P      Warehouse Code
     C                     MOVELWIAJCD    WL0161    P      Order From Ware
     C                     Z-ADDWIHGCD    WL0162           Item Code
     C                     Z-ADDWN0747    WL0163           Weight Allocate
     C                     Z-ADDWN0746    WL0164           Quantity Alloca
     C                     MOVELYL0022    WL0165    P      Base_Conv_Loss
     C                     EXSR TKRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           WIAJCD    IFNE WIAJCD                     *IF
      * FP1054 Use input Warehouse and co
      * FOR BASE ONLY  6/02/09 maybe
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           YL0022    IFEQ 'B'                        *IF
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0176           Company Number
     C                     MOVELWN0742    WL0177    P      Production Type
     C                     Z-ADDYL0041    WL0178           Production Date
     C                     Z-ADDWIHGCD    WL0179           Item Code
     C                     MOVELWIAJCD    WL0180    P      Warehouse Code
     C                     Z-ADDWN0747    WL0181           Weight Allocate
     C                     Z-ADDWN0748    WL0182           Pieces Allocate
     C                     Z-ADDWIC4NB    WL0183           Order Number
     C                     Z-ADDWIDPNB    WL0184           Order Sequence
     C                     Z-ADDWIUENB    WL0185           Order Secondary
     C                     MOVEL'N'       WL0186    P      Status Flag 19
     C                     EXSR TMRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0274           Company Number
     C                     MOVELWN0742    WL0275    P      Production Type
     C                     Z-ADDYL0041    WL0276           Production Date
     C                     Z-ADDWIHGCD    WL0277           Item Code
     C                     MOVELWIAJCD    WL0278    P      Warehouse Code
     C                     Z-ADDWN0748    WL0279           Pieces Schedule
     C                     Z-ADDWN0747    WL0280           Weight Schedule
     C                     EXSR TQRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0281           Company Number
     C                     MOVELWN0742    WL0282    P      Production Type
     C                     Z-ADDYL0041    WL0283           Production Date
     C                     Z-ADDWIHGCD    WL0284           Item Code
     C                     MOVELWIAJCD    WL0285    P      Warehouse Code
     C                     Z-ADDWN0747    WL0286           Weight Allocate
     C                     Z-ADDWN0748    WL0287           Pieces Allocate
     C                     Z-ADDWIC4NB    WL0288           Order Number
     C                     Z-ADDWIDPNB    WL0289           Order Sequence
     C                     Z-ADDWIUENB    WL0290           Order Secondary
     C                     MOVEL'N'       WL0291    P      Status Flag 19
     C                     EXSR TSRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0746           Quantity Alloca
     C                     Z-ADD*ZERO     WN0747           Weight Allocate
     C                     Z-ADD*ZERO     YL0042           Quantity Schedu
     C                     Z-ADD*ZERO     YL0043           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     YL0042           Quantity Schedu
     C                     ADD  *ZERO     YL0043           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT 0                          *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0324           Company Number
     C                     Z-ADDYL0041    WL0325           Post to G/L Dat
     C                     Z-ADDYL0041    WL0327           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0328           *Duration (fact
     C                     EXSR NARVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0326    YL0041           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0329           Company Number
     C                     Z-ADDYL0041    WL0330           Post to G/L Dat
     C                     Z-ADDYL0041    WL0332           *Date2 (beginni
     C                     Z-ADD-1        WL0333           *Duration (fact
     C                     EXSR NBRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0331    YL0041           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ 0                          *IF
     C                     Z-ADDYL0041    YL0041           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           YL0037    SUB  YL0042    YL0044           ATS Quantity Ne
     C           YL0038    SUB  YL0043    YL0045           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           YL0037    SUB  YL0042    YL0044           ATS Quantity Ne
     C           YL0038    SUB  YL0043    YL0045           ATS Weight Need
     C                     END                             *FI
      * FROZEN - allocate backwards - new for FP1054
      * CASE: PAR.Warehouse Type is Frozen
     C           YL0027    IFEQ 'FZ'                       *IF
     C                     MOVEL'B'       YL0071           Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           YL0028    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0029    WN0749           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0021    WN0749           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDWIJGDT    YL0060           Production Date
      * DOC:  Allocation
     C                     EXSR ULSUBR                     DOC:  Allocatio
      * CASE: LCL.Allocation Method USR is Backward
     C           YL0071    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDWIJGDT    YL0070           Production Date
     C                     Z-ADDWIJGDT    YL0041           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           WIJGDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0070           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           WIJGDT    IFLT ##JDT                      *IF
     C                     Z-ADDWIJGDT    YL0060           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0056    IFEQ 'B'                        *IF
      * LCL.Production Date RGF = LCL.Production Date RGF + CON.1 *DAYS
     C           YL0070    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0070
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0070
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWIJGDT    YL0041           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           YL0041    IFGE YL0070                     *IF
     C           YL0044    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0070           Company Number
     C                     Z-ADDYL0041    WL0071           Post to G/L Dat
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0072    YL0061    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0137           Company Number
     C                     Z-ADDWIHGCD    WL0138           Item Code
     C                     Z-ADDYL0041    WL0139           Production Date
     C                     MOVELYL0062    WL0140    P      Production Day
     C                     EXSR TFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0140    YL0062    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0061    IFEQ 'Y'                        *IF
     C           YL0062    IFEQ *BLANK                     *IF
     C           YL0062    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           YL0041    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0742           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0141           Company Number
     C                     MOVELWN0742    WL0142    P      Production Type
     C                     Z-ADDYL0041    WL0143           Production Date
     C                     EXSR THRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0144    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0742           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           YL0041    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0742           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0145           Company Number
     C                     MOVELWN0742    WL0146    P      Production Type
     C                     Z-ADDYL0041    WL0147           Production Date
     C                     Z-ADDWIHGCD    WL0148           Item Code
     C                     MOVELWIAJCD    WL0149    P      Warehouse Code
     C                     Z-ADDWN0744    WL0151           ATS Weight Avai
     C                     Z-ADDWN0745    WL0152           ATS Pieces Avai
     C                     Z-ADDWN0749    WL0153           Chilling Time U
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0150    WN0750           PS Avg Piece Wg
     C                     Z-ADDWL0151    WN0744           ATS Weight Avai
     C                     Z-ADDWL0152    WN0745           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0024    IFEQ 'Y'                        *IF
     C           YL0025    IFGT 0                          *IF
     C           YL0026    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           YL0025    MULT YL0026    W0WJ01           *Synon (15,0) w
     C           WN0745    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0743           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'N'
     C           YL0020    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0744    DIV  YL0020    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0743           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0743           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           'AO'      IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0743    IFLT YL0044                     *IF
     C                     Z-ADDYL0044    WN0743           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0743    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           YL0044    IFGT WN0743                     *IF
     C                     ADD  WN0743    YL0042           Quantity Schedu
     C           WN0743    MULT YL0020    WN0744           ATS Weight Avai
     C                     ADD  WN0744    YL0043           Weight Schedule
     C                     Z-ADDWN0744    WN0747           Weight Allocate
     C                     Z-ADDWN0743    WN0746           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           YL0044    IFLE WN0743                     *IF
     C                     ADD  YL0044    YL0042           Quantity Schedu
     C           YL0044    MULT YL0020    YL0045           ATS Weight Need
     C                     ADD  YL0045    YL0043           Weight Schedule
     C                     Z-ADDYL0045    WN0747           Weight Allocate
     C                     Z-ADDYL0044    WN0746           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0746    IFGT 0                          *IF
      * 8/05/11 RMC MOVE UP HERE FROM BELOW ORDER DTL SCHED UPD
      * CASE: PAR.Piece Count Item is yes
     C           YL0024    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           WN0746    MULT YL0025    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT YL0026    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0748           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0748    MULT WN0750    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0747           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           WIAJCD    IFEQ WIAJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0154           Company Number
     C                     Z-ADDWIC4NB    WL0155           Order Number
     C                     Z-ADDWIDPNB    WL0156           Order Sequence
     C                     Z-ADDWIUENB    WL0157           Order Secondary
     C                     Z-ADDYL0041    WL0158           OD Production D
     C                     Z-ADDWHA5DT    WL0159           Scheduled Ship
     C                     MOVELWIAJCD    WL0160    P      Warehouse Code
     C                     MOVELWIAJCD    WL0161    P      Order From Ware
     C                     Z-ADDWIHGCD    WL0162           Item Code
     C                     Z-ADDWN0747    WL0163           Weight Allocate
     C                     Z-ADDWN0746    WL0164           Quantity Alloca
     C                     MOVELYL0022    WL0165    P      Base_Conv_Loss
     C                     EXSR TKRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           WIAJCD    IFNE WIAJCD                     *IF
      * FP1054 Use input Warehouse and co
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0176           Company Number
     C                     MOVELWN0742    WL0177    P      Production Type
     C                     Z-ADDYL0041    WL0178           Production Date
     C                     Z-ADDWIHGCD    WL0179           Item Code
     C                     MOVELWIAJCD    WL0180    P      Warehouse Code
     C                     Z-ADDWN0747    WL0181           Weight Allocate
     C                     Z-ADDWN0748    WL0182           Pieces Allocate
     C                     Z-ADDWIC4NB    WL0183           Order Number
     C                     Z-ADDWIDPNB    WL0184           Order Sequence
     C                     Z-ADDWIUENB    WL0185           Order Secondary
     C                     MOVEL'N'       WL0186    P      Status Flag 19
     C                     EXSR TMRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0274           Company Number
     C                     MOVELWN0742    WL0275    P      Production Type
     C                     Z-ADDYL0041    WL0276           Production Date
     C                     Z-ADDWIHGCD    WL0277           Item Code
     C                     MOVELWIAJCD    WL0278    P      Warehouse Code
     C                     Z-ADDWN0748    WL0279           Pieces Schedule
     C                     Z-ADDWN0747    WL0280           Weight Schedule
     C                     EXSR TQRVGN
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0281           Company Number
     C                     MOVELWN0742    WL0282    P      Production Type
     C                     Z-ADDYL0041    WL0283           Production Date
     C                     Z-ADDWIHGCD    WL0284           Item Code
     C                     MOVELWIAJCD    WL0285    P      Warehouse Code
     C                     Z-ADDWN0747    WL0286           Weight Allocate
     C                     Z-ADDWN0748    WL0287           Pieces Allocate
     C                     Z-ADDWIC4NB    WL0288           Order Number
     C                     Z-ADDWIDPNB    WL0289           Order Sequence
     C                     Z-ADDWIUENB    WL0290           Order Secondary
     C                     MOVEL'N'       WL0291    P      Status Flag 19
     C                     EXSR TSRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0746           Quantity Alloca
     C                     Z-ADD*ZERO     WN0747           Weight Allocate
     C                     Z-ADD*ZERO     YL0042           Quantity Schedu
     C                     Z-ADD*ZERO     YL0043           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     YL0042           Quantity Schedu
     C                     ADD  *ZERO     YL0043           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT 0                          *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0324           Company Number
     C                     Z-ADDYL0041    WL0325           Post to G/L Dat
     C                     Z-ADDYL0041    WL0327           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0328           *Duration (fact
     C                     EXSR NARVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0326    YL0041           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0329           Company Number
     C                     Z-ADDYL0041    WL0330           Post to G/L Dat
     C                     Z-ADDYL0041    WL0332           *Date2 (beginni
     C                     Z-ADD-1        WL0333           *Duration (fact
     C                     EXSR NBRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0331    YL0041           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ 0                          *IF
     C                     Z-ADDYL0041    YL0041           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           YL0037    SUB  YL0042    YL0044           ATS Quantity Ne
     C           YL0038    SUB  YL0043    YL0045           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           YL0037    SUB  YL0042    YL0044           ATS Quantity Ne
     C           YL0038    SUB  YL0043    YL0045           ATS Weight Need
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Base/Conv/Loss Item is Converted/Fabricated
     C           YL0022    IFEQ 'C'                        *IF
     C           YL0022    OREQ 'F'
      * rmc added this 11/11/09
      *
     C                     MOVEL*BLANK    WN0754  1        Production Type
     C                     Z-ADD*ZERO     WN0755 110       ATS Quantity Av
     C                     Z-ADD*ZERO     WN0756 112       ATS Weight Avai
     C                     Z-ADD*ZERO     WN0757  70       ATS Pieces Avai
     C                     Z-ADD*ZERO     WN0758 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0759  92       Weight Allocate
     C                     Z-ADD*ZERO     WN0760  70       Pieces Allocate
     C                     Z-ADD*ZERO     WN0761  52       Chilling Time U
     C                     Z-ADD*ZERO     WN0762  92       PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0763  52       Production Yiel
     C                     Z-ADD*ZERO     WN0764  70       SM Pieces Need
     C                     Z-ADD*ZERO     WN0765 112       SM Weight Need
      *
      * UPD Allocate Prd      IF
      * documentation
     C                     EXSR UMSUBR                     documentation
      * CASE: PAR.PSAA Program Name is Sched as ordered-Override
     C           @CN,002   IFEQ @CN,002                    *IF
      * IF called from sched override routine, dont get block order flag
     C                     MOVEL*BLANK    YL0056           Block Order Fla
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Block Order Flag  RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0130           Company Number
     C                     Z-ADDWIC4NB    WL0131           Order Number
     C                     EXSR TBRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0132    YL0056    P      Block Order Fla
     C                     END                             *FI
      * FRESH - Alloc Forward / Backward per Item Allocation Method
      * CASE: PAR.Warehouse Type is Fresh
     C           YL0027    IFEQ 'FR'                       *IF
      * Rtv CIE Alloc Method  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0133           Company Number
     C                     Z-ADDWIHGCD    WL0134           Item Code
     C                     Z-ADDWIC4NB    WL0136           Order Number
     C                     EXSR TCRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0135    YL0057    P      Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           YL0028    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0029    WN0761           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0021    WN0761           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDWIJGDT    YL0060           Production Date
      * DOC:  Allocation
     C                     EXSR UNSUBR                     DOC:  Allocatio
      * CASE: Allocation Method is Forward - ASAP
      * CASE: LCL.Allocation Method is Forward - ASAP
     C           YL0057    IFEQ 'F'                        *IF
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           WIJGDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0041           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           WIJGDT    IFLT ##JDT                      *IF
     C                     Z-ADDWIJGDT    YL0060           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0056    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           YL0041    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0041
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0041
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWIJGDT    YL0041           Production Date
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           YL0041    IFEQ ##JDT                      *IF
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0056    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           YL0041    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0041
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0041
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte <= Prd Dte RGT & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date LE LCL.Production Date To
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           YL0041    IFLE YL0060                     *IF
     C           YL0044    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0070           Company Number
     C                     Z-ADDYL0041    WL0071           Post to G/L Dat
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0072    YL0061    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0137           Company Number
     C                     Z-ADDWIHGCD    WL0138           Item Code
     C                     Z-ADDYL0041    WL0139           Production Date
     C                     MOVELYL0062    WL0140    P      Production Day
     C                     EXSR TFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0140    YL0062    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0061    IFEQ 'Y'                        *IF
     C           YL0062    IFEQ *BLANK                     *IF
     C           YL0062    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           YL0041    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0754           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0141           Company Number
     C                     MOVELWN0754    WL0142    P      Production Type
     C                     Z-ADDYL0041    WL0143           Production Date
     C                     EXSR THRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0144    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0754           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           YL0041    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0754           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0145           Company Number
     C                     MOVELWN0754    WL0146    P      Production Type
     C                     Z-ADDYL0041    WL0147           Production Date
     C                     Z-ADDWIHGCD    WL0148           Item Code
     C                     MOVELWIAJCD    WL0149    P      Warehouse Code
     C                     Z-ADDWN0756    WL0151           ATS Weight Avai
     C                     Z-ADDWN0757    WL0152           ATS Pieces Avai
     C                     Z-ADDWN0761    WL0153           Chilling Time U
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0150    WN0762           PS Avg Piece Wg
     C                     Z-ADDWL0151    WN0756           ATS Weight Avai
     C                     Z-ADDWL0152    WN0757           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0024    IFEQ 'Y'                        *IF
     C           YL0025    IFGT 0                          *IF
     C           YL0026    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           YL0025    MULT YL0026    W0WJ01           *Synon (15,0) w
     C           WN0757    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0755           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'N'
     C           YL0020    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0756    DIV  YL0020    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0755           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0755           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           'OA'      IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0755    IFLT YL0044                     *IF
     C                     Z-ADDYL0044    WN0755           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0755    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           YL0044    IFGT WN0755                     *IF
     C                     ADD  WN0755    YL0042           Quantity Schedu
     C           WN0755    MULT YL0020    WN0756           ATS Weight Avai
     C                     ADD  WN0756    YL0043           Weight Schedule
     C                     Z-ADDWN0756    WN0759           Weight Allocate
     C                     Z-ADDWN0755    WN0758           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           YL0044    IFLE WN0755                     *IF
     C                     ADD  YL0044    YL0042           Quantity Schedu
     C           YL0044    MULT YL0020    YL0045           ATS Weight Need
     C                     ADD  YL0045    YL0043           Weight Schedule
     C                     Z-ADDYL0045    WN0759           Weight Allocate
     C                     Z-ADDYL0044    WN0758           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0758    IFGT 0                          *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           YL0024    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0758    MULT YL0025    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT YL0026    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0760           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0760    MULT WN0762    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0759           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           WIAJCD    IFEQ WIAJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0154           Company Number
     C                     Z-ADDWIC4NB    WL0155           Order Number
     C                     Z-ADDWIDPNB    WL0156           Order Sequence
     C                     Z-ADDWIUENB    WL0157           Order Secondary
     C                     Z-ADDYL0041    WL0158           OD Production D
     C                     Z-ADDWHA5DT    WL0159           Scheduled Ship
     C                     MOVELWIAJCD    WL0160    P      Warehouse Code
     C                     MOVELWIAJCD    WL0161    P      Order From Ware
     C                     Z-ADDWIHGCD    WL0162           Item Code
     C                     Z-ADDWN0759    WL0163           Weight Allocate
     C                     Z-ADDWN0758    WL0164           Quantity Alloca
     C                     MOVELYL0022    WL0165    P      Base_Conv_Loss
     C                     EXSR TKRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           WIAJCD    IFNE WIAJCD                     *IF
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           YL0022    IFEQ 'B'                        *IF
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0176           Company Number
     C                     MOVELWN0754    WL0177    P      Production Type
     C                     Z-ADDYL0041    WL0178           Production Date
     C                     Z-ADDWIHGCD    WL0179           Item Code
     C                     MOVELWIAJCD    WL0180    P      Warehouse Code
     C                     Z-ADDWN0759    WL0181           Weight Allocate
     C                     Z-ADDWN0760    WL0182           Pieces Allocate
     C                     Z-ADDWIC4NB    WL0183           Order Number
     C                     Z-ADDWIDPNB    WL0184           Order Sequence
     C                     Z-ADDWIUENB    WL0185           Order Secondary
     C                     MOVEL'N'       WL0186    P      Status Flag 19
     C                     EXSR TMRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0274           Company Number
     C                     MOVELWN0754    WL0275    P      Production Type
     C                     Z-ADDYL0041    WL0276           Production Date
     C                     Z-ADDWIHGCD    WL0277           Item Code
     C                     MOVELWIAJCD    WL0278    P      Warehouse Code
     C                     Z-ADDWN0760    WL0279           Pieces Schedule
     C                     Z-ADDWN0759    WL0280           Weight Schedule
     C                     EXSR TQRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0281           Company Number
     C                     MOVELWN0754    WL0282    P      Production Type
     C                     Z-ADDYL0041    WL0283           Production Date
     C                     Z-ADDWIHGCD    WL0284           Item Code
     C                     MOVELWIAJCD    WL0285    P      Warehouse Code
     C                     Z-ADDWN0759    WL0286           Weight Allocate
     C                     Z-ADDWN0760    WL0287           Pieces Allocate
     C                     Z-ADDWIC4NB    WL0288           Order Number
     C                     Z-ADDWIDPNB    WL0289           Order Sequence
     C                     Z-ADDWIUENB    WL0290           Order Secondary
     C                     MOVEL'N'       WL0291    P      Status Flag 19
     C                     EXSR TSRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0758           Quantity Alloca
     C                     Z-ADD*ZERO     WN0759           Weight Allocate
     C                     Z-ADD*ZERO     YL0042           Quantity Schedu
     C                     Z-ADD*ZERO     YL0043           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     YL0042           Quantity Schedu
     C                     ADD  *ZERO     YL0043           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           1         IFLT 0                          *IF
     C           1         MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0324           Company Number
     C                     Z-ADDYL0041    WL0325           Post to G/L Dat
     C                     Z-ADDYL0041    WL0327           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0328           *Duration (fact
     C                     EXSR NARVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0326    YL0041           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           1         IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0329           Company Number
     C                     Z-ADDYL0041    WL0330           Post to G/L Dat
     C                     Z-ADDYL0041    WL0332           *Date2 (beginni
     C                     Z-ADD1         WL0333           *Duration (fact
     C                     EXSR NBRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0331    YL0041           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           1         IFEQ 0                          *IF
     C                     Z-ADDYL0041    YL0041           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           YL0037    SUB  YL0042    YL0044           ATS Quantity Ne
     C           YL0038    SUB  YL0043    YL0045           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
      * CASE: Allocation Method is Backwards - JIT
      * CASE: LCL.Allocation Method is Backwards - JIT
     C           YL0057    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDWIJGDT    YL0070           Production Date
     C                     Z-ADDWIJGDT    YL0041           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           WIJGDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0070           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           WIJGDT    IFLT ##JDT                      *IF
     C                     Z-ADDWIJGDT    YL0060           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0056    IFEQ 'B'                        *IF
      * LCL.Production Date RGF = LCL.Production Date RGF + CON.1 *DAYS
     C           YL0070    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0070
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0070
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWIJGDT    YL0041           Production Date
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           YL0041    IFEQ ##JDT                      *IF
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0056    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           YL0041    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0041
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0041
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           YL0041    IFGE YL0070                     *IF
     C           YL0044    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0070           Company Number
     C                     Z-ADDYL0041    WL0071           Post to G/L Dat
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0072    YL0061    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0137           Company Number
     C                     Z-ADDWIHGCD    WL0138           Item Code
     C                     Z-ADDYL0041    WL0139           Production Date
     C                     MOVELYL0062    WL0140    P      Production Day
     C                     EXSR TFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0140    YL0062    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0061    IFEQ 'Y'                        *IF
     C           YL0062    IFEQ *BLANK                     *IF
     C           YL0062    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           YL0041    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0754           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0141           Company Number
     C                     MOVELWN0754    WL0142    P      Production Type
     C                     Z-ADDYL0041    WL0143           Production Date
     C                     EXSR THRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0144    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0754           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           YL0041    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0754           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0145           Company Number
     C                     MOVELWN0754    WL0146    P      Production Type
     C                     Z-ADDYL0041    WL0147           Production Date
     C                     Z-ADDWIHGCD    WL0148           Item Code
     C                     MOVELWIAJCD    WL0149    P      Warehouse Code
     C                     Z-ADDWN0756    WL0151           ATS Weight Avai
     C                     Z-ADDWN0757    WL0152           ATS Pieces Avai
     C                     Z-ADDWN0761    WL0153           Chilling Time U
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0150    WN0762           PS Avg Piece Wg
     C                     Z-ADDWL0151    WN0756           ATS Weight Avai
     C                     Z-ADDWL0152    WN0757           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0024    IFEQ 'Y'                        *IF
     C           YL0025    IFGT 0                          *IF
     C           YL0026    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           YL0025    MULT YL0026    W0WJ01           *Synon (15,0) w
     C           WN0757    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0755           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'N'
     C           YL0020    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0756    DIV  YL0020    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0755           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0755           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           'OA'      IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0755    IFLT YL0044                     *IF
     C                     Z-ADDYL0044    WN0755           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0755    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           YL0044    IFGT WN0755                     *IF
     C                     ADD  WN0755    YL0042           Quantity Schedu
     C           WN0755    MULT YL0020    WN0756           ATS Weight Avai
     C                     ADD  WN0756    YL0043           Weight Schedule
     C                     Z-ADDWN0756    WN0759           Weight Allocate
     C                     Z-ADDWN0755    WN0758           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           YL0044    IFLE WN0755                     *IF
     C                     ADD  YL0044    YL0042           Quantity Schedu
     C           YL0044    MULT YL0020    YL0045           ATS Weight Need
     C                     ADD  YL0045    YL0043           Weight Schedule
     C                     Z-ADDYL0045    WN0759           Weight Allocate
     C                     Z-ADDYL0044    WN0758           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0758    IFGT 0                          *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           YL0024    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0758    MULT YL0025    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT YL0026    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0760           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0760    MULT WN0762    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0759           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           WIAJCD    IFEQ WIAJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0154           Company Number
     C                     Z-ADDWIC4NB    WL0155           Order Number
     C                     Z-ADDWIDPNB    WL0156           Order Sequence
     C                     Z-ADDWIUENB    WL0157           Order Secondary
     C                     Z-ADDYL0041    WL0158           OD Production D
     C                     Z-ADDWHA5DT    WL0159           Scheduled Ship
     C                     MOVELWIAJCD    WL0160    P      Warehouse Code
     C                     MOVELWIAJCD    WL0161    P      Order From Ware
     C                     Z-ADDWIHGCD    WL0162           Item Code
     C                     Z-ADDWN0759    WL0163           Weight Allocate
     C                     Z-ADDWN0758    WL0164           Quantity Alloca
     C                     MOVELYL0022    WL0165    P      Base_Conv_Loss
     C                     EXSR TKRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           WIAJCD    IFNE WIAJCD                     *IF
      * FP1054 Use input Warehouse and co
      * FOR BASE ONLY  6/02/09 maybe
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           YL0022    IFEQ 'B'                        *IF
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0176           Company Number
     C                     MOVELWN0754    WL0177    P      Production Type
     C                     Z-ADDYL0041    WL0178           Production Date
     C                     Z-ADDWIHGCD    WL0179           Item Code
     C                     MOVELWIAJCD    WL0180    P      Warehouse Code
     C                     Z-ADDWN0759    WL0181           Weight Allocate
     C                     Z-ADDWN0760    WL0182           Pieces Allocate
     C                     Z-ADDWIC4NB    WL0183           Order Number
     C                     Z-ADDWIDPNB    WL0184           Order Sequence
     C                     Z-ADDWIUENB    WL0185           Order Secondary
     C                     MOVEL'N'       WL0186    P      Status Flag 19
     C                     EXSR TMRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0274           Company Number
     C                     MOVELWN0754    WL0275    P      Production Type
     C                     Z-ADDYL0041    WL0276           Production Date
     C                     Z-ADDWIHGCD    WL0277           Item Code
     C                     MOVELWIAJCD    WL0278    P      Warehouse Code
     C                     Z-ADDWN0760    WL0279           Pieces Schedule
     C                     Z-ADDWN0759    WL0280           Weight Schedule
     C                     EXSR TQRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0281           Company Number
     C                     MOVELWN0754    WL0282    P      Production Type
     C                     Z-ADDYL0041    WL0283           Production Date
     C                     Z-ADDWIHGCD    WL0284           Item Code
     C                     MOVELWIAJCD    WL0285    P      Warehouse Code
     C                     Z-ADDWN0759    WL0286           Weight Allocate
     C                     Z-ADDWN0760    WL0287           Pieces Allocate
     C                     Z-ADDWIC4NB    WL0288           Order Number
     C                     Z-ADDWIDPNB    WL0289           Order Sequence
     C                     Z-ADDWIUENB    WL0290           Order Secondary
     C                     MOVEL'N'       WL0291    P      Status Flag 19
     C                     EXSR TSRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0758           Quantity Alloca
     C                     Z-ADD*ZERO     WN0759           Weight Allocate
     C                     Z-ADD*ZERO     YL0042           Quantity Schedu
     C                     Z-ADD*ZERO     YL0043           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     YL0042           Quantity Schedu
     C                     ADD  *ZERO     YL0043           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT 0                          *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0324           Company Number
     C                     Z-ADDYL0041    WL0325           Post to G/L Dat
     C                     Z-ADDYL0041    WL0327           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0328           *Duration (fact
     C                     EXSR NARVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0326    YL0041           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0329           Company Number
     C                     Z-ADDYL0041    WL0330           Post to G/L Dat
     C                     Z-ADDYL0041    WL0332           *Date2 (beginni
     C                     Z-ADD-1        WL0333           *Duration (fact
     C                     EXSR NBRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0331    YL0041           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ 0                          *IF
     C                     Z-ADDYL0041    YL0041           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           YL0037    SUB  YL0042    YL0044           ATS Quantity Ne
     C           YL0038    SUB  YL0043    YL0045           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           YL0037    SUB  YL0042    YL0044           ATS Quantity Ne
     C           YL0038    SUB  YL0043    YL0045           ATS Weight Need
     C                     END                             *FI
      * FROZEN - allocate backwards - new for FP1054
      * CASE: PAR.Warehouse Type is Frozen
     C           YL0027    IFEQ 'FZ'                       *IF
     C                     MOVEL'B'       YL0071           Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           YL0028    IFEQ 'Y'                        *IF
     C                     Z-ADDYL0029    WN0761           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0021    WN0761           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDWIJGDT    YL0060           Production Date
      * DOC:  Allocation
     C                     EXSR UOSUBR                     DOC:  Allocatio
      * CASE: LCL.Allocation Method USR is Backward
     C           YL0071    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDWIJGDT    YL0070           Production Date
     C                     Z-ADDWIJGDT    YL0041           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           WIJGDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0070           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           WIJGDT    IFLT ##JDT                      *IF
     C                     Z-ADDWIJGDT    YL0060           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0056    IFEQ 'B'                        *IF
      * LCL.Production Date RGF = LCL.Production Date RGF + CON.1 *DAYS
     C           YL0070    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0070
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0070
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWIJGDT    YL0041           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           YL0041    IFGE YL0070                     *IF
     C           YL0044    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0070           Company Number
     C                     Z-ADDYL0041    WL0071           Post to G/L Dat
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0072    YL0061    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0137           Company Number
     C                     Z-ADDWIHGCD    WL0138           Item Code
     C                     Z-ADDYL0041    WL0139           Production Date
     C                     MOVELYL0062    WL0140    P      Production Day
     C                     EXSR TFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0140    YL0062    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0061    IFEQ 'Y'                        *IF
     C           YL0062    IFEQ *BLANK                     *IF
     C           YL0062    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           YL0041    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0754           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0141           Company Number
     C                     MOVELWN0754    WL0142    P      Production Type
     C                     Z-ADDYL0041    WL0143           Production Date
     C                     EXSR THRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0144    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0754           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           YL0041    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0754           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0145           Company Number
     C                     MOVELWN0754    WL0146    P      Production Type
     C                     Z-ADDYL0041    WL0147           Production Date
     C                     Z-ADDWIHGCD    WL0148           Item Code
     C                     MOVELWIAJCD    WL0149    P      Warehouse Code
     C                     Z-ADDWN0756    WL0151           ATS Weight Avai
     C                     Z-ADDWN0757    WL0152           ATS Pieces Avai
     C                     Z-ADDWN0761    WL0153           Chilling Time U
     C                     EXSR TIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0150    WN0762           PS Avg Piece Wg
     C                     Z-ADDWL0151    WN0756           ATS Weight Avai
     C                     Z-ADDWL0152    WN0757           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0024    IFEQ 'Y'                        *IF
     C           YL0025    IFGT 0                          *IF
     C           YL0026    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           YL0025    MULT YL0026    W0WJ01           *Synon (15,0) w
     C           WN0757    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0755           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'N'
     C           YL0020    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0756    DIV  YL0020    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0755           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0755           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           'OA'      IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0755    IFLT YL0044                     *IF
     C                     Z-ADDYL0044    WN0755           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0755    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           YL0044    IFGT WN0755                     *IF
     C                     ADD  WN0755    YL0042           Quantity Schedu
     C           WN0755    MULT YL0020    WN0756           ATS Weight Avai
     C                     ADD  WN0756    YL0043           Weight Schedule
     C                     Z-ADDWN0756    WN0759           Weight Allocate
     C                     Z-ADDWN0755    WN0758           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           YL0044    IFLE WN0755                     *IF
     C                     ADD  YL0044    YL0042           Quantity Schedu
     C           YL0044    MULT YL0020    YL0045           ATS Weight Need
     C                     ADD  YL0045    YL0043           Weight Schedule
     C                     Z-ADDYL0045    WN0759           Weight Allocate
     C                     Z-ADDYL0044    WN0758           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0758    IFGT 0                          *IF
      * 8/05/11 RMC MOVE UP HERE FROM BELOW ORDER DTL SCHED UPD
      * CASE: PAR.Piece Count Item is yes
     C           YL0024    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           WN0758    MULT YL0025    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT YL0026    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0760           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0760    MULT WN0762    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0759           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           WIAJCD    IFEQ WIAJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0154           Company Number
     C                     Z-ADDWIC4NB    WL0155           Order Number
     C                     Z-ADDWIDPNB    WL0156           Order Sequence
     C                     Z-ADDWIUENB    WL0157           Order Secondary
     C                     Z-ADDYL0041    WL0158           OD Production D
     C                     Z-ADDWHA5DT    WL0159           Scheduled Ship
     C                     MOVELWIAJCD    WL0160    P      Warehouse Code
     C                     MOVELWIAJCD    WL0161    P      Order From Ware
     C                     Z-ADDWIHGCD    WL0162           Item Code
     C                     Z-ADDWN0759    WL0163           Weight Allocate
     C                     Z-ADDWN0758    WL0164           Quantity Alloca
     C                     MOVELYL0022    WL0165    P      Base_Conv_Loss
     C                     EXSR TKRVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           WIAJCD    IFNE WIAJCD                     *IF
      * FP1054 Use input Warehouse and co
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0176           Company Number
     C                     MOVELWN0754    WL0177    P      Production Type
     C                     Z-ADDYL0041    WL0178           Production Date
     C                     Z-ADDWIHGCD    WL0179           Item Code
     C                     MOVELWIAJCD    WL0180    P      Warehouse Code
     C                     Z-ADDWN0759    WL0181           Weight Allocate
     C                     Z-ADDWN0760    WL0182           Pieces Allocate
     C                     Z-ADDWIC4NB    WL0183           Order Number
     C                     Z-ADDWIDPNB    WL0184           Order Sequence
     C                     Z-ADDWIUENB    WL0185           Order Secondary
     C                     MOVEL'N'       WL0186    P      Status Flag 19
     C                     EXSR TMRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0274           Company Number
     C                     MOVELWN0754    WL0275    P      Production Type
     C                     Z-ADDYL0041    WL0276           Production Date
     C                     Z-ADDWIHGCD    WL0277           Item Code
     C                     MOVELWIAJCD    WL0278    P      Warehouse Code
     C                     Z-ADDWN0760    WL0279           Pieces Schedule
     C                     Z-ADDWN0759    WL0280           Weight Schedule
     C                     EXSR TQRVGN
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0281           Company Number
     C                     MOVELWN0754    WL0282    P      Production Type
     C                     Z-ADDYL0041    WL0283           Production Date
     C                     Z-ADDWIHGCD    WL0284           Item Code
     C                     MOVELWIAJCD    WL0285    P      Warehouse Code
     C                     Z-ADDWN0759    WL0286           Weight Allocate
     C                     Z-ADDWN0760    WL0287           Pieces Allocate
     C                     Z-ADDWIC4NB    WL0288           Order Number
     C                     Z-ADDWIDPNB    WL0289           Order Sequence
     C                     Z-ADDWIUENB    WL0290           Order Secondary
     C                     MOVEL'N'       WL0291    P      Status Flag 19
     C                     EXSR TSRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0758           Quantity Alloca
     C                     Z-ADD*ZERO     WN0759           Weight Allocate
     C                     Z-ADD*ZERO     YL0042           Quantity Schedu
     C                     Z-ADD*ZERO     YL0043           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     YL0042           Quantity Schedu
     C                     ADD  *ZERO     YL0043           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT 0                          *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0324           Company Number
     C                     Z-ADDYL0041    WL0325           Post to G/L Dat
     C                     Z-ADDYL0041    WL0327           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0328           *Duration (fact
     C                     EXSR NARVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0326    YL0041           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0329           Company Number
     C                     Z-ADDYL0041    WL0330           Post to G/L Dat
     C                     Z-ADDYL0041    WL0332           *Date2 (beginni
     C                     Z-ADD-1        WL0333           *Duration (fact
     C                     EXSR NBRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0331    YL0041           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ 0                          *IF
     C                     Z-ADDYL0041    YL0041           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           YL0037    SUB  YL0042    YL0044           ATS Quantity Ne
     C           YL0038    SUB  YL0043    YL0045           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           YL0037    SUB  YL0042    YL0044           ATS Quantity Ne
     C           YL0038    SUB  YL0043    YL0045           ATS Weight Need
     C                     END                             *FI
      * UPD Allocate Std      XF - /UT Inv. Interface Funcs  * 
     C                     CALL 'PDHMXFR'              90  UPD Allocate St
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WIAJCD    WQ0083  3        Warehouse Code
     C                     PARM WIAIC3    WQ0084  30       Company Number
     C                     PARM WIHGCD    WQ0085  70       Item Code
     C           YL0041    PARM YL0041    WQ0086  70       Production Date
     C                     PARM YL0019    WQ0087  2        UOM Primary
     C                     PARM YL0020    WQ0088 112       Unit Weight
     C                     PARM YL0021    WQ0089  52       Fresh Chilling
     C                     PARM YL0024    WQ0090  1        Piece Count Ite
     C                     PARM YL0025    WQ0091  70       Pieces Per Bag
     C                     PARM YL0026    WQ0092  70       Bags Per Unit
     C                     PARM YL0027    WQ0093  2        Warehouse Type
     C                     PARM YL0028    WQ0094  1        Warehouse Std C
     C                     PARM YL0029    WQ0095  52       Warehouse Chill
     C                     PARM WIC4NB    WQ0096  70       Order Number
     C                     PARM WIDPNB    WQ0097  30       Order Sequence
     C                     PARM WIUENB    WQ0098  30       Order Secondary
     C                     PARM WIJGDT    WQ0099  70       Production Date
     C                     PARM WIJGDT    WQ0100  70       Production Date
     C                     PARM YL0037    WQ0101 112       Quantity Ordere
     C                     PARM YL0038    WQ0102 112       Weight Ordered
     C           YL0042    PARM YL0042    WQ0103 112       Quantity Schedu
     C           YL0043    PARM YL0043    WQ0104 112       Weight Schedule
     C           YL0044    PARM YL0044    WQ0105 112       ATS Quantity Ne
     C           YL0045    PARM YL0045    WQ0106 112       ATS Weight Need
     C                     PARM WHA5DT    WQ0107  70       Ship Date USR
     C                     PARM 'AO'      WQ0108  2        ATS Adj Type US
     C                     PARM @CN,002   WQ0109 10        PSAA Program Na
     C                     PARM WIAYAA    WQ0110  3        Order From Ware
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDHMXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ADD  YL0042    YL0031           Quantity Schedu
     C                     ADD  YL0043    YL0032           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * * The date the production was scheduled for is no longer a
      *   production day.
      * DLT Ord Detail Sched   DL - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0077           Company Number
     C                     Z-ADDWIC4NB    WL0078           Order Number
     C                     Z-ADDWIDPNB    WL0079           Order Sequence
     C                     Z-ADDWIUENB    WL0080           Order Secondary
     C                     Z-ADDWIJGDT    WL0081           OD Production D
     C                     EXSR SODLRC
      * Del Ord Dtl Sch-Inv   RT - Order Detail Sched-Inv  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0061           Company Number
     C                     Z-ADDWIC4NB    WL0062           Order Number
     C                     Z-ADDWIDPNB    WL0063           Order Sequence
     C                     Z-ADDWIUENB    WL0064           Order Secondary
     C                     EXSR SKRVGN
      * Del OrdDtl Sch-Consmd RT - Order Detail Sched-Consmd  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWIAIC3    WL0035           Company Number
     C                     Z-ADDWIC4NB    WL0036           Order Number
     C                     Z-ADDWIDPNB    WL0037           Order Sequence
     C                     Z-ADDWIUENB    WL0038           Order Secondary
     C                     EXSR SDRVGN
     C                     END                             *FI
     C           KRSSJ     READE@KNCPOC                  90*
     C                     ENDDO
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         SKRVGN    BEGSR
      *================================================================
      * Del Ord Dtl Sch-Inv   RT - Order Detail Sched-Inv  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WJAIC3    WQSK01           Company Number
     C           *LIKE     DEFN WJC4NB    WQSK02           Order Number
     C           *LIKE     DEFN WJDPNB    WQSK03           Order Sequence
     C           *LIKE     DEFN WJUENB    WQSK04           Order Secondary
      * Define keylist
     C           KRSSK     KLIST
     C                     KFLD           WQSK01           Company Number
     C                     KFLD           WQSK02           Order Number
     C                     KFLD           WQSK03           Order Sequence
     C                     KFLD           WQSK04           Order Secondary
      * Setup key
     C                     Z-ADDWL0061    WQSK01           Company Number
     C                     Z-ADDWL0062    WQSK02           Order Number
     C                     Z-ADDWL0063    WQSK03           Order Sequence
     C                     Z-ADDWL0064    WQSK04           Order Secondary
      * Establish starting position
     C           KRSSK     SETLL@B5CPM2                    *
     C           KRSSK     READE@B5CPM2                  90*
      * Data record not found
     C   90                MOVEL'USR3150' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * Del Ord Dtl Sch-Inv   DL - Order Detail Sched-Inv  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWJAIC3    WL0065           Company Number
     C                     Z-ADDWJC4NB    WL0066           Order Number
     C                     Z-ADDWJDPNB    WL0067           Order Sequence
     C                     Z-ADDWJUENB    WL0068           Order Secondary
     C                     Z-ADDWJJGDT    WL0069           OD Production D
     C                     EXSR SLDLRC
     C           KRSSK     READE@B5CPM2                  90*
     C                     ENDDO
      *================================================================
     CSR         SKEXIT    ENDSR
      /EJECT
     CSR         SLDLRC    BEGSR
      *================================================================
      * Del Ord Dtl Sch-Inv   DL - Order Detail Sched-Inv  * 
      *================================================================
      * This is a shared subroutine
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move key fields to @B5CPM1
     C                     Z-ADDWL0065    WKAIC3           Company Number
     C                     Z-ADDWL0066    WKC4NB           Order Number
     C                     Z-ADDWL0067    WKDPNB           Order Sequence
     C                     Z-ADDWL0068    WKUENB           Order Secondary
     C                     Z-ADDWL0069    WKJGDT           OD Production D
      *
     C           KLDLSL    KLIST
     C                     KFLD           WKAIC3           Company Number
     C                     KFLD           WKC4NB           Order Number
     C                     KFLD           WKDPNB           Order Sequence
     C                     KFLD           WKUENB           Order Secondary
     C                     KFLD           WKJGDT           OD Production D
     C           KLDLSL    CHAIN@B5CPM1              9091  *
     C           *IN90     IFEQ '1'
      * Record already deleted
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'POB5CPL0'MDACP
     C                     MOVEL'@B5CPM1' MDFMT
     C                     MOVEL'*DLT'    MDACT
      * Record not found label: LBL003.
     C                     MOVEL'LBL003'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SLEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SLEXIT
     C                     ENDIF
      *
      *................................................................
     C                     DELET@B5CPM1                91  *
     C           *IN91     IFEQ '1'
      * Delete error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         SLEXIT    ENDSR
      /EJECT
     CSR         SMRVGN    BEGSR
      *================================================================
      * Rtv Prd Day Sts       RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSM     KLIST
     C                     KFLD           WLAIC3           Company Number
     C                     KFLD           WLBCDT           Post to G/L Dat
      * Setup key
     C                     Z-ADDWL0070    WLAIC3           Company Number
     C                     Z-ADDWL0071    WLBCDT           Post to G/L Dat
      * Establish starting position
     C           KRSSM     CHAIN@AFREBE              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0018' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0072           Production Day
     C                     GOTO SMEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWLWAST    WL0072           Production Day
     C                     ENDIF
      *================================================================
     CSR         SMEXIT    ENDSR
      /EJECT
     CSR         SNRVGN    BEGSR
      *================================================================
      * RTV Requested Dlvry dt RT - Order Header TRG  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSN     KLIST
     C                     KFLD           WMAIC3           Company Number
     C                     KFLD           WMC4NB           Order Number
      * Setup key
     C                     Z-ADDWL0073    WMAIC3           Company Number
     C                     Z-ADDWL0074    WMC4NB           Order Number
      * Establish starting position
     C           KRSSN     CHAIN@BECPFK              90    *
      * Data record not found
     C   90                MOVEL'USR0176' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWMEIDT    WL0075           Requested Deliv
     C                     Z-ADDWMAFTM    WL0076           Requested Deliv
     C                     ENDIF
      *================================================================
     CSR         SNEXIT    ENDSR
      /EJECT
     CSR         SODLRC    BEGSR
      *================================================================
      * DLT Ord Detail Sched   DL - Order Detail Schedule  * 
      *================================================================
      * This is a shared subroutine
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move key fields to @KNCPHN
     C                     Z-ADDWL0077    WGAIC3           Company Number
     C                     Z-ADDWL0078    WGC4NB           Order Number
     C                     Z-ADDWL0079    WGDPNB           Order Sequence
     C                     Z-ADDWL0080    WGUENB           Order Secondary
     C                     Z-ADDWL0081    WGJGDT           OD Production D
      *
     C           KLDLSO    KLIST
     C                     KFLD           WGAIC3           Company Number
     C                     KFLD           WGC4NB           Order Number
     C                     KFLD           WGDPNB           Order Sequence
     C                     KFLD           WGUENB           Order Secondary
     C                     KFLD           WGJGDT           OD Production D
     C           KLDLSO    CHAIN@KNCPHN              9091  *
     C           *IN90     IFEQ '1'
      * Record already deleted
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PDKNCPL0'MDACP
     C                     MOVEL'@KNCPHN' MDFMT
     C                     MOVEL'*DLT'    MDACT
      * Record not found label: LBL004.
     C                     MOVEL'LBL004'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SOEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SOEXIT
     C                     ENDIF
      *
      *................................................................
     C                     DELET@KNCPHN                91  *
     C           *IN91     IFEQ '1'
      * Delete error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         SOEXIT    ENDSR
      /EJECT
     CSR         SPRVGN    BEGSR
      *================================================================
      * UPD Allocate Inv      RT - PS Prod Item Inventory  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0029 110       ATS Quantity Av
     C                     Z-ADD*ZERO     WN0030 112       ATS Weight Avai
     C                     Z-ADD*ZERO     WN0031  70       ATS Pieces Avai
     C                     Z-ADD*ZERO     WN0032 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0033  92       Weight Allocate
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WN0032           Quantity Alloca
     C                     Z-ADD*ZERO     WN0033           Weight Allocate
      * Declare restrictor key work fields
     C           *LIKE     DEFN WOAIC3    WQSP01           Company Number
     C           *LIKE     DEFN WOHGCD    WQSP02           Item Code
     C           *LIKE     DEFN WOAJCD    WQSP03           Warehouse Code
      * Define keylist
     C           KPSSP     KLIST
     C                     KFLD           WQSP01           Company Number
     C                     KFLD           WQSP02           Item Code
     C                     KFLD           WQSP03           Warehouse Code
     C                     KFLD           WOELDT           Production Date
      * Define keylist
     C           KRSSP     KLIST
     C                     KFLD           WQSP01           Company Number
     C                     KFLD           WQSP02           Item Code
     C                     KFLD           WQSP03           Warehouse Code
      * Setup key
     C                     Z-ADDWL0082    WQSP01           Company Number
     C                     Z-ADDWL0083    WQSP02           Item Code
     C                     MOVELWL0084    WQSP03           Warehouse Code
     C                     Z-ADDWL0085    WOELDT           Production Date
      * Establish starting position
     C           KPSSP     SETLL@CWCPQW                    *
     C           KRSSP     READE@CWCPQW                  90*
      * Data record not found
     C   90                MOVEL'USR3238' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * FP1054 this used to quit when the job date was reached.
      *   now it quits when par.to date is reached. for the freezer it wi
      *   be the freeze time number of days before the sched ship.
      *   For Fresh, it will be the job date
      * RMC 10.2.19 change GE to GT
      * CASE:
      *  - c1 OR c2
      *   |- c1    : DB1.Production Date GT PAR.To Date               USR
      *   |- c2    : PAR.ATS Quantity Need USR is Less than or equal zero
      *   '-
     C           WOELDT    IFGT WL0100                     *IF
     C           WL0097    ORLE 0                          *OR
     C                     GOTO SPEXIT                     *QUIT
     C                     END                             *FI
      * Rtv Ord Dtl Sch-Inv   RT - Order Detail Sched-Inv  * 
     C                     EXSR SQRVGN
     C           WOARQT    SUB  YL0046    WN0029           ATS Quantity Av
     C           WOACWG    SUB  YL0047    WN0030           ATS Weight Avai
      * Allocate Available Inventory
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0029    IFGT 0                          *IF
      * Allocate
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           WL0097    IFGT WN0029                     *IF
     C                     ADD  WN0029    WL0095           Quantity Schedu
     C           WN0029    MULT WL0086    WN0030           ATS Weight Avai
     C                     ADD  WN0030    WL0096           Weight Schedule
     C                     Z-ADDWN0029    WN0032           Quantity Alloca
     C                     Z-ADDWN0030    WN0033           Weight Allocate
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           WL0097    IFLE WN0029                     *IF
     C                     ADD  WL0097    WL0095           Quantity Schedu
     C                     ADD  WL0098    WL0096           Weight Schedule
     C                     Z-ADDWL0097    WN0032           Quantity Alloca
     C           WN0032    MULT WL0086    WN0033           Weight Allocate
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     WL0095           Quantity Schedu
     C                     ADD  *ZERO     WL0096           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * Upd Ord Dtl Sch-Inv   RT - Order Detail Sched-Inv  * 
     C                     EXSR SRRVGN
      * Upd Qty/Wgt Inv Alc   RT - Order Detail Schedule  * 
     C                     EXSR SURVGN
      * Upd Inv Allocated     RT - PS Prod Item Schedule  * 
     C                     EXSR SXRVGN
     C                     END                             *FI
     C           WL0093    SUB  WL0095    WL0097           ATS Quantity Ne
     C           WL0094    SUB  WL0096    WL0098           ATS Weight Need
     C           KRSSP     READE@CWCPQW                  90*
     C                     ENDDO
      *================================================================
     CSR         SPEXIT    ENDSR
      /EJECT
     CSR         SQRVGN    BEGSR
      *================================================================
      * Rtv Ord Dtl Sch-Inv   RT - Order Detail Sched-Inv  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     YL0046           OD Quantity Inv
     C                     Z-ADD*ZERO     YL0047           OD Weight Inv S
      * Declare restrictor key work fields
     C           *LIKE     DEFN WRAIC3    WQSQ01           Company Number
     C           *LIKE     DEFN WRHGCD    WQSQ02           Item Code
     C           *LIKE     DEFN WRAJCD    WQSQ03           Warehouse Code
     C           *LIKE     DEFN WRJGDT    WQSQ04           OD Production D
      * Define keylist
     C           KRSSQ     KLIST
     C                     KFLD           WQSQ01           Company Number
     C                     KFLD           WQSQ02           Item Code
     C                     KFLD           WQSQ03           Warehouse Code
     C                     KFLD           WQSQ04           OD Production D
      * Setup key
     C                     Z-ADDWOAIC3    WQSQ01           Company Number
     C                     Z-ADDWOHGCD    WQSQ02           Item Code
     C                     MOVELWOAJCD    WQSQ03           Warehouse Code
     C                     Z-ADDWOELDT    WQSQ04           OD Production D
      * Establish starting position
     C           KRSSQ     SETLL@B5CPM4                    *
     C           KRSSQ     READE@B5CPM4                  90*
      * Data record not found
     C   90                MOVEL'USR3150' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     ADD  WRIUQT    YL0046           OD Quantity Inv
     C                     ADD  WRF3WG    YL0047           OD Weight Inv S
     C           KRSSQ     READE@B5CPM4                  90*
     C                     ENDDO
      *================================================================
     CSR         SQEXIT    ENDSR
      /EJECT
     CSR         SRRVGN    BEGSR
      *================================================================
      * Upd Ord Dtl Sch-Inv   RT - Order Detail Sched-Inv  * 
      *================================================================
      *
     C                     MOVEL*BLANK    WN0034  1        EDI Status 1
     C                     MOVEL*BLANK    WN0035  1        EDI Status 2
     C                     MOVEL*BLANK    WN0036  1        EDI Status 3
     C                     MOVEL*BLANK    WN0037  1        Record Status
     C                     Z-ADD*ZERO     WN0038  60       Job Time
     C                     MOVEL*BLANK    WN0039 10        User Id
     C                     MOVEL*BLANK    WN0040 10        Job Name
     C                     Z-ADD*ZERO     WN0041  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSR     KLIST
     C                     KFLD           WJAIC3           Company Number
     C                     KFLD           WJC4NB           Order Number
     C                     KFLD           WJDPNB           Order Sequence
     C                     KFLD           WJUENB           Order Secondary
     C                     KFLD           WJJGDT           OD Production D
      * Setup key
     C                     Z-ADDWOAIC3    WJAIC3           Company Number
     C                     Z-ADDWL0090    WJC4NB           Order Number
     C                     Z-ADDWL0091    WJDPNB           Order Sequence
     C                     Z-ADDWL0092    WJUENB           Order Secondary
     C                     Z-ADDWOELDT    WJJGDT           OD Production D
      * Establish starting position
     C           KRSSR     CHAIN@B5CPM2              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR3150' W0RTN   7
      * USER: Processing if Data record not found
      * Crt Ord Dtl Sch-Inv   CR - Order Detail Sched-Inv  * 
     C                     EXSR SSCRRC
     C                     GOTO SREXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C           WJIUQT    ADD  WN0032    YL0048           OD Quantity Inv
     C           WJF3WG    ADD  WN0033    YL0049           OD Weight Inv S
      * CASE: LCL.OD Quantity Inv Sched is LE Zero
     C           YL0048    IFLE 0                          *IF
      * Delete Order Detail Sched - Order Detail Sched-Inv  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWJAIC3    WL0065           Company Number
     C                     Z-ADDWJC4NB    WL0066           Order Number
     C                     Z-ADDWJDPNB    WL0067           Order Sequence
     C                     Z-ADDWJUENB    WL0068           Order Secondary
     C                     Z-ADDWJJGDT    WL0069           OD Production D
     C                     EXSR SLDLRC
     C                     ELSE
      * CASE: *OTHERWISE
      * Chg Ord Dtl Sch-Inv   CH - Order Detail Sched-Inv  * 
     C                     EXSR STCHRC
     C                     END                             *FI
     C                     ENDIF
      *================================================================
     CSR         SREXIT    ENDSR
      /EJECT
     CSR         SSCRRC    BEGSR
      *================================================================
      * Crt Ord Dtl Sch-Inv   CR - Order Detail Sched-Inv  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move all fields to @B5CPM1
     C                     Z-ADDWOAIC3    WKAIC3           Company Number
     C                     Z-ADDWL0090    WKC4NB           Order Number
     C                     Z-ADDWL0091    WKDPNB           Order Sequence
     C                     Z-ADDWL0092    WKUENB           Order Secondary
     C                     Z-ADDWOELDT    WKJGDT           OD Production D
     C                     Z-ADDWL0099    WKAODT           Scheduled Ship
     C                     MOVELWOAJCD    WKAJCD           Warehouse Code
     C                     Z-ADDWOHGCD    WKHGCD           Item Code
     C                     Z-ADDWN0032    WKIUQT           OD Quantity Inv
     C                     Z-ADDWN0033    WKF3WG           OD Weight Inv S
     C                     MOVELWN0034    WKUVST           EDI Status 1
     C                     MOVELWN0035    WKUWST           EDI Status 2
     C                     MOVELWN0036    WKUXST           EDI Status 3
     C                     MOVELWN0037    WKVSST           Record Status
     C                     Z-ADDWN0038    WKAATM           Job Time
     C                     MOVELWN0039    WKAYNA           User Id
     C                     MOVELWN0040    WKA0NA           Job Name
     C                     Z-ADDWN0041    WKAXDT           Job Date
      *
      * USER: Processing before Data update
      * UPS CRTOBJ Stamp      IF
     C                     MOVEL'A'       WKVSST           Record Status
     C                     Z-ADD##JTM     WKAATM           Job Time
     C                     MOVEL##USR     WKAYNA           User Id
     C                     MOVEL##PGM     WKA0NA           Job Name
     C                     Z-ADD##JDT     WKAXDT           Job Date
     C           KLCRSS    KLIST
     C                     KFLD           WKAIC3           Company Number
     C                     KFLD           WKC4NB           Order Number
     C                     KFLD           WKDPNB           Order Sequence
     C                     KFLD           WKUENB           Order Secondary
     C                     KFLD           WKJGDT           OD Production D
      * Check for duplicate primary key
     C           KLCRSS    SETLL@B5CPM1                  90*
     C           *IN90     IFEQ '1'
     C                     MOVEL'USR3151' W0RTN   7
      * Send message 'Order Detail Sched-Inv EX'
     C                     MOVEL'USR3151' ZAMSID
     C                     EXSR ZASNMS
     C                     GOTO SSEXIT
     C                     ENDIF
      *
     C                     WRITE@B5CPM1                91  *
      *
     C           *IN91     IFEQ '1'
      * Write error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
     C                     ENDIF
      *================================================================
     CSR         SSEXIT    ENDSR
      /EJECT
     CSR         STCHRC    BEGSR
      *================================================================
      * Chg Ord Dtl Sch-Inv   CH - Order Detail Sched-Inv  * 
      *================================================================
      *
     C                     MOVEL*BLANK    WN0042  1        EDI Status 1
     C                     MOVEL*BLANK    WN0043  1        EDI Status 2
     C                     MOVEL*BLANK    WN0044  1        EDI Status 3
     C                     MOVEL*BLANK    WN0045  1        Record Status
     C                     Z-ADD*ZERO     WN0046  60       Job Time
     C                     MOVEL*BLANK    WN0047 10        User Id
     C                     MOVEL*BLANK    WN0048 10        Job Name
     C                     Z-ADD*ZERO     WN0049  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YBRDC   1
      *
      * Move key fields to @B5CPM1
     C                     Z-ADDWJAIC3    WKAIC3           Company Number
     C                     Z-ADDWJC4NB    WKC4NB           Order Number
     C                     Z-ADDWJDPNB    WKDPNB           Order Sequence
     C                     Z-ADDWJUENB    WKUENB           Order Secondary
     C                     Z-ADDWJJGDT    WKJGDT           OD Production D
      *
     C           KLCHST    KLIST
     C                     KFLD           WKAIC3           Company Number
     C                     KFLD           WKC4NB           Order Number
     C                     KFLD           WKDPNB           Order Sequence
     C                     KFLD           WKUENB           Order Secondary
     C                     KFLD           WKJGDT           OD Production D
     C           KLCHST    CHAIN@B5CPM1              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'POB5CPL0'MDACP
     C                     MOVEL'@B5CPM1' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL005.
     C                     MOVEL'LBL005'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO STEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO STEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPOB51    YBRDCS
      * Move non-key fields to @B5CPM1
     C                     Z-ADDWJAODT    WKAODT           Scheduled Ship
     C                     MOVELWOAJCD    WKAJCD    P      Warehouse Code
     C                     Z-ADDWOHGCD    WKHGCD           Item Code
     C                     Z-ADDYL0048    WKIUQT           OD Quantity Inv
     C                     Z-ADDYL0049    WKF3WG           OD Weight Inv S
      *
      * Set PGM.*Record Data Changed flag
     C           QPOB51    IFNE YBRDCS
     C           YBRDC     ANDNE'N'
     C                     MOVE 'Y'       YBRDC
     C                     ENDIF
      * USER: Processing before Data update
      * Set Date/Time Stamp   IF
     C                     Z-ADD##JTM     WKAATM           Job Time
     C                     MOVEL##USR     WKAYNA           User Id
     C                     MOVEL##JOB     WKA0NA           Job Name
     C                     Z-ADD##JDT     WKAXDT           Job Date
      * Set PGM.*Record Data Changed flag
     C           QPOB51    IFNE YBRDCS
     C           YBRDC     ANDNE'N'
     C                     MOVE 'Y'       YBRDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YBRDC     IFEQ 'Y'
     C                     UPDAT@B5CPM1                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPOB5CPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         STEXIT    ENDSR
      /EJECT
     CSR         SURVGN    BEGSR
      *================================================================
      * Upd Qty/Wgt Inv Alc   RT - Order Detail Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0050 112       OD Qty/Cnsmd Pi
     C                     Z-ADD*ZERO     WN0051 112       OD Weight Sched
     C                     Z-ADD*ZERO     WN0052 112       OD Quantity Inv
     C                     Z-ADD*ZERO     WN0053 112       OD Weight Inv S
     C                     Z-ADD*ZERO     WN0054 112       OD Quantity Unu
     C                     Z-ADD*ZERO     WN0055 112       OD Unused weigh
     C                     MOVEL*BLANK    WN0056  1        OD Added to Sch
     C                     MOVEL*BLANK    WN0057  1        OD Reallocate S
     C                     MOVEL*BLANK    WN0058  2        OD Status Unuse
     C                     MOVEL*BLANK    WN0059  1        EDI Status 1
     C                     MOVEL*BLANK    WN0060  1        EDI Status 2
     C                     MOVEL*BLANK    WN0061  1        EDI Status 3
     C                     MOVEL*BLANK    WN0062  1        Record Status
     C                     Z-ADD*ZERO     WN0063  60       Job Time
     C                     MOVEL*BLANK    WN0064 10        User Id
     C                     MOVEL*BLANK    WN0065 10        Job Name
     C                     Z-ADD*ZERO     WN0066  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSU     KLIST
     C                     KFLD           WFAIC3           Company Number
     C                     KFLD           WFC4NB           Order Number
     C                     KFLD           WFDPNB           Order Sequence
     C                     KFLD           WFUENB           Order Secondary
     C                     KFLD           WFJGDT           OD Production D
      * Setup key
     C                     Z-ADDWL0082    WFAIC3           Company Number
     C                     Z-ADDWL0090    WFC4NB           Order Number
     C                     Z-ADDWL0091    WFDPNB           Order Sequence
     C                     Z-ADDWL0092    WFUENB           Order Secondary
     C                     Z-ADD##JDT     WFJGDT           OD Production D
      * Establish starting position
     C           KRSSU     CHAIN@KNCPHO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2238' W0RTN   7
      * USER: Processing if Data record not found
      * CRT Ord Detail Sched   CR - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0082    WL0101           Company Number
     C                     Z-ADDWL0090    WL0102           Order Number
     C                     Z-ADDWL0091    WL0103           Order Sequence
     C                     Z-ADDWL0092    WL0104           Order Secondary
     C                     Z-ADD##JDT     WL0105           OD Production D
     C                     Z-ADDWL0099    WL0106           Scheduled Ship
     C                     MOVELWL0084    WL0107    P      Warehouse Code
     C                     MOVELWL0084    WL0108    P      Order From Ware
     C                     Z-ADDWL0083    WL0109           Item Code
     C                     Z-ADDWN0050    WL0110           OD Qty/Cnsmd Pi
     C                     Z-ADDWN0051    WL0111           OD Weight Sched
     C                     Z-ADDWN0032    WL0112           OD Quantity Inv
     C                     Z-ADDWN0033    WL0113           OD Weight Inv S
     C                     Z-ADDWN0054    WL0114           OD Quantity Unu
     C                     Z-ADDWN0055    WL0115           OD Unused weigh
     C                     MOVELWN0056    WL0116    P      OD Added to Sch
     C                     MOVELWN0057    WL0117    P      OD Reallocate S
     C                     MOVELWN0058    WL0118    P      OD Status Unuse
     C                     MOVELWN0059    WL0119    P      EDI Status 1
     C                     MOVELWN0060    WL0120    P      EDI Status 2
     C                     MOVELWN0061    WL0121    P      EDI Status 3
     C                     MOVELWN0062    WL0122    P      Record Status
     C                     Z-ADDWN0063    WL0123           Job Time
     C                     MOVELWN0064    WL0124    P      User Id
     C                     MOVELWN0065    WL0125    P      Job Name
     C                     Z-ADDWN0066    WL0126           Job Date
     C                     EXSR SVCRRC
     C                     GOTO SUEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C           WFIUQT    ADD  WN0032    WN0052           OD Quantity Inv
     C           WFF3WG    ADD  WN0033    WN0053           OD Weight Inv S
      * CASE: PAR.OD Quantity Inv Sched is LE Zero
     C           WN0052    IFLE 0                          *IF
      * DLT Ord Detail Sched   DL - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWFAIC3    WL0077           Company Number
     C                     Z-ADDWFC4NB    WL0078           Order Number
     C                     Z-ADDWFDPNB    WL0079           Order Sequence
     C                     Z-ADDWFUENB    WL0080           Order Secondary
     C                     Z-ADDWFJGDT    WL0081           OD Production D
     C                     EXSR SODLRC
     C                     ELSE
      * CASE: *OTHERWISE
      * Chg Qty/Wgt Inv Alc - Order Detail Schedule  * 
     C                     EXSR SWCHRC
     C                     END                             *FI
     C                     ENDIF
      *================================================================
     CSR         SUEXIT    ENDSR
      /EJECT
     CSR         SVCRRC    BEGSR
      *================================================================
      * CRT Ord Detail Sched   CR - Order Detail Schedule  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move all fields to @KNCPHN
     C                     Z-ADDWL0101    WGAIC3           Company Number
     C                     Z-ADDWL0102    WGC4NB           Order Number
     C                     Z-ADDWL0103    WGDPNB           Order Sequence
     C                     Z-ADDWL0104    WGUENB           Order Secondary
     C                     Z-ADDWL0105    WGJGDT           OD Production D
     C                     Z-ADDWL0106    WGAODT           Scheduled Ship
     C                     MOVELWL0107    WGAJCD           Warehouse Code
     C                     MOVELWL0108    WGAYAA           Order From Ware
     C                     Z-ADDWL0109    WGHGCD           Item Code
     C                     Z-ADDWL0110    WGIGQT           OD Qty/Cnsmd Pi
     C                     Z-ADDWL0111    WGFLWG           OD Weight Sched
     C                     Z-ADDWL0112    WGIUQT           OD Quantity Inv
     C                     Z-ADDWL0113    WGF3WG           OD Weight Inv S
     C                     Z-ADDWL0114    WGIVQT           OD Quantity Unu
     C                     Z-ADDWL0115    WGF4WG           OD Unused weigh
     C                     MOVELWL0116    WGP7ST           OD Added to Sch
     C                     MOVELWL0117    WGP8ST           OD Reallocate S
     C                     MOVELWL0118    WGQAST           OD Status Unuse
     C                     MOVELWL0119    WGUVST           EDI Status 1
     C                     MOVELWL0120    WGUWST           EDI Status 2
     C                     MOVELWL0121    WGUXST           EDI Status 3
     C                     MOVELWL0122    WGVSST           Record Status
     C                     Z-ADDWL0123    WGAATM           Job Time
     C                     MOVELWL0124    WGAYNA           User Id
     C                     MOVELWL0125    WGA0NA           Job Name
     C                     Z-ADDWL0126    WGAXDT           Job Date
      *
      * USER: Processing before Data update
      * SET Record Stamp CRTOB IF
     C                     MOVEL'A'       WGVSST           Record Status
     C                     Z-ADD##JTM     WGAATM           Job Time
     C                     MOVEL##USR     WGAYNA           User Id
     C                     MOVEL##PGM     WGA0NA           Job Name
     C                     Z-ADD##JDT     WGAXDT           Job Date
     C           KLCRSV    KLIST
     C                     KFLD           WGAIC3           Company Number
     C                     KFLD           WGC4NB           Order Number
     C                     KFLD           WGDPNB           Order Sequence
     C                     KFLD           WGUENB           Order Secondary
     C                     KFLD           WGJGDT           OD Production D
      * Check for duplicate primary key
     C           KLCRSV    SETLL@KNCPHN                  90*
     C           *IN90     IFEQ '1'
     C                     MOVEL'USR2239' W0RTN   7
      * Send message 'Order Detail Schedule  EX'
     C                     MOVEL'USR2239' ZAMSID
     C                     EXSR ZASNMS
     C                     GOTO SVEXIT
     C                     ENDIF
      *
     C                     WRITE@KNCPHN                91  *
      *
     C           *IN91     IFEQ '1'
      * Write error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
     C                     ENDIF
      *================================================================
     CSR         SVEXIT    ENDSR
      /EJECT
     CSR         SWCHRC    BEGSR
      *================================================================
      * Chg Qty/Wgt Inv Alc - Order Detail Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0067  70       Scheduled Ship
     C                     MOVEL*BLANK    WN0068  3        Warehouse Code
     C                     MOVEL*BLANK    WN0069  3        Order From Ware
     C                     Z-ADD*ZERO     WN0070  70       Item Code
     C                     Z-ADD*ZERO     WN0071 112       OD Qty/Cnsmd Pi
     C                     Z-ADD*ZERO     WN0072 112       OD Weight Sched
     C                     Z-ADD*ZERO     WN0073 112       OD Quantity Unu
     C                     Z-ADD*ZERO     WN0074 112       OD Unused weigh
     C                     MOVEL*BLANK    WN0075  1        OD Added to Sch
     C                     MOVEL*BLANK    WN0076  1        OD Reallocate S
     C                     MOVEL*BLANK    WN0077  2        OD Status Unuse
     C                     MOVEL*BLANK    WN0078  1        EDI Status 1
     C                     MOVEL*BLANK    WN0079  1        EDI Status 2
     C                     MOVEL*BLANK    WN0080  1        EDI Status 3
     C                     MOVEL*BLANK    WN0081  1        Record Status
     C                     Z-ADD*ZERO     WN0082  60       Job Time
     C                     MOVEL*BLANK    WN0083 10        User Id
     C                     MOVEL*BLANK    WN0084 10        Job Name
     C                     Z-ADD*ZERO     WN0085  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YCRDC   1
      *
      * Move key fields to @KNCPHN
     C                     Z-ADDWL0082    WGAIC3           Company Number
     C                     Z-ADDWL0090    WGC4NB           Order Number
     C                     Z-ADDWL0091    WGDPNB           Order Sequence
     C                     Z-ADDWL0092    WGUENB           Order Secondary
     C                     Z-ADD##JDT     WGJGDT           OD Production D
      *
     C           KLCHSW    KLIST
     C                     KFLD           WGAIC3           Company Number
     C                     KFLD           WGC4NB           Order Number
     C                     KFLD           WGDPNB           Order Sequence
     C                     KFLD           WGUENB           Order Secondary
     C                     KFLD           WGJGDT           OD Production D
     C           KLCHSW    CHAIN@KNCPHN              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PDKNCPL0'MDACP
     C                     MOVEL'@KNCPHN' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL006.
     C                     MOVEL'LBL006'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SWEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SWEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPDKN1    YCRDCS
      * Move non-key fields to @KNCPHN
     C                     Z-ADDWN0052    WGIUQT           OD Quantity Inv
     C                     Z-ADDWN0053    WGF3WG           OD Weight Inv S
      *
      * Set PGM.*Record Data Changed flag
     C           QPDKN1    IFNE YCRDCS
     C           YCRDC     ANDNE'N'
     C                     MOVE 'Y'       YCRDC
     C                     ENDIF
      * USER: Processing before Data update
      * UPS CHGOBJ Stamp      IF
     C                     Z-ADD##JTM     WGAATM           Job Time
     C                     MOVEL##USR     WGAYNA           User Id
     C                     MOVEL##PGM     WGA0NA           Job Name
     C                     Z-ADD##JDT     WGAXDT           Job Date
      * Set PGM.*Record Data Changed flag
     C           QPDKN1    IFNE YCRDCS
     C           YCRDC     ANDNE'N'
     C                     MOVE 'Y'       YCRDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YCRDC     IFEQ 'Y'
     C                     UPDAT@KNCPHN                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPDKNCPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         SWEXIT    ENDSR
      /EJECT
     CSR         SXRVGN    BEGSR
      *================================================================
      * Upd Inv Allocated     RT - PS Prod Item Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0086  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0087  70       PS Pieces Inv A
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSX     KLIST
     C                     KFLD           WSAIC3           Company Number
     C                     KFLD           WSV5ST           Production Type
     C                     KFLD           WSELDT           Production Date
     C                     KFLD           WSHGCD           Item Code
     C                     KFLD           WSAJCD           Warehouse Code
      * Setup key
     C                     Z-ADDWL0082    WSAIC3           Company Number
     C                     MOVEL'S'       WSV5ST           Production Type
     C                     Z-ADD##JDT     WSELDT           Production Date
     C                     Z-ADDWL0083    WSHGCD           Item Code
     C                     MOVELWL0084    WSAJCD           Warehouse Code
      * Establish starting position
     C           KRSSX     CHAIN@I8CPUS              90    *
      * Data record not found
     C   90                MOVEL'USR1763' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C           WSUNW2    ADD  WN0033    WN0086           PS Weight Inv A
      * PS Pieces Inv Allocated
      * CASE: PAR.Piece Count Item is yes
     C           WL0087    IFEQ 'Y'                        *IF
      * Pieces Inv Allocated
      * PAR.PS Pieces Inv Allocated =
      *    *COMPUTE (x1 + (x2 * (x3 * x4)))
      * x1    : DB1.PS Pieces Inv Allocated
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Bags Per Unit
     C           WL0088    MULT WL0089    W0WJ02           *Synon (15,0) w
     C           WN0032    MULT W0WJ02    W0WJ01    H      *Synon (15,0) w
     C           WSCENB    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0087           PS Pieces Inv A
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0087           PS Pieces Inv A
     C                     END                             *FI
      * Chg Inv Allocated     CH - PS Prod Item Schedule  * 
     C                     EXSR SYCHRC
     C                     ENDIF
      *================================================================
     CSR         SXEXIT    ENDSR
      /EJECT
     CSR         SYCHRC    BEGSR
      *================================================================
      * Chg Inv Allocated     CH - PS Prod Item Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0088  70       PS Available Sh
     C                     Z-ADD*ZERO     WN0089  92       PS Weight Plann
     C                     Z-ADD*ZERO     WN0090  70       PS Pieces Plann
     C                     Z-ADD*ZERO     WN0091  72       PS Pct of Carca
     C                     Z-ADD*ZERO     WN0092  92       PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0093  92       PS Weight Inv O
     C                     Z-ADD*ZERO     WN0094  70       PS Pieces Inv O
     C                     Z-ADD*ZERO     WN0095  92       PS Weight Stand
     C                     Z-ADD*ZERO     WN0096  70       PS Pieces Stand
     C                     Z-ADD*ZERO     WN0097  92       PS Weight Conve
     C                     Z-ADD*ZERO     WN0098  70       PS Pieces Conve
     C                     Z-ADD*ZERO     WN0099  92       PS Weight Shipp
     C                     Z-ADD*ZERO     WN0100  70       PS Pieces Shipp
     C                     Z-ADD*ZERO     WN0101  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0102  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0103  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0104  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0105  92       PS Weight Ship
     C                     Z-ADD*ZERO     WN0106  70       PS Pieces Ship
     C                     Z-ADD*ZERO     WN0107  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0108  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0109 112       PS Unit Weight
     C                     Z-ADD*ZERO     WN0110  70       PS Pieces Whs T
     C                     Z-ADD*ZERO     WN0111 112       PS Weight Whs T
     C                     Z-ADD*ZERO     WN0112  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0113 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0114  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0115 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0116  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0117 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0118  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0119 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0120  70       PS Pieces Unuse
     C                     MOVEL*BLANK    WN0121  3        PS Item Id
     C                     MOVEL*BLANK    WN0122  2        Warehouse Type
     C                     MOVEL*BLANK    WN0123  1        PS Lock Status
     C                     MOVEL*BLANK    WN0124  1        PS Export/Domes
     C                     MOVEL*BLANK    WN0125  1        PS Print On Sch
     C                     MOVEL*BLANK    WN0126  1        PS Piece Count
     C                     MOVEL*BLANK    WN0127  1        PS Unused Sts 1
     C                     MOVEL*BLANK    WN0128  1        PS Unused Sts 2
     C                     MOVEL*BLANK    WN0129  1        PS Unused Sts 3
     C                     MOVEL*BLANK    WN0130  1        PS Unused Sts 4
     C                     MOVEL*BLANK    WN0131  2        PS Item Sched N
     C                     MOVEL*BLANK    WN0132  3        PS Production W
     C                     Z-ADD*ZERO     WN0133  92       PS Weight Order
     C                     Z-ADD*ZERO     WN0134  70       PS Pieces Order
     C                     Z-ADD*ZERO     WN0135  92       PS Weight FC Ad
     C                     Z-ADD*ZERO     WN0136  70       PS Pieces FC Ad
     C                     Z-ADD*ZERO     WN0137  92       PS Weight FX Ad
     C                     Z-ADD*ZERO     WN0138  70       PS Pieces FX Ad
     C                     Z-ADD*ZERO     WN0139  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0140  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0141  92       PS Weight Avail
     C                     Z-ADD*ZERO     WN0142  70       PS Pieces Avail
     C                     Z-ADD*ZERO     WN0143  92       PS Weight Produ
     C                     Z-ADD*ZERO     WN0144  70       PS Pieces Produ
     C                     Z-ADD*ZERO     WN0145  92       PS Weight Fab N
     C                     Z-ADD*ZERO     WN0146  70       PS Pieces Fab N
     C                     Z-ADD*ZERO     WN0147  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0148  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0149  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0150  70       PS Pieces Sched
     C                     MOVEL*BLANK    WN0151  6        Department Code
     C                     Z-ADD*ZERO     WN0152  30       Item Structure
     C                     Z-ADD*ZERO     WN0153  30       Item Structure
     C                     Z-ADD*ZERO     WN0154  30       Item Structure
     C                     MOVEL*BLANK    WN0155  6        Primal Group Co
     C                     MOVEL*BLANK    WN0156  1        EDI Status 1
     C                     MOVEL*BLANK    WN0157  1        EDI Status 2
     C                     MOVEL*BLANK    WN0158  1        EDI Status 3
     C                     MOVEL*BLANK    WN0159  1        Record Status
     C                     Z-ADD*ZERO     WN0160  60       Job Time
     C                     MOVEL*BLANK    WN0161 10        User Id
     C                     MOVEL*BLANK    WN0162 10        Job Name
     C                     Z-ADD*ZERO     WN0163  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YDRDC   1
      *
      * Move key fields to @I8CPUR
     C                     Z-ADDWSAIC3    WTAIC3           Company Number
     C                     MOVELWSV5ST    WTV5ST    P      Production Type
     C                     Z-ADDWSELDT    WTELDT           Production Date
     C                     Z-ADDWSHGCD    WTHGCD           Item Code
     C                     MOVELWSAJCD    WTAJCD    P      Warehouse Code
      *
     C           KLCHSY    KLIST
     C                     KFLD           WTAIC3           Company Number
     C                     KFLD           WTV5ST           Production Type
     C                     KFLD           WTELDT           Production Date
     C                     KFLD           WTHGCD           Item Code
     C                     KFLD           WTAJCD           Warehouse Code
     C           KLCHSY    CHAIN@I8CPUR              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PDI8CPL0'MDACP
     C                     MOVEL'@I8CPUR' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL007.
     C                     MOVEL'LBL007'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SYEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SYEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPDI81    YDRDCS
      * Move non-key fields to @I8CPUR
     C                     Z-ADDWN0086    WTUNW2           PS Weight Inv A
     C                     Z-ADDWN0087    WTCENB           PS Pieces Inv A
      *
      * Set PGM.*Record Data Changed flag
     C           QPDI81    IFNE YDRDCS
     C           YDRDC     ANDNE'N'
     C                     MOVE 'Y'       YDRDC
     C                     ENDIF
      * USER: Processing before Data update
      * UPS CHGOBJ Stamp      IF
     C                     Z-ADD##JTM     WTAATM           Job Time
     C                     MOVEL##USR     WTAYNA           User Id
     C                     MOVEL##PGM     WTA0NA           Job Name
     C                     Z-ADD##JDT     WTAXDT           Job Date
      * Set PGM.*Record Data Changed flag
     C           QPDI81    IFNE YDRDCS
     C           YDRDC     ANDNE'N'
     C                     MOVE 'Y'       YDRDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YDRDC     IFEQ 'Y'
     C                     UPDAT@I8CPUR                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPDI8CPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         SYEXIT    ENDSR
      /EJECT
     CSR         SZCHRC    BEGSR
      *================================================================
      * CHG Qty/Wgt Sched only CH - Order Detail Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0164  70       Scheduled Ship
     C                     MOVEL*BLANK    WN0165  3        Warehouse Code
     C                     MOVEL*BLANK    WN0166  3        Order From Ware
     C                     Z-ADD*ZERO     WN0167  70       Item Code
     C                     Z-ADD*ZERO     WN0168 112       OD Quantity Inv
     C                     Z-ADD*ZERO     WN0169 112       OD Weight Inv S
     C                     Z-ADD*ZERO     WN0170 112       OD Quantity Unu
     C                     Z-ADD*ZERO     WN0171 112       OD Unused weigh
     C                     MOVEL*BLANK    WN0172  1        OD Added to Sch
     C                     MOVEL*BLANK    WN0173  1        OD Reallocate S
     C                     MOVEL*BLANK    WN0174  2        OD Status Unuse
     C                     MOVEL*BLANK    WN0175  1        EDI Status 1
     C                     MOVEL*BLANK    WN0176  1        EDI Status 2
     C                     MOVEL*BLANK    WN0177  1        EDI Status 3
     C                     MOVEL*BLANK    WN0178  1        Record Status
     C                     Z-ADD*ZERO     WN0179  60       Job Time
     C                     MOVEL*BLANK    WN0180 10        User Id
     C                     MOVEL*BLANK    WN0181 10        Job Name
     C                     Z-ADD*ZERO     WN0182  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YERDC   1
      *
      * Move key fields to @KNCPHN
     C                     Z-ADDWIAIC3    WGAIC3           Company Number
     C                     Z-ADDWIC4NB    WGC4NB           Order Number
     C                     Z-ADDWIDPNB    WGDPNB           Order Sequence
     C                     Z-ADDWIUENB    WGUENB           Order Secondary
     C                     Z-ADDWIJGDT    WGJGDT           OD Production D
      *
     C           KLCHSZ    KLIST
     C                     KFLD           WGAIC3           Company Number
     C                     KFLD           WGC4NB           Order Number
     C                     KFLD           WGDPNB           Order Sequence
     C                     KFLD           WGUENB           Order Secondary
     C                     KFLD           WGJGDT           OD Production D
     C           KLCHSZ    CHAIN@KNCPHN              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PDKNCPL0'MDACP
     C                     MOVEL'@KNCPHN' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL008.
     C                     MOVEL'LBL008'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SZEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SZEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPDKN1    YERDCS
      * Move non-key fields to @KNCPHN
     C                     Z-ADD*ZERO     WGIGQT           OD Qty/Cnsmd Pi
     C                     Z-ADD*ZERO     WGFLWG           OD Weight Sched
      *
      * Set PGM.*Record Data Changed flag
     C           QPDKN1    IFNE YERDCS
     C           YERDC     ANDNE'N'
     C                     MOVE 'Y'       YERDC
     C                     ENDIF
      * USER: Processing before Data update
      * Set Record Stamp CHGOB IF
     C                     Z-ADD##JTM     WGAATM           Job Time
     C                     MOVEL##USR     WGAYNA           User Id
     C                     MOVEL##PGM     WGA0NA           Job Name
     C                     Z-ADD##JDT     WGAXDT           Job Date
      * Set PGM.*Record Data Changed flag
     C           QPDKN1    IFNE YERDCS
     C           YERDC     ANDNE'N'
     C                     MOVE 'Y'       YERDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YERDC     IFEQ 'Y'
     C                     UPDAT@KNCPHN                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPDKNCPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         SZEXIT    ENDSR
      /EJECT
     CSR         TARVGN    BEGSR
      *================================================================
      * Rtv Productin Whs     RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSTA     KLIST
     C                     KFLD           WVAJCD           Warehouse Code
      * Setup key
     C                     MOVELWL0127    WVAJCD           Warehouse Code
      * Establish starting position
     C           KRSTA     CHAIN@ADRET1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0128           Production Ware
     C                     Z-ADD*ZERO     WL0129           Accounting Comp
     C                     GOTO TAEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWVAOCD    WL0128           Production Ware
     C                     Z-ADDWVBTC3    WL0129           Accounting Comp
     C                     ENDIF
      *================================================================
     CSR         TAEXIT    ENDSR
      /EJECT
     CSR         TBRVGN    BEGSR
      *================================================================
      * RTV Block Order Flag  RT - Order Header TRG  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSTB     KLIST
     C                     KFLD           WMAIC3           Company Number
     C                     KFLD           WMC4NB           Order Number
      * Setup key
     C                     Z-ADDWL0130    WMAIC3           Company Number
     C                     Z-ADDWL0131    WMC4NB           Order Number
      * Establish starting position
     C           KRSTB     CHAIN@BECPFK              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0176' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0132           Block Order Fla
     C                     GOTO TBEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWMBCST    WL0132           Block Order Fla
     C                     ENDIF
      *================================================================
     CSR         TBEXIT    ENDSR
      /EJECT
     CSR         TCRVGN    BEGSR
      *================================================================
      * Rtv CIE Alloc Method  RT - Company Item Ext  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * E2885 RMC 12/4/13 new alloc method="S"tandard -- if shipping with
      *   3 days, force Alloc Method to F-ASAP, else use B-JIT
      * Declare restrictor key work fields
     C           *LIKE     DEFN WWAIC3    WQTC01           Company Number
     C           *LIKE     DEFN WWHGCD    WQTC02           Item Code
      * Define keylist
     C           KRSTC     KLIST
     C                     KFLD           WQTC01           Company Number
     C                     KFLD           WQTC02           Item Code
      * Setup key
     C                     Z-ADDWL0133    WQTC01           Company Number
     C                     Z-ADDWL0134    WQTC02           Item Code
      * Establish starting position
     C           KRSTC     SETLL@FDREAW                    *
     C           KRSTC     READE@FDREAW                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR4125' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0135           Allocation Meth
     C                     GOTO TCEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * Rtv SchShpDte         RT - Order Header TRG  * 
     C                     EXSR TDRVGN
      * CASE: DB1.Allocation Method is Standard or Blank
     C           WWENST    IFEQ *BLANK                     *IF
     C           WWENST    OREQ 'S'
      * Rtv PrdDay Dte -Durtn RT - Calendar  * 
     C                     EXSR TERVGN
      * CASE: LCL.Scheduled Ship Date LE LCL.Date                  USR
     C           YL0058    IFLE YL0059                     *IF
     C                     MOVEL'F'       WL0135           Allocation Meth
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'B'       WL0135           Allocation Meth
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVELWWENST    WL0135           Allocation Meth
     C                     END                             *FI
     C           KRSTC     READE@FDREAW                  90*
     C                     ENDDO
      *================================================================
     CSR         TCEXIT    ENDSR
      /EJECT
     CSR         TDRVGN    BEGSR
      *================================================================
      * Rtv SchShpDte         RT - Order Header TRG  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WXC4NB    WQTD01           Order Number
      * Define keylist
     C           KRSTD     KLIST
     C                     KFLD           WQTD01           Order Number
      * Setup key
     C                     Z-ADDWL0136    WQTD01           Order Number
      * Establish starting position
     C           KRSTD     SETLL@BFCPY2                    *
     C           KRSTD     READE@BFCPY2                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0176' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     YL0058           Scheduled Ship
     C                     GOTO TDEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWXAODT    YL0058           Scheduled Ship
     C           KRSTD     READE@BFCPY2                  90*
     C                     ENDDO
      *================================================================
     CSR         TDEXIT    ENDSR
      /EJECT
     CSR         TERVGN    BEGSR
      *================================================================
      * Rtv PrdDay Dte -Durtn RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WUCNTU           Count USR
      * Declare restrictor key work fields
     C           *LIKE     DEFN WYAIC3    WQTE01           Company Number
      * Define keylist
     C           KPSTE     KLIST
     C                     KFLD           WQTE01           Company Number
     C                     KFLD           WYBCDT           Post to G/L Dat
      * Define keylist
     C           KRSTE     KLIST
     C                     KFLD           WQTE01           Company Number
      * Setup key
     C                     Z-ADDWWAIC3    WQTE01           Company Number
     C                     Z-ADD##JDT     WYBCDT           Post to G/L Dat
      * Establish starting position
     C           KPSTE     SETLL@AFREY1                    *
     C           KRSTE     READE@AFREY1                  90*
      * Data record not found
     C   90                MOVEL'USR0018' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: WRK.Count USR EQ PAR.*Duration (factor)
     C           WUCNTU    IFEQ 3                          *IF
     C                     Z-ADDWYBCDT    YL0059           *DATE
     C                     GOTO TEEXIT                     *QUIT
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C           KRSTE     READE@AFREY1                  90*
     C                     ENDDO
      *================================================================
     CSR         TEEXIT    ENDSR
      /EJECT
     CSR         TFRVGN    BEGSR
      *================================================================
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WWAIC3    WQTF01           Company Number
     C           *LIKE     DEFN WWHGCD    WQTF02           Item Code
      * Define keylist
     C           KRSTF     KLIST
     C                     KFLD           WQTF01           Company Number
     C                     KFLD           WQTF02           Item Code
      * Setup key
     C                     Z-ADDWL0137    WQTF01           Company Number
     C                     Z-ADDWL0138    WQTF02           Item Code
      * Establish starting position
     C           KRSTF     SETLL@FDREAW                    *
     C           KRSTF     READE@FDREAW                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR4125' W0RTN   7
      * USER: Processing if Data record not found
      * default to "Y"es if rcd not found. user isnt overriding it to No
     C                     MOVEL*BLANK    WL0140           Production Day
     C                     GOTO TFEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * RTV Day and Week No.   RT - Calendar  * 
     C                     EXSR TGRVGN
      * CASE: LCL.Day of Week is Sunday
     C           YL0063    IFEQ '1'                        *IF
     C                     MOVELWWD0ST    WL0140           Production Day
     C                     ELSE
      * CASE: LCL.Day of Week is Monday
     C           YL0063    IFEQ '2'                        *IF
     C                     MOVELWWD2ST    WL0140           Production Day
     C                     ELSE
      * CASE: LCL.Day of Week is Tuesday
     C           YL0063    IFEQ '3'                        *IF
     C                     MOVELWWD6ST    WL0140           Production Day
     C                     ELSE
      * CASE: LCL.Day of Week is Wednesday
     C           YL0063    IFEQ '4'                        *IF
     C                     MOVELWWWESP    WL0140           Production Day
     C                     ELSE
      * CASE: LCL.Day of Week is Thursday
     C           YL0063    IFEQ '5'                        *IF
     C                     MOVELWWEDST    WL0140           Production Day
     C                     ELSE
      * CASE: LCL.Day of Week is Friday
     C           YL0063    IFEQ '6'                        *IF
     C                     MOVELWWEFST    WL0140           Production Day
     C                     ELSE
      * CASE: LCL.Day of Week is Saturday
     C           YL0063    IFEQ '7'                        *IF
     C                     MOVELWWEHST    WL0140           Production Day
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSTF     READE@FDREAW                  90*
     C                     ENDDO
      *================================================================
     CSR         TFEXIT    ENDSR
      /EJECT
     CSR         TGRVGN    BEGSR
      *================================================================
      * RTV Day and Week No.   RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN TAAIC3    WQTG01           Company Number
     C           *LIKE     DEFN TABCDT    WQTG02           Post to G/L Dat
      * Define keylist
     C           KRSTG     KLIST
     C                     KFLD           WQTG01           Company Number
     C                     KFLD           WQTG02           Post to G/L Dat
      * Setup key
     C                     Z-ADDWL0137    WQTG01           Company Number
     C                     Z-ADDWL0139    WQTG02           Post to G/L Dat
      * Establish starting position
     C           KRSTG     SETLL@AFREYY                    *
     C           KRSTG     READE@AFREYY                  90*
      * Data record not found
     C   90                MOVEL'USR0018' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     MOVEL*BLANK    W0RTN            *Return code
      * PAR = DB1 By name
     C                     MOVELTAA9ST    YL0063           Day of Week
     C           KRSTG     READE@AFREYY                  90*
     C                     ENDDO
      *================================================================
     CSR         TGEXIT    ENDSR
      /EJECT
     CSR         THRVGN    BEGSR
      *================================================================
      * Val Sched Existance   RT - PS Prod Schedule  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSTH     KLIST
     C                     KFLD           TBAIC3           Company Number
     C                     KFLD           TBV5ST           Production Type
     C                     KFLD           TBELDT           Production Date
      * Setup key
     C                     Z-ADDWL0141    TBAIC3           Company Number
     C                     MOVELWL0142    TBV5ST           Production Type
     C                     Z-ADDWL0143    TBELDT           Production Date
      * Establish starting position
     C           KRSTH     CHAIN@JCCPVC              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1795' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'N'       WL0144           Record Found US
     C                     GOTO THEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL'Y'       WL0144           Record Found US
     C                     ENDIF
      *================================================================
     CSR         THEXIT    ENDSR
      /EJECT
     CSR         TIRVGN    BEGSR
      *================================================================
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0199  92       PS Weight Ship
     C                     Z-ADD*ZERO     WN0200  70       PS Pieces Ship
     C                     MOVEL*BLANK    WN0201  1        Piece Count Ite
     C                     Z-ADD*ZERO     WN0202  70       Pieces Per Bag
     C                     Z-ADD*ZERO     WN0203  70       Bags Per Unit
     C                     Z-ADD*ZERO     WN0204  92       Weight Producti
     C                     Z-ADD*ZERO     WN0205  70       Pieces Producti
     C                     Z-ADD*ZERO     WN0206 112       OD Qty/Cnsmd Pi
     C                     Z-ADD*ZERO     WN0207 112       OD Weight Sched
     C                     Z-ADD*ZERO     WN0208  70       Pieces Allocate
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0150           PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0199           PS Weight Ship
     C                     Z-ADD*ZERO     WN0200           PS Pieces Ship
     C                     Z-ADD*ZERO     WL0151           ATS Weight Avai
     C                     Z-ADD*ZERO     WL0152           ATS Pieces Avai
     C                     MOVEL*BLANK    WN0201           Piece Count Ite
     C                     Z-ADD*ZERO     WN0202           Pieces Per Bag
     C                     Z-ADD*ZERO     WN0203           Bags Per Unit
     C                     Z-ADD*ZERO     WN0204           Weight Producti
     C                     Z-ADD*ZERO     WN0205           Pieces Producti
     C                     Z-ADD*ZERO     WN0206           OD Qty/Cnsmd Pi
     C                     Z-ADD*ZERO     WN0207           OD Weight Sched
     C                     Z-ADD*ZERO     WN0208           Pieces Allocate
      * Define keylist
     C           KRSTI     KLIST
     C                     KFLD           WSAIC3           Company Number
     C                     KFLD           WSV5ST           Production Type
     C                     KFLD           WSELDT           Production Date
     C                     KFLD           WSHGCD           Item Code
     C                     KFLD           WSAJCD           Warehouse Code
      * Setup key
     C                     Z-ADDWL0145    WSAIC3           Company Number
     C                     MOVELWL0146    WSV5ST           Production Type
     C                     Z-ADDWL0147    WSELDT           Production Date
     C                     Z-ADDWL0148    WSHGCD           Item Code
     C                     MOVELWL0149    WSAJCD           Warehouse Code
      * Establish starting position
     C           KRSTI     CHAIN@I8CPUS              90    *
      * Data record not found
     C   90                MOVEL'USR1763' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * FP1054 06/02/06 add planned prod wt and pieces to Weight Prod & P
      * so calc is: Production = Planned Prod + Standard + Prod Adj - Con
      *  instead of:
      * Production = Standard + Prod Adj - Converted
      * Prod Avail = Production + Ship Cut Adj + Ship Adj - Prod Alloc
      * CASE: DB1.PS Lock Status is NOT LOCKED
     C           WSB5ST    IFEQ 'N'                        *IF
      * Ship Cut Adjust
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Chilling Time USR is GT Zero
      *   |- c2    : DB1.Production Date EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0153    IFGT 0                          *IF
     C           WSELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Ship Cut Adjust   RT - PS Prod Item Schedule  * 
     C                     EXSR TJRVGN
     C                     END                             *FI
      * FP1054 06/02/06 add planned prod wt and pieces to Weight Prod & P
      * Weight Production
      * PAR.Weight Production USR =
      *    *COMPUTE (x5+ x1 + x2 - x3 - x4)
      * x5    : DB1.PS Weight Planned Prod
      * +     : PGM.*Synon (15,2) work field
      * x1    : DB1.PS Weight Standard
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.PS Weight Prod Adj
      * -     : PGM.*Synon (15,2) work field
      * x3    : DB1.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x4    : DB1.PS Weight Whs Tfr Adj
     C           WSWTSP    ADD  WSDXWG    W0WA03           *Synon (15,2) w
     C           W0WA03    ADD  WSD1WG    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WSWTCN    W0WA01           *Synon (15,2) w
     C           W0WA01    SUB  WSGAWG    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0204           Weight Producti
      * Pieces Production
      * PAR.Pieces Production USR =
      *    *COMPUTE (x5+ x1 + x2 - x3 - x4)
      * x5    : DB1.PS Pieces Planned Prod
      * +     : PGM.*Synon (15,0) work field
      * x1    : DB1.PS Pieces Standard
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.PS Pieces Prod Adj
      * -     : PGM.*Synon (15,0) work field
      * x3    : DB1.PS Pieces Converted
      * -     : PGM.*Synon (17,7) work field
      * x4    : DB1.PS Pieces Whs Tfr Adj
     C           WSQTSP    ADD  WSB2NB    W0WJ03           *Synon (15,0) w
     C           W0WJ03    ADD  WSCBNB    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WSPSCV    W0WJ01           *Synon (15,0) w
     C           W0WJ01    SUB  WSBPNB    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0205           Pieces Producti
      * Weight Available
      * PAR.ATS Weight Available USR =
      *    *COMPUTE (x1 + x2 + x3 - x4)
      * x1    : PAR.Weight Production USR
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * +     : PGM.*Synon (15,2) work field
      * x3    : DB1.PS Weight Shipping Adj
      * -     : PGM.*Synon (15,2) work field
      * x4    : DB1.PS Weight Prod Allocated
     C           WN0204    ADD  WN0199    W0WA02           *Synon (15,2) w
     C           W0WA02    ADD  WSSAWT    W0WA01           *Synon (15,2) w
     C           W0WA01    SUB  WSOAWT    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0151           ATS Weight Avai
      * Pieces Available
      * PAR.ATS Pieces Available USR =
      *    *COMPUTE (x1 + x2 + x3 - x4)
      * x1    : PAR.Pieces Production USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Pieces Ship Cut Adj
      * +     : PGM.*Synon (15,0) work field
      * x3    : DB1.PS Pieces Shipping Adj
      * -     : PGM.*Synon (15,0) work field
      * x4    : DB1.PS Pieces Prod Allocated
     C           WN0205    ADD  WN0200    W0WJ02           *Synon (15,0) w
     C           W0WJ02    ADD  WSB9NB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    SUB  WSCDNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0152           ATS Pieces Avai
      * Weight Avail E1971 RMC   2/27/12 change to leave pieces if > 0
      * CASE: PAR.ATS Weight Available USR is Less than zero
     C           WL0151    IFLT 0                          *IF
      * CASE: PAR.ATS Pieces Available USR is LE Zero
     C           WL0152    IFLE 0                          *IF
     C                     Z-ADD*ZERO     WL0151           ATS Weight Avai
     C                     Z-ADD*ZERO     WL0152           ATS Pieces Avai
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADDWSF8WG    WL0150           PS Avg Piece Wg
     C                     END                             *FI
     C                     ENDIF
      *================================================================
     CSR         TIEXIT    ENDSR
      /EJECT
     CSR         TJRVGN    BEGSR
      *================================================================
      * Rtv Ship Cut Adjust   RT - PS Prod Item Schedule  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN TCAIC3    WQTJ01           Company Number
     C           *LIKE     DEFN TCHGCD    WQTJ02           Item Code
     C           *LIKE     DEFN TCAJCD    WQTJ03           Warehouse Code
     C           *LIKE     DEFN TCELDT    WQTJ04           Production Date
     C           *LIKE     DEFN TCV5ST    WQTJ05           Production Type
      * Define keylist
     C           KRSTJ     KLIST
     C                     KFLD           WQTJ01           Company Number
     C                     KFLD           WQTJ02           Item Code
     C                     KFLD           WQTJ03           Warehouse Code
     C                     KFLD           WQTJ04           Production Date
     C                     KFLD           WQTJ05           Production Type
      * Setup key
     C                     Z-ADDWSAIC3    WQTJ01           Company Number
     C                     Z-ADDWSHGCD    WQTJ02           Item Code
     C                     MOVELWSAJCD    WQTJ03           Warehouse Code
     C                     Z-ADDWSGPDT    WQTJ04           Production Date
     C                     MOVEL'P'       WQTJ05           Production Type
      * Establish starting position
     C           KRSTJ     SETLL@I8CPXP                    *
     C           KRSTJ     READE@I8CPXP                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1763' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WN0199           PS Weight Ship
     C                     Z-ADD*ZERO     WN0200           PS Pieces Ship
     C                     GOTO TJEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDTCE0WG    WN0199           PS Weight Ship
     C                     Z-ADDTCD6NB    WN0200           PS Pieces Ship
     C           KRSTJ     READE@I8CPXP                  90*
     C                     ENDDO
      *================================================================
     CSR         TJEXIT    ENDSR
      /EJECT
     CSR         TKRVGN    BEGSR
      *================================================================
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0209 112       OD Qty/Cnsmd Pi
     C                     Z-ADD*ZERO     WN0210 112       OD Weight Sched
     C                     Z-ADD*ZERO     WN0211 112       OD Quantity Inv
     C                     Z-ADD*ZERO     WN0212 112       OD Weight Inv S
     C                     Z-ADD*ZERO     WN0213 112       OD Quantity Unu
     C                     Z-ADD*ZERO     WN0214 112       OD Unused weigh
     C                     MOVEL*BLANK    WN0215  1        OD Added to Sch
     C                     MOVEL*BLANK    WN0216  1        OD Reallocate S
     C                     MOVEL*BLANK    WN0217  2        OD Status Unuse
     C                     MOVEL*BLANK    WN0218  1        EDI Status 1
     C                     MOVEL*BLANK    WN0219  1        EDI Status 2
     C                     MOVEL*BLANK    WN0220  1        EDI Status 3
     C                     MOVEL*BLANK    WN0221  1        Record Status
     C                     Z-ADD*ZERO     WN0222  60       Job Time
     C                     MOVEL*BLANK    WN0223 10        User Id
     C                     MOVEL*BLANK    WN0224 10        Job Name
     C                     Z-ADD*ZERO     WN0225  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSTK     KLIST
     C                     KFLD           WFAIC3           Company Number
     C                     KFLD           WFC4NB           Order Number
     C                     KFLD           WFDPNB           Order Sequence
     C                     KFLD           WFUENB           Order Secondary
     C                     KFLD           WFJGDT           OD Production D
      * Setup key
     C                     Z-ADDWL0154    WFAIC3           Company Number
     C                     Z-ADDWL0155    WFC4NB           Order Number
     C                     Z-ADDWL0156    WFDPNB           Order Sequence
     C                     Z-ADDWL0157    WFUENB           Order Secondary
     C                     Z-ADDWL0158    WFJGDT           OD Production D
      * Establish starting position
     C           KRSTK     CHAIN@KNCPHO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2238' W0RTN   7
      * USER: Processing if Data record not found
      * CRT Ord Detail Sched   CR - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0154    WL0101           Company Number
     C                     Z-ADDWL0155    WL0102           Order Number
     C                     Z-ADDWL0156    WL0103           Order Sequence
     C                     Z-ADDWL0157    WL0104           Order Secondary
     C                     Z-ADDWL0158    WL0105           OD Production D
     C                     Z-ADDWL0159    WL0106           Scheduled Ship
     C                     MOVELWL0160    WL0107    P      Warehouse Code
     C                     MOVELWL0161    WL0108    P      Order From Ware
     C                     Z-ADDWL0162    WL0109           Item Code
     C                     Z-ADDWL0164    WL0110           OD Qty/Cnsmd Pi
     C                     Z-ADDWL0163    WL0111           OD Weight Sched
     C                     Z-ADDWN0211    WL0112           OD Quantity Inv
     C                     Z-ADDWN0212    WL0113           OD Weight Inv S
     C                     Z-ADDWN0213    WL0114           OD Quantity Unu
     C                     Z-ADDWN0214    WL0115           OD Unused weigh
     C                     MOVELWN0215    WL0116    P      OD Added to Sch
     C                     MOVELWN0216    WL0117    P      OD Reallocate S
     C                     MOVELWN0217    WL0118    P      OD Status Unuse
     C                     MOVELWN0218    WL0119    P      EDI Status 1
     C                     MOVELWN0219    WL0120    P      EDI Status 2
     C                     MOVELWN0220    WL0121    P      EDI Status 3
     C                     MOVELWN0221    WL0122    P      Record Status
     C                     Z-ADDWN0222    WL0123           Job Time
     C                     MOVELWN0223    WL0124    P      User Id
     C                     MOVELWN0224    WL0125    P      Job Name
     C                     Z-ADDWN0225    WL0126           Job Date
     C                     EXSR SVCRRC
     C                     GOTO TKEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C           WFIGQT    ADD  WL0164    WN0209           OD Qty/Cnsmd Pi
     C           WFFLWG    ADD  WL0163    WN0210           OD Weight Sched
     C                     MOVELWFP7ST    YL0064           OD Added to Sch
      * CASE: PAR.Base/Conv/Loss Item is Converted/Fabricated
     C           WL0165    IFEQ 'C'                        *IF
     C           WL0165    OREQ 'F'
      * CASE: PAR.OD Production Date EQ JOB.*Job date
     C           WL0158    IFEQ ##JDT                      *IF
     C                     MOVEL'Y'       YL0064           OD Added to Sch
     C                     END                             *FI
     C                     END                             *FI
      * CASE: PAR.OD Quantity Scheduled is Greater than zero
     C           WN0209    IFGT 0                          *IF
      * CHG Qty/Wgt Scheduled  CH - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWFAIC3    WL0166           Company Number
     C                     Z-ADDWFC4NB    WL0167           Order Number
     C                     Z-ADDWFDPNB    WL0168           Order Sequence
     C                     Z-ADDWFUENB    WL0169           Order Secondary
     C                     Z-ADDWFJGDT    WL0170           OD Production D
     C                     Z-ADDWN0209    WL0171           OD Qty/Cnsmd Pi
     C                     Z-ADDWN0210    WL0172           OD Weight Sched
     C                     Z-ADDWFIUQT    WL0173           OD Quantity Inv
     C                     Z-ADDWFF3WG    WL0174           OD Weight Inv S
     C                     MOVELYL0064    WL0175    P      OD Added to Sch
     C                     EXSR TLCHRC
     C                     ELSE
      * CASE: *OTHERWISE
      * DLT Ord Detail Sched   DL - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWFAIC3    WL0077           Company Number
     C                     Z-ADDWFC4NB    WL0078           Order Number
     C                     Z-ADDWFDPNB    WL0079           Order Sequence
     C                     Z-ADDWFUENB    WL0080           Order Secondary
     C                     Z-ADDWFJGDT    WL0081           OD Production D
     C                     EXSR SODLRC
     C                     END                             *FI
     C                     ENDIF
      *================================================================
     CSR         TKEXIT    ENDSR
      /EJECT
     CSR         TLCHRC    BEGSR
      *================================================================
      * CHG Qty/Wgt Scheduled  CH - Order Detail Schedule  * 
      *================================================================
      * This is a shared subroutine
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0226  70       Scheduled Ship
     C                     MOVEL*BLANK    WN0227  3        Warehouse Code
     C                     MOVEL*BLANK    WN0228  3        Order From Ware
     C                     Z-ADD*ZERO     WN0229  70       Item Code
     C                     Z-ADD*ZERO     WN0230 112       OD Quantity Unu
     C                     Z-ADD*ZERO     WN0231 112       OD Unused weigh
     C                     MOVEL*BLANK    WN0232  1        OD Reallocate S
     C                     MOVEL*BLANK    WN0233  2        OD Status Unuse
     C                     MOVEL*BLANK    WN0234  1        EDI Status 1
     C                     MOVEL*BLANK    WN0235  1        EDI Status 2
     C                     MOVEL*BLANK    WN0236  1        EDI Status 3
     C                     MOVEL*BLANK    WN0237  1        Record Status
     C                     Z-ADD*ZERO     WN0238  60       Job Time
     C                     MOVEL*BLANK    WN0239 10        User Id
     C                     MOVEL*BLANK    WN0240 10        Job Name
     C                     Z-ADD*ZERO     WN0241  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YFRDC   1
      *
      * Move key fields to @KNCPHN
     C                     Z-ADDWL0166    WGAIC3           Company Number
     C                     Z-ADDWL0167    WGC4NB           Order Number
     C                     Z-ADDWL0168    WGDPNB           Order Sequence
     C                     Z-ADDWL0169    WGUENB           Order Secondary
     C                     Z-ADDWL0170    WGJGDT           OD Production D
      *
     C           KLCHTL    KLIST
     C                     KFLD           WGAIC3           Company Number
     C                     KFLD           WGC4NB           Order Number
     C                     KFLD           WGDPNB           Order Sequence
     C                     KFLD           WGUENB           Order Secondary
     C                     KFLD           WGJGDT           OD Production D
     C           KLCHTL    CHAIN@KNCPHN              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PDKNCPL0'MDACP
     C                     MOVEL'@KNCPHN' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL009.
     C                     MOVEL'LBL009'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO TLEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO TLEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPDKN1    YFRDCS
      * Move non-key fields to @KNCPHN
     C                     Z-ADDWL0171    WGIGQT           OD Qty/Cnsmd Pi
     C                     Z-ADDWL0172    WGFLWG           OD Weight Sched
     C                     Z-ADDWL0173    WGIUQT           OD Quantity Inv
     C                     Z-ADDWL0174    WGF3WG           OD Weight Inv S
     C                     MOVELWL0175    WGP7ST    P      OD Added to Sch
      *
      * Set PGM.*Record Data Changed flag
     C           QPDKN1    IFNE YFRDCS
     C           YFRDC     ANDNE'N'
     C                     MOVE 'Y'       YFRDC
     C                     ENDIF
      * USER: Processing before Data update
      * Set Record Stamp CHGOB IF
     C                     Z-ADD##JTM     WGAATM           Job Time
     C                     MOVEL##USR     WGAYNA           User Id
     C                     MOVEL##PGM     WGA0NA           Job Name
     C                     Z-ADD##JDT     WGAXDT           Job Date
      * Set PGM.*Record Data Changed flag
     C           QPDKN1    IFNE YFRDCS
     C           YFRDC     ANDNE'N'
     C                     MOVE 'Y'       YFRDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YFRDC     IFEQ 'Y'
     C                     UPDAT@KNCPHN                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPDKNCPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         TLEXIT    ENDSR
      /EJECT
     CSR         TMRVGN    BEGSR
      *================================================================
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0242  70       PS Available Sh
     C                     Z-ADD*ZERO     WN0243  92       PS Weight Plann
     C                     Z-ADD*ZERO     WN0244  70       PS Pieces Plann
     C                     Z-ADD*ZERO     WN0245  72       PS Pct of Carca
     C                     Z-ADD*ZERO     WN0246  92       PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0247  92       PS Weight Inv O
     C                     Z-ADD*ZERO     WN0248  70       PS Pieces Inv O
     C                     Z-ADD*ZERO     WN0249  92       PS Weight Stand
     C                     Z-ADD*ZERO     WN0250  70       PS Pieces Stand
     C                     Z-ADD*ZERO     WN0251  92       PS Weight Conve
     C                     Z-ADD*ZERO     WN0252  70       PS Pieces Conve
     C                     Z-ADD*ZERO     WN0253  92       PS Weight Shipp
     C                     Z-ADD*ZERO     WN0254  70       PS Pieces Shipp
     C                     Z-ADD*ZERO     WN0255  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0256  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0257  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0258  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0259  92       PS Weight Ship
     C                     Z-ADD*ZERO     WN0260  70       PS Pieces Ship
     C                     Z-ADD*ZERO     WN0261  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0262  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0263  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0264  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0265 112       PS Unit Weight
     C                     Z-ADD*ZERO     WN0266  70       PS Pieces Whs T
     C                     Z-ADD*ZERO     WN0267 112       PS Weight Whs T
     C                     Z-ADD*ZERO     WN0268  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0269 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0270  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0271 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0272  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0273 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0274  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0275 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0276  70       PS Pieces Unuse
     C                     MOVEL*BLANK    WN0277  3        PS Item Id
     C                     MOVEL*BLANK    WN0278  2        Warehouse Type
     C                     MOVEL*BLANK    WN0279  1        PS Lock Status
     C                     MOVEL*BLANK    WN0280  1        PS Export/Domes
     C                     MOVEL*BLANK    WN0281  1        PS Print On Sch
     C                     MOVEL*BLANK    WN0282  1        PS Piece Count
     C                     MOVEL*BLANK    WN0283  1        PS Unused Sts 1
     C                     MOVEL*BLANK    WN0284  1        PS Unused Sts 2
     C                     MOVEL*BLANK    WN0285  1        PS Unused Sts 3
     C                     MOVEL*BLANK    WN0286  1        PS Unused Sts 4
     C                     MOVEL*BLANK    WN0287  2        PS Item Sched N
     C                     MOVEL*BLANK    WN0288  3        PS Production W
     C                     Z-ADD*ZERO     WN0289  92       PS Weight Order
     C                     Z-ADD*ZERO     WN0290  70       PS Pieces Order
     C                     Z-ADD*ZERO     WN0291  92       PS Weight FC Ad
     C                     Z-ADD*ZERO     WN0292  70       PS Pieces FC Ad
     C                     Z-ADD*ZERO     WN0293  92       PS Weight FX Ad
     C                     Z-ADD*ZERO     WN0294  70       PS Pieces FX Ad
     C                     Z-ADD*ZERO     WN0295  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0296  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0297  92       PS Weight Avail
     C                     Z-ADD*ZERO     WN0298  70       PS Pieces Avail
     C                     Z-ADD*ZERO     WN0299  92       PS Weight Produ
     C                     Z-ADD*ZERO     WN0300  70       PS Pieces Produ
     C                     Z-ADD*ZERO     WN0301  92       PS Weight Fab N
     C                     Z-ADD*ZERO     WN0302  70       PS Pieces Fab N
     C                     Z-ADD*ZERO     WN0303  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0304  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0305  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0306  70       PS Pieces Sched
     C                     MOVEL*BLANK    WN0307  6        Department Code
     C                     Z-ADD*ZERO     WN0308  30       Item Structure
     C                     Z-ADD*ZERO     WN0309  30       Item Structure
     C                     Z-ADD*ZERO     WN0310  30       Item Structure
     C                     MOVEL*BLANK    WN0311  6        Primal Group Co
     C                     MOVEL*BLANK    WN0312  1        EDI Status 1
     C                     MOVEL*BLANK    WN0313  1        EDI Status 2
     C                     MOVEL*BLANK    WN0314  1        EDI Status 3
     C                     MOVEL*BLANK    WN0315  1        Record Status
     C                     Z-ADD*ZERO     WN0316  60       Job Time
     C                     MOVEL*BLANK    WN0317 10        User Id
     C                     MOVEL*BLANK    WN0318 10        Job Name
     C                     Z-ADD*ZERO     WN0319  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSTM     KLIST
     C                     KFLD           WSAIC3           Company Number
     C                     KFLD           WSV5ST           Production Type
     C                     KFLD           WSELDT           Production Date
     C                     KFLD           WSHGCD           Item Code
     C                     KFLD           WSAJCD           Warehouse Code
      * Setup key
     C                     Z-ADDWL0176    WSAIC3           Company Number
     C                     MOVELWL0177    WSV5ST           Production Type
     C                     Z-ADDWL0178    WSELDT           Production Date
     C                     Z-ADDWL0179    WSHGCD           Item Code
     C                     MOVELWL0180    WSAJCD           Warehouse Code
      * Establish starting position
     C           KRSTM     CHAIN@I8CPUS              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1763' W0RTN   7
      * USER: Processing if Data record not found
     C                     Z-ADDWL0181    WN0267           PS Weight Whs T
     C                     Z-ADDWL0182    WN0266           PS Pieces Whs T
      * CASE: PAR.PS Pieces Whse Tfr Adj is GT Zero
     C           WN0266    IFGT 0                          *IF
      * Average Piece Weight
      * PAR.PS Avg Piece Wgt =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Whs Tfr Adj
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Pieces Whs Tfr Adj
     C           WN0267    DIV  WN0266    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0246           PS Avg Piece Wg
     C                     END                             *FI
      * UPS Crt Prod Detail   CR - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0176    WL0187           Company Number
     C                     MOVELWL0177    WL0188    P      Production Type
     C                     Z-ADDWL0178    WL0189           Production Date
     C                     Z-ADDWL0179    WL0190           Item Code
     C                     MOVELWL0180    WL0191    P      Warehouse Code
     C                     Z-ADDWN0242    WL0192           PS Available Sh
     C                     Z-ADDWN0243    WL0193           PS Weight Plann
     C                     Z-ADDWN0244    WL0194           PS Pieces Plann
     C                     Z-ADDWN0245    WL0195           PS Pct of Carca
     C                     Z-ADDWN0246    WL0196           PS Avg Piece Wg
     C                     Z-ADDWN0247    WL0197           PS Weight Inv O
     C                     Z-ADDWN0248    WL0198           PS Pieces Inv O
     C                     Z-ADDWN0249    WL0199           PS Weight Stand
     C                     Z-ADDWN0250    WL0200           PS Pieces Stand
     C                     Z-ADDWN0251    WL0201           PS Weight Conve
     C                     Z-ADDWN0252    WL0202           PS Pieces Conve
     C                     Z-ADDWN0253    WL0203           PS Weight Shipp
     C                     Z-ADDWN0254    WL0204           PS Pieces Shipp
     C                     Z-ADDWN0255    WL0205           PS Weight Prod
     C                     Z-ADDWN0256    WL0206           PS Pieces Prod
     C                     Z-ADDWN0257    WL0207           PS Weight Inv A
     C                     Z-ADDWN0258    WL0208           PS Pieces Inv A
     C                     Z-ADDWN0259    WL0209           PS Weight Ship
     C                     Z-ADDWN0260    WL0210           PS Pieces Ship
     C                     Z-ADDWN0261    WL0211           PS Weight Prod
     C                     Z-ADDWN0262    WL0212           PS Pieces Prod
     C                     Z-ADDWN0263    WL0213           PS Weight Inv A
     C                     Z-ADDWN0264    WL0214           PS Pieces Inv A
     C                     Z-ADDWN0265    WL0215           PS Unit Weight
     C                     Z-ADDWN0266    WL0216           PS Pieces Whs T
     C                     Z-ADDWN0267    WL0217           PS Weight Whs T
     C                     Z-ADDWN0268    WL0218           PS Pieces Unuse
     C                     Z-ADDWN0269    WL0219           PS Weight Unuse
     C                     Z-ADDWN0270    WL0220           PS Pieces Unuse
     C                     Z-ADDWN0271    WL0221           PS Weight Unuse
     C                     Z-ADDWN0272    WL0222           PS Pieces Unuse
     C                     Z-ADDWN0273    WL0223           PS Weight Unuse
     C                     Z-ADDWN0274    WL0224           PS Pieces Unuse
     C                     Z-ADDWN0275    WL0225           PS Weight Unuse
     C                     Z-ADDWN0276    WL0226           PS Pieces Unuse
     C                     MOVELWN0277    WL0227    P      PS Item Id
     C                     MOVELWN0278    WL0228    P      Warehouse Type
     C                     MOVELWN0279    WL0229    P      PS Lock Status
     C                     MOVELWN0280    WL0230    P      PS Export/Domes
     C                     MOVELWN0281    WL0231    P      PS Print On Sch
     C                     MOVELWN0282    WL0232    P      PS Piece Count
     C                     MOVELWN0283    WL0233    P      PS Unused Sts 1
     C                     MOVELWN0284    WL0234    P      PS Unused Sts 2
     C                     MOVELWN0285    WL0235    P      PS Unused Sts 3
     C                     MOVELWN0286    WL0236    P      PS Unused Sts 4
     C                     MOVELWN0287    WL0237    P      PS Item Sched N
     C                     MOVELWN0288    WL0238    P      PS Production W
     C                     Z-ADDWN0289    WL0239           PS Weight Order
     C                     Z-ADDWN0290    WL0240           PS Pieces Order
     C                     Z-ADDWN0291    WL0241           PS Weight FC Ad
     C                     Z-ADDWN0292    WL0242           PS Pieces FC Ad
     C                     Z-ADDWN0293    WL0243           PS Weight FX Ad
     C                     Z-ADDWN0294    WL0244           PS Pieces FX Ad
     C                     Z-ADDWN0295    WL0245           PS Weight Sched
     C                     Z-ADDWN0296    WL0246           PS Pieces Sched
     C                     Z-ADDWN0297    WL0247           PS Weight Avail
     C                     Z-ADDWN0298    WL0248           PS Pieces Avail
     C                     Z-ADDWN0299    WL0249           PS Weight Produ
     C                     Z-ADDWN0300    WL0250           PS Pieces Produ
     C                     Z-ADDWN0301    WL0251           PS Weight Fab N
     C                     Z-ADDWN0302    WL0252           PS Pieces Fab N
     C                     Z-ADDWN0303    WL0253           PS Weight Sched
     C                     Z-ADDWN0304    WL0254           PS Pieces Sched
     C                     Z-ADDWN0305    WL0255           PS Weight Sched
     C                     Z-ADDWN0306    WL0256           PS Pieces Sched
     C                     MOVELWN0307    WL0257    P      Department Code
     C                     Z-ADDWN0308    WL0258           Item Structure
     C                     Z-ADDWN0309    WL0259           Item Structure
     C                     Z-ADDWN0310    WL0260           Item Structure
     C                     MOVELWN0311    WL0261    P      Primal Group Co
     C                     MOVELWN0312    WL0262    P      EDI Status 1
     C                     MOVELWN0313    WL0263    P      EDI Status 2
     C                     MOVELWN0314    WL0264    P      EDI Status 3
     C                     MOVELWN0315    WL0265    P      Record Status
     C                     Z-ADDWN0316    WL0266           Job Time
     C                     MOVELWN0317    WL0267    P      User Id
     C                     MOVELWN0318    WL0268    P      Job Name
     C                     Z-ADDWN0319    WL0269           Job Date
     C                     EXSR TNCRRC
      *  not necessary here ...
     C                     GOTO TMEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C           WSGAWG    ADD  WL0181    WN0267           PS Weight Whs T
     C           WSBPNB    ADD  WL0182    WN0266           PS Pieces Whs T
      * Chg Prod Whse Txfr    CH - PS Prod Item Schedule  * 
     C                     EXSR TPCHRC
      *  not necessary here ...
      * FP1054 create/delete consumed records - if called from PRD routin
      *  and STD was allocated
     C                     ENDIF
      *================================================================
     CSR         TMEXIT    ENDSR
      /EJECT
     CSR         TNCRRC    BEGSR
      *================================================================
      * UPS Crt Prod Detail   CR - PS Prod Item Schedule  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move all fields to @I8CPUR
     C                     Z-ADDWL0187    WTAIC3           Company Number
     C                     MOVELWL0188    WTV5ST           Production Type
     C                     Z-ADDWL0189    WTELDT           Production Date
     C                     Z-ADDWL0190    WTHGCD           Item Code
     C                     MOVELWL0191    WTAJCD           Warehouse Code
     C                     Z-ADDWL0192    WTGPDT           PS Available Sh
     C                     Z-ADDWL0193    WTWTSP           PS Weight Plann
     C                     Z-ADDWL0194    WTQTSP           PS Pieces Plann
     C                     Z-ADDWL0195    WTDJPC           PS Pct of Carca
     C                     Z-ADDWL0196    WTF8WG           PS Avg Piece Wg
     C                     Z-ADDWL0197    WTWTIN           PS Weight Inv O
     C                     Z-ADDWL0198    WTD5NB           PS Pieces Inv O
     C                     Z-ADDWL0199    WTDXWG           PS Weight Stand
     C                     Z-ADDWL0200    WTB2NB           PS Pieces Stand
     C                     Z-ADDWL0201    WTWTCN           PS Weight Conve
     C                     Z-ADDWL0202    WTPSCV           PS Pieces Conve
     C                     Z-ADDWL0203    WTSAWT           PS Weight Shipp
     C                     Z-ADDWL0204    WTB9NB           PS Pieces Shipp
     C                     Z-ADDWL0205    WTD1WG           PS Weight Prod
     C                     Z-ADDWL0206    WTCBNB           PS Pieces Prod
     C                     Z-ADDWL0207    WTEZWG           PS Weight Inv A
     C                     Z-ADDWL0208    WTCCNB           PS Pieces Inv A
     C                     Z-ADDWL0209    WTE0WG           PS Weight Ship
     C                     Z-ADDWL0210    WTD6NB           PS Pieces Ship
     C                     Z-ADDWL0211    WTOAWT           PS Weight Prod
     C                     Z-ADDWL0212    WTCDNB           PS Pieces Prod
     C                     Z-ADDWL0213    WTUNW2           PS Weight Inv A
     C                     Z-ADDWL0214    WTCENB           PS Pieces Inv A
     C                     Z-ADDWL0215    WTF9WG           PS Unit Weight
     C                     Z-ADDWL0216    WTBPNB           PS Pieces Whs T
     C                     Z-ADDWL0217    WTGAWG           PS Weight Whs T
     C                     Z-ADDWL0218    WTBQNB           PS Pieces Unuse
     C                     Z-ADDWL0219    WTGBWG           PS Weight Unuse
     C                     Z-ADDWL0220    WTBRNB           PS Pieces Unuse
     C                     Z-ADDWL0221    WTGCWG           PS Weight Unuse
     C                     Z-ADDWL0222    WTBSNB           PS Pieces Unuse
     C                     Z-ADDWL0223    WTGDWG           PS Weight Unuse
     C                     Z-ADDWL0224    WTBWNB           PS Pieces Unuse
     C                     Z-ADDWL0225    WTGEWG           PS Weight Unuse
     C                     Z-ADDWL0226    WTPS6U           PS Pieces Unuse
     C                     MOVELWL0227    WTWCST           PS Item Id
     C                     MOVELWL0228    WTWPST           Warehouse Type
     C                     MOVELWL0229    WTB5ST           PS Lock Status
     C                     MOVELWL0230    WTTFST           PS Export/Domes
     C                     MOVELWL0231    WTTEST           PS Print On Sch
     C                     MOVELWL0232    WTTHST           PS Piece Count
     C                     MOVELWL0233    WTUDST           PS Unused Sts 1
     C                     MOVELWL0234    WTUFST           PS Unused Sts 2
     C                     MOVELWL0235    WTUGST           PS Unused Sts 3
     C                     MOVELWL0236    WTUHST           PS Unused Sts 4
     C                     MOVELWL0237    WTB6ST           PS Item Sched N
     C                     MOVELWL0238    WTB7ST           PS Production W
     C                     Z-ADDWL0239    WTDVWG           PS Weight Order
     C                     Z-ADDWL0240    WTD7NB           PS Pieces Order
     C                     Z-ADDWL0241    WTFCAD           PS Weight FC Ad
     C                     Z-ADDWL0242    WTD9NB           PS Pieces FC Ad
     C                     Z-ADDWL0243    WTDWWG           PS Weight FX Ad
     C                     Z-ADDWL0244    WTEANB           PS Pieces FX Ad
     C                     Z-ADDWL0245    WTSHWT           PS Weight Sched
     C                     Z-ADDWL0246    WTEBNB           PS Pieces Sched
     C                     Z-ADDWL0247    WTAVWT           PS Weight Avail
     C                     Z-ADDWL0248    WTECNB           PS Pieces Avail
     C                     Z-ADDWL0249    WTWTON           PS Weight Produ
     C                     Z-ADDWL0250    WTEDNB           PS Pieces Produ
     C                     Z-ADDWL0251    WTFNWT           PS Weight Fab N
     C                     Z-ADDWL0252    WTEENB           PS Pieces Fab N
     C                     Z-ADDWL0253    WTQTAS           PS Weight Sched
     C                     Z-ADDWL0254    WTEFNB           PS Pieces Sched
     C                     Z-ADDWL0255    WTWAIO           PS Weight Sched
     C                     Z-ADDWL0256    WTEGNB           PS Pieces Sched
     C                     MOVELWL0257    WTR3CD           Department Code
     C                     Z-ADDWL0258    WTRGNB           Item Structure
     C                     Z-ADDWL0259    WTRHNB           Item Structure
     C                     Z-ADDWL0260    WTRINB           Item Structure
     C                     MOVELWL0261    WTXRCD           Primal Group Co
     C                     MOVELWL0262    WTUVST           EDI Status 1
     C                     MOVELWL0263    WTUWST           EDI Status 2
     C                     MOVELWL0264    WTUXST           EDI Status 3
     C                     MOVELWL0265    WTVSST           Record Status
     C                     Z-ADDWL0266    WTAATM           Job Time
     C                     MOVELWL0267    WTAYNA           User Id
     C                     MOVELWL0268    WTA0NA           Job Name
     C                     Z-ADDWL0269    WTAXDT           Job Date
      *
      * USER: Processing before Data update
      * BPS Setup Item Info   IF
      *
     C                     Z-ADD*ZERO     WN0320 155       System Value Nu
      *
      * UPS Rtv Company/Item  IF
      * Rtv Prd Sch Info   PS RT - Company Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWTAIC3    WL0001           Company Number
     C                     Z-ADDWTHGCD    WL0002           Item Code
     C                     EXSR SBRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    WUAVNA    P      Description Lin
     C                     MOVELWL0004    WUADCD    P      UOM Primary
     C                     Z-ADDWL0005    WUAIWG           Unit Weight
     C                     Z-ADDWL0006    WTRINB           Item Structure
     C                     Z-ADDWL0007    WTRHNB           Item Structure
     C                     Z-ADDWL0008    WTRGNB           Item Structure
     C                     MOVELWL0009    WUN0CD    P      Item Type Code
     C                     MOVELWL0010    WUQ1CD    P      Default Warehou
     C                     Z-ADDWL0011    WUCHTM           Fresh Chilling
     C                     MOVELWL0012    WUQZCD    P      Base_Conv_Loss
     C                     MOVELWL0013    WUXWST    P      Variety_Rendere
     C                     MOVELWL0014    WUVMST    P      Credit Item Sta
     C                     Z-ADDWL0015    WUSWGH           Std Weight_Head
     C                     Z-ADDWL0016    WUPPHE           Pieces Per Head
     C                     MOVELWL0017    WTR3CD    P      Department Code
     C                     MOVELWL0018    WUSDCD    P      Group for Packa
     C                     MOVELWL0019    WUX5ST    P      Seconds Item
     C                     MOVELWL0020    WTTHST    P      Piece Count Ite
     C                     Z-ADDWL0021    WUBDNB           Pieces Per Bag
     C                     Z-ADDWL0022    WUBJNB           Bags Per Unit
     C                     MOVELWL0023    WTTFST    P      Export_Domestic
     C                     MOVELWL0024    WTTEST    P      Print On Schedu
     C                     MOVELWL0025    WUSYST    P      Fresh Inv Alloc
     C                     MOVELWL0026    WUSZST    P      Fresh Sched As
     C                     MOVELWL0027    WUS1ST    P      Frozen Inv Allo
     C                     MOVELWL0028    WTXRCD    P      Primal Group Co
      * BPS Rtv Whs Info      RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWTAJCD    WL0029    P      Warehouse Code
     C                     EXSR SCRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0030    WTWPST    P      Warehouse Type
     C                     MOVELWL0031    WUXUST    P      Trans Contol AS
     C                     MOVELWL0032    WUT0ST    P      Warehouse Locat
     C                     MOVELWL0033    WUT1ST    P      Warehouse Std C
     C                     Z-ADDWL0034    WUDBNB           Warehouse Chill
      * BPS Set Up Item Id    IF
      * CASE: PAR.Item Type Code is Raw Materials
     C           WUN0CD    IFEQ 'RM'                       *IF
     C                     MOVEL'RMB'     WTWCST           PS Item Id
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.Seconds Item is Yes
     C           WUX5ST    IFEQ 'Y'                        *IF
     C                     MOVEL'FSC'     WTWCST           PS Item Id
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.Variety/Rendered/Cut is Variety
     C           WUXWST    IFEQ 'V'                        *IF
     C                     MOVEL'FVR'     WTWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Variety/Rendered/Cut is Rendered
     C           WUXWST    IFEQ 'R'                        *IF
     C                     MOVEL'FRD'     WTWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Variety/Rendered/Cut is Cut
     C           WUXWST    IFEQ 'C'                        *IF
      * Base/Converted/Fabricated
      * CASE: PAR.Credit Item Status is yes
     C           WUVMST    IFEQ 'Y'                        *IF
      * Setup Base/Converted/Fabricated Credit
      * CASE: PAR.Converted/Base Item is Base
     C           WUQZCD    IFEQ 'B'                        *IF
     C                     MOVEL'FBC'     WTWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Converted/Base Item is Converted
     C           WUQZCD    IFEQ 'C'                        *IF
     C                     MOVEL'FCC'     WTWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Converted/Base Item is Fabricated
     C           WUQZCD    IFEQ 'F'                        *IF
     C                     MOVEL'FFC'     WTWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Converted/Base Item is Loss
     C           WUQZCD    IFEQ 'L'                        *IF
     C                     MOVEL'FLC'     WTWCST           PS Item Id
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup Base/Converted/Fabricated
      * CASE: PAR.Converted/Base Item is Base
     C           WUQZCD    IFEQ 'B'                        *IF
     C                     MOVEL'FGB'     WTWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Converted/Base Item is Converted
     C           WUQZCD    IFEQ 'C'                        *IF
     C                     MOVEL'FCV'     WTWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Converted/Base Item is Fabricated
     C           WUQZCD    IFEQ 'F'                        *IF
     C                     MOVEL'FFB'     WTWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Converted/Base Item is Loss
     C           WUQZCD    IFEQ 'L'                        *IF
     C                     MOVEL'FLS'     WTWCST           PS Item Id
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Output PS Prod Warehouse
      * Rtv Productin Whs     RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWTAJCD    WL0127    P      Warehouse Code
     C                     EXSR TARVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0128    WTB7ST    P      Production Ware
     C                     Z-ADDWL0129    YL0065           Accounting Comp
      * Available Ship Date
      * CASE: WRK.Warehouse Std Chill Time is yes
     C           WUT1ST    IFEQ 'Y'                        *IF
      * UPS Clc Avail Shp Dte RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWTAIC3    WL0270           Company Number
     C                     Z-ADDWL0189    WL0271           Post to G/L Dat
     C                     Z-ADDWUDBNB    WL0272           Fresh Chilling
     C                     EXSR TORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0273    WTGPDT           PS Available Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * UPS Clc Avail Shp Dte RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWTAIC3    WL0270           Company Number
     C                     Z-ADDWL0189    WL0271           Post to G/L Dat
     C                     Z-ADDWUCHTM    WL0272           Fresh Chilling
     C                     EXSR TORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0273    WTGPDT           PS Available Sh
     C                     END                             *FI
      * Average Piece Weight
      * CASE: PAR.PS Pieces Planned Prod is GT Zero
     C           WL0194    IFGT 0                          *IF
     C           WL0193    DIV  WL0194    WTF8WG           PS Avg Piece Wg
     C                     END                             *FI
      * UPS CRTOBJ Stamp      IF
     C                     MOVEL'A'       WTVSST           Record Status
     C                     Z-ADD##JTM     WTAATM           Job Time
     C                     MOVEL##USR     WTAYNA           User Id
     C                     MOVEL##PGM     WTA0NA           Job Name
     C                     Z-ADD##JDT     WTAXDT           Job Date
     C                     MOVEL'N'       WTB5ST           PS Lock Status
     C           KLCRTN    KLIST
     C                     KFLD           WTAIC3           Company Number
     C                     KFLD           WTV5ST           Production Type
     C                     KFLD           WTELDT           Production Date
     C                     KFLD           WTHGCD           Item Code
     C                     KFLD           WTAJCD           Warehouse Code
      * Check for duplicate primary key
     C           KLCRTN    SETLL@I8CPUR                  90*
     C           *IN90     IFEQ '1'
     C                     MOVEL'USR1764' W0RTN   7
      * Send message 'PS Prod Item Schedule  EX'
     C                     MOVEL'USR1764' ZAMSID
     C                     EXSR ZASNMS
     C                     GOTO TNEXIT
     C                     ENDIF
      *
     C                     WRITE@I8CPUR                91  *
      *
     C           *IN91     IFEQ '1'
      * Write error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
     C                     ENDIF
      *================================================================
     CSR         TNEXIT    ENDSR
      /EJECT
     CSR         TORVGN    BEGSR
      *================================================================
      * UPS Clc Avail Shp Dte RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WUCNTU           Count USR
      * Declare restrictor key work fields
     C           *LIKE     DEFN WLAIC3    WQTO01           Company Number
      * Define keylist
     C           KPSTO     KLIST
     C                     KFLD           WQTO01           Company Number
     C                     KFLD           WLBCDT           Post to G/L Dat
      * Define keylist
     C           KRSTO     KLIST
     C                     KFLD           WQTO01           Company Number
      * Setup key
     C                     Z-ADDWL0270    WQTO01           Company Number
     C                     Z-ADDWL0271    WLBCDT           Post to G/L Dat
      * Establish starting position
     C           KPSTO     SETLL@AFREBE                    *
     C           KRSTO     READE@AFREBE                  90*
      * Data record not found
     C   90                MOVEL'USR0018' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: WRK.Count USR EQ PAR.Chilling Time
     C           WUCNTU    IFEQ WL0272                     *IF
     C                     Z-ADDWLBCDT    WL0273           PS Available Sh
     C                     GOTO TOEXIT                     *QUIT
     C                     END                             *FI
      * Skip Saturday
      * CASE: DB1.Day of Week is Saturday
     C           WLA9ST    IFEQ '7'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C           KRSTO     READE@AFREBE                  90*
     C                     ENDDO
      *================================================================
     CSR         TOEXIT    ENDSR
      /EJECT
     CSR         TPCHRC    BEGSR
      *================================================================
      * Chg Prod Whse Txfr    CH - PS Prod Item Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0321  70       PS Available Sh
     C                     Z-ADD*ZERO     WN0322  92       PS Weight Plann
     C                     Z-ADD*ZERO     WN0323  70       PS Pieces Plann
     C                     Z-ADD*ZERO     WN0324  72       PS Pct of Carca
     C                     Z-ADD*ZERO     WN0325  92       PS Weight Inv O
     C                     Z-ADD*ZERO     WN0326  70       PS Pieces Inv O
     C                     Z-ADD*ZERO     WN0327  92       PS Weight Stand
     C                     Z-ADD*ZERO     WN0328  70       PS Pieces Stand
     C                     Z-ADD*ZERO     WN0329  92       PS Weight Conve
     C                     Z-ADD*ZERO     WN0330  70       PS Pieces Conve
     C                     Z-ADD*ZERO     WN0331  92       PS Weight Shipp
     C                     Z-ADD*ZERO     WN0332  70       PS Pieces Shipp
     C                     Z-ADD*ZERO     WN0333  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0334  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0335  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0336  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0337  92       PS Weight Ship
     C                     Z-ADD*ZERO     WN0338  70       PS Pieces Ship
     C                     Z-ADD*ZERO     WN0339  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0340  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0341  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0342  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0343 112       PS Unit Weight
     C                     Z-ADD*ZERO     WN0344  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0345 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0346  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0347 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0348  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0349 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0350  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0351 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0352  70       PS Pieces Unuse
     C                     MOVEL*BLANK    WN0353  3        PS Item Id
     C                     MOVEL*BLANK    WN0354  2        Warehouse Type
     C                     MOVEL*BLANK    WN0355  1        PS Lock Status
     C                     MOVEL*BLANK    WN0356  1        PS Export/Domes
     C                     MOVEL*BLANK    WN0357  1        PS Print On Sch
     C                     MOVEL*BLANK    WN0358  1        PS Piece Count
     C                     MOVEL*BLANK    WN0359  1        PS Unused Sts 1
     C                     MOVEL*BLANK    WN0360  1        PS Unused Sts 2
     C                     MOVEL*BLANK    WN0361  1        PS Unused Sts 3
     C                     MOVEL*BLANK    WN0362  1        PS Unused Sts 4
     C                     MOVEL*BLANK    WN0363  2        PS Item Sched N
     C                     MOVEL*BLANK    WN0364  3        PS Production W
     C                     Z-ADD*ZERO     WN0365  92       PS Weight Order
     C                     Z-ADD*ZERO     WN0366  70       PS Pieces Order
     C                     Z-ADD*ZERO     WN0367  92       PS Weight FC Ad
     C                     Z-ADD*ZERO     WN0368  70       PS Pieces FC Ad
     C                     Z-ADD*ZERO     WN0369  92       PS Weight FX Ad
     C                     Z-ADD*ZERO     WN0370  70       PS Pieces FX Ad
     C                     Z-ADD*ZERO     WN0371  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0372  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0373  92       PS Weight Avail
     C                     Z-ADD*ZERO     WN0374  70       PS Pieces Avail
     C                     Z-ADD*ZERO     WN0375  92       PS Weight Produ
     C                     Z-ADD*ZERO     WN0376  70       PS Pieces Produ
     C                     Z-ADD*ZERO     WN0377  92       PS Weight Fab N
     C                     Z-ADD*ZERO     WN0378  70       PS Pieces Fab N
     C                     Z-ADD*ZERO     WN0379  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0380  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0381  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0382  70       PS Pieces Sched
     C                     MOVEL*BLANK    WN0383  6        Department Code
     C                     Z-ADD*ZERO     WN0384  30       Item Structure
     C                     Z-ADD*ZERO     WN0385  30       Item Structure
     C                     Z-ADD*ZERO     WN0386  30       Item Structure
     C                     MOVEL*BLANK    WN0387  6        Primal Group Co
     C                     MOVEL*BLANK    WN0388  1        EDI Status 1
     C                     MOVEL*BLANK    WN0389  1        EDI Status 2
     C                     MOVEL*BLANK    WN0390  1        EDI Status 3
     C                     MOVEL*BLANK    WN0391  1        Record Status
     C                     Z-ADD*ZERO     WN0392  60       Job Time
     C                     MOVEL*BLANK    WN0393 10        User Id
     C                     MOVEL*BLANK    WN0394 10        Job Name
     C                     Z-ADD*ZERO     WN0395  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YGRDC   1
      *
      * Move key fields to @I8CPUR
     C                     Z-ADDWSAIC3    WTAIC3           Company Number
     C                     MOVELWSV5ST    WTV5ST    P      Production Type
     C                     Z-ADDWSELDT    WTELDT           Production Date
     C                     Z-ADDWSHGCD    WTHGCD           Item Code
     C                     MOVELWSAJCD    WTAJCD    P      Warehouse Code
      *
     C           KLCHTP    KLIST
     C                     KFLD           WTAIC3           Company Number
     C                     KFLD           WTV5ST           Production Type
     C                     KFLD           WTELDT           Production Date
     C                     KFLD           WTHGCD           Item Code
     C                     KFLD           WTAJCD           Warehouse Code
     C           KLCHTP    CHAIN@I8CPUR              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PDI8CPL0'MDACP
     C                     MOVEL'@I8CPUR' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL010.
     C                     MOVEL'LBL010'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO TPEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO TPEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPDI81    YGRDCS
      * Move non-key fields to @I8CPUR
     C                     Z-ADDWSF8WG    WTF8WG           PS Avg Piece Wg
     C                     Z-ADDWN0266    WTBPNB           PS Pieces Whs T
     C                     Z-ADDWN0267    WTGAWG           PS Weight Whs T
      *
      * Set PGM.*Record Data Changed flag
     C           QPDI81    IFNE YGRDCS
     C           YGRDC     ANDNE'N'
     C                     MOVE 'Y'       YGRDC
     C                     ENDIF
      * USER: Processing before Data update
      * UPS CHGOBJ Stamp      IF
     C                     Z-ADD##JTM     WTAATM           Job Time
     C                     MOVEL##USR     WTAYNA           User Id
     C                     MOVEL##PGM     WTA0NA           Job Name
     C                     Z-ADD##JDT     WTAXDT           Job Date
      * Set PGM.*Record Data Changed flag
     C           QPDI81    IFNE YGRDCS
     C           YGRDC     ANDNE'N'
     C                     MOVE 'Y'       YGRDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YGRDC     IFEQ 'Y'
     C                     UPDAT@I8CPUR                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPDI8CPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         TPEXIT    ENDSR
      /EJECT
     CSR         TQRVGN    BEGSR
      *================================================================
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0396  70       PS Available Sh
     C                     Z-ADD*ZERO     WN0397  92       PS Weight Plann
     C                     Z-ADD*ZERO     WN0398  70       PS Pieces Plann
     C                     Z-ADD*ZERO     WN0399  72       PS Pct of Carca
     C                     Z-ADD*ZERO     WN0400  92       PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0401  92       PS Weight Inv O
     C                     Z-ADD*ZERO     WN0402  70       PS Pieces Inv O
     C                     Z-ADD*ZERO     WN0403  92       PS Weight Stand
     C                     Z-ADD*ZERO     WN0404  70       PS Pieces Stand
     C                     Z-ADD*ZERO     WN0405  92       PS Weight Conve
     C                     Z-ADD*ZERO     WN0406  70       PS Pieces Conve
     C                     Z-ADD*ZERO     WN0407  92       PS Weight Shipp
     C                     Z-ADD*ZERO     WN0408  70       PS Pieces Shipp
     C                     Z-ADD*ZERO     WN0409  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0410  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0411  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0412  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0413  92       PS Weight Ship
     C                     Z-ADD*ZERO     WN0414  70       PS Pieces Ship
     C                     Z-ADD*ZERO     WN0415  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0416  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0417  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0418  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0419 112       PS Unit Weight
     C                     Z-ADD*ZERO     WN0420  70       PS Pieces Whs T
     C                     Z-ADD*ZERO     WN0421 112       PS Weight Whs T
     C                     Z-ADD*ZERO     WN0422  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0423 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0424  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0425 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0426  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0427 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0428  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0429 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0430  70       PS Pieces Unuse
     C                     MOVEL*BLANK    WN0431  3        PS Item Id
     C                     MOVEL*BLANK    WN0432  2        Warehouse Type
     C                     MOVEL*BLANK    WN0433  1        PS Lock Status
     C                     MOVEL*BLANK    WN0434  1        PS Export/Domes
     C                     MOVEL*BLANK    WN0435  1        PS Print On Sch
     C                     MOVEL*BLANK    WN0436  1        PS Piece Count
     C                     MOVEL*BLANK    WN0437  1        PS Unused Sts 1
     C                     MOVEL*BLANK    WN0438  1        PS Unused Sts 2
     C                     MOVEL*BLANK    WN0439  1        PS Unused Sts 3
     C                     MOVEL*BLANK    WN0440  1        PS Unused Sts 4
     C                     MOVEL*BLANK    WN0441  2        PS Item Sched N
     C                     MOVEL*BLANK    WN0442  3        PS Production W
     C                     Z-ADD*ZERO     WN0443  92       PS Weight Order
     C                     Z-ADD*ZERO     WN0444  70       PS Pieces Order
     C                     Z-ADD*ZERO     WN0445  92       PS Weight FC Ad
     C                     Z-ADD*ZERO     WN0446  70       PS Pieces FC Ad
     C                     Z-ADD*ZERO     WN0447  92       PS Weight FX Ad
     C                     Z-ADD*ZERO     WN0448  70       PS Pieces FX Ad
     C                     Z-ADD*ZERO     WN0449  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0450  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0451  92       PS Weight Avail
     C                     Z-ADD*ZERO     WN0452  70       PS Pieces Avail
     C                     Z-ADD*ZERO     WN0453  92       PS Weight Produ
     C                     Z-ADD*ZERO     WN0454  70       PS Pieces Produ
     C                     Z-ADD*ZERO     WN0455  92       PS Weight Fab N
     C                     Z-ADD*ZERO     WN0456  70       PS Pieces Fab N
     C                     Z-ADD*ZERO     WN0457  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0458  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0459  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0460  70       PS Pieces Sched
     C                     MOVEL*BLANK    WN0461  6        Department Code
     C                     Z-ADD*ZERO     WN0462  30       Item Structure
     C                     Z-ADD*ZERO     WN0463  30       Item Structure
     C                     Z-ADD*ZERO     WN0464  30       Item Structure
     C                     MOVEL*BLANK    WN0465  6        Primal Group Co
     C                     MOVEL*BLANK    WN0466  1        EDI Status 1
     C                     MOVEL*BLANK    WN0467  1        EDI Status 2
     C                     MOVEL*BLANK    WN0468  1        EDI Status 3
     C                     MOVEL*BLANK    WN0469  1        Record Status
     C                     Z-ADD*ZERO     WN0470  60       Job Time
     C                     MOVEL*BLANK    WN0471 10        User Id
     C                     MOVEL*BLANK    WN0472 10        Job Name
     C                     Z-ADD*ZERO     WN0473  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSTQ     KLIST
     C                     KFLD           WSAIC3           Company Number
     C                     KFLD           WSV5ST           Production Type
     C                     KFLD           WSELDT           Production Date
     C                     KFLD           WSHGCD           Item Code
     C                     KFLD           WSAJCD           Warehouse Code
      * Setup key
     C                     Z-ADDWL0274    WSAIC3           Company Number
     C                     MOVELWL0275    WSV5ST           Production Type
     C                     Z-ADDWL0276    WSELDT           Production Date
     C                     Z-ADDWL0277    WSHGCD           Item Code
     C                     MOVELWL0278    WSAJCD           Warehouse Code
      * Establish starting position
     C           KRSTQ     CHAIN@I8CPUS              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1763' W0RTN   7
      * USER: Processing if Data record not found
     C                     Z-ADDWL0280    WN0403           PS Weight Stand
     C                     Z-ADDWL0279    WN0404           PS Pieces Stand
      * Average Piece Weight
      * CASE: PAR.PS Pieces Standard is NE Zeros
     C           WN0404    IFNE 0                          *IF
      * FP1054 RMC 5/14/09 chg above CASE to ne 0 , it was gt 0
      * Avg Piece Weight
      * PAR.PS Avg Piece Wgt =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Standard
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Pieces Standard
     C           WN0403    DIV  WN0404    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0400           PS Avg Piece Wg
      * FP1054 RMC 5/14/09 make positive if negative
      * CASE: PAR.PS Avg Piece Wgt is LT Zero
     C           WN0400    IFLT 0                          *IF
     C                     MULT -1        WN0400           PS Avg Piece Wg
     C                     END                             *FI
     C                     END                             *FI
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.PS Weight Standard is NE Zero
      *   |- c2    : PAR.PS Pieces Standard is NE Zeros
      *   '-
     C           WN0403    IFNE 0                          *IF
     C           WN0404    ORNE 0                          *OR
      * FP1054 RMC 5/14/09 chg above CASE to ne 0 , it was gt 0
      * UPS Crt Prod Detail   CR - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0274    WL0187           Company Number
     C                     MOVELWL0275    WL0188    P      Production Type
     C                     Z-ADDWL0276    WL0189           Production Date
     C                     Z-ADDWL0277    WL0190           Item Code
     C                     MOVELWL0278    WL0191    P      Warehouse Code
     C                     Z-ADDWN0396    WL0192           PS Available Sh
     C                     Z-ADDWN0397    WL0193           PS Weight Plann
     C                     Z-ADDWN0398    WL0194           PS Pieces Plann
     C                     Z-ADDWN0399    WL0195           PS Pct of Carca
     C                     Z-ADDWN0400    WL0196           PS Avg Piece Wg
     C                     Z-ADDWN0401    WL0197           PS Weight Inv O
     C                     Z-ADDWN0402    WL0198           PS Pieces Inv O
     C                     Z-ADDWN0403    WL0199           PS Weight Stand
     C                     Z-ADDWN0404    WL0200           PS Pieces Stand
     C                     Z-ADDWN0405    WL0201           PS Weight Conve
     C                     Z-ADDWN0406    WL0202           PS Pieces Conve
     C                     Z-ADDWN0407    WL0203           PS Weight Shipp
     C                     Z-ADDWN0408    WL0204           PS Pieces Shipp
     C                     Z-ADDWN0409    WL0205           PS Weight Prod
     C                     Z-ADDWN0410    WL0206           PS Pieces Prod
     C                     Z-ADDWN0411    WL0207           PS Weight Inv A
     C                     Z-ADDWN0412    WL0208           PS Pieces Inv A
     C                     Z-ADDWN0413    WL0209           PS Weight Ship
     C                     Z-ADDWN0414    WL0210           PS Pieces Ship
     C                     Z-ADDWN0415    WL0211           PS Weight Prod
     C                     Z-ADDWN0416    WL0212           PS Pieces Prod
     C                     Z-ADDWN0417    WL0213           PS Weight Inv A
     C                     Z-ADDWN0418    WL0214           PS Pieces Inv A
     C                     Z-ADDWN0419    WL0215           PS Unit Weight
     C                     Z-ADDWN0420    WL0216           PS Pieces Whs T
     C                     Z-ADDWN0421    WL0217           PS Weight Whs T
     C                     Z-ADDWN0422    WL0218           PS Pieces Unuse
     C                     Z-ADDWN0423    WL0219           PS Weight Unuse
     C                     Z-ADDWN0424    WL0220           PS Pieces Unuse
     C                     Z-ADDWN0425    WL0221           PS Weight Unuse
     C                     Z-ADDWN0426    WL0222           PS Pieces Unuse
     C                     Z-ADDWN0427    WL0223           PS Weight Unuse
     C                     Z-ADDWN0428    WL0224           PS Pieces Unuse
     C                     Z-ADDWN0429    WL0225           PS Weight Unuse
     C                     Z-ADDWN0430    WL0226           PS Pieces Unuse
     C                     MOVELWN0431    WL0227    P      PS Item Id
     C                     MOVELWN0432    WL0228    P      Warehouse Type
     C                     MOVELWN0433    WL0229    P      PS Lock Status
     C                     MOVELWN0434    WL0230    P      PS Export/Domes
     C                     MOVELWN0435    WL0231    P      PS Print On Sch
     C                     MOVELWN0436    WL0232    P      PS Piece Count
     C                     MOVELWN0437    WL0233    P      PS Unused Sts 1
     C                     MOVELWN0438    WL0234    P      PS Unused Sts 2
     C                     MOVELWN0439    WL0235    P      PS Unused Sts 3
     C                     MOVELWN0440    WL0236    P      PS Unused Sts 4
     C                     MOVELWN0441    WL0237    P      PS Item Sched N
     C                     MOVELWN0442    WL0238    P      PS Production W
     C                     Z-ADDWN0443    WL0239           PS Weight Order
     C                     Z-ADDWN0444    WL0240           PS Pieces Order
     C                     Z-ADDWN0445    WL0241           PS Weight FC Ad
     C                     Z-ADDWN0446    WL0242           PS Pieces FC Ad
     C                     Z-ADDWN0447    WL0243           PS Weight FX Ad
     C                     Z-ADDWN0448    WL0244           PS Pieces FX Ad
     C                     Z-ADDWN0449    WL0245           PS Weight Sched
     C                     Z-ADDWN0450    WL0246           PS Pieces Sched
     C                     Z-ADDWN0451    WL0247           PS Weight Avail
     C                     Z-ADDWN0452    WL0248           PS Pieces Avail
     C                     Z-ADDWN0453    WL0249           PS Weight Produ
     C                     Z-ADDWN0454    WL0250           PS Pieces Produ
     C                     Z-ADDWN0455    WL0251           PS Weight Fab N
     C                     Z-ADDWN0456    WL0252           PS Pieces Fab N
     C                     Z-ADDWN0457    WL0253           PS Weight Sched
     C                     Z-ADDWN0458    WL0254           PS Pieces Sched
     C                     Z-ADDWN0459    WL0255           PS Weight Sched
     C                     Z-ADDWN0460    WL0256           PS Pieces Sched
     C                     MOVELWN0461    WL0257    P      Department Code
     C                     Z-ADDWN0462    WL0258           Item Structure
     C                     Z-ADDWN0463    WL0259           Item Structure
     C                     Z-ADDWN0464    WL0260           Item Structure
     C                     MOVELWN0465    WL0261    P      Primal Group Co
     C                     MOVELWN0466    WL0262    P      EDI Status 1
     C                     MOVELWN0467    WL0263    P      EDI Status 2
     C                     MOVELWN0468    WL0264    P      EDI Status 3
     C                     MOVELWN0469    WL0265    P      Record Status
     C                     Z-ADDWN0470    WL0266           Job Time
     C                     MOVELWN0471    WL0267    P      User Id
     C                     MOVELWN0472    WL0268    P      Job Name
     C                     Z-ADDWN0473    WL0269           Job Date
     C                     EXSR TNCRRC
     C                     END                             *FI
     C                     GOTO TQEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C           WSDXWG    ADD  WL0280    WN0403           PS Weight Stand
     C           WSB2NB    ADD  WL0279    WN0404           PS Pieces Stand
      * Average Piece Weight
      * CASE: PAR.PS Pieces Standard is NE Zeros
     C           WN0404    IFNE 0                          *IF
      * FP1054 RMC 5/14/09 chg above CASE to ne 0 , it was gt 0
      * Avg Piece Weight
      * PAR.PS Avg Piece Wgt =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Standard
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Pieces Standard
     C           WN0403    DIV  WN0404    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0400           PS Avg Piece Wg
      * FP1054 RMC 5/14/09 make positive if negative
      * CASE: PAR.PS Avg Piece Wgt is LT Zero
     C           WN0400    IFLT 0                          *IF
     C                     MULT -1        WN0400           PS Avg Piece Wg
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 RMC 5/14/09 dont do below case - they may be negative now
      * BPS Chg Pcs/Wgt Std   CH - PS Prod Item Schedule  * 
     C                     EXSR TRCHRC
     C                     ENDIF
      *================================================================
     CSR         TQEXIT    ENDSR
      /EJECT
     CSR         TRCHRC    BEGSR
      *================================================================
      * BPS Chg Pcs/Wgt Std   CH - PS Prod Item Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0474  70       PS Available Sh
     C                     Z-ADD*ZERO     WN0475  92       PS Weight Plann
     C                     Z-ADD*ZERO     WN0476  70       PS Pieces Plann
     C                     Z-ADD*ZERO     WN0477  72       PS Pct of Carca
     C                     Z-ADD*ZERO     WN0478  92       PS Weight Inv O
     C                     Z-ADD*ZERO     WN0479  70       PS Pieces Inv O
     C                     Z-ADD*ZERO     WN0480  92       PS Weight Conve
     C                     Z-ADD*ZERO     WN0481  70       PS Pieces Conve
     C                     Z-ADD*ZERO     WN0482  92       PS Weight Shipp
     C                     Z-ADD*ZERO     WN0483  70       PS Pieces Shipp
     C                     Z-ADD*ZERO     WN0484  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0485  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0486  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0487  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0488  92       PS Weight Ship
     C                     Z-ADD*ZERO     WN0489  70       PS Pieces Ship
     C                     Z-ADD*ZERO     WN0490  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0491  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0492  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0493  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0494 112       PS Unit Weight
     C                     Z-ADD*ZERO     WN0495  70       PS Pieces Whs T
     C                     Z-ADD*ZERO     WN0496 112       PS Weight Whs T
     C                     Z-ADD*ZERO     WN0497  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0498 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0499  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0500 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0501  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0502 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0503  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0504 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0505  70       PS Pieces Unuse
     C                     MOVEL*BLANK    WN0506  3        PS Item Id
     C                     MOVEL*BLANK    WN0507  2        Warehouse Type
     C                     MOVEL*BLANK    WN0508  1        PS Lock Status
     C                     MOVEL*BLANK    WN0509  1        PS Export/Domes
     C                     MOVEL*BLANK    WN0510  1        PS Print On Sch
     C                     MOVEL*BLANK    WN0511  1        PS Piece Count
     C                     MOVEL*BLANK    WN0512  1        PS Unused Sts 1
     C                     MOVEL*BLANK    WN0513  1        PS Unused Sts 2
     C                     MOVEL*BLANK    WN0514  1        PS Unused Sts 3
     C                     MOVEL*BLANK    WN0515  1        PS Unused Sts 4
     C                     MOVEL*BLANK    WN0516  2        PS Item Sched N
     C                     MOVEL*BLANK    WN0517  3        PS Production W
     C                     Z-ADD*ZERO     WN0518  92       PS Weight Order
     C                     Z-ADD*ZERO     WN0519  70       PS Pieces Order
     C                     Z-ADD*ZERO     WN0520  92       PS Weight FC Ad
     C                     Z-ADD*ZERO     WN0521  70       PS Pieces FC Ad
     C                     Z-ADD*ZERO     WN0522  92       PS Weight FX Ad
     C                     Z-ADD*ZERO     WN0523  70       PS Pieces FX Ad
     C                     Z-ADD*ZERO     WN0524  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0525  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0526  92       PS Weight Avail
     C                     Z-ADD*ZERO     WN0527  70       PS Pieces Avail
     C                     Z-ADD*ZERO     WN0528  92       PS Weight Produ
     C                     Z-ADD*ZERO     WN0529  70       PS Pieces Produ
     C                     Z-ADD*ZERO     WN0530  92       PS Weight Fab N
     C                     Z-ADD*ZERO     WN0531  70       PS Pieces Fab N
     C                     Z-ADD*ZERO     WN0532  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0533  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0534  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0535  70       PS Pieces Sched
     C                     MOVEL*BLANK    WN0536  6        Department Code
     C                     Z-ADD*ZERO     WN0537  30       Item Structure
     C                     Z-ADD*ZERO     WN0538  30       Item Structure
     C                     Z-ADD*ZERO     WN0539  30       Item Structure
     C                     MOVEL*BLANK    WN0540  6        Primal Group Co
     C                     MOVEL*BLANK    WN0541  1        EDI Status 1
     C                     MOVEL*BLANK    WN0542  1        EDI Status 2
     C                     MOVEL*BLANK    WN0543  1        EDI Status 3
     C                     MOVEL*BLANK    WN0544  1        Record Status
     C                     Z-ADD*ZERO     WN0545  60       Job Time
     C                     MOVEL*BLANK    WN0546 10        User Id
     C                     MOVEL*BLANK    WN0547 10        Job Name
     C                     Z-ADD*ZERO     WN0548  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YHRDC   1
      *
      * Move key fields to @I8CPUR
     C                     Z-ADDWSAIC3    WTAIC3           Company Number
     C                     MOVELWSV5ST    WTV5ST    P      Production Type
     C                     Z-ADDWSELDT    WTELDT           Production Date
     C                     Z-ADDWSHGCD    WTHGCD           Item Code
     C                     MOVELWSAJCD    WTAJCD    P      Warehouse Code
      *
     C           KLCHTR    KLIST
     C                     KFLD           WTAIC3           Company Number
     C                     KFLD           WTV5ST           Production Type
     C                     KFLD           WTELDT           Production Date
     C                     KFLD           WTHGCD           Item Code
     C                     KFLD           WTAJCD           Warehouse Code
     C           KLCHTR    CHAIN@I8CPUR              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PDI8CPL0'MDACP
     C                     MOVEL'@I8CPUR' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL011.
     C                     MOVEL'LBL011'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO TREXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO TREXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPDI81    YHRDCS
      * Move non-key fields to @I8CPUR
     C                     Z-ADDWN0400    WTF8WG           PS Avg Piece Wg
     C                     Z-ADDWN0403    WTDXWG           PS Weight Stand
     C                     Z-ADDWN0404    WTB2NB           PS Pieces Stand
      *
      * Set PGM.*Record Data Changed flag
     C           QPDI81    IFNE YHRDCS
     C           YHRDC     ANDNE'N'
     C                     MOVE 'Y'       YHRDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YHRDC     IFEQ 'Y'
     C                     UPDAT@I8CPUR                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPDI8CPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         TREXIT    ENDSR
      /EJECT
     CSR         TSRVGN    BEGSR
      *================================================================
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0549  70       PS Available Sh
     C                     Z-ADD*ZERO     WN0550  92       PS Weight Plann
     C                     Z-ADD*ZERO     WN0551  70       PS Pieces Plann
     C                     Z-ADD*ZERO     WN0552  72       PS Pct of Carca
     C                     Z-ADD*ZERO     WN0553  92       PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0554  92       PS Weight Inv O
     C                     Z-ADD*ZERO     WN0555  70       PS Pieces Inv O
     C                     Z-ADD*ZERO     WN0556  92       PS Weight Stand
     C                     Z-ADD*ZERO     WN0557  70       PS Pieces Stand
     C                     Z-ADD*ZERO     WN0558  92       PS Weight Conve
     C                     Z-ADD*ZERO     WN0559  70       PS Pieces Conve
     C                     Z-ADD*ZERO     WN0560  92       PS Weight Shipp
     C                     Z-ADD*ZERO     WN0561  70       PS Pieces Shipp
     C                     Z-ADD*ZERO     WN0562  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0563  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0564  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0565  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0566  92       PS Weight Ship
     C                     Z-ADD*ZERO     WN0567  70       PS Pieces Ship
     C                     Z-ADD*ZERO     WN0568  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0569  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0570  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0571  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0572 112       PS Unit Weight
     C                     Z-ADD*ZERO     WN0573  70       PS Pieces Whs T
     C                     Z-ADD*ZERO     WN0574 112       PS Weight Whs T
     C                     Z-ADD*ZERO     WN0575  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0576 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0577  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0578 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0579  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0580 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0581  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0582 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0583  70       PS Pieces Unuse
     C                     MOVEL*BLANK    WN0584  3        PS Item Id
     C                     MOVEL*BLANK    WN0585  2        Warehouse Type
     C                     MOVEL*BLANK    WN0586  1        PS Lock Status
     C                     MOVEL*BLANK    WN0587  1        PS Export/Domes
     C                     MOVEL*BLANK    WN0588  1        PS Print On Sch
     C                     MOVEL*BLANK    WN0589  1        PS Piece Count
     C                     MOVEL*BLANK    WN0590  1        PS Unused Sts 1
     C                     MOVEL*BLANK    WN0591  1        PS Unused Sts 2
     C                     MOVEL*BLANK    WN0592  1        PS Unused Sts 3
     C                     MOVEL*BLANK    WN0593  1        PS Unused Sts 4
     C                     MOVEL*BLANK    WN0594  2        PS Item Sched N
     C                     MOVEL*BLANK    WN0595  3        PS Production W
     C                     Z-ADD*ZERO     WN0596  92       PS Weight Order
     C                     Z-ADD*ZERO     WN0597  70       PS Pieces Order
     C                     Z-ADD*ZERO     WN0598  92       PS Weight FC Ad
     C                     Z-ADD*ZERO     WN0599  70       PS Pieces FC Ad
     C                     Z-ADD*ZERO     WN0600  92       PS Weight FX Ad
     C                     Z-ADD*ZERO     WN0601  70       PS Pieces FX Ad
     C                     Z-ADD*ZERO     WN0602  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0603  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0604  92       PS Weight Avail
     C                     Z-ADD*ZERO     WN0605  70       PS Pieces Avail
     C                     Z-ADD*ZERO     WN0606  92       PS Weight Produ
     C                     Z-ADD*ZERO     WN0607  70       PS Pieces Produ
     C                     Z-ADD*ZERO     WN0608  92       PS Weight Fab N
     C                     Z-ADD*ZERO     WN0609  70       PS Pieces Fab N
     C                     Z-ADD*ZERO     WN0610  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0611  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0612  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0613  70       PS Pieces Sched
     C                     MOVEL*BLANK    WN0614  6        Department Code
     C                     Z-ADD*ZERO     WN0615  30       Item Structure
     C                     Z-ADD*ZERO     WN0616  30       Item Structure
     C                     Z-ADD*ZERO     WN0617  30       Item Structure
     C                     MOVEL*BLANK    WN0618  6        Primal Group Co
     C                     MOVEL*BLANK    WN0619  1        EDI Status 1
     C                     MOVEL*BLANK    WN0620  1        EDI Status 2
     C                     MOVEL*BLANK    WN0621  1        EDI Status 3
     C                     MOVEL*BLANK    WN0622  1        Record Status
     C                     Z-ADD*ZERO     WN0623  60       Job Time
     C                     MOVEL*BLANK    WN0624 10        User Id
     C                     MOVEL*BLANK    WN0625 10        Job Name
     C                     Z-ADD*ZERO     WN0626  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSTS     KLIST
     C                     KFLD           WSAIC3           Company Number
     C                     KFLD           WSV5ST           Production Type
     C                     KFLD           WSELDT           Production Date
     C                     KFLD           WSHGCD           Item Code
     C                     KFLD           WSAJCD           Warehouse Code
      * Setup key
     C                     Z-ADDWL0281    WSAIC3           Company Number
     C                     MOVELWL0282    WSV5ST           Production Type
     C                     Z-ADDWL0283    WSELDT           Production Date
     C                     Z-ADDWL0284    WSHGCD           Item Code
     C                     MOVELWL0285    WSAJCD           Warehouse Code
      * Establish starting position
     C           KRSTS     CHAIN@I8CPUS              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1763' W0RTN   7
      * USER: Processing if Data record not found
     C                     Z-ADDWL0286    WN0568           PS Weight Prod
     C                     Z-ADDWL0287    WN0569           PS Pieces Prod
      * CASE: PAR.PS Pieces Prod Allocated is GT Zero
     C           WN0569    IFGT 0                          *IF
      * Average Piece Weight
      * PAR.PS Avg Piece Wgt =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Prod Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Pieces Prod Allocated
     C           WN0568    DIV  WN0569    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0553           PS Avg Piece Wg
     C                     END                             *FI
      * UPS Crt Prod Detail   CR - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0281    WL0187           Company Number
     C                     MOVELWL0282    WL0188    P      Production Type
     C                     Z-ADDWL0283    WL0189           Production Date
     C                     Z-ADDWL0284    WL0190           Item Code
     C                     MOVELWL0285    WL0191    P      Warehouse Code
     C                     Z-ADDWN0549    WL0192           PS Available Sh
     C                     Z-ADDWN0550    WL0193           PS Weight Plann
     C                     Z-ADDWN0551    WL0194           PS Pieces Plann
     C                     Z-ADDWN0552    WL0195           PS Pct of Carca
     C                     Z-ADDWN0553    WL0196           PS Avg Piece Wg
     C                     Z-ADDWN0554    WL0197           PS Weight Inv O
     C                     Z-ADDWN0555    WL0198           PS Pieces Inv O
     C                     Z-ADDWN0556    WL0199           PS Weight Stand
     C                     Z-ADDWN0557    WL0200           PS Pieces Stand
     C                     Z-ADDWN0558    WL0201           PS Weight Conve
     C                     Z-ADDWN0559    WL0202           PS Pieces Conve
     C                     Z-ADDWN0560    WL0203           PS Weight Shipp
     C                     Z-ADDWN0561    WL0204           PS Pieces Shipp
     C                     Z-ADDWN0562    WL0205           PS Weight Prod
     C                     Z-ADDWN0563    WL0206           PS Pieces Prod
     C                     Z-ADDWN0564    WL0207           PS Weight Inv A
     C                     Z-ADDWN0565    WL0208           PS Pieces Inv A
     C                     Z-ADDWN0566    WL0209           PS Weight Ship
     C                     Z-ADDWN0567    WL0210           PS Pieces Ship
     C                     Z-ADDWN0568    WL0211           PS Weight Prod
     C                     Z-ADDWN0569    WL0212           PS Pieces Prod
     C                     Z-ADDWN0570    WL0213           PS Weight Inv A
     C                     Z-ADDWN0571    WL0214           PS Pieces Inv A
     C                     Z-ADDWN0572    WL0215           PS Unit Weight
     C                     Z-ADDWN0573    WL0216           PS Pieces Whs T
     C                     Z-ADDWN0574    WL0217           PS Weight Whs T
     C                     Z-ADDWN0575    WL0218           PS Pieces Unuse
     C                     Z-ADDWN0576    WL0219           PS Weight Unuse
     C                     Z-ADDWN0577    WL0220           PS Pieces Unuse
     C                     Z-ADDWN0578    WL0221           PS Weight Unuse
     C                     Z-ADDWN0579    WL0222           PS Pieces Unuse
     C                     Z-ADDWN0580    WL0223           PS Weight Unuse
     C                     Z-ADDWN0581    WL0224           PS Pieces Unuse
     C                     Z-ADDWN0582    WL0225           PS Weight Unuse
     C                     Z-ADDWN0583    WL0226           PS Pieces Unuse
     C                     MOVELWN0584    WL0227    P      PS Item Id
     C                     MOVELWN0585    WL0228    P      Warehouse Type
     C                     MOVELWN0586    WL0229    P      PS Lock Status
     C                     MOVELWN0587    WL0230    P      PS Export/Domes
     C                     MOVELWN0588    WL0231    P      PS Print On Sch
     C                     MOVELWN0589    WL0232    P      PS Piece Count
     C                     MOVELWN0590    WL0233    P      PS Unused Sts 1
     C                     MOVELWN0591    WL0234    P      PS Unused Sts 2
     C                     MOVELWN0592    WL0235    P      PS Unused Sts 3
     C                     MOVELWN0593    WL0236    P      PS Unused Sts 4
     C                     MOVELWN0594    WL0237    P      PS Item Sched N
     C                     MOVELWN0595    WL0238    P      PS Production W
     C                     Z-ADDWN0596    WL0239           PS Weight Order
     C                     Z-ADDWN0597    WL0240           PS Pieces Order
     C                     Z-ADDWN0598    WL0241           PS Weight FC Ad
     C                     Z-ADDWN0599    WL0242           PS Pieces FC Ad
     C                     Z-ADDWN0600    WL0243           PS Weight FX Ad
     C                     Z-ADDWN0601    WL0244           PS Pieces FX Ad
     C                     Z-ADDWN0602    WL0245           PS Weight Sched
     C                     Z-ADDWN0603    WL0246           PS Pieces Sched
     C                     Z-ADDWN0604    WL0247           PS Weight Avail
     C                     Z-ADDWN0605    WL0248           PS Pieces Avail
     C                     Z-ADDWN0606    WL0249           PS Weight Produ
     C                     Z-ADDWN0607    WL0250           PS Pieces Produ
     C                     Z-ADDWN0608    WL0251           PS Weight Fab N
     C                     Z-ADDWN0609    WL0252           PS Pieces Fab N
     C                     Z-ADDWN0610    WL0253           PS Weight Sched
     C                     Z-ADDWN0611    WL0254           PS Pieces Sched
     C                     Z-ADDWN0612    WL0255           PS Weight Sched
     C                     Z-ADDWN0613    WL0256           PS Pieces Sched
     C                     MOVELWN0614    WL0257    P      Department Code
     C                     Z-ADDWN0615    WL0258           Item Structure
     C                     Z-ADDWN0616    WL0259           Item Structure
     C                     Z-ADDWN0617    WL0260           Item Structure
     C                     MOVELWN0618    WL0261    P      Primal Group Co
     C                     MOVELWN0619    WL0262    P      EDI Status 1
     C                     MOVELWN0620    WL0263    P      EDI Status 2
     C                     MOVELWN0621    WL0264    P      EDI Status 3
     C                     MOVELWN0622    WL0265    P      Record Status
     C                     Z-ADDWN0623    WL0266           Job Time
     C                     MOVELWN0624    WL0267    P      User Id
     C                     MOVELWN0625    WL0268    P      Job Name
     C                     Z-ADDWN0626    WL0269           Job Date
     C                     EXSR TNCRRC
      * FP1054 create consumed records
      * Create/update/delete Order Detail Sched-Consmd (POB6CPP)
      * CASE: PAR.Order Number is Greater then zero
     C           WL0288    IFGT 0                          *IF
      * RMC 10-05 20 use ord co instead of par.company which is acctng
      * RTV Company for Ord   RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0288    WL0293           Order Number
     C                     EXSR TTRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0292    YL0066           Company Number
      * Rtv Next Seq for Ord/ItRT - Order Detail Sched-Consmd  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0066    WL0294           Company Number
     C                     Z-ADDWL0288    WL0295           Order Number
     C                     Z-ADDWL0289    WL0296           Order Sequence
     C                     Z-ADDWL0290    WL0297           Order Secondary
     C                     Z-ADDWL0283    WL0298           OD Production D
     C                     Z-ADDYL0067    WL0299           ODS Sequence Nu
     C                     Z-ADDWL0284    WL0300           Consumed Item C
     C                     Z-ADDWL0284    WL0301           Item Code
     C                     EXSR TURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0299    YL0067           ODS Sequence Nu
      * CASE: LCL.ODS Sequence Number is zero
     C           YL0067    IFEQ 0                          *IF
      * Rtv Next Seq for Key  RT - Order Detail Sched-Consmd  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0066    WL0302           Company Number
     C                     Z-ADDWL0288    WL0303           Order Number
     C                     Z-ADDWL0289    WL0304           Order Sequence
     C                     Z-ADDWL0290    WL0305           Order Secondary
     C                     Z-ADDWL0283    WL0306           OD Production D
     C                     Z-ADDYL0067    WL0307           ODS Sequence Nu
     C                     EXSR TVRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0307    YL0067           ODS Sequence Nu
     C                     END                             *FI
      * Upd OrdDtl Sch-Consmd RT - Order Detail Sched-Consmd  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0066    WL0308           Company Number
     C                     Z-ADDWL0288    WL0309           Order Number
     C                     Z-ADDWL0289    WL0310           Order Sequence
     C                     Z-ADDWL0290    WL0311           Order Secondary
     C                     Z-ADDWL0283    WL0312           OD Production D
     C                     Z-ADDYL0067    WL0313           ODS Sequence Nu
     C                     Z-ADD*ZERO     WL0314           Scheduled Ship
     C                     MOVELWL0285    WL0315    P      Warehouse Code
     C                     Z-ADDWL0284    WL0316           Consumed Item C
     C                     Z-ADDWL0284    WL0317           Item Code
     C                     Z-ADDWL0287    WL0318           OD Qty/Cnsmd Pi
     C                     Z-ADDWL0286    WL0319           OD Weight Sched
     C                     Z-ADD*ZERO     WL0320           ODS Quantity Sh
     C                     Z-ADD*ZERO     WL0321           ODS Weight Shor
     C                     Z-ADD*ZERO     WL0322           Deadline Depart
     C                     Z-ADD*ZERO     WL0323           Deadline Depart
     C                     EXSR TWRVGN
     C                     END                             *FI
     C                     GOTO TSEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C           WSOAWT    ADD  WL0286    WN0568           PS Weight Prod
     C           WSCDNB    ADD  WL0287    WN0569           PS Pieces Prod
      * Chg Prod Allocated    CH - PS Prod Item Schedule  * 
     C                     EXSR TZCHRC
      * FP1054 create/delete consumed records - if called from PRD routin
      *  and STD was allocated
      * CASE: PAR.Status Flag 19 Y/N is Yes
     C           WL0291    IFEQ 'Y'                        *IF
      * Create/update/delete Order Detail Sched-Consmd (POB6CPP)
      * CASE: PAR.Order Number is Greater then zero
     C           WL0288    IFGT 0                          *IF
      * RMC 10-05-2020 was par.company number which is acctng
      * RTV Company for Ord   RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0288    WL0293           Order Number
     C                     EXSR TTRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0292    YL0066           Company Number
      * Rtv Next Seq for Ord/ItRT - Order Detail Sched-Consmd  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0066    WL0294           Company Number
     C                     Z-ADDWL0288    WL0295           Order Number
     C                     Z-ADDWL0289    WL0296           Order Sequence
     C                     Z-ADDWL0290    WL0297           Order Secondary
     C                     Z-ADDWL0283    WL0298           OD Production D
     C                     Z-ADDYL0067    WL0299           ODS Sequence Nu
     C                     Z-ADDWL0284    WL0300           Consumed Item C
     C                     Z-ADDWL0284    WL0301           Item Code
     C                     EXSR TURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0299    YL0067           ODS Sequence Nu
      * CASE: LCL.ODS Sequence Number is zero
     C           YL0067    IFEQ 0                          *IF
      * Rtv Next Seq for Key  RT - Order Detail Sched-Consmd  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0066    WL0302           Company Number
     C                     Z-ADDWL0288    WL0303           Order Number
     C                     Z-ADDWL0289    WL0304           Order Sequence
     C                     Z-ADDWL0290    WL0305           Order Secondary
     C                     Z-ADDWL0283    WL0306           OD Production D
     C                     Z-ADDYL0067    WL0307           ODS Sequence Nu
     C                     EXSR TVRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0307    YL0067           ODS Sequence Nu
     C                     END                             *FI
      * Upd OrdDtl Sch-Consmd RT - Order Detail Sched-Consmd  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0066    WL0308           Company Number
     C                     Z-ADDWL0288    WL0309           Order Number
     C                     Z-ADDWL0289    WL0310           Order Sequence
     C                     Z-ADDWL0290    WL0311           Order Secondary
     C                     Z-ADDWL0283    WL0312           OD Production D
     C                     Z-ADDYL0067    WL0313           ODS Sequence Nu
     C                     Z-ADD*ZERO     WL0314           Scheduled Ship
     C                     MOVELWL0285    WL0315    P      Warehouse Code
     C                     Z-ADDWL0284    WL0316           Consumed Item C
     C                     Z-ADDWL0284    WL0317           Item Code
     C                     Z-ADDWL0287    WL0318           OD Qty/Cnsmd Pi
     C                     Z-ADDWL0286    WL0319           OD Weight Sched
     C                     Z-ADD*ZERO     WL0320           ODS Quantity Sh
     C                     Z-ADD*ZERO     WL0321           ODS Weight Shor
     C                     Z-ADD*ZERO     WL0322           Deadline Depart
     C                     Z-ADD*ZERO     WL0323           Deadline Depart
     C                     EXSR TWRVGN
     C                     END                             *FI
     C                     END                             *FI
     C                     ENDIF
      *================================================================
     CSR         TSEXIT    ENDSR
      /EJECT
     CSR         TTRVGN    BEGSR
      *================================================================
      * RTV Company for Ord   RT - Order Header TRG  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WXC4NB    WQTT01           Order Number
      * Define keylist
     C           KRSTT     KLIST
     C                     KFLD           WQTT01           Order Number
      * Setup key
     C                     Z-ADDWL0293    WQTT01           Order Number
      * Establish starting position
     C           KRSTT     SETLL@BFCPY2                    *
     C           KRSTT     READE@BFCPY2                  90*
      * Data record not found
     C   90                MOVEL'USR0176' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWXAIC3    WL0292           Company Number
     C           KRSTT     READE@BFCPY2                  90*
     C                     ENDDO
      *================================================================
     CSR         TTEXIT    ENDSR
      /EJECT
     CSR         TURVGN    BEGSR
      *================================================================
      * Rtv Next Seq for Ord/ItRT - Order Detail Sched-Consmd  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD0         WL0299           ODS Sequence Nu
      * Declare restrictor key work fields
     C           *LIKE     DEFN TDAIC3    WQTU01           Company Number
     C           *LIKE     DEFN TDC4NB    WQTU02           Order Number
     C           *LIKE     DEFN TDDPNB    WQTU03           Order Sequence
     C           *LIKE     DEFN TDUENB    WQTU04           Order Secondary
     C           *LIKE     DEFN TDJGDT    WQTU05           OD Production D
     C           *LIKE     DEFN TDNUDT    WQTU06           Consumed Item C
     C           *LIKE     DEFN TDHGCD    WQTU07           Item Code
      * Define keylist
     C           KRSTU     KLIST
     C                     KFLD           WQTU01           Company Number
     C                     KFLD           WQTU02           Order Number
     C                     KFLD           WQTU03           Order Sequence
     C                     KFLD           WQTU04           Order Secondary
     C                     KFLD           WQTU05           OD Production D
     C                     KFLD           WQTU06           Consumed Item C
     C                     KFLD           WQTU07           Item Code
      * Setup key
     C                     Z-ADDWL0294    WQTU01           Company Number
     C                     Z-ADDWL0295    WQTU02           Order Number
     C                     Z-ADDWL0296    WQTU03           Order Sequence
     C                     Z-ADDWL0297    WQTU04           Order Secondary
     C                     Z-ADDWL0298    WQTU05           OD Production D
     C                     Z-ADDWL0300    WQTU06           Consumed Item C
     C                     Z-ADDWL0301    WQTU07           Item Code
      * Establish starting position
     C           KRSTU     SETLL@B6CPAG                    *
     C           KRSTU     READE@B6CPAG                  90*
      * Data record not found
     C   90                MOVEL'USR3152' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     Z-ADDTDOONY    WL0299           ODS Sequence Nu
     C           KRSTU     READE@B6CPAG                  90*
     C                     ENDDO
      *================================================================
     CSR         TUEXIT    ENDSR
      /EJECT
     CSR         TVRVGN    BEGSR
      *================================================================
      * Rtv Next Seq for Key  RT - Order Detail Sched-Consmd  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WL0307           ODS Sequence Nu
      * Declare restrictor key work fields
     C           *LIKE     DEFN WDAIC3    WQTV01           Company Number
     C           *LIKE     DEFN WDC4NB    WQTV02           Order Number
     C           *LIKE     DEFN WDDPNB    WQTV03           Order Sequence
     C           *LIKE     DEFN WDUENB    WQTV04           Order Secondary
     C           *LIKE     DEFN WDJGDT    WQTV05           OD Production D
      * Define keylist
     C           KRSTV     KLIST
     C                     KFLD           WQTV01           Company Number
     C                     KFLD           WQTV02           Order Number
     C                     KFLD           WQTV03           Order Sequence
     C                     KFLD           WQTV04           Order Secondary
     C                     KFLD           WQTV05           OD Production D
      * Setup key
     C                     Z-ADDWL0302    WQTV01           Company Number
     C                     Z-ADDWL0303    WQTV02           Order Number
     C                     Z-ADDWL0304    WQTV03           Order Sequence
     C                     Z-ADDWL0305    WQTV04           Order Secondary
     C                     Z-ADDWL0306    WQTV05           OD Production D
      * Establish starting position
     C           KRSTV     SETLL@B6CPNB                    *
     C           KRSTV     READE@B6CPNB                  90*
      * Data record not found
     C   90                MOVEL'USR3152' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     Z-ADDWDOONY    WL0307           ODS Sequence Nu
     C           KRSTV     READE@B6CPNB                  90*
     C                     ENDDO
      * USER: Exit processing
     C                     ADD  1         WL0307           ODS Sequence Nu
      *================================================================
     CSR         TVEXIT    ENDSR
      /EJECT
     CSR         TWRVGN    BEGSR
      *================================================================
      * Upd OrdDtl Sch-Consmd RT - Order Detail Sched-Consmd  * 
      *================================================================
      *
     C                     MOVEL*BLANK    WN0627  1        EDI Status 1
     C                     MOVEL*BLANK    WN0628  1        EDI Status 2
     C                     MOVEL*BLANK    WN0629  1        EDI Status 3
     C                     MOVEL*BLANK    WN0630  1        Record Status
     C                     Z-ADD*ZERO     WN0631  60       Job Time
     C                     MOVEL*BLANK    WN0632 10        User Id
     C                     MOVEL*BLANK    WN0633 10        Job Name
     C                     Z-ADD*ZERO     WN0634  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSTW     KLIST
     C                     KFLD           WDAIC3           Company Number
     C                     KFLD           WDC4NB           Order Number
     C                     KFLD           WDDPNB           Order Sequence
     C                     KFLD           WDUENB           Order Secondary
     C                     KFLD           WDJGDT           OD Production D
     C                     KFLD           WDOONY           ODS Sequence Nu
      * Setup key
     C                     Z-ADDWL0308    WDAIC3           Company Number
     C                     Z-ADDWL0309    WDC4NB           Order Number
     C                     Z-ADDWL0310    WDDPNB           Order Sequence
     C                     Z-ADDWL0311    WDUENB           Order Secondary
     C                     Z-ADDWL0312    WDJGDT           OD Production D
     C                     Z-ADDWL0313    WDOONY           ODS Sequence Nu
      * Establish starting position
     C           KRSTW     CHAIN@B6CPNB              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR3152' W0RTN   7
      * USER: Processing if Data record not found
      * CASE:
      *  - c1ORc2
      *   |- c1    : PAR.OD Pieces Scheduled is Greater than zero
      *   |- c2    : PAR.OD Weight Scheduled is Greater than zero
      *   '-
     C           WL0318    IFGT 0                          *IF
     C           WL0319    ORGT 0                          *OR
      * Crt OrdDtl Sch-Consmd CR - Order Detail Sched-Consmd  * 
     C                     EXSR TXCRRC
     C                     END                             *FI
     C                     GOTO TWEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C           WDFLWG    ADD  WL0319    YL0068           OD Weight Sched
     C           WDIGQT    ADD  WL0318    YL0069           OD Qty/Cnsmd Pi
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.OD Pieces Scheduled is Less than or equal zero
      *   |- c2    : LCL.OD Weight Scheduled is Less than or equal zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0069    IFLE 0                          *IF
     C           YL0068    IFLE 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Del OrdDtl Sch-Consmd DL - Order Detail Sched-Consmd  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWDAIC3    WL0039           Company Number
     C                     Z-ADDWDC4NB    WL0040           Order Number
     C                     Z-ADDWDDPNB    WL0041           Order Sequence
     C                     Z-ADDWDUENB    WL0042           Order Secondary
     C                     Z-ADDWDJGDT    WL0043           OD Production D
     C                     Z-ADDWDOONY    WL0044           ODS Sequence Nu
     C                     EXSR SEDLRC
     C                     ELSE
      * CASE: *OTHERWISE
      * Chg OrdDtl Sch-Consmd CH - Order Detail Sched-Consmd  * 
     C                     EXSR TYCHRC
     C                     END                             *FI
     C                     ENDIF
      *================================================================
     CSR         TWEXIT    ENDSR
      /EJECT
     CSR         TXCRRC    BEGSR
      *================================================================
      * Crt OrdDtl Sch-Consmd CR - Order Detail Sched-Consmd  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move all fields to @B6CPNA
     C                     Z-ADDWL0308    WEAIC3           Company Number
     C                     Z-ADDWL0309    WEC4NB           Order Number
     C                     Z-ADDWL0310    WEDPNB           Order Sequence
     C                     Z-ADDWL0311    WEUENB           Order Secondary
     C                     Z-ADDWL0312    WEJGDT           OD Production D
     C                     Z-ADDWL0313    WEOONY           ODS Sequence Nu
     C                     Z-ADDWL0314    WEAODT           Scheduled Ship
     C                     MOVELWL0315    WEAJCD           Warehouse Code
     C                     Z-ADDWL0316    WENUDT           Consumed Item C
     C                     Z-ADDWL0317    WEHGCD           Item Code
     C                     Z-ADDWL0318    WEIGQT           OD Qty/Cnsmd Pi
     C                     Z-ADDWL0319    WEFLWG           OD Weight Sched
     C                     Z-ADDWL0320    WENSQT           ODS Quantity Sh
     C                     Z-ADDWL0321    WEJQWG           ODS Weight Shor
     C                     Z-ADDWL0322    WENVDT           Deadline Depart
     C                     Z-ADDWL0323    WEBUTM           Deadline Depart
     C                     MOVELWN0627    WEUVST           EDI Status 1
     C                     MOVELWN0628    WEUWST           EDI Status 2
     C                     MOVELWN0629    WEUXST           EDI Status 3
     C                     MOVELWN0630    WEVSST           Record Status
     C                     Z-ADDWN0631    WEAATM           Job Time
     C                     MOVELWN0632    WEAYNA           User Id
     C                     MOVELWN0633    WEA0NA           Job Name
     C                     Z-ADDWN0634    WEAXDT           Job Date
      *
      * USER: Processing before Data update
      * SET Record Stamp CRTOB IF
     C                     MOVEL'A'       WEVSST           Record Status
     C                     Z-ADD##JTM     WEAATM           Job Time
     C                     MOVEL##USR     WEAYNA           User Id
     C                     MOVEL##PGM     WEA0NA           Job Name
     C                     Z-ADD##JDT     WEAXDT           Job Date
     C           KLCRTX    KLIST
     C                     KFLD           WEAIC3           Company Number
     C                     KFLD           WEC4NB           Order Number
     C                     KFLD           WEDPNB           Order Sequence
     C                     KFLD           WEUENB           Order Secondary
     C                     KFLD           WEJGDT           OD Production D
     C                     KFLD           WEOONY           ODS Sequence Nu
      * Check for duplicate primary key
     C           KLCRTX    SETLL@B6CPNA                  90*
     C           *IN90     IFEQ '1'
     C                     MOVEL'USR3153' W0RTN   7
      * Send message 'Order Detail Sched-Con EX'
     C                     MOVEL'USR3153' ZAMSID
     C                     EXSR ZASNMS
     C                     GOTO TXEXIT
     C                     ENDIF
      *
     C                     WRITE@B6CPNA                91  *
      *
     C           *IN91     IFEQ '1'
      * Write error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
     C                     ENDIF
      *================================================================
     CSR         TXEXIT    ENDSR
      /EJECT
     CSR         TYCHRC    BEGSR
      *================================================================
      * Chg OrdDtl Sch-Consmd CH - Order Detail Sched-Consmd  * 
      *================================================================
      *
     C                     MOVEL*BLANK    WN0635  1        EDI Status 1
     C                     MOVEL*BLANK    WN0636  1        EDI Status 2
     C                     MOVEL*BLANK    WN0637  1        EDI Status 3
     C                     MOVEL*BLANK    WN0638  1        Record Status
     C                     Z-ADD*ZERO     WN0639  60       Job Time
     C                     MOVEL*BLANK    WN0640 10        User Id
     C                     MOVEL*BLANK    WN0641 10        Job Name
     C                     Z-ADD*ZERO     WN0642  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YIRDC   1
      *
      * Move key fields to @B6CPNA
     C                     Z-ADDWDAIC3    WEAIC3           Company Number
     C                     Z-ADDWDC4NB    WEC4NB           Order Number
     C                     Z-ADDWDDPNB    WEDPNB           Order Sequence
     C                     Z-ADDWDUENB    WEUENB           Order Secondary
     C                     Z-ADDWDJGDT    WEJGDT           OD Production D
     C                     Z-ADDWDOONY    WEOONY           ODS Sequence Nu
      *
     C           KLCHTY    KLIST
     C                     KFLD           WEAIC3           Company Number
     C                     KFLD           WEC4NB           Order Number
     C                     KFLD           WEDPNB           Order Sequence
     C                     KFLD           WEUENB           Order Secondary
     C                     KFLD           WEJGDT           OD Production D
     C                     KFLD           WEOONY           ODS Sequence Nu
     C           KLCHTY    CHAIN@B6CPNA              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'POB6CPL0'MDACP
     C                     MOVEL'@B6CPNA' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL012.
     C                     MOVEL'LBL012'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO TYEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO TYEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPOB61    YIRDCS
      * Move non-key fields to @B6CPNA
     C                     Z-ADDWL0314    WEAODT           Scheduled Ship
     C                     MOVELWL0315    WEAJCD    P      Warehouse Code
     C                     Z-ADDWL0316    WENUDT           Consumed Item C
     C                     Z-ADDWL0317    WEHGCD           Item Code
     C                     Z-ADDYL0069    WEIGQT           OD Qty/Cnsmd Pi
     C                     Z-ADDYL0068    WEFLWG           OD Weight Sched
     C                     Z-ADDWDNSQT    WENSQT           ODS Quantity Sh
     C                     Z-ADDWDJQWG    WEJQWG           ODS Weight Shor
     C                     Z-ADD*ZERO     WENVDT           Deadline Depart
     C                     Z-ADD*ZERO     WEBUTM           Deadline Depart
      *
      * Set PGM.*Record Data Changed flag
     C           QPOB61    IFNE YIRDCS
     C           YIRDC     ANDNE'N'
     C                     MOVE 'Y'       YIRDC
     C                     ENDIF
      * USER: Processing before Data update
      * Set Date/Time Stamp   IF
     C                     Z-ADD##JTM     WEAATM           Job Time
     C                     MOVEL##USR     WEAYNA           User Id
     C                     MOVEL##JOB     WEA0NA           Job Name
     C                     Z-ADD##JDT     WEAXDT           Job Date
      * Set PGM.*Record Data Changed flag
     C           QPOB61    IFNE YIRDCS
     C           YIRDC     ANDNE'N'
     C                     MOVE 'Y'       YIRDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YIRDC     IFEQ 'Y'
     C                     UPDAT@B6CPNA                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPOB6CPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         TYEXIT    ENDSR
      /EJECT
     CSR         TZCHRC    BEGSR
      *================================================================
      * Chg Prod Allocated    CH - PS Prod Item Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0643  70       PS Available Sh
     C                     Z-ADD*ZERO     WN0644  92       PS Weight Plann
     C                     Z-ADD*ZERO     WN0645  70       PS Pieces Plann
     C                     Z-ADD*ZERO     WN0646  72       PS Pct of Carca
     C                     Z-ADD*ZERO     WN0647  92       PS Weight Inv O
     C                     Z-ADD*ZERO     WN0648  70       PS Pieces Inv O
     C                     Z-ADD*ZERO     WN0649  92       PS Weight Stand
     C                     Z-ADD*ZERO     WN0650  70       PS Pieces Stand
     C                     Z-ADD*ZERO     WN0651  92       PS Weight Conve
     C                     Z-ADD*ZERO     WN0652  70       PS Pieces Conve
     C                     Z-ADD*ZERO     WN0653  92       PS Weight Shipp
     C                     Z-ADD*ZERO     WN0654  70       PS Pieces Shipp
     C                     Z-ADD*ZERO     WN0655  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0656  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0657  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0658  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0659  92       PS Weight Ship
     C                     Z-ADD*ZERO     WN0660  70       PS Pieces Ship
     C                     Z-ADD*ZERO     WN0661  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0662  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0663 112       PS Unit Weight
     C                     Z-ADD*ZERO     WN0664  70       PS Pieces Whs T
     C                     Z-ADD*ZERO     WN0665 112       PS Weight Whs T
     C                     Z-ADD*ZERO     WN0666  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0667 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0668  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0669 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0670  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0671 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0672  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0673 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0674  70       PS Pieces Unuse
     C                     MOVEL*BLANK    WN0675  3        PS Item Id
     C                     MOVEL*BLANK    WN0676  2        Warehouse Type
     C                     MOVEL*BLANK    WN0677  1        PS Lock Status
     C                     MOVEL*BLANK    WN0678  1        PS Export/Domes
     C                     MOVEL*BLANK    WN0679  1        PS Print On Sch
     C                     MOVEL*BLANK    WN0680  1        PS Piece Count
     C                     MOVEL*BLANK    WN0681  1        PS Unused Sts 1
     C                     MOVEL*BLANK    WN0682  1        PS Unused Sts 2
     C                     MOVEL*BLANK    WN0683  1        PS Unused Sts 3
     C                     MOVEL*BLANK    WN0684  1        PS Unused Sts 4
     C                     MOVEL*BLANK    WN0685  2        PS Item Sched N
     C                     MOVEL*BLANK    WN0686  3        PS Production W
     C                     Z-ADD*ZERO     WN0687  92       PS Weight Order
     C                     Z-ADD*ZERO     WN0688  70       PS Pieces Order
     C                     Z-ADD*ZERO     WN0689  92       PS Weight FC Ad
     C                     Z-ADD*ZERO     WN0690  70       PS Pieces FC Ad
     C                     Z-ADD*ZERO     WN0691  92       PS Weight FX Ad
     C                     Z-ADD*ZERO     WN0692  70       PS Pieces FX Ad
     C                     Z-ADD*ZERO     WN0693  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0694  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0695  92       PS Weight Avail
     C                     Z-ADD*ZERO     WN0696  70       PS Pieces Avail
     C                     Z-ADD*ZERO     WN0697  92       PS Weight Produ
     C                     Z-ADD*ZERO     WN0698  70       PS Pieces Produ
     C                     Z-ADD*ZERO     WN0699  92       PS Weight Fab N
     C                     Z-ADD*ZERO     WN0700  70       PS Pieces Fab N
     C                     Z-ADD*ZERO     WN0701  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0702  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0703  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0704  70       PS Pieces Sched
     C                     MOVEL*BLANK    WN0705  6        Department Code
     C                     Z-ADD*ZERO     WN0706  30       Item Structure
     C                     Z-ADD*ZERO     WN0707  30       Item Structure
     C                     Z-ADD*ZERO     WN0708  30       Item Structure
     C                     MOVEL*BLANK    WN0709  6        Primal Group Co
     C                     MOVEL*BLANK    WN0710  1        EDI Status 1
     C                     MOVEL*BLANK    WN0711  1        EDI Status 2
     C                     MOVEL*BLANK    WN0712  1        EDI Status 3
     C                     MOVEL*BLANK    WN0713  1        Record Status
     C                     Z-ADD*ZERO     WN0714  60       Job Time
     C                     MOVEL*BLANK    WN0715 10        User Id
     C                     MOVEL*BLANK    WN0716 10        Job Name
     C                     Z-ADD*ZERO     WN0717  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YJRDC   1
      *
      * Move key fields to @I8CPUR
     C                     Z-ADDWSAIC3    WTAIC3           Company Number
     C                     MOVELWSV5ST    WTV5ST    P      Production Type
     C                     Z-ADDWSELDT    WTELDT           Production Date
     C                     Z-ADDWSHGCD    WTHGCD           Item Code
     C                     MOVELWSAJCD    WTAJCD    P      Warehouse Code
      *
     C           KLCHTZ    KLIST
     C                     KFLD           WTAIC3           Company Number
     C                     KFLD           WTV5ST           Production Type
     C                     KFLD           WTELDT           Production Date
     C                     KFLD           WTHGCD           Item Code
     C                     KFLD           WTAJCD           Warehouse Code
     C           KLCHTZ    CHAIN@I8CPUR              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PDI8CPL0'MDACP
     C                     MOVEL'@I8CPUR' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL013.
     C                     MOVEL'LBL013'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO TZEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO TZEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPDI81    YJRDCS
      * Move non-key fields to @I8CPUR
     C                     Z-ADDWSF8WG    WTF8WG           PS Avg Piece Wg
     C                     Z-ADDWN0568    WTOAWT           PS Weight Prod
     C                     Z-ADDWN0569    WTCDNB           PS Pieces Prod
      *
      * Set PGM.*Record Data Changed flag
     C           QPDI81    IFNE YJRDCS
     C           YJRDC     ANDNE'N'
     C                     MOVE 'Y'       YJRDC
     C                     ENDIF
      * USER: Processing before Data update
      * UPS CHGOBJ Stamp      IF
     C                     Z-ADD##JTM     WTAATM           Job Time
     C                     MOVEL##USR     WTAYNA           User Id
     C                     MOVEL##PGM     WTA0NA           Job Name
     C                     Z-ADD##JDT     WTAXDT           Job Date
      * Set PGM.*Record Data Changed flag
     C           QPDI81    IFNE YJRDCS
     C           YJRDC     ANDNE'N'
     C                     MOVE 'Y'       YJRDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YJRDC     IFEQ 'Y'
     C                     UPDAT@I8CPUR                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPDI8CPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         TZEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * documentation
      *================================================================
      * FP1054 Added CASE stmts for Fresh and Frozen- frozen is alloc bac
      *       Fresh can be backwards or forwards per company item ext sts
      *  1st call: IF par.warehouse code <> par.warehouse code pass usr,t
      *  We're moving fresh production to a diff warehouse for an order
      *   1st move std prod from the Fresh warehouse to the order's wareh
      *   Dont update the order detail schedule yet.
      *  2nd call: IF par.warehouse code = par.warehouse code pass usr,th
      *   alloc the input warehouse's production to the order
      *   And update the order detail schedule.
      * C01643 RMC 8/05/11  move piece count item wt calc above upd to or
      *  sched so its upd with the same weight as pdi8cpp
      * R13899 RMC 10/11/18-If OH Is a BLOCK order, then add 1 day to job
      *  - dont allocate current day prod to a block order UNLESS SCHED O
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         UCSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         UCEXIT    ENDSR
      /EJECT
     CSR         UDSUBR    BEGSR
      *================================================================
      * documentation
      *================================================================
      * FP1054 Added CASE stmts for Fresh and Frozen- frozen is alloc bac
      *       Fresh can be backwards or forwards per company item ext sts
      *  1st call: IF par.warehouse code <> par.warehouse code pass usr,t
      *  We're moving fresh production to a diff warehouse for an order
      *   1st move std prod from the Fresh warehouse to the order's wareh
      *   Dont update the order detail schedule yet.
      *  2nd call: IF par.warehouse code = par.warehouse code pass usr,th
      *   alloc the input warehouse's production to the order
      *   And update the order detail schedule.
      * C01643 RMC 8/05/11  move piece count item wt calc above upd to or
      *  sched so its upd with the same weight as pdi8cpp
      * R13899 RMC 10/11/18-If OH Is a BLOCK order, then add 1 day to job
      *  - dont allocate current day prod to a block order UNLESS SCHED O
      *================================================================
     CSR         UDEXIT    ENDSR
      /EJECT
     CSR         UESUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         UEEXIT    ENDSR
      /EJECT
     CSR         UFSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         UFEXIT    ENDSR
      /EJECT
     CSR         UGSUBR    BEGSR
      *================================================================
      * documentation
      *================================================================
      * FP1054 Added CASE stmts for Fresh and Frozen- frozen is alloc bac
      *       Fresh can be backwards or forwards per company item ext sts
      *  1st call: IF par.warehouse code <> par.warehouse code pass usr,t
      *  We're moving fresh production to a diff warehouse for an order
      *   1st move std prod from the Fresh warehouse to the order's wareh
      *   Dont update the order detail schedule yet.
      *  2nd call: IF par.warehouse code = par.warehouse code pass usr,th
      *   alloc the input warehouse's production to the order
      *   And update the order detail schedule.
      * C01643 RMC 8/05/11  move piece count item wt calc above upd to or
      *  sched so its upd with the same weight as pdi8cpp
      * R13899 RMC 10/11/18-If OH Is a BLOCK order, then add 1 day to job
      *  - dont allocate current day prod to a block order UNLESS SCHED O
      *================================================================
     CSR         UGEXIT    ENDSR
      /EJECT
     CSR         UHSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         UHEXIT    ENDSR
      /EJECT
     CSR         UISUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         UIEXIT    ENDSR
      /EJECT
     CSR         UJSUBR    BEGSR
      *================================================================
      * documentation
      *================================================================
      * FP1054 Added CASE stmts for Fresh and Frozen- frozen is alloc bac
      *       Fresh can be backwards or forwards per company item ext sts
      *  1st call: IF par.warehouse code <> par.warehouse code pass usr,t
      *  We're moving fresh production to a diff warehouse for an order
      *   1st move std prod from the Fresh warehouse to the order's wareh
      *   Dont update the order detail schedule yet.
      *  2nd call: IF par.warehouse code = par.warehouse code pass usr,th
      *   alloc the input warehouse's production to the order
      *   And update the order detail schedule.
      * C01643 RMC 8/05/11  move piece count item wt calc above upd to or
      *  sched so its upd with the same weight as pdi8cpp
      * R13899 RMC 10/11/18-If OH Is a BLOCK order, then add 1 day to job
      *  - dont allocate current day prod to a block order UNLESS SCHED O
      *================================================================
     CSR         UJEXIT    ENDSR
      /EJECT
     CSR         UKSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         UKEXIT    ENDSR
      /EJECT
     CSR         ULSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         ULEXIT    ENDSR
      /EJECT
     CSR         UMSUBR    BEGSR
      *================================================================
      * documentation
      *================================================================
      * FP1054 Added CASE stmts for Fresh and Frozen- frozen is alloc bac
      *       Fresh can be backwards or forwards per company item ext sts
      *  1st call: IF par.warehouse code <> par.warehouse code pass usr,t
      *  We're moving fresh production to a diff warehouse for an order
      *   1st move std prod from the Fresh warehouse to the order's wareh
      *   Dont update the order detail schedule yet.
      *  2nd call: IF par.warehouse code = par.warehouse code pass usr,th
      *   alloc the input warehouse's production to the order
      *   And update the order detail schedule.
      * C01643 RMC 8/05/11  move piece count item wt calc above upd to or
      *  sched so its upd with the same weight as pdi8cpp
      * R13899 RMC 10/11/18-If OH Is a BLOCK order, then add 1 day to job
      *  - dont allocate current day prod to a block order UNLESS SCHED O
      *================================================================
     CSR         UMEXIT    ENDSR
      /EJECT
     CSR         UNSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         UNEXIT    ENDSR
      /EJECT
     CSR         UOSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         UOEXIT    ENDSR
      /EJECT
     CSR         XCVFA     BEGSR
      *================================================================
      * Convert absolute day to date
      *================================================================
     C           XDAY1     IFGT 109267
     C                     ADD  2         XDAY1
     C                     ELSE
     C           XDAY1     IFGT 36218
     C                     ADD  1         XDAY1
     C                     END
     C                     END
      * Full years (up to the date)
     C           XDAY1     DIV  365.25    XDWK1   80
     C                     MVR            XDWK3   71
     C                     Z-ADDXDWK1     XDINYY
     C           XDWK3     IFEQ 0
      * The date is the end of a year
     C                     Z-ADD12        XDINMM
     C                     Z-ADD31        XDINDD
     C                     ELSE
      * Year days up to the date
     C           XDWK1     MULT 365.25    XDWK2   60
     C                     SUB  XDWK2     XDAY1
     C                     ADD  1         XDINYY
      * Leap year ?
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
      * March 1 (relative day of the year)
     C           XDWK1     IFEQ 0
     C                     Z-ADD60        XDWK1
     C                     ELSE
     C                     Z-ADD59        XDWK1
     C                     END
      * Define date base month and offset day -
     C           XDAY1     IFLE XDWK1
      *  - January (thru February)
     C                     Z-ADD1         XDINMM
     C                     ELSE
     C                     SUB  XDWK1     XDAY1
     C           XDAY1     IFLE 153
      *  - March (thru July)
     C                     Z-ADD3         XDINMM
     C                     ELSE
      *  - August (thru December)
     C                     Z-ADD8         XDINMM
     C                     SUB  153       XDAY1
     C                     END
      * Calculate 2 month base and offset day
     C           XDAY1     SUB  1         XDWK1
     C                     DIV  61        XDWK1
     C                     MVR            XDAY1
     C                     ADD  1         XDAY1
     C                     MULT 2         XDWK1
     C                     ADD  XDWK1     XDINMM
     C                     END
      * Calculate date increment,
     C           XDAY1     IFGT 31
     C                     ADD  1         XDINMM
     C                     SUB  31        XDAY1
     C                     END
     C                     Z-ADDXDAY1     XDINDD
     C                     END
      *================================================================
     CSR         XCVFAE    ENDSR
      /EJECT
     CSR         XCVTA     BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C           XDINYY    SUB  1         XDWK1   80
     C           XDWK1     MULT 365.25    XDAY1   60
     C           XDWK1     IFGE 300
     C                     SUB  2         XDAY1
     C                     ELSE
     C           XDWK1     IFGE 100
     C                     SUB  1         XDAY1
     C                     END
     C                     END
      * (from the beginning of the year to the beginning of the month:)
     C           XDINMM    SUB  1         XDWK1
     C           XDINMM    IFLT 3
      *     ...+31*(MM-1) (for January-February) ...
     C                     MULT 31        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                     MULT 30        XDWK1
     C                     ADD  XDWK1     XDAY1
      *         ...-2 (for preceding February) ...
     C                     SUB  2         XDAY1
     C           XDINYY    IFNE 100
     C           XDINYY    ANDNE300
      *         ...+1 (for preceding February, if leap year) ...
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     ADD  1         XDAY1
     C                     END
     C                     END
     C           XDINMM    IFLT 8
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C           XDINMM    MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C           XDINMM    ADD  1         XDWK1
     C                     MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     END
     C                     END
      * ...+DD (days in the month up to the ending date)
     C                     ADD  XDINDD    XDAY1
      *================================================================
     CSR         XCVTAE    ENDSR
      /EJECT
     CSR         XDADY     BEGSR
      *================================================================
      * Calculate date increment, *DAYS
      *================================================================
     C           XDURR     IFEQ 0
     C           XDWSL     OREQ 0
      * None days of week selected
     C                     Z-ADDXDAY2     XDAY1
     C           XDURR     IFNE *ZERO
      * Return Code: Unable to increment date.
     C                     MOVEL'Y2U0059' W0RTN   7
     C                     ENDIF
     C                     GOTO XDADYE
     C                     ENDIF
     C           XDWSL     IFEQ 7
      * All days of week selected
     C           XDAY2     ADD  XDURR     XDAY1
     C                     GOTO XDADYM
     C                     ENDIF
      * Some days of week selected
     C           XDURR     IFGE 0
     C                     Z-ADD1         XDSTP   10
     C                     ELSE
     C                     Z-ADD-1        XDSTP
     C                     ENDIF
      * Get number of full weeks in the duration
     C           XDURR     DIV  XDWSL     XDWNB   60
      * Isolate the last week
     C                     MVR            XDLSW   10
     C           XDLSW     IFEQ 0
     C           XDWSL     MULT XDSTP     XDLSW
     C                     SUB  XDSTP     XDWNB
     C                     ENDIF
      * Increment the date by the full weeks
     C           XDWNB     MULT 7         XDWK1   80
     C           XDAY2     ADD  XDWK1     XDAY1   60
      * Determine day of week of the beginning date
     C           XDAY2     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ENDIF
      * Loop: Increment the date by the last week
     C           XDLSW     DOWNE0
      * Increment the date
     C                     ADD  XDSTP     XDAY1
      * Increment the day of week
     C                     ADD  XDSTP     YY
      * Put day of week into the range 1-7
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ELSE
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     ELSE
     C           YY        IFEQ -1
     C                     Z-ADD6         YY
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
     C           YDOW,YY   IFEQ XDSEL
      * Selected day of the last week has been processed
     C                     SUB  XDSTP     XDLSW
     C                     ENDIF
      * End of loop
     C                     ENDDO
     C           XDADYM    TAG
     C           XDINDD    IFLT 1
     C                     Z-ADD1         XDINDD
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         XDADYE    ENDSR
      /EJECT
     CSR         XDOWS     BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                     MOVEAXDCDW     YDOW
     C                     Z-ADD0         XDWSL   10
     C                     Z-ADD1         YY
     C           YY        DOWLE7
     C           YDOW,YY   IFEQ XDSEL
     C                     ADD  1         XDWSL
     C                     END
     C                     ADD  1         YY
     C                     END
      *================================================================
     CSR         XDOWSE    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program: Normal
      *================================================================
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     Z-ADD*ZERO     P1AIC3           Company Number
     C                     MOVEL*BLANK    P2MWSX           PPS Process STS
     C                     Z-ADD*ZERO     P3GWDT           Production Date
     C                     Z-ADD*ZERO     P4HODT           Scheduled Ship
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAAIC3           Company Number
     C                     Z-ADD*ZERO     WAC4NB           Order Number
     C                     Z-ADD*ZERO     WADPNB           Order Sequence
     C                     Z-ADD*ZERO     WAUENB           Order Secondary
     C                     Z-ADD*ZERO     WAAODT           Scheduled Ship
     C                     Z-ADD*ZERO     WAHGCD           Item Code
     C                     Z-ADD*ZERO     WANUDT           Consumed Item C
     C                     Z-ADD*ZERO     WAAVQT           Quantity Ordere
     C                     Z-ADD*ZERO     WAD0WG           Weight Ordered
     C                     Z-ADD*ZERO     WACCQT           Quantity Schedu
     C                     Z-ADD*ZERO     WAAUWG           Weight Schedule
     C                     Z-ADD*ZERO     WANVDT           Deadline Depart
     C                     Z-ADD*ZERO     WABUTM           Deadline Depart
     C                     Z-ADD*ZERO     WARMNB           Load ID
     C                     Z-ADD*ZERO     WABKC7           Ship To Custome
     C                     Z-ADD*ZERO     WACXDT           Date of Origina
     C                     Z-ADD*ZERO     WABQTM           Time of Origina
     C                     Z-ADD*ZERO     WAOFNY           ODBS New Prod H
     C                     Z-ADD*ZERO     WAEIDT           Requested Deliv
     C                     Z-ADD*ZERO     WARINY           Item Age Days
     C                     Z-ADD*ZERO     WATIDT           Production Ovr
     C                     Z-ADD*ZERO     WATJDT           Production Ovr
     C                     Z-ADD*ZERO     WATNDT           Production AgeD
     C                     Z-ADD*ZERO     WATODT           Production AgeD
     C                     Z-ADD*ZERO     WAA5DT           Requested Ship
     C                     Z-ADD*ZERO     WAVUDT           ODBS Unused Dat
     C                     Z-ADD*ZERO     WAVVDT           ODBS Unused Dat
     C                     Z-ADD*ZERO     WAVWDT           ODBS Unused Dat
      * Define work field Order Number Ref
     C                     Z-ADD*ZERO     WUCAC7  70
      * Define work field Produced By Sts USR
     C                     MOVEL*BLANK    WUX8SX  2
      * Define work field Description Line One
     C                     MOVEL*BLANK    WUAVNA 30
      * Define work field Item Structure Class Code
     C                     Z-ADD*ZERO     WURINB  30
      * Define work field Item Structure Group Code
     C                     Z-ADD*ZERO     WURHNB  30
      * Define work field Item Structure Type Code
     C                     Z-ADD*ZERO     WURGNB  30
      * Define work field Item Type Code
     C                     MOVEL*BLANK    WUN0CD  3
      * Define work field Default Warehouse
     C                     MOVEL*BLANK    WUQ1CD  3
      * Define work field Variety_Rendered_Cut
     C                     MOVEL*BLANK    WUXWST  1
      * Define work field Credit Item Status
     C                     MOVEL*BLANK    WUVMST  1
      * Define work field Std Weight_Head_Var_Ren
     C                     Z-ADD*ZERO     WUSWGH 112
      * Define work field Department Code
     C                     MOVEL*BLANK    WUR3CD  6
      * Define work field Group for Packaging
     C                     MOVEL*BLANK    WUSDCD  1
      * Define work field Seconds Item
     C                     MOVEL*BLANK    WUX5ST  1
      * Define work field Export_Domestic
     C                     MOVEL*BLANK    WUSUST  1
      * Define work field Print On Schedule
     C                     MOVEL*BLANK    WUSVST  1
      * Define work field Fresh Inv Allocation Seq
     C                     MOVEL*BLANK    WUSYST  1
      * Define work field Fresh Sched As Ordered
     C                     MOVEL*BLANK    WUSZST  1
      * Define work field Frozen Inv Allocation Seq
     C                     MOVEL*BLANK    WUS1ST  1
      * Define work field Primal Group Code
     C                     MOVEL*BLANK    WUXRCD  6
      * Define work field Trans Contol AS400_Plant
     C                     MOVEL*BLANK    WUXUST  1
      * Define work field Warehouse Location
     C                     MOVEL*BLANK    WUT0ST  1
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WBAIC3           Company Number
     C                     Z-ADD*ZERO     WBHGCD           Item Code
     C                     Z-ADD*ZERO     WBAWPC           Conversion Fact
     C                     Z-ADD*ZERO     WBAXPC           Conversion Fact
     C                     Z-ADD*ZERO     WBAIWG           Unit Weight
     C                     Z-ADD*ZERO     WBCZWG           Minimum Weight
     C                     Z-ADD*ZERO     WBC0WG           Maximum Weight
     C                     Z-ADD*ZERO     WBURTN           Number Cases On
     C                     Z-ADD*ZERO     WBAJC8           Vendor Item Def
     C                     Z-ADD*ZERO     WBRINB           Item Structure
     C                     Z-ADD*ZERO     WBRHNB           Item Structure
     C                     Z-ADD*ZERO     WBRGNB           Item Structure
     C                     Z-ADD*ZERO     WBTFNB           Transportation
     C                     Z-ADD*ZERO     WBTMVA           Maximum Audit V
     C                     Z-ADD*ZERO     WBTNVA           Minimum Audit V
     C                     Z-ADD*ZERO     WBBLPR           Market Overage
     C                     Z-ADD*ZERO     WBBMPR           Standard Overag
     C                     Z-ADD*ZERO     WBCMCO           Item Pricing Co
     C                     Z-ADD*ZERO     WBCHTM           Fresh Chilling
     C                     Z-ADD*ZERO     WBSWGH           Std Weight_Head
     C                     Z-ADD*ZERO     WBPPHE           Pieces Per Head
     C                     Z-ADD*ZERO     WBICN1           Item Category N
     C                     Z-ADD*ZERO     WBICN2           Item Category N
     C                     Z-ADD*ZERO     WBV2NB           Item Category N
     C                     Z-ADD*ZERO     WBITCN           Item Category N
     C                     Z-ADD*ZERO     WBITC5           Item Category N
     C                     Z-ADD*ZERO     WBICN6           Item Category N
     C                     Z-ADD*ZERO     WBICN7           Item Category N
     C                     Z-ADD*ZERO     WBICN8           Item Category N
     C                     Z-ADD*ZERO     WBICN9           Item Category N
     C                     Z-ADD*ZERO     WBICN0           Item Category N
     C                     Z-ADD*ZERO     WBSFNB           Pallet Tare Wei
     C                     Z-ADD*ZERO     WBA3WG           Misc Tare Weigh
     C                     Z-ADD*ZERO     WBSJNB           Production Lead
     C                     Z-ADD*ZERO     WBSKNB           Agrimetrics gro
     C                     Z-ADD*ZERO     WBSLNB           Agrimetrics pac
     C                     Z-ADD*ZERO     WBSMNB           Agrimetrics gra
     C                     Z-ADD*ZERO     WBCFNB           PM Pounds per H
     C                     Z-ADD*ZERO     WBCGNB           Item Frt Overag
     C                     Z-ADD*ZERO     WBILNB           Packages per ca
     C                     Z-ADD*ZERO     WBCHNB           Use_Freeze_Sell
     C                     Z-ADD*ZERO     WBCINB           PM Batch Size
     C                     Z-ADD*ZERO     WBCJNB           Package Level s
     C                     Z-ADD*ZERO     WBCMNB           Partial Item Co
     C                     Z-ADD*ZERO     WBCNNB           WIP Item Code
     C                     Z-ADD*ZERO     WBCRNB           WIP Reject Code
     C                     Z-ADD*ZERO     WBCSNB           Std Costing Uni
     C                     Z-ADD*ZERO     WBCVNB           FP Std Green We
     C                     Z-ADD*ZERO     WBCWNB           PM Std LBS Man
     C                     Z-ADD*ZERO     WBCXNB           PM Raw Meat LBS
     C                     Z-ADD*ZERO     WBCZNB           PM Formula LBS
     C                     Z-ADD*ZERO     WBC0NB           PM Finished LBS
     C                     Z-ADD*ZERO     WBB4NB           PM Raw Material
     C                     Z-ADD*ZERO     WBB5NB           PM Line Number
     C                     Z-ADD*ZERO     WBBDNB           Pieces Per Bag
     C                     Z-ADD*ZERO     WBBJNB           Bags Per Unit
     C                     Z-ADD*ZERO     WBF5WG           Item Target Pri
     C                     Z-ADD*ZERO     WBF6WG           Minimum Piece W
     C                     Z-ADD*ZERO     WBF7WG           Maximum Piece W
     C                     Z-ADD*ZERO     WBBLNB           Seaboard Equiva
     C                     Z-ADD*ZERO     WBBNNB           Production Qty
     C                     Z-ADD*ZERO     WBAATM           Job Time
     C                     Z-ADD*ZERO     WBAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WCDBNB           Warehouse Chill
     C                     Z-ADD*ZERO     WCBWC3           Shipping Compan
     C                     Z-ADD*ZERO     WCBTC3           Accounting Comp
     C                     Z-ADD*ZERO     WCBUC3           WHS Sched Prod
     C                     Z-ADD*ZERO     WCBVC3           WHS Inventory C
     C                     Z-ADD*ZERO     WCAATM           Job Time
     C                     Z-ADD*ZERO     WCAXDT           Job Date
      * Define work field Blank for 3          USR
     C                     MOVEL*BLANK    WUUAT1  3
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WDAIC3           Company Number
     C                     Z-ADD*ZERO     WDC4NB           Order Number
     C                     Z-ADD*ZERO     WDDPNB           Order Sequence
     C                     Z-ADD*ZERO     WDUENB           Order Secondary
     C                     Z-ADD*ZERO     WDJGDT           OD Production D
     C                     Z-ADD*ZERO     WDOONY           ODS Sequence Nu
     C                     Z-ADD*ZERO     WDAODT           Scheduled Ship
     C                     Z-ADD*ZERO     WDNUDT           Consumed Item C
     C                     Z-ADD*ZERO     WDHGCD           Item Code
     C                     Z-ADD*ZERO     WDIGQT           OD Qty/Cnsmd Pi
     C                     Z-ADD*ZERO     WDFLWG           OD Weight Sched
     C                     Z-ADD*ZERO     WDNSQT           ODS Quantity Sh
     C                     Z-ADD*ZERO     WDJQWG           ODS Weight Shor
     C                     Z-ADD*ZERO     WDNVDT           Deadline Depart
     C                     Z-ADD*ZERO     WDBUTM           Deadline Depart
     C                     Z-ADD*ZERO     WDAATM           Job Time
     C                     Z-ADD*ZERO     WDAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WFAIC3           Company Number
     C                     Z-ADD*ZERO     WFC4NB           Order Number
     C                     Z-ADD*ZERO     WFDPNB           Order Sequence
     C                     Z-ADD*ZERO     WFUENB           Order Secondary
     C                     Z-ADD*ZERO     WFJGDT           OD Production D
     C                     Z-ADD*ZERO     WFAODT           Scheduled Ship
     C                     Z-ADD*ZERO     WFHGCD           Item Code
     C                     Z-ADD*ZERO     WFIGQT           OD Qty/Cnsmd Pi
     C                     Z-ADD*ZERO     WFFLWG           OD Weight Sched
     C                     Z-ADD*ZERO     WFIUQT           OD Quantity Inv
     C                     Z-ADD*ZERO     WFF3WG           OD Weight Inv S
     C                     Z-ADD*ZERO     WFIVQT           OD Quantity Unu
     C                     Z-ADD*ZERO     WFF4WG           OD Unused weigh
     C                     Z-ADD*ZERO     WFAATM           Job Time
     C                     Z-ADD*ZERO     WFAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WHAIC3           Company Number
     C                     Z-ADD*ZERO     WHC4NB           Order Number
     C                     Z-ADD*ZERO     WHDPNB           Order Sequence
     C                     Z-ADD*ZERO     WHUENB           Order Secondary
     C                     Z-ADD*ZERO     WHHGCD           Item Code
     C                     Z-ADD*ZERO     WHBKC7           Ship To Custome
     C                     Z-ADD*ZERO     WHCFC7           Order Group Cod
     C                     Z-ADD*ZERO     WHMAVA           Billing Detail
     C                     Z-ADD*ZERO     WHKDVA           Billing Detail
     C                     Z-ADD*ZERO     WHL8VA           Billing Detail
     C                     Z-ADD*ZERO     WHL9VA           Quantity to Sub
     C                     Z-ADD*ZERO     WHAYVA           Extended Amount
     C                     Z-ADD*ZERO     WHEXDT           Market Pricing
     C                     Z-ADD*ZERO     WHBZPR           Price Overage O
     C                     Z-ADD*ZERO     WHL6NB           Contract Number
     C                     Z-ADD*ZERO     WHGIDT           Pricing Date Us
     C                     Z-ADD*ZERO     WHR1NB           Rated Freight
     C                     Z-ADD*ZERO     WHAVQT           Quantity Ordere
     C                     Z-ADD*ZERO     WHD0WG           Weight Ordered
     C                     Z-ADD*ZERO     WHCCQT           Quantity Schedu
     C                     Z-ADD*ZERO     WHAUWG           Weight Schedule
     C                     Z-ADD*ZERO     WHCBQT           Quantity Shippe
     C                     Z-ADD*ZERO     WHATWG           Weight Shipped
     C                     Z-ADD*ZERO     WHAQCS           Unit Cost Prici
     C                     Z-ADD*ZERO     WHAGCS           Unit Cost Per P
     C                     Z-ADD*ZERO     WHAKPR           Unit Price
     C                     Z-ADD*ZERO     WHALPR           Unit Price - Cr
     C                     Z-ADD*ZERO     WHAUPR           Unit Price Orde
     C                     Z-ADD*ZERO     WHAVWG           Unit Weight Ord
     C                     Z-ADD*ZERO     WHA4WG           Tare Weight Tot
     C                     Z-ADD*ZERO     WHA5DT           Requested Ship
     C                     Z-ADD*ZERO     WHAODT           Scheduled Ship
     C                     Z-ADD*ZERO     WHGNDT           Actual Shipped
     C                     Z-ADD*ZERO     WHRGNB           Item Structure
     C                     Z-ADD*ZERO     WHRHNB           Item Structure
     C                     Z-ADD*ZERO     WHRINB           Item Structure
     C                     Z-ADD*ZERO     WHCXDT           Date of Origina
     C                     Z-ADD*ZERO     WHDUPR           Invoice Unit Pr
     C                     Z-ADD*ZERO     WHB6VL           Invoice Extende
     C                     Z-ADD*ZERO     WHA1AA           Ham Group Numbe
     C                     Z-ADD*ZERO     WHNTDT           Warehouse Palle
     C                     Z-ADD*ZERO     WHNUDT           Consumed Item C
     C                     Z-ADD*ZERO     WHNVDT           Deadline Depart
     C                     Z-ADD*ZERO     WHNWDT           OD Price Type R
     C                     Z-ADD*ZERO     WHNXDT           OD Firm Date
     C                     Z-ADD*ZERO     WHBUTM           Deadline Depart
     C                     Z-ADD*ZERO     WHBVTM           Price Code
     C                     Z-ADD*ZERO     WHBWTM           Maximum Net Wei
     C                     Z-ADD*ZERO     WHBXTM           Substitution Li
     C                     Z-ADD*ZERO     WHBYTM           Max Qty to sche
     C                     Z-ADD*ZERO     WHH5NX           Warehouse Palle
     C                     Z-ADD*ZERO     WHH6NX           Warehouse Avg P
     C                     Z-ADD*ZERO     WHH7NX           OD Item Target
     C                     Z-ADD*ZERO     WHH8NX           OD Estimated Gr
     C                     Z-ADD*ZERO     WHH9NX           OD Maximum Unit
     C                     Z-ADD*ZERO     WHDVPR           Order Gate/Fina
     C                     Z-ADD*ZERO     WHDWPR           OD Ceiling Pric
     C                     Z-ADD*ZERO     WHDXPR           OD Gate/Final P
     C                     Z-ADD*ZERO     WHDYPR           OD Weighted Avg
     C                     Z-ADD*ZERO     WHDZPR           OD Original Ord
     C                     Z-ADD*ZERO     WHGSPR           OD Cancel Date
     C                     Z-ADD*ZERO     WHGTPR           OD Unused Prc 7
     C                     Z-ADD*ZERO     WHGUPR           OD Unused Prc 8
     C                     Z-ADD*ZERO     WHPEWG           Weight Amount E
     C                     Z-ADD*ZERO     WHRINY           Item Age Days
     C                     Z-ADD*ZERO     WHTIDT           Production Ovr
     C                     Z-ADD*ZERO     WHTJDT           Production Ovr
     C                     Z-ADD*ZERO     WHTKDT           OD Market Begin
     C                     Z-ADD*ZERO     WHTLDT           OD Market Endin
     C                     Z-ADD*ZERO     WHTMDT           OD Atch to Ord
     C                     Z-ADD*ZERO     WHAATM           Job Time
     C                     Z-ADD*ZERO     WHAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WJAIC3           Company Number
     C                     Z-ADD*ZERO     WJC4NB           Order Number
     C                     Z-ADD*ZERO     WJDPNB           Order Sequence
     C                     Z-ADD*ZERO     WJUENB           Order Secondary
     C                     Z-ADD*ZERO     WJJGDT           OD Production D
     C                     Z-ADD*ZERO     WJAODT           Scheduled Ship
     C                     Z-ADD*ZERO     WJHGCD           Item Code
     C                     Z-ADD*ZERO     WJIUQT           OD Quantity Inv
     C                     Z-ADD*ZERO     WJF3WG           OD Weight Inv S
     C                     Z-ADD*ZERO     WJAATM           Job Time
     C                     Z-ADD*ZERO     WJAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WLAIC3           Company Number
     C                     Z-ADD*ZERO     WLBCDT           Post to G/L Dat
     C                     Z-ADD*ZERO     WLCQNB           Julian Date
     C                     Z-ADD*ZERO     WLESNB           Accounting Year
     C                     Z-ADD*ZERO     WLETNB           Accounting Peri
     C                     Z-ADD*ZERO     WLBZNB           OM Week
     C                     Z-ADD*ZERO     WLEINB           Week Number
     C                     Z-ADD*ZERO     WLAQNB           Billing Cycle
     C                     Z-ADD*ZERO     WLOJDT           HPS PIC Date
     C                     Z-ADD*ZERO     WLNQNX           HPS Calendar Ye
     C                     Z-ADD*ZERO     WLNRNX           HPS Calendar We
     C                     Z-ADD*ZERO     WLOKDT           Calendar Unused
     C                     Z-ADD*ZERO     WLOLDT           Calendar Unused
     C                     Z-ADD*ZERO     WLAATM           Job Time
     C                     Z-ADD*ZERO     WLAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WMAIC3           Company Number
     C                     Z-ADD*ZERO     WMC4NB           Order Number
     C                     Z-ADD*ZERO     WMANC7           A/R Customer Nu
     C                     Z-ADD*ZERO     WMBKC7           Ship To Custome
     C                     Z-ADD*ZERO     WMB0C7           Bill to Custome
     C                     Z-ADD*ZERO     WMA0DT           Order Date
     C                     Z-ADD*ZERO     WMA5DT           Requested Ship
     C                     Z-ADD*ZERO     WMGNDT           Actual Shipped
     C                     Z-ADD*ZERO     WMACDT           Cancel Date
     C                     Z-ADD*ZERO     WMAODT           Scheduled Ship
     C                     Z-ADD*ZERO     WMCXDT           Date of Origina
     C                     Z-ADD*ZERO     WMJZVA           Order Value Tot
     C                     Z-ADD*ZERO     WMA1WG           Order Weight To
     C                     Z-ADD*ZERO     WMEIDT           Requested Deliv
     C                     Z-ADD*ZERO     WMAFTM           Requested Deliv
     C                     Z-ADD*ZERO     WMRMNB           Load ID
     C                     Z-ADD*ZERO     WMTBNB           Absorbed Freigh
     C                     Z-ADD*ZERO     WMR1NB           Rated Freight
     C                     Z-ADD*ZERO     WMRNNB           Reefer Temperat
     C                     Z-ADD*ZERO     WMATIN           Attach to Invoi
     C                     Z-ADD*ZERO     WMRSRN           Resell Referenc
     C                     Z-ADD*ZERO     WMT3NB           Attach to Order
     C                     Z-ADD*ZERO     WMCONB           Invoice Number
     C                     Z-ADD*ZERO     WMAWDT           Invoice Date
     C                     Z-ADD*ZERO     WMVRVA           A/R order Value
     C                     Z-ADD*ZERO     WMB7VL           Invoice Order V
     C                     Z-ADD*ZERO     WMNODT           OH Appt Confirm
     C                     Z-ADD*ZERO     WMNPDT           JPN Invoice Iss
     C                     Z-ADD*ZERO     WMNQDT           Load Actual Shi
     C                     Z-ADD*ZERO     WMNRDT           Load BOL Comple
     C                     Z-ADD*ZERO     WMNSDT           Load Truck Depa
     C                     Z-ADD*ZERO     WMBPTM           Maximum Gross W
     C                     Z-ADD*ZERO     WMBQTM           Time of Origina
     C                     Z-ADD*ZERO     WMBRTM           OH Appt Confirm
     C                     Z-ADD*ZERO     WMBSTM           Load BOL Comple
     C                     Z-ADD*ZERO     WMBTTM           Load Truck Depa
     C                     Z-ADD*ZERO     WMH0NX           Act Frt Referen
     C                     Z-ADD*ZERO     WMH1NX           Act Non-Ref Frt
     C                     Z-ADD*ZERO     WMH2NX           OH Fuel Surchar
     C                     Z-ADD*ZERO     WMH3NX           OH Total Non-Re
     C                     Z-ADD*ZERO     WMH4NX           OH Total Ref Fr
     C                     Z-ADD*ZERO     WMC0C7           Claim Number
     C                     Z-ADD*ZERO     WMAATM           Job Time
     C                     Z-ADD*ZERO     WMAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WOAIC3           Company Number
     C                     Z-ADD*ZERO     WOHGCD           Item Code
     C                     Z-ADD*ZERO     WOELDT           Production Date
     C                     Z-ADD*ZERO     WOACWG           Quantity on Han
     C                     Z-ADD*ZERO     WOARQT           Quantity on Han
     C                     Z-ADD*ZERO     WOK7DT           Label Date
     C                     Z-ADD*ZERO     WOAATM           Job Time
     C                     Z-ADD*ZERO     WOAXDT           Job Date
      * Obtain default message file
     C           *NAMVAR   DEFN CAMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WSAIC3           Company Number
     C                     Z-ADD*ZERO     WSELDT           Production Date
     C                     Z-ADD*ZERO     WSHGCD           Item Code
     C                     Z-ADD*ZERO     WSGPDT           PS Available Sh
     C                     Z-ADD*ZERO     WSWTSP           PS Weight Plann
     C                     Z-ADD*ZERO     WSQTSP           PS Pieces Plann
     C                     Z-ADD*ZERO     WSDJPC           PS Pct of Carca
     C                     Z-ADD*ZERO     WSF8WG           PS Avg Piece Wg
     C                     Z-ADD*ZERO     WSWTIN           PS Weight Inv O
     C                     Z-ADD*ZERO     WSD5NB           PS Pieces Inv O
     C                     Z-ADD*ZERO     WSDXWG           PS Weight Stand
     C                     Z-ADD*ZERO     WSB2NB           PS Pieces Stand
     C                     Z-ADD*ZERO     WSWTCN           PS Weight Conve
     C                     Z-ADD*ZERO     WSPSCV           PS Pieces Conve
     C                     Z-ADD*ZERO     WSSAWT           PS Weight Shipp
     C                     Z-ADD*ZERO     WSB9NB           PS Pieces Shipp
     C                     Z-ADD*ZERO     WSD1WG           PS Weight Prod
     C                     Z-ADD*ZERO     WSCBNB           PS Pieces Prod
     C                     Z-ADD*ZERO     WSEZWG           PS Weight Inv A
     C                     Z-ADD*ZERO     WSCCNB           PS Pieces Inv A
     C                     Z-ADD*ZERO     WSE0WG           PS Weight Ship
     C                     Z-ADD*ZERO     WSD6NB           PS Pieces Ship
     C                     Z-ADD*ZERO     WSOAWT           PS Weight Prod
     C                     Z-ADD*ZERO     WSCDNB           PS Pieces Prod
     C                     Z-ADD*ZERO     WSUNW2           PS Weight Inv A
     C                     Z-ADD*ZERO     WSCENB           PS Pieces Inv A
     C                     Z-ADD*ZERO     WSF9WG           PS Unit Weight
     C                     Z-ADD*ZERO     WSBPNB           PS Pieces Whs T
     C                     Z-ADD*ZERO     WSGAWG           PS Weight Whs T
     C                     Z-ADD*ZERO     WSBQNB           PS Pieces Unuse
     C                     Z-ADD*ZERO     WSGBWG           PS Weight Unuse
     C                     Z-ADD*ZERO     WSBRNB           PS Pieces Unuse
     C                     Z-ADD*ZERO     WSGCWG           PS Weight Unuse
     C                     Z-ADD*ZERO     WSBSNB           PS Pieces Unuse
     C                     Z-ADD*ZERO     WSGDWG           PS Weight Unuse
     C                     Z-ADD*ZERO     WSBWNB           PS Pieces Unuse
     C                     Z-ADD*ZERO     WSGEWG           PS Weight Unuse
     C                     Z-ADD*ZERO     WSPS6U           PS Pieces Unuse
     C                     Z-ADD*ZERO     WSDVWG           PS Weight Order
     C                     Z-ADD*ZERO     WSD7NB           PS Pieces Order
     C                     Z-ADD*ZERO     WSFCAD           PS Weight FC Ad
     C                     Z-ADD*ZERO     WSD9NB           PS Pieces FC Ad
     C                     Z-ADD*ZERO     WSDWWG           PS Weight FX Ad
     C                     Z-ADD*ZERO     WSEANB           PS Pieces FX Ad
     C                     Z-ADD*ZERO     WSSHWT           PS Weight Sched
     C                     Z-ADD*ZERO     WSEBNB           PS Pieces Sched
     C                     Z-ADD*ZERO     WSAVWT           PS Weight Avail
     C                     Z-ADD*ZERO     WSECNB           PS Pieces Avail
     C                     Z-ADD*ZERO     WSWTON           PS Weight Produ
     C                     Z-ADD*ZERO     WSEDNB           PS Pieces Produ
     C                     Z-ADD*ZERO     WSFNWT           PS Weight Fab N
     C                     Z-ADD*ZERO     WSEENB           PS Pieces Fab N
     C                     Z-ADD*ZERO     WSQTAS           PS Weight Sched
     C                     Z-ADD*ZERO     WSEFNB           PS Pieces Sched
     C                     Z-ADD*ZERO     WSWAIO           PS Weight Sched
     C                     Z-ADD*ZERO     WSEGNB           PS Pieces Sched
     C                     Z-ADD*ZERO     WSRGNB           Item Structure
     C                     Z-ADD*ZERO     WSRHNB           Item Structure
     C                     Z-ADD*ZERO     WSRINB           Item Structure
     C                     Z-ADD*ZERO     WSAATM           Job Time
     C                     Z-ADD*ZERO     WSAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WWAIC3           Company Number
     C                     Z-ADD*ZERO     WWHGCD           Item Code
     C                     Z-ADD*ZERO     WWOQNY           CIE Unused Numb
     C                     Z-ADD*ZERO     WWORNY           CIE Unused Numb
     C                     Z-ADD*ZERO     WWS2DT           CIE Unused Date
     C                     Z-ADD*ZERO     WWMJDT           Create Date
     C                     Z-ADD*ZERO     WWBETM           Create Time
     C                     Z-ADD*ZERO     WWMKDT           Change Date
     C                     Z-ADD*ZERO     WWBFTM           Change Time
      * Define work field Count USR
     C                     Z-ADD*ZERO     WUCNTU  50
      * Define work field Record Found USR
     C                     MOVEL*BLANK    WUWXST  1
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     TBAIC3           Company Number
     C                     Z-ADD*ZERO     TBELDT           Production Date
     C                     Z-ADD*ZERO     TBHVHD           Hog Volume
     C                     Z-ADD*ZERO     TBZ6NB           Average Live We
     C                     Z-ADD*ZERO     TBZ7NB           Average Hot Wei
     C                     Z-ADD*ZERO     TBDGPC           Cooler Shrink P
     C                     Z-ADD*ZERO     TBAVCW           Average Cold We
     C                     Z-ADD*ZERO     TBDIPC           Average Lean Pe
     C                     Z-ADD*ZERO     TBZ0NB           Average Backfat
     C                     Z-ADD*ZERO     TBAVLE           Average Loin Ey
     C                     Z-ADD*ZERO     TBECWG           Hot Weight Tota
     C                     Z-ADD*ZERO     TBAATM           Job Time
     C                     Z-ADD*ZERO     TBAXDT           Job Date
      * Define work field UOM Primary
     C                     MOVEL*BLANK    WUADCD  2
      * Define work field Unit Weight
     C                     Z-ADD*ZERO     WUAIWG 112
      * Define work field Fresh Chilling Time
     C                     Z-ADD*ZERO     WUCHTM  52
      * Define work field Base_Conv_Loss Item
     C                     MOVEL*BLANK    WUQZCD  2
      * Define work field Pieces Per Head
     C                     Z-ADD*ZERO     WUPPHE  70
      * Define work field Pieces Per Bag
     C                     Z-ADD*ZERO     WUBDNB  70
      * Define work field Bags Per Unit
     C                     Z-ADD*ZERO     WUBJNB  70
      * Define work field Warehouse Std Chill Time
     C                     MOVEL*BLANK    WUT1ST  1
      * Define work field Warehouse Chill Time
     C                     Z-ADD*ZERO     WUDBNB  52
      * Define work field *Duration (factor)
     C                     Z-ADD*ZERO     WUDUF   80
      * Define work field Order Value Total
     C                     Z-ADD*ZERO     WUJZVA 112
      * Define work field Order Weight Total
     C                     Z-ADD*ZERO     WUA1WG 112
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    W0WJ00 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WA00 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WJ02 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WJ01 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WA03 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WD02 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WA01 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WD00 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WJ03 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WA02 152       *Synon (15,2) w
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'N'       W0PMT   1
      * Define local variables for subroutine SBRVGN.
     C                     Z-ADD*ZERO     WL0001  30
     C                     Z-ADD*ZERO     WL0002  70
     C                     MOVEL*BLANK    WL0003 30
     C                     MOVEL*BLANK    WL0004  2
     C                     Z-ADD*ZERO     WL0005 112
     C                     Z-ADD*ZERO     WL0006  30
     C                     Z-ADD*ZERO     WL0007  30
     C                     Z-ADD*ZERO     WL0008  30
     C                     MOVEL*BLANK    WL0009  3
     C                     MOVEL*BLANK    WL0010  3
     C                     Z-ADD*ZERO     WL0011  52
     C                     MOVEL*BLANK    WL0012  2
     C                     MOVEL*BLANK    WL0013  1
     C                     MOVEL*BLANK    WL0014  1
     C                     Z-ADD*ZERO     WL0015 112
     C                     Z-ADD*ZERO     WL0016  70
     C                     MOVEL*BLANK    WL0017  6
     C                     MOVEL*BLANK    WL0018  1
     C                     MOVEL*BLANK    WL0019  1
     C                     MOVEL*BLANK    WL0020  1
     C                     Z-ADD*ZERO     WL0021  70
     C                     Z-ADD*ZERO     WL0022  70
     C                     MOVEL*BLANK    WL0023  1
     C                     MOVEL*BLANK    WL0024  1
     C                     MOVEL*BLANK    WL0025  1
     C                     MOVEL*BLANK    WL0026  1
     C                     MOVEL*BLANK    WL0027  1
     C                     MOVEL*BLANK    WL0028  6
      * Define local variables for subroutine SCRVGN.
     C                     MOVEL*BLANK    WL0029  3
     C                     MOVEL*BLANK    WL0030  2
     C                     MOVEL*BLANK    WL0031  1
     C                     MOVEL*BLANK    WL0032  1
     C                     MOVEL*BLANK    WL0033  1
     C                     Z-ADD*ZERO     WL0034  52
      * Define local variables for subroutine SDRVGN.
     C                     Z-ADD*ZERO     WL0035  30
     C                     Z-ADD*ZERO     WL0036  70
     C                     Z-ADD*ZERO     WL0037  30
     C                     Z-ADD*ZERO     WL0038  30
      * Define local variables for subroutine SEDLRC.
     C                     Z-ADD*ZERO     WL0039  30
     C                     Z-ADD*ZERO     WL0040  70
     C                     Z-ADD*ZERO     WL0041  30
     C                     Z-ADD*ZERO     WL0042  30
     C                     Z-ADD*ZERO     WL0043  70
     C                     Z-ADD*ZERO     WL0044  30
      * Define local variables for subroutine SFRVGN.
     C                     Z-ADD*ZERO     WL0045  30
     C                     Z-ADD*ZERO     WL0046  70
     C                     Z-ADD*ZERO     WL0047  30
     C                     Z-ADD*ZERO     WL0048  30
      * Define local variables for subroutine SGCHRC.
     C                     Z-ADD*ZERO     WL0049  30
     C                     Z-ADD*ZERO     WL0050  70
     C                     Z-ADD*ZERO     WL0051  30
     C                     Z-ADD*ZERO     WL0052  30
     C                     Z-ADD*ZERO     WL0053  70
     C                     MOVEL*BLANK    WL0054  1
      * Define local variables for subroutine SHRVGN.
     C                     Z-ADD*ZERO     WL0055  30
     C                     Z-ADD*ZERO     WL0056  70
     C                     Z-ADD*ZERO     WL0057  30
     C                     Z-ADD*ZERO     WL0058  30
     C                     Z-ADD*ZERO     WL0059 112
     C                     Z-ADD*ZERO     WL0060 112
      * Define local variables for subroutine SKRVGN.
     C                     Z-ADD*ZERO     WL0061  30
     C                     Z-ADD*ZERO     WL0062  70
     C                     Z-ADD*ZERO     WL0063  30
     C                     Z-ADD*ZERO     WL0064  30
      * Define local variables for subroutine SLDLRC.
     C                     Z-ADD*ZERO     WL0065  30
     C                     Z-ADD*ZERO     WL0066  70
     C                     Z-ADD*ZERO     WL0067  30
     C                     Z-ADD*ZERO     WL0068  30
     C                     Z-ADD*ZERO     WL0069  70
      * Define local variables for subroutine SMRVGN.
     C                     Z-ADD*ZERO     WL0070  30
     C                     Z-ADD*ZERO     WL0071  70
     C                     MOVEL*BLANK    WL0072  1
      * Define local variables for subroutine SNRVGN.
     C                     Z-ADD*ZERO     WL0073  30
     C                     Z-ADD*ZERO     WL0074  70
     C                     Z-ADD*ZERO     WL0075  70
     C                     Z-ADD*ZERO     WL0076  40
      * Define local variables for subroutine SODLRC.
     C                     Z-ADD*ZERO     WL0077  30
     C                     Z-ADD*ZERO     WL0078  70
     C                     Z-ADD*ZERO     WL0079  30
     C                     Z-ADD*ZERO     WL0080  30
     C                     Z-ADD*ZERO     WL0081  70
      * Define local variables for subroutine SPRVGN.
     C                     Z-ADD*ZERO     WL0082  30
     C                     Z-ADD*ZERO     WL0083  70
     C                     MOVEL*BLANK    WL0084  3
     C                     Z-ADD*ZERO     WL0085  70
     C                     Z-ADD*ZERO     WL0086 112
     C                     MOVEL*BLANK    WL0087  1
     C                     Z-ADD*ZERO     WL0088  70
     C                     Z-ADD*ZERO     WL0089  70
     C                     Z-ADD*ZERO     WL0090  70
     C                     Z-ADD*ZERO     WL0091  30
     C                     Z-ADD*ZERO     WL0092  30
     C                     Z-ADD*ZERO     WL0093 112
     C                     Z-ADD*ZERO     WL0094 112
     C                     Z-ADD*ZERO     WL0095 112
     C                     Z-ADD*ZERO     WL0096 112
     C                     Z-ADD*ZERO     WL0097 112
     C                     Z-ADD*ZERO     WL0098 112
     C                     Z-ADD*ZERO     WL0099  70
     C                     Z-ADD*ZERO     WL0100  70
      * Define local variables for subroutine SVCRRC.
     C                     Z-ADD*ZERO     WL0101  30
     C                     Z-ADD*ZERO     WL0102  70
     C                     Z-ADD*ZERO     WL0103  30
     C                     Z-ADD*ZERO     WL0104  30
     C                     Z-ADD*ZERO     WL0105  70
     C                     Z-ADD*ZERO     WL0106  70
     C                     MOVEL*BLANK    WL0107  3
     C                     MOVEL*BLANK    WL0108  3
     C                     Z-ADD*ZERO     WL0109  70
     C                     Z-ADD*ZERO     WL0110 112
     C                     Z-ADD*ZERO     WL0111 112
     C                     Z-ADD*ZERO     WL0112 112
     C                     Z-ADD*ZERO     WL0113 112
     C                     Z-ADD*ZERO     WL0114 112
     C                     Z-ADD*ZERO     WL0115 112
     C                     MOVEL*BLANK    WL0116  1
     C                     MOVEL*BLANK    WL0117  1
     C                     MOVEL*BLANK    WL0118  2
     C                     MOVEL*BLANK    WL0119  1
     C                     MOVEL*BLANK    WL0120  1
     C                     MOVEL*BLANK    WL0121  1
     C                     MOVEL*BLANK    WL0122  1
     C                     Z-ADD*ZERO     WL0123  60
     C                     MOVEL*BLANK    WL0124 10
     C                     MOVEL*BLANK    WL0125 10
     C                     Z-ADD*ZERO     WL0126  70
      * Define local variables for subroutine TARVGN.
     C                     MOVEL*BLANK    WL0127  3
     C                     MOVEL*BLANK    WL0128  3
     C                     Z-ADD*ZERO     WL0129  30
      * Define local variables for subroutine TBRVGN.
     C                     Z-ADD*ZERO     WL0130  30
     C                     Z-ADD*ZERO     WL0131  70
     C                     MOVEL*BLANK    WL0132  1
      * Define local variables for subroutine TCRVGN.
     C                     Z-ADD*ZERO     WL0133  30
     C                     Z-ADD*ZERO     WL0134  70
     C                     MOVEL*BLANK    WL0135  1
     C                     Z-ADD*ZERO     WL0136  70
      * Define local variables for subroutine TFRVGN.
     C                     Z-ADD*ZERO     WL0137  30
     C                     Z-ADD*ZERO     WL0138  70
     C                     Z-ADD*ZERO     WL0139  70
     C                     MOVEL*BLANK    WL0140  1
      * Define local variables for subroutine THRVGN.
     C                     Z-ADD*ZERO     WL0141  30
     C                     MOVEL*BLANK    WL0142  1
     C                     Z-ADD*ZERO     WL0143  70
     C                     MOVEL*BLANK    WL0144  1
      * Define local variables for subroutine TIRVGN.
     C                     Z-ADD*ZERO     WL0145  30
     C                     MOVEL*BLANK    WL0146  1
     C                     Z-ADD*ZERO     WL0147  70
     C                     Z-ADD*ZERO     WL0148  70
     C                     MOVEL*BLANK    WL0149  3
     C                     Z-ADD*ZERO     WL0150  92
     C                     Z-ADD*ZERO     WL0151 112
     C                     Z-ADD*ZERO     WL0152  70
     C                     Z-ADD*ZERO     WL0153  52
      * Define local variables for subroutine TKRVGN.
     C                     Z-ADD*ZERO     WL0154  30
     C                     Z-ADD*ZERO     WL0155  70
     C                     Z-ADD*ZERO     WL0156  30
     C                     Z-ADD*ZERO     WL0157  30
     C                     Z-ADD*ZERO     WL0158  70
     C                     Z-ADD*ZERO     WL0159  70
     C                     MOVEL*BLANK    WL0160  3
     C                     MOVEL*BLANK    WL0161  3
     C                     Z-ADD*ZERO     WL0162  70
     C                     Z-ADD*ZERO     WL0163  92
     C                     Z-ADD*ZERO     WL0164 112
     C                     MOVEL*BLANK    WL0165  2
      * Define local variables for subroutine TLCHRC.
     C                     Z-ADD*ZERO     WL0166  30
     C                     Z-ADD*ZERO     WL0167  70
     C                     Z-ADD*ZERO     WL0168  30
     C                     Z-ADD*ZERO     WL0169  30
     C                     Z-ADD*ZERO     WL0170  70
     C                     Z-ADD*ZERO     WL0171 112
     C                     Z-ADD*ZERO     WL0172 112
     C                     Z-ADD*ZERO     WL0173 112
     C                     Z-ADD*ZERO     WL0174 112
     C                     MOVEL*BLANK    WL0175  1
      * Define local variables for subroutine TMRVGN.
     C                     Z-ADD*ZERO     WL0176  30
     C                     MOVEL*BLANK    WL0177  1
     C                     Z-ADD*ZERO     WL0178  70
     C                     Z-ADD*ZERO     WL0179  70
     C                     MOVEL*BLANK    WL0180  3
     C                     Z-ADD*ZERO     WL0181  92
     C                     Z-ADD*ZERO     WL0182  70
     C                     Z-ADD*ZERO     WL0183  70
     C                     Z-ADD*ZERO     WL0184  30
     C                     Z-ADD*ZERO     WL0185  30
     C                     MOVEL*BLANK    WL0186  1
      * Define local variables for subroutine TNCRRC.
     C                     Z-ADD*ZERO     WL0187  30
     C                     MOVEL*BLANK    WL0188  1
     C                     Z-ADD*ZERO     WL0189  70
     C                     Z-ADD*ZERO     WL0190  70
     C                     MOVEL*BLANK    WL0191  3
     C                     Z-ADD*ZERO     WL0192  70
     C                     Z-ADD*ZERO     WL0193  92
     C                     Z-ADD*ZERO     WL0194  70
     C                     Z-ADD*ZERO     WL0195  72
     C                     Z-ADD*ZERO     WL0196  92
     C                     Z-ADD*ZERO     WL0197  92
     C                     Z-ADD*ZERO     WL0198  70
     C                     Z-ADD*ZERO     WL0199  92
     C                     Z-ADD*ZERO     WL0200  70
     C                     Z-ADD*ZERO     WL0201  92
     C                     Z-ADD*ZERO     WL0202  70
     C                     Z-ADD*ZERO     WL0203  92
     C                     Z-ADD*ZERO     WL0204  70
     C                     Z-ADD*ZERO     WL0205  92
     C                     Z-ADD*ZERO     WL0206  70
     C                     Z-ADD*ZERO     WL0207  92
     C                     Z-ADD*ZERO     WL0208  70
     C                     Z-ADD*ZERO     WL0209  92
     C                     Z-ADD*ZERO     WL0210  70
     C                     Z-ADD*ZERO     WL0211  92
     C                     Z-ADD*ZERO     WL0212  70
     C                     Z-ADD*ZERO     WL0213  92
     C                     Z-ADD*ZERO     WL0214  70
     C                     Z-ADD*ZERO     WL0215 112
     C                     Z-ADD*ZERO     WL0216  70
     C                     Z-ADD*ZERO     WL0217 112
     C                     Z-ADD*ZERO     WL0218  70
     C                     Z-ADD*ZERO     WL0219 112
     C                     Z-ADD*ZERO     WL0220  70
     C                     Z-ADD*ZERO     WL0221 112
     C                     Z-ADD*ZERO     WL0222  70
     C                     Z-ADD*ZERO     WL0223 112
     C                     Z-ADD*ZERO     WL0224  70
     C                     Z-ADD*ZERO     WL0225 112
     C                     Z-ADD*ZERO     WL0226  70
     C                     MOVEL*BLANK    WL0227  3
     C                     MOVEL*BLANK    WL0228  2
     C                     MOVEL*BLANK    WL0229  1
     C                     MOVEL*BLANK    WL0230  1
     C                     MOVEL*BLANK    WL0231  1
     C                     MOVEL*BLANK    WL0232  1
     C                     MOVEL*BLANK    WL0233  1
     C                     MOVEL*BLANK    WL0234  1
     C                     MOVEL*BLANK    WL0235  1
     C                     MOVEL*BLANK    WL0236  1
     C                     MOVEL*BLANK    WL0237  2
     C                     MOVEL*BLANK    WL0238  3
     C                     Z-ADD*ZERO     WL0239  92
     C                     Z-ADD*ZERO     WL0240  70
     C                     Z-ADD*ZERO     WL0241  92
     C                     Z-ADD*ZERO     WL0242  70
     C                     Z-ADD*ZERO     WL0243  92
     C                     Z-ADD*ZERO     WL0244  70
     C                     Z-ADD*ZERO     WL0245  92
     C                     Z-ADD*ZERO     WL0246  70
     C                     Z-ADD*ZERO     WL0247  92
     C                     Z-ADD*ZERO     WL0248  70
     C                     Z-ADD*ZERO     WL0249  92
     C                     Z-ADD*ZERO     WL0250  70
     C                     Z-ADD*ZERO     WL0251  92
     C                     Z-ADD*ZERO     WL0252  70
     C                     Z-ADD*ZERO     WL0253  92
     C                     Z-ADD*ZERO     WL0254  70
     C                     Z-ADD*ZERO     WL0255  92
     C                     Z-ADD*ZERO     WL0256  70
     C                     MOVEL*BLANK    WL0257  6
     C                     Z-ADD*ZERO     WL0258  30
     C                     Z-ADD*ZERO     WL0259  30
     C                     Z-ADD*ZERO     WL0260  30
     C                     MOVEL*BLANK    WL0261  6
     C                     MOVEL*BLANK    WL0262  1
     C                     MOVEL*BLANK    WL0263  1
     C                     MOVEL*BLANK    WL0264  1
     C                     MOVEL*BLANK    WL0265  1
     C                     Z-ADD*ZERO     WL0266  60
     C                     MOVEL*BLANK    WL0267 10
     C                     MOVEL*BLANK    WL0268 10
     C                     Z-ADD*ZERO     WL0269  70
      * Define local variables for subroutine TORVGN.
     C                     Z-ADD*ZERO     WL0270  30
     C                     Z-ADD*ZERO     WL0271  70
     C                     Z-ADD*ZERO     WL0272  52
     C                     Z-ADD*ZERO     WL0273  70
      * Define local variables for subroutine TQRVGN.
     C                     Z-ADD*ZERO     WL0274  30
     C                     MOVEL*BLANK    WL0275  1
     C                     Z-ADD*ZERO     WL0276  70
     C                     Z-ADD*ZERO     WL0277  70
     C                     MOVEL*BLANK    WL0278  3
     C                     Z-ADD*ZERO     WL0279  70
     C                     Z-ADD*ZERO     WL0280 112
      * Define local variables for subroutine TSRVGN.
     C                     Z-ADD*ZERO     WL0281  30
     C                     MOVEL*BLANK    WL0282  1
     C                     Z-ADD*ZERO     WL0283  70
     C                     Z-ADD*ZERO     WL0284  70
     C                     MOVEL*BLANK    WL0285  3
     C                     Z-ADD*ZERO     WL0286  92
     C                     Z-ADD*ZERO     WL0287  70
     C                     Z-ADD*ZERO     WL0288  70
     C                     Z-ADD*ZERO     WL0289  30
     C                     Z-ADD*ZERO     WL0290  30
     C                     MOVEL*BLANK    WL0291  1
      * Define local variables for subroutine TTRVGN.
     C                     Z-ADD*ZERO     WL0292  30
     C                     Z-ADD*ZERO     WL0293  70
      * Define local variables for subroutine TURVGN.
     C                     Z-ADD*ZERO     WL0294  30
     C                     Z-ADD*ZERO     WL0295  70
     C                     Z-ADD*ZERO     WL0296  30
     C                     Z-ADD*ZERO     WL0297  30
     C                     Z-ADD*ZERO     WL0298  70
     C                     Z-ADD*ZERO     WL0299  30
     C                     Z-ADD*ZERO     WL0300  70
     C                     Z-ADD*ZERO     WL0301  70
      * Define local variables for subroutine TVRVGN.
     C                     Z-ADD*ZERO     WL0302  30
     C                     Z-ADD*ZERO     WL0303  70
     C                     Z-ADD*ZERO     WL0304  30
     C                     Z-ADD*ZERO     WL0305  30
     C                     Z-ADD*ZERO     WL0306  70
     C                     Z-ADD*ZERO     WL0307  30
      * Define local variables for subroutine TWRVGN.
     C                     Z-ADD*ZERO     WL0308  30
     C                     Z-ADD*ZERO     WL0309  70
     C                     Z-ADD*ZERO     WL0310  30
     C                     Z-ADD*ZERO     WL0311  30
     C                     Z-ADD*ZERO     WL0312  70
     C                     Z-ADD*ZERO     WL0313  30
     C                     Z-ADD*ZERO     WL0314  70
     C                     MOVEL*BLANK    WL0315  3
     C                     Z-ADD*ZERO     WL0316  70
     C                     Z-ADD*ZERO     WL0317  70
     C                     Z-ADD*ZERO     WL0318 112
     C                     Z-ADD*ZERO     WL0319 112
     C                     Z-ADD*ZERO     WL0320  50
     C                     Z-ADD*ZERO     WL0321  92
     C                     Z-ADD*ZERO     WL0322  70
     C                     Z-ADD*ZERO     WL0323  60
      * Define local variables for subroutine NARVGN.
     C                     Z-ADD*ZERO     WL0324  30
     C                     Z-ADD*ZERO     WL0325  70
     C                     Z-ADD*ZERO     WL0326  70
     C                     Z-ADD*ZERO     WL0327  70
     C                     Z-ADD*ZERO     WL0328  80
      * Define local variables for subroutine NBRVGN.
     C                     Z-ADD*ZERO     WL0329  30
     C                     Z-ADD*ZERO     WL0330  70
     C                     Z-ADD*ZERO     WL0331  70
     C                     Z-ADD*ZERO     WL0332  70
     C                     Z-ADD*ZERO     WL0333  80
      * Define local variables for subroutine NCCHRC.
     C                     Z-ADD*ZERO     WL0334  30
     C                     Z-ADD*ZERO     WL0335  70
     C                     Z-ADD*ZERO     WL0336  30
     C                     Z-ADD*ZERO     WL0337  30
     C                     Z-ADD*ZERO     WL0338 112
     C                     Z-ADD*ZERO     WL0339 112
      * Define local variables for subroutine NDRVGN.
     C                     Z-ADD*ZERO     WL0340  30
     C                     Z-ADD*ZERO     WL0341  70
     C                     Z-ADD*ZERO     WL0342  30
     C                     Z-ADD*ZERO     WL0343  30
      * Define local variables for subroutine NERVGN.
     C                     Z-ADD*ZERO     WL0344  30
     C                     Z-ADD*ZERO     WL0345  70
     C                     Z-ADD*ZERO     WL0346  30
     C                     Z-ADD*ZERO     WL0347  30
     C                     MOVEL*BLANK    WL0348  1
      * Define local variables for subroutine NFCHRC.
     C                     Z-ADD*ZERO     WL0349  30
     C                     Z-ADD*ZERO     WL0350  70
     C                     Z-ADD*ZERO     WL0351  30
     C                     Z-ADD*ZERO     WL0352  30
     C                     Z-ADD*ZERO     WL0353 112
     C                     Z-ADD*ZERO     WL0354 112
      * Define local variables for subroutine NGCHRC.
     C                     Z-ADD*ZERO     WL0355  30
     C                     Z-ADD*ZERO     WL0356  70
     C                     Z-ADD*ZERO     WL0357  30
     C                     Z-ADD*ZERO     WL0358  30
     C                     Z-ADD*ZERO     WL0359  50
     C                     MOVEL*BLANK    WL0360  3
     C                     MOVEL*BLANK    WL0361  2
     C                     MOVEL*BLANK    WL0362  6
      * Define local work field Company Number
     C                     Z-ADD*ZERO     YL0001  30
      * Define local work field Order Number
     C                     Z-ADD*ZERO     YL0002  70
      * Define local work field First Time Flag
     C                     MOVEL*BLANK    YL0003  1
      * Define local work field ATS Adj Type USR 2
     C                     MOVEL*BLANK    YL0004  2
      * Define local work field UOM Primary
     C                     MOVEL*BLANK    YL0005  2
      * Define local work field Unit Weight
     C                     Z-ADD*ZERO     YL0006 112
      * Define local work field Fresh Chilling Time
     C                     Z-ADD*ZERO     YL0007  52
      * Define local work field Base_Conv_Loss Item
     C                     MOVEL*BLANK    YL0008  2
      * Define local work field Pieces Per Head
     C                     Z-ADD*ZERO     YL0009  70
      * Define local work field Piece Count Item
     C                     MOVEL*BLANK    YL0010  1
      * Define local work field Pieces Per Bag
     C                     Z-ADD*ZERO     YL0011  70
      * Define local work field Bags Per Unit
     C                     Z-ADD*ZERO     YL0012  70
      * Define local work field Warehouse Type
     C                     MOVEL*BLANK    YL0013  2
      * Define local work field Warehouse Std Chill Time
     C                     MOVEL*BLANK    YL0014  1
      * Define local work field Warehouse Chill Time
     C                     Z-ADD*ZERO     YL0015  52
      * Define local work field ODBS Sched Override Sts
     C                     MOVEL*BLANK    YL0016  1
      * Define local work field Quantity Scheduled
     C                     Z-ADD*ZERO     YL0017 112
      * Define local work field Weight Scheduled
     C                     Z-ADD*ZERO     YL0018 112
      * Define local work field UOM Primary
     C                     MOVEL*BLANK    YL0019  2
      * Define local work field Unit Weight
     C                     Z-ADD*ZERO     YL0020 112
      * Define local work field Fresh Chilling Time
     C                     Z-ADD*ZERO     YL0021  52
      * Define local work field Base_Conv_Loss Item
     C                     MOVEL*BLANK    YL0022  2
      * Define local work field Pieces Per Head
     C                     Z-ADD*ZERO     YL0023  70
      * Define local work field Piece Count Item
     C                     MOVEL*BLANK    YL0024  1
      * Define local work field Pieces Per Bag
     C                     Z-ADD*ZERO     YL0025  70
      * Define local work field Bags Per Unit
     C                     Z-ADD*ZERO     YL0026  70
      * Define local work field Warehouse Type
     C                     MOVEL*BLANK    YL0027  2
      * Define local work field Warehouse Std Chill Time
     C                     MOVEL*BLANK    YL0028  1
      * Define local work field Warehouse Chill Time
     C                     Z-ADD*ZERO     YL0029  52
      * Define local work field WHS Inventory Chill Time
     C                     Z-ADD*ZERO     YL0030  30
      * Define local work field Quantity Scheduled
     C                     Z-ADD*ZERO     YL0031 112
      * Define local work field Weight Scheduled
     C                     Z-ADD*ZERO     YL0032 112
      * Define local work field OD Adj Type Override
     C                     MOVEL*BLANK    YL0033  1
      * Define local work field Production Day Status
     C                     MOVEL*BLANK    YL0034  1
      * Define local work field Requested Delivery Date
     C                     Z-ADD*ZERO     YL0035  70
      * Define local work field Requested Delivery Time
     C                     Z-ADD*ZERO     YL0036  40
      * Define local work field Quantity Ordered
     C                     Z-ADD*ZERO     YL0037 112
      * Define local work field Weight Ordered
     C                     Z-ADD*ZERO     YL0038 112
      * Define local work field Production Date RGF
     C                     Z-ADD*ZERO     YL0039  70
      * Define local work field Production Date RGT
     C                     Z-ADD*ZERO     YL0040  70
      * Define local work field Production Date
     C                     Z-ADD*ZERO     YL0041  70
      * Define local work field Quantity Scheduled
     C                     Z-ADD*ZERO     YL0042 112
      * Define local work field Weight Scheduled
     C                     Z-ADD*ZERO     YL0043 112
      * Define local work field ATS Quantity Need USR
     C                     Z-ADD*ZERO     YL0044 112
      * Define local work field ATS Weight Need USR
     C                     Z-ADD*ZERO     YL0045 112
      * Define local work field OD Quantity Inv Sched
     C                     Z-ADD*ZERO     YL0046 112
      * Define local work field OD Weight Inv Sched
     C                     Z-ADD*ZERO     YL0047 112
      * Define local work field OD Quantity Inv Sched
     C                     Z-ADD*ZERO     YL0048 112
      * Define local work field OD Weight Inv Sched
     C                     Z-ADD*ZERO     YL0049 112
      * Define local work field OD Quantity Inv Sched
     C                     Z-ADD*ZERO     YL0050 112
      * Define local work field OD Weight Inv Sched
     C                     Z-ADD*ZERO     YL0051 112
      * Define local work field OD Qty/Cnsmd Pieces Sched
     C                     Z-ADD*ZERO     YL0052 112
      * Define local work field OD Weight Scheduled
     C                     Z-ADD*ZERO     YL0053 112
      * Define local work field Production Warehouse Code
     C                     MOVEL*BLANK    YL0054  3
      * Define local work field Accounting Company
     C                     Z-ADD*ZERO     YL0055  30
      * Define local work field Block Order Flag
     C                     MOVEL*BLANK    YL0056  1
      * Define local work field Allocation Method
     C                     MOVEL*BLANK    YL0057  1
      * Define local work field Scheduled Ship Date
     C                     Z-ADD*ZERO     YL0058  70
      * Define local work field Date                  USR
     C                     Z-ADD*ZERO     YL0059  70
      * Define local work field Production Date To
     C                     Z-ADD*ZERO     YL0060  70
      * Define local work field Production Day Status
     C                     MOVEL*BLANK    YL0061  1
      * Define local work field Production Day Status USR
     C                     MOVEL*BLANK    YL0062  1
      * Define null work field Accounting Period Code
     C                     Z-ADD*ZERO     YN0001  20
      * Define local work field Day of Week
     C                     MOVEL*BLANK    YL0063  1
      * Define null work field Week Number
     C                     Z-ADD*ZERO     YN0002  20
      * Define local work field OD Added to Sched Today
     C                     MOVEL*BLANK    YL0064  1
      * Define local work field Accounting Company
     C                     Z-ADD*ZERO     YL0065  30
      * Define local work field Company Number
     C                     Z-ADD*ZERO     YL0066  30
      * Define local work field ODS Sequence Number
     C                     Z-ADD*ZERO     YL0067  30
      * Define local work field OD Weight Scheduled
     C                     Z-ADD*ZERO     YL0068 112
      * Define local work field OD Qty/Cnsmd Pieces Sched
     C                     Z-ADD*ZERO     YL0069 112
      * Define local work field Production Date RGF
     C                     Z-ADD*ZERO     YL0070  70
      * Define local work field Allocation Method USR
     C                     MOVEL*BLANK    YL0071  1
      * Define local work field Company Number
     C                     Z-ADD*ZERO     YL0072  30
      * Define local work field Order Number
     C                     Z-ADD*ZERO     YL0073  70
      * Define local work field Ship To Customer
     C                     Z-ADD*ZERO     YL0074  70
      * Define local work field Released by User Sts Y/N
     C                     MOVEL*BLANK    YL0075  1
      * Define local work field Quantity Ordered
     C                     Z-ADD*ZERO     YL0076 112
      * Define local work field Weight Ordered
     C                     Z-ADD*ZERO     YL0077 112
      *================================================================
     CSR         ZZEXIT    ENDSR
** @CN
00001 ORDREALC
00002 SCHASORD
00003 SHIPOFFCUT
