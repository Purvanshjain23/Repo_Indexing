     H/TITLE RTV SSI Ctl-Not Proc'd XF Execute external functio
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H*  Perform user function
     H*  As defined by action diagram
      *
     H* Generated by AllFusion 2E release 8.1SP2 (1250)
     H* Function type : Execute external function
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISLBUSE
     H* Date          : 08/20/09  Time  : 16:46:41
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPMERREL3IF  E           K        DISK
      * RSQ : SSI Control               Seq ID/Not Transmitted
      *
     FPMEICPL1IF  E           K        DISK
      * RTV : SSI Load Header           Retrieval index
      *
     FPMEKCPL2IF  E           K        DISK
      * RSQ : SSI Pick/Stop            SqID/#/BL/HTy/LSq/STy/SS
      *
     FPMEMCPL2IF  E           K        DISK
      * RSQ : SSI Pick/Stop Order       SeqID/BOL/HTp/LSq/STp/SS
      *
     FPMERREL5IF  E           K        DISK
      * RSQ : SSI Control               Seq ID/EOT id
      *
     FPMERREL0UF  E           K        DISK
      * UPD : SSI Control               Update index
      *
      * Long constants
     E                    @CN#    1   1  6   @CN    25
     E                    YDOW        7  1               *Days of week
     I@ERREXF
      * SSI Control               Seq ID/Not Transmitted
      * Renamed input format fields
     I              ERRQT1                          WARQT1
     I              ERRNT1                          WARNT1
     I              ERRRT1                          WARRT1
     I              ERNFNY                          WANFNY
     I              ERRTT1                          WARTT1
     I              ERRMT1                          WARMT1
     I              ERROT1                          WAROT1
     I              ERRPT1                          WARPT1
     I              ERRST1                          WARST1
     I              ERSTTR                          WASTTR
      *
     I@EICPWE
      * SSI Load Header           Retrieval index
      * Renamed input format fields
     I              EIRQT1                          WBRQT1
     I              EIRNT1                          WBRNT1
     I              EIRRT1                          WBRRT1
     I              EINFNY                          WBNFNY
     I              EIPBT1                          WBPBT1
     I              EIPDT1                          WBPDT1
     I              EIPET1                          WBPET1
     I              EIPCT1                          WBPCT1
     I              EIPFT1                          WBPFT1
     I              EIPGT1                          WBPGT1
     I              EIRFT1                          WBRFT1
     I              EIRGT1                          WBRGT1
     I              EIRHT1                          WBRHT1
     I              EIRIT1                          WBRIT1
      *
     I@EKCPXM
      * SSI Pick/Stop            SqID/#/BL/HTy/LSq/STy/SS
      * Renamed input format fields
     I              EKRQT1                          WCRQT1
     I              EKRNT1                          WCRNT1
     I              EKRRT1                          WCRRT1
     I              EKNFNY                          WCNFNY
     I              EKPBT1                          WCPBT1
     I              EKPDT1                          WCPDT1
     I              EKPET1                          WCPET1
     I              EKPFT1                          WCPFT1
     I              EKPGT1                          WCPGT1
     I              EKRFT1                          WCRFT1
     I              EKPJT1                          WCPJT1
     I              EKTTT1                          WCTTT1
     I              EKRJT1                          WCRJT1
      *
     I@EMCPXO
      * SSI Pick/Stop Order       SeqID/BOL/HTp/LSq/STp/SS
      * Renamed input format fields
     I              EMRQT1                          WDRQT1
     I              EMRNT1                          WDRNT1
     I              EMRRT1                          WDRRT1
     I              EMNFNY                          WDNFNY
     I              EMPBT1                          WDPBT1
     I              EMPDT1                          WDPDT1
     I              EMPET1                          WDPET1
     I              EMPFT1                          WDPFT1
     I              EMPGT1                          WDPGT1
     I              EMRFT1                          WDRFT1
     I              EMPLT1                          WDPLT1
      *
     I@ERREXL
      * SSI Control               Seq ID/EOT id
      * Renamed input format fields
     I              ERRQT1                          WERQT1
     I              ERRNT1                          WERNT1
     I              ERRRT1                          WERRT1
     I              ERNFNY                          WENFNY
     I              ERRTT1                          WERTT1
     I              ERRMT1                          WERMT1
     I              ERROT1                          WEROT1
     I              ERRPT1                          WERPT1
     I              ERRST1                          WERST1
     I              ERSTTR                          WESTTR
      *
     I@ERREW8
      * SSI Control               Update index
      * Renamed input format fields
     I              ERRQT1                          WFRQT1
     I              ERRNT1                          WFRNT1
     I              ERRRT1                          WFRRT1
     I              ERNFNY                          WFNFNY
     I              ERRTT1                          WFRTT1
     I              ERRMT1                          WFRMT1
     I              ERROT1                          WFROT1
     I              ERRPT1                          WFRPT1
     I              ERRST1                          WFRST1
     I              ERSTTR                          WFSTTR
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * Outward parameters
     IPARC        DS                             24
      * KEY : SSI Control               Retrieval index
      * I : RST SSI SOR Sequence ID
     I                                        1   9 PARQT1
      * I : RST SSI SOR Identifier
     I                                       10  16 PARNT1
      *
      * Outward parameters
     IPBRC        DS                             24
      * KEY : SSI Control               Retrieval index
      * I : RST SSI SOR Sequence ID
     I                                        1   9 PBRQT1
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXD2T        DS
      * Internal date
     I                                        1   70XDINT2
     I                                        1   30XDINY2
     I                                        4   50XDINM2
     I                                        6   70XDIND2
     IQPMER1    E DSPMERREL0
      * UPD : SSI Control               Update index
      * Renamed input format fields
     I              ERRQT1                          WFRQT1
     I              ERRNT1                          WFRNT1
     I              ERRRT1                          WFRRT1
     I              ERNFNY                          WFNFNY
     I              ERRTT1                          WFRTT1
     I              ERRMT1                          WFRMT1
     I              ERROT1                          WFROT1
     I              ERRPT1                          WFRPT1
     I              ERRST1                          WFRST1
     I              ERSTTR                          WFSTTR
      *
     IYARDCS      DS                             71
      * Message data for message Y2U0009.
     IMD0009      DS
     I                                        1  10 MDPGM
     I                                       11  20 MDACP
     I                                       21  30 MDFMT
     I                                       31  34 MDACT
     I                                       35  40 MDLBL
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * RTV SSI Ctl-Not Proc'd XF
      * RTV SSI Ctl-Not Proc'd IF
      * RTV SSI Ctl-Not Proc'd RT - SSI Control  * 
     C                     EXSR SARVGN
      *----------------------------------------------------------------
      * Exit program
     C           AAEXIT    TAG
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV SSI Ctl-Not Proc'd RT - SSI Control  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KPSSA     KLIST
     C                     KFLD           WARQT1           SSI SOR Sequenc
      * Setup key
     C                     MOVEL@CN,01    WARQT1           SSI SOR Sequenc
      * Establish starting position
     C           KPSSA     SETLL@ERREXF                    *
     C                     READ @ERREXF                  90*
      * Data record not found
     C   90                MOVEL'USR4054' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * ** Write the Start of Trans to PNESCPP-SSI Work File
      * Sel/Snd SSI SOR Rec    CL - SSI Control  * 
     C                     CLEARPARC
     C                     MOVELWARQT1    PARQT1    P      SSI SOR Sequenc
     C                     MOVELWARNT1    PARNT1    P      SSI SOR Identif
      *
     C                     CALL 'PMAFUPC'              90  Sel/Snd SSI SOR
     C                     PARM           PARC             KEY: SSI Contro
     C           WUH3TX    PARM *BLANK    WQ0001  7        Return Code Usr
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PMAFUPC' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     END
      * ** Write the SSI Load Header to PNESCPP-SSI Work File
      * Sel/Snd SSI Load HeaderRT - SSI Load Header  * 
     C                     EXSR SBRVGN
      * ** Write the End of Trans to PNESCPP-SSI Work File
      * Sel/Snd SSI EOT Rec    CL - SSI Control  * 
     C                     CLEARPBRC
     C                     MOVELWARQT1    PBRQT1    P      SSI SOR Sequenc
      *
     C                     CALL 'PMAKUPC'              90  Sel/Snd SSI EOT
     C                     PARM           PBRC             KEY: SSI Contro
     C           WUH3TX    PARM *BLANK    WQ0029  7        Return Code Usr
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PMAKUPC' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     END
      * ** Update the EOT record with "T" for Transmitted
      * CASE: WRK.Return Code Usr is *Blank
     C           WUH3TX    IFEQ *BLANK                     *IF
      * RTV CHG SSI Ctrl EOT   RT - SSI Control  * 
     C                     EXSR SERVGN
     C                     END                             *FI
     C                     READ @ERREXF                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * Sel/Snd SSI Load HeaderRT - SSI Load Header  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * ***** Change Log and Comments
     C                     EXSR UASUBR                     ***** Change Lo
      * Declare restrictor key work fields
     C           *LIKE     DEFN WBRQT1    WQSB01           SSI SOR Sequenc
     C           *LIKE     DEFN WBRNT1    WQSB02           SSI SOR Identif
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           SSI SOR Sequenc
     C                     KFLD           WQSB02           SSI SOR Identif
      * Setup key
     C                     MOVELWARQT1    WQSB01           SSI SOR Sequenc
     C                     MOVELWARNT1    WQSB02           SSI SOR Identif
      * Establish starting position
     C           KRSSB     SETLL@EICPWE                    *
     C           KRSSB     READE@EICPWE                  90*
      * Data record not found
     C   90                MOVEL'USR4031' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * EXC Snd SSI LH Rec Bld CL - SSI Load Header  * 
     C                     CALL 'PMAGUPC'              90  EXC Snd SSI LH
     C                     PARM WARQT1    WQ0002  9        SSI SOR Sequenc
     C                     PARM WBPBT1    WQ0003 31        SSI Master BOL
     C                     PARM '01'      WQ0004  2        SSI Header Type
     C                     PARM '00'      WQ0005  2        SSI Link Sequen
     C                     PARM WBPFT1    WQ0006  2        SSI Sub Type
     C                     PARM WBPGT1    WQ0007  2        SSI Sub Type Se
     C           WUH3TX    PARM *BLANK    WQ0008  7        Return Code Usr
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PMAGUPC' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     END
      * ** Write the LH Comments records to PNESCPP-SSI Work File  E00461
      * SEL/Snd SSI LH CommentsCL - SSI LH Comments  * 
     C                     CALL 'PNLBUPC'              90  SEL/Snd SSI LH
     C                     PARM WARQT1    WQ0009  9        SSI SOR Sequenc
     C                     PARM WBPBT1    WQ0010 31        SSI Master BOL
     C                     PARM '02'      WQ0011  2        SSI Header Type
     C                     PARM WBPET1    WQ0012  2        SSI Link Sequen
     C                     PARM '00'      WQ0013  2        SSI Sub Type
     C           WUH3TX    PARM *BLANK    WQ0014  7        Return Code Usr
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNLBUPC' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     END
      * ** Write the Pick/Stop & Orders to PNESCPP-SSI Work File
      * SEL/Snd SSI P/S Recs   RT - SSI Pick/Stop  * 
     C                     EXSR SCRVGN
     C           KRSSB     READE@EICPWE                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * SEL/Snd SSI P/S Recs   RT - SSI Pick/Stop  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WCRQT1    WQSC01           SSI SOR Sequenc
      * Define keylist
     C           KPSSC     KLIST
     C                     KFLD           WQSC01           SSI SOR Sequenc
     C                     KFLD           WCNFNY           SSI Sequence Nu
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           WQSC01           SSI SOR Sequenc
      * Setup key
     C                     MOVELWARQT1    WQSC01           SSI SOR Sequenc
     C                     Z-ADD1         WCNFNY           SSI Sequence Nu
      * Establish starting position
     C           KPSSC     SETLL@EKCPXM                    *
     C           KRSSC     READE@EKCPXM                  90*
      * Data record not found
     C   90                MOVEL'USR4035' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.SSI Master BOL Number EQ PAR.SSI Master BOL Number
     C           WCPBT1    IFEQ WBPBT1                     *IF
      * SEL/Snd SSI Pick/Stop  CL - SSI Pick/Stop  * 
     C                     CALL 'PMAHUPC'              90  SEL/Snd SSI Pic
     C                     PARM WARQT1    WQ0015  9        SSI SOR Sequenc
     C                     PARM WCNFNY    WQ0016  70       SSI Sequence Nu
     C                     PARM WBPBT1    WQ0017 31        SSI Master BOL
     C                     PARM WCPDT1    WQ0018  2        SSI Header Type
     C                     PARM WCPET1    WQ0019  2        SSI Link Sequen
     C                     PARM WCPFT1    WQ0020  2        SSI Sub Type
     C                     PARM WCPGT1    WQ0021  2        SSI Sub Type Se
     C                     PARM WUH3TX    WQ0022  7        Return Code Usr
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PMAHUPC' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     END
      * CASE: DB1.SSI Sub Type Sequence is Not Origin
     C           WCPGT1    IFNE '00'                       *IF
      * SEL/Snd SSI P/S Orders RT - SSI Pick/Stop Order  * 
     C                     EXSR SDRVGN
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSC     READE@EKCPXM                  90*
     C                     ENDDO
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * SEL/Snd SSI P/S Orders RT - SSI Pick/Stop Order  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WDRQT1    WQSD01           SSI SOR Sequenc
     C           *LIKE     DEFN WDPBT1    WQSD02           SSI Master BOL
     C           *LIKE     DEFN WDPDT1    WQSD03           SSI Header Type
     C           *LIKE     DEFN WDPET1    WQSD04           SSI Link Sequen
     C           *LIKE     DEFN WDPFT1    WQSD05           SSI Sub Type
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           WQSD01           SSI SOR Sequenc
     C                     KFLD           WQSD02           SSI Master BOL
     C                     KFLD           WQSD03           SSI Header Type
     C                     KFLD           WQSD04           SSI Link Sequen
     C                     KFLD           WQSD05           SSI Sub Type
      * Setup key
     C                     MOVELWARQT1    WQSD01           SSI SOR Sequenc
     C                     MOVELWBPBT1    WQSD02           SSI Master BOL
     C                     MOVELWCPDT1    WQSD03           SSI Header Type
     C                     MOVELWCPET1    WQSD04           SSI Link Sequen
     C                     MOVEL'07'      WQSD05           SSI Sub Type
      * Establish starting position
     C           KRSSD     SETLL@EMCPXO                    *
     C           KRSSD     READE@EMCPXO                  90*
      * Data record not found
     C   90                MOVEL'USR4039' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * SEL/Snd SSI P/S Orders CL - SSI Pick/Stop Order  * 
     C                     CALL 'PMAIUPC'              90  SEL/Snd SSI P/S
     C                     PARM WARQT1    WQ0023  9        SSI SOR Sequenc
     C                     PARM WBPBT1    WQ0024 31        SSI Master BOL
     C                     PARM WDPDT1    WQ0025  2        SSI Header Type
     C                     PARM WDPET1    WQ0026  2        SSI Link Sequen
     C                     PARM WDPFT1    WQ0027  2        SSI Sub Type
     C           WUH3TX    PARM *BLANK    WQ0028  7        Return Code Usr
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PMAIUPC' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     END
      * ** Pass SupType Seq from Order to Link Seq of comments  E00461
     C                     GOTO SDEXIT                     *QUIT
     C           KRSSD     READE@EMCPXO                  90*
     C                     ENDDO
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * RTV CHG SSI Ctrl EOT   RT - SSI Control  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WERQT1    WQSE01           SSI SOR Sequenc
     C           *LIKE     DEFN WERRT1    WQSE02           SSI EOT Identif
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           WQSE01           SSI SOR Sequenc
     C                     KFLD           WQSE02           SSI EOT Identif
      * Setup key
     C                     MOVELWARQT1    WQSE01           SSI SOR Sequenc
     C                     MOVEL'#EOT'    WQSE02           SSI EOT Identif
      * Establish starting position
     C           KRSSE     SETLL@ERREXL                    *
     C           KRSSE     READE@ERREXL                  90*
      * Data record not found
     C   90                MOVEL'USR4054' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * ** Only update the End of Transmission flag
      * CASE: DB1.SSI EOT Identifier is Entered
     C           WERRT1    IFNE *BLANK                     *IF
     C                     MOVEL'T'       WUSTTR           SSI Transmissio
     C                     Z-ADD##JDT     WUAXDT           Job Date
      *
     C                     MOVEL*BLANK    WN0001  8        Date (Char-8) U
     C                     MOVEL*BLANK    WN0002  4        Year Alpha (YYY
     C                     MOVEL*BLANK    WN0003  2        Month (Char) US
     C                     MOVEL*BLANK    WN0004  2        Day   (Char) US
      *
      * CNV cyymmdd to yyyymmdd
      * LCL.Year Code = PAR.Date In  (7,0) USR *YEAR
     C           WUAXDT    ADD  1000000   XDINDT
     C           1800      ADD  XDINYY    YL0001
      * LCL.Month NBR USR = PAR.Date In  (7,0) USR *MONTH
     C           WUAXDT    ADD  1000000   XDINDT
     C                     Z-ADDXDINMM    YL0002
      * LCL.Day of Month USR = PAR.Date In  (7,0) USR *DAY OF MONTH
     C           WUAXDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD0         XDINDD
     C                     EXSR XCVTA
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
     C                     MOVE XDURR     YL0003
     C                     MOVEL*BLANK    WN0002           Year Alpha (YYY
     C                     MOVELYL0001    WN0002           Year Alpha (YYY
     C                     MOVELYL0002    WN0003           Month (Char) US
     C                     MOVELYL0003    WN0004           Day   (Char) US
     C                     Z-ADD*ZERO     ZQ      50
     C           WN0002    CAT  WN0003:ZQ WN0001    P      Date (Char-8) U
     C                     Z-ADD*ZERO     ZQ      50
     C           WN0001    CAT  WN0004:ZQ WN0001    P      Date (Char-8) U
     C                     MOVE WN0001    WUJONY           Date Out (8,0)
     C                     MOVELWUJONY    WUGWT1           Date (Char-8) U
     C                     MOVELWUGWT1    WUROT1           SSI SOR Date 8,
      * WRK.USR Time 4.0 = JOB.*Job time
     C                     Z-ADD##JTM     WUT4TM           USR Time 4.0
     C                     MOVEL*BLANK    WURPT1           SSI SOR Time 4,
     C                     MOVELWUT4TM    WURPT1           SSI SOR Time 4,
      * CHG SSI Ctrl EOT Trn=Y CO - SSI Control  * 
     C                     EXSR SFCHRC
     C                     END                             *FI
     C           KRSSE     READE@ERREXL                  90*
     C                     ENDDO
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFCHRC    BEGSR
      *================================================================
      * CHG SSI Ctrl EOT Trn=Y CO - SSI Control  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YARDC   1
      *
      * Move key fields to @ERREW8
     C                     MOVELWERQT1    WFRQT1    P      SSI SOR Sequenc
     C                     MOVELWERNT1    WFRNT1    P      SSI SOR Identif
     C                     MOVELWERRT1    WFRRT1    P      SSI EOT Identif
     C                     Z-ADDWENFNY    WFNFNY           SSI Sequence Nu
      *
     C           KLCHSF    KLIST
     C                     KFLD           WFRQT1           SSI SOR Sequenc
     C                     KFLD           WFRNT1           SSI SOR Identif
     C                     KFLD           WFRRT1           SSI EOT Identif
     C                     KFLD           WFNFNY           SSI Sequence Nu
     C           KLCHSF    CHAIN@ERREW8              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PMERREL0'MDACP
     C                     MOVEL'@ERREW8' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL001.
     C                     MOVEL'LBL001'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SFEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPMER1    YARDCS
      * Move non-key fields to @ERREW8
     C                     MOVELWERTT1    WFRTT1    P      SSI SOR SCAC
     C                     MOVELWERMT1    WFRMT1    P      SSI Trading Par
     C                     MOVELWUROT1    WFROT1    P      SSI SOR Date 8,
     C                     MOVELWURPT1    WFRPT1    P      SSI SOR Time 4,
     C                     MOVELWERST1    WFRST1    P      SSI EOT Record
     C                     MOVELWUSTTR    WFSTTR    P      SSI Transmissio
      *
      * Set PGM.*Record Data Changed flag
     C           QPMER1    IFNE YARDCS
     C           YARDC     ANDNE'N'
     C                     MOVE 'Y'       YARDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YARDC     IFEQ 'Y'
     C                     UPDAT@ERREW8                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPMERREL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * ***** Change Log and Comments
      *================================================================
      * ** 08/20/2009 LJB E00461
      * ** Remove Order Comments from the Pick/Stop process - wrong for
      * ** the way we do business. Add new programming to create Load
      * ** Header Comments and send these to the PNESCPP work file
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         XCVTA     BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C           XDINYY    SUB  1         XDWK1   80
     C           XDWK1     MULT 365.25    XDAY1   60
     C           XDWK1     IFGE 300
     C                     SUB  2         XDAY1
     C                     ELSE
     C           XDWK1     IFGE 100
     C                     SUB  1         XDAY1
     C                     END
     C                     END
      * (from the beginning of the year to the beginning of the month:)
     C           XDINMM    SUB  1         XDWK1
     C           XDINMM    IFLT 3
      *     ...+31*(MM-1) (for January-February) ...
     C                     MULT 31        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                     MULT 30        XDWK1
     C                     ADD  XDWK1     XDAY1
      *         ...-2 (for preceding February) ...
     C                     SUB  2         XDAY1
     C           XDINYY    IFNE 100
     C           XDINYY    ANDNE300
      *         ...+1 (for preceding February, if leap year) ...
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     ADD  1         XDAY1
     C                     END
     C                     END
     C           XDINMM    IFLT 8
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C           XDINMM    MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C           XDINMM    ADD  1         XDWK1
     C                     MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     END
     C                     END
      * ...+DD (days in the month up to the ending date)
     C                     ADD  XDINDD    XDAY1
      *================================================================
     CSR         XCVTAE    ENDSR
      /EJECT
     CSR         XDOWS     BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                     MOVEAXDCDW     YDOW
     C                     Z-ADD0         XDWSL   10
     C                     Z-ADD1         YY
     C           YY        DOWLE7
     C           YDOW,YY   IFEQ XDSEL
     C                     ADD  1         XDWSL
     C                     END
     C                     ADD  1         YY
     C                     END
      *================================================================
     CSR         XDOWSE    ENDSR
      /EJECT
     CSR         XDUDY     BEGSR
      *================================================================
      * Calculate duration, *DAYS
      *================================================================
     C           XDAY1     IFLT 1
     C           XDAY2     ORLT 1
     C                     Z-ADD0         XDURR
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     GOTO XDUDYE
     C                     END
     C           XDAY1     IFGE XDAY2
      * From date2 to date1
     C                     Z-ADDXDAY2     XABEG   60
     C                     Z-ADDXDAY1     XAEND   60
     C                     ELSE
      * From date1 to date2
     C                     Z-ADDXDAY1     XABEG   60
     C                     Z-ADDXDAY2     XAEND   60
     C                     END
     C           XDWSL     IFEQ 0
      * None days of week selected
     C                     Z-ADD0         XDURR
     C                     GOTO XDUDYC
     C                     END
     C           XAEND     SUB  XABEG     XDURR   80
     C           XDWSL     IFEQ 7
      * All days of week selected
     C                     GOTO XDUDYC
     C                     END
      * Some days of week selected
     C                     DIV  7         XDURR
     C                     MVR            XDLSW   10
     C                     MULT XDWSL     XDURR
     C           XDLSW     IFNE 0
      * Determine day of week of the beginning date
     C           XABEG     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
      * Loop: Increment the date by the last week
     C           XDLSW     DOWGT0
      * Increment the day of week
     C                     ADD  1         YY
     C                     SUB  1         XDLSW
      * Put day of week into the range 1-7
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     END
      * Selected day of the last week has been processed
     C           YDOW,YY   IFEQ XDSEL
      * Increment duration
     C                     ADD  1         XDURR
     C                     END
      * End of loop
     C                     END
     C                     END
     C           XDUDYC    TAG
     C           XDURR     IFEQ 0
      * Return Code: Unable to calculate duration
     C                     MOVEL'Y2U0060' W0RTN   7
     C                     ELSE
     C                     MOVEL*BLANK    W0RTN   7
     C                     END
      *================================================================
     CSR         XDUDYE    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program: Normal
      *================================================================
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WANFNY           SSI Sequence Nu
      * Define work field Return Code Usr
     C                     MOVEL*BLANK    WUH3TX  7
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WBNFNY           SSI Sequence Nu
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WCNFNY           SSI Sequence Nu
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WDNFNY           SSI Sequence Nu
      * Define work field SSI Transmission Status
     C                     MOVEL*BLANK    WUSTTR  1
      * Define work field Job Date
     C                     Z-ADD*ZERO     WUAXDT  70
      * Define work field DATE
     C                     Z-ADD*ZERO     WUJONY  80
      * Define work field Date (Char-8) USR
     C                     MOVEL*BLANK    WUGWT1  8
      * Define work field SSI SOR Date 8,0 alpha
     C                     MOVEL*BLANK    WUROT1  8
      * Define work field USR Time 4.0
     C                     Z-ADD*ZERO     WUT4TM  40
      * Define work field SSI SOR Time 4,0 alpha
     C                     MOVEL*BLANK    WURPT1  4
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'N'       W0PMT   1
      * Define local work field Year Code
     C                     Z-ADD*ZERO     YL0001  40
      * Define local work field Month NBR USR
     C                     Z-ADD*ZERO     YL0002  20
      * Define local work field Day of Month USR
     C                     Z-ADD*ZERO     YL0003  20
      *================================================================
     CSR         ZZEXIT    ENDSR
** @CN
00001 000000001
