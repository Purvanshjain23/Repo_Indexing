      *****************  RPG PROGRAM HEADING  ************************
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP124
      * TITLE:       REPLACE A FUNCTION FOR AUTHORIZED USERS
      * PROGRAMMER:  LEANNE FEDOR
      * CREATED:     02/14/95
      *
      * FUNCTION: THIS FUNCTION ALLOWS THE MODIFICATION OF THE
      *           RECORDS IN THE AUTHORIZED FUNCTION FILE BY CHANGING
      *           ONE FUNCTION CODE TO ANOTHER FUNCTION CODE.
      *
      *           THIS PROGRAM WILL BE USED BY PROGRAMMERS--NOT USERS!
      *
      *           THIS FUNCTION CAN BE USED WHEN A PROGRAMMER HAS
      *           DELETED AN EXISTING PROGRAM AND REPLACED IT WITH
      *           ANOTHER OR WHEN THE PROGRAM ID HAS BEEN CHANGED ON
      *           AN EXISTING PROGRAM.  FOR EXAMPLE, LET'S SAY THAT
      *           PROGRAM HP407 HAS BEEN REPLACED WITH PROGRAM HP417.
      *           USING THIS 'REPLACE' FUNCTION, THE PROGRAMMER CAN
      *           CHANGE THE RECORDS FOR ALL USERS AUTHORIZED TO HP407
      *           TO BE PROGRAM HP417.
      *
      *           THIS PROGRAM IS CALLED FROM HP425-WORK WITH FUNCTIONS
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      * 99/99/99
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHPD124    CF   E             WORKSTN
     F                                     INFDS(IOFEED)
      *
     FHSP002    IF   E           K DISK
      *    FUNCTION                  (KEY: FNFNCD)
      *
     FHSL003A   UF   E           K DISK
      *    FUNCTION AUTHORIZATION    (KEY: FAFNCD FAUSCD)
      *
      /EJECT
      ****************************************************************
      * TABLE AND ARRAY SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  STANDARD MESSAGE ARRAYS
      *---------------------------------------------------------------
      *
      /EJECT
      ****************************************************************
      * INPUT SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      * STANDARD ERROR MESSAGE HANDLING DATA STRUCTURES
      *---------------------------------------------------------------
      *
      * FOR ERROR MESSAGE HANDLING, A PACKED INDEX (E) IS REQUIRED.
      * FOR PROGRAM READABILITY, DEFINE A CORRESPONDING ERROR COUNT
      * FIELD CALLED 'ERROR'
      *
     D                 DS                  INZ
     D  ERROR                  1      2P 0
     D  E                      1      2P 0
      *
      * THIS DATA STRUCTURE SUPPLIES THE NAME OF THE MESSAGE FILE TO
      * THE MESSAGE HANDLING CL PROGRAM.  THE FIELD NAME MSGFIL MUST BE
      * CONSTANT. THE VALUE IN QUOTES IS THE NAME OF THE SPECIFIC
      * MESSAGE FILE CONTAINING THE USER DEFINED MESSAGES.
      *
     D                 DS                  INZ
     D  MSGFIL                 1     10    INZ('HSMSGF    ')
      *
      * THE FOLLOWING 3 DATA STRUCTURES ARE USED TO SPEED MESSAGE
      * HANDLING SINCE IT IS FASTER TO CLEAR DATA STRUCTURES THAN
      * ARRAYS.  EACH IS ASSOCIATED WITH A STANDARD MESSAGE ARRAY.
      *
     D MGI             DS           140    INZ
     D  MGID                   1    140
     D                                     DIM(20)                              MSG ID ARRAY
      *
     D MGD             DS          1000    INZ
     D  MGDT                   1   1000
     D                                     DIM(20)                              MSG PARMS
      *
     D MGWK            DS            50    INZ
     D  MGW                    1     50
     D                                     DIM(50)                              MSG WORK PARMS
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      * STANDARD WORKSTATION INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTWSFR (RECORD FORMAT: UTIDFRR)
     D IOFEED        E DS                  EXTNAME(UTWSFR)
      *
      *---------------------------------------------------------------
      * STANDARD DATABASE FILE INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTDBFR (RECORD FORMAT: FDBCKD)
     D DBFEED        E DS                  EXTNAME(UTDBFR)
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
     D SET1            C                   CONST('SET1  ')
     D EDIT1           C                   CONST('EDIT1 ')
     D SCRN1           C                   CONST('SCRN1 ')
     D EXIT            C                   CONST('EXIT  ')
      *
     D                 DS
     D  DUMMYD                 1      1
      *  THE PRECEDING DUMMY DATA STRUCTURE IS ONLY TO KEEP THE I-SPEC
      *  INFO FROM RUNNING OVER INTO THE 'CALC SPECS' ON THE COMPILE
      *  LISTING.  IT SERVES NO OTHER PURPOSE AND CAN BE DELETED
      *  AT ANY TIME!!!
      /EJECT
      ****************************************************************
      * MAIN LINE
      ****************************************************************
      *
     C                   MOVEL     SET1          ROUTNE
      *
     C     *INLR         DOWEQ     *OFF                                         MAIN DO LOOP
      *
     C     ROUTNE        CASEQ     SET1          $SET1
     C     ROUTNE        CASEQ     SCRN1         $SCRN1
     C     ROUTNE        CASEQ     EDIT1         $EDIT1
      *
     C     ROUTNE        CASEQ     EXIT          $EXIT
     C                   ENDCS
     C                   ENDDO                                                  MAIN DO LOOP
      /EJECT
      *----------------------------------------------------------------
      * $SET1 - SUBROUTINE TO SET ENVIRONMENT FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SET1         BEGSR
      *
      *  SET ROUTINE TO DISPLAY SCREEN
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $SCRN1 - SUBROUTINE TO PERFORM OPERATOR I/O FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SCRN1        BEGSR
      *
      * WRITE THE ERROR MESSAGES FROM THE ERROR ARRAYS TO THE
      * ERROR MESSAGE SUBFILE
      *
     C                   EXSR      $WRMSG
      *
      * WRITE SCREEN 1 TO CRT
      *
     C                   WRITE     HP124K1
     C                   WRITE     HP124EC
     C                   EXFMT     HP124R1
      *
      * CLEAR THE MESSAGES FROM THE MESSAGE DATA STRUCTURES AND PROGRAM
      * MESSAGE QUEUE.
      *
     C                   EXSR      $CLMSG
      *
      * GET USER'S ENTRY AND SET THE NEXT ROUTINE
      *
     C                   SELECT
      *
     C     *IN03         WHENEQ    *ON                                          F3-EXIT
     C                   MOVEL     '03'          RTNCD
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN04         WHENEQ    *ON                                          F4-PROMPT
     C                   EXSR      $F4S1
     C                   MOVEL     SCRN1         ROUTNE
      *
     C     *IN09         WHENEQ    *ON                                          F9-REPLACE
     C                   MOVEL     EDIT1         ROUTNE
      *
     C     *IN12         WHENEQ    *ON                                          F12-PREVIOUS
     C                   MOVEL     '12'          RTNCD
     C                   MOVEL     EXIT          ROUTNE
     C                   OTHER
      *
      * USER HAS PRESSED ENTER
      *
     C                   MOVEL     EDIT1         ROUTNE
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $EDIT1 - SUBROUTINE TO EDIT INPUT FIELDS FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $EDIT1        BEGSR
      *
      * VALIDATE THAT THE ORIGINAL FUNCTION IS VALID
      *
     C                   MOVE      *BLANK        C1FNDS
     C                   MOVE      *BLANK        WKFNTY
      *
     C     C1FNCD        IFEQ      *BLANK                                       IF NO FROM
     C                   SETON                                        30
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
     C                   ELSE
      *
     C     C1FNCD        CHAIN     HSP002                             91
     C     *IN91         IFEQ      *OFF                                         IF FOUND
     C                   MOVEL     FNFNDS        C1FNDS
     C                   MOVEL     FNFNTY        WKFNTY
     C                   ELSE
     C                   SETON                                        30
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00552'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     C1FNCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF FOUND
     C                   ENDIF                                                  IF NO FROM
      *
      * VALIDATE THAT THE REPLACEMENT FUNCTION IS VALID
      * AND IS A SECURED FUNCTION.
      *
     C                   MOVE      *BLANK        DFFNDS
     C     DFFNCD        IFEQ      *BLANK                                       IF BLANK
     C                   SETON                                        31
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
     C                   ELSE
      *
     C     DFFNCD        CHAIN     HSP002                             91
     C     *IN91         IFEQ      *ON                                          IF NOT FOUND
     C                   SETON                                        31
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00552'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFFNCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ELSE
      *
     C                   MOVEL     FNFNDS        DFFNDS
      *
      * THE REPLACEMENT FUNCTION CANNOT BE THE SAME AS THE ORIGINAL
      *
     C     DFFNCD        IFEQ      C1FNCD
     C                   SETON                                        31
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00574'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFFNCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF
      *
      * THE REPLACEMENT FUNCTION MUST BE A SECURED FUNCTION
      *
     C     FNSFFL        IFEQ      NO
     C                   SETON                                        31
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00573'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFFNCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF
      *
      * MAKE SURE THAT THE REPLACEMENT FUNCTION HAS NOT ALREADY
      * BEEN ASSIGNED TO A USER.  IF IT HAS, THEN YOU ARE PROBABLY
      * ENTERING AN INCORRECT REPLACEMENT FUNCTION.
      *
     C     DFFNCD        CHAIN(N)  HSL003A                            92
     C     *IN92         IFEQ      *OFF                                         IF ALREADY
     C                   SETON                                        31
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00548'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFFNCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF ALREADY
      *
      * YOU ARE NOT ALLOWED TO REPLACE A 'VIEW' FUNCTION
      * WITH A 'MAINTENANCE' FUNCTION SINCE USERS MAY NOT
      * BE AUTHORIZED TO 'MODIFY DATA'.
      *
     C     WKFNTY        IFEQ      'V'
     C     FNFNTY        ANDEQ     'M'
     C                   SETON                                        31
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00559'     MGID(E)
     C                   ENDIF
     C                   ENDIF
      *
     C                   ENDIF                                                  IF NOT FOUND
     C                   ENDIF                                                  IF BLANK
      *
      * IF THERE ARE NO ERRORS, EXECUTE THE SUBROUTINE TO PROCESS THE
      * USERS REQUEST
      *
     C     ERROR         IFEQ      0
     C     *IN44         IFEQ      *OFF
     C                   SETON                                        44
     C                   ELSE
     C                   EXSR      $PROC1
     C                   ENDIF
     C                   ELSE
     C                   SETOFF                                       44
     C                   ENDIF
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $PROC1 - SUBROUTINE TO PROCESS THE USER'S REQUEST
      *---------------------------------------------------------------
      *
     C     $PROC1        BEGSR
      *
      *  IF F9=REPLACE
      *
     C     *IN09         IFEQ      *ON                                          IF REPLACE
      *
     C                   Z-ADD     0             COUNT
     C                   SETOFF                                       95
     C     C1FNCD        SETLL     HSL003A
      *
     C     *IN95         DOUEQ     *ON                                          DO CHANGE
     C     C1FNCD        READE     HSL003A                                95
     C     *IN95         IFEQ      *OFF
     C                   MOVEL     DFFNCD        FAFNCD
     C                   UPDATE    FAREC
     C                   ADD       1             COUNT
     C                   ENDIF
     C                   ENDDO                                                  DO CHANGE
      *
      * TELL PROGRAMMER HOW MANY RECORDS WERE CHANGED
      *
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09019'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEL     COUNT         COUNTA
     C                   MOVEA     COUNTA        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF                                                  IF REPLACE
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * *INZSR - INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      * KEY LISTS
      *
      * PARM LISTS
      *
     C     *ENTRY        PLIST
     C                   PARM                    C1FNCD
     C                   PARM                    C1FNDS
     C                   PARM                    RTNCD
      *
      * GLOBAL DEFINES
      *
     C                   MOVE      *BLANK        PGM              10            USED IN MSG
     C                   MOVE      *BLANK        MSGFL            10            USED IN MSG
     C                   MOVE      *BLANK        ROUTNE            6
     C                   MOVEL     '00'          RTNCD             2            RETURN CODE
      *
      *  FIELD TO COUNT THE NUMBER OF CHANGED RECORDS
      *
     C                   Z-ADD     0             COUNT             3 0
      * WORKFIELD
      *
     C     *LIKE         DEFINE    FNFNTY        WKFNTY
      *
      * ALPHA PARM FIELDS
      *
     C     *LIKE         DEFINE    FNFNCD        XXFNCD
     C     *LIKE         DEFINE    FNFNDS        XXFNDS
     C                   MOVE      *BLANK        COUNTA            3
      *
      * THE FOLLOWING STANDARD CODE MUST BE INCLUDED TO MAKE THE
      * STANDARD ERROR MESSAGE HANDLING PROGRAM FUNCTION PROPERLY.
      * THIS CODE SETS AND CLEARS THE PROGRAM MESSAGE QUEUE.
      *
     C                   Z-ADD     20            MAXMSG            2 0
     C                   MOVEL     '*'           MSGPGM                         SET QUEUE
     C                   EXSR      $CLMSG                                       CLEAR MSG
      *
     C                   ENDSR
      /EJECT
      ****************************************************************
      * $F4S1 - F4 PROMPT ON SCREEN 1
      ****************************************************************
      *
     C     $F4S1         BEGSR
      *
     C                   SELECT
      *
      * IF ORIGINAL FUNCTION
      *
     C     FLD           WHENEQ    'C1FNCD'
     C                   MOVE      *BLANK        XXFNCD
     C                   MOVE      *BLANK        XXFNDS
     C                   CALL      'HP587'
     C                   PARM                    XXFNCD
     C                   PARM                    XXFNDS
     C                   SETON                                        50
     C     XXFNCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXFNCD        C1FNCD
     C                   MOVEL     XXFNDS        C1FNDS
     C                   ENDIF                                                  IF SELECTED
      *
      * IF REPLACEMENT FUNCTION
      *
     C     FLD           WHENEQ    'DFFNCD'
     C                   MOVE      *BLANK        XXFNCD
     C                   MOVE      *BLANK        XXFNDS
     C                   CALL      'HP587'
     C                   PARM                    XXFNCD
     C                   PARM                    XXFNDS
     C                   SETON                                        51
     C     XXFNCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXFNCD        DFFNCD
     C                   MOVEL     XXFNDS        DFFNDS
     C                   ENDIF                                                  IF SELECTED
     C                   OTHER
      *
      * F4 NOT VALID FOR THIS FIELD SO ISSUE MESSAGE
      *
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09011'     MGID(E)
     C                   ENDIF
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $WRMSG - SUBROUTINE TO WRITE ERROR MESSAGES
      *---------------------------------------------------------------
      *
     C     $WRMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM                    MGID
     C                   PARM                    MGDT
     C                   PARM                    ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $CLMSG - SUBROUTINE TO CLEAR MESSAGES
      *----------------------------------------------------------------
      *
     C     $CLMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM      *BLANK        MGI
     C                   PARM      *BLANK        MGD
     C                   PARM      *ZEROS        ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $EXIT - SUBROUTINE TO SET ON LR AND END JOB
      *----------------------------------------------------------------
      *
     C     $EXIT         BEGSR
     C                   SETON                                        LR
     C                   ENDSR
      *
