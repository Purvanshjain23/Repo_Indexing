// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKKWXFR
// ?Date: 14.08.2025 Time: 02:52:01
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?DOC: Increased Buy Order field length from 5 to 7.
DO;

//?H16853 ISE 11/09/2020 - Recompiled due to change in Buy Order Number
ENDDO;

//?DOC: Update Producer Contract Damage with Contract Cost
DO;

//?Update the Producer Contract Damage with the new payment
//?information created based on the AGP program.
ENDDO;

EXECUTE FUNCTION(AGP Upd Cntrct Cost   RT) TYPE(RTVOBJ) FILE(PKAWCPP)           AB1199132;
PARAMETER(PAR.PC_Contract_Code);
PARAMETER(PAR.TH_Source_Code);
PARAMETER(PAR.Date_To_USR);
PARAMETER(PAR.CC_Company_Number);
{
 //?USER: Initialize routine

 CASE;

 // IF PAR.TH Source Code is Open Daily Buys
 IF PAR.TH_Source_Code = 'ODB';

 // WRK.BOH Buy Order Type = CND.Open Market
 WRK.BOH_Buy_Order_Type = 'O';

 // IF PAR.TH Source Code is Contract
 IF PAR.TH_Source_Code = 'CPR';

 // WRK.BOH Buy Order Type = CND.Contract
 WRK.BOH_Buy_Order_Type = 'C';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // WRK.BOH Buy Order Type = CND.Internal
 WRK.BOH_Buy_Order_Type = 'I';

 ENDIF;

 //?USER: Process Data record

 CASE;

 // IF DB1.BOH Kill Date GE PAR.Date From USR
 IF DB1.BOH_Kill_Date >= PAR.Date_From_USR;

 // AND DB1.BOH Kill Date LE PAR.Date To   USR
 AND DB1.BOH_Kill_Date <= PAR.Date_To_USR;

 EXECUTE FUNCTION(Rtv Producer Type     RT) TYPE(RTVOBJ) FILE(PKACREP)           AB1199555;
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(WRK.SR_Source_Code);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF WRK.SR Source Code EQ PAR.TH Source Code
 IF WRK.SR_Source_Code = PAR.TH_Source_Code;

 EXECUTE FUNCTION(AGP Upd Cntrct Cost   RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1199135;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(PAR.PC_Contract_Code);
 {
  //?USER: Process Data record

  CASE;

  // IF DB1.TH Hog Class Type is Resale
  IF DB1.TH_Hog_Class_Type = 'R';

  // IF *OTHERWISE
  IF *OTHERWISE;

  DO;

  EXECUTE FUNCTION(Upd Contract Cost     RT) TYPE(RTVOBJ) FILE(PKD1CPP)           AB1199136;
  PARAMETER(PAR.PC_Contract_Code);
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(DB1.TH_Payment_Gross);
  {
   //?USER: Process Data record

   // Contract Cost
   PAR.Contract_Cost_Amt = PAR.Contract_Payment_Gross + DB1.Additional_Contract_Amt;

   CASE;

   // IF DB1.TH Head Killed is Not Zero
   IF DB1.TH_Head_Killed <> *ZERO;

   // Contract Cost /Hd
   PAR.Contract_Cost_Hd = PAR.Contract_Cost_Amt / DB1.TH_Head_Killed 'H';

   ENDIF;

   CASE;

   // IF DB1.TH Live Wgt is Greater then Zero
   IF DB1.TH_Live_Wgt > *ZERO;

   // Contract Cost /Lv CWT
   PAR.Contract_Cost_Lv_CWT = PAR.Contract_Cost_Amt / ( DB1.TH_Live_Wgt / 100 'H' ) 'H';

   ENDIF;

   // Actual-Contract /Hd
   PAR.Actual_Contract_Hd = DB1.Actual_Rep_Cost_Hd - PAR.Contract_Cost_Hd;

   // Actual-Contract /Lv CWT
   PAR.Actual_Contract_Lv_CWT = DB1.Actual_Rep_Cost_Lv_CWT - PAR.Contract_Cost_Lv_CWT;

   EXECUTE FUNCTION(Chg Contract Cost     CH) TYPE(CHGOBJ) FILE(PKD1CPP)           AB1199137;
   PARAMETER(PAR.PC_Contract_Code);
   PARAMETER(PAR.BOH_Company_Number);
   PARAMETER(PAR.BOH_Buy_Order_Number);
   PARAMETER(PAR.BOL_Load_Number);
   PARAMETER(PAR.TH_Tattoo_Number);
   PARAMETER(PAR.TH_Kill_Date);
   PARAMETER(PAR.Contract_Payment_Gross);
   PARAMETER(PAR.Contract_Cost_Amt);
   PARAMETER(PAR.Contract_Cost_Hd);
   PARAMETER(PAR.Contract_Cost_Lv_CWT);
   PARAMETER(PAR.Actual_Contract_Hd);
   PARAMETER(PAR.Actual_Contract_Lv_CWT);
   PARAMETER(DB1.PD_Producer_Code);
   PARAMETER(DB1.PL_Location_Code);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
    PARAMETER(DB1.RS_User_Changed);
    PARAMETER(DB1.RS_Date_Changed);
    PARAMETER(DB1.RS_Time_Changed);
    PARAMETER(DB1.RS_Job);
    PARAMETER(DB1.RS_Program);
    {
     //?Execute internal function

     // PAR.RS User Changed = JOB.*USER
     PAR.RS_User_Changed = JOB.*USER;

     // PAR.RS Date Changed = JOB.*Job date
     PAR.RS_Date_Changed = JOB.*Job_date;

     // PAR.RS Time Changed = JOB.*Job time
     PAR.RS_Time_Changed = JOB.*Job_time;

     // PAR.RS Job = JOB.*JOB
     PAR.RS_Job = JOB.*JOB;

     // PAR.RS Program = JOB.*PROGRAM
     PAR.RS_Program = JOB.*PROGRAM;

    }

   }

  }

  ENDDO;

  ENDIF;

 }

 ENDIF;

 ENDIF;

}


