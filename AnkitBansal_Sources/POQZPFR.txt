     H/TITLE Prt A/R Cust Stmt Age PF  Print file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Print report of file contents
      *
     H* Generated by  : 2E  Version:  1135
     H* Function type : Print file
      *
     H* Company       : OMS Development Model         lopment-
     H* System        : OMS Development Model
     H* User name     : ISRCENT
     H* Date          : 08/23/05  Time  : 10:06:07
     H* Copyright     : OMS Development Model         lopment-
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FARBDCPL6IF  E           K        DISK
      * RSQ : A/R Header                Co/Customer AR        V
      *
     FCABBREL1IF  E           K        DISK
      * RTV : Customer                  Retrieval index       NV
      *
     FOME5REL1IF  E           K        DISK
      * RTV : Country                   Retrieval index
      *
     FCAEOREL1IF  E           K        DISK
      * RTV : Company Customer          Retrieval index
      *
     FOPBFCPLWIF  E           K        DISK
      * RTV : Order Header TRG          Orders not Cancelled
      *
     FCAASREL2IF  E           K        DISK
      * RTV : Company Control           Retrieval index       NV
      *
     FPOQZPFR$O   E             97     PRINTER
     F                                              KINFDS INFDS$
      * PRT: Prt A/R Cust Stmt Age PF  Print file
      *
     E                    UAD         6 34               Name/Address
      *
     E                    #L7         7  1
     E                    YDOW        7  1               *Days of week
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
     IINFDS$    E DSY2I$DSP
      * Printer file information data structure
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXD2T        DS
      * Internal date
     I                                        1   70XDINT2
     I                                        1   30XDINY2
     I                                        4   50XDINM2
     I                                        6   70XDIND2
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * I :  Include Credit Memos
     I                                        1   1 P1BTSX
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1BTSX    PARM           WP0001  1        Include Credit
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Prt A/R Cust Stmt Age PF: Mainline
     C                     EXSR A0MAIN
      * Print headers then End of report format
     C                     EXSR Q0PRNT
     C                     WRITE$FENDRPT
      * Exit program
     C                     EXSR ZXEXPG
      * ------------------------------------------------------
      /EJECT
     CSR         A0MAIN    BEGSR
      *================================================================
      * Prt A/R Cust Stmt Age PF: Mainline
      *================================================================
      * Establish starting position
     C           *LOVAL    SETLL@BDCPGB                    *
      * Read first record with user selection
     C                     EXSR A3READ
     C           W0EOFA    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0AL1P  1        First page
     C                     MOVEL'Y'       W0AL00  1        Company Number
     C                     MOVEL'Y'       W0AL01  1        A/R Customer Nu
     C                     MOVEL'Y'       W0AL02  1        Invoice Number
     C                     MOVEL'Y'       W0AL03  1        Invoice Suffix
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      * Print report body
     C           W0EOFA    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR A1PHDR
      * Print report detail line
     C                     EXSR A2PDTL
      * Read next record with user selection
     C                     EXSR A3READ
      * Print totals
     C                     EXSR A4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         A0EXIT    ENDSR
      /EJECT
     CSR         A1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0AL1P    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP1P  1
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP00  1
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDBDAIC3    $CAIC3           Company Number
     C                     Z-ADDBDANC7    $CANC7           A/R Customer Nu
     C                     MOVEL*BLANK    $CGNNA           USR Compressed
     C                     MOVEL*BLANK    $CI1TX           Credit Contact
     C                     MOVEL*BLANK    $CGONA           USR Compressed
     C                     MOVEL*BLANK    $CNJNA           Credit Contact
     C                     MOVEL*BLANK    $CGPNA           USR Compressed
     C                     MOVEL*BLANK    $CGQNA           USR Compressed
     C                     MOVEL*BLANK    $CGRNA           USR Compressed
      * Load related totals format
     C                     Z-ADDBDAIC3    $EAIC3           Company Number
     C                     Z-ADDBDANC7    $EANC7           A/R Customer Nu
     C                     Z-ADD*ZERO     $EEUVA           USR Age Current
     C                     Z-ADD*ZERO     $EEVVA           USR Age Value 1
     C                     Z-ADD*ZERO     $EEWVA           USR Age Value 2
     C                     Z-ADD*ZERO     $EEXVA           USR Age Value 3
     C                     Z-ADD*ZERO     $EEYVA           USR Age Value 4
     C                     Z-ADD*ZERO     $EEZVA           USR Age Value 5
     C                     Z-ADD*ZERO     $EFHVA           USR Age Value 5
     C                     Z-ADD*ZERO     $ED6VL           Age $ Due - Cur
     C                     Z-ADD*ZERO     $EACVA           Age $ Due - Agi
     C                     Z-ADD*ZERO     $EADVA           Age $ Due - Agi
     C                     Z-ADD*ZERO     $EAEVA           Age $ Due - Agi
     C                     Z-ADD*ZERO     $EAFVA           Age $ Due - Agi
     C                     Z-ADD*ZERO     $EAHVA           Age $ Due - Agi
     C                     Z-ADD*ZERO     $EMFQT           Total Amount
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP01  1
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP02  1
     C                     END
      *
     C           W0AL03    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP03  1
     C                     END
      *
      *================================================================
     CSR         A1EXIT    ENDSR
      /EJECT
     CSR         A2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     Z-ADDBDCONB    $DCONB           Invoice Number
     C                     MOVELBDCEST    $DCEST           Invoice Suffix
     C                     Z-ADDBDCAC7    $DCAC7           Order Number Re
     C                     Z-ADDBDATDT    $DATDT           Due Date
     C                     MOVEL*BLANK    $DBCNA           Customer Purcha
     C                     Z-ADD*ZERO     $DD6VL           Age $ Due - Cur
     C                     Z-ADD*ZERO     $DACVA           Age $ Due - Agi
     C                     Z-ADD*ZERO     $DADVA           Age $ Due - Agi
     C                     Z-ADD*ZERO     $DAEVA           Age $ Due - Agi
     C                     Z-ADD*ZERO     $DAFVA           Age $ Due - Agi
     C                     Z-ADD*ZERO     $DAHVA           Age $ Due - Agi
     C                     Z-ADD*ZERO     $DCKVA           USR Credit Amou
     C                     Z-ADDBDAIC3    $DAIC3           Company Number
     C                     MOVELBDUHCD    $DUHCD           Adjustment Type
     C                     Z-ADDBDBSVA    $DBSVA           Transaction Amo
     C                     Z-ADDBDAIVA    $DAIVA           Adjustment Amou
     C                     Z-ADDBDAOVA    $DAOVA           Amount Paid
     C                     Z-ADDBDBGVA    $DBGVA           Remaining Balan
     C                     MOVELBDAJST    $DAJST           A/R Processing
     C                     MOVELBDE3ST    $DE3ST           Purge Status
     C                     MOVELBDG4CD    $DG4CD           Bank Code
     C                     Z-ADDBDCKNB    $DCKNB           G/L Document Nu
     C                     Z-ADDBDBKC7    $DBKC7           Ship To Custome
     C                     MOVELBDBCCD    $DBCCD           Salesperson Cod
     C                     MOVELBDR4CD    $DR4CD           Sales Route Cod
     C                     Z-ADDBDB4DT    $DB4DT           Transaction Dat
     C                     Z-ADDBDH0DT    $DH0DT           Last Payment Da
     C                     Z-ADDBDH3DT    $DH3DT           Unused Date Cod
     C                     Z-ADDBDH4DT    $DH4DT           Paid in Full Da
     C                     Z-ADDBDH5DT    $DH5DT           Last G/L Post D
     C                     Z-ADDBDANC7    $DANC7           A/R Customer Nu
     C                     MOVELBDCPTX    $DCPTX           A/R Check Numbe
     C                     Z-ADDBDBSDY    $DBSDY           Days to Pay
     C                     MOVELBDUVST    $DUVST           EDI Status 1
     C                     MOVELBDUWST    $DUWST           EDI Status 2
     C                     MOVELBDUXST    $DUXST           EDI Status 3
     C                     Z-ADDBDAATM    $DAATM           Job Time
     C                     MOVELBDAYNA    $DAYNA           User Id
     C                     MOVELBDA0NA    $DA0NA           Job Name
     C                     Z-ADDBDAXDT    $DAXDT           Job Date
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0APDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      * USER: Process after print of detail format
      * COMPUTE:TOTAL AMOUNT
      * NXT.Total Amount =
      *    *COMPUTE (x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8)
      * x1    : NXT.Total Amount
      * +     : NXT.Total Amount
      * x2    : CUR.Age $ Due - Curr - CB 9.2
      * +     : PGM.*Synon (17,7) work field
      * x3    : CUR.Age $ Due - Aging 1 - CB
      * +     : PGM.*Synon (17,7) work field
      * x4    : CUR.Age $ Due - Aging 2 - CB
      * +     : PGM.*Synon (17,7) work field
      * x5    : CUR.Age $ Due - Aging 3 - CB
      * +     : PGM.*Synon (17,7) work field
      * x6    : CUR.Age $ Due - Aging 4 - CB
      * +     : PGM.*Synon (17,7) work field
      * x7    : CUR.Age $ Due - Aging 5 - CB
      * +     : PGM.*Synon (17,7) work field
      * x8    : CUR.USR Credit Amount
     C                     ADD  $DD6VL    $EMFQT           Total Amount
     C           $EMFQT    ADD  $DACVA    W0WD05           *Synon (17,7) w
     C           W0WD05    ADD  $DADVA    W0WD04           *Synon (17,7) w
     C           W0WD04    ADD  $DAEVA    W0WD03           *Synon (17,7) w
     C           W0WD03    ADD  $DAFVA    W0WD02           *Synon (17,7) w
     C           W0WD02    ADD  $DAHVA    W0WD01           *Synon (17,7) w
     C           W0WD01    ADD  $DCKVA    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $EMFQT           Total Amount
     C                     ADD  $DD6VL    $EEUVA           USR Age Current
     C                     ADD  $DACVA    $EEVVA           USR Age Value 1
     C                     ADD  $DADVA    $EEWVA           USR Age Value 2
     C                     ADD  $DAFVA    $EEYVA           USR Age Value 4
     C                     ADD  $DAEVA    $EEXVA           USR Age Value 3
     C                     ADD  $DAHVA    $EEZVA           USR Age Value 5
     C                     ADD  $DCKVA    $EFHVA           USR Age Value 5
      *
      *================================================================
     CSR         A2EXIT    ENDSR
      /EJECT
     CSR         A3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN BDAIC3    WZA001           Company Number
     C                     Z-ADDBDAIC3    WZA001
     C           *LIKE     DEFN BDANC7    WZA002           A/R Customer Nu
     C                     Z-ADDBDANC7    WZA002
     C           *LIKE     DEFN BDCONB    WZA003           Invoice Number
     C                     Z-ADDBDCONB    WZA003
     C           *LIKE     DEFN BDCEST    WZA004           Invoice Suffix
     C                     MOVELBDCEST    WZA004
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFA    OREQ '1'
     C                     READ @BDCPGB                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFA  1
      * Quit if no record read
     C           W0EOFA    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
      * USER: Record selection processing
      * CASE: PAR.Include Credit Memos is No
     C           P1BTSX    IFEQ 'N'                        *IF
      * CASE:
      *  - c1ORc2ANDc3
      *   |- c1    : DB1.Remaining Balance Due is less than zero
      *   |- c2    : DB1.Invoice Suffix is CM or OA
      *   |- c3    : DB1.Transaction Amount is greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           BDBGVA    IFLT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C           Y0CX01    IFNE '1'                        *IF
     C           BDCEST    IFEQ 'CM'                       *IF
     C           BDCEST    OREQ 'OA'
     C           BDBSVA    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0AL00  1        Company Number
     C                     MOVEL*BLANK    W0AL01  1        A/R Customer Nu
     C                     MOVEL*BLANK    W0AL02  1        Invoice Number
     C                     MOVEL*BLANK    W0AL03  1        Invoice Suffix
     C           W0EOFA    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0AL00  1        Company Number
     C                     MOVEL'Y'       W0AL01  1        A/R Customer Nu
     C                     MOVEL'Y'       W0AL02  1        Invoice Number
     C                     MOVEL'Y'       W0AL03  1        Invoice Suffix
     C                     ELSE
      * Next record - Detect level breaks
     C           BDAIC3    IFNE WZA001                     Company Number
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL00
     C                     END
     C           BDANC7    IFNE WZA002                     A/R Customer Nu
     C           W0AL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL01
     C                     END
     C           BDCONB    IFNE WZA003                     Invoice Number
     C           W0AL01    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL02
     C                     END
     C           BDCEST    IFNE WZA004                     Invoice Suffix
     C           W0AL02    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL03
     C                     END
     C                     END
      *================================================================
     CSR         A3EXIT    ENDSR
      /EJECT
     CSR         A4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0AL03    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP03
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP02
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of A/R Customer Number format
      * CASE: PAR.Include Credit Memos is Yes
     C           P1BTSX    IFEQ 'Y'                        *IF
      * RTV CLC Age Inv - Cust RT - A/R Header  * 
     C                     EXSR SGRVGN
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 6
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
     C                     MOVEL'0'       *IN79
     C           P1BTSX    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
      * Print format
     C                     WRITE$EKEYTTL
     C                     END
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP01
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP00
     C                     END
      *
     C           W0EOFA    IFEQ '1'
     C                     END
      *
      *================================================================
     CSR         A4EXIT    ENDSR
      /EJECT
     CSR         NASUBR    BEGSR
      *================================================================
      * Accumulate Credit to Apply.
      *================================================================
     C                     ADD  BDBGVA    WN0031           Aging - CM/OA A
      *================================================================
     CSR         NAEXIT    ENDSR
      /EJECT
     CSR         NBSUBR    BEGSR
      *================================================================
      * Load Output Parameters.
      *================================================================
     C                     Z-ADDWN0006    $DD6VL           Age $ Due - Cur
     C                     Z-ADDWN0007    $DACVA           Age $ Due - Agi
     C                     Z-ADDWN0008    $DADVA           Age $ Due - Agi
     C                     Z-ADDWN0009    $DAEVA           Age $ Due - Agi
     C                     Z-ADDWN0010    $DAFVA           Age $ Due - Agi
     C                     Z-ADDWN0012    $DAHVA           Age $ Due - Agi
     C                     Z-ADDWN0024    WUVIVA           Age $ Due-Curre
     C                     Z-ADDWN0019    WUVJVA           Age $ Due-Aging
     C                     Z-ADDWN0020    WUVKVA           Age $ Due-Aging
     C                     Z-ADDWN0021    WUVLVA           Age $ Due-Aging
     C                     Z-ADDWN0022    WUVMVA           Age $ Due-Aging
     C                     Z-ADDWN0023    WUVNVA           Age $ Due-Aging
      *================================================================
     CSR         NBEXIT    ENDSR
      /EJECT
     CSR         NCSUBR    BEGSR
      *================================================================
      * Initialize Neither Parameters.
      *================================================================
     C                     Z-ADD*ZERO     WN0050           USR Age Current
     C                     Z-ADD*ZERO     WN0044           USR Age Value 1
     C                     Z-ADD*ZERO     WN0045           USR Age Value 2
     C                     Z-ADD*ZERO     WN0046           USR Age Value 3
     C                     Z-ADD*ZERO     WN0047           USR Age Value 4
     C                     Z-ADD*ZERO     WN0048           USR Age Value 5
     C                     Z-ADD*ZERO     WN0042           USR Age Current
     C                     Z-ADD*ZERO     WN0032           USR Age Value 1
     C                     Z-ADD*ZERO     WN0033           USR Age Value 2
     C                     Z-ADD*ZERO     WN0034           USR Age Value 3
     C                     Z-ADD*ZERO     WN0035           USR Age Value 4
     C                     Z-ADD*ZERO     WN0036           USR Age Value 5
     C                     Z-ADD*ZERO     WN0037           USR Age Current
     C                     Z-ADD*ZERO     WN0038           USR Age Value 1
     C                     Z-ADD*ZERO     WN0039           USR Age Value 2
     C                     Z-ADD*ZERO     WN0040           USR Age Value 3
     C                     Z-ADD*ZERO     WN0041           USR Age Value 4
     C                     Z-ADD*ZERO     WN0043           USR Age Value 5
     C                     Z-ADD*ZERO     WN0049           USR Total Credi
      *================================================================
     CSR         NCEXIT    ENDSR
      /EJECT
     CSR         NDSUBR    BEGSR
      *================================================================
      * Retrieve Aging Ranges.
      *================================================================
      * RTV A/R Aging info     RT - Company Control  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$EAIC3    WL0001           Company Number
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0002    WN0051           A/R Aging Days
     C                     Z-ADDWL0003    WN0052           A/R Aging Days
     C                     Z-ADDWL0004    WN0053           A/R Aging Days
     C                     Z-ADDWL0005    WN0054           A/R Aging Days
      *================================================================
     CSR         NDEXIT    ENDSR
      /EJECT
     CSR         NESUBR    BEGSR
      *================================================================
      * Sum A/R Cust Invoices with a Remaining Bal.(IN,DM)(CB)(CM,OA)
      *================================================================
      * PAR.Days Past Due  USR = JOB.*Job date - DB1.Due Date *DAYS
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C           BDATDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C           ##JDT     ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
      * Negative duration, when date1<date2
     C           XDAY1     IFGE XDAY2
     C                     Z-ADDXDURR     WN0056
     C                     ELSE
     C           XDURR     MULT -1        WN0056
     C                     END
      * CASE: PAR.Days Past Due  USR is <= Zero
     C           WN0056    IFLE *ZERO                      *IF
      * Current.
     C                     EXSR NFSUBR                     Current.
     C                     ELSE
      * CASE: PAR.Days Past Due  USR LE PAR.A/R Aging Days - 1
     C           WN0056    IFLE WN0051                     *IF
      * Past Due Period 1.
     C                     EXSR NJSUBR                     Past Due Period
     C                     ELSE
      * CASE: PAR.Days Past Due  USR LE PAR.A/R Aging Days - 2
     C           WN0056    IFLE WN0052                     *IF
      * Past Due Period 2.
     C                     EXSR NNSUBR                     Past Due Period
     C                     ELSE
      * CASE: PAR.Days Past Due  USR LE PAR.A/R Aging Days - 3
     C           WN0056    IFLE WN0053                     *IF
      * Past Due Period 3.
     C                     EXSR NRSUBR                     Past Due Period
     C                     ELSE
      * CASE: PAR.Days Past Due  USR LE PAR.A/R Aging Days - 4
     C           WN0056    IFLE WN0054                     *IF
      * Past Due Period 4.
     C                     EXSR NVSUBR                     Past Due Period
     C                     ELSE
      * CASE: *OTHERWISE
      * Past Due Period 5.
     C                     EXSR NZSUBR                     Past Due Period
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      *================================================================
     CSR         NEEXIT    ENDSR
      /EJECT
     CSR         NFSUBR    BEGSR
      *================================================================
      * Current.
      *================================================================
      * CLC Aging Bucket       IF
      * CASE: PAR.Invoice Suffix is Charge Backs
     C           BDCEST    IFEQ 'CB'                       *IF
      * Age Chargebacks.
     C                     EXSR NGSUBR                     Age Chargebacks
     C                     ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Invoice Suffix is Invoices
      *   |- c2    : PAR.Invoice Suffix is Debit Memos
      *   '-
     C           BDCEST    IFEQ 'IN'                       *IF
     C           BDCEST    OREQ 'DM'                       *OR
      * Age Invoices and Debit Memos.
     C                     EXSR NHSUBR                     Age Invoices an
     C                     ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Invoice Suffix is Credit Memos
      *   |- c2    : PAR.Invoice Suffix is On Account Cash
      *   '-
     C           BDCEST    IFEQ 'CM'                       *IF
     C           BDCEST    OREQ 'OA'                       *OR
      * Accumulate Credit to Apply.
     C                     EXSR NISUBR                     Accumulate Cred
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      *================================================================
     CSR         NFEXIT    ENDSR
      /EJECT
     CSR         NGSUBR    BEGSR
      *================================================================
      * Age Chargebacks.
      *================================================================
     C                     ADD  BDBGVA    WN0042           Aging - CB    A
     C                     ADD  BDBGVA    WN0037           Aging - IN/DM/C
      *================================================================
     CSR         NGEXIT    ENDSR
      /EJECT
     CSR         NHSUBR    BEGSR
      *================================================================
      * Age Invoices and Debit Memos.
      *================================================================
     C                     ADD  BDBGVA    WN0050           Aging - IN/DM A
     C                     ADD  BDBGVA    WN0037           Aging - IN/DM/C
      *================================================================
     CSR         NHEXIT    ENDSR
      /EJECT
     CSR         NISUBR    BEGSR
      *================================================================
      * Accumulate Credit to Apply.
      *================================================================
     C                     ADD  BDBGVA    WN0049           Aging - CM/OA A
      *================================================================
     CSR         NIEXIT    ENDSR
      /EJECT
     CSR         NJSUBR    BEGSR
      *================================================================
      * Past Due Period 1.
      *================================================================
      * CLC Aging Bucket       IF
      * CASE: PAR.Invoice Suffix is Charge Backs
     C           BDCEST    IFEQ 'CB'                       *IF
      * Age Chargebacks.
     C                     EXSR NKSUBR                     Age Chargebacks
     C                     ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Invoice Suffix is Invoices
      *   |- c2    : PAR.Invoice Suffix is Debit Memos
      *   '-
     C           BDCEST    IFEQ 'IN'                       *IF
     C           BDCEST    OREQ 'DM'                       *OR
      * Age Invoices and Debit Memos.
     C                     EXSR NLSUBR                     Age Invoices an
     C                     ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Invoice Suffix is Credit Memos
      *   |- c2    : PAR.Invoice Suffix is On Account Cash
      *   '-
     C           BDCEST    IFEQ 'CM'                       *IF
     C           BDCEST    OREQ 'OA'                       *OR
      * Accumulate Credit to Apply.
     C                     EXSR NMSUBR                     Accumulate Cred
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      *================================================================
     CSR         NJEXIT    ENDSR
      /EJECT
     CSR         NKSUBR    BEGSR
      *================================================================
      * Age Chargebacks.
      *================================================================
     C                     ADD  BDBGVA    WN0032           Aging - CB    A
     C                     ADD  BDBGVA    WN0038           Aging - IN/DM/C
      *================================================================
     CSR         NKEXIT    ENDSR
      /EJECT
     CSR         NLSUBR    BEGSR
      *================================================================
      * Age Invoices and Debit Memos.
      *================================================================
     C                     ADD  BDBGVA    WN0044           Aging - IN/DM A
     C                     ADD  BDBGVA    WN0038           Aging - IN/DM/C
      *================================================================
     CSR         NLEXIT    ENDSR
      /EJECT
     CSR         NMSUBR    BEGSR
      *================================================================
      * Accumulate Credit to Apply.
      *================================================================
     C                     ADD  BDBGVA    WN0049           Aging - CM/OA A
      *================================================================
     CSR         NMEXIT    ENDSR
      /EJECT
     CSR         NNSUBR    BEGSR
      *================================================================
      * Past Due Period 2.
      *================================================================
      * CLC Aging Bucket       IF
      * CASE: PAR.Invoice Suffix is Charge Backs
     C           BDCEST    IFEQ 'CB'                       *IF
      * Age Chargebacks.
     C                     EXSR NOSUBR                     Age Chargebacks
     C                     ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Invoice Suffix is Invoices
      *   |- c2    : PAR.Invoice Suffix is Debit Memos
      *   '-
     C           BDCEST    IFEQ 'IN'                       *IF
     C           BDCEST    OREQ 'DM'                       *OR
      * Age Invoices and Debit Memos.
     C                     EXSR NPSUBR                     Age Invoices an
     C                     ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Invoice Suffix is Credit Memos
      *   |- c2    : PAR.Invoice Suffix is On Account Cash
      *   '-
     C           BDCEST    IFEQ 'CM'                       *IF
     C           BDCEST    OREQ 'OA'                       *OR
      * Accumulate Credit to Apply.
     C                     EXSR NQSUBR                     Accumulate Cred
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      *================================================================
     CSR         NNEXIT    ENDSR
      /EJECT
     CSR         NOSUBR    BEGSR
      *================================================================
      * Age Chargebacks.
      *================================================================
     C                     ADD  BDBGVA    WN0033           Aging - CB    A
     C                     ADD  BDBGVA    WN0039           Aging - IN/DM/C
      *================================================================
     CSR         NOEXIT    ENDSR
      /EJECT
     CSR         NPSUBR    BEGSR
      *================================================================
      * Age Invoices and Debit Memos.
      *================================================================
     C                     ADD  BDBGVA    WN0045           Aging - IN/DM A
     C                     ADD  BDBGVA    WN0039           Aging - IN/DM/C
      *================================================================
     CSR         NPEXIT    ENDSR
      /EJECT
     CSR         NQSUBR    BEGSR
      *================================================================
      * Accumulate Credit to Apply.
      *================================================================
     C                     ADD  BDBGVA    WN0049           Aging - CM/OA A
      *================================================================
     CSR         NQEXIT    ENDSR
      /EJECT
     CSR         NRSUBR    BEGSR
      *================================================================
      * Past Due Period 3.
      *================================================================
      * CLC Aging Bucket       IF
      * CASE: PAR.Invoice Suffix is Charge Backs
     C           BDCEST    IFEQ 'CB'                       *IF
      * Age Chargebacks.
     C                     EXSR NSSUBR                     Age Chargebacks
     C                     ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Invoice Suffix is Invoices
      *   |- c2    : PAR.Invoice Suffix is Debit Memos
      *   '-
     C           BDCEST    IFEQ 'IN'                       *IF
     C           BDCEST    OREQ 'DM'                       *OR
      * Age Invoices and Debit Memos.
     C                     EXSR NTSUBR                     Age Invoices an
     C                     ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Invoice Suffix is Credit Memos
      *   |- c2    : PAR.Invoice Suffix is On Account Cash
      *   '-
     C           BDCEST    IFEQ 'CM'                       *IF
     C           BDCEST    OREQ 'OA'                       *OR
      * Accumulate Credit to Apply.
     C                     EXSR NUSUBR                     Accumulate Cred
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      *================================================================
     CSR         NREXIT    ENDSR
      /EJECT
     CSR         NSSUBR    BEGSR
      *================================================================
      * Age Chargebacks.
      *================================================================
     C                     ADD  BDBGVA    WN0034           Aging - CB    A
     C                     ADD  BDBGVA    WN0040           Aging - IN/DM/C
      *================================================================
     CSR         NSEXIT    ENDSR
      /EJECT
     CSR         NTSUBR    BEGSR
      *================================================================
      * Age Invoices and Debit Memos.
      *================================================================
     C                     ADD  BDBGVA    WN0046           Aging - IN/DM A
     C                     ADD  BDBGVA    WN0040           Aging - IN/DM/C
      *================================================================
     CSR         NTEXIT    ENDSR
      /EJECT
     CSR         NUSUBR    BEGSR
      *================================================================
      * Accumulate Credit to Apply.
      *================================================================
     C                     ADD  BDBGVA    WN0049           Aging - CM/OA A
      *================================================================
     CSR         NUEXIT    ENDSR
      /EJECT
     CSR         NVSUBR    BEGSR
      *================================================================
      * Past Due Period 4.
      *================================================================
      * CLC Aging Bucket       IF
      * CASE: PAR.Invoice Suffix is Charge Backs
     C           BDCEST    IFEQ 'CB'                       *IF
      * Age Chargebacks.
     C                     EXSR NWSUBR                     Age Chargebacks
     C                     ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Invoice Suffix is Invoices
      *   |- c2    : PAR.Invoice Suffix is Debit Memos
      *   '-
     C           BDCEST    IFEQ 'IN'                       *IF
     C           BDCEST    OREQ 'DM'                       *OR
      * Age Invoices and Debit Memos.
     C                     EXSR NXSUBR                     Age Invoices an
     C                     ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Invoice Suffix is Credit Memos
      *   |- c2    : PAR.Invoice Suffix is On Account Cash
      *   '-
     C           BDCEST    IFEQ 'CM'                       *IF
     C           BDCEST    OREQ 'OA'                       *OR
      * Accumulate Credit to Apply.
     C                     EXSR NYSUBR                     Accumulate Cred
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      *================================================================
     CSR         NVEXIT    ENDSR
      /EJECT
     CSR         NWSUBR    BEGSR
      *================================================================
      * Age Chargebacks.
      *================================================================
     C                     ADD  BDBGVA    WN0035           Aging - CB    A
     C                     ADD  BDBGVA    WN0041           Aging - IN/DM/C
      *================================================================
     CSR         NWEXIT    ENDSR
      /EJECT
     CSR         NXSUBR    BEGSR
      *================================================================
      * Age Invoices and Debit Memos.
      *================================================================
     C                     ADD  BDBGVA    WN0047           Aging - IN/DM A
     C                     ADD  BDBGVA    WN0041           Aging - IN/DM/C
      *================================================================
     CSR         NXEXIT    ENDSR
      /EJECT
     CSR         NYSUBR    BEGSR
      *================================================================
      * Accumulate Credit to Apply.
      *================================================================
     C                     ADD  BDBGVA    WN0049           Aging - CM/OA A
      *================================================================
     CSR         NYEXIT    ENDSR
      /EJECT
     CSR         NZSUBR    BEGSR
      *================================================================
      * Past Due Period 5.
      *================================================================
      * CLC Aging Bucket       IF
      * CASE: PAR.Invoice Suffix is Charge Backs
     C           BDCEST    IFEQ 'CB'                       *IF
      * Age Chargebacks.
     C                     EXSR OASUBR                     Age Chargebacks
     C                     ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Invoice Suffix is Invoices
      *   |- c2    : PAR.Invoice Suffix is Debit Memos
      *   '-
     C           BDCEST    IFEQ 'IN'                       *IF
     C           BDCEST    OREQ 'DM'                       *OR
      * Age Invoices and Debit Memos.
     C                     EXSR OBSUBR                     Age Invoices an
     C                     ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Invoice Suffix is Credit Memos
      *   |- c2    : PAR.Invoice Suffix is On Account Cash
      *   '-
     C           BDCEST    IFEQ 'CM'                       *IF
     C           BDCEST    OREQ 'OA'                       *OR
      * Accumulate Credit to Apply.
     C                     EXSR OCSUBR                     Accumulate Cred
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      *================================================================
     CSR         NZEXIT    ENDSR
      /EJECT
     CSR         OASUBR    BEGSR
      *================================================================
      * Age Chargebacks.
      *================================================================
     C                     ADD  BDBGVA    WN0036           Aging - CB    A
     C                     ADD  BDBGVA    WN0043           Aging - IN/DM/C
      *================================================================
     CSR         OAEXIT    ENDSR
      /EJECT
     CSR         OBSUBR    BEGSR
      *================================================================
      * Age Invoices and Debit Memos.
      *================================================================
     C                     ADD  BDBGVA    WN0048           Aging - IN/DM A
     C                     ADD  BDBGVA    WN0043           Aging - IN/DM/C
      *================================================================
     CSR         OBEXIT    ENDSR
      /EJECT
     CSR         OCSUBR    BEGSR
      *================================================================
      * Accumulate Credit to Apply.
      *================================================================
     C                     ADD  BDBGVA    WN0049           Aging - CM/OA A
      *================================================================
     CSR         OCEXIT    ENDSR
      /EJECT
     CSR         ODSUBR    BEGSR
      *================================================================
      * Apply Credits.
      *================================================================
      * *** Save total credit amount for later. ***
     C                     Z-ADDWN0049    WN0055           Save Total Cred
      * *** Apply credits to oldest dollars first. (without CB) ***
      * Start by Applying Credit to Bucket 5.
      * CASE: PAR.USR Age Value 5 GE PAR.USR Total Credit Amount
     C           WN0048    IFGE WN0049                     *IF
     C                     SUB  WN0049    WN0048           USR Age Value 5
     C                     Z-ADD*ZERO     WN0049           USR Total Credi
     C                     ELSE
      * CASE: *OTHERWISE
     C                     SUB  WN0048    WN0049           USR Total Credi
     C                     Z-ADD*ZERO     WN0048           USR Age Value 5
      * Apply Remaining Credit to Bucket 4.
      * CASE: PAR.USR Age Value 4 GE PAR.USR Total Credit Amount
     C           WN0047    IFGE WN0049                     *IF
     C                     SUB  WN0049    WN0047           USR Age Value 4
     C                     Z-ADD*ZERO     WN0049           USR Total Credi
     C                     ELSE
      * CASE: *OTHERWISE
     C                     SUB  WN0047    WN0049           USR Total Credi
     C                     Z-ADD*ZERO     WN0047           USR Age Value 4
      * Apply Remaining Credit to Bucket 3.
      * CASE: PAR.USR Age Value 3 GE PAR.USR Total Credit Amount
     C           WN0046    IFGE WN0049                     *IF
     C                     SUB  WN0049    WN0046           USR Age Value 3
     C                     Z-ADD*ZERO     WN0049           USR Total Credi
     C                     ELSE
      * CASE: *OTHERWISE
     C                     SUB  WN0046    WN0049           USR Total Credi
     C                     Z-ADD*ZERO     WN0046           USR Age Value 3
      * Apply Remaining Credit to Bucket 2.
      * CASE: PAR.USR Age Value 2 GE PAR.USR Total Credit Amount
     C           WN0045    IFGE WN0049                     *IF
     C                     SUB  WN0049    WN0045           USR Age Value 2
     C                     Z-ADD*ZERO     WN0049           USR Total Credi
     C                     ELSE
      * CASE: *OTHERWISE
     C                     SUB  WN0045    WN0049           USR Total Credi
     C                     Z-ADD*ZERO     WN0045           USR Age Value 2
      * Apply Remaining Credit to Bucket 1.
      * CASE: PAR.USR Age Value 1 GE PAR.USR Total Credit Amount
     C           WN0044    IFGE WN0049                     *IF
     C                     SUB  WN0049    WN0044           USR Age Value 1
     C                     Z-ADD*ZERO     WN0049           USR Total Credi
     C                     ELSE
      * CASE: *OTHERWISE
     C                     SUB  WN0044    WN0049           USR Total Credi
     C                     Z-ADD*ZERO     WN0044           USR Age Value 1
     C                     SUB  WN0049    WN0050           USR Age Current
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * *** Reset total credit amount. ***
     C                     Z-ADDWN0055    WN0049           USR Total Credi
      * *** Apply credits to oldest dollars first. (with CB) ***
      * Start by Applying Credit to Bucket 5.
      * CASE: PAR.USR Age Value 5 B GE PAR.USR Total Credit Amount
     C           WN0043    IFGE WN0049                     *IF
     C                     SUB  WN0049    WN0043           USR Age Value 5
     C                     Z-ADD*ZERO     WN0049           USR Total Credi
     C                     ELSE
      * CASE: *OTHERWISE
     C                     SUB  WN0043    WN0049           USR Total Credi
     C                     Z-ADD*ZERO     WN0043           USR Age Value 5
      * Apply Remaining Credit to Bucket 4.
      * CASE: PAR.USR Age Value 4 B GE PAR.USR Total Credit Amount
     C           WN0041    IFGE WN0049                     *IF
     C                     SUB  WN0049    WN0041           USR Age Value 4
     C                     Z-ADD*ZERO     WN0049           USR Total Credi
     C                     ELSE
      * CASE: *OTHERWISE
     C                     SUB  WN0041    WN0049           USR Total Credi
     C                     Z-ADD*ZERO     WN0041           USR Age Value 4
      * Apply Remaining Credit to Bucket 3.
      * CASE: PAR.USR Age Value 3 B GE PAR.USR Total Credit Amount
     C           WN0040    IFGE WN0049                     *IF
     C                     SUB  WN0049    WN0040           USR Age Value 3
     C                     Z-ADD*ZERO     WN0049           USR Total Credi
     C                     ELSE
      * CASE: *OTHERWISE
     C                     SUB  WN0040    WN0049           USR Total Credi
     C                     Z-ADD*ZERO     WN0040           USR Age Value 3
      * Apply Remaining Credit to Bucket 2.
      * CASE: PAR.USR Age Value 2 B GE PAR.USR Total Credit Amount
     C           WN0039    IFGE WN0049                     *IF
     C                     SUB  WN0049    WN0039           USR Age Value 2
     C                     Z-ADD*ZERO     WN0049           USR Total Credi
     C                     ELSE
      * CASE: *OTHERWISE
     C                     SUB  WN0039    WN0049           USR Total Credi
     C                     Z-ADD*ZERO     WN0039           USR Age Value 2
      * Apply Remaining Credit to Bucket 1.
      * CASE: PAR.USR Age Value 1 B GE PAR.USR Total Credit Amount
     C           WN0038    IFGE WN0049                     *IF
     C                     SUB  WN0049    WN0038           USR Age Value 1
     C                     Z-ADD*ZERO     WN0049           USR Total Credi
     C                     ELSE
      * CASE: *OTHERWISE
     C                     SUB  WN0038    WN0049           USR Total Credi
     C                     Z-ADD*ZERO     WN0038           USR Age Value 1
     C                     SUB  WN0049    WN0037           USR Age Current
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      *================================================================
     CSR         ODEXIT    ENDSR
      /EJECT
     CSR         OESUBR    BEGSR
      *================================================================
      * Load Output Parameters.
      *================================================================
     C                     Z-ADDWN0037    $ED6VL           Age $ Due - Cur
     C                     Z-ADDWN0038    $EACVA           Age $ Due - Agi
     C                     Z-ADDWN0039    $EADVA           Age $ Due - Agi
     C                     Z-ADDWN0040    $EAEVA           Age $ Due - Agi
     C                     Z-ADDWN0041    $EAFVA           Age $ Due - Agi
     C                     Z-ADDWN0043    $EAHVA           Age $ Due - Agi
     C                     Z-ADDWN0050    WUVIVA           Age $ Due-Curre
     C                     Z-ADDWN0044    WUVJVA           Age $ Due-Aging
     C                     Z-ADDWN0045    WUVKVA           Age $ Due-Aging
     C                     Z-ADDWN0046    WUVLVA           Age $ Due-Aging
     C                     Z-ADDWN0047    WUVMVA           Age $ Due-Aging
     C                     Z-ADDWN0048    WUVNVA           Age $ Due-Aging
      *================================================================
     CSR         OEEXIT    ENDSR
      /EJECT
     CSR         Q0PRNT    BEGSR
      *================================================================
      * Print report formats
      *================================================================
      * Select formats to print
     C                     EXSR Q1FSEL
      * Calculate length of formats selected for printing
     C                     EXSR Q2PLEN
      * Add column heading length to print length
     C                     ADD  W0COLN    W0FSUM
     C           W0NEWP    IFNE 'Y'
      * Signal overflow if requested headings would cause
      * detail format to start past the overflow line
     C           W0FSUM    IFGT W0OFL
     C                     MOVE 'Y'       W0NEWP
     C                     ELSE
      * Signal overflow if requested headings would cause
      * Detail format to be printed past end of page
     C                     ADD  W0DTLN    W0FSUM
     C           W0FSUM    IFGT W0PGL
     C                     MOVE 'Y'       W0NEWP
     C                     END
     C                     END
     C                     END
      * Print Standard report header of Prt A/R Cust Stmt Age PF
      * If it is ready to print, then do so,
     C           W0NEWP    IFEQ 'Y'                        IF
     C                     EXSR Q3PTNP
     C                     END                             FI
      *
      * Print First Page Format of Prt A/R Cust Stmt Age PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP1P    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0AL1P
     C                     END                             FI
      * Print Company Number of Prt A/R Cust Stmt Age PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP00    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP00
     C                     END                             FI
      * Print A/R Customer Number of Prt A/R Cust Stmt Age PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP01    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of A/R Customer Number format
      * RTV Cust Name/Addr     RT - Customer  * 
     C                     EXSR SARVGN
      * RTV Country Code       RT - Customer  * 
     C                     EXSR SBRVGN
      * RTV Desc, Status       RT - Country  * 
     C                     EXSR SCRVGN
      * RTV Comprs Nme/Add/CtryUS - /UT User Source  * 
      * Use this function to compress name/address information
      *
     C                     MOVELYL0001    UUADTX           Name
     C                     MOVELYL0002    UUACNA           Address 1
     C                     MOVELYL0003    UUADNA           Address 2
     C                     MOVELYL0004    UUAENA           Address 3
     C                     MOVELYL0005    UUAJNA           City
     C                     MOVELYL0006    UUEINA           State
     C                     MOVELYL0007    UUBTTX           Zip
     C                     MOVELWUDATX    UUDATX           Country
     C                     EXSR UJ1UF
     C                     MOVELUAD,1     $CGNNA
     C                     MOVELUAD,2     $CGONA
     C                     MOVELUAD,3     $CGPNA
     C                     MOVELUAD,4     $CGQNA
     C                     MOVELUAD,5     $CGRNA
     C                     MOVELUAD,6     WUKSTX
      * RTV Contact Info.      RT - Company Customer  * 
     C                     EXSR SDRVGN
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert A/R Customer Number to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $CANC7    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$CANC7    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VCANC7           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VCANC7           CD7 Ext Numeric
     C                     END                             *FI
     C                     MOVEL'0'       *IN79
     C           P1BTSX    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
      * Print format
     C                     WRITE$CKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP01
     C                     END                             FI
      * Print Invoice Number of Prt A/R Cust Stmt Age PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP02    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP02    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP02
     C                     END                             FI
      * Print Invoice Suffix of Prt A/R Cust Stmt Age PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP03    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP03    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP03
     C                     END                             FI
      * Print Detail line. of Prt A/R Cust Stmt Age PF
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0ACDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0APDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0APDT    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of detail format
      * RTV Purchase Order     RT - Order Header TRG  * 
     C                     EXSR SERVGN
      * CASE: DB1.Invoice Suffix is CM or OA
     C           BDCEST    IFEQ 'CM'                       *IF
     C           BDCEST    OREQ 'OA'
     C           0         SUB  BDBGVA    YL0011           Remaining Balan
     C                     ADD  YL0011    $DCKVA           USR Credit Amou
     C                     ELSE
      * CASE: *OTHERWISE
      *
     C                     Z-ADD*ZERO     WN0001 112       USR Age Value 1
     C                     Z-ADD*ZERO     WN0002 112       USR Age Value 2
     C                     Z-ADD*ZERO     WN0003 112       USR Age Value 3
     C                     Z-ADD*ZERO     WN0004 112       USR Age Value 4
     C                     Z-ADD*ZERO     WN0005 112       USR Age Value 5
     C                     Z-ADD*ZERO     WN0006 112       USR Age Current
     C                     Z-ADD*ZERO     WN0007 112       USR Age Value 1
     C                     Z-ADD*ZERO     WN0008 112       USR Age Value 2
     C                     Z-ADD*ZERO     WN0009 112       USR Age Value 3
     C                     Z-ADD*ZERO     WN0010 112       USR Age Value 4
     C                     Z-ADD*ZERO     WN0011 112       USR Age Current
     C                     Z-ADD*ZERO     WN0012 112       USR Age Value 5
     C                     Z-ADD*ZERO     WN0013  70       USR Aging date
     C                     Z-ADD*ZERO     WN0014  70       USR Aging date
     C                     Z-ADD*ZERO     WN0015  70       USR Aging date
     C                     Z-ADD*ZERO     WN0016  70       USR Aging date
     C                     Z-ADD*ZERO     WN0017  70       USR Aging date
     C                     Z-ADD*ZERO     WN0018  70       USR Aging Date
     C                     Z-ADD*ZERO     WN0019 112       USR Age Value 1
     C                     Z-ADD*ZERO     WN0020 112       USR Age Value 2
     C                     Z-ADD*ZERO     WN0021 112       USR Age Value 3
     C                     Z-ADD*ZERO     WN0022 112       USR Age Value 4
     C                     Z-ADD*ZERO     WN0023 112       USR Age Value 5
     C                     Z-ADD*ZERO     WN0024 112       USR Age Current
     C                     Z-ADD*ZERO     WN0025  30       A/R Aging Days
     C                     Z-ADD*ZERO     WN0026  30       A/R Aging Days
     C                     Z-ADD*ZERO     WN0027  30       A/R Aging Days
     C                     Z-ADD*ZERO     WN0028  30       A/R Aging Days
     C                     Z-ADD*ZERO     WN0029 112       Save Total Cred
     C                     Z-ADD*ZERO     WN0030  50       Days Past Due
     C                     Z-ADD*ZERO     WN0031 112       USR Total Credi
      *
      * CLC Age Cust Inv.      IF
      * Initialize Neither Parameters.
     C                     EXSR UASUBR                     Initialize Neit
      * Retrieve Aging Ranges.
     C                     EXSR UBSUBR                     Retrieve Aging
      * CASE: PAR.Remaining Balance Due is not equal to zeros
     C           BDBGVA    IFNE *ZERO                      *IF
      * Sum A/R Cust Invoices with a Remaining Bal.(IN,DM)(CB)(CM,OA)
     C                     EXSR UCSUBR                     Sum A/R Cust In
     C                     END                             *FI
      * Load Output Parameters.
     C                     EXSR NBSUBR                     Load Output Par
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert Order Number Ref to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $DCAC7    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$DCAC7    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VDCAC7           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VDCAC7           CD7 Ext Numeric
     C                     END                             *FI
      * Convert Due Date to display format
      * Convert date
     C           1000000   ADD  $DATDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VDATDT
      * Print column headings if required
     C           W0ACDT    IFEQ 'Y'
     C                     WRITE$DCOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0ACDT
     C                     END                             FI
      * Print format
     C                     WRITE$DDTLRCD
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0APDT
     C                     END                             FI
      * Clear new page flag
     C                     MOVE *BLANK    W0NEWP
      *================================================================
     CSR         Q0EXIT    ENDSR
      /EJECT
     CSR         Q1FSEL    BEGSR
      *================================================================
      * Format select
      *================================================================
      *================================================================
     CSR         Q1EXIT    ENDSR
      /EJECT
     CSR         Q2PLEN    BEGSR
      *================================================================
      * Evaluate print length
      *================================================================
     C           *LIKE     DEFN @$CLN     W0FSUM
     C           *LIKE     DEFN @$CLN     W0DTLN
     C           *LIKE     DEFN @$CLN     W0COLN
     C                     Z-ADD@$CLN     W0FSUM
     C                     Z-ADD*ZERO     W0DTLN
     C                     Z-ADD*ZERO     W0COLN
      * * First Page Format of Prt A/R Cust Stmt Age PF
     C           W0AP1P    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Company Number of Prt A/R Cust Stmt Age PF
     C           W0AP00    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * A/R Customer Number of Prt A/R Cust Stmt Age PF
     C           W0AP01    IFEQ 'Y'
     C                     ADD  15        W0FSUM
     C                     END                             FI
      *
      * * Invoice Number of Prt A/R Cust Stmt Age PF
     C           W0AP02    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Invoice Suffix of Prt A/R Cust Stmt Age PF
     C           W0AP03    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of Prt A/R Cust Stmt Age PF
     C           W0APDT    IFEQ 'Y'
     C                     Z-ADD1         W0DTLN
     C           W0ACDT    IFEQ 'Y'
     C                     Z-ADD0         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      *================================================================
     CSR         Q2EXIT    ENDSR
      /EJECT
     CSR         Q3PTNP    BEGSR
      *================================================================
      * Format select
      *================================================================
     C                     WRITE$APAGHDR
      * Clear page overflow indicator
     C                     SETOF                     97    *
      *================================================================
     CSR         Q3EXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV Cust Name/Addr     RT - Customer  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           BBBKC7           Ship To Custome
      * Setup key
     C                     Z-ADDBDANC7    BBBKC7           Ship To Custome
      * Establish starting position
     C           KRSSA     CHAIN@BBREE9              90    *
      * Data record not found
     C   90                MOVEL'USR0170' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBBAYTX    YL0001           Customer Name
     C                     MOVELBBACNA    YL0002           Address Line 1
     C                     MOVELBBADNA    YL0003           Address Line 2
     C                     MOVELBBAENA    YL0004           Address Line 3
     C                     MOVELBBAJNA    YL0005           City
     C                     MOVELBBBGCD    YL0006           State Code
     C                     MOVELBBBTTX    YL0007           Zip/Postal Code
     C                     ENDIF
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * RTV Country Code       RT - Customer  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           BBBKC7           Ship To Custome
      * Setup key
     C                     Z-ADDBDANC7    BBBKC7           Ship To Custome
      * Establish starting position
     C           KRSSB     CHAIN@BBREE9              90    *
      * Data record not found
     C   90                MOVEL'USR0170' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBBKXCD    YL0008           Country Code
     C                     ENDIF
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * RTV Desc, Status       RT - Country  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           E5KXCD           Country Code
      * Setup key
     C                     MOVELYL0008    E5KXCD           Country Code
      * Establish starting position
     C           KRSSC     CHAIN@E5REB8              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1158' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUDATX           Country Descrip
     C                     MOVEL*BLANK    WUG0TX           Record Status
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELE5DATX    WUDATX           Country Descrip
     C                     MOVELE5VSST    WUG0TX           Record Status
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * RTV Contact Info.      RT - Company Customer  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           EOAIC3           Company Number
     C                     KFLD           EOBKC7           Ship To Custome
      * Setup key
     C                     Z-ADD$CAIC3    EOAIC3           Company Number
     C                     Z-ADDBDANC7    EOBKC7           Ship To Custome
      * Establish starting position
     C           KRSSD     CHAIN@EOREXM              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $CNJNA           Credit Contact
     C                     MOVEL*BLANK    YL0009           Credit Contact
     C                     MOVEL*BLANK    YL0010           Credit Contact
     C                     MOVEL*BLANK    $CI1TX           Credit Contact
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELEONJNA    $CNJNA           Credit Contact
     C                     MOVELEOI0TX    YL0009           Credit Contact
     C                     MOVELEONKNA    YL0010           Credit Contact
     C                     MOVELEOI1TX    $CI1TX           Credit Contact
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * RTV Purchase Order     RT - Order Header TRG  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           BEAIC3           Company Number
     C                     KFLD           BEC4NB           Order Number
      * Setup key
     C                     Z-ADD$DAIC3    BEAIC3           Company Number
     C                     Z-ADD$DCAC7    BEC4NB           Order Number
      * Establish starting position
     C           KRSSE     CHAIN@BFCPZ9              90    *
      * Data record not found
     C   90                MOVEL'USR0176' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBEBCNA    $DBCNA           Customer Purcha
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * RTV A/R Aging info     RT - Company Control  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           ASAIC3           Company Number
      * Setup key
     C                     Z-ADDWL0001    ASAIC3           Company Number
      * Establish starting position
     C           KRSSF     CHAIN@ASREGT              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0049' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0002           A/R Aging Days
     C                     Z-ADD*ZERO     WL0003           A/R Aging Days
     C                     Z-ADD*ZERO     WL0004           A/R Aging Days
     C                     Z-ADD*ZERO     WL0005           A/R Aging Days
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDASAEDY    WL0002           A/R Aging Days
     C                     Z-ADDASAFDY    WL0003           A/R Aging Days
     C                     Z-ADDASAGDY    WL0004           A/R Aging Days
     C                     Z-ADDASAHDY    WL0005           A/R Aging Days
     C                     ENDIF
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * RTV CLC Age Inv - Cust RT - A/R Header  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0032 112       USR Age Value 1
     C                     Z-ADD*ZERO     WN0033 112       USR Age Value 2
     C                     Z-ADD*ZERO     WN0034 112       USR Age Value 3
     C                     Z-ADD*ZERO     WN0035 112       USR Age Value 4
     C                     Z-ADD*ZERO     WN0036 112       USR Age Value 5
     C                     Z-ADD*ZERO     WN0037 112       USR Age Current
     C                     Z-ADD*ZERO     WN0038 112       USR Age Value 1
     C                     Z-ADD*ZERO     WN0039 112       USR Age Value 2
     C                     Z-ADD*ZERO     WN0040 112       USR Age Value 3
     C                     Z-ADD*ZERO     WN0041 112       USR Age Value 4
     C                     Z-ADD*ZERO     WN0042 112       USR Age Current
     C                     Z-ADD*ZERO     WN0043 112       USR Age Value 5
     C                     Z-ADD*ZERO     WN0044 112       USR Age Value 1
     C                     Z-ADD*ZERO     WN0045 112       USR Age Value 2
     C                     Z-ADD*ZERO     WN0046 112       USR Age Value 3
     C                     Z-ADD*ZERO     WN0047 112       USR Age Value 4
     C                     Z-ADD*ZERO     WN0048 112       USR Age Value 5
     C                     Z-ADD*ZERO     WN0049 112       USR Total Credi
     C                     Z-ADD*ZERO     WN0050 112       USR Age Current
     C                     Z-ADD*ZERO     WN0051  30       A/R Aging Days
     C                     Z-ADD*ZERO     WN0052  30       A/R Aging Days
     C                     Z-ADD*ZERO     WN0053  30       A/R Aging Days
     C                     Z-ADD*ZERO     WN0054  30       A/R Aging Days
     C                     Z-ADD*ZERO     WN0055 112       Save Total Cred
     C                     Z-ADD*ZERO     WN0056  50       Days Past Due
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * Initialize Neither Parameters.
     C                     EXSR NCSUBR                     Initialize Neit
      * Retrieve Aging Ranges.
     C                     EXSR NDSUBR                     Retrieve Aging
      * Declare restrictor key work fields
     C           *LIKE     DEFN BDAIC3    WQSG01           Company Number
     C           *LIKE     DEFN BDANC7    WQSG02           A/R Customer Nu
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           WQSG01           Company Number
     C                     KFLD           WQSG02           A/R Customer Nu
      * Setup key
     C                     Z-ADD$EAIC3    WQSG01           Company Number
     C                     Z-ADD$EANC7    WQSG02           A/R Customer Nu
      * Establish starting position
     C           KRSSG     SETLL@BDCPGB                    *
     C           KRSSG     READE@BDCPGB                  90*
      * Data record not found
     C   90                MOVEL'USR0174' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Remaining Balance Due is not equal to zeros
     C           BDBGVA    IFNE *ZERO                      *IF
      * Sum A/R Cust Invoices with a Remaining Bal.(IN,DM)(CB)(CM,OA)
     C                     EXSR NESUBR                     Sum A/R Cust In
     C                     END                             *FI
     C           KRSSG     READE@BDCPGB                  90*
     C                     ENDDO
      * USER: Exit processing
      * Apply Credits.
     C                     EXSR ODSUBR                     Apply Credits.
      * Load Output Parameters.
     C                     EXSR OESUBR                     Load Output Par
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Initialize Neither Parameters.
      *================================================================
     C                     Z-ADD*ZERO     WN0024           USR Age Current
     C                     Z-ADD*ZERO     WN0019           USR Age Value 1
     C                     Z-ADD*ZERO     WN0020           USR Age Value 2
     C                     Z-ADD*ZERO     WN0021           USR Age Value 3
     C                     Z-ADD*ZERO     WN0022           USR Age Value 4
     C                     Z-ADD*ZERO     WN0023           USR Age Value 5
     C                     Z-ADD*ZERO     WN0011           USR Age Current
     C                     Z-ADD*ZERO     WN0001           USR Age Value 1
     C                     Z-ADD*ZERO     WN0002           USR Age Value 2
     C                     Z-ADD*ZERO     WN0003           USR Age Value 3
     C                     Z-ADD*ZERO     WN0004           USR Age Value 4
     C                     Z-ADD*ZERO     WN0005           USR Age Value 5
     C                     Z-ADD*ZERO     WN0006           USR Age Current
     C                     Z-ADD*ZERO     WN0007           USR Age Value 1
     C                     Z-ADD*ZERO     WN0008           USR Age Value 2
     C                     Z-ADD*ZERO     WN0009           USR Age Value 3
     C                     Z-ADD*ZERO     WN0010           USR Age Value 4
     C                     Z-ADD*ZERO     WN0012           USR Age Value 5
     C                     Z-ADD*ZERO     WN0031           USR Total Credi
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * Retrieve Aging Ranges.
      *================================================================
      * RTV A/R Aging info     RT - Company Control  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDBDAIC3    WL0001           Company Number
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0002    WN0025           A/R Aging Days
     C                     Z-ADDWL0003    WN0026           A/R Aging Days
     C                     Z-ADDWL0004    WN0027           A/R Aging Days
     C                     Z-ADDWL0005    WN0028           A/R Aging Days
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         UCSUBR    BEGSR
      *================================================================
      * Sum A/R Cust Invoices with a Remaining Bal.(IN,DM)(CB)(CM,OA)
      *================================================================
      * PAR.Days Past Due  USR = JOB.*Job date - PAR.Due Date *DAYS
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C           BDATDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C           ##JDT     ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
      * Negative duration, when date1<date2
     C           XDAY1     IFGE XDAY2
     C                     Z-ADDXDURR     WN0030
     C                     ELSE
     C           XDURR     MULT -1        WN0030
     C                     END
      * CASE: PAR.Days Past Due  USR is <= Zero
     C           WN0030    IFLE *ZERO                      *IF
      * Current.
     C                     EXSR UDSUBR                     Current.
     C                     ELSE
      * CASE: PAR.Days Past Due  USR LE PAR.A/R Aging Days - 1
     C           WN0030    IFLE WN0025                     *IF
      * Past Due Period 1.
     C                     EXSR UHSUBR                     Past Due Period
     C                     ELSE
      * CASE: PAR.Days Past Due  USR LE PAR.A/R Aging Days - 2
     C           WN0030    IFLE WN0026                     *IF
      * Past Due Period 2.
     C                     EXSR ULSUBR                     Past Due Period
     C                     ELSE
      * CASE: PAR.Days Past Due  USR LE PAR.A/R Aging Days - 3
     C           WN0030    IFLE WN0027                     *IF
      * Past Due Period 3.
     C                     EXSR UPSUBR                     Past Due Period
     C                     ELSE
      * CASE: PAR.Days Past Due  USR LE PAR.A/R Aging Days - 4
     C           WN0030    IFLE WN0028                     *IF
      * Past Due Period 4.
     C                     EXSR UTSUBR                     Past Due Period
     C                     ELSE
      * CASE: *OTHERWISE
      * Past Due Period 5.
     C                     EXSR UXSUBR                     Past Due Period
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      *================================================================
     CSR         UCEXIT    ENDSR
      /EJECT
     CSR         UDSUBR    BEGSR
      *================================================================
      * Current.
      *================================================================
      * CLC Aging Bucket       IF
      * CASE: PAR.Invoice Suffix is Charge Backs
     C           BDCEST    IFEQ 'CB'                       *IF
      * Age Chargebacks.
     C                     EXSR UESUBR                     Age Chargebacks
     C                     ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Invoice Suffix is Invoices
      *   |- c2    : PAR.Invoice Suffix is Debit Memos
      *   '-
     C           BDCEST    IFEQ 'IN'                       *IF
     C           BDCEST    OREQ 'DM'                       *OR
      * Age Invoices and Debit Memos.
     C                     EXSR UFSUBR                     Age Invoices an
     C                     ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Invoice Suffix is Credit Memos
      *   |- c2    : PAR.Invoice Suffix is On Account Cash
      *   '-
     C           BDCEST    IFEQ 'CM'                       *IF
     C           BDCEST    OREQ 'OA'                       *OR
      * Accumulate Credit to Apply.
     C                     EXSR UGSUBR                     Accumulate Cred
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      *================================================================
     CSR         UDEXIT    ENDSR
      /EJECT
     CSR         UESUBR    BEGSR
      *================================================================
      * Age Chargebacks.
      *================================================================
     C                     ADD  BDBGVA    WN0011           Aging - CB    A
     C                     ADD  BDBGVA    WN0006           Aging - IN/DM/C
      *================================================================
     CSR         UEEXIT    ENDSR
      /EJECT
     CSR         UFSUBR    BEGSR
      *================================================================
      * Age Invoices and Debit Memos.
      *================================================================
     C                     ADD  BDBGVA    WN0024           Aging - IN/DM A
     C                     ADD  BDBGVA    WN0006           Aging - IN/DM/C
      *================================================================
     CSR         UFEXIT    ENDSR
      /EJECT
     CSR         UGSUBR    BEGSR
      *================================================================
      * Accumulate Credit to Apply.
      *================================================================
     C                     ADD  BDBGVA    WN0031           Aging - CM/OA A
      *================================================================
     CSR         UGEXIT    ENDSR
      /EJECT
     CSR         UHSUBR    BEGSR
      *================================================================
      * Past Due Period 1.
      *================================================================
      * CLC Aging Bucket       IF
      * CASE: PAR.Invoice Suffix is Charge Backs
     C           BDCEST    IFEQ 'CB'                       *IF
      * Age Chargebacks.
     C                     EXSR UISUBR                     Age Chargebacks
     C                     ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Invoice Suffix is Invoices
      *   |- c2    : PAR.Invoice Suffix is Debit Memos
      *   '-
     C           BDCEST    IFEQ 'IN'                       *IF
     C           BDCEST    OREQ 'DM'                       *OR
      * Age Invoices and Debit Memos.
     C                     EXSR UJSUBR                     Age Invoices an
     C                     ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Invoice Suffix is Credit Memos
      *   |- c2    : PAR.Invoice Suffix is On Account Cash
      *   '-
     C           BDCEST    IFEQ 'CM'                       *IF
     C           BDCEST    OREQ 'OA'                       *OR
      * Accumulate Credit to Apply.
     C                     EXSR UKSUBR                     Accumulate Cred
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      *================================================================
     CSR         UHEXIT    ENDSR
      /EJECT
     CSR         UISUBR    BEGSR
      *================================================================
      * Age Chargebacks.
      *================================================================
     C                     ADD  BDBGVA    WN0001           Aging - CB    A
     C                     ADD  BDBGVA    WN0007           Aging - IN/DM/C
      *================================================================
     CSR         UIEXIT    ENDSR
     C           UJ1UF     BEGSR
      *============================================================
      * UJ1UF - COMPRESS NAME/ADDRESS/COUNTRY INFORMATION
      *============================================================
      *
     C           *LIKE     DEFN YL0001    UUADTX
     C           *LIKE     DEFN YL0002    UUACNA
     C           *LIKE     DEFN YL0003    UUADNA
     C           *LIKE     DEFN YL0004    UUAENA
     C           *LIKE     DEFN YL0005    UUAJNA
     C           *LIKE     DEFN YL0006    UUEINA
     C           *LIKE     DEFN YL0007    UUBTTX- 1
     C           *LIKE     DEFN WUDATX    UUDATX
      * CLEAR OUTPUT ARRAY
     C                     MOVE *BLANK    UAD
     C                     Z-ADD1         UX      20
     C                     MOVELUUADTX    UAD,UX
     C                     ADD  1         UX
     C           UUACNA    IFNE *BLANK
     C                     MOVELUUACNA    UAD,UX
     C                     ADD  1         UX
     C                     END
     C           UUADNA    IFNE *BLANK
     C                     MOVELUUADNA    UAD,UX
     C                     ADD  1         UX
     C                     END
     C           UUAENA    IFNE *BLANK
     C                     MOVELUUAENA    UAD,UX
     C                     ADD  1         UX
     C                     END
     C                     MOVE *BLANK    UUCSTZ 34
     C                     MOVELUUAJNA    UUCST  23
     C                     MOVE UUEINA    UUCST
     C                     MOVELUUCST     UUCSTZ
     C                     MOVE UUBTTX    UUCSTZ
     C                     MOVELUUCSTZ    UAD,UX
     C           UUDATX    IFNE *BLANK
     C                     ADD  1         UX
     C                     MOVELUUDATX    UAD,UX
     C                     END
     C                     ENDSR
      /EJECT
     CSR         UJSUBR    BEGSR
      *================================================================
      * Age Invoices and Debit Memos.
      *================================================================
     C                     ADD  BDBGVA    WN0019           Aging - IN/DM A
     C                     ADD  BDBGVA    WN0007           Aging - IN/DM/C
      *================================================================
     CSR         UJEXIT    ENDSR
      /EJECT
     CSR         UKSUBR    BEGSR
      *================================================================
      * Accumulate Credit to Apply.
      *================================================================
     C                     ADD  BDBGVA    WN0031           Aging - CM/OA A
      *================================================================
     CSR         UKEXIT    ENDSR
      /EJECT
     CSR         ULSUBR    BEGSR
      *================================================================
      * Past Due Period 2.
      *================================================================
      * CLC Aging Bucket       IF
      * CASE: PAR.Invoice Suffix is Charge Backs
     C           BDCEST    IFEQ 'CB'                       *IF
      * Age Chargebacks.
     C                     EXSR UMSUBR                     Age Chargebacks
     C                     ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Invoice Suffix is Invoices
      *   |- c2    : PAR.Invoice Suffix is Debit Memos
      *   '-
     C           BDCEST    IFEQ 'IN'                       *IF
     C           BDCEST    OREQ 'DM'                       *OR
      * Age Invoices and Debit Memos.
     C                     EXSR UNSUBR                     Age Invoices an
     C                     ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Invoice Suffix is Credit Memos
      *   |- c2    : PAR.Invoice Suffix is On Account Cash
      *   '-
     C           BDCEST    IFEQ 'CM'                       *IF
     C           BDCEST    OREQ 'OA'                       *OR
      * Accumulate Credit to Apply.
     C                     EXSR UOSUBR                     Accumulate Cred
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      *================================================================
     CSR         ULEXIT    ENDSR
      /EJECT
     CSR         UMSUBR    BEGSR
      *================================================================
      * Age Chargebacks.
      *================================================================
     C                     ADD  BDBGVA    WN0002           Aging - CB    A
     C                     ADD  BDBGVA    WN0008           Aging - IN/DM/C
      *================================================================
     CSR         UMEXIT    ENDSR
      /EJECT
     CSR         UNSUBR    BEGSR
      *================================================================
      * Age Invoices and Debit Memos.
      *================================================================
     C                     ADD  BDBGVA    WN0020           Aging - IN/DM A
     C                     ADD  BDBGVA    WN0008           Aging - IN/DM/C
      *================================================================
     CSR         UNEXIT    ENDSR
      /EJECT
     CSR         UOSUBR    BEGSR
      *================================================================
      * Accumulate Credit to Apply.
      *================================================================
     C                     ADD  BDBGVA    WN0031           Aging - CM/OA A
      *================================================================
     CSR         UOEXIT    ENDSR
      /EJECT
     CSR         UPSUBR    BEGSR
      *================================================================
      * Past Due Period 3.
      *================================================================
      * CLC Aging Bucket       IF
      * CASE: PAR.Invoice Suffix is Charge Backs
     C           BDCEST    IFEQ 'CB'                       *IF
      * Age Chargebacks.
     C                     EXSR UQSUBR                     Age Chargebacks
     C                     ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Invoice Suffix is Invoices
      *   |- c2    : PAR.Invoice Suffix is Debit Memos
      *   '-
     C           BDCEST    IFEQ 'IN'                       *IF
     C           BDCEST    OREQ 'DM'                       *OR
      * Age Invoices and Debit Memos.
     C                     EXSR URSUBR                     Age Invoices an
     C                     ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Invoice Suffix is Credit Memos
      *   |- c2    : PAR.Invoice Suffix is On Account Cash
      *   '-
     C           BDCEST    IFEQ 'CM'                       *IF
     C           BDCEST    OREQ 'OA'                       *OR
      * Accumulate Credit to Apply.
     C                     EXSR USSUBR                     Accumulate Cred
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      *================================================================
     CSR         UPEXIT    ENDSR
      /EJECT
     CSR         UQSUBR    BEGSR
      *================================================================
      * Age Chargebacks.
      *================================================================
     C                     ADD  BDBGVA    WN0003           Aging - CB    A
     C                     ADD  BDBGVA    WN0009           Aging - IN/DM/C
      *================================================================
     CSR         UQEXIT    ENDSR
      /EJECT
     CSR         URSUBR    BEGSR
      *================================================================
      * Age Invoices and Debit Memos.
      *================================================================
     C                     ADD  BDBGVA    WN0021           Aging - IN/DM A
     C                     ADD  BDBGVA    WN0009           Aging - IN/DM/C
      *================================================================
     CSR         UREXIT    ENDSR
      /EJECT
     CSR         USSUBR    BEGSR
      *================================================================
      * Accumulate Credit to Apply.
      *================================================================
     C                     ADD  BDBGVA    WN0031           Aging - CM/OA A
      *================================================================
     CSR         USEXIT    ENDSR
      /EJECT
     CSR         UTSUBR    BEGSR
      *================================================================
      * Past Due Period 4.
      *================================================================
      * CLC Aging Bucket       IF
      * CASE: PAR.Invoice Suffix is Charge Backs
     C           BDCEST    IFEQ 'CB'                       *IF
      * Age Chargebacks.
     C                     EXSR UUSUBR                     Age Chargebacks
     C                     ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Invoice Suffix is Invoices
      *   |- c2    : PAR.Invoice Suffix is Debit Memos
      *   '-
     C           BDCEST    IFEQ 'IN'                       *IF
     C           BDCEST    OREQ 'DM'                       *OR
      * Age Invoices and Debit Memos.
     C                     EXSR UVSUBR                     Age Invoices an
     C                     ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Invoice Suffix is Credit Memos
      *   |- c2    : PAR.Invoice Suffix is On Account Cash
      *   '-
     C           BDCEST    IFEQ 'CM'                       *IF
     C           BDCEST    OREQ 'OA'                       *OR
      * Accumulate Credit to Apply.
     C                     EXSR UWSUBR                     Accumulate Cred
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      *================================================================
     CSR         UTEXIT    ENDSR
      /EJECT
     CSR         UUSUBR    BEGSR
      *================================================================
      * Age Chargebacks.
      *================================================================
     C                     ADD  BDBGVA    WN0004           Aging - CB    A
     C                     ADD  BDBGVA    WN0010           Aging - IN/DM/C
      *================================================================
     CSR         UUEXIT    ENDSR
      /EJECT
     CSR         UVSUBR    BEGSR
      *================================================================
      * Age Invoices and Debit Memos.
      *================================================================
     C                     ADD  BDBGVA    WN0022           Aging - IN/DM A
     C                     ADD  BDBGVA    WN0010           Aging - IN/DM/C
      *================================================================
     CSR         UVEXIT    ENDSR
      /EJECT
     CSR         UWSUBR    BEGSR
      *================================================================
      * Accumulate Credit to Apply.
      *================================================================
     C                     ADD  BDBGVA    WN0031           Aging - CM/OA A
      *================================================================
     CSR         UWEXIT    ENDSR
      /EJECT
     CSR         UXSUBR    BEGSR
      *================================================================
      * Past Due Period 5.
      *================================================================
      * CLC Aging Bucket       IF
      * CASE: PAR.Invoice Suffix is Charge Backs
     C           BDCEST    IFEQ 'CB'                       *IF
      * Age Chargebacks.
     C                     EXSR UYSUBR                     Age Chargebacks
     C                     ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Invoice Suffix is Invoices
      *   |- c2    : PAR.Invoice Suffix is Debit Memos
      *   '-
     C           BDCEST    IFEQ 'IN'                       *IF
     C           BDCEST    OREQ 'DM'                       *OR
      * Age Invoices and Debit Memos.
     C                     EXSR UZSUBR                     Age Invoices an
     C                     ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Invoice Suffix is Credit Memos
      *   |- c2    : PAR.Invoice Suffix is On Account Cash
      *   '-
     C           BDCEST    IFEQ 'CM'                       *IF
     C           BDCEST    OREQ 'OA'                       *OR
      * Accumulate Credit to Apply.
     C                     EXSR NASUBR                     Accumulate Cred
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      *================================================================
     CSR         UXEXIT    ENDSR
      /EJECT
     CSR         UYSUBR    BEGSR
      *================================================================
      * Age Chargebacks.
      *================================================================
     C                     ADD  BDBGVA    WN0005           Aging - CB    A
     C                     ADD  BDBGVA    WN0012           Aging - IN/DM/C
      *================================================================
     CSR         UYEXIT    ENDSR
      /EJECT
     CSR         UZSUBR    BEGSR
      *================================================================
      * Age Invoices and Debit Memos.
      *================================================================
     C                     ADD  BDBGVA    WN0023           Aging - IN/DM A
     C                     ADD  BDBGVA    WN0012           Aging - IN/DM/C
      *================================================================
     CSR         UZEXIT    ENDSR
      /EJECT
     CSR         XCVTA     BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C           XDINYY    SUB  1         XDWK1   80
     C           XDWK1     MULT 365.25    XDAY1   60
     C           XDWK1     IFGE 300
     C                     SUB  2         XDAY1
     C                     ELSE
     C           XDWK1     IFGE 100
     C                     SUB  1         XDAY1
     C                     END
     C                     END
      * (from the beginning of the year to the beginning of the month:)
     C           XDINMM    SUB  1         XDWK1
     C           XDINMM    IFLT 3
      *     ...+31*(MM-1) (for January-February) ...
     C                     MULT 31        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                     MULT 30        XDWK1
     C                     ADD  XDWK1     XDAY1
      *         ...-2 (for preceding February) ...
     C                     SUB  2         XDAY1
     C           XDINYY    IFNE 100
     C           XDINYY    ANDNE300
      *         ...+1 (for preceding February, if leap year) ...
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     ADD  1         XDAY1
     C                     END
     C                     END
     C           XDINMM    IFLT 8
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C           XDINMM    MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C           XDINMM    ADD  1         XDWK1
     C                     MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     END
     C                     END
      * ...+DD (days in the month up to the ending date)
     C                     ADD  XDINDD    XDAY1
      *================================================================
     CSR         XCVTAE    ENDSR
      /EJECT
     CSR         XDOWS     BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                     MOVEAXDCDW     YDOW
     C                     Z-ADD0         XDWSL   10
     C                     Z-ADD1         YY
     C           YY        DOWLE7
     C           YDOW,YY   IFEQ XDSEL
     C                     ADD  1         XDWSL
     C                     END
     C                     ADD  1         YY
     C                     END
      *================================================================
     CSR         XDOWSE    ENDSR
      /EJECT
     CSR         XDUDY     BEGSR
      *================================================================
      * Calculate duration, *DAYS
      *================================================================
     C           XDAY1     IFLT 1
     C           XDAY2     ORLT 1
     C                     Z-ADD0         XDURR
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     GOTO XDUDYE
     C                     END
     C           XDAY1     IFGE XDAY2
      * From date2 to date1
     C                     Z-ADDXDAY2     XABEG   60
     C                     Z-ADDXDAY1     XAEND   60
     C                     ELSE
      * From date1 to date2
     C                     Z-ADDXDAY1     XABEG   60
     C                     Z-ADDXDAY2     XAEND   60
     C                     END
     C           XDWSL     IFEQ 0
      * None days of week selected
     C                     Z-ADD0         XDURR
     C                     GOTO XDUDYC
     C                     END
     C           XAEND     SUB  XABEG     XDURR   80
     C           XDWSL     IFEQ 7
      * All days of week selected
     C                     GOTO XDUDYC
     C                     END
      * Some days of week selected
     C                     DIV  7         XDURR
     C                     MVR            XDLSW   10
     C                     MULT XDWSL     XDURR
     C           XDLSW     IFNE 0
      * Determine day of week of the beginning date
     C           XABEG     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
      * Loop: Increment the date by the last week
     C           XDLSW     DOWGT0
      * Increment the day of week
     C                     ADD  1         YY
     C                     SUB  1         XDLSW
      * Put day of week into the range 1-7
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     END
      * Selected day of the last week has been processed
     C           YDOW,YY   IFEQ XDSEL
      * Increment duration
     C                     ADD  1         XDURR
     C                     END
      * End of loop
     C                     END
     C                     END
     C           XDUDYC    TAG
     C           XDURR     IFEQ 0
      * Return Code: Unable to calculate duration
     C                     MOVEL'Y2U0060' W0RTN   7
     C                     ELSE
     C                     MOVEL*BLANK    W0RTN   7
     C                     END
      *================================================================
     CSR         XDUDYE    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    BDAIC3           Company Number
     C                     MOVEL*LOVAL    BDANC7           A/R Customer Nu
     C                     MOVEL*LOVAL    BDCONB           Invoice Number
     C                     MOVEL*LOVAL    BDCEST           Invoice Suffix
      * Define work field Country Description
     C                     MOVEL*BLANK    WUDATX 30
      * Define work field TXT field not needed
     C                     MOVEL*BLANK    WUG0TX 20
      * Define work field USR Country Description
     C                     MOVEL*BLANK    WUKSTX 30
      * Define work field CD7 Ext Numeric Key
     C                     MOVEL*BLANK    WUEOCD  7
      * Define work field Age $ Due-Current-W/O CB
     C                     Z-ADD*ZERO     WUVIVA 112
      * Define work field Age $ Due-Aging 1-W/O CB
     C                     Z-ADD*ZERO     WUVJVA 112
      * Define work field Age $ Due-Aging 2-W/O CB
     C                     Z-ADD*ZERO     WUVKVA 112
      * Define work field Age $ Due-Aging 3-W/O CB
     C                     Z-ADD*ZERO     WUVLVA 112
      * Define work field Age $ Due-Aging 4-W/O CB
     C                     Z-ADD*ZERO     WUVMVA 112
      * Define work field Age $ Due-Aging 5-W/O CB
     C                     Z-ADD*ZERO     WUVNVA 112
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    W0WD05 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD04 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD03 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD02 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD01 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD00 177       *Synon (17,7) w
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C                     MOVEL'N'       W0PMT   1
      * Define local variables for subroutine SFRVGN.
     C                     Z-ADD*ZERO     WL0001  30
     C                     Z-ADD*ZERO     WL0002  30
     C                     Z-ADD*ZERO     WL0003  30
     C                     Z-ADD*ZERO     WL0004  30
     C                     Z-ADD*ZERO     WL0005  30
      * Define local work field Customer Name
     C                     MOVEL*BLANK    YL0001 30
      * Define local work field Address Line 1
     C                     MOVEL*BLANK    YL0002 30
      * Define local work field Address Line 2
     C                     MOVEL*BLANK    YL0003 30
      * Define local work field Address Line 3
     C                     MOVEL*BLANK    YL0004 30
      * Define local work field City
     C                     MOVEL*BLANK    YL0005 20
      * Define local work field State Code
     C                     MOVEL*BLANK    YL0006  2
      * Define local work field Zip/Postal Code
     C                     MOVEL*BLANK    YL0007 11
      * Define local work field Country Code
     C                     MOVEL*BLANK    YL0008  6
      * Define local work field Credit Contact Telephone
     C                     MOVEL*BLANK    YL0009 25
      * Define local work field Credit Contact Bus. Title
     C                     MOVEL*BLANK    YL0010 30
      * Define local work field Remaining Balance Due
     C                     Z-ADD*ZERO     YL0011 112
     C                     MOVEL##PGM     $APGM
     C                     MOVEL*BLANK    W0PFM   1
     C                     Z-ADD*ZERO     @$WRK   40
     C                     Z-ADD*ZERO     @$HDL   40
     C                     Z-ADD*ZERO     @$CLN
     C                     Z-ADD*ZERO     @$PGN
      * Adjust page length and overflow as necessary
     C           @$PGL     SUB  2         W0PGL   40
     C           @$OFL     IFGE W0PGL
     C           W0PGL     SUB  2         W0OFL   40
     C                     ELSE
     C                     Z-ADD@$OFL     W0OFL
     C                     END
      * Clear overflow indicator
     C                     SETOF                     97
      * Request new page
     C                     MOVEL'Y'       W0NEWP  1
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      *================================================================
     CSR         ZZEXIT    ENDSR
