      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Triumph Foods
      * PROGRAM:     TF346
      * TITLE:       Margin: Workfile: Margin Adjustment Recap Report
      * PROGRAMMER:  LeAnne Ramsey
      * CREATED:     12/12/06
      *
      * FUNCTION:  Batch program to create 2 workfiles (header and detail) that bring
      *            the Mix Summary file and Volume Summary file together for the report
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 02/14/07  LeAnne Ramsey
      *           Recompile only. New "other cost" fields were added to
      *           the Mix Summary and Volume Summary workfiles.
      *
      * 03/15/07  LeAnne Ramsey
      *           The users now want MIX to be based on "production" data instead of
      *           "sales" data. In case they decide to revert back to "sales" data in
      *           the future, we have kept all the Mix "sales" logic intact and added
      *           new logic/fields in our processing for "production" data. To control
      *           processing/reporting, we are adding an LDA field that will hold the
      *           value to indicate Sales vs Production. So, when this Recap is generated
      *           from the 'Margin Close' it will be over Production Data. But, for the
      *           on-demand version we will let them select Sales or Production.
      *
      * 05/02/07  LeAnne Ramsey
      *           Recompile only. Synon file PPAMREP was changed.
      *
      * 06/21/07  LeAnne Ramsey
      *           Recompile only. Field "Item Type Code" added to TFP315.
      *
      * 07/05/07  LeAnne Ramsey
      *           Changed report layout:
      *             1) we now only have "payment" columns...not 'SBF pays TF' and
      *                'TF pays SBF' columns
      *             2) added new columns resulting from new CoOwned stuff:
      *                    a) Total Margin Adjustment
      *                    b) CoOwned Transfer Product Cost
      *                    c) Total Payment
      *
      * 09/03/08  LeAnne Ramsey
      *           Removed LDSPCD-Sales/Production from LDA. "Sales" is no longer a
      *           choice. All logic is now based only on Produced values.
      *
      * 03/30/09  LeAnne Ramsey
      *           Tom Dye has requested that the "CoOwned Transfer Cost Amount" on
      *           TF646-Margin Adj Recap Report be broken out into 2 columns: SBD and TF.
      *           So, we added two new fields and logic to workfile TFP3460.
      *
      * 09/05/12  LeAnne Ramsey (E2243)
      *           Recompile only.
      *           Per Damon G. we must now write more/special records to TFP014 for the
      *           Items that receive lbs/dollars from Skirt Meat Items!! So, I had to add
      *           a new field to TFP014:
      *                         ADSMSFL-Skirt Meat Split Flag
      *
      * 01/21/21  ISE            TSN593
      *           Replaced *loval with *start
      *
      * 02/08/22  Danny Nguyen   - DO2484 - WI479 STF Variance Reporting
      *           Recompile only due to TFP014 DBF change. Added the following fields:
      *             ADXPULB  - STF PRODUCED LBS
      *             ADXPUSLB - STF PRODUCED START WEIGHT
      *             ADXYPC   - STF STD YIELD %
      *             ADXPMPPC - STF PUMP %
      *             ADXSLLB  - STF SOLD LBS
      *             ADXSLSLB - STF SOLD START WEIGHT
      *          ‚The 6 new STF fields will NOT be added to TFP318 file at this time.
      *
      * W105621 RMC 10/10/2022 INCREASE FIELD SIZES TO HANDLE PRICES > 999.99
      *         COPY @@SPU1MG TO  @@SPU1MG10 SIZE 10.6  -> FIELD TFP014.ADSPU1MG
      *         COPY @@TPU1MG TO  @@TPU1MG10 SIZE 10.6  -> FIELD TFP014.ADTPU1MG
      *         COPY @@SSL1MG TO  @@SSL1MG10 SIZE 10.6  -> FIELD TFP014.ADSSL1MG
      *         COPY @@SSL2MG TO  @@SSL2MG10 SIZE 10.6  -> FIELD TFP014.ADSSL2MG
      *         COPY @@TSL1MG TO  @@TSL1MG10 SIZE 10.6  -> FIELD TFP014.ADTSL1MG
      *         COPY @@TSL2MG TO  @@TSL2MG10 SIZE 10.6  -> FIELD TFP014.ADTSL2MG
      * 05/07/24  Santosh Patil P310149 - Field length is increased
      *           in TFP014, TFP315. Function is recompiled only.
      *
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fome8rel0  if   e           k disk
      *    Product type
      *
      *
     Fppamrel1  if   e           k disk
      *    TF Classification
      *
      *
     Ftfl014b   if   e           k disk
      *    Margin adjustment transaction detail (records selected with open query)
      *
      *
     Ftfp315    if   e           k disk
      *    Mix summary (records selected/keyed with open query)
      *
      *
     Ftfp318    if   e           k disk
      *    Volume Summary (records selected/keyed with open query)
      *
      *
     Ftfp346    o    e           k disk
      *    Workfile: Header
      *
      *
     Ftfp3460   uf a e           k disk
      *    Workfile: Detail
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Control fields
      *
     D first           s              1    inz('Y')
      *
     D svistycd        s                   like(msistycd)
     D svtfclcd        s                   like(mstfclcd)
     D svmixgrp        s                   like(msmixgrp)
      *
      *
      * Workfields
      *
     D wkalph          s              3
     D wkam            s                   like(msslmixam)
     D wkvolam         s                   like(msslmixam)
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      *****************************************************************************************
      * MAINLINE
      *****************************************************************************************
      *
      * Step 1: Mix Summary
      * Step 2: Volume Summary
      * Step 3: Header
      *
     C                   exsr      $mix
     C                   exsr      $vol
     C                   exsr      $header
      *
      * EOF processing
     C                   seton                                        lr
      /EJECT
      *---------------------------------------------------------------
      * Step 1: Mix Summary
      *---------------------------------------------------------------
      *
     C     $mix          begsr
      *
      * Read each record selected by the open query from Mix Summary file.
      * Accumulate "pay" values and write a record each time that you break on:
      *  1) Item structure type code
      *  2) TF classification code
      *  3) Mix group
      *
     C                   move      yes           first
      *
593  C*    *loval        setll     tfp315
593  C     *start        setll     tfp315
      *
     C                   dou       *in91 = *on                                  Do mix
     C                   read      tfp315                                 91
     C                   if        *in91 = *off                                 If not EOF
      *
     C                   select
     C                   when      first = yes
     C                   move      no            first
     C                   z-add     msistycd      svistycd
     C                   move      mstfclcd      svtfclcd
     C                   move      msmixgrp      svmixgrp
      *
     C                   when      msistycd <> svistycd or
     C                             mstfclcd <> svtfclcd or
     C                             msmixgrp <> svmixgrp
     C                   exsr      $wrtmix
     C                   endsl
      * Accumulate
     C                   add       mspumixam     w2mixam
     C                   add       msstrpam      w2strpam
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do mix
      *
      * Write out last 'Mix' record
      *
     C                   if        first = no
     C                   exsr      $wrtmix
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Write a detail workfile record for the "mix" logic
      *---------------------------------------------------------------
      *
     C     $wrtmix       begsr
      *
      * The users want the 'CoOwned Transfer Cost Amount' broken out by
      * Producing Company. We have to go back to the Margin Adjustment Transaction
      * Detail file to get this.
      *
     C                   exsr      $coown
      *
      * Retrieve/concatenate a TF Classification "description"
      *
     C                   exsr      $w2desc
      *
     C                   z-add     svistycd      w2istycd
     C                   move      svtfclcd      w2tfclcd
     C                   move      svmixgrp      w2mixgrp
      *
      *
     C                   write     w2rec
     C                   clear                   w2rec
      *
     C                   z-add     msistycd      svistycd
     C                   move      mstfclcd      svtfclcd
     C                   move      msmixgrp      svmixgrp
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------------------------------
      * Retriev/sum CoOwned Values by Producing Company
      *---------------------------------------------------------------------------------------
      *
      * An open query has aleady selected CoOwned records in the Date Range.
      * So, retrieve/sum values using a key of:
      *     TF Classification Code
      *     Item Structure Type Code
      *     Mix Group
      *
     C     $coown        begsr
      *
     C     key02         setll     tfl014b
      *
     C                   dou       *in93 = *on                                  Do co-own
     C     key02         reade     tfl014b                                93
     C                   if        *in93 = *off                                 If not EOF
      *
     C                   select
     C                   when      adprdcmp = 'SBF'
     C                   add       adstrpam      w2scoam
      *
     C                   when      adprdcmp = 'TF '
     C                   add       adstrpam      w2tcoam
     C                   endsl
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do co-own
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Step 2: Volume
      *---------------------------------------------------------------
      *
     C     $vol          begsr
      *
      * Read each record selected by the open query from the Volume Summary file.
      * Accumulate "pay" values and write/update a record each time that you break on:
      *  1) Item structure type code or
      *  2) TF classification code or
      *
     C                   move      yes           first
      *
593  C*    *loval        setll     tfp318
593  C     *start        setll     tfp318
      *
     C                   dou       *in91 = *on                                  Do volume
     C                   read      tfp318                                 91
     C                   if        *in91 = *off                                 If not EOF
      *
     C                   select
     C                   when      first = yes
     C                   move      no            first
     C                   z-add     vsistycd      svistycd
     C                   move      vstfclcd      svtfclcd
      *
     C                   when      vsistycd <> svistycd or
     C                             vstfclcd <> svtfclcd
     C                   exsr      $wrtvol
     C                   endsl
      *
      * We have 2 "pay fields" in the Volume Summary files. We will populate
      * a single field for this report using the logic:
      *    If field "SBF pays TF" is not zero,
      *        reverse the sign and use this field for the "payment"
      *    else
      *        use the "TF pays SBF" field without reversing the sign
      *
     C                   if        vstvolam <> 0
     C                   z-sub     vstvolam      wkam
     C                   else
     C                   z-add     vssvolam      wkam
     C                   endif
      *
      * Accumulate
     C                   add       wkam          wkvolam
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do volume
      *
      * Write out last "volume" record
      *
     C                   if        first = no
     C                   exsr      $wrtvol
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Update/write detail workfile record for the "volume" logic
      *---------------------------------------------------------------
      *
     C     $wrtvol       begsr
      *
      * If you already have a record, update it; otherwise, write a record.
      *
     C     key01         chain     tfp3460                            92
     C                   if        *in92 = *off                                 If hit
     C                   z-add     wkvolam       w2volam
     C                   update    w2rec
     C                   else
      *
      * Retreive/concatenate a TF Classification "description"
      *
     C                   exsr      $w2desc
      *
     C                   z-add     svistycd      w2istycd
     C                   move      svtfclcd      w2tfclcd
     C                   move      *blank        w2mixgrp
      *
     C                   z-add     wkvolam       w2volam
      *
     C                   write     w2rec
     C                   clear                   w2rec
     C                   endif                                                  If hit
      *
      * Clear accumulators
      *
     C                   z-add     0             wkvolam
      *
      * Set save fields.
     C                   z-add     vsistycd      svistycd
     C                   move      vstfclcd      svtfclcd
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Description: TF Classification
      *---------------------------------------------------------------
      *
      * Retrieve/concatenate a TF Classification "description"
      *
     C     $w2desc       begsr
      *
     C     svtfclcd      chain     ppamrel1                           92
     C                   if        *in92 = *on                                  If no hit
     C                   movel(p)  svtfclcd      w2desc
     C                   else
      *
     C                   if        svmixgrp = *blank                            If no mix group
     C                   eval      w2desc = %trim(svtfclcd) + '-'
     C                             + %trim(amq0na)
     C                   else
      *
     C                   eval      w2desc = %trim(svtfclcd) + '-'
     C                             + %trim(amq0na) + '   Mix Group=' +
     C                             svmixgrp
     C                   endif                                                  If no mix group
     C                   endif                                                  If no hit
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Step 3: Header
      *---------------------------------------------------------------
      *
     C     $header       begsr
      *
     C                   move      yes           first
      *
593  C*    *loval        setll     tfp3460
593  C     *start        setll     tfp3460
      *
     C                   dou       *in91 = *on                                  Do header
     C                   read      tfp3460                                91
     C                   if        *in91 = *off                                 If not EOF
      *
     C                   select
     C                   when      first = yes
     C                   move      no            first
     C                   z-add     w2istycd      svistycd
      *
     C                   when      w2istycd <> svistycd
     C                   exsr      $wrthdr
     C                   endsl
      *
      * Update the detail record.
      *
     C     w2mixam       add       w2volam       w2adjam
     C     w2adjam       add       w2strpam      w2payam
     C                   update    w2rec
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do header
      *
      * Write out last header record
      *
     C                   if        first = no
     C                   exsr      $wrthdr
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Write a "header"  workfile record
      *---------------------------------------------------------------
      *
     C     $wrthdr       begsr
      *
     C                   z-add     svistycd      w1istycd
      *
      * Retrieve/concatentate a "description"
      *
     C                   move      svistycd      wkalph
      *
     C     svistycd      chain     ome8rel0                           92
     C                   if        *in92 = *off
     C                   eval      w1desc = %trim(e8dctx) + '-'
     C                                      + %trim(wkalph)
     C                   else
     C                   movel(p)  wkalph        w1desc
     C                   endif
      *
     C                   write     w1rec
     C                   clear                   w1rec
      *
     C                   z-add     w2istycd      svistycd
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    svistycd
     C                   kfld                    svtfclcd
      *
     C     key02         klist
     C                   kfld                    svtfclcd
     C                   kfld                    svistycd
     C                   kfld                    svmixgrp
      *
     C                   endsr
      /EJECT
