// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PBPTDFR
// ?Date: 14.08.2025 Time: 03:48:52
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Set Inter. Access  IF) TYPE(EXCINTFUN)                     AC1144606;
PARAMETER('OMS');
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.Allow_Multi_Company);
PARAMETER(PAR.Default_Printer);
PARAMETER(PAR.Salesperson_Code);
{
 //?Execute internal function

 // PAR.User Profile Name = JOB.*USER
 PAR.User_Profile_Name = JOB.*USER;

 EXECUTE FUNCTION(VAL User/Application   IF) TYPE(EXCINTFUN)                     AC1144188;
 PARAMETER(PAR.User_Profile_Name);
 PARAMETER(PAR.Application_Code);
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.Allow_Multi_Company);
 PARAMETER(PAR.Default_Printer);
 PARAMETER(PAR.Salesperson_Code);
 {
  //?Execute internal function

  //?RMC 5/11/09 Rtv default company from user profile --
  //?  Override user code model company if it exists
  EXECUTE FUNCTION(RTV Program Setup w/Co RT) TYPE(RTVOBJ) FILE(CADRREP)          AC1935572;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Allow_Multi_Company);
  PARAMETER(PAR.Default_Printer);
  PARAMETER(PAR.Salesperson_Code);
  PARAMETER(LCL.Company_Number);
  PARAMETER(PAR.User_Code_Model);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?User Profile Record Not found
  CASE;

  // IF PGM.*Return code is *Record does not exist
  IF PGM.*Return_code = 'Y2U0005';

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  CASE;

  // IF PAR.User Code Model is equal to blank
  IF PAR.User_Code_Model = *BLANK;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Code_Model);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  ENDIF;

  // PAR.Warehouse Code = LCL.Warehouse Code
  PAR.Warehouse_Code = LCL.Warehouse_Code;

  //?Return code when not normal for Application Profile
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  //?Return code when not normal for Application Profile
  // IF *OTHERWISE
  IF *OTHERWISE;

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  //?Override company with User profile control's company if found
  CASE;

  // IF LCL.Company Number is not equal to zero
  IF LCL.Company_Number <> *ZERO;

  // PAR.Company Number = LCL.Company Number
  PAR.Company_Number = LCL.Company_Number;

  //?Get prod warehouse, if the appl got a warehouse
  CASE;

  // IF LCL.Warehouse Code is Not Blanks
  IF LCL.Warehouse_Code <> *BLANK;

  // Call program RTV Prod Whse for Co  XF.
  CALL PROGRAM(RTV Prod Whse for Co  XF) ('PNKDXFR');
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(LCL.Company_Number);

  ENDIF;

  ENDIF;

 }

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


//?USER: Initialize subfile record from DBF record

CASE;

// IF RCD.PO107-Prod/Serv ID is Not Blanks
IF RCD.PO107_Prod_Serv_ID <> *BLANK;

// PGM.*Record selected = CND.*YES
PGM.*Record_selected = 'Y';

MOVE *ALL (To: RCD From: DB1);

// RCD.CIR Resource No = DB1.PO109-Prod/Service ID
RCD.CIR_Resource_No = DB1.PO109_Prod_Service_ID;

//?* Convert order number to 7.0 numeric
// LCL.USR Quantity, 9.0 = CVTVAR(CTL.EDI SURROGATE NUMBER)
LCL.USR_Quantity_9_0 = CVTVAR(CTL.EDI_SURROGATE_NUMBER);

// LCL.USR Order Number = LCL.USR Quantity, 9.0
LCL.USR_Order_Number = LCL.USR_Quantity_9_0;

//?* Convert 14 char item code to 7.0 numeric            E004140
// PAR.Text usr 14 = RCD.PO107-Prod/Serv ID
PAR.Text_usr_14 = RCD.PO107_Prod_Serv_ID;

// Execute function RTV Rt Adj EDI item    US.
EXECUTE FUNCTION(RTV Rt Adj EDI item    US) TYPE(EXCUSRSRC) ('PBRVUFR');
PARAMETER(PAR.Text_usr_14);
PARAMETER(PAR.Text_USR_7);
{
 E                    A1         14  1
 E                    A2          7  1
 C* MOVE 14 CHAR PARM INTO ARRAY
 C                     MOVEA#1O8T1    A1
 C                     MOVEA*BLANKS   A2
 C                     Z-ADD14        C1      20
 C                     Z-ADD7         C2      10
 C           C1        DOWGT0
 C           A1,C1     IFNE ' '
 C           C2        IFGT 0
 C                     MOVE A1,C1     A2,C2
 C           C2        SUB  1         C2
 C                     ENDIF
 C                     ENDIF
 C           C1        SUB  1         C1
 C                     ENDDO
 C* MOVE 7 CHAR ARRAY RESULT INTO PARM
 C                     MOVEAA2        P3Y8TX
}


// LCL.Item Code Number 7.0  USR = CVTVAR(PAR.Text USR 7)
LCL.Item_Code_Number_7_0_USR = CVTVAR(PAR.Text_USR_7);

//?* Rtv Ship To Cust                                    E004140
EXECUTE FUNCTION(RTV Ship Cust,Bill Tp RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC1700188;
PARAMETER(LCL.Company_Number);
PARAMETER(LCL.USR_Order_Number);
PARAMETER(LCL.Ship_To_Customer);
PARAMETER(LCL.Billing_Activity_Type);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?* Save Item X-Ref & GTIN for later testing            E004140
// LCL.PO109-Prod/Service ID = RCD.PO109-Prod/Service ID
LCL.PO109_Prod_Service_ID = RCD.PO109_Prod_Service_ID;

// LCL.GTIN                USER = RCD.PO101-Assigned Item Nbr
LCL.GTIN_USER = RCD.PO101_Assigned_Item_Nbr;

ENDIF;

//?USER: Process subfile record (Pre-confirm)

//?8=Edit GTIN                                           E004140
CASE;

// IF RCD.*SFLSEL is Option 8
IF RCD.*SFLSEL = '8'/'8';

//?* Convert 14 char item code to 7.0 numeric
// PAR.Text usr 14 = RCD.PO107-Prod/Serv ID
PAR.Text_usr_14 = RCD.PO107_Prod_Serv_ID;

// Execute function RTV Rt Adj EDI item    US.
EXECUTE FUNCTION(RTV Rt Adj EDI item    US) TYPE(EXCUSRSRC) ('PBRVUFR');
PARAMETER(PAR.Text_usr_14);
PARAMETER(PAR.Text_USR_7);
{
 E                    A1         14  1
 E                    A2          7  1
 C* MOVE 14 CHAR PARM INTO ARRAY
 C                     MOVEA#1O8T1    A1
 C                     MOVEA*BLANKS   A2
 C                     Z-ADD14        C1      20
 C                     Z-ADD7         C2      10
 C           C1        DOWGT0
 C           A1,C1     IFNE ' '
 C           C2        IFGT 0
 C                     MOVE A1,C1     A2,C2
 C           C2        SUB  1         C2
 C                     ENDIF
 C                     ENDIF
 C           C1        SUB  1         C1
 C                     ENDDO
 C* MOVE 7 CHAR ARRAY RESULT INTO PARM
 C                     MOVEAA2        P3Y8TX
}


// LCL.Item Code Number 7.0  USR = CVTVAR(PAR.Text USR 7)
LCL.Item_Code_Number_7_0_USR = CVTVAR(PAR.Text_USR_7);

// LCL.PO101-Assigned Item Nbr = RCD.PO101-Assigned Item Nbr
LCL.PO101_Assigned_Item_Nbr = RCD.PO101_Assigned_Item_Nbr;

// Call program SEL GTIN by Item      SR.
CALL PROGRAM(SEL GTIN by Item      SR) ('PBR0SRR');
PARAMETER(LCL.Item_Code_Number_7_0_USR);
PARAMETER(LCL.PO101_Assigned_Item_Nbr);
PARAMETER(LCL.IDE_Forecast_in_DP);

CASE;

// IF LCL.PO101-Assigned Item Nbr is Blanks
IF LCL.PO101_Assigned_Item_Nbr = *BLANK;

// Send information message - 'GTIN was not selected or does not exist for this item'
MESSAGE(USR4810 *INFO);
MSGPARM(RCD.*SFLSEL);

// IF *OTHERWISE
IF *OTHERWISE;

// RCD.PO101-Assigned Item Nbr = LCL.PO101-Assigned Item Nbr
RCD.PO101_Assigned_Item_Nbr = LCL.PO101_Assigned_Item_Nbr;

EXECUTE FUNCTION(Chg EDI PO Ack Dtl    CH) TYPE(CHGOBJ) FILE(ECP033)            AC1895044;
PARAMETER(RCD.EDI_SURROGATE_NUMBER);
PARAMETER(RCD.IT101_PO_LINE_ITEM_ID);
PARAMETER(RCD.PO101_Assigned_Item_Nbr);
PARAMETER(RCD.PO102_Qty_to_be_Shipped);
PARAMETER(RCD.PO103_Basis_for_Measure);
PARAMETER(RCD.PO104_Unit_Price);
PARAMETER(RCD.PO105_Basis_Unit_Pr_Cde);
PARAMETER(RCD.PO106_Prod_ID_Qualifier);
PARAMETER(RCD.PO107_Prod_Serv_ID);
PARAMETER(RCD.PO108_Prod_Serv_ID_Qualif);
PARAMETER(RCD.PO109_Prod_Service_ID);
PARAMETER(RCD.PID01_ITEM_DESC_TYPE);
PARAMETER(RCD.PID05_ITEM_DESCRIPTION);
PARAMETER(RCD.POA_Catch_Weight);
PARAMETER(RCD.POA_unused_status_3);
PARAMETER(RCD.POA_unused_Date_1);
PARAMETER(RCD.POA_Unit_Weight);
PARAMETER(RCD.POA_Unused_Text_1);
PARAMETER(RCD.POA_Unused_Code_2);
PARAMETER(RCD.PO116_Prod_Serv_ID_Qualif);
PARAMETER(RCD.PO117_Prod_Service_ID);
PARAMETER(RCD.PO118_Prod_Serv_ID_Qualif);
PARAMETER(RCD.PO119_Prod_Service_ID);
PARAMETER(RCD.PO120_Prod_Serv_ID_Qualif);
PARAMETER(RCD.PO121_Prod_Service_ID);
PARAMETER(RCD.PO122_Prod_Serv_ID_Qualif);
PARAMETER(RCD.PO123_Prod_Service_ID);
PARAMETER(RCD.PO124_Prod_Serv_ID_Qualif);
PARAMETER(RCD.PO125_Prod_Service_ID);
PARAMETER(RCD.PO301_Change_Reason_Code);
PARAMETER(RCD.PO306_Quantity_Shipped);
PARAMETER(RCD.PO307_UOM_Basis_for_Meas);
PARAMETER(RCD.PO308_Shipped_Description);
PARAMETER(RCD.POA_Unused_Sts_2_6);
PARAMETER(RCD.POA_Units_Shipped);
PARAMETER(RCD.POA_UOM_unused_sts_2);
PARAMETER(RCD.POA_Unused_Sts_2_1);
PARAMETER(RCD.POA_Unused_Sts_2_2);
PARAMETER(RCD.POA_Unused_Sts_2_3);
PARAMETER(RCD.POA_Unused_Sts_2_4);
PARAMETER(RCD.POA_Unused_Sts_2_5);
PARAMETER(RCD.POA_Unused_Sts_3_1);
PARAMETER(RCD.POA_Unused_Sts_3_2);
PARAMETER(RCD.POA_Unused_Sts_4_1);
PARAMETER(RCD.POA_Unused_Sts_4_2);
PARAMETER(RCD.POA_Unused_Sts_4_3);
PARAMETER(RCD.POA_Unused_Text_25_1);
PARAMETER(RCD.POA_Unused_Text_25_2);
PARAMETER(RCD.POA_Unused_Text_50_1);
PARAMETER(RCD.POA_Unused_Text_50_2);
PARAMETER(RCD.POA_Unused_Text_80_1);
PARAMETER(RCD.POA_Unused_Text_80_2);
PARAMETER(RCD.POA_Unused_Qty_11_2_1);
PARAMETER(RCD.POA_Unused_Qty_11_2_2);
PARAMETER(RCD.POA_Unused_Qty_11_2_3);
PARAMETER(RCD.POA_Unused_Qty_11_2_4);
PARAMETER(RCD.POA_Unused_Qty_11_2_5);
PARAMETER(RCD.POA_Unused_Qty_11_4_1);
PARAMETER(RCD.POA_Unused_Qty_11_4_2);
PARAMETER(RCD.POA_Unused_Qty_11_4_3);
PARAMETER(RCD.POA_Unused_Qty_11_4_4);
PARAMETER(RCD.POA_Unused_Qty_11_4_5);
PARAMETER(RCD.POA_Unused_Amount_11_0_1);
PARAMETER(RCD.POA_Unused_Amount_11_0_2);
PARAMETER(RCD.POA_Unused_Amount_11_2_1);
PARAMETER(RCD.POA_Unused_Amount_11_2_2);
PARAMETER(RCD.POA_Unused_Amount_11_2_3);
PARAMETER(RCD.POA_Unused_Amount_11_2_4);
PARAMETER(RCD.POA_Unused_Amount_6_0_1);
PARAMETER(RCD.POA_Unused_Amount_6_0_2);
PARAMETER(RCD.POA_Unused_Amount_9_0_1);
PARAMETER(RCD.POA_Unused_Amount_9_0_2);

ENDIF;

ENDIF;

//?9=Select SBD Item X-Reference                         E004140
CASE;

// IF RCD.*SFLSEL is Option 9
IF RCD.*SFLSEL = '9'/'9';

//?* Convert 14 char item code to 7.0 numeric
// PAR.Text usr 14 = RCD.PO107-Prod/Serv ID
PAR.Text_usr_14 = RCD.PO107_Prod_Serv_ID;

// Execute function RTV Rt Adj EDI item    US.
EXECUTE FUNCTION(RTV Rt Adj EDI item    US) TYPE(EXCUSRSRC) ('PBRVUFR');
PARAMETER(PAR.Text_usr_14);
PARAMETER(PAR.Text_USR_7);
{
 E                    A1         14  1
 E                    A2          7  1
 C* MOVE 14 CHAR PARM INTO ARRAY
 C                     MOVEA#1O8T1    A1
 C                     MOVEA*BLANKS   A2
 C                     Z-ADD14        C1      20
 C                     Z-ADD7         C2      10
 C           C1        DOWGT0
 C           A1,C1     IFNE ' '
 C           C2        IFGT 0
 C                     MOVE A1,C1     A2,C2
 C           C2        SUB  1         C2
 C                     ENDIF
 C                     ENDIF
 C           C1        SUB  1         C1
 C                     ENDDO
 C* MOVE 7 CHAR ARRAY RESULT INTO PARM
 C                     MOVEAA2        P3Y8TX
}


// LCL.Item Code Number 7.0  USR = CVTVAR(PAR.Text USR 7)
LCL.Item_Code_Number_7_0_USR = CVTVAR(PAR.Text_USR_7);

// LCL.CIR Resource No = RCD.CIR Resource No
LCL.CIR_Resource_No = RCD.CIR_Resource_No;

// Call program SEL Cust Item X-REF   SL.
CALL PROGRAM(SEL Cust Item X-REF   SL) ('POMWSRR');
PARAMETER(LCL.Ship_To_Customer);
PARAMETER(LCL.Item_Code_Number_7_0_USR);
PARAMETER(LCL.CIR_Resource_No);

CASE;

// IF LCL.CIR Resource No is Not Entered
IF LCL.CIR_Resource_No = *BLANK;

// Send information message - 'Item X-Reference was not selected or does not exist'
MESSAGE(USR4811 *INFO);
MSGPARM(RCD.CIR_Resource_No);

// IF *OTHERWISE
IF *OTHERWISE;

// RCD.CIR Resource No = LCL.CIR Resource No
RCD.CIR_Resource_No = LCL.CIR_Resource_No;

EXECUTE FUNCTION(Chg EDI PO Ack Dtl    CH) TYPE(CHGOBJ) FILE(ECP033)            AC1895044;
PARAMETER(RCD.EDI_SURROGATE_NUMBER);
PARAMETER(RCD.IT101_PO_LINE_ITEM_ID);
PARAMETER(RCD.PO101_Assigned_Item_Nbr);
PARAMETER(RCD.PO102_Qty_to_be_Shipped);
PARAMETER(RCD.PO103_Basis_for_Measure);
PARAMETER(RCD.PO104_Unit_Price);
PARAMETER(RCD.PO105_Basis_Unit_Pr_Cde);
PARAMETER(RCD.PO106_Prod_ID_Qualifier);
PARAMETER(RCD.PO107_Prod_Serv_ID);
PARAMETER(RCD.PO108_Prod_Serv_ID_Qualif);
PARAMETER(RCD.CIR_Resource_No);
PARAMETER(RCD.PID01_ITEM_DESC_TYPE);
PARAMETER(RCD.PID05_ITEM_DESCRIPTION);
PARAMETER(RCD.POA_Catch_Weight);
PARAMETER(RCD.POA_unused_status_3);
PARAMETER(RCD.POA_unused_Date_1);
PARAMETER(RCD.POA_Unit_Weight);
PARAMETER(RCD.POA_Unused_Text_1);
PARAMETER(RCD.POA_Unused_Code_2);
PARAMETER(RCD.PO116_Prod_Serv_ID_Qualif);
PARAMETER(RCD.PO117_Prod_Service_ID);
PARAMETER(RCD.PO118_Prod_Serv_ID_Qualif);
PARAMETER(RCD.PO119_Prod_Service_ID);
PARAMETER(RCD.PO120_Prod_Serv_ID_Qualif);
PARAMETER(RCD.PO121_Prod_Service_ID);
PARAMETER(RCD.PO122_Prod_Serv_ID_Qualif);
PARAMETER(RCD.PO123_Prod_Service_ID);
PARAMETER(RCD.PO124_Prod_Serv_ID_Qualif);
PARAMETER(RCD.PO125_Prod_Service_ID);
PARAMETER(RCD.PO301_Change_Reason_Code);
PARAMETER(RCD.PO306_Quantity_Shipped);
PARAMETER(RCD.PO307_UOM_Basis_for_Meas);
PARAMETER(RCD.PO308_Shipped_Description);
PARAMETER(RCD.POA_Unused_Sts_2_6);
PARAMETER(RCD.POA_Units_Shipped);
PARAMETER(RCD.POA_UOM_unused_sts_2);
PARAMETER(RCD.POA_Unused_Sts_2_1);
PARAMETER(RCD.POA_Unused_Sts_2_2);
PARAMETER(RCD.POA_Unused_Sts_2_3);
PARAMETER(RCD.POA_Unused_Sts_2_4);
PARAMETER(RCD.POA_Unused_Sts_2_5);
PARAMETER(RCD.POA_Unused_Sts_3_1);
PARAMETER(RCD.POA_Unused_Sts_3_2);
PARAMETER(RCD.POA_Unused_Sts_4_1);
PARAMETER(RCD.POA_Unused_Sts_4_2);
PARAMETER(RCD.POA_Unused_Sts_4_3);
PARAMETER(RCD.POA_Unused_Text_25_1);
PARAMETER(RCD.POA_Unused_Text_25_2);
PARAMETER(RCD.POA_Unused_Text_50_1);
PARAMETER(RCD.POA_Unused_Text_50_2);
PARAMETER(RCD.POA_Unused_Text_80_1);
PARAMETER(RCD.POA_Unused_Text_80_2);
PARAMETER(RCD.POA_Unused_Qty_11_2_1);
PARAMETER(RCD.POA_Unused_Qty_11_2_2);
PARAMETER(RCD.POA_Unused_Qty_11_2_3);
PARAMETER(RCD.POA_Unused_Qty_11_2_4);
PARAMETER(RCD.POA_Unused_Qty_11_2_5);
PARAMETER(RCD.POA_Unused_Qty_11_4_1);
PARAMETER(RCD.POA_Unused_Qty_11_4_2);
PARAMETER(RCD.POA_Unused_Qty_11_4_3);
PARAMETER(RCD.POA_Unused_Qty_11_4_4);
PARAMETER(RCD.POA_Unused_Qty_11_4_5);
PARAMETER(RCD.POA_Unused_Amount_11_0_1);
PARAMETER(RCD.POA_Unused_Amount_11_0_2);
PARAMETER(RCD.POA_Unused_Amount_11_2_1);
PARAMETER(RCD.POA_Unused_Amount_11_2_2);
PARAMETER(RCD.POA_Unused_Amount_11_2_3);
PARAMETER(RCD.POA_Unused_Amount_11_2_4);
PARAMETER(RCD.POA_Unused_Amount_6_0_1);
PARAMETER(RCD.POA_Unused_Amount_6_0_2);
PARAMETER(RCD.POA_Unused_Amount_9_0_1);
PARAMETER(RCD.POA_Unused_Amount_9_0_2);

ENDIF;

ENDIF;

// RCD.*SFLSEL = CND.*Reset to blank
RCD.*SFLSEL = *BLANK;

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

