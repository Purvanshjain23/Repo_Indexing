// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PNXHPFR
// ?Date: 14.08.2025 Time: 12:06:05
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('OMS');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


// WRK.Display Flag 1 USR = CND.yes
WRK.Display_Flag_1_USR = 'Y';

// WRK.USR Display field = CND.no
WRK.USR_Display_field = 'N';

// WRK.Print Blank Line Usr = CND.no
WRK.Print_Blank_Line_Usr = 'N';

//?USER: Record selection processing

//?skip if backhaul status requested and no match
CASE;

// IF PAR.OHE Backhaul Status is Backhaul Status Entered
IF PAR.OHE_Backhaul_Status = 'B'/'D'/'F';

// AND DB1.OHE Backhaul Status NE PAR.OHE Backhaul Status
AND DB1.OHE_Backhaul_Status <> PAR.OHE_Backhaul_Status;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?skip if backhaul carrier requested and no match
CASE;

// IF PAR.OHE Backhaul Carrier Code NE WRK.Blank for 3          USR
IF PAR.OHE_Backhaul_Carrier_Code <> WRK.Blank_for_3_USR;

// AND DB1.OHE Backhaul Carrier Code NE PAR.OHE Backhaul Carrier Code
AND DB1.OHE_Backhaul_Carrier_Code <> PAR.OHE_Backhaul_Carrier_Code;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?skip if backhaul company requested and no match
CASE;

// IF PAR.OHE Backhaul Return to Co is not equal to zero
IF PAR.OHE_Backhaul_Return_to_Co <> *ZERO;

// AND DB1.OHE Backhaul Return to Co NE PAR.OHE Backhaul Return to Co
AND DB1.OHE_Backhaul_Return_to_Co <> PAR.OHE_Backhaul_Return_to_Co;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?skip if ASD is outside selection parameters
CASE;

// IF DB1.OHE Actual Ship Date GT PAR.Thru Date             USR
IF DB1.OHE_Actual_Ship_Date > PAR.Thru_Date_USR;

// OR DB1.OHE Actual Ship Date LT PAR.From Date             USR
OR DB1.OHE_Actual_Ship_Date < PAR.From_Date_USR;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?USER: Process top of page

// TOP.From Date             USR = PAR.From Date             USR
TOP_From_Date_USR = PAR.From_Date_USR;

// TOP.Thru Date             USR = PAR.Thru Date             USR
TOP_Thru_Date_USR = PAR.Thru_Date_USR;

EXECUTE FUNCTION(Carrier Name DRV) TYPE(DRVFLD)                                 AC1582201;
PARAMETER(TOP_Carrier_Name_DRV);
PARAMETER(TOP_OHE_Backhaul_Carrier_Code);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Carrier Name       RT) TYPE(RTVOBJ) FILE(OMFFREP)          AC1382687;
 PARAMETER(PAR.Carrier_Code);
 PARAMETER(PAR.Carrier_Name_DRV);
 PARAMETER(NLL.Record_Status);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  // PGM.*Return code = CND.*Normal
  PGM.*Return_code = *BLANK;

 }

}


// WRK.Display Flag 1 USR = CND.yes
WRK.Display_Flag_1_USR = 'Y';

// WRK.USR Display field = CND.no
WRK.USR_Display_field = 'N';

//?USER: Null report processing

// Execute function CLC Set for Null Rpt   US.
EXECUTE FUNCTION(CLC Set for Null Rpt   US) TYPE(EXCUSRSRC) ('PDUUUFR');
{
 C                     MOVEL'Y'       W0AP1P
 C                     MOVEL'Y'       W0NEWP
}


// WRK.USR Display field = CND.yes
WRK.USR_Display_field = 'Y';

//?USER: Print required level headings

// SUPPRESSED PRINT Company Number header format

// SUPPRESSED PRINT OHE Actual Ship Date header format

// SUPPRESSED PRINT Shipping Line header format

// SUPPRESSED PRINT OHE PowerPro Load#-Outbnd header format

//?USER: On print of detail format

MOVE *ALL (To: CUR From: DB1);

EXECUTE FUNCTION(RTV Carrier Code       RT) TYPE(RTVOBJ) FILE(OMFJCPP)          AC1486426;
PARAMETER(CUR.Load_ID);
PARAMETER(WRK.Carrier_Code);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Active Carr Name   RT) TYPE(RTVOBJ) FILE(OMFFREP)          AC1447369;
PARAMETER(WRK.Carrier_Code);
PARAMETER(CUR.Description_14A_USR);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

}


//?** Concat vessel and voyage, compress out trailing blanks from vessel
// WRK.Text USR 5 = CVTVAR(CUR.OHE Voyage/Flight)
WRK.Text_USR_5 = CVTVAR(CUR.OHE_Voyage_Flight);

// WRK.Text USR 7 = CONCAT(CON./,WRK.Text USR 5,CON.*ZERO)
WRK.Text_USR_7 = '/' + WRK.Text_USR_5 (0);

//?(The text usr 40 string has been shortened to 30 when printing)
// Call program Zzz *BCAT 2 strings    UP.
CALL PROGRAM(Zzz *BCAT 2 strings    UP) ('PDOCUPR');
PARAMETER(CUR.OHE_Vessel_Airline);
PARAMETER(WRK.Text_USR_7);
PARAMETER(CUR.Text_USR_40);

// WRK.Display Flag 1 USR = CND.no
WRK.Display_Flag_1_USR = 'N';

//?USER: Process after print of detail format

// WRK.Print Blank Line Usr = CND.no
WRK.Print_Blank_Line_Usr = 'N';

//?USER: Print required level totals

// SUPPRESSED PRINT OHE PowerPro Load#-Outbnd totals format

// SUPPRESSED PRINT Shipping Line totals format

CASE;

IF NEW OHE_Actual_Ship_Date;
// Print OHE Actual Ship Date totals format
PRINT OHE Actual Ship Date totals format;

ENDIF;

// SUPPRESSED PRINT Company Number totals format

