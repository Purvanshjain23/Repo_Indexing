     H/TITLE Pmt Create Repay Hdr  PV  Prompt & validate record
     H DATFMT(*YMD) DATEDIT(*YMD) DEBUG(*YES)
     Z* CRTBNDRPG
     Z* DFTACTGRP(*NO) BNDDIR(YBNDDIR) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
      *
     H* SYNOPSIS :
     H* - Prompts fields, allowing user changes
     H* - Validates fields
     H* - If valid, performs an action
      *
     H* Generated by CA 2E release 8.7 (1632)
     H* Function type : Prompt & validate record
     H* Object type   : *PGM
      *
     H* Company       : HPEDEVMDL
     H* System        : HPEDEVMDL
     H* User name     : ISJBADE
     H* Date          : 09/16/21  Time  : 07:46:18
     H* Copyright     : HPEDEVMDL
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPKVLLSL0  IF   E           K DISK
      * Values list details file
      *
     FPWMTPVR#  CF   E             WORKSTN
     F                                     INFDS(INFDS#)
      * DSP: Pmt Create Repay Hdr  PV  Prompt & validate record
      *
     FPWAYCPL3  IF   E           K DISK
      * RSQ : Tattoo Repayment Comment  Co#/Repay ID/Seq# (d)
      *
     FPKAZREL1  IF   E           K DISK
      * RTV : Company Control HPE       Retrieval index
      *
     FPWAWCPL1  IF A E           K DISK
      * UPD : Tattoo Repayment Header   Update index
      *
     FPWAYCPL0  IF A E           K DISK
      * UPD : Tattoo Repayment Comment  Update index
      *
      * Days in month for date validation
     D @XD             S              2  0 DIM(12)CTDATA PERRCD(12)
      * Long constants
     D @CN#            S              6    DIM(03)CTDATA PERRCD(1)
     D @CN             S             25    DIM(03) ALT(@CN#)
      * Set wdw location allowed?
     D YSL             S              1     DIM(1)
     D YDOW            S              1     DIM(7)
      /EJECT
      * Data structures:
     D PGMDS         ESDS                  EXTNAME(Y2PGDSP)
      * Modified Program data structure
     D JBDTTM          DS
      * Job date/time
     D  ##JDT                  1      7  0
     D  ##JCC                  1      1  0
     D  ##JYY                  2      3  0
     D  ##JMM                  4      5  0
     D  ##JDD                  6      7  0
     D  ##JTM                  8     13  0
     D  ##JHH                  8      9  0
     D  ##JNN                 10     11  0
     D  ##JSS                 12     13  0
      * ABO DEFINE LARGE STRING FOR CL CMD
     D YARTCM          DS           512
     D  DUMMY1                 1      1
     D INFDS#        E DS                  EXTNAME(Y2I#DSP)
      * Display file information data structure
      *
      /EJECT
     D XDINT           DS
      * Internal date
     D  XDINDT                 1      7  0
     D  XDINYY                 1      3  0
     D  XDINMM                 4      5  0
     D  XDINDD                 6      7  0
      /EJECT
     D XD2T            DS
      * Internal date
     D  XDINT2                 1      7  0
     D  XDINY2                 1      3  0
     D  XDINM2                 4      5  0
     D  XDIND2                 6      7  0
     D QPWAW1        E DS                  EXTNAME(PWAWCPL1)
      * UPD : Tattoo Repayment Header   Update index
      * Renamed input format fields
     D  WAHONB       E                     EXTFLD(AWHONB)
     D  WACDNZ       E                     EXTFLD(AWCDNZ)
     D  WAMASS       E                     EXTFLD(AWMASS)
     D  WAIDDT       E                     EXTFLD(AWIDDT)
     D  WACATM       E                     EXTFLD(AWCATM)
     D  WAIEDT       E                     EXTFLD(AWIEDT)
     D  WACBTM       E                     EXTFLD(AWCBTM)
     D  WAIFDT       E                     EXTFLD(AWIFDT)
     D  WACTNZ       E                     EXTFLD(AWCTNZ)
     D  WAHOT1       E                     EXTFLD(AWHOT1)
     D  WAAAVN       E                     EXTFLD(AWAAVN)
     D  WAAADT       E                     EXTFLD(AWAADT)
     D  WAAMTM       E                     EXTFLD(AWAMTM)
     D  WAAJST       E                     EXTFLD(AWAJST)
     D  WAAHVN       E                     EXTFLD(AWAHVN)
     D  WAAGVN       E                     EXTFLD(AWAGVN)
     D  WAABVN       E                     EXTFLD(AWABVN)
     D  WAABDT       E                     EXTFLD(AWABDT)
     D  WAABTM       E                     EXTFLD(AWABTM)
      *
     D QPWAY1        E DS                  EXTNAME(PWAYCPL0)
      * UPD : Tattoo Repayment Comment  Update index
      * Renamed input format fields
     D  WCHONB       E                     EXTFLD(AYHONB)
     D  WCCDNZ       E                     EXTFLD(AYCDNZ)
     D  WCCINZ       E                     EXTFLD(AYCINZ)
     D  WCHMNB       E                     EXTFLD(AYHMNB)
     D  WCBNNB       E                     EXTFLD(AYBNNB)
     D  WCBONB       E                     EXTFLD(AYBONB)
     D  WCCVNB       E                     EXTFLD(AYCVNB)
     D  WCB0DT       E                     EXTFLD(AYB0DT)
     D  WCG7T1       E                     EXTFLD(AYG7T1)
     D  WCMKSS       E                     EXTFLD(AYMKSS)
     D  WCAAVN       E                     EXTFLD(AYAAVN)
     D  WCAADT       E                     EXTFLD(AYAADT)
     D  WCAMTM       E                     EXTFLD(AYAMTM)
     D  WCAJST       E                     EXTFLD(AYAJST)
     D  WCAHVN       E                     EXTFLD(AYAHVN)
     D  WCAGVN       E                     EXTFLD(AYAGVN)
     D  WCABVN       E                     EXTFLD(AYABVN)
     D  WCABDT       E                     EXTFLD(AYABDT)
     D  WCABTM       E                     EXTFLD(AYABTM)
      *
      /EJECT
     D XDEX            DS
      * External date
     D  XDEXDT                 1      8  0
     D  XDEY01                 1      4  0
     D  XDEX01                 1      2  0
     D  XDEX02                 3      4  0
     D  XDEY02                 5      8  0
     D  XDEX03                 5      6  0
     D  XDEX04                 7      8  0
      /EJECT
     D XTCK            DS
      * Time: hours, minutes, seconds
     D  XTTIM                  1      6  0
     D  XTHH                   1      2  0
     D  XTNN                   3      4  0
     D  XTSS                   5      6  0
      /EJECT
     D XDOFF           DS
      * Cut-off year
     D  XOFF                   1      4  0
     D  XOFFYY                 3      4  0
      *
      * Declared stand-alone variables
     D  P0RTN          S              7
     D  WP0001         S              3  0
     D  W0ICL          S              1
     D  W0RTN          S              7
     D  W0RSL          S              1
     D  W0RSF          S              1
     D  W0RTW          S              9  0
     D  W0ENV          S              3
     D  ##TME          S              6  0
     D  YWLCTP         S              1
     D  YWRTFN         S             10
     D  YWWDWD         S              3  0
     D  YWWDDP         S              3  0
     D  YWWDCR         S              5
     D  YWWDRW         S              3  0
     D  YWWDCL         S              3  0
     D  W0TRN          S              1
     D  W0HLP          S              1
     D  YPMT04         S              1
     D  HELP25         S              1
     D  ##OFF          S             30
     D  YWPNNO         S              1  0
     D  W0WASM         S              1  0
     D  ZHCSRW         S              5  0
     D  ZHCSCL         S              5  0
     D  ZZCSRW         S              3  0
     D  ZZCSCL         S              3  0
     D  YWPORW         S              3  0
     D  YWPOC1         S              3  0
     D  W0HPMB         S             10
     D  YYHPFL         S             10
     D  YYHPLB         S             10
     D  YYHLVN         S             10
     D  YYUSOP         S             10
     D  YYRW           S              5  0
     D  YYCL           S              5  0
     D  YYLGCT         S              5  0
     D  YYLGVN         S             10
     D  ZAPGMQ         S             10
     D  ZAPGRL         S              5
     D  ZAFSMS         S              1
     D  W0DCF          S              1
     D  YL0001         S              1
     D  YL0002         S              7  0
     D  XDWK1          S              8  0
     D  XDAY1          S              6  0
     D  XDAY2          S              6  0
     D  XDURR          S              8  0
     D  XDSEL          S              1
     D  XDCDW          S              7
     D  XDWSL          S              1  0
     D  XDSTP          S              1  0
     D  XDWNB          S              6  0
     D  XDLSW          S              1  0
     D  YY             S              6  0
     D  XDWK3          S              7  1
     D  XDWK2          S              6  0
     D  YL0003         S              7  0
     D  YL0004         S              1
     D  YL0005         S             10
     D  YL0006         S             10
     D  YL0007         S              6
     D  W0SJO          S            132
     D  #SPAK          S             30  9
     D  #STYP          S              1
     D  #SLEN          S              5  0
     D  #SDEC          S              1  0
     D  W0CLPG         S             10
     D  #SRQL          S             15  5
     D  W0JVN          S             10
     D  W0JUN          S             10
     D  W0JNB          S              6
     D  YL0008         S             60
     D  WN0001         S             10
     D  WN0002         S              7  0
     D  WN0003         S              6  0
     D  WN0004         S              1
     D  WN0005         S             10
     D  WN0006         S             10
     D  WN0007         S             10
     D  WN0008         S              7  0
     D  WN0009         S              6  0
     D  ZADFMF         S             10
     D  YL0009         S              5  0
     D  WQSB01         S                   LIKE(WBHONB)
     D  WQSB02         S                   LIKE(WBCDNZ)
     D  WN0010         S              5  0
     D  WN0011         S             10
     D  WN0012         S              7  0
     D  WN0013         S              6  0
     D  WN0014         S              1
     D  WN0015         S             10
     D  WN0016         S             10
     D  WN0017         S             10
     D  WN0018         S              7  0
     D  WN0019         S              6  0
     D  WQSD01         S                   LIKE(WBHONB)
     D  WQSD02         S                   LIKE(WBCDNZ)
     D  XDDTFM         S              3
     D  WUBSNB         S              7  0
     D  WUB1DT         S              7  0
     D  WUB2DT         S              7  0
     D  WUH4NB         S              3  0
     D  WQ0001         S              3  0
     D  WQ0002         S              7  0
     D  WQ0003         S              7  0
     D  WQ0004         S              7  0
     D  WQ0005         S              3  0
     D  WN30           S             30
     D  W0NSRQ         S              1
     D  Y2LSNO         S              7  0
     D  W0EXVL         S             25
     D  YL0010         S              5  0
     D  YPMTFD         S             10
     D  YAFSCH         S              4  0
     D  YPMRRN         S              4  0
     D  W0GRP          S              1
     D  YL0011         S             10
     D  WQ0006         S             10
     D  YL0012         S              7
     D  YL0013         S             40
     D  ZQ             S              5  0
     D  WQ0007         S              3  0
     D  WQ0008         S             10
     D  WQ0009         S             40
     D  WQ0010         S              3  0
     D  WQ0011         S             10
     D  WQ0012         S             40
     D  YL0014         S              1
     D  YL0015         S              7  0
     D  YL0016         S             10
     D  YL0017         S             10
     D  YL0018         S             20
     D  WQ0013         S              3  0
     D  WQ0014         S             10
     D  WQ0015         S             40
     D  YL0019         S              2  0
     D  YL0020         S              2  0
     D  WUDLN          S             10
     D  XABEG          S              6  0
     D  XAEND          S              6  0
     D  YL0021         S              4  0
     D  YL0022         S              4
     D  Y0CX01         S              1
     D  WQ0016         S              3  0
     D  WQ0017         S              5  0
     D  YSETCS         S              1
     D  WCSRLC         S              3
     D  ZINPOS         S              5  0
     D  ZWORK          S              5  0
     D  ZAMSID         S              7
     D  ZAMSGF         S             10
     D  ZAMSTP         S              7
     D  YILE           S              1
     D  YRSW00         S              5  0
     D  YRSW01         S              5  0
     D  W0WD01         S             17  7
     D  W0WD00         S             17  7
     D  W0CFL          S             10
     D  W0CRW          S              5  0
     D  W0CCL          S              5  0
     D  ZZFFL          S             10
     D  ZZFLB          S             10
     D  ZZFMB          S             10
     D  @1FFL          S             10
     D  @1FLB          S             10
     D  @1FMB          S             10
     D  ZZFQL          S             21
     D  W0PMT          S              1
      /EJECT
      * Parameter declarations
     D P1PARM          DS
      * FLD: Tattoo Repayment Header
      * I :  CC Company Number
     D  P1HONB                 1      2P 0
      * Submit job processing data structures.
     D #SRQS           DS          3000
     D  #SDMY1                 1      1
     D #SSTR           DS          3000
     D  #SDMY2                 1      1
     D #SWRK           DS          3000
     D  #SDMY3                 1      1
     D #SMRG           DS           256
     D  #SDMY4                 1      1
     D                 DS
     D#SCLL                    1     13    INZ('CMD(CALL PGM(')
     D#SPRM                   14     18    INZ('PARM(')
     D#SPRN                   19     19    INZ(')')
     D#SPRG                   20     29    INZ('          ')
      * Submit job command strings.
     D                 DS
     D#S0001                   1    256    INZ('SBMJOB     JOB(REPAY-
     D                                     BKUP) LOG(4 00 *SECL-
     D                                     VL)')
     D                 DS
     D  ZAMSDA                 1    132
     I@AWCPAR
      * Tattoo Repayment Header   Update index
      * Renamed input format fields
     I              AWHONB                      WAHONB
     I              AWCDNZ                      WACDNZ
     I              AWMASS                      WAMASS
     I              AWIDDT                      WAIDDT
     I              AWCATM                      WACATM
     I              AWIEDT                      WAIEDT
     I              AWCBTM                      WACBTM
     I              AWIFDT                      WAIFDT
     I              AWCTNZ                      WACTNZ
     I              AWHOT1                      WAHOT1
     I              AWAAVN                      WAAAVN
     I              AWAADT                      WAAADT
     I              AWAMTM                      WAAMTM
     I              AWAJST                      WAAJST
     I              AWAHVN                      WAAHVN
     I              AWAGVN                      WAAGVN
     I              AWABVN                      WAABVN
     I              AWABDT                      WAABDT
     I              AWABTM                      WAABTM
      *
     I@AYCPA6
      * Tattoo Repayment Comment  Co#/Repay ID/Seq# (d)
      * Renamed input format fields
     I              AYHONB                      WBHONB
     I              AYCDNZ                      WBCDNZ
     I              AYCINZ                      WBCINZ
     I              AYHMNB                      WBHMNB
     I              AYBNNB                      WBBNNB
     I              AYBONB                      WBBONB
     I              AYCVNB                      WBCVNB
     I              AYB0DT                      WBB0DT
     I              AYG7T1                      WBG7T1
     I              AYMKSS                      WBMKSS
     I              AYAAVN                      WBAAVN
     I              AYAADT                      WBAADT
     I              AYAMTM                      WBAMTM
     I              AYAJST                      WBAJST
     I              AYAHVN                      WBAHVN
     I              AYAGVN                      WBAGVN
     I              AYABVN                      WBABVN
     I              AYABDT                      WBABDT
     I              AYABTM                      WBABTM
      *
     I@AYCPAP
      * Tattoo Repayment Comment  Update index
      * Renamed input format fields
     I              AYHONB                      WCHONB
     I              AYCDNZ                      WCCDNZ
     I              AYCINZ                      WCCINZ
     I              AYHMNB                      WCHMNB
     I              AYBNNB                      WCBNNB
     I              AYBONB                      WCBONB
     I              AYCVNB                      WCCVNB
     I              AYB0DT                      WCB0DT
     I              AYG7T1                      WCG7T1
     I              AYMKSS                      WCMKSS
     I              AYAAVN                      WCAAVN
     I              AYAADT                      WCAADT
     I              AYAMTM                      WCAMTM
     I              AYAJST                      WCAJST
     I              AYAHVN                      WCAHVN
     I              AYAGVN                      WCAGVN
     I              AYABVN                      WCABVN
     I              AYABDT                      WCABDT
     I              AYABTM                      WCABTM
      *
     I@AZCPCN
      * Company Control HPE       Retrieval index
      * Renamed input format fields
     I              AZHONB                      WDHONB
     I              AZBSNB                      WDBSNB
     I              AZB1DT                      WDB1DT
     I              AZB2DT                      WDB2DT
     I              AZH4NB                      WDH4NB
     I              AZK3NB                      WDK3NB
     I              AZCDDT                      WDCDDT
     I              AZCEDT                      WDCEDT
     I              AZAAVN                      WDAAVN
     I              AZAADT                      WDAADT
     I              AZAMTM                      WDAMTM
     I              AZAJST                      WDAJST
     I              AZAHVN                      WDAHVN
     I              AZAGVN                      WDAGVN
     I              AZABVN                      WDABVN
     I              AZABDT                      WDABDT
     I              AZABTM                      WDABTM
      *
      /EJECT
      *****************************************************************
      * Entry parameters
     C     *ENTRY        PLIST
     C                   PARM                    P0RTN
     C     P1HONB        PARM                    WP0001                         CC Company Numb
      *****************************************************************
      * Initialize
     C                   EXSR      ZZINIT
      *
      * Conduct screen conversation
     C                   DO        *HIVAL
      * Start new transaction
     C                   MOVEL     'Y'           W0TRN
      * Process current transaction
      * Convert fields to external form
     C                   DOW       W0TRN = 'Y'
     C                   EXSR      MNCV#1
      * Display screen
     C                   EXSR      CAEXFM
      * Process response
      * Cancel & exit program
     C   03              CAS                     ZXEXPG
      * HOME: Reset screen fields
     C   30              CAS                     MALDSC
      * Reposition window
     C   26              CAS                     ZRRPWD
      * Process screen input
     C                   CAS                     DAPRSC
     C                   END
      *
     C                   END
      *
     C                   END
      *****************************************************************
      /EJECT
     CSR   CAEXFM        BEGSR
      *================================================================
      * Display screen and process HELP requests
      *================================================================
      * Set screen conditioning indicators
     C                   EXSR      GADSA1
      * Update screen time
     C                   TIME                    ##TME
     C                   DOU       W0HLP = 'N'
     C                   MOVEL     'N'           W0HLP
     C                   MOVE      *IN04         YPMT04
     C                   MOVE      *IN25         HELP25
     C                   MOVE      *ALL'0'       ##OFF
     C                   MOVEA     ##OFF         *IN(1)
     C                   MOVE      YPMT04        *IN04
     C                   MOVE      HELP25        *IN25
      * Enable PUTOVR
     C                   SETON                                        86
     C                   Z-ADD     1             YWPNNO                         Panel number
     C                   MOVEL     'R'           YWLCTP                         Locate action t
     C                   EXSR      ZSSTLC                                       Set window loca
     C                   Z-ADD     1             W0WASM
      * Set cursor by *SET CURSOR data
     C                   IF        YSETCS = 'Y'
     C                   EXSR      Y0SET
     C                   END
     C                   WRITE     #MSGCTL
     C                   WRITE     #CMDTXT1
     C                   EXFMT     #RCDDTL1
      * Test cursor
     C                   EXSR      Y8TST
      * Check if prompt requested
     C                   EXSR      ZDVPMT
      * Clear set cursor DDS indicator
     C                   IF        WCSRLC = 'OFF'
     C                   SETOFF                                       94        *
     C                   END
     C                   EVALR     WCSRLC = ' '
      * If help requested, display help text
     C   25              EXSR      ZHHPKY
     C                   END
      * Update job time
     C                   TIME                    ##JTM
      * Clear messages from program message queue
     C                   CALL      'Y2CLMSC'
     C                   PARM      ##PGM         ZAPGMQ
     C                   PARM      '*SAME'       ZAPGRL
      * Reset first message only flag
     C                   MOVEL     'Y'           ZAFSMS                   99    *
     C                   IF        YSETCS = 'Y'
     C                   EXSR      Y9CLR
     C                   END
      *================================================================
     CSR   CAEXIT        ENDSR
      /EJECT
     CSR   DAPRSC        BEGSR
      *================================================================
      * Process screen input
      *================================================================
      * Confirm/update is not deferred
     C                   MOVEL     'N'           W0DCF
      * Validate screen input
     C                   EXSR      DBVLSC
      * If error, exit
     C     *IN99         CABEQ     '1'           DAEXIT
      * Defer confirm/update requested
     C     W0DCF         CABEQ     'Y'           DAEXIT
      * Prompt for confirmation
     C                   EXSR      DHPMCF
      * Quit if not confirmed
     C     *IN99         CABEQ     '1'           DAEXIT
      * USER: User defined action
      * Run file backup for Kill Date +/- 5 Days
      * CASE: LCL.Display Warning on Screen is Yes
      * LCL.Back Up Date From = DTL.TRH Payment Date + CON.-5 *DAYS
     C                   IF        YL0001 = 'Y'
     C     #1IFDT        ADD       1000000       XDINDT
     C                   EXSR      XCVTA
     C                   Z-ADD     XDAY1         XDAY2
     C                   Z-ADD     -5            XDURR
     C                   MOVEL     '1'           XDSEL
     C                   MOVEL     '1111111'     XDCDW
     C                   EXSR      XDOWS
     C                   EXSR      XDADY
     C                   EXSR      XCVFA
     C                   IF        XDINDT < 010101 OR
     C                             XDINDT > 4000000
     C                   Z-ADD     *ZERO         YL0002
     C                   ELSE
     C     XDINDT        SUB       1000000       YL0002
     C                   END
      * LCL.Back Up Date To = DTL.TRH Payment Date + CON.5 *DAYS
     C     #1IFDT        ADD       1000000       XDINDT
     C                   EXSR      XCVTA
     C                   Z-ADD     XDAY1         XDAY2
     C                   Z-ADD     5             XDURR
     C                   MOVEL     '1'           XDSEL
     C                   MOVEL     '1111111'     XDCDW
     C                   EXSR      XDOWS
     C                   EXSR      XDADY
     C                   EXSR      XCVFA
     C                   IF        XDINDT < 010101 OR
     C                             XDINDT > 4000000
     C                   Z-ADD     *ZERO         YL0003
     C                   ELSE
     C     XDINDT        SUB       1000000       YL0003
     C                   END
     C                   EVAL      YL0004 = ' '                                 Error flag
      * SBMJOB: Exc Repay File Backup CL - Tattoo Repayment Header  * 
      *
     C                   EVAL      W0RTN = ' '
      * Build call string for processing in batch.
     C                   MOVEL(P)  #S0001        #SRQS
     C     #SRQS         CAT       #SCLL:1       #SRQS                          Call command
     C                   MOVEL(P)  'PWMWUPC '    #SPRG                          Load pgm name
     C     #SRQS         CAT       #SPRG:0       #SRQS                          Add pgm name
     C     #SRQS         CAT       #SPRN:0       #SRQS                          Parenthesis
      *................................................................
      * Build parameters string.
     C     #SRQS         CAT       #SPRM:1       #SRQS                          Parameters
      *
     C                   Z-ADD     #1HONB        #SPAK                          BOH Company Num
     C                   MOVEL(P)  #SPAK         #SSTR
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'P'           #STYP
     C                   PARM      3             #SLEN
     C                   PARM      0             #SDEC
     C                   PARM                    #SRQS
      *
     C                   MOVEL(P)  YL0005        #SSTR                          Library From US
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      10            #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   MOVEL(P)  YL0006        #SSTR                          Library To USR
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      10            #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   MOVEL(P)  YL0007        #SSTR                          Backup File Pre
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'A'           #STYP
     C                   PARM      6             #SLEN
     C                   PARM                    #SDEC
     C                   PARM                    #SRQS
      *
     C                   Z-ADD     ##JDT         #SPAK                          Current Date US
     C                   MOVEL(P)  #SPAK         #SSTR
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'P'           #STYP
     C                   PARM      7             #SLEN
     C                   PARM      0             #SDEC
     C                   PARM                    #SRQS
      *
     C                   Z-ADD     YL0002        #SPAK                          Back Up Date Fr
     C                   MOVEL(P)  #SPAK         #SSTR
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'P'           #STYP
     C                   PARM      7             #SLEN
     C                   PARM      0             #SDEC
     C                   PARM                    #SRQS
      *
     C                   Z-ADD     YL0003        #SPAK                          Back Up Date To
     C                   MOVEL(P)  #SPAK         #SSTR
     C                   CALL      'Y2BLSJR'
     C                   PARM                    W0RTN
     C                   PARM                    #SSTR
     C                   PARM      'P'           #STYP
     C                   PARM      7             #SLEN
     C                   PARM      0             #SDEC
     C                   PARM                    #SRQS
      *
     C     #SRQS         CAT       #SPRN:0       #SRQS                          Parenthesis
      *................................................................
     C     #SRQS         CAT       #SPRN:0       #SRQS                          Parenthesis
      *
      * Build of submit job string ended in error.
     C                   IF        W0RTN <> ' '
     C                   MOVEL     'Y2U0065'     W0RTN
     C                   MOVEL(P)  'PWMWUPC '    W0CLPG
      * Send message '*Error occured on SBMJOB'
     C                   MOVEL     'Y2U0065'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   ELSE
      *
      * Merge variable submit job overrides.
     C                   IF        W0SJO <> ' '
     C                   CALL      'Y2MGRQR'                            90      *
     C                   PARM      #SRQS         #SWRK
     C                   PARM      W0SJO         #SMRG
     C  N90              MOVEL(P)  #SWRK         #SRQS
     C                   EVALR     W0SJO = ' '
     C                   END
      * Submit request.
     C                   CALL      'Y2CMEXC'                            90      *
     C                   PARM                    #SRQS
     C                   PARM      3000          #SRQL
     C                   PARM                    W0JVN
     C                   PARM                    W0JUN
     C                   PARM                    W0JNB
     C                   END
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PWMWUPC'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
     C                   END
     C                   END                                                    *FI
      * Create Tattoo Repayment Header record and a comment
     C                   EVAL      YL0008 = ' '                                 TRC Comment
     C                   MOVEL     @CN(001)      YL0008                         TRC Comment
      * Crt Tattoo Repay Hdr  CR - Tattoo Repayment Header  * 
     C                   EXSR      SACRRC
      * Exit program
     C                   EXSR      ZXEXPG
      *================================================================
     CSR   DAEXIT        ENDSR
      /EJECT
     CSR   DBVLSC        BEGSR
      *================================================================
      * Validate screen input
      *================================================================
      * Set screen conditioning indicators
     C                   EXSR      GADSA1
      * Validate TRH Payment Date
      * External date
     C                   Z-ADD     V1IFDT        XDEXDT
      * Check date
     C                   EXSR      XDCK2
     C                   IF        W0RTN <> ' '
     C                   SETON                                        9931      *
     C                   END
     C                   Z-ADD     XDINDT        #1IFDT
      * USER: Validate fields
      * Date for Repayment must be less than the current date
      * CASE: DTL.TRH Payment Date GE JOB.*Job date
     C                   IF        YPMTFD = ' '
      * Send message 'Repay: Invalid Repay Date'
     C                   IF        #1IFDT >= ##JDT
     C                   MOVEL     'PRK1616'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
      *
     C                   END                                                    *FI
     C                   END
      * Bypass ref file checks if error already detected
     C   99              GOTO      DBEXIT
      * Check reference to Company Control HPE
     C                   EXSR      VACKRL
     C                   IF        W0RTN <> ' ' AND
     C                             YPMTFD = ' '
     C                   SETON                                        99        *
     C                   END
      * TRH Payment Date required
     C                   IF        #1IFDT = *ZERO AND
     C                             YPMTFD = ' '
     C                   SETON                                        9931      *
      * Send message '*Value required'
     C                   MOVEL     'Y2U0001'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END                                                    FI
      *================================================================
     CSR   DBEXIT        ENDSR
      /EJECT
     CSR   DHPMCF        BEGSR
      *================================================================
      * Prompt for confirmation
      *================================================================
      * Convert fields to external form
     C                   EXSR      MNCV#1
      * Set screen conditioning indicators
     C                   EXSR      GADSA1
      * Update screen time
     C                   TIME                    ##TME
      * Enable PUTOVR
     C                   SETON                                            86    *
      * Refresh screen
     C                   EVAL      ##CFCD = ' '
     C                   MOVEL     'N'           ##CFCD
      * Save CMD keys
     C                   MOVEA     *IN           WN30
     C                   SETOFF                                       29        *
      * Generate internal/external key list
     C     KINEX         KLIST
     C                   KFLD                    Y2LSNO
     C                   KFLD                    Y2INVL
      * Convert *CONFIRM to external value
     C                   Z-ADD     1001713       Y2LSNO
     C                   EVAL      Y2INVL = ' '
     C                   MOVEL     ##CFCD        Y2INVL                         *CONFIRM
     C     KINEX         CHAIN     @Y2INEX                            90        *
     C  N90              MOVEL     Y2EXVL        V#CFCD                         *CONFIRM
      *
     C                   DOU       W0HLP = 'N' AND
     C                             NOT *IN29
     C                   EXSR      ZVCFPM
     C                   WRITE     #MSGCTL
     C                   WRITE     #CMDTXT1
     C                   WRITE     #RCDDTL1
     C                   EXFMT     #CONFIRM
     C                   IF        *IN29
     C                   SETON                                        99
     C                   GOTO      DHEXIT
     C                   END
      * Clear set cursor DDS indicator
     C                   IF        WCSRLC = 'OFF'
     C                   SETOFF                                       94        *
     C                   END
     C                   EVALR     WCSRLC = ' '
      * If help requested, display help text
     C   25              EXSR      ZHHPKY
      * Validate *CONFIRM
     C                   EVAL      W0RTN = ' '
     C                   MOVEL     V#CFCD        W0NSRQ                         *CONFIRM
      * Name search required?
     C                   IF        W0NSRQ = '?' OR
     C                             'V#CFCD' = YPMTFD
     C                   CALL      'PKVLLWR'                            90      *
     C                   PARM                    W0RTN
     C                   PARM      1001713       Y2LSNO
     C     V#CFCD        PARM      V#CFCD        W0EXVL                         *CONFIRM
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
     C                   IF        W0NSRQ <> '?'
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
     C                   END
      * Check external value of *CONFIRM
      * Generate internal/external key list
     C     KEXIN         KLIST
     C                   KFLD                    Y2LSNO
     C                   KFLD                    Y2EXVL
      * Convert *CONFIRM to internal value
     C                   Z-ADD     1001713       Y2LSNO
     C                   EVAL      Y2EXVL = ' '
     C                   MOVEL     V#CFCD        Y2EXVL                         *CONFIRM
     C     KEXIN         CHAIN     @Y2EXIN                            90        *
     C                   IF        *IN90
     C                   EVAL      ##CFCD = ' '
     C                   IF        YPMTFD = ' '
     C                   SETON                                        96        *
     C                   WRITE     #CONFIRM
     C                   SETOFF                                       96        *
     C                   END
     C                   ELSE
     C                   MOVEL     Y2INVL        ##CFCD                         *CONFIRM
     C                   END
      *
     C   90              SETON                                        29        *
     C  N90              SETOFF                                       29        *
     C                   END
      * Restore CMD keys
     C                   MOVEA     WN30          *IN
      * Update job time
     C                   TIME                    ##JTM
      * Clear messages from program message queue
     C                   IF        ##CFCD = 'Y'
     C                   CALL      'Y2CLMSC'
     C                   PARM      ##PGM         ZAPGMQ
     C                   PARM      '*SAME'       ZAPGRL
      * Reset first message only flag
     C                   MOVEL     'Y'           ZAFSMS                   99    *
     C                   END
     C     ##CFCD        COMP      'Y'                                9999      *
      * Not confirmed
      *================================================================
     CSR   DHEXIT        ENDSR
      /EJECT
     CSR   GADSA1        BEGSR
      *================================================================
      * Set display attributes for screen
      *================================================================
     C                   MOVEL     '0'           *IN79
     C                   IF        YL0001 = 'N'
     C                   MOVEL     '1'           *IN79
     C                   END                                                    *FI
      *================================================================
     CSR   GAEXIT        ENDSR
      /EJECT
     CSR   MALDSC        BEGSR
      *================================================================
      * Load screen from passed parameters
      *================================================================
     C                   EVAL      #1MASS = ' '                                 TRH Repayment S
     C                   Z-ADD     *ZERO         #1IDDT                         TRH Date Start
     C                   Z-ADD     *ZERO         #1CATM                         TRH Time Start
     C                   Z-ADD     *ZERO         #1IEDT                         TRH Date Comple
     C                   Z-ADD     *ZERO         #1CBTM                         TRH Time Comple
     C                   Z-ADD     *ZERO         #1CTNZ                         TRH Payment Ste
     C                   EVAL      #1HOT1 = ' '                                 TRH Backup File
     C                   EVAL      #1AAVN = ' '                                 RS User Changed
     C                   Z-ADD     *ZERO         #1AADT                         RS Date Changed
     C                   Z-ADD     *ZERO         #1AMTM                         RS Time Changed
     C                   EVAL      #1AJST = ' '                                 RS Record Statu
     C                   EVAL      #1AHVN = ' '                                 RS Job
     C                   EVAL      #1AGVN = ' '                                 RS Program
     C                   EVAL      #1ABVN = ' '                                 RS User Added
     C                   Z-ADD     *ZERO         #1ABDT                         RS Date Added
     C                   Z-ADD     *ZERO         #1ABTM                         RS Time Added
     C                   Z-ADD     *ZERO         #1HONB                         CC Company Numb
     C                   Z-ADD     *ZERO         #1CDNZ                         TRH Repayment I
     C                   Z-ADD     *ZERO         #1IFDT                         TRH Payment Dat
      * Clear external version also
     C                   Z-ADD     *ZERO         V1IFDT
      * USER: Load screen
     C                   Z-ADD     P1HONB        #1HONB                         CC Company Numb
     C                   Z-ADD     YL0010        #1CDNZ                         TRH Repayment I
      *================================================================
     CSR   MAEXIT        ENDSR
      /EJECT
     CSR   MNCV#1        BEGSR
      *================================================================
      * Convert fields into external form
      *================================================================
      * Convert TRH Payment Date to display format
      * Convert date
     C     1000000       ADD       #1IFDT        XDINDT
     C                   EXSR      XDVC2T
     C                   Z-ADD     XDEXDT        V1IFDT
      *================================================================
     CSR   MNEXIT        ENDSR
      /EJECT
     CSR   SACRRC        BEGSR
      *================================================================
      * Crt Tattoo Repay Hdr  CR - Tattoo Repayment Header  * 
      *================================================================
      *
     C                   EVAL      WN0001 = ' '                                 RS User Changed
     C                   Z-ADD     *ZERO         WN0002                         RS Date Changed
     C                   Z-ADD     *ZERO         WN0003                         RS Time Changed
     C                   EVAL      WN0004 = ' '                                 RS Record Statu
     C                   EVAL      WN0005 = ' '                                 RS Job
     C                   EVAL      WN0006 = ' '                                 RS Program
     C                   EVAL      WN0007 = ' '                                 RS User Added
     C                   Z-ADD     *ZERO         WN0008                         RS Date Added
     C                   Z-ADD     *ZERO         WN0009                         RS Time Added
      *
     C                   EVAL      W0RTN = ' '
      * Move all fields to @AWCPAR
     C                   Z-ADD     #1HONB        WAHONB                         CC Company Numb
     C                   Z-ADD     #1CDNZ        WACDNZ                         TRH Repayment I
     C                   MOVEL     'C'           WAMASS                         TRH Repayment S
     C                   Z-ADD     ##JDT         WAIDDT                         TRH Date Start
     C                   Z-ADD     ##JTM         WACATM                         TRH Time Start
     C                   Z-ADD     *ZERO         WAIEDT                         TRH Date Comple
     C                   Z-ADD     *ZERO         WACBTM                         TRH Time Comple
     C                   Z-ADD     #1IFDT        WAIFDT                         TRH Payment Dat
     C                   Z-ADD     1             WACTNZ                         TRH Payment Ste
     C                   MOVEL     YL0007        WAHOT1                         TRH Backup File
      *
      * USER: Processing before Data update
      * Rtv Add Stamp         IF
     C                   MOVEL     'A'           WAAJST                         RS Record Statu
     C                   MOVEL     ##USR         WAABVN                         RS User Added
     C                   Z-ADD     ##JDT         WAABDT                         RS Date Added
     C                   Z-ADD     ##JTM         WAABTM                         RS Time Added
     C                   MOVEL     ##PGM         WAAGVN                         RS Program
     C                   MOVEL     ##JOB         WAAHVN                         RS Job
     C     KLCRSA        KLIST
     C                   KFLD                    WAHONB                         CC Company Numb
     C                   KFLD                    WACDNZ                         TRH Repayment I
      * Check for duplicate primary key
     C     KLCRSA        SETLL     @AWCPAR                                90    *
     C                   IF        *IN90
     C                   MOVEL     'PRK1565'     W0RTN
      * Send message 'Tattoo Repayment Heade EX'
     C                   MOVEL     'PRK1565'     ZAMSID
     C                   EXSR      ZASNMS
     C                   GOTO      SAEXIT
     C                   ENDIF
      *
     C                   WRITE     @AWCPAR                              91      *
      *
      * Write error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
      * USER: Processing after Data update
      * Create a System Generated message
      * Rtv Next Comment Seq# RT - Tattoo Repayment Comment  * 
     C                   EXSR      SBRVGN
      * Crt Tattoo Repay Cmnt CR - Tattoo Repayment Comment  * Repay Head
     C                   EXSR      SCCRRC
     C                   ENDIF
      *================================================================
     CSR   SAEXIT        ENDSR
      /EJECT
     CSR   SBRVGN        BEGSR
      *================================================================
      * Rtv Next Comment Seq# RT - Tattoo Repayment Comment  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSB         KLIST
     C                   KFLD                    WQSB01                         CC Company Numb
     C                   KFLD                    WQSB02                         TRH Repayment I
      * Setup key
     C                   Z-ADD     WAHONB        WQSB01                         CC Company Numb
     C                   Z-ADD     WACDNZ        WQSB02                         TRH Repayment I
      * Establish starting position
     C     KRSSB         SETLL     @AYCPA6                                      *
     C     KRSSB         READE     @AYCPA6                                90    *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'PRK1568'     W0RTN
      * USER: Processing if Data record not found
     C                   Z-ADD     1             YL0009                         TRC Sequence
     C                   GOTO      SBEXIT
     C                   ENDIF
      *
      * USER: Process Data record
     C                   DOW       NOT *IN90
     C     WBCINZ        ADD       1             YL0009                         TRC Sequence
     C                   GOTO      SBEXIT                                       *QUIT
     C     KRSSB         READE     @AYCPA6                                90    *
     C                   ENDDO
      *================================================================
     CSR   SBEXIT        ENDSR
      /EJECT
     CSR   SCCRRC        BEGSR
      *================================================================
      * Crt Tattoo Repay Cmnt CR - Tattoo Repayment Comment  * Repay Hea
      *================================================================
      *
     C                   Z-ADD     *ZERO         WN0010                         TRC Sequence
     C                   EVAL      WN0011 = ' '                                 RS User Changed
     C                   Z-ADD     *ZERO         WN0012                         RS Date Changed
     C                   Z-ADD     *ZERO         WN0013                         RS Time Changed
     C                   EVAL      WN0014 = ' '                                 RS Record Statu
     C                   EVAL      WN0015 = ' '                                 RS Job
     C                   EVAL      WN0016 = ' '                                 RS Program
     C                   EVAL      WN0017 = ' '                                 RS User Added
     C                   Z-ADD     *ZERO         WN0018                         RS Date Added
     C                   Z-ADD     *ZERO         WN0019                         RS Time Added
      *
     C                   EVAL      W0RTN = ' '
      * Move all fields to @AYCPAP
     C                   Z-ADD     WAHONB        WCHONB                         CC Company Numb
     C                   Z-ADD     WACDNZ        WCCDNZ                         TRH Repayment I
     C                   Z-ADD     WAHONB        WCHMNB                         BOH Company Num
     C                   Z-ADD     *ZERO         WCBNNB                         BOH Buy Order N
     C                   Z-ADD     *ZERO         WCBONB                         BOL Load Number
     C                   Z-ADD     *ZERO         WCCVNB                         TH Tattoo Numbe
     C                   Z-ADD     *ZERO         WCB0DT                         TH Kill Date
     C                   MOVEL     YL0008        WCG7T1                         TRC Comment
     C                   MOVEL     'S'           WCMKSS                         TRC Comment Typ
      *
      * USER: Processing before Data update
      * Make sure BOH Company Number is populated
      * CASE: PAR.BOH Company Number is *ZERO
     C                   IF        WAHONB = 0
     C                   Z-ADD     WAHONB        WCHMNB                         BOH Company Num
     C                   END                                                    *FI
      * Rtv Next Comment Seq# RT - Tattoo Repayment Comment  * 
     C                   EXSR      SDRVGN
      * Rtv Add Stamp         IF
     C                   MOVEL     'A'           WCAJST                         RS Record Statu
     C                   MOVEL     ##USR         WCABVN                         RS User Added
     C                   Z-ADD     ##JDT         WCABDT                         RS Date Added
     C                   Z-ADD     ##JTM         WCABTM                         RS Time Added
     C                   MOVEL     ##PGM         WCAGVN                         RS Program
     C                   MOVEL     ##JOB         WCAHVN                         RS Job
     C     KLCRSC        KLIST
     C                   KFLD                    WCHONB                         CC Company Numb
     C                   KFLD                    WCCDNZ                         TRH Repayment I
     C                   KFLD                    WCCINZ                         TRC Sequence
      * Check for duplicate primary key
     C     KLCRSC        SETLL     @AYCPAP                                90    *
     C                   IF        *IN90
     C                   MOVEL     'PRK1569'     W0RTN
      * Send message 'Tattoo Repayment Comme EX'
     C                   MOVEL     'PRK1569'     ZAMSID
     C                   EXSR      ZASNMS
     C                   GOTO      SCEXIT
     C                   ENDIF
      *
     C                   WRITE     @AYCPAP                              91      *
      *
      * Write error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
     C                   ENDIF
      *================================================================
     CSR   SCEXIT        ENDSR
      /EJECT
     CSR   SDRVGN        BEGSR
      *================================================================
      * Rtv Next Comment Seq# RT - Tattoo Repayment Comment  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSD         KLIST
     C                   KFLD                    WQSD01                         CC Company Numb
     C                   KFLD                    WQSD02                         TRH Repayment I
      * Setup key
     C                   Z-ADD     WAHONB        WQSD01                         CC Company Numb
     C                   Z-ADD     WACDNZ        WQSD02                         TRH Repayment I
      * Establish starting position
     C     KRSSD         SETLL     @AYCPA6                                      *
     C     KRSSD         READE     @AYCPA6                                90    *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'PRK1568'     W0RTN
      * USER: Processing if Data record not found
     C                   Z-ADD     1             WCCINZ                         TRC Sequence
     C                   GOTO      SDEXIT
     C                   ENDIF
      *
      * USER: Process Data record
     C                   DOW       NOT *IN90
     C     WBCINZ        ADD       1             WCCINZ                         TRC Sequence
     C                   GOTO      SDEXIT                                       *QUIT
     C     KRSSD         READE     @AYCPA6                                90    *
     C                   ENDDO
      *================================================================
     CSR   SDEXIT        ENDSR
      /EJECT
     CSR   UASUBR        BEGSR
      *================================================================
      * Modification history
      *================================================================
      *  8/30/2021 JBB HD83251 - Do not backup files when user is *PGMR.
      *                          Also do not allow a Repayment Date that
      *                          greater than or equal to current job dat
      *  5/04/2021 JBB F17058 - Tattoo Repayments by Business User
      *                         Function created.
      *================================================================
     CSR   UAEXIT        ENDSR
      /EJECT
     CSR   UBSUBR        BEGSR
      *================================================================
      * Process file backups if not already done
      *================================================================
      * Retrieve current Company Value for backup status and date
      * Rtv Company Values    XF - STR Order Management Sys  * HPEREPAYBU
     C                   CALL      'PDGKXFR'                            90      Rtv Company Val
     C                   PARM      *BLANK        W0RTN
     C                   PARM      P1HONB        WQ0010                         BOH Company Num
     C                   PARM      @CN(002)      WQ0011                         Company Value C
     C     YL0013        PARM      *BLANK        WQ0012                         System Value Al
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PDGKXFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        99        *
     C                   END
      * Breakout Repayment Backup values
      * CASE: *OTHERWISE
      * 1. Backup Status (position 1)
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     1             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00040 OR
     C                             ZQ > 00040
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0013:ZQ     YL0014                 90      File Backup Sta
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
      * 2. Date of Backup (positions 2-8)
     C                   Z-ADD     7             YRSW00
     C                   Z-ADD     2             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00040 OR
     C                             ZQ > 00040
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0013:ZQ     YL0012                 90      Date Alpha USR
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   MOVE      YL0012        YL0015                         Last Run Date
     C                   EVAL      YL0016 = ' '                                 Date From Conve
     C                   MOVEL     YL0015        YL0016                         Date From Conve
      * 3. Last file backed up (positions 9 - 18)
     C                   Z-ADD     10            YRSW00
     C                   Z-ADD     9             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00040 OR
     C                             ZQ > 00040
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0013:ZQ     YL0017                 90      File
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
      * Retrieve From and To library names for backup files and Co# Abbre
      * Rtv Company Values    XF - STR Order Management Sys  * HPEREPAYLB
     C                   CALL      'PDGKXFR'                            90      Rtv Company Val
     C                   PARM      *BLANK        W0RTN
     C                   PARM      P1HONB        WQ0013                         BOH Company Num
     C                   PARM      @CN(003)      WQ0014                         Company Value C
     C     YL0018        PARM      *BLANK        WQ0015                         System Value Al
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PDGKXFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        99        *
     C                   END
      * If From and To libraries found, break them out; build prefix
      * CASE: LCL.Libraries: From/To is Entered
     C                   IF        YL0018 <> ' '
     C                   Z-ADD     10            YRSW00
     C                   Z-ADD     1             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00020 OR
     C                             ZQ > 00020
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0018:ZQ     YL0005                 90      Library From US
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     10            YRSW00
     C                   Z-ADD     11            ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00020 OR
     C                             ZQ > 00020
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0018:ZQ     YL0006                 90      Library To USR
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
      * Build backup file prefix
     C                   EXSR      UCSUBR                                       Build backup fi
     C                   ELSE
      * CASE: *OTHERWISE
      * Send message 'Repay: From/To Libs Empty'
     C                   MOVEL     'PRK1573'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
      *
     C                   END                                                    *FI
      * Check if backup already run for current date
      * CASE: Run Date = Job Date AND Backup Status = Completed
      *  - c1 AND c2
      *   |- c1    : LCL.Last Run Date EQ JOB.*Job date
      *   |- c2    : LCL.File Backup Status USR is Backup completed
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        YL0015 = ##JDT
     C                   IF        YL0014 = 'C'
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
      * If backup already run today, do not display text regarding file
      * backups.
     C                   IF        Y0CX01 = '1'
     C                   MOVEL     'N'           YL0001                         Display Warning
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     'Y'           YL0001                         Display Warning
     C                   END                                                    *FI
      *================================================================
     CSR   UBEXIT        ENDSR
      /EJECT
     CSR   UCSUBR        BEGSR
      *================================================================
      * Build backup file prefix
      *================================================================
      * The files will be named as follows: LLMMDDFFFF    ex: GU0505PKAW
      * LL   = Location abreviation:  GU, ST, TF, or T2
      * MM   = Month
      * DD   = Day
      * FFFF = first four characters of the file name
      * Breakout date and make it MMDD alpha
      * CASE: *OTHERWISE
      * LCL.Month USR = JOB.*Job date *MONTH
     C     ##JDT         ADD       1000000       XDINDT
     C                   Z-ADD     XDINMM        YL0019
      * LCL.Day of Month USR = JOB.*Job date *DAY OF MONTH
     C     ##JDT         ADD       1000000       XDINDT
     C                   EXSR      XCVTA
     C                   Z-ADD     XDAY1         XDAY2
     C                   Z-ADD     0             XDINDD
     C                   EXSR      XCVTA
     C                   MOVEL     '1'           XDSEL
     C                   MOVEL     '1111111'     XDCDW
     C                   EXSR      XDOWS
     C                   MOVEL     'NONE'        WUDLN
     C                   EXSR      XDUDY
     C                   MOVE      XDURR         YL0020
      * Month and Day combined
      * LCL.Month and Day 4.0 =
      *    *COMPUTE ((x1 * x2) + x3)
      * x1    : LCL.Month USR
      * *     : PGM.*Synon (17,7) work field *
      * x2    : CON.100
      * +     : PGM.*Synon (17,7) work field
      * x3    : LCL.Day of Month USR
     C     YL0019        MULT      100           W0WD01                         *Synon (17,7) w
     C     W0WD01        ADD       YL0020        W0WD00                         *Synon (17,7) w
     C                   Z-ADD     W0WD00        YL0021                         Month and Day 4
     C                   EVAL      YL0022 = ' '                                 @Text 4
     C                   MOVEL     YL0021        YL0022                         @Text 4
      * Build file prefix: Company abbreviation + MMDD
      * CASE: *OTHERWISE
      * Build file suffix for specific companies
      * CASE: PAR.CC Company Number is SBD Farms of Guymon, Ok
     C                   IF        P1HONB = 360
     C                   Z-ADD     *ZEROS        ZQ
     C     'GU'          CAT(P)    YL0022:ZQ     YL0007                         Backup File Pre
     C                   ELSE
      * CASE: PAR.CC Company Number is Sioux City
     C                   IF        P1HONB = 440
     C                   Z-ADD     *ZEROS        ZQ
     C     'ST'          CAT(P)    YL0022:ZQ     YL0007                         Backup File Pre
     C                   ELSE
      * CASE: Company is Triumph Foods OR Seaboard Triumph Foods
      *  - c1 OR c2
      *   |- c1    : PAR.CC Company Number is Triumph Foods Market
      *   |- c2    : PAR.CC Company Number is Triumph Foods-2
      *   '-
     C                   IF        P1HONB = 960 OR
     C                             P1HONB = 961
     C                   Z-ADD     *ZEROS        ZQ
     C     'TF'          CAT(P)    YL0022:ZQ     YL0007                         Backup File Pre
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
      *================================================================
     CSR   UCEXIT        ENDSR
      /EJECT
     CSR   VACKRL        BEGSR
      *================================================================
      * Check reference to Company Control HPE
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Name search required?
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DTL) #1HONB' defaulted for 'CC Company Number'.
     W* Y2W0052 - One or more arguments defaulted to WRK/CON context.
      * Field '(WRK) WUBSNB' defaulted for 'Next Buy Order Number'.
      * Field '(WRK) WUB1DT' defaulted for 'Current Kill Date'.
      * Field '(WRK) WUB2DT' defaulted for 'Next Kill Date'.
      * Field '(WRK) WUH4NB' defaulted for 'Last Drive Card Number'.
     C                   IF        YPMTFD = '#1HONB'
     C                   CALL      'PKLFSRR'                            90      Sel Company Con
     C                   PARM      *BLANK        W0RTN
     C     #1HONB        PARM      #1HONB        WQ0001                         CC Company Numb
     C     WUBSNB        PARM      *ZERO         WQ0002                         Next Buy Order
     C     WUB1DT        PARM      *ZERO         WQ0003                         Current Kill Da
     C     WUB2DT        PARM      *ZERO         WQ0004                         Next Kill Date
     C     WUH4NB        PARM      *ZERO         WQ0005                         Last Drive Card
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PKLFSRR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' ' AND
     C                             W0RTN <> 'Y2U0016'
     C                   SETON                                        99        *
     C                   END
      *
     C                   IF        #1HONB <> *ZERO AND
     C                             YPMTFD <> ' ' AND
     C                             W0RTN = ' '
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
      * No value selected, exit
     C                   IF        W0RTN <> ' ' AND
     C                             YPMTFD = ' '
     C                   GOTO      VAEXIT
     C                   END
     C                   END
      *................................................................
      * If all low order keys not entered, exit
     C                   IF        #1HONB = *ZERO
     C                   GOTO      VAEXIT
     C                   END
      *
     C     KLVAWD        KLIST
     C                   KFLD                    WDHONB                         CC Company Numb
      * Setup key
     C                   Z-ADD     #1HONB        WDHONB
     C     KLVAWD        CHAIN     @AZCPCN                            9091      *
      * Record found - move back any virtuals
     C                   IF        NOT *IN90
     C                   GOTO      VAEXIT
     C                   END
     C                   IF        YPMTFD <> ' '
     C                   SETOFF                                       9091
     C                   GOTO      VAEXIT
     C                   END
      * Send message 'Company Control HPE    NF'
     C                   MOVEL     'PRK0055'     ZAMSID
     C                   EXSR      ZASNMS
     C                   MOVEL     'PRK0055'     W0RTN
      *================================================================
     CSR   VAEXIT        ENDSR
      /EJECT
     CSR   XCVFA         BEGSR
      *================================================================
      * Convert absolute day to date
      *================================================================
     C                   IF        XDAY1 > 109267
     C                   ADD       2             XDAY1
     C                   ELSE
     C                   IF        XDAY1 > 36218
     C                   ADD       1             XDAY1
     C                   END
     C                   END
      * Full years (up to the date)
     C     XDAY1         DIV       365.25        XDWK1
     C                   MVR                     XDWK3
     C                   Z-ADD     XDWK1         XDINYY
      * The date is the end of a year
     C                   IF        XDWK3 = 0
     C                   Z-ADD     12            XDINMM
     C                   Z-ADD     31            XDINDD
     C                   ELSE
      * Year days up to the date
     C     XDWK1         MULT      365.25        XDWK2
     C                   SUB       XDWK2         XDAY1
     C                   ADD       1             XDINYY
      * Leap year ?
     C     XDINYY        DIV       4             XDWK1
     C                   MVR                     XDWK1
      * March 1 (relative day of the year)
     C                   IF        XDWK1 = 0
     C                   Z-ADD     60            XDWK1
     C                   ELSE
     C                   Z-ADD     59            XDWK1
     C                   END
      * Define date base month and offset day -
      *  - January (thru February)
     C                   IF        XDAY1 <= XDWK1
     C                   Z-ADD     1             XDINMM
     C                   ELSE
     C                   SUB       XDWK1         XDAY1
      *  - March (thru July)
     C                   IF        XDAY1 <= 153
     C                   Z-ADD     3             XDINMM
     C                   ELSE
      *  - August (thru December)
     C                   Z-ADD     8             XDINMM
     C                   SUB       153           XDAY1
     C                   END
      * Calculate 2 month base and offset day
     C     XDAY1         SUB       1             XDWK1
     C                   DIV       61            XDWK1
     C                   MVR                     XDAY1
     C                   ADD       1             XDAY1
     C                   MULT      2             XDWK1
     C                   ADD       XDWK1         XDINMM
     C                   END
      * Calculate date increment,
     C                   IF        XDAY1 > 31
     C                   ADD       1             XDINMM
     C                   SUB       31            XDAY1
     C                   END
     C                   Z-ADD     XDAY1         XDINDD
     C                   END
      *================================================================
     CSR   XCVFAE        ENDSR
      /EJECT
     CSR   XCVTA         BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C     XDINYY        SUB       1             XDWK1
     C     XDWK1         MULT      365.25        XDAY1
     C                   IF        XDWK1 >= 300
     C                   SUB       2             XDAY1
     C                   ELSE
     C                   IF        XDWK1 >= 100
     C                   SUB       1             XDAY1
     C                   END
     C                   END
      * (from the beginning of the year to the beginning of the month:)
     C     XDINMM        SUB       1             XDWK1
      *     ...+31*(MM-1) (for January-February) ...
     C                   IF        XDINMM < 3
     C                   MULT      31            XDWK1
     C                   ADD       XDWK1         XDAY1
     C                   ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                   MULT      30            XDWK1
     C                   ADD       XDWK1         XDAY1
      *         ...-2 (for preceding February) ...
     C                   SUB       2             XDAY1
      *         ...+1 (for preceding February, if leap year) ...
     C                   IF        XDINYY <> 100 AND
     C                             XDINYY <> 300
     C     XDINYY        DIV       4             XDWK1
     C                   MVR                     XDWK1
     C                   IF        XDWK1 = 0
     C                   ADD       1             XDAY1
     C                   END
     C                   END
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C                   IF        XDINMM < 8
     C     XDINMM        MULT      .5            XDWK1
     C                   ADD       XDWK1         XDAY1
     C                   ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C     XDINMM        ADD       1             XDWK1
     C                   MULT      .5            XDWK1
     C                   ADD       XDWK1         XDAY1
     C                   END
     C                   END
      * ...+DD (days in the month up to the ending date)
     C                   ADD       XDINDD        XDAY1
      *================================================================
     CSR   XCVTAE        ENDSR
      /EJECT
     CSR   XDADY         BEGSR
      *================================================================
      * Calculate date increment, *DAYS
      *================================================================
      * None days of week selected
     C                   IF        XDURR = 0 OR
     C                             XDWSL = 0
     C                   Z-ADD     XDAY2         XDAY1
      * Return Code: Unable to increment date.
     C                   IF        XDURR <> *ZERO
     C                   MOVEL     'Y2U0059'     W0RTN
     C                   ENDIF
     C                   GOTO      XDADYE
     C                   ENDIF
      * All days of week selected
     C                   IF        XDWSL = 7
     C     XDAY2         ADD       XDURR         XDAY1
     C                   GOTO      XDADYM
     C                   ENDIF
      * Some days of week selected
     C                   IF        XDURR >= 0
     C                   Z-ADD     1             XDSTP
     C                   ELSE
     C                   Z-ADD     -1            XDSTP
     C                   ENDIF
      * Get number of full weeks in the duration
     C     XDURR         DIV       XDWSL         XDWNB
      * Isolate the last week
     C                   MVR                     XDLSW
     C                   IF        XDLSW = 0
     C     XDWSL         MULT      XDSTP         XDLSW
     C                   SUB       XDSTP         XDWNB
     C                   ENDIF
      * Increment the date by the full weeks
     C     XDWNB         MULT      7             XDWK1
     C     XDAY2         ADD       XDWK1         XDAY1
      * Determine day of week of the beginning date
     C     XDAY2         ADD       3             YY
     C                   DIV       7             YY
     C                   MVR                     YY
     C                   IF        YY = 0
     C                   Z-ADD     7             YY
     C                   ENDIF
      * Loop: Increment the date by the last week
      * Increment the date
     C                   DOW       XDLSW <> 0
     C                   ADD       XDSTP         XDAY1
      * Increment the day of week
     C                   ADD       XDSTP         YY
      * Put day of week into the range 1-7
     C                   IF        YY = 0
     C                   Z-ADD     7             YY
     C                   ELSE
     C                   IF        YY = 8
     C                   Z-ADD     1             YY
     C                   ELSE
     C                   IF        YY = -1
     C                   Z-ADD     6             YY
     C                   ENDIF
     C                   ENDIF
     C                   ENDIF
      * Selected day of the last week has been processed
     C                   IF        YDOW(YY) = XDSEL
     C                   SUB       XDSTP         XDLSW
     C                   ENDIF
      * End of loop
     C                   ENDDO
     C     XDADYM        TAG
     C                   IF        XDINDD < 1
     C                   Z-ADD     1             XDINDD
     C                   MOVEL     'Y2U0006'     W0RTN
     C                   ENDIF
      *================================================================
     CSR   XDADYE        ENDSR
      /EJECT
     CSR   XDCK2         BEGSR
      *================================================================
      * Validate external date format
      *================================================================
     C                   MOVEL     *BLANK        W0RTN
     C                   Z-ADD     *ZERO         XDINDT
      * If external date is zero, do not check
     C     XDEXDT        CABEQ     *ZERO         XDCK2E
      *................................................................
      * Map external to internal according to date format
     C                   IF        XDDTFM = 'DMY'
     C                   Z-ADD     XDEX02        XDINDD                         DD
     C                   Z-ADD     XDEX03        XDINMM                         MM
     C                   Z-ADD     XDEX04        XDINYY                         YY
     C                   ELSE
     C                   IF        XDDTFM = 'MDY'
     C                   Z-ADD     XDEX02        XDINMM                         MM
     C                   Z-ADD     XDEX03        XDINDD                         DD
     C                   Z-ADD     XDEX04        XDINYY                         YY
     C                   ELSE
      * YMD format
     C                   Z-ADD     XDEX02        XDINYY                         YY
     C                   Z-ADD     XDEX03        XDINMM                         MM
     C                   Z-ADD     XDEX04        XDINDD                         DD
     C                   END
     C                   END
      * If YY prior to the 'cut-off' year treat as 20YY.
     C                   IF        XDINYY < XOFFYY
     C                   ADD       100           XDINYY
     C                   END
     C     YPMTFD        CABNE     *BLANK        XDCK2E
      *................................................................
      * Check months in range 1 to 12
     C     XDINMM        CABLT     1             XDCK2M
     C     XDINMM        CABGT     12            XDCK2M
      *................................................................
      * Check days in range 1 to maximum for month
     C     XDINDD        CABLT     1             XDCK2M
     C     XDINDD        CABGT     @XD(XDINMM)   XDCK2M
      *................................................................
      * Special case: leap year
     C                   IF        XDINMM = 2
     C                   IF        XDINYY <> *ZERO AND
     C                             XDINYY <> 200
     C     XDINYY        DIV       4             XDWK1
     C                   MVR                     XDWK1
     C                   ELSE
     C                   Z-ADD     1             XDWK1
     C                   END
      * Year is not leap
     C                   IF        XDWK1 <> *ZERO
     C     XDINDD        CABGT     28            XDCK2M
     C                   END
     C                   END
     C                   GOTO      XDCK2E
      *................................................................
      * Send error message
     C     XDCK2M        TAG
      * Send message '*Invalid date'
     C                   MOVEL     'Y2U0006'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   MOVEL     'Y2U0006'     W0RTN
      * Disable time portion if timestamp is validated
     C                   Z-ADD     *ZERO         XTTIM
      *================================================================
     CSR   XDCK2E        ENDSR
      /EJECT
     CSR   XDOWS         BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                   MOVEA     XDCDW         YDOW
     C                   Z-ADD     0             XDWSL
     C                   Z-ADD     1             YY
     C                   DOW       YY <= 7
     C                   IF        YDOW(YY) = XDSEL
     C                   ADD       1             XDWSL
     C                   END
     C                   ADD       1             YY
     C                   END
      *================================================================
     CSR   XDOWSE        ENDSR
      /EJECT
     CSR   XDUDY         BEGSR
      *================================================================
      * Calculate duration, *DAYS
      *================================================================
     C                   IF        XDAY1 < 1 OR
     C                             XDAY2 < 1
     C                   Z-ADD     0             XDURR
     C                   MOVEL     'Y2U0006'     W0RTN
     C                   GOTO      XDUDYE
     C                   END
      * From date2 to date1
     C                   IF        XDAY1 >= XDAY2
     C                   Z-ADD     XDAY2         XABEG
     C                   Z-ADD     XDAY1         XAEND
     C                   ELSE
      * From date1 to date2
     C                   Z-ADD     XDAY1         XABEG
     C                   Z-ADD     XDAY2         XAEND
     C                   END
      * None days of week selected
     C                   IF        XDWSL = 0
     C                   Z-ADD     0             XDURR
     C                   GOTO      XDUDYC
     C                   END
     C     XAEND         SUB       XABEG         XDURR
      * All days of week selected
     C                   IF        XDWSL = 7
     C                   GOTO      XDUDYC
     C                   END
      * Some days of week selected
     C                   DIV       7             XDURR
     C                   MVR                     XDLSW
     C                   MULT      XDWSL         XDURR
      * Determine day of week of the beginning date
     C                   IF        XDLSW <> 0
     C     XABEG         ADD       3             YY
     C                   DIV       7             YY
     C                   MVR                     YY
      * Loop: Increment the date by the last week
      * Increment the day of week
     C                   DOW       XDLSW > 0
     C                   ADD       1             YY
     C                   SUB       1             XDLSW
      * Put day of week into the range 1-7
     C                   IF        YY = 8
     C                   Z-ADD     1             YY
     C                   END
      * Selected day of the last week has been processed
      * Increment duration
     C                   IF        YDOW(YY) = XDSEL
     C                   ADD       1             XDURR
     C                   END
      * End of loop
     C                   END
     C                   END
     C     XDUDYC        TAG
      * Return Code: Unable to calculate duration
     C                   IF        XDURR = 0
     C                   MOVEL     'Y2U0060'     W0RTN
     C                   ELSE
     C                   EVAL      W0RTN = ' '
     C                   END
      *================================================================
     CSR   XDUDYE        ENDSR
      /EJECT
     CSR   XDVC2T        BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                   Z-ADD     0             XDEX01                         CC
     C                   IF        XDDTFM = 'DMY'
     C                   Z-ADD     XDINDD        XDEX02                         DD
     C                   Z-ADD     XDINMM        XDEX03                         MM
     C                   Z-ADD     XDINYY        XDEX04                         YY
     C                   ELSE
     C                   IF        XDDTFM = 'MDY'
     C                   Z-ADD     XDINMM        XDEX02                         MM
     C                   Z-ADD     XDINDD        XDEX03                         DD
     C                   Z-ADD     XDINYY        XDEX04                         YY
     C                   ELSE
      * YMD format
     C                   Z-ADD     XDINYY        XDEX02                         YY
     C                   Z-ADD     XDINMM        XDEX03                         MM
     C                   Z-ADD     XDINDD        XDEX04                         DD
     C                   END
     C                   END
      *================================================================
     CSR   XDVC2E        ENDSR
      /EJECT
     CSR   YKDDW1        BEGSR
      *================================================================
      * Calculate window location for drop down lists on screen 1
      *================================================================
      *================================================================
     CSR   YKEXT1        ENDSR
      /EJECT
     CSR   Y0SET         BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR   Y0EXIT        ENDSR
      /EJECT
     CSR   Y8TST         BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                   Z-ADD     @#RWCL        ZINPOS
     C     ##WSR         MULT      256           ZWORK
     C                   ADD       ##WSC         ZWORK
     C                   SUB       ZWORK         ZINPOS
     C                   SUB       1             ZINPOS
     C     ZINPOS        DIV       256           W0CRW
     C                   MVR                     W0CCL
      *================================================================
     CSR   Y8EXIT        ENDSR
      /EJECT
     CSR   Y9CLR         BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR   Y9EXIT        ENDSR
      /EJECT
     CSR   ZASNMS        BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C                   IF        ZAPGMQ = ' '
     C                   MOVEL     ##PGM         ZAPGMQ
     C                   END
      * If no message file specified, use default
     C                   IF        ZAMSGF = ' '
     C                   MOVEL     ZADFMF        ZAMSGF
     C                   END
     C                   CALL      'Y2SNMGC'
     C                   PARM                    ZAPGMQ                         Program queue
     C                   PARM                    ZAPGRL                         Rel queue
     C                   PARM                    ZAMSID                         Message ID
     C                   PARM                    ZAMSGF                         Message file
     C                   PARM                    ZAMSDA                         Message data
     C                   PARM                    ZAMSTP                         Message type
     C                   PARM      'Y'           YILE
      * Clear all fields for default mechanism next time
     C                   EVAL      ZAPGMQ = ' '
     C                   EVAL      ZAPGRL = ' '
     C                   EVAL      ZAMSID = ' '
     C                   EVAL      ZAMSGF = ' '
     C                   EVAL      ZAMSDA = ' '
     C                   EVAL      ZAMSTP = ' '
      *================================================================
     CSR   ZAEXIT        ENDSR
      /EJECT
     CSR   ZDVPMT        BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                   EVAL      YPMTFD = ' '
     C                   Z-ADD     *ZERO         YAFSCH
     C                   Z-ADD     *ZERO         YPMRRN
      *
      *
      * Extract cursor row and column
     C                   IF        *IN04
     C     @#RWCL        DIV       256           ZHCSRW
     C                   MVR                     ZHCSCL
      *
      * Save cursor position for redisplay
     C     @#WWRC        DIV       256           ZZCSRW                         Row
     C                   MVR                     ZZCSCL                         Column
      *
      * Error if user defined prompting is not specified.
     C                   IF        YPMTFD = ' '
     C                   IF        W0PMT = 'N'
     C                   MOVEL     '*NONE'       YPMTFD
     C                   MOVEL     'Y'           W0HLP
     C                   MOVEL     'Y'           ZAFSMS
      * Send error message.
     C                   MOVEL     'Y2U0101'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END
     C                   END
      *
     C                   END
      *================================================================
     CSR   ZDEXIT        ENDSR
      /EJECT
     CSR   ZHHPKY        BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                   MOVEL     'Y'           W0HLP
      *
      * Extract cursor row and column
     C     @#RWCL        DIV       256           ZHCSRW                         Row
     C                   MVR                     ZHCSCL                         Column
      *
      * Save cursor position for redisplay
     C     @#WWRC        DIV       256           ZZCSRW                         Row
     C                   MVR                     ZZCSCL                         Column
      *
     C     ZHCSRW        SUB       ##WSR         YWPORW
     C     ZHCSCL        SUB       ##WSC         YWPOC1
     C                   SUB       1             YWPOC1
      *
      *
     C                   CALL      'YDDSHPR'
     C                   PARM      ##PGM         W0HPMB                         Help text sourc
     C                   PARM      *BLANK        YYHPFL                         Help text file
     C                   PARM      *BLANK        YYHPLB                         Help text libra
     C                   PARM                    W0RTN
     C                   PARM      '*CSRLOC'     YYHLVN                         Help label
     C                   PARM      '*NORMAL'     YYUSOP                         Options
     C                   PARM      YWPORW        YYRW                           Row
     C                   PARM      YWPOC1        YYCL                           Column
     C                   PARM      *ZERO         YYLGCT                         # of grps
     C                   PARM      *BLANK        YYLGVN                         Label grps
      *
      * Clear set cursor DDS indicator
     C  N94              MOVEL     'OFF'         WCSRLC
     C  N94              SETON                                        94        *
      *================================================================
     CSR   ZHEXIT        ENDSR
      /EJECT
     CSR   ZRRPWD        BEGSR
      *================================================================
      * *Reposition window
      *================================================================
     C                   MOVEL     'Y'           YSL(1)                         Set wdw locatio
     C                   MOVEL     'R'           YWLCTP                         Locate action t
     C                   EXSR      ZSSTLC                                       Set window loca
      *
      * Redisplay previous panel
     C                   WRITE     ASSUME
      *================================================================
     CSR   ZREXIT        ENDSR
      /EJECT
     CSR   ZSSTLC        BEGSR
      *================================================================
      * Set window location
      *================================================================
     C                   IF        YSL(1) = 'Y'
     C                   MOVEL     '*CALC'       YWWDCR                         Window referenc
     C                   Z-ADD     -3            YWWDRW                         Window start ro
     C                   Z-ADD     -3            YWWDCL                         Window start co
     C                   Z-ADD     052           YWWDWD                         Window width
     C                   Z-ADD     015           YWWDDP                         Window depth
     C                   MOVEL     'N'           YSL(1)                         Set wdw locatio
      *
     C                   EXSR      ZURTLC                                       Retrieve window
     C                   EXSR      ZTWDFD                                       Move window fie
     C                   END
      *================================================================
     CSR   ZSEXIT        ENDSR
      /EJECT
     CSR   ZTWDFD        BEGSR
      *================================================================
      * Move window fields by panel
      *================================================================
     C                   Z-ADD     YWWDRW        ##WSR                          Window start ro
     C                   Z-ADD     YWWDCL        ##WSC                          Window start co
     C                   EXSR      YKDDW1
      *================================================================
     CSR   ZTEXIT        ENDSR
      /EJECT
     CSR   ZURTLC        BEGSR
      *================================================================
      * Retrieve window location
      *================================================================
      *
      * Set up parameters to API
      *
      * Return code
     C                   EVAL      W0RTN = ' '
      * Retrieval Function
     C                   EVAL      YWRTFN = ' '
     C                   MOVEL     '*WDWLOC'     YWRTFN
      *
     C                   SETOFF                                         90      *
      *
     C                   CALL      'YWRTLCI'                            90      *
     C                   PARM                    YWRTFN                         Retrieval Funct
     C                   PARM                    YWWDWD                         Window width
     C                   PARM                    YWWDDP                         Window depth
     C                   PARM                    YWWDCR                         Window referenc
     C                   PARM                    YWWDRW                         *Window start r
     C                   PARM                    YWWDCL                         *Window start c
     C                   PARM                    W0RTN                          Return code
      * If error on call to API - default window location to top left cor
     C                   IF        *IN90 OR
     C                             W0RTN <> ' '
     C                   Z-ADD     2             YWWDRW                         *Window start r
     C                   Z-ADD     2             YWWDCL                         *Window start c
     C                   END
      *
      *================================================================
     CSR   ZUEXIT        ENDSR
      /EJECT
     CSR   ZVCFPM        BEGSR
      *================================================================
      * Set Confirm Prompt window location
      *================================================================
      *
     C     ##WSR         ADD       015           YWWDRW
     C     ##WSC         ADD       052           YWWDCL
      *
     C                   ADD       1             YWWDCL
     C                   SUB       1             YWWDRW                         Window start ro
     C                   SUB       21            YWWDCL                         Window start co
     C                   Z-ADD     18            YWWDWD                         Window width
     C                   Z-ADD     2             YWWDDP                         Window depth
     C                   MOVEL     '*TL  '       YWWDCR                         Window referenc
     C                   EVAL      YWRTFN = ' '
     C                   MOVEL     '*WDWLOC'     YWRTFN                         Retrieval Funct
     C                   EXSR      ZURTLC                                       Retrieve window
     C                   Z-ADD     YWWDRW        ##WSRC                         *Window start r
     C                   Z-ADD     YWWDCL        ##WSCC                         *Window start c
      *
      *================================================================
     CSR   ZVEXIT        ENDSR
      /EJECT
     CSR   ZXEXPG        BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
     C                   EVAL      P0RTN = ' '
     C                   EXSR      ZYEXPG
      *================================================================
     CSR   ZXEXIT        ENDSR
      /EJECT
     CSR   ZYEXPG        BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Copy any undisplayed messages back to caller
     C                   CALL      'Y2CPMSC'
     C                   PARM                    ##PGM
     C                   PARM      'Y'           YILE
      *
      * Terminate program
     C                   SETON                                        LR
      *
      * Exit program
     C                   RETURN
      *
      *================================================================
     CSR   ZYEXIT        ENDSR
      /EJECT
     CSR   ZZINIT        BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C                   IF        W0ICL = ' '
     C                   MOVEL     'Y'           W0ICL                          *Initial call
     C                   ELSE
     C                   MOVEL     'N'           W0ICL
     C                   END
     C                   EVALR     P0RTN = ' '
     C                   EVALR     W0RTN = ' '
     C                   EVAL      W0RSL = ' '
     C                   EVAL      W0RSF = ' '
     C                   MOVEL     *ZEROS        W0RTW
     C                   MOVEL     '400'         W0ENV
      * Retrieve job attributes
     C                   CALL      'Y2RTJCR'
     C                   PARM                    PGMDS
      * Setup job date/time
     C                   Z-ADD     ##SD7         ##JDT
     C                   TIME                    ##JTM
      * Update screen time
     C                   TIME                    ##TME
      * Initialise Allow Set Window Location flags
     C                   MOVEA     *ALL'Y'       YSL
      * Set display size
     C                   SETOFF                                           93    *
     C     @#SCRW        COMP      27                                     93    *
      * Initialise window location variables.
     C                   Z-ADD     *ZEROS        ##WSR
     C                   Z-ADD     *ZEROS        ##WSC
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WAHONB                         CC Company Numb
     C                   Z-ADD     *ZERO         WACDNZ                         TRH Repayment I
     C                   Z-ADD     *ZERO         WAIDDT                         TRH Date Start
     C                   Z-ADD     *ZERO         WACATM                         TRH Time Start
     C                   Z-ADD     *ZERO         WAIEDT                         TRH Date Comple
     C                   Z-ADD     *ZERO         WACBTM                         TRH Time Comple
     C                   Z-ADD     *ZERO         WAIFDT                         TRH Payment Dat
     C                   Z-ADD     *ZERO         WACTNZ                         TRH Payment Ste
     C                   Z-ADD     *ZERO         WAAADT                         RS Date Changed
     C                   Z-ADD     *ZERO         WAAMTM                         RS Time Changed
     C                   Z-ADD     *ZERO         WAABDT                         RS Date Added
     C                   Z-ADD     *ZERO         WAABTM                         RS Time Added
      * Obtain default message file
     C     *DTAARA       DEFINE    PKMGFLA       ZADFMF
     C                   IN        ZADFMF
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WBHONB                         CC Company Numb
     C                   Z-ADD     *ZERO         WBCDNZ                         TRH Repayment I
     C                   Z-ADD     *ZERO         WBCINZ                         TRC Sequence
     C                   Z-ADD     *ZERO         WBHMNB                         BOH Company Num
     C                   Z-ADD     *ZERO         WBBNNB                         BOH Buy Order N
     C                   Z-ADD     *ZERO         WBBONB                         BOL Load Number
     C                   Z-ADD     *ZERO         WBCVNB                         TH Tattoo Numbe
     C                   Z-ADD     *ZERO         WBB0DT                         TH Kill Date
     C                   Z-ADD     *ZERO         WBAADT                         RS Date Changed
     C                   Z-ADD     *ZERO         WBAMTM                         RS Time Changed
     C                   Z-ADD     *ZERO         WBABDT                         RS Date Added
     C                   Z-ADD     *ZERO         WBABTM                         RS Time Added
      * Clear all neither parameters
      * Crt Tattoo Repay Cmnt CR - Tattoo Repayment Comment  * Repay Head
     C                   Z-ADD     *ZERO         WCCINZ                         TRC Sequence
     C                   Z-ADD     *ZERO         WCAADT                         RS Date Changed
     C                   Z-ADD     *ZERO         WCAMTM                         RS Time Changed
     C                   Z-ADD     *ZERO         WCABDT                         RS Date Added
     C                   Z-ADD     *ZERO         WCABTM                         RS Time Added
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WDHONB                         CC Company Numb
     C                   Z-ADD     *ZERO         WDBSNB                         Next Buy Order
     C                   Z-ADD     *ZERO         WDB1DT                         Current Kill Da
     C                   Z-ADD     *ZERO         WDB2DT                         Next Kill Date
     C                   Z-ADD     *ZERO         WDH4NB                         Last Drive Card
     C                   Z-ADD     *ZERO         WDK3NB                         Last Tattoo Nbr
     C                   Z-ADD     *ZERO         WDCDDT                         Current Product
     C                   Z-ADD     *ZERO         WDCEDT                         Next Production
     C                   Z-ADD     *ZERO         WDAADT                         RS Date Changed
     C                   Z-ADD     *ZERO         WDAMTM                         RS Time Changed
     C                   Z-ADD     *ZERO         WDABDT                         RS Date Added
     C                   Z-ADD     *ZERO         WDABTM                         RS Time Added
      * Define work field Next Buy Order Number
     C                   Z-ADD     *ZERO         WUBSNB
      * Define work field Current Kill Date
     C                   Z-ADD     *ZERO         WUB1DT
      * Define work field Next Kill Date
     C                   Z-ADD     *ZERO         WUB2DT
      * Define work field Last Drive Card Number
     C                   Z-ADD     *ZERO         WUH4NB
      * Flag no *SET CURSOR in the program
     C                   MOVE      'N'           YSETCS
     C                   EVALR     WCSRLC = ' '
      * Define *Synon program work fields
     C                   Z-ADD     *ZEROS        YRSW00                         *Synon (5,0) wo
     C                   Z-ADD     *ZEROS        YRSW01                         *Synon (5,0) wo
     C                   Z-ADD     *ZEROS        W0WD01                         *Synon (17,7) w
     C                   Z-ADD     *ZEROS        W0WD00                         *Synon (17,7) w
     C                   EVAL      W0CFL = ' '                                  *Cursor field
     C                   Z-ADD     *ZEROS        W0CRW                          *Cursor row
     C                   Z-ADD     *ZEROS        W0CCL                          *Cursor column
      * Move main file information to JOB context
     C                   MOVE      @1FFL         ZZFFL                          Main file name
     C                   MOVE      @1FLB         ZZFLB                          Main file lib
     C                   MOVE      @1FMB         ZZFMB                          Main file mbr
     C                   MOVE      ZZFFL         @1FFL
     C                   MOVE      ZZFLB         @1FLB
     C                   MOVE      ZZFMB         @1FMB
     C                   CALL      'Y2QLVNR'
     C                   PARM                    ZZFFL
     C                   PARM                    ZZFLB
     C                   PARM                    ZZFQL                          LIBRARY/FILE
      * Dummy move for compiler
     C                   MOVE      '0'           @CN#(1)
     C                   MOVEL     'N'           W0PMT
      *
     C                   EVAL      W0SJO = ' '                                  *Sbmjob overrid
      * Define local work field Display Warning on Screen
     C                   EVAL      YL0001 = ' '
      * Define local work field Back Up Date From
     C                   Z-ADD     *ZERO         YL0002
      * Define local work field Back Up Date To
     C                   Z-ADD     *ZERO         YL0003
      * Define local work field Error flag
     C                   EVAL      YL0004 = ' '
      * Define local work field Library From USR
     C                   EVAL      YL0005 = ' '
      * Define local work field Library To USR
     C                   EVAL      YL0006 = ' '
      * Define local work field Backup File Prefix
     C                   EVAL      YL0007 = ' '
      * Define local work field TRC Comment
     C                   EVAL      YL0008 = ' '
      * Define local work field TRC Sequence
     C                   Z-ADD     *ZERO         YL0009
      * Define local work field TRH Repayment ID
     C                   Z-ADD     *ZERO         YL0010
      * Define local work field User Class f/usrprf   USR
     C                   EVAL      YL0011 = ' '
      * Define local work field Date Alpha USR
     C                   EVAL      YL0012 = ' '
      * Define local work field System Value Alpha    USR
     C                   EVAL      YL0013 = ' '
      * Define local work field File Backup Status USR
     C                   EVAL      YL0014 = ' '
      * Define local work field Last Run Date
     C                   Z-ADD     *ZERO         YL0015
      * Define local work field Date From Convert USR
     C                   EVAL      YL0016 = ' '
      * Define local work field File
     C                   EVAL      YL0017 = ' '
      * Define local work field Libraries: From/To
     C                   EVAL      YL0018 = ' '
      * Define local work field Month USR
     C                   Z-ADD     *ZERO         YL0019
      * Define local work field Day of Month USR
     C                   Z-ADD     *ZERO         YL0020
      * Define local work field Month and Day 4.0
     C                   Z-ADD     *ZERO         YL0021
      * Define local work field @Text 4
     C                   EVAL      YL0022 = ' '
      * Obtain system date format
     C     *DTAARA       DEFINE    Y2DTFMA       XDDTFM
     C                   IN        XDDTFM
      * Retrieve the 'cut-off' year YY: 19YY-1999,2000-20(YY-1).
     C     *DTAARA       DEFINE    Y2CTOFF       XOFF
     C                   IN        XOFF
     C                   EVAL      W0GRP = ' '
      * USER: Initialize program
      * Modification history
     C                   EXSR      UASUBR                                       Modification hi
      * Rtv User Class        UP - STR Miscellaneous  * 
     C                   CALL      'PKU3UPR'                            90      Rtv User Class
     C     YL0011        PARM      YL0011        WQ0006                         User Class f/us
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PKU3UPR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
     C                   END
      * Check if backup already run for current date
      * CASE: LCL.User Class f/usrprf   USR is *PGMR
     C                   IF        YL0011 = '*PGMR'
     C                   MOVEL     'N'           YL0001                         Display Warning
     C                   EVAL      YL0012 = ' '                                 Date Alpha USR
     C                   MOVEL     ##JDT         YL0012                         Date Alpha USR
     C                   Z-ADD     *ZEROS        ZQ
     C     'C'           CAT(P)    YL0012:ZQ     YL0013                         System Value Al
      * Upd Repayment Backup  XF - STR Order Management Sys  * HPEREPAUBU
     C                   CALL      'PUKMXFR'                            90      Upd Repayment B
     C                   PARM      *BLANK        W0RTN
     C                   PARM      P1HONB        WQ0007                         Company Number
     C                   PARM      @CN(002)      WQ0008                         Company Value C
     C                   PARM      YL0013        WQ0009                         System Value Al
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PUKMXFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        99        *
     C                   END
     C                   ELSE
      * CASE: *OTHERWISE
      * Process file backups if not already done
     C                   EXSR      UBSUBR                                       Process file ba
     C                   END                                                    *FI
      * Rtv Next Repay ID     XF - Tattoo Repayment Header  * 
     C                   CALL      'PWMVXFR'                            90      Rtv Next Repay
     C                   PARM      *BLANK        W0RTN
     C                   PARM      P1HONB        WQ0016                         CC Company Numb
     C     YL0010        PARM      *ZERO         WQ0017                         TRH Repayment I
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PWMVXFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        99        *
     C                   END
      * Load screen
     C                   EXSR      MALDSC
      *================================================================
     CSR   ZZEXIT        ENDSR
** @XD
312931303130313130313031
** @CN
00001 Repayment Header Created.
00002 HPEREPAYBU
00003 HPEREPAYLB
