// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKS1XFR
// ?Date: 14.08.2025 Time: 02:50:24
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Modifications and Comments
DO;

//?H16853 ISE 11/09/2020 - Recompiled due to change in Buy Order Number
ENDDO;

//?Read me.
CASE;

// IF WRK.#Sequence Block is NULL
IF WRK.#Sequence_Block = *BLANK;

//?Retrieve week number based on the Job Date
//?The following retrieves will be needed when this function
//?is placed with the nightly routine.  The Calendar Week parameters
//?will need to be all 'N'either.
ENDIF;

EXECUTE FUNCTION(Del Tto Wgt Lot WRK   RT) TYPE(RTVOBJ) FILE(PKC5CPP)           AB1147945;
PARAMETER(PAR.CC_Company_Number);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Del Tto Wgt Lot WRK   DL) TYPE(DLTOBJ) FILE(PKC5CPP)           AB1147852;
 PARAMETER(DB1.CC_Company_Number);
 PARAMETER(DB1.CWL_Min_Adj_Live_Wgt);
 PARAMETER(DB1.CWL_Max_Adj_Live_Wgt);
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
}


EXECUTE FUNCTION(Del Prd Wgt Lot WK    RT) TYPE(RTVOBJ) FILE(PKC2CPP)           AB1147948;
PARAMETER(PAR.CC_Company_Number);
PARAMETER(PAR.CW_Week_End_Date);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Del Prd Wgt Lot WK    DL) TYPE(DLTOBJ) FILE(PKC2CPP)           AB1146615;
 PARAMETER(DB1.CC_Company_Number);
 PARAMETER(DB1.CWL_Min_Adj_Live_Wgt);
 PARAMETER(DB1.CWL_Max_Adj_Live_Wgt);
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(DB1.PWLW_Week_Ending_Date);
}


EXECUTE FUNCTION(Upd Prd Wgt Lots WRK  RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1147842;
PARAMETER(PAR.CC_Company_Number);
PARAMETER(PAR.CW_Week_Start_Date);
PARAMETER(PAR.CW_Week_Start_Date);
PARAMETER(PAR.CW_Week_End_Date);
{
 //?USER: Process Data record

 //?QUIT:  DB1.Kill Date GT PAR.Week End Date
 CASE;

 // IF DB1.TH Kill Date GT PAR.CW Week End Date
 IF DB1.TH_Kill_Date > PAR.CW_Week_End_Date;

 QUIT;

 ENDIF;

 EXECUTE FUNCTION(Rtv Wtg Lot           RT) TYPE(RTVOBJ) FILE(PKC1REP)           AB1147853;
 PARAMETER(PAR.BOH_Company_Number);
 PARAMETER(DB1.TH_Avg_Live_Wgt);
 PARAMETER(PAR.CWL_Min_Adj_Live_Wgt);
 PARAMETER(PAR.CWL_Max_Adj_Live_Wgt);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 EXECUTE FUNCTION(Crt Prd Tto WgtLot WRK CR) TYPE(CRTOBJ) FILE(PKC5CPP)          AB1147850;
 PARAMETER(PAR.BOH_Company_Number);
 PARAMETER(PAR.CWL_Min_Adj_Live_Wgt);
 PARAMETER(PAR.CWL_Max_Adj_Live_Wgt);
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(DB1.TH_Avg_Live_Wgt);
 PARAMETER(DB1.TH_Avg_Hot_Wgt);
 PARAMETER(DB1.TH_Avg_Lean_Percent);
 PARAMETER(DB1.TH_Actual_Yield);
 PARAMETER(DB1.TH_Adj_Actual_Yield);
 PARAMETER(DB1.TH_CM_Lean_Prem_Live_CWT);
 PARAMETER(DB1.TH_CM_Lean_Prem_Carc_CWT);
 PARAMETER(DB1.TH_CM_Srt_Dsc_Live_CWT);
 PARAMETER(DB1.TH_CM_Srt_Dsc_Carc_CWT);
 PARAMETER(PAR.CW_Week_End_Date);
 PARAMETER(DB1.TH_Head_Killed);
 {
  //?USER: Processing after Data update

  EXECUTE FUNCTION(Chg Tto Cnt/HdKilled  RT) TYPE(RTVOBJ) FILE(PKC2CPP)           AB1147892;
  PARAMETER(DB1.CC_Company_Number);
  PARAMETER(DB1.CWL_Min_Adj_Live_Wgt);
  PARAMETER(DB1.CWL_Max_Adj_Live_Wgt);
  PARAMETER(DB1.PD_Producer_Code);
  PARAMETER(PAR.CW_Week_End_Date);
  PARAMETER(PAR.TH_Head_Killed);
  {
   //?USER: Processing if Data record not found

   EXECUTE FUNCTION(Crt Prd Wgt Lot WK    CR) TYPE(CRTOBJ) FILE(PKC2CPP)           AB1146613;
   PARAMETER(PAR.CC_Company_Number);
   PARAMETER(PAR.CWL_Min_Adj_Live_Wgt);
   PARAMETER(PAR.CWL_Max_Adj_Live_Wgt);
   PARAMETER(PAR.PD_Producer_Code);
   PARAMETER(PAR.PWLW_Week_Ending_Date);
   PARAMETER(PAR.PWLW_Min_Top_Yield);
   PARAMETER(PAR.PWLW_Max_Top_Yield);
   PARAMETER(PAR.PWLW_Min_Mid_Low_Yield);
   PARAMETER(PAR.PWLW_Max_Mid_Low_Yield);
   PARAMETER(PAR.PWLW_Min_Mid_Hi_Yield);
   PARAMETER(PAR.PWLW_Max_Mid_Hi_Yield);
   PARAMETER(PAR.PWLW_Min_Lower_Yield);
   PARAMETER(PAR.PWLW_Max_Lower_Yield);
   PARAMETER(PAR.PWLW_Min_Top_Lean);
   PARAMETER(PAR.PWLW_Max_Top_Lean);
   PARAMETER(PAR.PWLW_Min_Mid_Low_Lean);
   PARAMETER(PAR.PWLW_Max_Mid_Low_Lean);
   PARAMETER(PAR.PWLW_Min_Mid_Hi_Lean);
   PARAMETER(PAR.PWLW_Max_Mid_Hi_Lean);
   PARAMETER(PAR.PWLW_Min_Lower_Lean);
   PARAMETER(PAR.PWLW_Max_Lower_Lean);
   PARAMETER(PAR.PWLW_Min_Top_Lean_Prm);
   PARAMETER(PAR.PWLW_Max_Top_Lean_Prm);
   PARAMETER(PAR.PWLW_Min_Mid_Low_Lean_Prm);
   PARAMETER(PAR.PWLW_Max_Mid_Low_Lean_Prm);
   PARAMETER(PAR.PWLW_Min_Mid_Hi_Lean_Prm);
   PARAMETER(PAR.PWLW_Max_Mid_Hi_Lean_Prm);
   PARAMETER(PAR.PWLW_Min_Lower_Lean_Prm);
   PARAMETER(PAR.PWLW_Max_Lower_Lean_Prm);
   PARAMETER(PAR.PWLW_Min_Top_Sort_Dsc);
   PARAMETER(PAR.PWLW_Max_Top_Sort_Dsc);
   PARAMETER(PAR.PWLW_Min_Mid_Low_Sort_Dsc);
   PARAMETER(PAR.PWLW_Max_Mid_Low_Sort_Dsc);
   PARAMETER(PAR.PWLW_Min_Mid_Hi_Sort_Dsc);
   PARAMETER(PAR.PWLW_Max_Mid_Hi_Sort_Dsc);
   PARAMETER(PAR.PWLW_Min_Lower_Sort_Dsc);
   PARAMETER(PAR.PWLW_Max_Lower_Sort_Dsc);
   PARAMETER(PAR.TH_Head_Killed);
   PARAMETER(1);
   PARAMETER(PAR.RS_User_Changed);
   PARAMETER(PAR.RS_Date_Changed);
   PARAMETER(PAR.RS_Time_Changed);
   PARAMETER(PAR.RS_Record_Status);
   PARAMETER(PAR.RS_Job);
   PARAMETER(PAR.RS_Program);
   PARAMETER(PAR.RS_User_Added);
   PARAMETER(PAR.RS_Date_Added);
   PARAMETER(PAR.RS_Time_Added);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
    PARAMETER(DB1.RS_Record_Status);
    PARAMETER(DB1.RS_Job);
    PARAMETER(DB1.RS_Program);
    PARAMETER(DB1.RS_User_Added);
    PARAMETER(DB1.RS_Date_Added);
    PARAMETER(DB1.RS_Time_Added);
    {
     //?Execute internal function

     // PAR.RS Record Status = CND.Active
     PAR.RS_Record_Status = 'A';

     // PAR.RS User Added = JOB.*USER
     PAR.RS_User_Added = JOB.*USER;

     // PAR.RS Date Added = JOB.*Job date
     PAR.RS_Date_Added = JOB.*Job_date;

     // PAR.RS Time Added = JOB.*Job time
     PAR.RS_Time_Added = JOB.*Job_time;

     // PAR.RS Program = JOB.*PROGRAM
     PAR.RS_Program = JOB.*PROGRAM;

     // PAR.RS Job = JOB.*JOB
     PAR.RS_Job = JOB.*JOB;

    }

   }

   //?USER: Process Data record

   // PAR.CWLW Tattoo Count = DB1.CWLW Tattoo Count + CON.1
   PAR.PWLW_Tattoo_Count = DB1.PWLW_Tattoo_Count + 1;

   // PAR.CWLW Head Killed = DB1.CWLW Head Killed + PAR.TH Head Killed
   PAR.PWLW_Head_Killed = DB1.PWLW_Head_Killed + PAR.TH_Head_Killed;

   EXECUTE FUNCTION(Chg Tto Cnt/HdKilled  CH) TYPE(CHGOBJ) FILE(PKC2CPP)           AB1147898;
   PARAMETER(DB1.CC_Company_Number);
   PARAMETER(DB1.CWL_Min_Adj_Live_Wgt);
   PARAMETER(DB1.CWL_Max_Adj_Live_Wgt);
   PARAMETER(DB1.PD_Producer_Code);
   PARAMETER(DB1.PWLW_Week_Ending_Date);
   PARAMETER(PAR.PWLW_Head_Killed);
   PARAMETER(PAR.PWLW_Tattoo_Count);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
    PARAMETER(DB1.RS_User_Changed);
    PARAMETER(DB1.RS_Date_Changed);
    PARAMETER(DB1.RS_Time_Changed);
    PARAMETER(DB1.RS_Job);
    PARAMETER(DB1.RS_Program);
    {
     //?Execute internal function

     // PAR.RS User Changed = JOB.*USER
     PAR.RS_User_Changed = JOB.*USER;

     // PAR.RS Date Changed = JOB.*Job date
     PAR.RS_Date_Changed = JOB.*Job_date;

     // PAR.RS Time Changed = JOB.*Job time
     PAR.RS_Time_Changed = JOB.*Job_time;

     // PAR.RS Job = JOB.*JOB
     PAR.RS_Job = JOB.*JOB;

     // PAR.RS Program = JOB.*PROGRAM
     PAR.RS_Program = JOB.*PROGRAM;

    }

   }

  }

 }

}


EXECUTE FUNCTION(Upd Top/Mid/Low Data  RT) TYPE(RTVOBJ) FILE(PKC2CPP)           AB1147964;
PARAMETER(PAR.CC_Company_Number);
PARAMETER(PAR.CW_Week_End_Date);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: CON);

 // PAR.Tattoo Count USR = DB1.CWLW Tattoo Count / CON.4 *
 PAR.Tattoo_Count_USR = DB1.PWLW_Tattoo_Count / 4;

 CASE;

 // IF PAR.Tattoo Count USR GT WRK.Zero USR
 IF PAR.Tattoo_Count_USR > WRK.Zero_USR;

 EXECUTE FUNCTION(Rtv Prd Tp/Md/Lw Lean% RT) TYPE(RTVOBJ) FILE(PKC5CPP)          AB1147965;
 PARAMETER(DB1.CC_Company_Number);
 PARAMETER(DB1.CWL_Min_Adj_Live_Wgt);
 PARAMETER(DB1.CWL_Max_Adj_Live_Wgt);
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(PAR.Tattoo_Count_USR);
 PARAMETER(PAR.PWLW_Min_Top_Lean);
 PARAMETER(PAR.PWLW_Max_Top_Lean);
 PARAMETER(PAR.PWLW_Min_Mid_Low_Lean);
 PARAMETER(PAR.PWLW_Max_Mid_Low_Lean);
 PARAMETER(PAR.PWLW_Min_Mid_Hi_Lean);
 PARAMETER(PAR.PWLW_Max_Mid_Hi_Lean);
 PARAMETER(PAR.PWLW_Min_Lower_Lean);
 PARAMETER(PAR.PWLW_Max_Lower_Lean);
 {
  //?USER: Initialize routine

  // *MO.VE             1183529*Bu = ilt. in functions
  WRK.Head_Count = *ZERO;

  // *MO.VE             1183529*Bu = ilt. in functions
  WRK.Tattoo_Quad_Count_USR = 1;

  // *MO.VE             1183529*Bu = ilt. in functions
  WRK.First_Time_Flag_Usr = 'Y';

  //?USER: Process Data record

  // WRK.Head Count = WRK.Head Count + CON.1
  WRK.Head_Count = WRK.Head_Count + 1;

  //?Min Lean %
  CASE;

  // IF WRK.Tattoo Quad Count USR is = 1
  IF WRK.Tattoo_Quad_Count_USR = 1;

  // AND WRK.Head Count is = 1
  AND WRK.Head_Count = 1;

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.PWLW_Min_Lower_Lean = DB1.TH_Avg_Lean_Percent;

  //?Min Lean %
  // IF WRK.Tattoo Quad Count USR is = 2
  IF WRK.Tattoo_Quad_Count_USR = 2;

  // AND WRK.Head Count is = 1
  AND WRK.Head_Count = 1;

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.PWLW_Min_Mid_Low_Lean = DB1.TH_Avg_Lean_Percent;

  //?Min Lean %
  // IF WRK.Tattoo Quad Count USR is = 3
  IF WRK.Tattoo_Quad_Count_USR = 3;

  // AND WRK.Head Count is = 1
  AND WRK.Head_Count = 1;

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.PWLW_Min_Mid_Hi_Lean = DB1.TH_Avg_Lean_Percent;

  //?Min Lean %
  // IF WRK.Tattoo Quad Count USR is = 4
  IF WRK.Tattoo_Quad_Count_USR = 4;

  // AND WRK.Head Count is = 1
  AND WRK.Head_Count = 1;

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.PWLW_Min_Top_Lean = DB1.TH_Avg_Lean_Percent;

  ENDIF;

  //?Max Lean %
  CASE;

  // IF WRK.Tattoo Quad Count USR is = 1
  IF WRK.Tattoo_Quad_Count_USR = 1;

  // AND PAR.Tattoo Count USR EQ WRK.Head Count
  AND PAR.Tattoo_Count_USR = WRK.Head_Count;

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.PWLW_Max_Lower_Lean = DB1.TH_Avg_Lean_Percent;

  // *MO.VE             1183529*Bu = ilt. in functions
  WRK.Head_Count = *ZERO;

  // WRK.Tattoo Quad Count USR = WRK.Tattoo Quad Count USR + CON.1
  WRK.Tattoo_Quad_Count_USR = WRK.Tattoo_Quad_Count_USR + 1;

  //?Max Lean %
  // IF WRK.Tattoo Quad Count USR is = 2
  IF WRK.Tattoo_Quad_Count_USR = 2;

  // AND PAR.Tattoo Count USR EQ WRK.Head Count
  AND PAR.Tattoo_Count_USR = WRK.Head_Count;

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.PWLW_Max_Mid_Low_Lean = DB1.TH_Avg_Lean_Percent;

  // *MO.VE             1183529*Bu = ilt. in functions
  WRK.Head_Count = *ZERO;

  // WRK.Tattoo Quad Count USR = WRK.Tattoo Quad Count USR + CON.1
  WRK.Tattoo_Quad_Count_USR = WRK.Tattoo_Quad_Count_USR + 1;

  //?Max Lean %
  // IF WRK.Tattoo Quad Count USR is = 3
  IF WRK.Tattoo_Quad_Count_USR = 3;

  // AND PAR.Tattoo Count USR EQ WRK.Head Count
  AND PAR.Tattoo_Count_USR = WRK.Head_Count;

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.PWLW_Max_Mid_Hi_Lean = DB1.TH_Avg_Lean_Percent;

  // *MO.VE             1183529*Bu = ilt. in functions
  WRK.Head_Count = *ZERO;

  // WRK.Tattoo Quad Count USR = WRK.Tattoo Quad Count USR + CON.1
  WRK.Tattoo_Quad_Count_USR = WRK.Tattoo_Quad_Count_USR + 1;

  //?Max Lean %
  // IF WRK.Tattoo Quad Count USR is = 4
  IF WRK.Tattoo_Quad_Count_USR = 4;

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.PWLW_Max_Top_Lean = DB1.TH_Avg_Lean_Percent;

  ENDIF;

 }

 EXECUTE FUNCTION(Rtv Prd Tp/Md/Lw Yield RT) TYPE(RTVOBJ) FILE(PKC5CPP)          AB1148018;
 PARAMETER(DB1.CC_Company_Number);
 PARAMETER(DB1.CWL_Min_Adj_Live_Wgt);
 PARAMETER(DB1.CWL_Max_Adj_Live_Wgt);
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(PAR.Tattoo_Count_USR);
 PARAMETER(PAR.PWLW_Min_Top_Yield);
 PARAMETER(PAR.PWLW_Max_Top_Yield);
 PARAMETER(PAR.PWLW_Min_Mid_Low_Yield);
 PARAMETER(PAR.PWLW_Max_Mid_Low_Yield);
 PARAMETER(PAR.PWLW_Min_Mid_Hi_Yield);
 PARAMETER(PAR.PWLW_Max_Mid_Hi_Yield);
 PARAMETER(PAR.PWLW_Min_Lower_Yield);
 PARAMETER(PAR.PWLW_Max_Lower_Yield);
 {
  //?USER: Initialize routine

  // *MO.VE             1183529*Bu = ilt. in functions
  WRK.Head_Count = *ZERO;

  // *MO.VE             1183529*Bu = ilt. in functions
  WRK.Tattoo_Quad_Count_USR = 1;

  // *MO.VE             1183529*Bu = ilt. in functions
  WRK.First_Time_Flag_Usr = 'Y';

  //?USER: Process Data record

  // WRK.Head Count = WRK.Head Count + CON.1
  WRK.Head_Count = WRK.Head_Count + 1;

  //?Min Actual Yield
  CASE;

  // IF WRK.Tattoo Quad Count USR is = 1
  IF WRK.Tattoo_Quad_Count_USR = 1;

  // AND WRK.Head Count is = 1
  AND WRK.Head_Count = 1;

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.PWLW_Min_Lower_Yield = DB1.TH_Actual_Yield;

  //?Min Actual Yield
  // IF WRK.Tattoo Quad Count USR is = 2
  IF WRK.Tattoo_Quad_Count_USR = 2;

  // AND WRK.Head Count is = 1
  AND WRK.Head_Count = 1;

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.PWLW_Min_Mid_Low_Yield = DB1.TH_Actual_Yield;

  //?Min Actual Yield
  // IF WRK.Tattoo Quad Count USR is = 3
  IF WRK.Tattoo_Quad_Count_USR = 3;

  // AND WRK.Head Count is = 1
  AND WRK.Head_Count = 1;

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.PWLW_Min_Mid_Hi_Yield = DB1.TH_Actual_Yield;

  //?Min Actual Yield
  // IF WRK.Tattoo Quad Count USR is = 4
  IF WRK.Tattoo_Quad_Count_USR = 4;

  // AND WRK.Head Count is = 1
  AND WRK.Head_Count = 1;

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.PWLW_Min_Top_Yield = DB1.TH_Actual_Yield;

  ENDIF;

  //?Max Actual Yield
  CASE;

  // IF WRK.Tattoo Quad Count USR is = 1
  IF WRK.Tattoo_Quad_Count_USR = 1;

  // AND PAR.Tattoo Count USR EQ WRK.Head Count
  AND PAR.Tattoo_Count_USR = WRK.Head_Count;

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.PWLW_Max_Lower_Yield = DB1.TH_Actual_Yield;

  // *MO.VE             1183529*Bu = ilt. in functions
  WRK.Head_Count = *ZERO;

  // WRK.Tattoo Quad Count USR = WRK.Tattoo Quad Count USR + CON.1
  WRK.Tattoo_Quad_Count_USR = WRK.Tattoo_Quad_Count_USR + 1;

  //?Max Actual Yield
  // IF WRK.Tattoo Quad Count USR is = 2
  IF WRK.Tattoo_Quad_Count_USR = 2;

  // AND PAR.Tattoo Count USR EQ WRK.Head Count
  AND PAR.Tattoo_Count_USR = WRK.Head_Count;

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.PWLW_Max_Mid_Low_Yield = DB1.TH_Actual_Yield;

  // *MO.VE             1183529*Bu = ilt. in functions
  WRK.Head_Count = *ZERO;

  // WRK.Tattoo Quad Count USR = WRK.Tattoo Quad Count USR + CON.1
  WRK.Tattoo_Quad_Count_USR = WRK.Tattoo_Quad_Count_USR + 1;

  //?Max Actual Yield
  // IF WRK.Tattoo Quad Count USR is = 3
  IF WRK.Tattoo_Quad_Count_USR = 3;

  // AND PAR.Tattoo Count USR EQ WRK.Head Count
  AND PAR.Tattoo_Count_USR = WRK.Head_Count;

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.PWLW_Max_Mid_Hi_Yield = DB1.TH_Actual_Yield;

  // *MO.VE             1183529*Bu = ilt. in functions
  WRK.Head_Count = *ZERO;

  // WRK.Tattoo Quad Count USR = WRK.Tattoo Quad Count USR + CON.1
  WRK.Tattoo_Quad_Count_USR = WRK.Tattoo_Quad_Count_USR + 1;

  //?Max Actual Yield
  // IF WRK.Tattoo Quad Count USR is = 4
  IF WRK.Tattoo_Quad_Count_USR = 4;

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.PWLW_Max_Top_Yield = DB1.TH_Actual_Yield;

  ENDIF;

 }

 EXECUTE FUNCTION(Rtv Prd Tp/Md/Lw LnPrm RT) TYPE(RTVOBJ) FILE(PKC5CPP)          AB1148019;
 PARAMETER(DB1.CC_Company_Number);
 PARAMETER(DB1.CWL_Min_Adj_Live_Wgt);
 PARAMETER(DB1.CWL_Max_Adj_Live_Wgt);
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(PAR.Tattoo_Count_USR);
 PARAMETER(PAR.PWLW_Min_Top_Lean_Prm);
 PARAMETER(PAR.PWLW_Max_Top_Lean_Prm);
 PARAMETER(PAR.PWLW_Min_Mid_Low_Lean_Prm);
 PARAMETER(PAR.PWLW_Max_Mid_Low_Lean_Prm);
 PARAMETER(PAR.PWLW_Min_Mid_Hi_Lean_Prm);
 PARAMETER(PAR.PWLW_Max_Mid_Hi_Lean_Prm);
 PARAMETER(PAR.PWLW_Min_Lower_Lean_Prm);
 PARAMETER(PAR.PWLW_Max_Lower_Lean_Prm);
 {
  //?USER: Initialize routine

  // *MO.VE             1183529*Bu = ilt. in functions
  WRK.Head_Count = *ZERO;

  // *MO.VE             1183529*Bu = ilt. in functions
  WRK.Tattoo_Quad_Count_USR = 1;

  // *MO.VE             1183529*Bu = ilt. in functions
  WRK.First_Time_Flag_Usr = 'Y';

  //?USER: Process Data record

  // WRK.Head Count = WRK.Head Count + CON.1
  WRK.Head_Count = WRK.Head_Count + 1;

  //?Min Lean Premium Live /CWT
  CASE;

  // IF WRK.Tattoo Quad Count USR is = 1
  IF WRK.Tattoo_Quad_Count_USR = 1;

  // AND WRK.Head Count is = 1
  AND WRK.Head_Count = 1;

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.PWLW_Min_Lower_Lean_Prm = DB1.TH_CM_Lean_Prem_Live_CWT;

  //?Min Lean Premium Live /CWT
  // IF WRK.Tattoo Quad Count USR is = 2
  IF WRK.Tattoo_Quad_Count_USR = 2;

  // AND WRK.Head Count is = 1
  AND WRK.Head_Count = 1;

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.PWLW_Min_Mid_Low_Lean_Prm = DB1.TH_CM_Lean_Prem_Live_CWT;

  //?Min Lean Premium Live /CWT
  // IF WRK.Tattoo Quad Count USR is = 3
  IF WRK.Tattoo_Quad_Count_USR = 3;

  // AND WRK.Head Count is = 1
  AND WRK.Head_Count = 1;

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.PWLW_Min_Mid_Hi_Lean_Prm = DB1.TH_CM_Lean_Prem_Live_CWT;

  //?Min Lean Premium Live /CWT
  // IF WRK.Tattoo Quad Count USR is = 4
  IF WRK.Tattoo_Quad_Count_USR = 4;

  // AND WRK.Head Count is = 1
  AND WRK.Head_Count = 1;

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.PWLW_Min_Top_Lean_Prm = DB1.TH_CM_Lean_Prem_Live_CWT;

  ENDIF;

  //?Max Lean Premium Live /CWT
  CASE;

  // IF WRK.Tattoo Quad Count USR is = 1
  IF WRK.Tattoo_Quad_Count_USR = 1;

  // AND PAR.Tattoo Count USR EQ WRK.Head Count
  AND PAR.Tattoo_Count_USR = WRK.Head_Count;

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.PWLW_Max_Lower_Lean_Prm = DB1.TH_CM_Lean_Prem_Live_CWT;

  // *MO.VE             1183529*Bu = ilt. in functions
  WRK.Head_Count = *ZERO;

  // WRK.Tattoo Quad Count USR = WRK.Tattoo Quad Count USR + CON.1
  WRK.Tattoo_Quad_Count_USR = WRK.Tattoo_Quad_Count_USR + 1;

  //?Max Lean Premium Live /CWT
  // IF WRK.Tattoo Quad Count USR is = 2
  IF WRK.Tattoo_Quad_Count_USR = 2;

  // AND PAR.Tattoo Count USR EQ WRK.Head Count
  AND PAR.Tattoo_Count_USR = WRK.Head_Count;

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.PWLW_Max_Mid_Low_Lean_Prm = DB1.TH_CM_Lean_Prem_Live_CWT;

  // *MO.VE             1183529*Bu = ilt. in functions
  WRK.Head_Count = *ZERO;

  // WRK.Tattoo Quad Count USR = WRK.Tattoo Quad Count USR + CON.1
  WRK.Tattoo_Quad_Count_USR = WRK.Tattoo_Quad_Count_USR + 1;

  //?Max Lean Premium Live /CWT
  // IF WRK.Tattoo Quad Count USR is = 3
  IF WRK.Tattoo_Quad_Count_USR = 3;

  // AND PAR.Tattoo Count USR EQ WRK.Head Count
  AND PAR.Tattoo_Count_USR = WRK.Head_Count;

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.PWLW_Max_Mid_Hi_Lean_Prm = DB1.TH_CM_Lean_Prem_Live_CWT;

  // *MO.VE             1183529*Bu = ilt. in functions
  WRK.Head_Count = *ZERO;

  // WRK.Tattoo Quad Count USR = WRK.Tattoo Quad Count USR + CON.1
  WRK.Tattoo_Quad_Count_USR = WRK.Tattoo_Quad_Count_USR + 1;

  //?Max Lean Premium Live /CWT
  // IF WRK.Tattoo Quad Count USR is = 4
  IF WRK.Tattoo_Quad_Count_USR = 4;

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.PWLW_Max_Top_Lean_Prm = DB1.TH_CM_Lean_Prem_Live_CWT;

  ENDIF;

 }

 EXECUTE FUNCTION(Rtv Prd Tp/Md/Lw SrtDs RT) TYPE(RTVOBJ) FILE(PKC5CPP)          AB1148026;
 PARAMETER(DB1.CC_Company_Number);
 PARAMETER(DB1.CWL_Min_Adj_Live_Wgt);
 PARAMETER(DB1.CWL_Max_Adj_Live_Wgt);
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(PAR.Tattoo_Count_USR);
 PARAMETER(PAR.PWLW_Min_Top_Sort_Dsc);
 PARAMETER(PAR.PWLW_Max_Top_Sort_Dsc);
 PARAMETER(PAR.PWLW_Min_Mid_Low_Sort_Dsc);
 PARAMETER(PAR.PWLW_Max_Mid_Low_Sort_Dsc);
 PARAMETER(PAR.PWLW_Min_Mid_Hi_Sort_Dsc);
 PARAMETER(PAR.PWLW_Max_Mid_Hi_Sort_Dsc);
 PARAMETER(PAR.PWLW_Min_Lower_Sort_Dsc);
 PARAMETER(PAR.PWLW_Max_Lower_Sort_Dsc);
 {
  //?USER: Initialize routine

  // *MO.VE             1183529*Bu = ilt. in functions
  WRK.Head_Count = *ZERO;

  // *MO.VE             1183529*Bu = ilt. in functions
  WRK.Tattoo_Quad_Count_USR = 1;

  // *MO.VE             1183529*Bu = ilt. in functions
  WRK.First_Time_Flag_Usr = 'Y';

  //?USER: Process Data record

  // WRK.Head Count = WRK.Head Count + CON.1
  WRK.Head_Count = WRK.Head_Count + 1;

  //?Min Sort Discount Live /CWT
  CASE;

  // IF WRK.Tattoo Quad Count USR is = 1
  IF WRK.Tattoo_Quad_Count_USR = 1;

  // AND WRK.Head Count is = 1
  AND WRK.Head_Count = 1;

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.PWLW_Min_Lower_Sort_Dsc = DB1.TH_CM_Srt_Dsc_Live_CWT;

  //?Min Sort Discount Live /CWT
  // IF WRK.Tattoo Quad Count USR is = 2
  IF WRK.Tattoo_Quad_Count_USR = 2;

  // AND WRK.Head Count is = 1
  AND WRK.Head_Count = 1;

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.PWLW_Min_Mid_Low_Sort_Dsc = DB1.TH_CM_Srt_Dsc_Live_CWT;

  //?Min Sort Discount Live /CWT
  // IF WRK.Tattoo Quad Count USR is = 3
  IF WRK.Tattoo_Quad_Count_USR = 3;

  // AND WRK.Head Count is = 1
  AND WRK.Head_Count = 1;

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.PWLW_Min_Mid_Hi_Sort_Dsc = DB1.TH_CM_Srt_Dsc_Live_CWT;

  //?Min Sort Discount Live /CWT
  // IF WRK.Tattoo Quad Count USR is = 4
  IF WRK.Tattoo_Quad_Count_USR = 4;

  // AND WRK.Head Count is = 1
  AND WRK.Head_Count = 1;

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.PWLW_Min_Top_Sort_Dsc = DB1.TH_CM_Srt_Dsc_Live_CWT;

  ENDIF;

  //?Max Sort Discount Live /CWT
  CASE;

  // IF WRK.Tattoo Quad Count USR is = 1
  IF WRK.Tattoo_Quad_Count_USR = 1;

  // AND PAR.Tattoo Count USR EQ WRK.Head Count
  AND PAR.Tattoo_Count_USR = WRK.Head_Count;

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.PWLW_Max_Lower_Sort_Dsc = DB1.TH_CM_Srt_Dsc_Live_CWT;

  // *MO.VE             1183529*Bu = ilt. in functions
  WRK.Head_Count = *ZERO;

  // WRK.Tattoo Quad Count USR = WRK.Tattoo Quad Count USR + CON.1
  WRK.Tattoo_Quad_Count_USR = WRK.Tattoo_Quad_Count_USR + 1;

  //?Max Sort Discount Live /CWT
  // IF WRK.Tattoo Quad Count USR is = 2
  IF WRK.Tattoo_Quad_Count_USR = 2;

  // AND PAR.Tattoo Count USR EQ WRK.Head Count
  AND PAR.Tattoo_Count_USR = WRK.Head_Count;

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.PWLW_Max_Mid_Low_Sort_Dsc = DB1.TH_CM_Srt_Dsc_Live_CWT;

  // *MO.VE             1183529*Bu = ilt. in functions
  WRK.Head_Count = *ZERO;

  // WRK.Tattoo Quad Count USR = WRK.Tattoo Quad Count USR + CON.1
  WRK.Tattoo_Quad_Count_USR = WRK.Tattoo_Quad_Count_USR + 1;

  //?Max Sort Discount Live /CWT
  // IF WRK.Tattoo Quad Count USR is = 3
  IF WRK.Tattoo_Quad_Count_USR = 3;

  // AND PAR.Tattoo Count USR EQ WRK.Head Count
  AND PAR.Tattoo_Count_USR = WRK.Head_Count;

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.PWLW_Max_Mid_Hi_Sort_Dsc = DB1.TH_CM_Srt_Dsc_Live_CWT;

  // *MO.VE             1183529*Bu = ilt. in functions
  WRK.Head_Count = *ZERO;

  // WRK.Tattoo Quad Count USR = WRK.Tattoo Quad Count USR + CON.1
  WRK.Tattoo_Quad_Count_USR = WRK.Tattoo_Quad_Count_USR + 1;

  //?Max Sort Discount Live /CWT
  // IF WRK.Tattoo Quad Count USR is = 4
  IF WRK.Tattoo_Quad_Count_USR = 4;

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.PWLW_Max_Top_Sort_Dsc = DB1.TH_CM_Srt_Dsc_Live_CWT;

  ENDIF;

 }

 EXECUTE FUNCTION(Chg Top/Mid/Low       CH) TYPE(CHGOBJ) FILE(PKC2CPP)           AB1148027;
 PARAMETER(DB1.CC_Company_Number);
 PARAMETER(DB1.CWL_Min_Adj_Live_Wgt);
 PARAMETER(DB1.CWL_Max_Adj_Live_Wgt);
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(DB1.PWLW_Week_Ending_Date);
 PARAMETER(PAR.PWLW_Min_Top_Yield);
 PARAMETER(PAR.PWLW_Max_Top_Yield);
 PARAMETER(PAR.PWLW_Min_Mid_Low_Yield);
 PARAMETER(PAR.PWLW_Max_Mid_Low_Yield);
 PARAMETER(PAR.PWLW_Min_Mid_Hi_Yield);
 PARAMETER(PAR.PWLW_Max_Mid_Hi_Yield);
 PARAMETER(PAR.PWLW_Min_Lower_Yield);
 PARAMETER(PAR.PWLW_Max_Lower_Yield);
 PARAMETER(PAR.PWLW_Min_Top_Lean);
 PARAMETER(PAR.PWLW_Max_Top_Lean);
 PARAMETER(PAR.PWLW_Min_Mid_Low_Lean);
 PARAMETER(PAR.PWLW_Max_Mid_Low_Lean);
 PARAMETER(PAR.PWLW_Min_Mid_Hi_Lean);
 PARAMETER(PAR.PWLW_Max_Mid_Hi_Lean);
 PARAMETER(PAR.PWLW_Min_Lower_Lean);
 PARAMETER(PAR.PWLW_Max_Lower_Lean);
 PARAMETER(PAR.PWLW_Min_Top_Lean_Prm);
 PARAMETER(PAR.PWLW_Max_Top_Lean_Prm);
 PARAMETER(PAR.PWLW_Min_Mid_Low_Lean_Prm);
 PARAMETER(PAR.PWLW_Max_Mid_Low_Lean_Prm);
 PARAMETER(PAR.PWLW_Min_Mid_Hi_Lean_Prm);
 PARAMETER(PAR.PWLW_Max_Mid_Hi_Lean_Prm);
 PARAMETER(PAR.PWLW_Min_Lower_Lean_Prm);
 PARAMETER(PAR.PWLW_Max_Lower_Lean_Prm);
 PARAMETER(PAR.PWLW_Min_Top_Sort_Dsc);
 PARAMETER(PAR.PWLW_Max_Top_Sort_Dsc);
 PARAMETER(PAR.PWLW_Min_Mid_Low_Sort_Dsc);
 PARAMETER(PAR.PWLW_Max_Mid_Low_Sort_Dsc);
 PARAMETER(PAR.PWLW_Min_Mid_Hi_Sort_Dsc);
 PARAMETER(PAR.PWLW_Max_Mid_Hi_Sort_Dsc);
 PARAMETER(PAR.PWLW_Min_Lower_Sort_Dsc);
 PARAMETER(PAR.PWLW_Max_Lower_Sort_Dsc);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

 ENDIF;

}


