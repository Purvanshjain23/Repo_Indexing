     H/TITLE Exc Proc 947 Whs InvAdjXF Execute external functio
     H DATFMT(*YMD) DATEDIT(*YMD) DEBUG(*YES)
     Z* CRTBNDRPG
     Z* DFTACTGRP(*NO) BNDDIR(YBNDDIR) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
      *
     H* SYNOPSIS :
     H*  Perform user function
     H*  As defined by action diagram
      *
     H* Generated by CA 2E release 8.7 (1632)
     H* Function type : Execute external function
     H* Object type   : *PGM
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISDNGUY
     H* Date          : 10/30/23  Time  : 09:54:53
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FECP070L2  IF   E           K DISK
      * RSQ : EDI Whs Inv Adj Adv   HDR Surrogate SEL Unprocesse
      *
     FECP072L1  IF   E           K DISK
      * RTV : EDI Whs Inv Adj Adv   NAM Retrieval index
      *
     FPNG0REL1  IF   E           K DISK
      * RTV : EDI WHS Interchange       Retrieval index
      *
     FCAADREL1  IF   E           K DISK
      * RTV : Warehouse Codes           Retrieval index       NV
      *
     FPNG0REL2  IF   E           K DISK
      * RSQ : EDI WHS Interchange       Edi Comp Override/Interc
      *
     FECP071L1  IF   E           K DISK
      * RTV : EDI Whs Inv Adj Adv   DTL Retrieval index
      *
     FCABZREL1  IF   E           K DISK
      * RTV : Company Item              Retrieval index       NV
      *
     FCABZRELD  IF   E           K DISK
      * RTV : Company Item              Active Items Only
      *
     FPDKMREL1  IF   E           K DISK
      * RTV : Company Values            Retrieval index
      *
     FECP070L0  UF   E           K DISK
      * UPD : EDI Whs Inv Adj Adv   HDR Update index
      *
      * Long constants
     D @CN#            S              6    DIM(18)CTDATA PERRCD(1)
     D @CN             S             25    DIM(18) ALT(@CN#)
      /EJECT
      * Data structures:
     D PGMDS         ESDS                  EXTNAME(Y2PGDSP)
      * Modified Program data structure
     D JBDTTM          DS
      * Job date/time
     D  ##JDT                  1      7  0
     D  ##JCC                  1      1  0
     D  ##JYY                  2      3  0
     D  ##JMM                  4      5  0
     D  ##JDD                  6      7  0
     D  ##JTM                  8     13  0
     D  ##JHH                  8      9  0
     D  ##JNN                 10     11  0
     D  ##JSS                 12     13  0
     D QECP01        E DS                  EXTNAME(ECP070L0)
      * UPD : EDI Whs Inv Adj Adv   HDR Update index
      * Renamed input format fields
     D  WIH9NY       E                     EXTFLD(AQH9NY)
     D  WIHPAA       E                     EXTFLD(AQHPAA)
     D  WIA0ST       E                     EXTFLD(AQA0ST)
     D  WIHSU1       E                     EXTFLD(AQHSU1)
     D  WIHTU1       E                     EXTFLD(AQHTU1)
     D  WIHUU1       E                     EXTFLD(AQHUU1)
     D  WICRNZ       E                     EXTFLD(AQCRNZ)
     D  WIIVU1       E                     EXTFLD(AQIVU1)
     D  WIAQTH       E                     EXTFLD(AQAQTH)
      *
     D YARDCS          DS            79
      * Message data for message Y2U0009.
     D MD0009          DS
     D  MDPGM                  1     10
     D  MDACP                 11     20
     D  MDFMT                 21     30
     D  MDACT                 31     34
     D  MDLBL                 35     40
      *
      * Declared stand-alone variables
     D  P0RTN          S              7
     D  W0ICL          S              1
     D  W0RTN          S              7
     D  W0RSL          S              1
     D  W0RSF          S              1
     D  W0RTW          S              9  0
     D  W0ENV          S              3
     D  ##TME          S              6  0
     D  W0CLPG         S             10
     D  YL0001         S              1
     D  WN0001         S              1
     D  WN0002         S             50
     D  WN0003         S             50
     D  YL0002         S             50
     D  ZQ             S              5  0
     D  YL0003         S              1
     D  YL0004         S              1
     D  YL0005         S              1
     D  YL0006         S              3
     D  YL0007         S              3  0
     D  YL0008         S              1
     D  WQSB01         S                   LIKE(WBH9NY)
     D  YL0009         S              3
     D  YL0010         S              3  0
     D  WL0001         S              3
     D  WL0002         S              3  0
     D  YL0011         S              3
     D  WQSE01         S                   LIKE(WEF5NZ)
     D  WQSE02         S                   LIKE(WEM4AA)
     D  YL0012         S              3  0
     D  YN0001         S              3
     D  YL0013         S              6
     D  YN0002         S             20
     D  YL0014         S              1
     D  YN0003         S              7  0
     D  YN0004         S              6  0
     D  YN0005         S             10
     D  YN0006         S             10
     D  YN0007         S              7  0
     D  YN0008         S              6  0
     D  YN0009         S             10
     D  YN0010         S             10
     D  Y0CX01         S              1
     D  YL0015         S              3  0
     D  WQSG01         S                   LIKE(WFH9NY)
     D  YL0016         S              7
     D  YL0017         S              1
     D  YL0018         S              7  0
     D  WN0004         S              3
     D  WN0005         S              3  0
     D  YL0019         S              8  0
     D  YL0020         S              8  0
     D  YL0021         S              7  0
     D  YL0022         S              2
     D  YL0023         S             25
     D  Y2LSNO         S              7  0
     D  W0INVL         S             25
     D  W0VLMP         S              1
     D  W0CNNM         S             25
     D  WQSI01         S                   LIKE(WFH9NY)
     D  YL0024         S              8  0
     D  YL0025         S              7  0
     D  YL0026         S              7
     D  YL0027         S              7  0
     D  YL0028         S             30
     D  YL0029         S              3
     D  YL0030         S             11  2
     D  YL0031         S              2
     D  YL0032         S             11  2
     D  WL0003         S              3
     D  WL0004         S              3  0
     D  YL0033         S              3
     D  YL0034         S              3  0
     D  YL0035         S              1
     D  WQ0001         S              3  0
     D  WQ0002         S              7  0
     D  WQ0003         S              3
     D  WQ0004         S              1
     D  WQ0005         S              2
     D  WQ0006         S              7  0
     D  WQ0007         S              7  0
     D  WQ0008         S              2
     D  WQ0009         S             30
     D  WQ0010         S              3
     D  WQ0011         S             10
     D  WQ0012         S              7  0
     D  WQ0013         S              1
     D  WQ0014         S              7  0
     D  WQ0015         S             11  2
     D  WQ0016         S             11  2
     D  WQ0017         S              1
     D  WQ0018         S              1
     D  WQ0019         S              1
     D  WQ0020         S              1
     D  WQ0021         S             10
     D  WQ0022         S              3  0
     D  WQ0023         S              7  0
     D  WQ0024         S              3
     D  WQ0025         S              1
     D  WQ0026         S              2
     D  WQ0027         S              7  0
     D  WQ0028         S              7  0
     D  WQ0029         S              2
     D  WQ0030         S             30
     D  WQ0031         S              3
     D  WQ0032         S             10
     D  WQ0033         S              7  0
     D  WQ0034         S              1
     D  WQ0035         S              7  0
     D  WQ0036         S             11  2
     D  WQ0037         S             11  2
     D  WQ0038         S              1
     D  WQ0039         S              1
     D  WQ0040         S              1
     D  WQ0041         S              1
     D  WQ0042         S             10
     D  YARDC          S              1
     D  YL0036         S              9
     D  YL0037         S            256
     D  YL0038         S             50
     D  WQ0043         S             50
     D  WQ0044         S             50
     D  WQ0045         S            256
     D  WQ0046         S             10
     D  ZAPGMQ         S             10
     D  ZAPGRL         S              5
     D  ZAMSID         S              7
     D  ZAMSGF         S             10
     D  ZAMSTP         S              7
     D  YILE           S              1
     D  W0PMT          S              1
     D digits          C                   '0123456789'
     D len             S              3  0
     d wkccyymmdd      S              8A
     D                 DS
     D  ZAMSDA                 1    132
     I@P070CZ
      * EDI Whs Inv Adj Adv   HDR Surrogate SEL Unprocesse
      * Renamed input format fields
     I              AQH9NY                      WAH9NY
     I              AQHPAA                      WAHPAA
     I              AQA0ST                      WAA0ST
     I              AQHSU1                      WAHSU1
     I              AQHTU1                      WAHTU1
     I              AQHUU1                      WAHUU1
     I              AQCRNZ                      WACRNZ
     I              AQIVU1                      WAIVU1
     I              AQAQTH                      WAAQTH
      *
     I@ARCPBJ
      * EDI Whs Inv Adj Adv   NAM Retrieval index
      * Renamed input format fields
     I              ARH9NY                      WBH9NY
     I              ARTYPC                      WBTYPC
     I              ARAMEX                      WBAMEX
     I              ARDCDQ                      WBDCDQ
     I              ARDCDE                      WBDCDE
     I              ARDD1X                      WBDD1X
     I              ARDD2X                      WBDD2X
     I              ARITYX                      WBITYX
     I              ARTATE                      WBTATE
     I              ARIPXX                      WBIPXX
     I              ARWFAA                      WBWFAA
      *
     I@G0REJZ
      * EDI WHS Interchange       Retrieval index
      * Renamed input format fields
     I              G0AJCD                      WCAJCD
     I              G0M4AA                      WCM4AA
     I              G0M7AA                      WCM7AA
     I              G0J5NX                      WCJ5NX
     I              G0X2T1                      WCX2T1
     I              G0JBSC                      WCJBSC
     I              G0JCSC                      WCJCSC
     I              G0JDSC                      WCJDSC
     I              G0JESC                      WCJESC
     I              G0QGU1                      WCQGU1
     I              G0F5NZ                      WCF5NZ
     I              G0LSSC                      WCLSSC
     I              G0LTSC                      WCLTSC
     I              G0AHAB                      WCAHAB
     I              G0F6NZ                      WCF6NZ
     I              G0VSST                      WCVSST
     I              G0MJDT                      WCMJDT
     I              G0BETM                      WCBETM
     I              G0CCVN                      WCCCVN
     I              G0CDVN                      WCCDVN
     I              G0MKDT                      WCMKDT
     I              G0BFTM                      WCBFTM
     I              G0CEVN                      WCCEVN
     I              G0CFVN                      WCCFVN
      *
     I@ADREAO
      * Warehouse Codes           Retrieval index       NV
      * Renamed input format fields
     I              ADAJCD                      WDAJCD
     I              ADF8NA                      WDF8NA
     I              ADACNA                      WDACNA
     I              ADADNA                      WDADNA
     I              ADAENA                      WDAENA
     I              ADAJNA                      WDAJNA
     I              ADBTTX                      WDBTTX
     I              ADAOCD                      WDAOCD
     I              ADBGCD                      WDBGCD
     I              ADVHST                      WDVHST
     I              ADMPNA                      WDMPNA
     I              ADWPST                      WDWPST
     I              ADXUST                      WDXUST
     I              ADT0ST                      WDT0ST
     I              ADT1ST                      WDT1ST
     I              ADDBNB                      WDDBNB
     I              ADT2ST                      WDT2ST
     I              ADT3ST                      WDT3ST
     I              ADT4ST                      WDT4ST
     I              ADT6ST                      WDT6ST
     I              ADBWC3                      WDBWC3
     I              ADBTC3                      WDBTC3
     I              ADBUC3                      WDBUC3
     I              ADBVC3                      WDBVC3
     I              ADFCAA                      WDFCAA
     I              ADRQSX                      WDRQSX
     I              ADRRSX                      WDRRSX
     I              ADRSSX                      WDRSSX
     I              ADRTSX                      WDRTSX
     I              ADT7ST                      WDT7ST
     I              ADT8ST                      WDT8ST
     I              ADRNSX                      WDRNSX
     I              ADROSX                      WDROSX
     I              ADRPSX                      WDRPSX
     I              ADUVST                      WDUVST
     I              ADUWST                      WDUWST
     I              ADUXST                      WDUXST
     I              ADVSST                      WDVSST
     I              ADAATM                      WDAATM
     I              ADAYNA                      WDAYNA
     I              ADA0NA                      WDA0NA
     I              ADAXDT                      WDAXDT
      *
     I@G0REIW
      * EDI WHS Interchange       Edi Comp Override/Interc
      * Renamed input format fields
     I              G0AJCD                      WEAJCD
     I              G0M4AA                      WEM4AA
     I              G0M7AA                      WEM7AA
     I              G0J5NX                      WEJ5NX
     I              G0X2T1                      WEX2T1
     I              G0JBSC                      WEJBSC
     I              G0JCSC                      WEJCSC
     I              G0JDSC                      WEJDSC
     I              G0JESC                      WEJESC
     I              G0QGU1                      WEQGU1
     I              G0F5NZ                      WEF5NZ
     I              G0LSSC                      WELSSC
     I              G0LTSC                      WELTSC
     I              G0AHAB                      WEAHAB
     I              G0F6NZ                      WEF6NZ
     I              G0VSST                      WEVSST
     I              G0MJDT                      WEMJDT
     I              G0BETM                      WEBETM
     I              G0CCVN                      WECCVN
     I              G0CDVN                      WECDVN
     I              G0MKDT                      WEMKDT
     I              G0BFTM                      WEBFTM
     I              G0CEVN                      WECEVN
     I              G0CFVN                      WECFVN
      *
     I@ASCPBM
      * EDI Whs Inv Adj Adv   DTL Retrieval index
      * Renamed input format fields
     I              ASH9NY                      WFH9NY
     I              AST4NY                      WFT4NY
     I              ASE3SC                      WFE3SC
     I              ASA2NZ                      WFA2NZ
     I              ASWGAA                      WFWGAA
     I              ASE8SC                      WFE8SC
     I              ASHWU1                      WFHWU1
     I              ASNIVL                      WFNIVL
     I              ASNOVL                      WFNOVL
     I              ASAQNZ                      WFAQNZ
     I              ASCTNZ                      WFCTNZ
      *
     I@BZREJU
      * Company Item              Retrieval index       NV
      * Renamed input format fields
     I              BZAIC3                      WGAIC3
     I              BZHGCD                      WGHGCD
     I              BZAVNA                      WGAVNA
     I              BZAWNA                      WGAWNA
     I              BZL7NA                      WGL7NA
     I              BZL8NA                      WGL8NA
     I              BZL6NA                      WGL6NA
     I              BZMFNA                      WGMFNA
     I              BZADCD                      WGADCD
     I              BZAWPC                      WGAWPC
     I              BZLXST                      WGLXST
     I              BZAECD                      WGAECD
     I              BZAXPC                      WGAXPC
     I              BZLYST                      WGLYST
     I              BZAFCD                      WGAFCD
     I              BZAICD                      WGAICD
     I              BZAIWG                      WGAIWG
     I              BZHICD                      WGHICD
     I              BZRBCD                      WGRBCD
     I              BZFZST                      WGFZST
     I              BZAVST                      WGAVST
     I              BZCZWG                      WGCZWG
     I              BZC0WG                      WGC0WG
     I              BZURTN                      WGURTN
     I              BZAJC8                      WGAJC8
     I              BZRINB                      WGRINB
     I              BZRHNB                      WGRHNB
     I              BZRGNB                      WGRGNB
     I              BZLNCD                      WGLNCD
     I              BZTFNB                      WGTFNB
     I              BZN0CD                      WGN0CD
     I              BZX4ST                      WGX4ST
     I              BZTMVA                      WGTMVA
     I              BZTNVA                      WGTNVA
     I              BZBLPR                      WGBLPR
     I              BZBMPR                      WGBMPR
     I              BZLRCD                      WGLRCD
     I              BZU9ST                      WGU9ST
     I              BZCMCO                      WGCMCO
     I              BZQ1CD                      WGQ1CD
     I              BZQ8CD                      WGQ8CD
     I              BZCHTM                      WGCHTM
     I              BZQZCD                      WGQZCD
     I              BZXWST                      WGXWST
     I              BZXXST                      WGXXST
     I              BZVMST                      WGVMST
     I              BZSWGH                      WGSWGH
     I              BZPPHE                      WGPPHE
     I              BZR3CD                      WGR3CD
     I              BZSDCD                      WGSDCD
     I              BZICN1                      WGICN1
     I              BZSVCD                      WGSVCD
     I              BZICN2                      WGICN2
     I              BZSWCD                      WGSWCD
     I              BZV2NB                      WGV2NB
     I              BZSXCD                      WGSXCD
     I              BZITCN                      WGITCN
     I              BZSYCD                      WGSYCD
     I              BZITC5                      WGITC5
     I              BZSZCD                      WGSZCD
     I              BZICN6                      WGICN6
     I              BZS0CD                      WGS0CD
     I              BZICN7                      WGICN7
     I              BZS1CD                      WGS1CD
     I              BZICN8                      WGICN8
     I              BZS2CD                      WGS2CD
     I              BZICN9                      WGICN9
     I              BZS3CD                      WGS3CD
     I              BZICN0                      WGICN0
     I              BZS4CD                      WGS4CD
     I              BZSFNB                      WGSFNB
     I              BZA3WG                      WGA3WG
     I              BZSJNB                      WGSJNB
     I              BZLLCD                      WGLLCD
     I              BZLMCD                      WGLMCD
     I              BZP3ST                      WGP3ST
     I              BZSKNB                      WGSKNB
     I              BZSLNB                      WGSLNB
     I              BZSMNB                      WGSMNB
     I              BZP4ST                      WGP4ST
     I              BZCFNB                      WGCFNB
     I              BZCGNB                      WGCGNB
     I              BZILNB                      WGILNB
     I              BZCHNB                      WGCHNB
     I              BZCINB                      WGCINB
     I              BZCJNB                      WGCJNB
     I              BZCMNB                      WGCMNB
     I              BZCNNB                      WGCNNB
     I              BZCRNB                      WGCRNB
     I              BZCSNB                      WGCSNB
     I              BZCVNB                      WGCVNB
     I              BZCWNB                      WGCWNB
     I              BZCXNB                      WGCXNB
     I              BZCZNB                      WGCZNB
     I              BZC0NB                      WGC0NB
     I              BZN1CD                      WGN1CD
     I              BZB4NB                      WGB4NB
     I              BZB5NB                      WGB5NB
     I              BZX5ST                      WGX5ST
     I              BZX6ST                      WGX6ST
     I              BZX7ST                      WGX7ST
     I              BZPCCT                      WGPCCT
     I              BZBDNB                      WGBDNB
     I              BZBJNB                      WGBJNB
     I              BZSUST                      WGSUST
     I              BZSVST                      WGSVST
     I              BZSYST                      WGSYST
     I              BZSZST                      WGSZST
     I              BZS1ST                      WGS1ST
     I              BZXRCD                      WGXRCD
     I              BZXTCD                      WGXTCD
     I              BZXUCD                      WGXUCD
     I              BZF5WG                      WGF5WG
     I              BZF6WG                      WGF6WG
     I              BZF7WG                      WGF7WG
     I              BZBLNB                      WGBLNB
     I              BZBNNB                      WGBNNB
     I              BZS2ST                      WGS2ST
     I              BZS4ST                      WGS4ST
     I              BZS5ST                      WGS5ST
     I              BZS6ST                      WGS6ST
     I              BZS8ST                      WGS8ST
     I              BZS9ST                      WGS9ST
     I              BZTCST                      WGTCST
     I              BZTDST                      WGTDST
     I              BZUVST                      WGUVST
     I              BZUWST                      WGUWST
     I              BZUXST                      WGUXST
     I              BZVSST                      WGVSST
     I              BZAATM                      WGAATM
     I              BZAYNA                      WGAYNA
     I              BZA0NA                      WGA0NA
     I              BZAXDT                      WGAXDT
      *
     I@BZREZG
      * Company Item              Active Items Only
      * Renamed input format fields
     I              BZAIC3                      WHAIC3
     I              BZHGCD                      WHHGCD
     I              BZAVNA                      WHAVNA
     I              BZAWNA                      WHAWNA
     I              BZL7NA                      WHL7NA
     I              BZL8NA                      WHL8NA
     I              BZL6NA                      WHL6NA
     I              BZMFNA                      WHMFNA
     I              BZADCD                      WHADCD
     I              BZAWPC                      WHAWPC
     I              BZLXST                      WHLXST
     I              BZAECD                      WHAECD
     I              BZAXPC                      WHAXPC
     I              BZLYST                      WHLYST
     I              BZAFCD                      WHAFCD
     I              BZAICD                      WHAICD
     I              BZAIWG                      WHAIWG
     I              BZHICD                      WHHICD
     I              BZRBCD                      WHRBCD
     I              BZFZST                      WHFZST
     I              BZAVST                      WHAVST
     I              BZCZWG                      WHCZWG
     I              BZC0WG                      WHC0WG
     I              BZURTN                      WHURTN
     I              BZAJC8                      WHAJC8
     I              BZRINB                      WHRINB
     I              BZRHNB                      WHRHNB
     I              BZRGNB                      WHRGNB
     I              BZLNCD                      WHLNCD
     I              BZTFNB                      WHTFNB
     I              BZN0CD                      WHN0CD
     I              BZX4ST                      WHX4ST
     I              BZTMVA                      WHTMVA
     I              BZTNVA                      WHTNVA
     I              BZBLPR                      WHBLPR
     I              BZBMPR                      WHBMPR
     I              BZLRCD                      WHLRCD
     I              BZU9ST                      WHU9ST
     I              BZCMCO                      WHCMCO
     I              BZQ1CD                      WHQ1CD
     I              BZQ8CD                      WHQ8CD
     I              BZCHTM                      WHCHTM
     I              BZQZCD                      WHQZCD
     I              BZXWST                      WHXWST
     I              BZXXST                      WHXXST
     I              BZVMST                      WHVMST
     I              BZSWGH                      WHSWGH
     I              BZPPHE                      WHPPHE
     I              BZR3CD                      WHR3CD
     I              BZSDCD                      WHSDCD
     I              BZICN1                      WHICN1
     I              BZSVCD                      WHSVCD
     I              BZICN2                      WHICN2
     I              BZSWCD                      WHSWCD
     I              BZV2NB                      WHV2NB
     I              BZSXCD                      WHSXCD
     I              BZITCN                      WHITCN
     I              BZSYCD                      WHSYCD
     I              BZITC5                      WHITC5
     I              BZSZCD                      WHSZCD
     I              BZICN6                      WHICN6
     I              BZS0CD                      WHS0CD
     I              BZICN7                      WHICN7
     I              BZS1CD                      WHS1CD
     I              BZICN8                      WHICN8
     I              BZS2CD                      WHS2CD
     I              BZICN9                      WHICN9
     I              BZS3CD                      WHS3CD
     I              BZICN0                      WHICN0
     I              BZS4CD                      WHS4CD
     I              BZSFNB                      WHSFNB
     I              BZA3WG                      WHA3WG
     I              BZSJNB                      WHSJNB
     I              BZLLCD                      WHLLCD
     I              BZLMCD                      WHLMCD
     I              BZP3ST                      WHP3ST
     I              BZSKNB                      WHSKNB
     I              BZSLNB                      WHSLNB
     I              BZSMNB                      WHSMNB
     I              BZP4ST                      WHP4ST
     I              BZCFNB                      WHCFNB
     I              BZCGNB                      WHCGNB
     I              BZILNB                      WHILNB
     I              BZCHNB                      WHCHNB
     I              BZCINB                      WHCINB
     I              BZCJNB                      WHCJNB
     I              BZCMNB                      WHCMNB
     I              BZCNNB                      WHCNNB
     I              BZCRNB                      WHCRNB
     I              BZCSNB                      WHCSNB
     I              BZCVNB                      WHCVNB
     I              BZCWNB                      WHCWNB
     I              BZCXNB                      WHCXNB
     I              BZCZNB                      WHCZNB
     I              BZC0NB                      WHC0NB
     I              BZN1CD                      WHN1CD
     I              BZB4NB                      WHB4NB
     I              BZB5NB                      WHB5NB
     I              BZX5ST                      WHX5ST
     I              BZX6ST                      WHX6ST
     I              BZX7ST                      WHX7ST
     I              BZPCCT                      WHPCCT
     I              BZBDNB                      WHBDNB
     I              BZBJNB                      WHBJNB
     I              BZSUST                      WHSUST
     I              BZSVST                      WHSVST
     I              BZSYST                      WHSYST
     I              BZSZST                      WHSZST
     I              BZS1ST                      WHS1ST
     I              BZXRCD                      WHXRCD
     I              BZXTCD                      WHXTCD
     I              BZXUCD                      WHXUCD
     I              BZF5WG                      WHF5WG
     I              BZF6WG                      WHF6WG
     I              BZF7WG                      WHF7WG
     I              BZBLNB                      WHBLNB
     I              BZBNNB                      WHBNNB
     I              BZS2ST                      WHS2ST
     I              BZS4ST                      WHS4ST
     I              BZS5ST                      WHS5ST
     I              BZS6ST                      WHS6ST
     I              BZS8ST                      WHS8ST
     I              BZS9ST                      WHS9ST
     I              BZTCST                      WHTCST
     I              BZTDST                      WHTDST
     I              BZUVST                      WHUVST
     I              BZUWST                      WHUWST
     I              BZUXST                      WHUXST
     I              BZVSST                      WHVSST
     I              BZAATM                      WHAATM
     I              BZAYNA                      WHAYNA
     I              BZA0NA                      WHA0NA
     I              BZAXDT                      WHAXDT
      *
     I@AQCPBE
      * EDI Whs Inv Adj Adv   HDR Update index
      * Renamed input format fields
     I              AQH9NY                      WIH9NY
     I              AQHPAA                      WIHPAA
     I              AQA0ST                      WIA0ST
     I              AQHSU1                      WIHSU1
     I              AQHTU1                      WIHTU1
     I              AQHUU1                      WIHUU1
     I              AQCRNZ                      WICRNZ
     I              AQIVU1                      WIIVU1
     I              AQAQTH                      WIAQTH
      *
     I@KMREHC
      * Company Values            Retrieval index
      * Renamed input format fields
     I              KMAIC3                      WJAIC3
     I              KMV8CD                      WJV8CD
     I              KMAUNA                      WJAUNA
     I              KMI5ST                      WJI5ST
     I              KMBXTX                      WJBXTX
     I              KMM8NB                      WJM8NB
     I              KMUVST                      WJUVST
     I              KMUWST                      WJUWST
     I              KMUXST                      WJUXST
     I              KMVSST                      WJVSST
     I              KMAATM                      WJAATM
     I              KMAYNA                      WJAYNA
     I              KMA0NA                      WJA0NA
     I              KMAXDT                      WJAXDT
      *
      /EJECT
      *****************************************************************
      * Entry parameters
     C     *ENTRY        PLIST
     C                   PARM                    P0RTN
      *****************************************************************
      * Initialize
     C                   EXSR      ZZINIT
      *
      * Exc Proc 947 Whs InvAdjXF
      * R11411 RMC 03/06/18 After EDI 947 is received, adjust inventory
      *  accordingly for the 3PL warehouse on the AS400
      *  Inventory on the Warehouse:
      *  1. CAB7CPP Create TW -/+ transactions
      *  2. CAB0REP Update Item Balance - on hand
      *  3. CAB1CPP Adjust Item Balance detail - on hand
      * Initialize.
      * CASE: *OTHERWISE
      * EUS EDI 947 Data Dfn  US - /UT User Source  * Declare Data Defini
      * Declare EDI 947 Data Definitions
      * WI517 DN 10/12/23-Setup Eradani's Environment Libraries.
      * Upd Setup Eradani Libs CL - /UT User Programs  * 
     C                   CALL      'PVBFUPC'                            90      Upd Setup Erada
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PVBFUPC'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
     C                   END
      * Validation / Update Inventory Adjustment.
      * WI517 DN 10/03/23-Added 'Send Email f/Failed API U' Output Parm.
      * Upd Proc 947 Whs InvAdjRT - EDI Whs Inv Adj Adv   HDR  * 
     C                   EXSR      SARVGN
      * WI517 DN 10/03/23-If 'Send Email f/Failed API U=Yes' Then Send Em
      * CASE: LCL.Send Email f/Failed API U is Yes
      * Prc Eml Shipping & IT  XF - WIM API Failure Log  * 
     C                   IF        YL0001 = 'Y'
     C                   CALL      'PVA9XFR'                            90      Prc Eml Shippin
     C                   PARM      *BLANK        W0RTN
     C                   PARM      @CN(015)      WQ0046                         Called From Pro
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PVA9XFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        99        *
     C                   END
     C                   END                                                    *FI
      *----------------------------------------------------------------
      * Exit program
     C     AAEXIT        TAG
     C                   EVAL      P0RTN = ' '
     C                   EXSR      ZYEXPG
      *================================================================
      /EJECT
     CSR   SARVGN        BEGSR
      *================================================================
      * Upd Proc 947 Whs InvAdjRT - EDI Whs Inv Adj Adv   HDR  * 
      *================================================================
      *
     C                   EVAL      WN0001 = ' '                                 EDI-Record Proc
     C                   EVAL      WN0002 = ' '                                 EDI 947 Error D
     C                   EVAL      WN0003 = ' '                                 Email Subject U
      *
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
     C                   Z-ADD     0             ZQ
     C     @CN(001)      CAT(P)    'ent:':ZQ     YL0002                         Email Subject U
      * WI517 DN 10/03/23-Initialize Flags.
     C                   MOVEL     'N'           YL0001                         Send Email f/Fa
     C                   MOVEL     'N'           YL0003                         API was Called?
     C                   MOVEL     'N'           YL0004                         Inventory Updat
     C                   MOVEL     'Y'           YL0005                         First Time Thro
      * Establish starting position
     C     *LOVAL        SETLL     @P070CZ                                      *
     C                   READ      @P070CZ                                90    *
      * Data record not found
     C   90              MOVEL     'USR5023'     W0RTN
      * USER: Process Data record
      * Data Validation.
      * CASE: *OTHERWISE
      * Initialize.
      * CASE: *OTHERWISE
     C                   DOW       NOT *IN90
     C                   MOVEL     'N'           WN0001                         EDI-Record Proc
     C                   EVAL      WN0002 = ' '                                 EDI 947 Error D
     C                   EVAL      WN0003 = ' '                                 Email Subject U
      * Validate Trade Partner/Warehouse Code.
      * CASE: DB1.TRADE PARTNER CODE is Not Entered
     C                   IF        WAHPAA = ' '
     C                   MOVEL     'E'           WN0001                         EDI-Record Proc
     C                   Z-ADD     1             ZQ
     C     @CN(002)      CAT(P)    'code.':ZQ    WN0002                         EDI 947 Error D
     C                   ELSE
      * CASE: *OTHERWISE
      * Rtv Warehouse/Company RT - EDI Whs Inv Adj Adv   NAM  * 
     C                   EXSR      SBRVGN
      * Ensure Warehouse/Company is Entered & Trade Partner Matches.
      * CASE: LCL.Warehouse Code is Blanks
     C                   IF        YL0006 = ' '
     C                   MOVEL     'E'           WN0001                         EDI-Record Proc
     C                   EVAL      WN0002 = ' '                                 EDI 947 Error D
     C                   MOVEL     @CN(003)      WN0002                         EDI 947 Error D
     C                   ELSE
      * CASE: LCL.Company Number is Equal to zero
     C                   IF        YL0007 = 0
     C                   MOVEL     'E'           WN0001                         EDI-Record Proc
     C                   EVAL      WN0002 = ' '                                 EDI 947 Error D
     C                   MOVEL     @CN(004)      WN0002                         EDI 947 Error D
     C                   ELSE
      * CASE: *OTHERWISE
      * Rtv WHS Interchg All  RT - EDI WHS Interchange  * 
     C                   EXSR      SFRVGN
      * EDI Warehouse Code Found?
      * CASE: PGM.*Return code is *Normal
      * Trade Partner Mismatch / Not Active.
      * CASE: DB1.TRADE PARTNER CODE NE LCL.EDI Trading Partner No.
     C                   IF        W0RTN = ' '
     C                   IF        WAHPAA <> YL0013
     C                   MOVEL     'E'           WN0001                         EDI-Record Proc
     C                   Z-ADD     1             ZQ
     C     @CN(002)      CAT(P)    'code.':ZQ    WN0002                         EDI 947 Error D
     C                   ELSE
      * CASE:
      *  - NOTc1
      *   |- c1    : LCL.Record Status is Active
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        YL0014 = 'A'
     C                   ELSE
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   IF        Y0CX01 = '1'
     C                   MOVEL     'E'           WN0001                         EDI-Record Proc
     C                   Z-ADD     1             ZQ
     C     @CN(005)      CAT(P)    @CN(006):ZQ   WN0002                         EDI 947 Error D
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     'E'           WN0001                         EDI-Record Proc
     C                   EVAL      WN0002 = ' '                                 EDI 947 Error D
     C                   MOVEL     @CN(007)      WN0002                         EDI 947 Error D
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
      * If Not in Error, Check Company/Warehouse Combination.
      * CASE:
      *  - NOTc1
      *   |- c1    : PAR.EDI-Record Processed is Error
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        WN0001 = 'E'
     C                   ELSE
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
      * Rtv Acct Co          RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                   IF        Y0CX01 = '1'
     C                   MOVEL(P)  YL0006        WL0001                         Warehouse Code
     C                   EXSR      SDRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0002        YL0015                         Accounting Comp
      * Company # from EDI NAM (ECP072) File Mismatch with Acct Company.
      * CASE: LCL.Accounting Company NE LCL.Company Number
     C                   IF        YL0015 <> YL0007
     C                   MOVEL     'E'           WN0001                         EDI-Record Proc
     C                   Z-ADD     1             ZQ
     C     @CN(008)      CAT(P)    @CN(009):ZQ   WN0002                         EDI 947 Error D
     C                   END                                                    *FI
     C                   END                                                    *FI
      * If Not in Error, Check Product Code.
      * CASE:
      *  - NOTc1
      *   |- c1    : PAR.EDI-Record Processed is Error
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        WN0001 = 'E'
     C                   ELSE
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
      * Val Product & Adj Code RT - EDI Whs Inv Adj Adv   DTL  * 
     C                   IF        Y0CX01 = '1'
     C                   EXSR      SGRVGN
     C                   END                                                    *FI
      * Validation Passed Then Update for Inventory Adjustment.
      * CASE:
      *  - NOTc1
      *   |- c1    : PAR.EDI-Record Processed is Error
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        WN0001 = 'E'
     C                   ELSE
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
      * WI517 DN 10/03/23-Added 'Inventory Updated USR' & 'API was Called
      * Upd Proc 947 Whs InvAdjRT - EDI Whs Inv Adj Adv   DTL  * 
     C                   IF        Y0CX01 = '1'
     C                   EXSR      SIRVGN
      * WI517 DN 10/03/23-Set 'Send Email f/Failed API U' for Failed API
      * CASE:
      *  - c1 AND c2 AND c3
      *   |- c1    : LCL.API was Called? U is Yes
      *   |- c2    : LCL.Inventory Updated USR is No
      *   |- c3    : LCL.First Time Through USR is Yes
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        YL0003 = 'Y'
     C                   IF        YL0004 = 'N'
     C                   IF        YL0005 = 'Y'
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   IF        Y0CX01 = '1'
     C                   MOVEL     'N'           YL0005                         First Time Thro
     C                   MOVEL     'Y'           YL0001                         Send Email f/Fa
     C                   END                                                    *FI
     C                   MOVEL     'Y'           WN0001                         EDI-Record Proc
     C                   END                                                    *FI
      * Chg Whs Inv Adj Adv HDRCH - EDI Whs Inv Adj Adv   HDR  * Upd EDI-
     C                   EXSR      SMCHRC
      * Validation Failed, Send Email.
      * CASE: PAR.EDI-Record Processed is Error
      * Format Email Subject & Message and Send Email.
      * CASE: *OTHERWISE
     C                   IF        WN0001 = 'E'
     C                   EVAL      YL0036 = ' '                                 EDI Surrogate N
     C                   MOVEL     WAH9NY        YL0036                         EDI Surrogate N
      * EUS TrimL Surrogate #  US - EDI Whs Inv Adj Adv   HDR  * 
      * Trim Left EDI Surrogate Number; Suppress Leading Zero.
     c                   eval      YL0036 = %triml(YL0036 : '0 ')
      *
     C                   Z-ADD     1             ZQ
     C     YL0002        CAT(P)    @CN(016):ZQ   WN0003                         Email Subject U
     C                   Z-ADD     1             ZQ
     C     WN0003        CAT(P)    YL0036:ZQ     WN0003                         Email Subject U
     C                   Z-ADD     1             ZQ
     C     @CN(017)      CAT(P)    WN0002:ZQ     YL0037                         Email Message U
      * Default Company to 360 if Zero.
      * CASE: LCL.Company Number is Equal to zero
     C                   IF        YL0007 = 0
     C                   Z-ADD     360           YL0007                         Company Number
     C                   END                                                    *FI
      * Exc ESNDMAIL Generic  IF
      * Execute ESNDMAIL to Send Email Message.
      * RTV Alpha Value 2     RT - Company Values  * Get Email Address
     C                   EXSR      SNRVGN
      * CASE: LCL.Email Address is Entered
      * Exc ESNDMAIL Generic  CL - /UT User Programs  * Send Email
     C                   IF        YL0038 <> ' '
     C                   CALL      'PUE8UPC'                            90      Exc ESNDMAIL Ge
     C                   PARM      YL0038        WQ0043                         Email Address
     C                   PARM      WN0003        WQ0044                         Email Subject U
     C                   PARM      YL0037        WQ0045                         Email Message U
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PUE8UPC'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
     C                   END
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   READ      @P070CZ                                90    *
     C                   ENDDO
      *================================================================
     CSR   SAEXIT        ENDSR
      /EJECT
     CSR   SBRVGN        BEGSR
      *================================================================
      * Rtv Warehouse/Company RT - EDI Whs Inv Adj Adv   NAM  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   EVAL      YL0006 = ' '                                 Warehouse Code
     C                   Z-ADD     *ZERO         YL0007                         Company Number
      * use override company/warehouse?
     C                   MOVEL     'N'           YL0008                         Status Flag 1
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSB         KLIST
     C                   KFLD                    WQSB01                         EDI SURROGATE N
      * Setup key
     C                   Z-ADD     WAH9NY        WQSB01                         EDI SURROGATE N
      * Establish starting position
     C     KRSSB         SETLL     @ARCPBJ                                      *
     C     KRSSB         READE     @ARCPBJ                                90    *
      * Data record not found
     C   90              MOVEL     'USR5025'     W0RTN
      * USER: Process Data record
      * CASE: DB1.N101-NAME TYPE CODE is Warehouse
     C                   DOW       NOT *IN90
      * EUS TrimL Warehouse CdeUS - EDI Whs Inv Adj Adv   NAM  * 
     C                   IF        WBTYPC = 'WH'
      * Trim Left Warehouse Code.
     c                   eval      YL0009 = %triml(WBDCDE)
      *
      * Get EDI WHS INterchange override company 5/13/21 RMC if entered g
      * Rtv EDI Company # ovrd RT - EDI WHS Interchange  * 
     C                   EXSR      SCRVGN
      * CASE: LCL.EDI Company # 940 846 947 is Entered
      * Rtv Acct Co          RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                   IF        YL0010 > 0
     C                   MOVEL(P)  YL0009        WL0001                         Warehouse Code
     C                   EXSR      SDRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0002        YL0007                         Accounting Comp
     C                   MOVEL     YL0009        YL0006                         Warehouse Code
     C                   END                                                    *FI
      * use override co/whse is no
      * CASE: LCL.Status Flag 1  Y/N is No
     C                   IF        YL0008 = 'N'
     C                   MOVEL     YL0009        YL0006                         Warehouse Code
     C                   END                                                    *FI
     C                   ELSE
      * CASE: DB1.N101-NAME TYPE CODE is Company Number
      * CASE:
      *  - c1ORc2ORc3
      *   |- c1    : DB1.N104-ID CODE is Sioux City 440
      *   |- c2    : DB1.N104-ID CODE is Guymon 360
      *   |- c3    : DB1.N104-ID CODE is Triumph 960
      *   '-
     C                   IF        WBTYPC = 'B5'
      * Hard Coding Company Number.
      * CASE: DB1.N104-ID CODE is Guymon 360
     C                   IF        WBDCDE = '440' OR
     C                             WBDCDE = '360' OR
     C                             WBDCDE = '960'
     C                   IF        WBDCDE = '360'
     C                   Z-ADD     360           YL0007                         Company Number
     C                   ELSE
      * CASE: DB1.N104-ID CODE is Sioux City 440
     C                   IF        WBDCDE = '440'
     C                   Z-ADD     440           YL0007                         Company Number
     C                   ELSE
      * CASE: DB1.N104-ID CODE is Triumph 960
     C                   IF        WBDCDE = '960'
     C                   Z-ADD     960           YL0007                         Company Number
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   ELSE
      * CASE: *OTHERWISE
      * RTV EDI Override company's warehouse from edi whs interchange rcd
      *  then get that warehouse's accounting company
      * EUS TrimL Warehouse CdeUS - EDI Whs Inv Adj Adv   NAM  * 
     c                   eval      YL0011 = %triml(WBDCDE)
     C                   MOVE      YL0011        YL0010                         EDI Company # 9
      * CASE: LCL.EDI Company # 940 846 947 is Entered
      * Rtv EDI Ovrd Co Whse   RT - EDI WHS Interchange  * 
     C                   IF        YL0010 > 0
     C                   EXSR      SERVGN
      * Rtv Acct Co          RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0009        WL0001                         Warehouse Code
     C                   EXSR      SDRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0002        YL0012                         Accounting Comp
      * CASE: LCL.Accounting Company is not equal to zero
     C                   IF        YL0012 <> 0
     C                   Z-ADD     YL0012        YL0007                         Company Number
     C                   MOVEL     YL0009        YL0006                         Warehouse Code
     C                   MOVEL     'Y'           YL0008                         Status Flag 1
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C     KRSSB         READE     @ARCPBJ                                90    *
     C                   ENDDO
      *================================================================
     CSR   SBEXIT        ENDSR
      /EJECT
     CSR   SCRVGN        BEGSR
      *================================================================
      * Rtv EDI Company # ovrd RT - EDI WHS Interchange  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   Z-ADD     *ZERO         YL0010                         EDI Company # 9
      * Define keylist
     C     KRSSC         KLIST
     C                   KFLD                    WCAJCD                         Warehouse Code
     C                   KFLD                    WCM4AA                         Interchange Cod
      * Setup key
     C                   MOVEL     YL0009        WCAJCD                         Warehouse Code
     C                   MOVEL     'WHSINV'      WCM4AA                         Interchange Cod
      * Establish starting position
     C     KRSSC         CHAIN     @G0REJZ                            90        *
      * Data record not found
     C   90              MOVEL     'USR4409'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   Z-ADD     WCF5NZ        YL0010                         EDI Company # 9
     C                   ENDIF
      *================================================================
     CSR   SCEXIT        ENDSR
      /EJECT
     CSR   SDRVGN        BEGSR
      *================================================================
      * Rtv Acct Co          RT - Warehouse  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSD         KLIST
     C                   KFLD                    WDAJCD                         Warehouse Code
      * Setup key
     C                   MOVEL     WL0001        WDAJCD                         Warehouse Code
      * Establish starting position
     C     KRSSD         CHAIN     @ADREAO                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0007'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   Z-ADD     *ZERO         WL0002                         Accounting Comp
     C                   GOTO      SDEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   Z-ADD     WDBTC3        WL0002                         Accounting Comp
     C                   ENDIF
      *================================================================
     CSR   SDEXIT        ENDSR
      /EJECT
     CSR   SERVGN        BEGSR
      *================================================================
      * Rtv EDI Ovrd Co Whse   RT - EDI WHS Interchange  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   EVAL      YL0009 = ' '                                 Warehouse Code
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSE         KLIST
     C                   KFLD                    WQSE01                         EDI Company # 9
     C                   KFLD                    WQSE02                         Interchange Cod
      * Setup key
     C                   Z-ADD     YL0010        WQSE01                         EDI Company # 9
     C                   MOVEL     'WHSINV'      WQSE02                         Interchange Cod
      * Establish starting position
     C     KRSSE         SETLL     @G0REIW                                      *
     C     KRSSE         READE     @G0REIW                                90    *
      * Data record not found
     C   90              MOVEL     'USR4409'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   DOW       NOT *IN90
     C                   MOVEL     WEAJCD        YL0009                         Warehouse Code
     C     KRSSE         READE     @G0REIW                                90    *
     C                   ENDDO
      *================================================================
     CSR   SEEXIT        ENDSR
      /EJECT
     CSR   SFRVGN        BEGSR
      *================================================================
      * Rtv WHS Interchg All  RT - EDI WHS Interchange  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   EVAL      YL0013 = ' '                                 EDI Trading Par
     C                   EVAL      YL0014 = ' '                                 Record Status
      * Define keylist
     C     KRSSF         KLIST
     C                   KFLD                    WCAJCD                         Warehouse Code
     C                   KFLD                    WCM4AA                         Interchange Cod
      * Setup key
     C                   MOVEL     YL0006        WCAJCD                         Warehouse Code
     C                   MOVEL     'WHSINV'      WCM4AA                         Interchange Cod
      * Establish starting position
     C     KRSSF         CHAIN     @G0REJZ                            90        *
      * Data record not found
     C   90              MOVEL     'USR4409'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     WCJ5NX        YL0013                         EDI Trading Par
     C                   MOVEL     WCVSST        YL0014                         Record Status
     C                   ENDIF
      *================================================================
     CSR   SFEXIT        ENDSR
      /EJECT
     CSR   SGRVGN        BEGSR
      *================================================================
      * Val Product & Adj Code RT - EDI Whs Inv Adj Adv   DTL  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   EVAL      WN0001 = ' '                                 EDI-Record Proc
     C                   EVAL      WN0002 = ' '                                 EDI 947 Error D
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSG         KLIST
     C                   KFLD                    WQSG01                         EDI SURROGATE N
      * Setup key
     C                   Z-ADD     WAH9NY        WQSG01                         EDI SURROGATE N
      * Establish starting position
     C     KRSSG         SETLL     @ASCPBM                                      *
     C     KRSSG         READE     @ASCPBM                                90    *
      * Data record not found
     C   90              MOVEL     'USR5027'     W0RTN
      * USER: Process Data record
      * Validate Product.
      * CASE: DB1.W1906 PRODUCT is Entered
     C                   DOW       NOT *IN90
      * EUS TrimL Prod ID Code US - EDI WHS Stock Txf ADV DTL  * 
     C                   IF        WFHWU1 <> ' '
      * Trim Left Product ID.
     c                   eval      YL0016 = %triml(WFHWU1)
      *
      * Val Numeric Digit     US - /UT User Source  * 
      *
     c                   Monitor
      *
     c                   If        %check(digits : %trim(YL0016)) = 0
      * All Digit, Validation Pass.
     c                   eval      YL0017 = 'Y'
     c                   else
      * Non-Digit Found, Validation Fail.
     c                   eval      YL0017 = 'N'
     c                   endif
      *
      * Monitor Message RNX0105 - 'A character representation of a numeric value is in error.
     c                   On-Error  00105                                        Do Nothing
      *
     c                   EndMon
      *
      * Item Code Pass Digit Check?
      * CASE: LCL.Validation Pass USR is Yes
      * Cvt Item Code to Nbr   US - EDI WHS Shipping Adv DTL  * 
     C                   IF        YL0017 = 'Y'
      * Trim Item Code and Convert to Numeric.
     c                   eval      YL0018 = %dec(%trim(YL0016) : 7:0)
      *
      * Val Company/Item Exist RT - Company Item  * 
     C                   EXSR      SHRVGN
      * Record Found?
      * CASE: PGM.*Return code is *Normal
     C                   IF        W0RTN = ' '
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     'E'           WN0001                         EDI-Record Proc
     C                   Z-ADD     1             ZQ
     C     @CN(010)      CAT(P)    @CN(009):ZQ   WN0002                         EDI 947 Error D
     C                   GOTO      SGEXIT                                       *QUIT
     C                   END                                                    *FI
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     'E'           WN0001                         EDI-Record Proc
     C                   EVAL      WN0002 = ' '                                 EDI 947 Error D
     C                   MOVEL     @CN(011)      WN0002                         EDI 947 Error D
     C                   GOTO      SGEXIT                                       *QUIT
     C                   END                                                    *FI
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     'E'           WN0001                         EDI-Record Proc
     C                   EVAL      WN0002 = ' '                                 EDI 947 Error D
     C                   MOVEL     @CN(011)      WN0002                         EDI 947 Error D
     C                   GOTO      SGEXIT                                       *QUIT
     C                   END                                                    *FI
      * Validate Adjustment Reason Code.
      * CASE: DB1.W1901 ADJUSTMENT RSN CDE is *ALL values
     C                   IF        WFE3SC = 'AA' OR
     C                             WFE3SC = '07' OR
     C                             WFE3SC = 'AV' OR
     C                             WFE3SC = 'AY' OR
     C                             WFE3SC = 'AU' OR
     C                             WFE3SC = '05' OR
     C                             WFE3SC = '55'
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     'E'           WN0001                         EDI-Record Proc
     C                   Z-ADD     1             ZQ
     C     @CN(012)      CAT(P)    'code.':ZQ    WN0002                         EDI 947 Error D
     C                   GOTO      SGEXIT                                       *QUIT
     C                   END                                                    *FI
      * Validate Reference Status Code.
      * CASE: DB1.W902 Reference Status Cde is *ALL values
      * RMC added AU as valid for 947 - it comes with reason 07
     C                   IF        WFE8SC = 'HO' OR
     C                             WFE8SC = 'QU' OR
     C                             WFE8SC = 'BL' OR
     C                             WFE8SC = 'AL' OR
     C                             WFE8SC = 'AV' OR
     C                             WFE8SC = ' ' OR
     C                             WFE8SC = 'AU'
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     'E'           WN0001                         EDI-Record Proc
     C                   Z-ADD     1             ZQ
     C     @CN(013)      CAT(P)    'code.':ZQ    WN0002                         EDI 947 Error D
     C                   GOTO      SGEXIT                                       *QUIT
     C                   END                                                    *FI
      * Validate Production Date.
      * CASE: DB1.G6202 Production Date is Entered
      * EUS Val Production Dte US - EDI Whs Inv Adj Adv   DTL  * 
     C                   IF        WFCTNZ <> 0
      * Check Production Date is a Valid Date.
      *
     c                   eval      YL0017 = 'Y'
     c                   eval      wkccyymmdd = %char(WFCTNZ)                   Convert to Charc.
      /free
       test(de) *iso0 wkccyymmdd ;
       if %error() ;
         YL0017 = 'N' ;  // Invalid Date
       endif ;
      /end-free
      *
      * Invalid Date.
      * CASE: LCL.Validation Pass USR is No
     C                   IF        YL0017 = 'N'
     C                   MOVEL     'E'           WN0001                         EDI-Record Proc
     C                   EVAL      WN0002 = ' '                                 EDI 947 Error D
     C                   MOVEL     @CN(014)      WN0002                         EDI 947 Error D
     C                   GOTO      SGEXIT                                       *QUIT
     C                   END                                                    *FI
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     'E'           WN0001                         EDI-Record Proc
     C                   EVAL      WN0002 = ' '                                 EDI 947 Error D
     C                   MOVEL     @CN(014)      WN0002                         EDI 947 Error D
     C                   GOTO      SGEXIT                                       *QUIT
     C                   END                                                    *FI
     C     KRSSG         READE     @ASCPBM                                90    *
     C                   ENDDO
      *================================================================
     CSR   SGEXIT        ENDSR
      /EJECT
     CSR   SHRVGN        BEGSR
      *================================================================
      * Val Company/Item Exist RT - Company Item  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSH         KLIST
     C                   KFLD                    WGAIC3                         Company Number
     C                   KFLD                    WGHGCD                         Item Code
      * Setup key
     C                   Z-ADD     YL0007        WGAIC3                         Company Number
     C                   Z-ADD     YL0018        WGHGCD                         Item Code
      * Establish starting position
     C     KRSSH         CHAIN     @BZREJU                            90        *
      * Data record not found
     C   90              MOVEL     'USR0326'     W0RTN
      *================================================================
     CSR   SHEXIT        ENDSR
      /EJECT
     CSR   SIRVGN        BEGSR
      *================================================================
      * Upd Proc 947 Whs InvAdjRT - EDI Whs Inv Adj Adv   DTL  * 
      *================================================================
      *
     C                   EVAL      WN0004 = ' '                                 Warehouse Code
     C                   Z-ADD     *ZERO         WN0005                         Shipping Compan
      *
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * Get System Date       US - /UT User Source  * 
      * Get System Date - CCYYMMDD
     c                   eval      YL0019 = *date
      * LCL.Transaction Date D8# USR = LCL.System Date Nbr USR
     C                   Z-ADD     YL0019        YL0020                         Transaction Dat
      * LCL.Transaction Date Code = LCL.Transaction Date D8# USR
     C                   IF        YL0020 = *ZERO
     C                   Z-ADD     *ZERO         YL0021
     C                   ELSE
     C     YL0020        SUB       19000000      YL0021                         Transaction Dat
     C                   END
     C                   EVAL      YL0022 = ' '                                 Inventory Trans
     C                   MOVEL     'A'           YL0022                         Inventory Trans
      * LCL.Inv Trans. Type Desc USR = Condition name of LCL.Inventory Tr
     C                   CALL      'CARVC2R'                            90      *
     C                   PARM                    W0RTN
     C                   PARM      1162839       Y2LSNO                         List number
     C                   PARM      YL0022        W0INVL                         Inventory Trans
     C                   PARM      ' '           W0VLMP                         Value mapped
     C     YL0023        PARM                    W0CNNM                         Inv Trans. Type
      *
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSI         KLIST
     C                   KFLD                    WQSI01                         EDI SURROGATE N
      * Setup key
     C                   Z-ADD     WAH9NY        WQSI01                         EDI SURROGATE N
      * Establish starting position
     C     KRSSI         SETLL     @ASCPBM                                      *
     C     KRSSI         READE     @ASCPBM                                90    *
      * Data record not found
     C   90              MOVEL     'USR5027'     W0RTN
      * USER: Process Data record
      * Format Data.
      * CASE: *OTHERWISE
      * LCL.Production Date USR D8# = DB1.G6202 Production Date
     C                   DOW       NOT *IN90
     C                   Z-ADD     WFCTNZ        YL0024                         Production Date
      * LCL.Production Date = LCL.Production Date USR D8#
     C                   IF        YL0024 = *ZERO
     C                   Z-ADD     *ZERO         YL0025
     C                   ELSE
     C     YL0024        SUB       19000000      YL0025                         Production Date
     C                   END
      * EUS TrimL Prod ID Code US - EDI WHS Stock Txf ADV DTL  * 
     c                   eval      YL0026 = %triml(WFHWU1)
      * Cvt Item Code to Nbr   US - EDI WHS Shipping Adv DTL  * 
     c                   eval      YL0027 = %dec(%trim(YL0026) : 7:0)
     C                   Z-ADD     2             ZQ
     C     YL0023        CAT(P)    WFE8SC:ZQ     YL0028                         Description
      * Translate Adjustment Reason Code to AS400 Reason Code.
      * CASE: DB1.W1901 ADJUSTMENT RSN CDE is Cycle Count (Add/Remove)
      * Increase/Decrease Inventory.
      * CASE: DB1.W1902 CREDIT DEBIT QTY is Decrease Inventory
     C                   IF        WFE3SC = 'AA'
     C                   IF        WFA2NZ < 0
     C                   MOVEL     'CCD'         YL0029                         Reason Code
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     'CCA'         YL0029                         Reason Code
     C                   END                                                    *FI
     C                   ELSE
      * CASE: DB1.W1901 ADJUSTMENT RSN CDE is Dump/Destroy
     C                   IF        WFE3SC = '07'
     C                   MOVEL     'TNK'         YL0029                         Reason Code
     C                   ELSE
      * CASE: DB1.W1901 ADJUSTMENT RSN CDE is Inbound/Carrier Damage
     C                   IF        WFE3SC = 'AV'
     C                   MOVEL     'CRD'         YL0029                         Reason Code
     C                   ELSE
      * CASE: DB1.W1901 ADJUSTMENT RSN CDE is Receipt Error (Add/Remov)
      * Increase/Decrease Inventory.
      * CASE: DB1.W1902 CREDIT DEBIT QTY is Decrease Inventory
     C                   IF        WFE3SC = 'AY'
     C                   IF        WFA2NZ < 0
     C                   MOVEL     'GRD'         YL0029                         Reason Code
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     'GRA'         YL0029                         Reason Code
     C                   END                                                    *FI
     C                   ELSE
      * CASE: DB1.W1901 ADJUSTMENT RSN CDE is Warehouse Damage
     C                   IF        WFE3SC = 'AU'
     C                   MOVEL     'WHD'         YL0029                         Reason Code
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      YL0029 = ' '                                 Reason Code
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Net weight - use company item if -0-
      * CASE: DB1.W1910 WEIGHT-GROSS is Not Entered
      * the net and gross wts are swapped in the file. use Gross here whi
      * RTV Unit Weight        RT - Company Item  * 
     C                   IF        WFNIVL = 0
     C                   EXSR      SJRVGN
     C     YL0030        MULT      WFA2NZ        YL0032                         W1913 WEIGHT-NE
     C                   ELSE
      * CASE: *OTHERWISE
     C                   Z-ADD     WFNIVL        YL0032                         W1913 WEIGHT-NE
     C                   END                                                    *FI
      * INVENTORY IS KEPT BY SHIPPING COMPANY
      * RTV Shipping Co        RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0006        WL0003                         Warehouse Code
     C                   EXSR      SKRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0004        WN0005                         Shipping Compan
      * MANIPULATE THE WAREHOUSES IF NA3 OR NA5 Then do Adjust  RMC 4.29.
      * CASE:
      *  - c1ORc2
      *   |- c1    : PAR.Warehouse Code is NA3 Nor Am-Fresh-360
      *   |- c2    : PAR.Warehouse Code is NA5 Nor Am-Fresh-960
      *   '-
     C                   IF        YL0006 = 'NA3' OR
     C                             YL0006 = 'NA5'
     C                   MOVEL     YL0006        YL0033                         Warehouse Code
     C                   Z-ADD     WN0005        YL0034                         Shipping Compan
      * RTV Sold 100% Frozen  RT - Company Item  * 
     C                   EXSR      SLRVGN
      * Change 100% frozen product in NA3 to NA8 (101257) No longer 100%
      * CASE: PAR.Warehouse Code is NA3 Nor Am-Fresh-360
      * W101257 DN 06/20/22-Removed test: LCL.Sold 100% Frozen is yes
     C                   IF        YL0006 = 'NA3'
     C                   MOVEL     'NA8'         YL0033                         Warehouse Code
     C                   MOVEL     'NA8'         WN0004                         Warehouse Code
      * RTV Shipping Co        RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  WN0004        WL0003                         Warehouse Code
     C                   EXSR      SKRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0004        WN0005                         Shipping Compan
     C                   Z-ADD     WN0005        YL0034                         Shipping Compan
     C                   END                                                    *FI
      * Change 100% frozen product in NA5 to NA6
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Warehouse Code is NA5 Nor Am-Fresh-960
      *   |- c2    : LCL.Sold 100% Frozen is yes
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        YL0006 = 'NA5'
     C                   IF        YL0035 = 'Y'
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   IF        Y0CX01 = '1'
     C                   MOVEL     'NA6'         YL0033                         Warehouse Code
     C                   MOVEL     'NA6'         WN0004                         Warehouse Code
      * RTV Shipping Co        RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  WN0004        WL0003                         Warehouse Code
     C                   EXSR      SKRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0004        WN0005                         Shipping Compan
     C                   Z-ADD     WN0005        YL0034                         Shipping Compan
     C                   END                                                    *FI
      * Dont adjust if the reason is not established. we arent doing  any
      * with status changes: w1901 of 05 and 55
      * CASE: LCL.Reason Code is Entered
      * WI517 DN 07/06/23-Added 'Upd Both Legacy & WIM USR=N'. Update Leg
      *   - Added 'Called From Program' as input parm.
      *   - Added 'Inventory Updated USR' & 'API was Called? U' as output
      * Upd Balances Issue/Adj XF - Item Balance  * 
     C                   IF        YL0029 <> ' '
     C                   CALL      'PDQRXFR'                            90      Upd Balances Is
     C                   PARM      *BLANK        W0RTN
     C                   PARM      YL0034        WQ0001                         Company Number
     C                   PARM      YL0027        WQ0002                         Item Code
     C                   PARM      YL0033        WQ0003                         Warehouse Code
     C                   PARM      'A'           WQ0004                         Inventory Trans
     C                   PARM      'A'           WQ0005                         Inventory Trans
     C                   PARM      YL0021        WQ0006                         Transaction Dat
     C                   PARM      YL0025        WQ0007                         Production Date
     C                   PARM      'IC'          WQ0008                         Item Transactio
     C                   PARM      YL0028        WQ0009                         Description
     C                   PARM      YL0029        WQ0010                         Reason Code
     C                   PARM      *BLANK        WQ0011                         Lot ID
     C                   PARM      WACRNZ        WQ0012                         Order Number
     C                   PARM      '1'           WQ0013                         Shift Number
     C                   PARM      YL0025        WQ0014                         Label Date
     C                   PARM      YL0032        WQ0015                         USR Weight Accu
     C                   PARM      WFA2NZ        WQ0016                         Transaction Qty
     C                   PARM      *BLANK        WQ0017                         USR Unship Flag
     C                   PARM      'N'           WQ0018                         Upd Both Legacy
     C     YL0004        PARM      *BLANK        WQ0019                         Inventory Updat
     C     YL0003        PARM      *BLANK        WQ0020                         API was Called?
     C                   PARM      @CN(015)      WQ0021                         Called From Pro
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PDQRXFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        99        *
     C                   END
     C                   END                                                    *FI
     C                   ELSE
      * CASE: *OTHERWISE
      * Dont adjust if the reason is not established. we arent doing  any
      * with status changes: w1901 of 05 and 55
      * CASE: LCL.Reason Code is Entered
      * WI517 DN 07/06/23-Added 'Upd Both Legacy & WIM USR=N'. Update Leg
      *   - Added 'Called From Program' as input parm.
      *   - Added 'Inventory Updated USR' & 'API was Called? U' as output
      * Upd Balances Issue/Adj XF - Item Balance  * 
     C                   IF        YL0029 <> ' '
     C                   CALL      'PDQRXFR'                            90      Upd Balances Is
     C                   PARM      *BLANK        W0RTN
     C                   PARM      WN0005        WQ0022                         Company Number
     C                   PARM      YL0027        WQ0023                         Item Code
     C                   PARM      YL0006        WQ0024                         Warehouse Code
     C                   PARM      'A'           WQ0025                         Inventory Trans
     C                   PARM      'A'           WQ0026                         Inventory Trans
     C                   PARM      YL0021        WQ0027                         Transaction Dat
     C                   PARM      YL0025        WQ0028                         Production Date
     C                   PARM      'IC'          WQ0029                         Item Transactio
     C                   PARM      YL0028        WQ0030                         Description
     C                   PARM      YL0029        WQ0031                         Reason Code
     C                   PARM      *BLANK        WQ0032                         Lot ID
     C                   PARM      WACRNZ        WQ0033                         Order Number
     C                   PARM      '1'           WQ0034                         Shift Number
     C                   PARM      YL0025        WQ0035                         Label Date
     C                   PARM      YL0032        WQ0036                         USR Weight Accu
     C                   PARM      WFA2NZ        WQ0037                         Transaction Qty
     C                   PARM      *BLANK        WQ0038                         USR Unship Flag
     C                   PARM      'N'           WQ0039                         Upd Both Legacy
     C     YL0004        PARM      *BLANK        WQ0040                         Inventory Updat
     C     YL0003        PARM      *BLANK        WQ0041                         API was Called?
     C                   PARM      @CN(015)      WQ0042                         Called From Pro
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PDQRXFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        99        *
     C                   END
     C                   END                                                    *FI
     C                   END                                                    *FI
     C     KRSSI         READE     @ASCPBM                                90    *
     C                   ENDDO
      *================================================================
     CSR   SIEXIT        ENDSR
      /EJECT
     CSR   SJRVGN        BEGSR
      *================================================================
      * RTV Unit Weight        RT - Company Item  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSJ         KLIST
     C                   KFLD                    WGAIC3                         Company Number
     C                   KFLD                    WGHGCD                         Item Code
      * Setup key
     C                   Z-ADD     YL0007        WGAIC3                         Company Number
     C                   Z-ADD     YL0027        WGHGCD                         Item Code
      * Establish starting position
     C     KRSSJ         CHAIN     @BZREJU                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0326'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   Z-ADD     *ZERO         YL0030                         Unit Weight
     C                   EVAL      YL0031 = ' '                                 Quality Level
     C                   GOTO      SJEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   Z-ADD     WGAIWG        YL0030                         Unit Weight
     C                   MOVEL     WGHICD        YL0031                         Quality Level
     C                   ENDIF
      *================================================================
     CSR   SJEXIT        ENDSR
      /EJECT
     CSR   SKRVGN        BEGSR
      *================================================================
      * RTV Shipping Co        RT - Warehouse  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSK         KLIST
     C                   KFLD                    WDAJCD                         Warehouse Code
      * Setup key
     C                   MOVEL     WL0003        WDAJCD                         Warehouse Code
      * Establish starting position
     C     KRSSK         CHAIN     @ADREAO                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0007'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   Z-ADD     *ZERO         WL0004                         Shipping Compan
     C                   GOTO      SKEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   Z-ADD     WDBWC3        WL0004                         Shipping Compan
     C                   ENDIF
      *================================================================
     CSR   SKEXIT        ENDSR
      /EJECT
     CSR   SLRVGN        BEGSR
      *================================================================
      * RTV Sold 100% Frozen  RT - Company Item  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSL         KLIST
     C                   KFLD                    WHAIC3                         Company Number
     C                   KFLD                    WHHGCD                         Item Code
      * Setup key
     C                   Z-ADD     YL0007        WHAIC3                         Company Number
     C                   Z-ADD     YL0027        WHHGCD                         Item Code
      * Establish starting position
     C     KRSSL         CHAIN     @BZREZG                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0326'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   EVAL      YL0035 = ' '                                 Sold 100 Percen
     C                   GOTO      SLEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     WHS4ST        YL0035                         Sold 100 Percen
     C                   ENDIF
      *================================================================
     CSR   SLEXIT        ENDSR
      /EJECT
     CSR   SMCHRC        BEGSR
      *================================================================
      * Chg Whs Inv Adj Adv HDRCH - EDI Whs Inv Adj Adv   HDR  * Upd EDI
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Set PGM.*Record Data Changed flag
     C                   EVALR     YARDC = ' '
      *
      * Move key fields to @AQCPBE
     C                   Z-ADD     WAH9NY        WIH9NY                         EDI SURROGATE N
      *
     C     KLCHSM        KLIST
     C                   KFLD                    WIH9NY                         EDI SURROGATE N
     C     KLCHSM        CHAIN     @AQCPBE                            9091      *
      *
      * Record not found
     C                   IF        *IN90
     C                   MOVEL     'Y2U0009'     W0RTN
     C                   MOVEL     ##PGM         MDPGM
     C                   MOVEL     'ECP070L0'    MDACP
     C                   MOVEL     '@AQCPBE'     MDFMT
     C                   MOVEL     '*CHG'        MDACT
      * Record not found label: LBL001.
     C                   MOVEL     'LBL001'      MDLBL
      * Send message '*Record no longer on file'
     C                   MOVEL     'Y2U0009'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     MD0009        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   EVAL      MD0009 = ' '
     C                   GOTO      SMEXIT
     C                   ENDIF
      *
      * Record locked
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
      * Send message '*Database operation error'
     C                   MOVEL     'Y2U0004'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   GOTO      SMEXIT
     C                   ENDIF
      *
      * Store record data for null update check
     C                   MOVE      QECP01        YARDCS
      * Move non-key fields to @AQCPBE
     C                   MOVEL(P)  WAHPAA        WIHPAA                         TRADE PARTNER C
     C                   MOVEL(P)  WN0001        WIA0ST                         EDI-Record Proc
     C                   MOVEL(P)  WAHSU1        WIHSU1                         W1501 Date
     C                   MOVEL(P)  WAHTU1        WIHTU1                         W1502 Adj Numbe
     C                   MOVEL(P)  WAHUU1        WIHUU1                         W1503 Adj Numbe
     C                   Z-ADD     WACRNZ        WICRNZ                         N902 Transfer O
     C                   MOVEL(P)  WAIVU1        WIIVU1                         G6202 Contact U
     C                   Z-ADD     WAAQTH        WIAQTH                         G6204 Adjustmen
      *
      * Set PGM.*Record Data Changed flag
     C                   IF        QECP01 <> YARDCS AND
     C                             YARDC <> 'N'
     C                   MOVE      'Y'           YARDC
     C                   ENDIF
      * If changed update record otherwise release record
     C                   IF        YARDC = 'Y'
     C                   UPDATE    @AQCPBE                              91      *
     C                   ELSE
      * Release record lock
     C                   UNLOCK    ECP070L0                             91      *
     C                   ENDIF
      * Change error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
      *
      * DBF change successful
     C                   ENDIF
      *================================================================
     CSR   SMEXIT        ENDSR
      /EJECT
     CSR   SNRVGN        BEGSR
      *================================================================
      * RTV Alpha Value 2     RT - Company Values  * Get Email Address
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   EVAL      YL0038 = ' '                                 System Value Al
      * Define keylist
     C     KRSSN         KLIST
     C                   KFLD                    WJAIC3                         Company Number
     C                   KFLD                    WJV8CD                         Company Value C
      * Setup key
     C                   Z-ADD     YL0007        WJAIC3                         Company Number
     C                   MOVEL     @CN(018)      WJV8CD                         Company Value C
      * Establish starting position
     C     KRSSN         CHAIN     @KMREHC                            90        *
      * Data record not found
     C   90              MOVEL     'USR2221'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     WJBXTX        YL0038                         System Value Al
     C                   ENDIF
      *================================================================
     CSR   SNEXIT        ENDSR
      /EJECT
     CSR   ZASNMS        BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C                   IF        ZAPGMQ = ' '
     C                   MOVEL     ##PGM         ZAPGMQ
     C                   END
     C                   CALL      'Y2SNMGC'
     C                   PARM                    ZAPGMQ                         Program queue
     C                   PARM                    ZAPGRL                         Rel queue
     C                   PARM                    ZAMSID                         Message ID
     C                   PARM                    ZAMSGF                         Message file
     C                   PARM                    ZAMSDA                         Message data
     C                   PARM                    ZAMSTP                         Message type
     C                   PARM      'Y'           YILE
      * Clear all fields for default mechanism next time
     C                   EVAL      ZAPGMQ = ' '
     C                   EVAL      ZAPGRL = ' '
     C                   EVAL      ZAMSID = ' '
     C                   EVAL      ZAMSGF = ' '
     C                   EVAL      ZAMSDA = ' '
     C                   EVAL      ZAMSTP = ' '
      *================================================================
     CSR   ZAEXIT        ENDSR
      /EJECT
     CSR   ZXEXPG        BEGSR
      *================================================================
      * Exit program: Normal
      *================================================================
     C                   EXSR      ZYEXPG
      *================================================================
     CSR   ZXEXIT        ENDSR
      /EJECT
     CSR   ZYEXPG        BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                   SETON                                        LR
      *
      * Exit program
     C                   RETURN
      *
      *================================================================
     CSR   ZYEXIT        ENDSR
      /EJECT
     CSR   ZZINIT        BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C                   IF        W0ICL = ' '
     C                   MOVEL     'Y'           W0ICL                          *Initial call
     C                   ELSE
     C                   MOVEL     'N'           W0ICL
     C                   END
     C                   EVALR     P0RTN = ' '
     C                   EVALR     W0RTN = ' '
     C                   EVAL      W0RSL = ' '
     C                   EVAL      W0RSF = ' '
     C                   MOVEL     *ZEROS        W0RTW
     C                   MOVEL     '400'         W0ENV
      * Retrieve job attributes
     C                   CALL      'Y2RTJCR'
     C                   PARM                    PGMDS
      * Setup job date/time
     C                   Z-ADD     ##SD7         ##JDT
     C                   TIME                    ##JTM
      * Update screen time
     C                   TIME                    ##TME
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WAH9NY                         EDI SURROGATE N
     C                   Z-ADD     *ZERO         WACRNZ                         N902 Transfer O
     C                   Z-ADD     *ZERO         WAAQTH                         G6204 Adjustmen
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WBH9NY                         EDI SURROGATE N
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WCF5NZ                         EDI Company # 9
     C                   Z-ADD     *ZERO         WCF6NZ                         Hold til ship w
     C                   Z-ADD     *ZERO         WCMJDT                         Create Date
     C                   Z-ADD     *ZERO         WCBETM                         Create Time
     C                   Z-ADD     *ZERO         WCMKDT                         Change Date
     C                   Z-ADD     *ZERO         WCBFTM                         Change Time
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WDDBNB                         Warehouse Chill
     C                   Z-ADD     *ZERO         WDBWC3                         Shipping Compan
     C                   Z-ADD     *ZERO         WDBTC3                         Accounting Comp
     C                   Z-ADD     *ZERO         WDBUC3                         WHS Sched Prod
     C                   Z-ADD     *ZERO         WDBVC3                         WHS Inventory C
     C                   Z-ADD     *ZERO         WDAATM                         Job Time
     C                   Z-ADD     *ZERO         WDAXDT                         Job Date
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WFH9NY                         EDI SURROGATE N
     C                   Z-ADD     *ZERO         WFT4NY                         LX01 Sequence N
     C                   Z-ADD     *ZERO         WFA2NZ                         W1902 CREDIT DE
     C                   Z-ADD     *ZERO         WFNIVL                         W1910 WEIGHT-GR
     C                   Z-ADD     *ZERO         WFNOVL                         W1913 WEIGHT-NE
     C                   Z-ADD     *ZERO         WFCTNZ                         G6202 Productio
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WGAIC3                         Company Number
     C                   Z-ADD     *ZERO         WGHGCD                         Item Code
     C                   Z-ADD     *ZERO         WGAWPC                         Conversion Fact
     C                   Z-ADD     *ZERO         WGAXPC                         Conversion Fact
     C                   Z-ADD     *ZERO         WGAIWG                         Unit Weight
     C                   Z-ADD     *ZERO         WGCZWG                         Minimum Weight
     C                   Z-ADD     *ZERO         WGC0WG                         Maximum Weight
     C                   Z-ADD     *ZERO         WGURTN                         Number Cases On
     C                   Z-ADD     *ZERO         WGAJC8                         Vendor Item Def
     C                   Z-ADD     *ZERO         WGRINB                         Item Structure
     C                   Z-ADD     *ZERO         WGRHNB                         Item Structure
     C                   Z-ADD     *ZERO         WGRGNB                         Item Structure
     C                   Z-ADD     *ZERO         WGTFNB                         Transportation
     C                   Z-ADD     *ZERO         WGTMVA                         Maximum Audit V
     C                   Z-ADD     *ZERO         WGTNVA                         Minimum Audit V
     C                   Z-ADD     *ZERO         WGBLPR                         Market Overage
     C                   Z-ADD     *ZERO         WGBMPR                         Standard Overag
     C                   Z-ADD     *ZERO         WGCMCO                         Item Pricing Co
     C                   Z-ADD     *ZERO         WGCHTM                         Fresh Chilling
     C                   Z-ADD     *ZERO         WGSWGH                         Std Weight_Head
     C                   Z-ADD     *ZERO         WGPPHE                         Pieces Per Head
     C                   Z-ADD     *ZERO         WGICN1                         Item Category N
     C                   Z-ADD     *ZERO         WGICN2                         Item Category N
     C                   Z-ADD     *ZERO         WGV2NB                         Item Category N
     C                   Z-ADD     *ZERO         WGITCN                         Item Category N
     C                   Z-ADD     *ZERO         WGITC5                         Item Category N
     C                   Z-ADD     *ZERO         WGICN6                         Item Category N
     C                   Z-ADD     *ZERO         WGICN7                         Item Category N
     C                   Z-ADD     *ZERO         WGICN8                         Item Category N
     C                   Z-ADD     *ZERO         WGICN9                         Item Category N
     C                   Z-ADD     *ZERO         WGICN0                         Item Category N
     C                   Z-ADD     *ZERO         WGSFNB                         Pallet Tare Wei
     C                   Z-ADD     *ZERO         WGA3WG                         Misc Tare Weigh
     C                   Z-ADD     *ZERO         WGSJNB                         Production Lead
     C                   Z-ADD     *ZERO         WGSKNB                         Agrimetrics gro
     C                   Z-ADD     *ZERO         WGSLNB                         Agrimetrics pac
     C                   Z-ADD     *ZERO         WGSMNB                         Agrimetrics gra
     C                   Z-ADD     *ZERO         WGCFNB                         PM Pounds per H
     C                   Z-ADD     *ZERO         WGCGNB                         Item Frt Overag
     C                   Z-ADD     *ZERO         WGILNB                         Packages per ca
     C                   Z-ADD     *ZERO         WGCHNB                         Use_Freeze_Sell
     C                   Z-ADD     *ZERO         WGCINB                         PM Batch Size
     C                   Z-ADD     *ZERO         WGCJNB                         Package Level s
     C                   Z-ADD     *ZERO         WGCMNB                         Partial Item Co
     C                   Z-ADD     *ZERO         WGCNNB                         WIP Item Code
     C                   Z-ADD     *ZERO         WGCRNB                         WIP Reject Code
     C                   Z-ADD     *ZERO         WGCSNB                         Std Costing Uni
     C                   Z-ADD     *ZERO         WGCVNB                         FP Std Green We
     C                   Z-ADD     *ZERO         WGCWNB                         PM Std LBS Man
     C                   Z-ADD     *ZERO         WGCXNB                         PM Raw Meat LBS
     C                   Z-ADD     *ZERO         WGCZNB                         PM Formula LBS
     C                   Z-ADD     *ZERO         WGC0NB                         PM Finished LBS
     C                   Z-ADD     *ZERO         WGB4NB                         PM Raw Material
     C                   Z-ADD     *ZERO         WGB5NB                         PM Line Number
     C                   Z-ADD     *ZERO         WGBDNB                         Pieces Per Bag
     C                   Z-ADD     *ZERO         WGBJNB                         Bags Per Unit
     C                   Z-ADD     *ZERO         WGF5WG                         Item Target Pri
     C                   Z-ADD     *ZERO         WGF6WG                         Minimum Piece W
     C                   Z-ADD     *ZERO         WGF7WG                         Maximum Piece W
     C                   Z-ADD     *ZERO         WGBLNB                         Seaboard Equiva
     C                   Z-ADD     *ZERO         WGBNNB                         Production Qty
     C                   Z-ADD     *ZERO         WGAATM                         Job Time
     C                   Z-ADD     *ZERO         WGAXDT                         Job Date
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WJAIC3                         Company Number
     C                   Z-ADD     *ZERO         WJM8NB                         System Value Nu
     C                   Z-ADD     *ZERO         WJAATM                         Job Time
     C                   Z-ADD     *ZERO         WJAXDT                         Job Date
      * Dummy move for compiler
     C                   MOVE      '0'           @CN#(1)
     C                   MOVEL     'N'           W0PMT
      * Define local variables for subroutine SDRVGN.
     C                   EVAL      WL0001 = ' '
     C                   Z-ADD     *ZERO         WL0002
      * Define local variables for subroutine SKRVGN.
     C                   EVAL      WL0003 = ' '
     C                   Z-ADD     *ZERO         WL0004
      * Define local work field Send Email f/Failed API U
     C                   EVAL      YL0001 = ' '
      * Define local work field Email Subject USR
     C                   EVAL      YL0002 = ' '
      * Define local work field API was Called? U
     C                   EVAL      YL0003 = ' '
      * Define local work field Inventory Updated USR
     C                   EVAL      YL0004 = ' '
      * Define local work field First Time Through USR
     C                   EVAL      YL0005 = ' '
      * Define local work field Warehouse Code
     C                   EVAL      YL0006 = ' '
      * Define local work field Company Number
     C                   Z-ADD     *ZERO         YL0007
      * Define local work field Status Flag 1  Y/N
     C                   EVAL      YL0008 = ' '
      * Define local work field Warehouse Code
     C                   EVAL      YL0009 = ' '
      * Define local work field EDI Company # 940 846 947
     C                   Z-ADD     *ZERO         YL0010
      * Define local work field Company Alpha
     C                   EVAL      YL0011 = ' '
      * Define local work field Accounting Company
     C                   Z-ADD     *ZERO         YL0012
      * Define null work field Class Code
     C                   EVAL      YN0001 = ' '
      * Define local work field EDI Trading Partner No.
     C                   EVAL      YL0013 = ' '
      * Define null work field EDI Whs Duns Number
     C                   EVAL      YN0002 = ' '
      * Define local work field Record Status
     C                   EVAL      YL0014 = ' '
      * Define null work field Create Date
     C                   Z-ADD     *ZERO         YN0003
      * Define null work field Create Time
     C                   Z-ADD     *ZERO         YN0004
      * Define null work field Create User
     C                   EVAL      YN0005 = ' '
      * Define null work field Create Program
     C                   EVAL      YN0006 = ' '
      * Define null work field Change Date
     C                   Z-ADD     *ZERO         YN0007
      * Define null work field Change Time
     C                   Z-ADD     *ZERO         YN0008
      * Define null work field Change User
     C                   EVAL      YN0009 = ' '
      * Define null work field Change Program
     C                   EVAL      YN0010 = ' '
      * Define local work field Accounting Company
     C                   Z-ADD     *ZERO         YL0015
      * Define local work field Item Code Txt
     C                   EVAL      YL0016 = ' '
      * Define local work field Validation Pass USR
     C                   EVAL      YL0017 = ' '
      * Define local work field Item Code
     C                   Z-ADD     *ZERO         YL0018
      * Define local work field System Date Nbr USR
     C                   Z-ADD     *ZERO         YL0019
      * Define local work field Transaction Date D8# USR
     C                   Z-ADD     *ZERO         YL0020
      * Define local work field Transaction Date Code
     C                   Z-ADD     *ZERO         YL0021
      * Define local work field Inventory Trans Type
     C                   EVAL      YL0022 = ' '
      * Define local work field Inv Trans. Type Desc USR
     C                   EVAL      YL0023 = ' '
      * Define local work field Production Date USR D8#
     C                   Z-ADD     *ZERO         YL0024
      * Define local work field Production Date
     C                   Z-ADD     *ZERO         YL0025
      * Define local work field Item Code Txt
     C                   EVAL      YL0026 = ' '
      * Define local work field Item Code
     C                   Z-ADD     *ZERO         YL0027
      * Define local work field Description
     C                   EVAL      YL0028 = ' '
      * Define local work field Reason Code
     C                   EVAL      YL0029 = ' '
      * Define local work field Unit Weight
     C                   Z-ADD     *ZERO         YL0030
      * Define local work field Quality Level
     C                   EVAL      YL0031 = ' '
      * Define local work field W1913 WEIGHT-NET
     C                   Z-ADD     *ZERO         YL0032
      * Define local work field Warehouse Code
     C                   EVAL      YL0033 = ' '
      * Define local work field Shipping Company Number
     C                   Z-ADD     *ZERO         YL0034
      * Define local work field Sold 100 Percent Frozen
     C                   EVAL      YL0035 = ' '
      * Define local work field EDI Surrogate Nbr Txt USR
     C                   EVAL      YL0036 = ' '
      * Define local work field Email Message USR
     C                   EVAL      YL0037 = ' '
      * Define local work field Email Address
     C                   EVAL      YL0038 = ' '
      *================================================================
     CSR   ZZEXIT        ENDSR
** @CN
00001 EDI 947 Error-Inv Adjustm
00002 Invalid Trade Partner
00003 Warehouse Code is blank.
00004 Company Number is blank.
00005 EDI Interchange WHSINV
00006 code is not active.
00007 Invalid Warehouse Code.
00008 Invalid Company/Warehouse
00009 combination.
00010 Invalid Company/Product
00011 Invalid Product Number.
00012 Invalid Adjustment Reason
00013 Invalid Reference Status
00014 Invalid Production Date.
00015 PUGDXFR
00016 Surrogate #
00017 EDI 947 Error -
00018 EDI947ERR
