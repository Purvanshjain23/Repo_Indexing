// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKXLPVR
// ?Date: 14.08.2025 Time: 02:53:16
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(WRK.CC_Company_Number);
PARAMETER('HPE');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


CASE;

// IF PAR.Oms Access Denied (Y/N) is Yes
IF PAR.Oms_Access_Denied_Y_N = 'Y';

RETURN;

ENDIF;

//?USER: Load screen

CASE;

// IF WRK.First Time Flag Usr EQ WRK.Blank USR
IF WRK.First_Time_Flag_Usr = WRK.Blank_USR;

// DTL.CC Company Number = WRK.CC Company Number
DTL.CC_Company_Number = WRK.CC_Company_Number;

// WRK.Display Print Prompt  Usr = CND.Prompt is to be displayed
WRK.Display_Print_Prompt_Usr = 'Y';

// WRK.First Time Flag Usr = CND.Yes
WRK.First_Time_Flag_Usr = 'Y';

ENDIF;

EXECUTE FUNCTION(Val Company Number    IF) TYPE(EXCINTFUN)                      AB1129077;
PARAMETER(DTL.CC_Company_Number);
PARAMETER(PAR.Oms_Name);
PARAMETER(WRK.Invalid_Y_N_USR);
{
 //?Execute internal function

 // Call program Val Company Number    XF.
 CALL PROGRAM(Val Company Number    XF) ('PDGZXFR');
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(WRK.Invalid_Y_N_USR);

 CASE;

 // IF WRK.Invalid Y/N USR is Yes
 IF WRK.Invalid_Y_N_USR = 'Y';

 // Send error message - 'Invalid Company Number'
 ERROR(PRK0299);
 MSGPARM(PAR.CC_Company_Number);

 ENDIF;

 // PAR.Invalid Y/N USR = WRK.Invalid Y/N USR
 PAR.Invalid_Y_N_USR = WRK.Invalid_Y_N_USR;

}


//?USER: Validate fields

CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

//?Select Cutout Matrix Code/Effective Date
CASE;

// IF PGM.*Cursor field <IS> DTL.Cutout Matrix Code USR
IF PGM.*Cursor_field = DTL.Cutout_Matrix_Code_USR;

// OR PGM.*Cursor field <IS> DTL.Effective Month/Day USR
OR PGM.*Cursor_field = DTL.Effective_Month_Day_USR;

// Call program Sel Cutout Matrix     SR.
CALL PROGRAM(Sel Cutout Matrix     SR) ('PDAZSRR');
PARAMETER(DTL.CC_Company_Number);
PARAMETER(DTL.Cutout_Matrix_Code_USR);
PARAMETER(DTL.Effective_Month_Day_USR);
PARAMETER(DTL.Description_30_USR);

ENDIF;

ENDIF;

CASE;

// IF DTL.Date From USR GT DTL.Date To   USR
IF DTL.Date_From_USR > DTL.Date_To_USR;

// Send error message - 'From date must be less than or equal to the to date.'
ERROR(PRK0472);

ENDIF;

//?Validate Cutout Matrix
CASE;

// IF DTL.Cutout Matrix Code USR EQ WRK.Blank USR
IF DTL.Cutout_Matrix_Code_USR = WRK.Blank_USR;

// OR DTL.Effective Month/Day USR EQ WRK.Zero USR
OR DTL.Effective_Month_Day_USR = WRK.Zero_USR;

// Send error message - 'Cutout Matrix and Effective Mo/Dar are required.'
ERROR(PRK0628);
MSGPARM(DTL.Cutout_Matrix_Code_USR);
MSGPARM(DTL.Effective_Month_Day_USR);

//?Validate Cutout Matrix
// IF *OTHERWISE
IF *OTHERWISE;

// Call program Rtv Yld Pct for Lv Wt XF.
CALL PROGRAM(Rtv Yld Pct for Lv Wt XF) ('PONYXFR');
PARAMETER(DTL.CC_Company_Number);
PARAMETER(DTL.Cutout_Matrix_Code_USR);
PARAMETER(DTL.Effective_Month_Day_USR);
PARAMETER(00301);
PARAMETER(WRK.Yield_SBD_USR);

CASE;

// IF WRK.Yield SBD USR is Zeros
IF WRK.Yield_SBD_USR = *ZERO;

// Send error message - 'Cutout Matrix is invalid.'
ERROR(PRK0627);
MSGPARM(DTL.Cutout_Matrix_Code_USR);

ENDIF;

ENDIF;

//?USER: User defined action

// Call program Pmt Print Options Size XF.
CALL PROGRAM(Pmt Print Options Size XF) ('PDV8PVR');
PARAMETER('Print Heavy Hog Report');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER('N');
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER('P/S');
PARAMETER(1);

CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// WRK.Company Number Alpha Usr = CVTVAR(DTL.CC Company Number)
WRK.Company_Number_Alpha_Usr = CVTVAR(DTL.CC_Company_Number);

// WRK.Date Alpha USR = CVTVAR(DTL.Date From USR)
WRK.Date_Alpha_USR = CVTVAR(DTL.Date_From_USR);

// WRK.Date Alpha Usr 2 = CVTVAR(DTL.Date To   USR)
WRK.Date_Alpha_Usr_2 = CVTVAR(DTL.Date_To_USR);

// WRK.Effective Mo/Day alpha = CVTVAR(DTL.Effective Month/Day USR)
WRK.Effective_Mo_Day_alpha = CVTVAR(DTL.Effective_Month_Day_USR);

//?Calc corresponding carc weight for 301 lbs live wt from yield pct
// WRK.Min Carcass Weight    USR =       *
WRK.Min_Carcass_Weight_USR = 301 * ( WRK.Yield_SBD_USR / 100 );

// WRK.Weight Type Desc USR = WRK.Min Carcass Weight    USR
WRK.Weight_Type_Desc_USR = WRK.Min_Carcass_Weight_USR;

// Call program Zzz Heavy Hog Rpt     CL.
SBMJOB;
CALL PROGRAM(Zzz Heavy Hog Rpt     CL) ('PKXOUPC');
PARAMETER(WRK.Date_Alpha_USR);
PARAMETER(WRK.Date_Alpha_Usr_2);
PARAMETER(WRK.Company_Number_Alpha_Usr);
PARAMETER(DTL.Cutout_Matrix_Code_USR);
PARAMETER(WRK.Effective_Mo_Day_alpha);
PARAMETER(WRK.Weight_Type_Desc_USR);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER(PAR.Oms_System_Value_Alpha);
SBMJOBOVR JOB(HEAVY_HOG);
SBMJOBEND;

ENDIF;

