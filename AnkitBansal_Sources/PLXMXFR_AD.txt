// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PLXMXFR
// ?Date: 14.08.2025 Time: 02:55:43
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Modifications and Comments
DO;

//?E4154 JJH 07/21/15 - Changed the EXCINTFUN to an EXCEXTFUN
//?H16853 ISE 11/05/2020 - Recompiled due to change in Buy Order Number
ENDDO;

//?Retreive/Change Pen Nbr on all Tattoo Details with the From Pen Nbr
//?H16749 - Change to Tattoo Dtl use system date
//?the following rtv will perform this
EXECUTE FUNCTION(Rtv/Chg Ttt Dtl Pen   RT) TYPE(RTVOBJ) FILE(PKA2CPP)           AB1116846;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.Pen_Number);
PARAMETER(PAR.Pen_Usr);
{
 //?USER: Process Data record

 //?Change Pen nbr
 //?H16749 SLM Replace Change Date with System date
 EXECUTE FUNCTION(Chg Tattoo Detail   SydCH) TYPE(CHGOBJ) FILE(PKA2CPP)          AB1353953;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(DB1.TD_Sequence_Number);
 PARAMETER(DB1.TD_Live_Wgt);
 PARAMETER(DB1.TD_Pen_Head);
 PARAMETER(DB1.TD_Yard_Dead);
 PARAMETER(DB1.TD_Held_Over);
 PARAMETER(DB1.TD_Held_Over_Status);
 PARAMETER(DB1.TD_Drive_Time);
 PARAMETER(DB1.TD_Drive_Hour);
 PARAMETER(DB1.TD_Drive_Card_Number);
 PARAMETER(DB1.TD_Avg_Live_Wgt);
 PARAMETER(DB1.TD_Gen_Bal_To_Kill);
 PARAMETER(DB1.TD_Recs_Created_for_HO);
 PARAMETER(DB1.TD_User_Status_2);
 PARAMETER(DB1.TD_User_Status_3);
 PARAMETER(DB1.TD_User_Date_1);
 PARAMETER(DB1.TD_User_Date_2);
 PARAMETER(DB1.TD_Drive_Date);
 PARAMETER(DB1.Pen_Company_Number);
 PARAMETER(PAR.Pen_Usr);
 PARAMETER(DB1.TDP_Process_Code);
 PARAMETER(DB1.Held_Over_Pen_Company_Num);
 PARAMETER(DB1.Held_Over_Pen_Number);
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp-SysDtIF) TYPE(EXCINTFUN)                      AB1237006;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // Call program Rtv System Date & Tim UP.
   CALL PROGRAM(Rtv System Date & Tim UP) ('PKWDUPC');
   PARAMETER(PAR.RS_Date_Changed);
   PARAMETER(PAR.RS_Time_Changed);

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

}


//?Recount From_Pen Head Count and Chg the Pen
EXECUTE FUNCTION(Rtv Dtl hd/Chg Pen    RT) TYPE(RTVOBJ) FILE(PKA2CPP)           AB1110385;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.Pen_Number);
{
 //?USER: Initialize routine

 EXECUTE FUNCTION(Set Pen Totals to Zeros) TYPE(RTVOBJ) FILE(PKA3REP)            AB1110376;
 PARAMETER(PAR.BOH_Company_Number);
 PARAMETER(PAR.Pen_Number);
 PARAMETER(*ZERO);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Chg Pen               CH) TYPE(CHGOBJ) FILE(PKA3REP)           AB1102758;
  PARAMETER(DB1.Pen_Company_Number);
  PARAMETER(DB1.Pen_Number);
  PARAMETER(WRK.Blank_USR);
  PARAMETER(DB1.Pen_Maximun_Capacity);
  PARAMETER(*ZERO);
  PARAMETER(DB1.Pen_Current_Drive_Card_No);
  PARAMETER(DB1.Pen_Sts);
  PARAMETER(DB1.Pen_Drive_Sequence);
  PARAMETER(DB1.Pen_Type);
  PARAMETER(DB1.Pen_Adjustment);
  PARAMETER(WRK.Blank_USR);
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // PAR.RS Date Changed = JOB.*Job date
    PAR.RS_Date_Changed = JOB.*Job_date;

    // PAR.RS Time Changed = JOB.*Job time
    PAR.RS_Time_Changed = JOB.*Job_time;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

  }

 }

 //?USER: Processing if Data record not found

 // WRK.Pen Description = CON.*BLANK
 WRK.Pen_Description = *BLANK;

 // WRK.GN Genetic Code = CON.*BLANK
 WRK.GN_Genetic_Code = *BLANK;

 EXECUTE FUNCTION(Chg Pen Genetics      CH) TYPE(CHGOBJ) FILE(PKA3REP)           AB1119678;
 PARAMETER(PAR.BOH_Company_Number);
 PARAMETER(PAR.Pen_Number);
 PARAMETER(WRK.Pen_Description);
 PARAMETER(WRK.GN_Genetic_Code);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

 //?USER: Process Data record

 EXECUTE FUNCTION(Rtv/Chg Pen Totals    RT) TYPE(RTVOBJ) FILE(PKA3REP)           AB1110372;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.Pen_Number);
 PARAMETER(DB1.TD_Pen_Head);
 PARAMETER(DB1.TD_Yard_Dead);
 {
  //?USER: Process Data record

  // WRK.Pen Current Head = PAR.TD Pen Head + DB1.Pen Current Head
  WRK.Pen_Current_Head = PAR.TD_Pen_Head + DB1.Pen_Current_Head;

  // WRK.Pen Current Head = WRK.Pen Current Head - PAR.TD Yard Dead
  WRK.Pen_Current_Head = WRK.Pen_Current_Head - PAR.TD_Yard_Dead;

  EXECUTE FUNCTION(Chg Pen               CH) TYPE(CHGOBJ) FILE(PKA3REP)           AB1102758;
  PARAMETER(DB1.Pen_Company_Number);
  PARAMETER(DB1.Pen_Number);
  PARAMETER(DB1.Pen_Description);
  PARAMETER(DB1.Pen_Maximun_Capacity);
  PARAMETER(WRK.Pen_Current_Head);
  PARAMETER(DB1.Pen_Current_Drive_Card_No);
  PARAMETER(DB1.Pen_Sts);
  PARAMETER(DB1.Pen_Drive_Sequence);
  PARAMETER(DB1.Pen_Type);
  PARAMETER(DB1.Pen_Adjustment);
  PARAMETER(DB1.GN_Genetic_Code);
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // PAR.RS Date Changed = JOB.*Job date
    PAR.RS_Date_Changed = JOB.*Job_date;

    // PAR.RS Time Changed = JOB.*Job time
    PAR.RS_Time_Changed = JOB.*Job_time;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

  }

 }

 //?USER: Exit processing

 // WRK.Pen Description = CON.*BLANK
 WRK.Pen_Description = *BLANK;

 // WRK.GN Genetic Code = CON.*BLANK
 WRK.GN_Genetic_Code = *BLANK;

 EXECUTE FUNCTION(Rtv Pen GENETICS      RT) TYPE(RTVOBJ) FILE(PKA2CPP)           AB1107816;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.Pen_Number);
 PARAMETER(WRK.Pen_Description);
 PARAMETER(WRK.GN_Genetic_Code);
 {
  //?USER: Processing if Data record not found

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.Pen_Description = *BLANK;

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.GN_Genetic_Code = *BLANK;

  //?USER: Process Data record

  CASE;

  // IF DB1.TDP Process Code is Drive Card Printed
  IF DB1.TDP_Process_Code = 'D';

  // OR DB1.TDP Process Code is Open
  OR DB1.TDP_Process_Code = 'O';

  EXECUTE FUNCTION(Rtv Tattoo GENETICS) TYPE(RTVOBJ) FILE(PKA1CPP)                AB1107783;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(WRK.Genetic_Code_USR);
  PARAMETER(WRK.Pen_Desc_USR);
  {
   //?USER: Processing if Data record not found

   // *MO.VE             1183529*Bu = ilt. in functions
   PAR.GN_Genetic_Code = *BLANK;

   // *MO.VE             1183529*Bu = ilt. in functions
   PAR.Pen_Description = *BLANK;

   //?USER: Process Data record

   // PAR.GN Genetic Code = DB1.GN Genetic Code
   PAR.GN_Genetic_Code = DB1.GN_Genetic_Code;

   EXECUTE FUNCTION(Rtv Genetic Record    RT) TYPE(RTVOBJ) FILE(PKAIREP)           AB1107738;
   PARAMETER(DB1.GN_Genetic_Code);
   PARAMETER(PAR.Pen_Description);
   {
    //?USER: Processing if Data record not found

    // *MO.VE             1183529*Bu = ilt. in functions
    PAR.GN_Description = *BLANK;

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

  }

  CASE;

  // IF PAR.GN Genetic Code is BLANKS
  IF PAR.GN_Genetic_Code = *BLANK;

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.GN_Genetic_Code = WRK.Genetic_Code_USR;

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.Pen_Description = WRK.Pen_Desc_USR;

  // IF *OTHERWISE
  IF *OTHERWISE;

  CASE;

  // IF WRK.Genetic Code USR NE PAR.GN Genetic Code
  IF WRK.Genetic_Code_USR <> PAR.GN_Genetic_Code;

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.Pen_Description = 'MIXED';

  ENDIF;

  ENDIF;

  ENDIF;

 }

 EXECUTE FUNCTION(Chg Pen Genetics      CH) TYPE(CHGOBJ) FILE(PKA3REP)           AB1119678;
 PARAMETER(PAR.BOH_Company_Number);
 PARAMETER(PAR.Pen_Number);
 PARAMETER(WRK.Pen_Description);
 PARAMETER(WRK.GN_Genetic_Code);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

}


//?Recount To_Pen Head Count and Chg the Pen
EXECUTE FUNCTION(Rtv Dtl hd/Chg Pen    RT) TYPE(RTVOBJ) FILE(PKA2CPP)           AB1110385;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.Pen_Usr);
{
 //?USER: Initialize routine

 EXECUTE FUNCTION(Set Pen Totals to Zeros) TYPE(RTVOBJ) FILE(PKA3REP)            AB1110376;
 PARAMETER(PAR.BOH_Company_Number);
 PARAMETER(PAR.Pen_Number);
 PARAMETER(*ZERO);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Chg Pen               CH) TYPE(CHGOBJ) FILE(PKA3REP)           AB1102758;
  PARAMETER(DB1.Pen_Company_Number);
  PARAMETER(DB1.Pen_Number);
  PARAMETER(WRK.Blank_USR);
  PARAMETER(DB1.Pen_Maximun_Capacity);
  PARAMETER(*ZERO);
  PARAMETER(DB1.Pen_Current_Drive_Card_No);
  PARAMETER(DB1.Pen_Sts);
  PARAMETER(DB1.Pen_Drive_Sequence);
  PARAMETER(DB1.Pen_Type);
  PARAMETER(DB1.Pen_Adjustment);
  PARAMETER(WRK.Blank_USR);
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // PAR.RS Date Changed = JOB.*Job date
    PAR.RS_Date_Changed = JOB.*Job_date;

    // PAR.RS Time Changed = JOB.*Job time
    PAR.RS_Time_Changed = JOB.*Job_time;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

  }

 }

 //?USER: Processing if Data record not found

 // WRK.Pen Description = CON.*BLANK
 WRK.Pen_Description = *BLANK;

 // WRK.GN Genetic Code = CON.*BLANK
 WRK.GN_Genetic_Code = *BLANK;

 EXECUTE FUNCTION(Chg Pen Genetics      CH) TYPE(CHGOBJ) FILE(PKA3REP)           AB1119678;
 PARAMETER(PAR.BOH_Company_Number);
 PARAMETER(PAR.Pen_Number);
 PARAMETER(WRK.Pen_Description);
 PARAMETER(WRK.GN_Genetic_Code);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

 //?USER: Process Data record

 EXECUTE FUNCTION(Rtv/Chg Pen Totals    RT) TYPE(RTVOBJ) FILE(PKA3REP)           AB1110372;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.Pen_Number);
 PARAMETER(DB1.TD_Pen_Head);
 PARAMETER(DB1.TD_Yard_Dead);
 {
  //?USER: Process Data record

  // WRK.Pen Current Head = PAR.TD Pen Head + DB1.Pen Current Head
  WRK.Pen_Current_Head = PAR.TD_Pen_Head + DB1.Pen_Current_Head;

  // WRK.Pen Current Head = WRK.Pen Current Head - PAR.TD Yard Dead
  WRK.Pen_Current_Head = WRK.Pen_Current_Head - PAR.TD_Yard_Dead;

  EXECUTE FUNCTION(Chg Pen               CH) TYPE(CHGOBJ) FILE(PKA3REP)           AB1102758;
  PARAMETER(DB1.Pen_Company_Number);
  PARAMETER(DB1.Pen_Number);
  PARAMETER(DB1.Pen_Description);
  PARAMETER(DB1.Pen_Maximun_Capacity);
  PARAMETER(WRK.Pen_Current_Head);
  PARAMETER(DB1.Pen_Current_Drive_Card_No);
  PARAMETER(DB1.Pen_Sts);
  PARAMETER(DB1.Pen_Drive_Sequence);
  PARAMETER(DB1.Pen_Type);
  PARAMETER(DB1.Pen_Adjustment);
  PARAMETER(DB1.GN_Genetic_Code);
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // PAR.RS Date Changed = JOB.*Job date
    PAR.RS_Date_Changed = JOB.*Job_date;

    // PAR.RS Time Changed = JOB.*Job time
    PAR.RS_Time_Changed = JOB.*Job_time;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

  }

 }

 //?USER: Exit processing

 // WRK.Pen Description = CON.*BLANK
 WRK.Pen_Description = *BLANK;

 // WRK.GN Genetic Code = CON.*BLANK
 WRK.GN_Genetic_Code = *BLANK;

 EXECUTE FUNCTION(Rtv Pen GENETICS      RT) TYPE(RTVOBJ) FILE(PKA2CPP)           AB1107816;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.Pen_Number);
 PARAMETER(WRK.Pen_Description);
 PARAMETER(WRK.GN_Genetic_Code);
 {
  //?USER: Processing if Data record not found

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.Pen_Description = *BLANK;

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.GN_Genetic_Code = *BLANK;

  //?USER: Process Data record

  CASE;

  // IF DB1.TDP Process Code is Drive Card Printed
  IF DB1.TDP_Process_Code = 'D';

  // OR DB1.TDP Process Code is Open
  OR DB1.TDP_Process_Code = 'O';

  EXECUTE FUNCTION(Rtv Tattoo GENETICS) TYPE(RTVOBJ) FILE(PKA1CPP)                AB1107783;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(WRK.Genetic_Code_USR);
  PARAMETER(WRK.Pen_Desc_USR);
  {
   //?USER: Processing if Data record not found

   // *MO.VE             1183529*Bu = ilt. in functions
   PAR.GN_Genetic_Code = *BLANK;

   // *MO.VE             1183529*Bu = ilt. in functions
   PAR.Pen_Description = *BLANK;

   //?USER: Process Data record

   // PAR.GN Genetic Code = DB1.GN Genetic Code
   PAR.GN_Genetic_Code = DB1.GN_Genetic_Code;

   EXECUTE FUNCTION(Rtv Genetic Record    RT) TYPE(RTVOBJ) FILE(PKAIREP)           AB1107738;
   PARAMETER(DB1.GN_Genetic_Code);
   PARAMETER(PAR.Pen_Description);
   {
    //?USER: Processing if Data record not found

    // *MO.VE             1183529*Bu = ilt. in functions
    PAR.GN_Description = *BLANK;

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

  }

  CASE;

  // IF PAR.GN Genetic Code is BLANKS
  IF PAR.GN_Genetic_Code = *BLANK;

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.GN_Genetic_Code = WRK.Genetic_Code_USR;

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.Pen_Description = WRK.Pen_Desc_USR;

  // IF *OTHERWISE
  IF *OTHERWISE;

  CASE;

  // IF WRK.Genetic Code USR NE PAR.GN Genetic Code
  IF WRK.Genetic_Code_USR <> PAR.GN_Genetic_Code;

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.Pen_Description = 'MIXED';

  ENDIF;

  ENDIF;

  ENDIF;

 }

 EXECUTE FUNCTION(Chg Pen Genetics      CH) TYPE(CHGOBJ) FILE(PKA3REP)           AB1119678;
 PARAMETER(PAR.BOH_Company_Number);
 PARAMETER(PAR.Pen_Number);
 PARAMETER(WRK.Pen_Description);
 PARAMETER(WRK.GN_Genetic_Code);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

}


