// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PPF0PFR
// ?Date: 14.08.2025 Time: 12:06:30
// ?------------------------------------------------------------------------------------------------

//?USER: Record selection processing

EXECUTE FUNCTION(Cmp Company Item       RT) TYPE(RTVOBJ) FILE(CABZREP)          AC1702413;
PARAMETER(DB1.Item_Code);
PARAMETER(DB1.Description_Line_One);
PARAMETER(DB1.Description_Line_Two);
PARAMETER(DB1.Item_Label_Line_1);
PARAMETER(DB1.Item_Label_Line_2);
PARAMETER(DB1.Item_Label_Line_3);
PARAMETER(DB1.Item_Label_Line_4);
PARAMETER(DB1.UOM_Primary_Dft);
PARAMETER(DB1.Conversion_Factor_1);
PARAMETER(DB1.Operation_Factor_1);
PARAMETER(DB1.UOM_Second_Dft);
PARAMETER(DB1.Conversion_Factor_2);
PARAMETER(DB1.Operation_Factor_2);
PARAMETER(DB1.UOM_Third_Dft);
PARAMETER(DB1.UOM_Pricing_Dft);
PARAMETER(DB1.Unit_Weight);
PARAMETER(DB1.Quality_Level);
PARAMETER(DB1.Item_Level);
PARAMETER(DB1.Production_Date_Control);
PARAMETER(DB1.Catch_Weight_Status);
PARAMETER(DB1.Minimum_Weight_Per_Case);
PARAMETER(DB1.Maximum_Weight_Per_Case);
PARAMETER(DB1.Number_Cases_On_A_Pallet);
PARAMETER(DB1.Vendor_item_Default_Dft);
PARAMETER(DB1.Item_Structure_Class_Code);
PARAMETER(DB1.Item_Structure_Group_Code);
PARAMETER(DB1.Item_Structure_Type_Code);
PARAMETER(DB1.Default_Commod_Mark_basis);
PARAMETER(DB1.Transportation_Temp);
PARAMETER(DB1.Item_Type_Code);
PARAMETER(DB1.Package_Type_Code);
PARAMETER(DB1.Fresh_Chilling_Time);
PARAMETER(DB1.Base_Conv_Loss_Item);
PARAMETER(DB1.Variety_Rendered_Cut);
PARAMETER(DB1.Frozen_Make_to_Order_Sts);
PARAMETER(DB1.Credit_Item_Status);
PARAMETER(DB1.Std_Weight_Head_Var_Ren);
PARAMETER(DB1.Pieces_Per_Head);
PARAMETER(DB1.Commodity_Price_Group);
PARAMETER(DB1.Pallet_Tare_Weight);
PARAMETER(DB1.Misc_Tare_Weight);
PARAMETER(DB1.Production_Lead_Days);
PARAMETER(DB1.Packaging_Code);
PARAMETER(DB1.Item_Market_Code);
PARAMETER(DB1.Partial_Item_Code);
PARAMETER(DB1.WIP_Item_Code);
PARAMETER(DB1.WIP_Reject_Code);
PARAMETER(DB1.Seconds_Item);
PARAMETER(DB1.Print_on_Realization_Rpt);
PARAMETER(DB1.Unit_Weight_Change_Sts);
PARAMETER(DB1.Maximum_Audit_Value);
PARAMETER(DB1.Minimum_Audit_Value);
PARAMETER(DB1.Market_Overage);
PARAMETER(DB1.Standard_Overage_Underage);
PARAMETER(DB1.Item_Pricing_Operation);
PARAMETER(DB1.Item_Pricing_Constant);
PARAMETER(DB1.Default_Warehouse);
PARAMETER(DB1.Company_Number);
PARAMETER(DB1.Price_Method_Default);
PARAMETER(DB1.Department_Code);
PARAMETER(DB1.Group_for_Packaging);
PARAMETER(DB1.Item_Category_Number_1);
PARAMETER(DB1.Made_to_Order_Code);
PARAMETER(DB1.Item_Category_Number_2);
PARAMETER(DB1.Transportation_Equip_Type);
PARAMETER(DB1.Item_Category_Number_3);
PARAMETER(DB1.Item_Category_Code_3);
PARAMETER(DB1.Item_Category_Number_4);
PARAMETER(DB1.GL_Sub_Code);
PARAMETER(DB1.Item_Category_Number_5);
PARAMETER(DB1.Item_Structure_Sub_Class);
PARAMETER(DB1.Item_Category_Number_6);
PARAMETER(DB1.Item_Primal_Sched_Report);
PARAMETER(DB1.Item_Category_Number_7);
PARAMETER(DB1.Item_Exc_Man_Prc_Excp);
PARAMETER(DB1.Item_Category_Number_8);
PARAMETER(DB1.Item_Prod_Sched_Send_PFS);
PARAMETER(DB1.Item_Category_Number_9);
PARAMETER(DB1.Item_Category_Code_9);
PARAMETER(DB1.Item_Category_Number_10);
PARAMETER(DB1.Item_Category_Code_10);
PARAMETER(DB1.PM_Line_Number);
PARAMETER(DB1.Primal_Group_Code);
PARAMETER(DB1.Piece_Count_Item);
PARAMETER(DB1.Pieces_Per_Bag);
PARAMETER(DB1.Bags_Per_Unit);
PARAMETER(DB1.Export_Domestic);
PARAMETER(DB1.Print_On_Schedule);
PARAMETER(DB1.Fresh_Inv_Allocation_Seq);
PARAMETER(DB1.Fresh_Sched_As_Ordered);
PARAMETER(DB1.Frozen_Inv_Allocation_Seq);
PARAMETER(DB1.Item_Target_Price);
PARAMETER(DB1.Minimum_Piece_Weight);
PARAMETER(DB1.Maximum_Piece_Weight);
PARAMETER(DB1.Seaboard_Equivalent_Item);
PARAMETER(DB1.Production_Qty_Per_Shift);
PARAMETER(DB1.Scheduling_Position_Grade);
PARAMETER(DB1.Sold_100_Percent_Frozen);
PARAMETER(DB1.Maximum_Shifts);
PARAMETER(DB1.Value_Added_Sts);
PARAMETER(DB1.Record_Status);
PARAMETER(LCL.Company_Number_Alpha_Usr1);
PARAMETER(LCL.Change_Flag_USR_1);
PARAMETER(LCL.Number_50_USR1);
PARAMETER(LCL.Company_Number_Alpha_Usr2);
PARAMETER(LCL.Change_Flag_USR_2);
PARAMETER(LCL.Number_50_USR2);
PARAMETER(LCL.Company_Number_Alpha_Usr3);
PARAMETER(LCL.Change_Flag_USR_3);
PARAMETER(LCL.Number_50_USR3);
{
 //?USER: Initialize routine

 // WRK.Count Records        USR = CON.*ZERO
 WRK.Count_Records_USR = *ZERO;

 // PAR.Company Number Alpha Usr1 = CON.*BLANK
 PAR.Company_Number_Alpha_Usr1 = *BLANK;

 // PAR.Change Flag USR 1 = CND.Blank
 PAR.Change_Flag_USR_1 = *BLANK;

 // PAR.Number 5,0           USR1 = CON.*ZERO
 PAR.Number_50_USR1 = *ZERO;

 // PAR.Company Number Alpha Usr2 = CON.*BLANK
 PAR.Company_Number_Alpha_Usr2 = *BLANK;

 // PAR.Change Flag USR 2 = CND.Blank
 PAR.Change_Flag_USR_2 = *BLANK;

 // PAR.Number 5,0           USR2 = CON.*ZERO
 PAR.Number_50_USR2 = *ZERO;

 // PAR.Company Number Alpha Usr3 = CON.*BLANK
 PAR.Company_Number_Alpha_Usr3 = *BLANK;

 // PAR.Change Flag USR 3 = CND.Blank
 PAR.Change_Flag_USR_3 = *BLANK;

 // PAR.Number 5,0           USR3 = CON.*ZERO
 PAR.Number_50_USR3 = *ZERO;

 //?USER: Process Data record

 //?**DLY029R 05/25/07 Removed hard coded companies
 EXECUTE FUNCTION(Rtv Plant Co Status   RT) TYPE(RTVOBJ) FILE(PDJYREP)           AC1761084;
 PARAMETER(DB1.Company_Number);
 PARAMETER(LCL.Plant_Company_Sts);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF LCL.Plant Company Sts is Plant Company
 IF LCL.Plant_Company_Sts = 'P';

 EXECUTE FUNCTION(Cmp Item/Com Item      IF) TYPE(EXCINTFUN)                     AC1702412;
 PARAMETER(PAR.Item_Code);
 PARAMETER(PAR.Description_Line_One);
 PARAMETER(PAR.Description_Line_Two);
 PARAMETER(PAR.Item_Label_Line_1);
 PARAMETER(PAR.Item_Label_Line_2);
 PARAMETER(PAR.Item_Label_Line_3);
 PARAMETER(PAR.Item_Label_Line_4);
 PARAMETER(PAR.UOM_Primary_Dft);
 PARAMETER(PAR.Conversion_Factor_1);
 PARAMETER(PAR.Operation_Factor_1);
 PARAMETER(PAR.UOM_Second_Dft);
 PARAMETER(PAR.Conversion_Factor_2);
 PARAMETER(PAR.Operation_Factor_2);
 PARAMETER(PAR.UOM_Third_Dft);
 PARAMETER(PAR.UOM_Pricing_Dft);
 PARAMETER(PAR.Unit_Weight);
 PARAMETER(PAR.Quality_Level);
 PARAMETER(PAR.Item_Level);
 PARAMETER(PAR.Production_Date_Control);
 PARAMETER(PAR.Catch_Weight_Status);
 PARAMETER(PAR.Minimum_Weight_Per_Case);
 PARAMETER(PAR.Maximum_Weight_Per_Case);
 PARAMETER(PAR.Number_Cases_On_A_Pallet);
 PARAMETER(PAR.Vendor_item_Default_Dft);
 PARAMETER(PAR.Item_Structure_Class_Code);
 PARAMETER(PAR.Item_Structure_Group_Code);
 PARAMETER(PAR.Item_Structure_Type_Code);
 PARAMETER(PAR.Default_Commod_Mark_basis);
 PARAMETER(PAR.Transportation_Temp);
 PARAMETER(PAR.Item_Type_Code);
 PARAMETER(PAR.Package_Type_Code);
 PARAMETER(PAR.Fresh_Chilling_Time);
 PARAMETER(PAR.Base_Conv_Loss_Item);
 PARAMETER(PAR.Variety_Rendered_Cut);
 PARAMETER(PAR.Frozen_Make_to_Order_Sts);
 PARAMETER(PAR.Credit_Item_Status);
 PARAMETER(PAR.Std_Weight_Head_Var_Ren);
 PARAMETER(PAR.Pieces_Per_Head);
 PARAMETER(PAR.Commodity_Price_Group);
 PARAMETER(PAR.Pallet_Tare_Weight);
 PARAMETER(PAR.Misc_Tare_Weight);
 PARAMETER(PAR.Production_Lead_Days);
 PARAMETER(PAR.Packaging_Code);
 PARAMETER(PAR.Item_Market_Code);
 PARAMETER(PAR.Partial_Item_Code);
 PARAMETER(PAR.WIP_Item_Code);
 PARAMETER(PAR.WIP_Reject_Code);
 PARAMETER(PAR.Seconds_Item);
 PARAMETER(PAR.Print_on_Realization_Rpt);
 PARAMETER(PAR.Unit_Weight_Change_Sts);
 PARAMETER(PAR.Maximum_Audit_Value);
 PARAMETER(PAR.Minimum_Audit_Value);
 PARAMETER(PAR.Market_Overage);
 PARAMETER(PAR.Standard_Overage_Underage);
 PARAMETER(PAR.Item_Pricing_Operation);
 PARAMETER(PAR.Item_Pricing_Constant);
 PARAMETER(PAR.Default_Warehouse);
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Price_Method_Default);
 PARAMETER(PAR.Department_Code);
 PARAMETER(PAR.Group_for_Packaging);
 PARAMETER(PAR.Item_Category_Number_1);
 PARAMETER(PAR.Made_to_Order_Code);
 PARAMETER(PAR.Item_Category_Number_2);
 PARAMETER(PAR.Transportation_Equip_Type);
 PARAMETER(PAR.Item_Category_Number_3);
 PARAMETER(PAR.Item_Category_Code_3);
 PARAMETER(PAR.Item_Category_Number_4);
 PARAMETER(PAR.GL_Sub_Code);
 PARAMETER(PAR.Item_Category_Number_5);
 PARAMETER(PAR.Item_Structure_Sub_Class);
 PARAMETER(PAR.Item_Category_Number_6);
 PARAMETER(PAR.Item_Primal_Sched_Report);
 PARAMETER(PAR.Item_Category_Number_7);
 PARAMETER(PAR.Item_Exc_Man_Prc_Excp);
 PARAMETER(PAR.Item_Category_Number_8);
 PARAMETER(PAR.Item_Prod_Sched_Send_PFS);
 PARAMETER(PAR.Item_Category_Number_9);
 PARAMETER(PAR.Item_Category_Code_9);
 PARAMETER(PAR.Item_Category_Number_10);
 PARAMETER(PAR.Item_Category_Code_10);
 PARAMETER(PAR.PM_Line_Number);
 PARAMETER(PAR.Primal_Group_Code);
 PARAMETER(PAR.Piece_Count_Item);
 PARAMETER(PAR.Pieces_Per_Bag);
 PARAMETER(PAR.Bags_Per_Unit);
 PARAMETER(PAR.Export_Domestic);
 PARAMETER(PAR.Print_On_Schedule);
 PARAMETER(PAR.Fresh_Inv_Allocation_Seq);
 PARAMETER(PAR.Fresh_Sched_As_Ordered);
 PARAMETER(PAR.Frozen_Inv_Allocation_Seq);
 PARAMETER(PAR.Item_Target_Price);
 PARAMETER(PAR.Minimum_Piece_Weight);
 PARAMETER(PAR.Maximum_Piece_Weight);
 PARAMETER(PAR.Seaboard_Equivalent_Item);
 PARAMETER(PAR.Production_Qty_Per_Shift);
 PARAMETER(PAR.Scheduling_Position_Grade);
 PARAMETER(PAR.Sold_100_Percent_Frozen);
 PARAMETER(PAR.Maximum_Shifts);
 PARAMETER(PAR.Value_Added_Sts);
 PARAMETER(PAR.Record_Status);
 PARAMETER(DB1.Description_Line_One);
 PARAMETER(DB1.Description_Line_Two);
 PARAMETER(DB1.Item_Label_Line_1);
 PARAMETER(DB1.Item_Label_Line_2);
 PARAMETER(DB1.Item_Label_Line_3);
 PARAMETER(DB1.Item_Label_Line_4);
 PARAMETER(DB1.UOM_Primary);
 PARAMETER(DB1.Conversion_Factor_1);
 PARAMETER(DB1.Operation_Factor_1);
 PARAMETER(DB1.UOM_Second);
 PARAMETER(DB1.Conversion_Factor_2);
 PARAMETER(DB1.Operation_Factor_2);
 PARAMETER(DB1.UOM_Third);
 PARAMETER(DB1.UOM_Pricing);
 PARAMETER(DB1.Unit_Weight);
 PARAMETER(DB1.Quality_Level);
 PARAMETER(DB1.Item_Level);
 PARAMETER(DB1.Production_Date_Control);
 PARAMETER(DB1.Catch_Weight_Status);
 PARAMETER(DB1.Minimum_Weight_Per_Case);
 PARAMETER(DB1.Maximum_Weight_Per_Case);
 PARAMETER(DB1.Number_Cases_On_A_Pallet);
 PARAMETER(DB1.Vendor_Item_Default);
 PARAMETER(DB1.Item_Structure_Class_Code);
 PARAMETER(DB1.Item_Structure_Group_Code);
 PARAMETER(DB1.Item_Structure_Type_Code);
 PARAMETER(DB1.Default_Commod_Mark_basis);
 PARAMETER(DB1.Transportation_Temp);
 PARAMETER(DB1.Item_Type_Code);
 PARAMETER(DB1.Package_Type_Code);
 PARAMETER(DB1.Maximum_Audit_Value);
 PARAMETER(DB1.Minimum_Audit_Value);
 PARAMETER(DB1.Market_Overage);
 PARAMETER(DB1.Standard_Overage_Underage);
 PARAMETER(DB1.Commodity_Price_Group);
 PARAMETER(DB1.Item_Pricing_Operation);
 PARAMETER(DB1.Item_Pricing_Constant);
 PARAMETER(DB1.Default_Warehouse);
 PARAMETER(DB1.Price_Method_Default);
 PARAMETER(DB1.Fresh_Chilling_Time);
 PARAMETER(DB1.Base_Conv_Loss_Item);
 PARAMETER(DB1.Variety_Rendered_Cut);
 PARAMETER(DB1.Frozen_Make_to_Order_Sts);
 PARAMETER(DB1.Credit_Item_Status);
 PARAMETER(DB1.Std_Weight_Head_Var_Ren);
 PARAMETER(DB1.Pieces_Per_Head);
 PARAMETER(DB1.Department_Code);
 PARAMETER(DB1.Group_for_Packaging);
 PARAMETER(DB1.Item_Category_Number_1);
 PARAMETER(DB1.Made_to_Order_Code);
 PARAMETER(DB1.Item_Category_Number_2);
 PARAMETER(DB1.Transportation_Equip_Type);
 PARAMETER(DB1.Item_Category_Number_3);
 PARAMETER(DB1.Item_Category_Code_3);
 PARAMETER(DB1.Item_Category_Number_4);
 PARAMETER(DB1.GL_Sub_Code);
 PARAMETER(DB1.Item_Category_Number_5);
 PARAMETER(DB1.Item_Structure_Sub_Class);
 PARAMETER(DB1.Item_Category_Number_6);
 PARAMETER(DB1.Item_Primal_Sched_Report);
 PARAMETER(DB1.Item_Category_Number_7);
 PARAMETER(DB1.Item_Exc_Man_Prc_Excp);
 PARAMETER(DB1.Item_Category_Number_8);
 PARAMETER(DB1.Item_Prod_Sched_Send_PFS);
 PARAMETER(DB1.Item_Category_Number_9);
 PARAMETER(DB1.Item_Category_Code_9);
 PARAMETER(DB1.Item_Category_Number_10);
 PARAMETER(DB1.Item_Category_Code_10);
 PARAMETER(DB1.Pallet_Tare_Weight);
 PARAMETER(DB1.Misc_Tare_Weight);
 PARAMETER(DB1.Production_Lead_Days);
 PARAMETER(DB1.Packaging_Code);
 PARAMETER(DB1.Item_Market_Code);
 PARAMETER(DB1.Partial_Item_Code);
 PARAMETER(DB1.WIP_Item_Code);
 PARAMETER(DB1.WIP_Reject_Code);
 PARAMETER(DB1.PM_Line_Number);
 PARAMETER(DB1.Seconds_Item);
 PARAMETER(DB1.Print_on_Realization_Rpt);
 PARAMETER(DB1.Unit_Weight_Change_Sts);
 PARAMETER(DB1.Piece_Count_Item);
 PARAMETER(DB1.Pieces_Per_Bag);
 PARAMETER(DB1.Bags_Per_Unit);
 PARAMETER(DB1.Export_Domestic);
 PARAMETER(DB1.Print_On_Schedule);
 PARAMETER(DB1.Fresh_Inv_Allocation_Seq);
 PARAMETER(DB1.Fresh_Sched_As_Ordered);
 PARAMETER(DB1.Frozen_Inv_Allocation_Seq);
 PARAMETER(DB1.Primal_Group_Code);
 PARAMETER(DB1.Item_Target_Price);
 PARAMETER(DB1.Minimum_Piece_Weight);
 PARAMETER(DB1.Maximum_Piece_Weight);
 PARAMETER(DB1.Seaboard_Equivalent_Item);
 PARAMETER(DB1.Production_Qty_Per_Shift);
 PARAMETER(DB1.Scheduling_Position_Grade);
 PARAMETER(DB1.Sold_100_Percent_Frozen);
 PARAMETER(DB1.Maximum_Shifts);
 PARAMETER(DB1.Value_Added_Sts);
 PARAMETER(DB1.Record_Status);
 PARAMETER(LCL.Change_Flag_USR);
 PARAMETER(LCL.Number_50_USR);
 {
  //?Execute internal function

  // PR3.Change Flag USR = CND.Blank
  PR3.Change_Flag_USR = *BLANK;

  // PR4.Number 5,0            USR = CON.*ZERO
  PR4.Number_50_USR = 00000;

  //?  1. Description Line One
  CASE;

  // IF PR1.Description Line One NE PR2.Description Line One
  IF PR1.Description_Line_One <> PR2.Description_Line_One;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00001
  PR4.Number_50_USR = 00001;

  QUIT;

  ENDIF;

  //?  2. Description Line Two
  CASE;

  // IF PR1.Description Line Two NE PR2.Description Line Two
  IF PR1.Description_Line_Two <> PR2.Description_Line_Two;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00002
  PR4.Number_50_USR = 00002;

  QUIT;

  ENDIF;

  //?  3. Item Label Line 1
  CASE;

  // IF PR1.Item Label Line 1 NE PR2.Item Label Line 1
  IF PR1.Item_Label_Line_1 <> PR2.Item_Label_Line_1;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00003
  PR4.Number_50_USR = 00003;

  QUIT;

  ENDIF;

  //?  4. Item Label Line 2
  CASE;

  // IF PR1.Item Label Line 2 NE PR2.Item Label Line 2
  IF PR1.Item_Label_Line_2 <> PR2.Item_Label_Line_2;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00004
  PR4.Number_50_USR = 00004;

  QUIT;

  ENDIF;

  //?  5. Item Label Line 3
  CASE;

  // IF PR1.Item Label Line 3 NE PR2.Item Label Line 3
  IF PR1.Item_Label_Line_3 <> PR2.Item_Label_Line_3;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00005
  PR4.Number_50_USR = 00005;

  QUIT;

  ENDIF;

  //?  6. Item Label Line 4
  CASE;

  // IF PR1.Item Label Line 4 NE PR2.Item Label Line 4
  IF PR1.Item_Label_Line_4 <> PR2.Item_Label_Line_4;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00006
  PR4.Number_50_USR = 00006;

  QUIT;

  ENDIF;

  //?  7. U/M - Primary Dft
  CASE;

  // IF PR1.U/M - Primary Dft NE PR2.U/M - Primary
  IF PR1.UOM_Primary_Dft <> PR2.UOM_Primary;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00007
  PR4.Number_50_USR = 00007;

  QUIT;

  ENDIF;

  //?  8. Conversion Factor 1
  CASE;

  // IF PR1.Conversion Factor 1 NE PR2.Conversion Factor 1
  IF PR1.Conversion_Factor_1 <> PR2.Conversion_Factor_1;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00008
  PR4.Number_50_USR = 00008;

  QUIT;

  ENDIF;

  //?  9. Operation Factor 1
  CASE;

  // IF PR1.Operation Factor 1 NE PR2.Operation Factor 1
  IF PR1.Operation_Factor_1 <> PR2.Operation_Factor_1;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00009
  PR4.Number_50_USR = 00009;

  QUIT;

  ENDIF;

  //? 10. U/M - Second Dft
  CASE;

  // IF PR1.U/M - Second Dft NE PR2.U/M - Second
  IF PR1.UOM_Second_Dft <> PR2.UOM_Second;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00010
  PR4.Number_50_USR = 00010;

  QUIT;

  ENDIF;

  //? 11. Conversion Factor 2
  CASE;

  // IF PR1.Conversion Factor 2 NE PR2.Conversion Factor 2
  IF PR1.Conversion_Factor_2 <> PR2.Conversion_Factor_2;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00011
  PR4.Number_50_USR = 00011;

  QUIT;

  ENDIF;

  //? 12. Operation Factor 2
  CASE;

  // IF PR1.Operation Factor 2 NE PR2.Operation Factor 2
  IF PR1.Operation_Factor_2 <> PR2.Operation_Factor_2;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00012
  PR4.Number_50_USR = 00012;

  QUIT;

  ENDIF;

  //? 13. U/M - Third Dft
  CASE;

  // IF PR1.U/M - Third Dft NE PR2.U/M - Third
  IF PR1.UOM_Third_Dft <> PR2.UOM_Third;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00013
  PR4.Number_50_USR = 00013;

  QUIT;

  ENDIF;

  //? 14. U/M - Pricing Dft
  CASE;

  // IF PR1.U/M - Pricing Dft NE PR2.U/M - Pricing
  IF PR1.UOM_Pricing_Dft <> PR2.UOM_Pricing;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00014
  PR4.Number_50_USR = 00014;

  QUIT;

  ENDIF;

  //? 15. Unit Weight
  CASE;

  // IF PR1.Unit Weight NE PR2.Unit Weight
  IF PR1.Unit_Weight <> PR2.Unit_Weight;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00015
  PR4.Number_50_USR = 00015;

  QUIT;

  ENDIF;

  //? 16. Quality Level
  CASE;

  // IF PR1.Quality Level NE PR2.Quality Level
  IF PR1.Quality_Level <> PR2.Quality_Level;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00016
  PR4.Number_50_USR = 00016;

  QUIT;

  ENDIF;

  //? 17. Item Level
  CASE;

  // IF PR1.Item Level NE PR2.Item Level
  IF PR1.Item_Level <> PR2.Item_Level;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00017
  PR4.Number_50_USR = 00017;

  QUIT;

  ENDIF;

  //? 18. Production Date Control
  CASE;

  // IF PR1.Production Date Control NE PR2.Production Date Control
  IF PR1.Production_Date_Control <> PR2.Production_Date_Control;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00018
  PR4.Number_50_USR = 00018;

  QUIT;

  ENDIF;

  //? 19. Catch Weight Status
  CASE;

  // IF PR1.Catch Weight Status NE PR2.Catch Weight Status
  IF PR1.Catch_Weight_Status <> PR2.Catch_Weight_Status;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00019
  PR4.Number_50_USR = 00019;

  QUIT;

  ENDIF;

  //? 20. Minimum Weight Per Case
  CASE;

  // IF PR1.Minimum Weight Per Case NE PR2.Minimum Weight Per Case
  IF PR1.Minimum_Weight_Per_Case <> PR2.Minimum_Weight_Per_Case;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00020
  PR4.Number_50_USR = 00020;

  QUIT;

  ENDIF;

  //? 21. Maximum Weight Per Case
  CASE;

  // IF PR1.Maximum Weight Per Case NE PR2.Maximum Weight Per Case
  IF PR1.Maximum_Weight_Per_Case <> PR2.Maximum_Weight_Per_Case;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00021
  PR4.Number_50_USR = 00021;

  QUIT;

  ENDIF;

  //? 22. Number Cases On A Pallet
  CASE;

  // IF PR1.Number Cases On A Pallet NE PR2.Number Cases On A Pallet
  IF PR1.Number_Cases_On_A_Pallet <> PR2.Number_Cases_On_A_Pallet;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00022
  PR4.Number_50_USR = 00022;

  QUIT;

  ENDIF;

  //? 23. Vendor item Default Dft
  CASE;

  // IF PR1.Vendor item Default Dft NE PR2.Vendor - Item Default
  IF PR1.Vendor_item_Default_Dft <> PR2.Vendor_Item_Default;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00023
  PR4.Number_50_USR = 00023;

  QUIT;

  ENDIF;

  //? 24. Item Structure Class Code
  CASE;

  // IF PR1.Item Structure Class Code NE PR2.Item Structure Class Code
  IF PR1.Item_Structure_Class_Code <> PR2.Item_Structure_Class_Code;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00024
  PR4.Number_50_USR = 00024;

  QUIT;

  ENDIF;

  //? 25. Item Structure Group Code
  CASE;

  // IF PR1.Item Structure Group Code NE PR2.Item Structure Group Code
  IF PR1.Item_Structure_Group_Code <> PR2.Item_Structure_Group_Code;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00025
  PR4.Number_50_USR = 00025;

  QUIT;

  ENDIF;

  //? 26. Item Structure Type Code
  CASE;

  // IF PR1.Item Structure Type Code NE PR2.Item Structure Type Code
  IF PR1.Item_Structure_Type_Code <> PR2.Item_Structure_Type_Code;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00026
  PR4.Number_50_USR = 00026;

  QUIT;

  ENDIF;

  //? 27. Default Commod Mark basis
  CASE;

  // IF PR1.Default Commod Mark basis NE PR2.Default Commod Mark basis
  IF PR1.Default_Commod_Mark_basis <> PR2.Default_Commod_Mark_basis;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00027
  PR4.Number_50_USR = 00027;

  QUIT;

  ENDIF;

  //? 28. Transportation Temp
  CASE;

  // IF PR1.Transportation Temp NE PR2.Transportation Temp
  IF PR1.Transportation_Temp <> PR2.Transportation_Temp;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00028
  PR4.Number_50_USR = 00028;

  QUIT;

  ENDIF;

  //? 29. Item Type Code
  CASE;

  // IF PR1.Item Type Code NE PR2.Item Type Code
  IF PR1.Item_Type_Code <> PR2.Item_Type_Code;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00029
  PR4.Number_50_USR = 00029;

  QUIT;

  ENDIF;

  //? 30. Package Type Code
  CASE;

  // IF PR1.Package Type Code NE PR2.Package Type Code
  IF PR1.Package_Type_Code <> PR2.Package_Type_Code;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00030
  PR4.Number_50_USR = 00030;

  QUIT;

  ENDIF;

  //? 31. Fresh Chilling Time
  CASE;

  // IF PR1.Fresh Chilling Time NE PR2.Fresh Chilling Time
  IF PR1.Fresh_Chilling_Time <> PR2.Fresh_Chilling_Time;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00031
  PR4.Number_50_USR = 00031;

  QUIT;

  ENDIF;

  //? 32. Base/Conv/Loss Item
  CASE;

  // IF PR1.Base/Conv/Loss Item NE PR2.Base/Conv/Loss Item
  IF PR1.Base_Conv_Loss_Item <> PR2.Base_Conv_Loss_Item;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00032
  PR4.Number_50_USR = 00032;

  QUIT;

  ENDIF;

  //? 33. Variety/Rendered/Cut
  CASE;

  // IF PR1.Variety/Rendered/Cut NE PR2.Variety/Rendered/Cut
  IF PR1.Variety_Rendered_Cut <> PR2.Variety_Rendered_Cut;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00033
  PR4.Number_50_USR = 00033;

  QUIT;

  ENDIF;

  //? 34. Case Ready Status
  CASE;

  // IF PR1.Case Ready Status NE PR2.Case Ready Status
  IF PR1.Frozen_Make_to_Order_Sts <> PR2.Frozen_Make_to_Order_Sts;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00034
  PR4.Number_50_USR = 00034;

  QUIT;

  ENDIF;

  //? 35. Credit Item Status
  CASE;

  // IF PR1.Credit Item Status NE PR2.Credit Item Status
  IF PR1.Credit_Item_Status <> PR2.Credit_Item_Status;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00035
  PR4.Number_50_USR = 00035;

  QUIT;

  ENDIF;

  //? 36. Std Weight/Head (Var/Ren)
  CASE;

  // IF PR1.Std Weight/Head (Var/Ren) NE PR2.Std Weight/Head (Var/Ren)
  IF PR1.Std_Weight_Head_Var_Ren <> PR2.Std_Weight_Head_Var_Ren;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00036
  PR4.Number_50_USR = 00036;

  QUIT;

  ENDIF;

  //? 37. Pieces Per Head
  CASE;

  // IF PR1.Pieces Per Head NE PR2.Pieces Per Head
  IF PR1.Pieces_Per_Head <> PR2.Pieces_Per_Head;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00037
  PR4.Number_50_USR = 00037;

  QUIT;

  ENDIF;

  //? 38. Commodity Price Group
  CASE;

  // IF PR1.Commodity Price Group NE PR2.Commodity Price Group
  IF PR1.Commodity_Price_Group <> PR2.Commodity_Price_Group;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00038
  PR4.Number_50_USR = 00038;

  QUIT;

  ENDIF;

  //? 39. Pallet Tare Weight
  CASE;

  // IF PR1.Pallet Tare Weight NE PR2.Pallet Tare Weight
  IF PR1.Pallet_Tare_Weight <> PR2.Pallet_Tare_Weight;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00039
  PR4.Number_50_USR = 00039;

  QUIT;

  ENDIF;

  //? 40. Misc Tare Weight
  CASE;

  // IF PR1.Misc Tare Weight NE PR2.Misc Tare Weight
  IF PR1.Misc_Tare_Weight <> PR2.Misc_Tare_Weight;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00040
  PR4.Number_50_USR = 00040;

  QUIT;

  ENDIF;

  //? 41. Packages (Trays) /Case
  CASE;

  // IF PR1.Packages (Trays) /Case NE PR2.Packages (Trays) /Case
  IF PR1.Production_Lead_Days <> PR2.Production_Lead_Days;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00041
  PR4.Number_50_USR = 00041;

  QUIT;

  ENDIF;

  //? 42. Packaging Code
  CASE;

  // IF PR1.Packaging Code NE PR2.Packaging Code
  IF PR1.Packaging_Code <> PR2.Packaging_Code;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00042
  PR4.Number_50_USR = 00042;

  QUIT;

  ENDIF;

  //? 43. Grade Code
  CASE;

  // IF PR1.Grade Code NE PR2.Grade Code
  IF PR1.Item_Market_Code <> PR2.Item_Market_Code;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00043
  PR4.Number_50_USR = 00043;

  QUIT;

  ENDIF;

  //? 44. Partial Item Code
  CASE;

  // IF PR1.Partial Item Code NE PR2.Partial Item Code
  IF PR1.Partial_Item_Code <> PR2.Partial_Item_Code;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00044
  PR4.Number_50_USR = 00044;

  QUIT;

  ENDIF;

  //? 45. WIP Item Code
  CASE;

  // IF PR1.WIP Item Code NE PR2.WIP Item Code
  IF PR1.WIP_Item_Code <> PR2.WIP_Item_Code;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00045
  PR4.Number_50_USR = 00045;

  QUIT;

  ENDIF;

  //? 46. WIP Reject Code
  CASE;

  // IF PR1.WIP Reject Code NE PR2.WIP Reject Code
  IF PR1.WIP_Reject_Code <> PR2.WIP_Reject_Code;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00046
  PR4.Number_50_USR = 00046;

  QUIT;

  ENDIF;

  //? 47. Seconds Item
  CASE;

  // IF PR1.Seconds Item NE PR2.Seconds Item
  IF PR1.Seconds_Item <> PR2.Seconds_Item;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00047
  PR4.Number_50_USR = 00047;

  QUIT;

  ENDIF;

  //? 48. Print on Realization Rpt
  CASE;

  // IF PR1.Print on Realization Rpt NE PR2.Print on Realization Rpt
  IF PR1.Print_on_Realization_Rpt <> PR2.Print_on_Realization_Rpt;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00048
  PR4.Number_50_USR = 00048;

  QUIT;

  ENDIF;

  //? 49. Unit Weight Change Sts
  CASE;

  // IF PR1.Unit Weight Change Sts NE PR2.Unit Weight Change Sts
  IF PR1.Unit_Weight_Change_Sts <> PR2.Unit_Weight_Change_Sts;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00049
  PR4.Number_50_USR = 00049;

  QUIT;

  ENDIF;

  //? 50. Maximum Audit Value
  CASE;

  // IF PR1.Maximum Audit Value NE PR2.Maximum Audit Value
  IF PR1.Maximum_Audit_Value <> PR2.Maximum_Audit_Value;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00050
  PR4.Number_50_USR = 00050;

  QUIT;

  ENDIF;

  //? 51. Maximum Weight Per Case
  CASE;

  // IF PR1.Maximum Weight Per Case NE PR2.Maximum Weight Per Case
  IF PR1.Maximum_Weight_Per_Case <> PR2.Maximum_Weight_Per_Case;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00051
  PR4.Number_50_USR = 00051;

  QUIT;

  ENDIF;

  //? 52. Number Cases On A Pallet
  CASE;

  // IF PR1.Number Cases On A Pallet NE PR2.Number Cases On A Pallet
  IF PR1.Number_Cases_On_A_Pallet <> PR2.Number_Cases_On_A_Pallet;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00052
  PR4.Number_50_USR = 00052;

  QUIT;

  ENDIF;

  //? 53. Market Overage
  CASE;

  // IF PR1.Market Overage NE PR2.Market Overage
  IF PR1.Market_Overage <> PR2.Market_Overage;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00053
  PR4.Number_50_USR = 00053;

  QUIT;

  ENDIF;

  //? 54. Standard Overage/Underage
  CASE;

  // IF PR1.Standard Overage/Underage NE PR2.Standard Overage/Underage
  IF PR1.Standard_Overage_Underage <> PR2.Standard_Overage_Underage;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00054
  PR4.Number_50_USR = 00054;

  QUIT;

  ENDIF;

  //? 55. Item Pricing Operation
  CASE;

  // IF PR1.Item Pricing Operation NE PR2.Item Pricing Operation
  IF PR1.Item_Pricing_Operation <> PR2.Item_Pricing_Operation;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00055
  PR4.Number_50_USR = 00055;

  QUIT;

  ENDIF;

  //? 56. Item Pricing Constant
  CASE;

  // IF PR1.Item Pricing Constant NE PR2.Item Pricing Constant
  IF PR1.Item_Pricing_Constant <> PR2.Item_Pricing_Constant;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00056
  PR4.Number_50_USR = 00056;

  QUIT;

  ENDIF;

  //? 57. Default Warehouse
  CASE;

  // IF PR1.Default Warehouse NE PR2.Default Warehouse
  IF PR1.Default_Warehouse <> PR2.Default_Warehouse;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00057
  PR4.Number_50_USR = 00057;

  QUIT;

  ENDIF;

  //? 58. Department Code
  CASE;

  // IF PR1.Department Code NE PR2.Department Code
  IF PR1.Department_Code <> PR2.Department_Code;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00058
  PR4.Number_50_USR = 00058;

  QUIT;

  ENDIF;

  //? 59. Group for Packaging
  CASE;

  // IF PR1.Group for Packaging NE PR2.Group for Packaging
  IF PR1.Group_for_Packaging <> PR2.Group_for_Packaging;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00059
  PR4.Number_50_USR = 00059;

  QUIT;

  ENDIF;

  //? 60. Item Category Number 1
  CASE;

  // IF PR1.Item Category Number 1 NE PR2.Item Category Number 1
  IF PR1.Item_Category_Number_1 <> PR2.Item_Category_Number_1;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00060
  PR4.Number_50_USR = 00060;

  QUIT;

  ENDIF;

  //? 61. MTO code
  CASE;

  // IF PR1.MTO Code NE PR2.MTO Code
  IF PR1.Made_to_Order_Code <> PR2.Made_to_Order_Code;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00061
  PR4.Number_50_USR = 00061;

  QUIT;

  ENDIF;

  //? 62. Item Category Number 2
  CASE;

  // IF PR1.Item Category Number 1 NE PR2.Item Category Number 1
  IF PR1.Item_Category_Number_1 <> PR2.Item_Category_Number_1;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00062
  PR4.Number_50_USR = 00062;

  QUIT;

  ENDIF;

  //? 63. Item Category Code 2
  CASE;

  // IF PR1.Item Category Code 2 NE PR2.Item Category Code 2
  IF PR1.Transportation_Equip_Type <> PR2.Transportation_Equip_Type;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00063
  PR4.Number_50_USR = 00063;

  QUIT;

  ENDIF;

  //? 64. Item Category Number 3
  CASE;

  // IF PR1.Item Category Number 3 NE PR2.Item Category Number 3
  IF PR1.Item_Category_Number_3 <> PR2.Item_Category_Number_3;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00064
  PR4.Number_50_USR = 00064;

  QUIT;

  ENDIF;

  //? 65. Item Category Code 3
  CASE;

  // IF PR1.Item Category Code 2 NE PR2.Item Category Code 2
  IF PR1.Transportation_Equip_Type <> PR2.Transportation_Equip_Type;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00065
  PR4.Number_50_USR = 00065;

  QUIT;

  ENDIF;

  //? 66. Item Category Number 4
  CASE;

  // IF PR1.Item Category Number 1 NE PR2.Item Category Number 1
  IF PR1.Item_Category_Number_1 <> PR2.Item_Category_Number_1;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00066
  PR4.Number_50_USR = 00066;

  QUIT;

  ENDIF;

  //? 67. G/L Sub Code
  CASE;

  // IF PR1.G/L Sub Code NE PR2.G/L Sub Code
  IF PR1.GL_Sub_Code <> PR2.GL_Sub_Code;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00067
  PR4.Number_50_USR = 00067;

  QUIT;

  ENDIF;

  //? 68. Item Category Number 5
  CASE;

  // IF PR1.Item Category Number 5 NE PR2.Item Category Number 5
  IF PR1.Item_Category_Number_5 <> PR2.Item_Category_Number_5;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00068
  PR4.Number_50_USR = 00068;

  QUIT;

  ENDIF;

  //? 69. Item Category Code 5
  CASE;

  // IF PR1.Item Category Code 5 NE PR2.Item Category Code 5
  IF PR1.Item_Structure_Sub_Class <> PR2.Item_Structure_Sub_Class;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00069
  PR4.Number_50_USR = 00069;

  QUIT;

  ENDIF;

  //? 70. Item Category Number 6
  CASE;

  // IF PR1.Item Category Number 6 NE PR2.Item Category Number 6
  IF PR1.Item_Category_Number_6 <> PR2.Item_Category_Number_6;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00070
  PR4.Number_50_USR = 00070;

  QUIT;

  ENDIF;

  //? 71. Item Category Code 6
  CASE;

  // IF PR1.Item Category Code 6 NE PR2.Item Category Code 6
  IF PR1.Item_Primal_Sched_Report <> PR2.Item_Primal_Sched_Report;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00071
  PR4.Number_50_USR = 00071;

  QUIT;

  ENDIF;

  //? 72. Item Category Number 7
  CASE;

  // IF PR1.Item Category Number 7 NE PR2.Item Category Number 7
  IF PR1.Item_Category_Number_7 <> PR2.Item_Category_Number_7;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00072
  PR4.Number_50_USR = 00072;

  QUIT;

  ENDIF;

  //? 73. Item Category Code 7
  CASE;

  // IF PR1.Item Category Code 7 NE PR2.Item Category Code 7
  IF PR1.Item_Exc_Man_Prc_Excp <> PR2.Item_Exc_Man_Prc_Excp;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00073
  PR4.Number_50_USR = 00073;

  QUIT;

  ENDIF;

  //? 74. Item Category Number 8
  CASE;

  // IF PR1.Item Category Number 8 NE PR2.Item Category Number 8
  IF PR1.Item_Category_Number_8 <> PR2.Item_Category_Number_8;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00074
  PR4.Number_50_USR = 00074;

  QUIT;

  ENDIF;

  //? 75. Item Category Code 8
  CASE;

  // IF PR1.Item Category Code 8 NE PR2.Item Category Code 8
  IF PR1.Item_Prod_Sched_Send_PFS <> PR2.Item_Prod_Sched_Send_PFS;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00075
  PR4.Number_50_USR = 00075;

  QUIT;

  ENDIF;

  //? 76. Item Category Number 9
  CASE;

  // IF PR1.Item Category Number 9 NE PR2.Item Category Number 9
  IF PR1.Item_Category_Number_9 <> PR2.Item_Category_Number_9;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00076
  PR4.Number_50_USR = 00076;

  QUIT;

  ENDIF;

  //? 77. Item Category Code 9
  CASE;

  // IF PR1.Item Category Code 9 NE PR2.Item Category Code 9
  IF PR1.Item_Category_Code_9 <> PR2.Item_Category_Code_9;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00077
  PR4.Number_50_USR = 00077;

  QUIT;

  ENDIF;

  //? 78. Item Category Number 10
  CASE;

  // IF PR1.Item Category Number 10 NE PR2.Item Category Number 10
  IF PR1.Item_Category_Number_10 <> PR2.Item_Category_Number_10;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00078
  PR4.Number_50_USR = 00078;

  QUIT;

  ENDIF;

  //? 79. Item Category Code 10
  CASE;

  // IF PR1.Item Category Code 2 NE PR2.Item Category Code 2
  IF PR1.Transportation_Equip_Type <> PR2.Transportation_Equip_Type;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00079
  PR4.Number_50_USR = 00079;

  QUIT;

  ENDIF;

  //? 80. Primal Group Code
  CASE;

  // IF PR1.Primal Group Code NE PR2.Primal Group Code
  IF PR1.Primal_Group_Code <> PR2.Primal_Group_Code;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00080
  PR4.Number_50_USR = 00080;

  QUIT;

  ENDIF;

  //? 81. Piece Count Item
  CASE;

  // IF PR1.Piece Count Item NE PR2.Piece Count Item
  IF PR1.Piece_Count_Item <> PR2.Piece_Count_Item;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00081
  PR4.Number_50_USR = 00081;

  QUIT;

  ENDIF;

  //? 82. Pieces Per Bag
  CASE;

  // IF PR1.Pieces Per Bag NE PR2.Pieces Per Bag
  IF PR1.Pieces_Per_Bag <> PR2.Pieces_Per_Bag;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00082
  PR4.Number_50_USR = 00082;

  QUIT;

  ENDIF;

  //? 83. Bags Per Unit
  CASE;

  // IF PR1.Bags Per Unit NE PR2.Bags Per Unit
  IF PR1.Bags_Per_Unit <> PR2.Bags_Per_Unit;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00083
  PR4.Number_50_USR = 00083;

  QUIT;

  ENDIF;

  //? 84. Export/Domestic
  CASE;

  // IF PR1.Export/Domestic NE PR2.Export/Domestic
  IF PR1.Export_Domestic <> PR2.Export_Domestic;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00084
  PR4.Number_50_USR = 00084;

  QUIT;

  ENDIF;

  //? 85. Print On Schedule
  CASE;

  // IF PR1.Print On Schedule NE PR2.Print On Schedule
  IF PR1.Print_On_Schedule <> PR2.Print_On_Schedule;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00085
  PR4.Number_50_USR = 00085;

  QUIT;

  ENDIF;

  //? 86. Fresh Inv Allocation Seq
  CASE;

  // IF PR1.Fresh Inv Allocation Seq NE PR2.Fresh Inv Allocation Seq
  IF PR1.Fresh_Inv_Allocation_Seq <> PR2.Fresh_Inv_Allocation_Seq;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00086
  PR4.Number_50_USR = 00086;

  QUIT;

  ENDIF;

  //? 87. Fresh Sched As Ordered
  CASE;

  // IF PR1.Fresh Sched As Ordered NE PR2.Fresh Sched As Ordered
  IF PR1.Fresh_Sched_As_Ordered <> PR2.Fresh_Sched_As_Ordered;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00087
  PR4.Number_50_USR = 00087;

  QUIT;

  ENDIF;

  //? 88. Frozen Sched As Ordered
  CASE;

  // IF PR1.Frozen Sched As Ordered NE PR2.Frozen Sched As Ordered
  IF PR1.Frozen_Inv_Allocation_Seq <> PR2.Frozen_Inv_Allocation_Seq;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00088
  PR4.Number_50_USR = 00088;

  QUIT;

  ENDIF;

  //? 89. Item Target Price
  CASE;

  // IF PR1.Item Target Price NE PR2.Item Target Price
  IF PR1.Item_Target_Price <> PR2.Item_Target_Price;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00089
  PR4.Number_50_USR = 00089;

  QUIT;

  ENDIF;

  //? 90. Minimum Piece Weight
  CASE;

  // IF PR1.Minimum Piece Weight NE PR2.Minimum Piece Weight
  IF PR1.Minimum_Piece_Weight <> PR2.Minimum_Piece_Weight;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00090
  PR4.Number_50_USR = 00090;

  QUIT;

  ENDIF;

  //? 91. Maximum Piece Weight
  CASE;

  // IF PR1.Maximum Piece Weight NE PR2.Maximum Piece Weight
  IF PR1.Maximum_Piece_Weight <> PR2.Maximum_Piece_Weight;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00091
  PR4.Number_50_USR = 00091;

  QUIT;

  ENDIF;

  //? 92. Seaboard Equivalent Item
  CASE;

  // IF PR1.Seaboard Equivalent Item NE PR2.Seaboard Equivalent Item
  IF PR1.Seaboard_Equivalent_Item <> PR2.Seaboard_Equivalent_Item;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00092
  PR4.Number_50_USR = 00092;

  QUIT;

  ENDIF;

  //? 93. Production Qty /Shift
  CASE;

  // IF PR1.Production Qty /Shift NE PR2.Production Qty /Shift
  IF PR1.Production_Qty_Per_Shift <> PR2.Production_Qty_Per_Shift;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00093
  PR4.Number_50_USR = 00093;

  QUIT;

  ENDIF;

  //? 94. Scheduling Position Grade
  CASE;

  // IF PR1.Scheduling Position Grade NE PR2.Scheduling Position Grade
  IF PR1.Scheduling_Position_Grade <> PR2.Scheduling_Position_Grade;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00094
  PR4.Number_50_USR = 00094;

  QUIT;

  ENDIF;

  //? 95. Sold 100% Frozen
  CASE;

  // IF PR1.Sold 100% Frozen NE PR2.Sold 100% Frozen
  IF PR1.Sold_100_Percent_Frozen <> PR2.Sold_100_Percent_Frozen;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00095
  PR4.Number_50_USR = 00095;

  QUIT;

  ENDIF;

  //? 96. Maximum Shifts
  CASE;

  // IF PR1.Maximum Shifts NE PR2.Maximum Shifts
  IF PR1.Maximum_Shifts <> PR2.Maximum_Shifts;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00096
  PR4.Number_50_USR = 00096;

  QUIT;

  ENDIF;

  //? 97. Value Added Sts
  CASE;

  // IF PR1.Value Added Sts NE PR2.Value Added Sts
  IF PR1.Value_Added_Sts <> PR2.Value_Added_Sts;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00097
  PR4.Number_50_USR = 00097;

  QUIT;

  ENDIF;

  //? 98. PM LINE NUMBER
  CASE;

  // IF PR1.PM Line Number NE PR2.PM Line Number
  IF PR1.PM_Line_Number <> PR2.PM_Line_Number;

  // PR3.Change Flag USR = CND.Yes
  PR3.Change_Flag_USR = 'Y';

  // PR4.Number 5,0            USR = CON.00098
  PR4.Number_50_USR = 00098;

  QUIT;

  ENDIF;

 }

 CASE;

 // IF LCL.Change Flag USR is Yes
 IF LCL.Change_Flag_USR = 'Y';

 // WRK.Count Records        USR = WRK.Count Records        USR + CON.1
 WRK.Count_Records_USR = WRK.Count_Records_USR + 1;

 CASE;

 // IF WRK.Count Records        USR is One
 IF WRK.Count_Records_USR = 1;

 // PAR.Company Number Alpha Usr1 = CVTVAR(DB1.Company Number)
 PAR.Company_Number_Alpha_Usr1 = CVTVAR(DB1.Company_Number);

 // PAR.Change Flag USR 1 = CVTVAR(LCL.Change Flag USR)
 PAR.Change_Flag_USR_1 = CVTVAR(LCL.Change_Flag_USR);

 // PAR.Number 5,0           USR1 = CVTVAR(LCL.Number 5,0            USR)
 PAR.Number_50_USR1 = CVTVAR(LCL.Number_50_USR);

 ENDIF;

 CASE;

 // IF WRK.Count Records        USR is Two
 IF WRK.Count_Records_USR = 2;

 // PAR.Company Number Alpha Usr2 = CVTVAR(DB1.Company Number)
 PAR.Company_Number_Alpha_Usr2 = CVTVAR(DB1.Company_Number);

 // PAR.Change Flag USR 2 = CVTVAR(LCL.Change Flag USR)
 PAR.Change_Flag_USR_2 = CVTVAR(LCL.Change_Flag_USR);

 // PAR.Number 5,0           USR2 = CVTVAR(LCL.Number 5,0            USR)
 PAR.Number_50_USR2 = CVTVAR(LCL.Number_50_USR);

 ENDIF;

 CASE;

 // IF WRK.Count Records        USR is Three
 IF WRK.Count_Records_USR = 3;

 // PAR.Company Number Alpha Usr3 = CVTVAR(DB1.Company Number)
 PAR.Company_Number_Alpha_Usr3 = CVTVAR(DB1.Company_Number);

 // PAR.Change Flag USR 3 = CVTVAR(LCL.Change Flag USR)
 PAR.Change_Flag_USR_3 = CVTVAR(LCL.Change_Flag_USR);

 // PAR.Number 5,0           USR3 = CVTVAR(LCL.Number 5,0            USR)
 PAR.Number_50_USR3 = CVTVAR(LCL.Number_50_USR);

 ENDIF;

 ENDIF;

 ENDIF;

}


//?Compare flds from item default to every Co/Item for this item
//?If they are the same with the exception of specific flds then
//?do not print
//?if all three companies are blank then do not print
CASE;

// IF LCL.Company Number Alpha Usr1 EQ WRK.BLANK
IF LCL.Company_Number_Alpha_Usr1 = WRK.BLANK;

// AND LCL.Company Number Alpha Usr2 EQ WRK.BLANK
AND LCL.Company_Number_Alpha_Usr2 = WRK.BLANK;

// AND LCL.Company Number Alpha Usr3 EQ WRK.BLANK
AND LCL.Company_Number_Alpha_Usr3 = WRK.BLANK;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?USER: On print of detail format

// CUR.Company Number Alpha Usr1 = LCL.Company Number Alpha Usr1
CUR.Company_Number_Alpha_Usr1 = LCL.Company_Number_Alpha_Usr1;

// CUR.Company Number Alpha Usr2 = LCL.Company Number Alpha Usr2
CUR.Company_Number_Alpha_Usr2 = LCL.Company_Number_Alpha_Usr2;

// CUR.Company Number Alpha Usr3 = LCL.Company Number Alpha Usr3
CUR.Company_Number_Alpha_Usr3 = LCL.Company_Number_Alpha_Usr3;

// CUR.Number 5,0           USR1 = LCL.Number 5,0           USR1
CUR.Number_50_USR1 = LCL.Number_50_USR1;

// CUR.Number 5,0           USR2 = LCL.Number 5,0           USR2
CUR.Number_50_USR2 = LCL.Number_50_USR2;

// CUR.Number 5,0           USR3 = LCL.Number 5,0           USR3
CUR.Number_50_USR3 = LCL.Number_50_USR3;

