     H/TITLE YAPPOBJ Values list selection. Select rec. 3.1++
     H            Y
     Z* CRTRPGPGM
     H* Generated by SYNON/2 Version 6.0 on 19/06/86 at 12:05:58
     H* Select record Version:  0.1
     H* System        : SYNON/2 SHIPPED ROUTINE
     H* User name     : Y2PW
     H* Date          : 19/06/86
     H* COPYTIGHT 1987: SYNON Ltd.
      *================================================================
     M* Maintenance   :
     M* 18/11/86 PW  Map Blank <-> *BLANK to/from DISPLAY.
     M* 20.05.87 JPL - Revise MSGID usage (USR0008 -> Y2U0008)
     M* 29.05.87 JPL - Revise error reporting if file open fails
     M* 01.07.88 NJSK- Change to use y2snmgc
     M* 21.07.88 PV  - Yes but Y2SNMGC has extra parm of ZAMSGF!!
     M* 14.02.89 NCM - Allow Select value = 1 for SAA
     M* 15.02.89 NCM - Allow overrides to user display files
     M* 20.02.89 NCM - Load entire SFL to overcome DSPF SFLPAG problems
     M* 10.09.90 SOA Recompile over recompiled dspf for R2.0 of OS/400
     M* 02Oct91  MVR - MOD 3311  Renamed "ZAPGM" to "ZAPGMQ".
     M*                Incident #11323
     M* Release 3.1++
     M* 12/12/91 POD Enhance using DDS windows.
     M* 12/16/91 POD Add cursor sensitive help processing to the program.
     M* 12/23/91 OS  Condition some stuff in ZZINIT to be done only
     M*              once. If error occurs on opening files, send msg,
     M*              and SETON LR before RETRN.
     M*              Must ALWAYS(!) SETON LR because background image
     M*              saved from last program may be different!!!
     M* 13Jan92  OS  Add repositioning and DSPSIZ conditioning.
     M* 27Feb92  POD Balance DBCS fields.
     M* 19Mar92  POD Dont balance katakana fields
      *================================================================
     H* SYNOPSIS :
     H*  - Displays the records from a specified values list.
     H*  - Loads the SFL from the DBF.
     H*  - A record may be selected from
     H*    those displayed in the SFL: data for the record
     H*    will be returned to the calling program
      /EJECT
     FY2VLLWR#CF  E                    WORKSTN      KINFDS INFDS#     UC
     F                                        ##RR  KSFILE #SFLRCD
     F                                        ##RR  KSFILE #SFLRCD2
      * Values list name search   Select record
      *
     FY2VLLSL0IF  E           K        DISK         KINFDS INFDS1     UC
      * Values list               Retrieval index
      *
      /EJECT
     E                    @OV    20  20  2
     E                    @OD    20  20  2
      * Arrays for title for centering
     E                    @TI        56  1               WINDOW SIZE 38
     E                    @WK        56  1                TO 56
      * DBCS String balancing array
     E                    @D         25  1
     I              '*WDWLOC   '          C         CSRLOC
      * Override to correct values list file.
      /EJECT
     IPGMDS     ESDSY2PGDSP
      * Program data structure.
     IINFDS#    E DSY2I#DSP
      * Display file information data structure.
     IINFDS1    E DSY2I1DSP
      * File information data structure.
      /EJECT
      * Parameter declarations.
     IP1PARM      DS
      * FLD: Values list               Retrieval index
      * List number
     I                                    P   1   40P1LSNO
      * External value.
     I                                        5  24 P1EXVL
     I                                        6  24 W0EXVL
      /EJECT
      *****************************************************************
     C           *ENTRY    PLIST                           Entry parameter
     C                     PARM           P0RTN   7        Return code
     C           P1LSNO    PARM           WP0001  70       List number
     C           P1EXVL    PARM P1EXVL    WP0002 20        External value
      *****************************************************************
     C                     MOVE *BLANK    P0RTN            Return code
      * Initialise
     C                     EXSR ZZINIT
      * Initialise & load subfile
     C                     EXSR BAIZSF
      *................................................................
      * Conduct screen conversation:
     C                     DO   *HIVAL
      * Display screen.
     C                     EXSR CAEXFM
      *   Process response:
      * CK01: Cancel & exit program.
     C   01                CAS            ZXEXPG
     C   03                CAS            ZXEXPG
      *   HELP: Display help text.
     C   25                CAS            ZHHPKY
     C   20                CAS            CHGSIZ
      *   HOME Reload subfile.
     C   05                CAS            BAIZSF
     C   30                CAS            BAIZSF
      * Reposition window
     C   26                CAS            ZRRPWD
     C   24                CAS            OAMORK
      *   Changed start position
     C           #2STVL    CASNEW0STVL    BAIZSF
      *   Process screen input.
     C                     CAS            DAPR##
     C                     END
      *
     C                     END
      *****************************************************************
      *================================================================
      * Change window size and reload
      *================================================================
     C           CHGSIZ    BEGSR
      *================================================================
     C           WDWSIZ    IFEQ 'S'
     C                     MOVEL'L'       WDWSIZ
     C                     Z-ADDSTRLN2    ZZWSR            WINDOW START ROW
     C                     Z-ADDSTRPS2    ZZWSC            WINDOW START COLUMN
     C                     ELSE
     C                     MOVEL'S'       WDWSIZ
     C                     Z-ADDSTRLN1    ZZWSR            WINDOW START ROW
     C                     Z-ADDSTRPS1    ZZWSC            WINDOW START COLUMN
     C                     END
      *
      * Reload subfile
     C                     EXSR BAIZSF
      *================================================================
     C                     ENDSR
      /EJECT
     CSR         BAIZSF    BEGSR
      *================================================================
      * Initialise & Load subfile.
      *================================================================
      * Clear subfile.
     C                     SETON                     80
     C                     WRITE#SFLCTL
     C                     SETOF                     8081
     C                     SETON                     80
     C                     WRITE#SFLCTL2
     C                     SETOF                     8081
      * If a refresh has been called then position at top of list.
     C   05                MOVE *BLANKS   #2STVL
      *................................................................
      * Position DBF file to list details.
     C           KRST      KLIST
     C                     KFLD           Y2LSNO           List number
     C                     Z-ADDP1LSNO    Y2LSNO           List number
     C           KRST      SETLL@Y2LSDA
     C           KRST      READE@Y2LSDA                7182*82=EOF
      * Load LST details into #SFLCTL.
     C  N82                EXSR MAFL#2
      * Position to user start
     C           KPOS      KLIST
     C                     KFLD           Y2LSNO           List number
     C                     KFLD           Y2EXVL           EXT value
     C  N82      #2STVL    IFNE *BLANK
     C                     MOVEL#2STVL    Y2EXVL
     C           KPOS      SETLL@Y2EXIN
     C                     END
      * Save start position
     C                     MOVE #2STVL    W0STVL
     C  N82      KRST      READE@Y2EXIN                7182*82=EOF
      * Load SFL.
     C                     EXSR BBLDSF
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         BBLDSF    BEGSR
      *================================================================
      * Load subfile.
      *================================================================
      * Setof record error indicators.
     C                     MOVE *ALL'0'   WKINDS  1
     C                     MOVEAWKINDS    *IN,31
      * Reset highest record in SFL.
     C                     Z-ADD0         ##RR    50
      *................................................................
      * Load SFL until full
     C  N82      1         DO   *HIVAL    W0LNNO  50       DO
      * Load SFL fields.
     C                     EXSR MBFL#1
      * Output to subfile.
     C                     ADD  1         ##RR       81    *
     C           WDWSIZ    IFEQ 'S'
     C                     WRITE#SFLRCD
     C                     ELSE
     C                     WRITE#SFLRCD2
     C                     END
     C           W0LNNO    IFEQ 1
     C                     Z-ADD1         ##SFRC
     C                     END
     C           KRST      READE@Y2EXIN                  82*82=EOF
     C  N82                END                             OD 1 - *HIVAL
      *................................................................
      * If no DBF records found, display error message.
     C   82      ##RR      IFEQ *ZERO                      IF
     C                     MOVE 'Y2U0008' ZAMSID           Message id.
     C                     EXSR ZASNMS                     Send message
     C                     END                             FI ##RR = *ZERO
      *
      *================================================================
     CSR         BBEXIT    ENDSR
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen.
      *================================================================
     C           *IN25     DOUEQ'0'
     C           WDWSIZ    IFEQ 'S'
     C                     WRITE#MSGCTL                     MESSAGES
     C                     WRITE#CMDKEYS                    MESSAGES
     C                     EXFMT#SFLCTL                     SFL CTL
     C                     ELSE
     C                     WRITE#MSGCTL2                    MESSAGES
     C                     WRITE#CMDKEY2                    MESSAGES
     C                     EXFMT#SFLCTL2                    SFL CTL
     C                     END
      * Display help text.
     C   25                EXSR ZHHPKY                      HELP TEXT
     C                     END
      * Clear messages from program message queue.
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag.
     C                     MOVE 'Y'       ZAFSMS  1      99*
     C                     SETOF                       8883*
      * Save change SFLRCDNBR if ROLL keys used.
     C           @#SFRC    IFGT *ZERO
     C                     Z-ADD@#SFRC    ##SFRC
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPR##    BEGSR
      *================================================================
      * Process subfile records.
      *================================================================
     C   81                DO   *HIVAL
     C           WDWSIZ    IFEQ 'S'
     C                     READC#SFLRCD                  72*
     C                     ELSE
     C                     READC#SFLRCD2                 72*
     C                     END
      * If SFL record changed, process it:
     C  N72                DO
     C                     EXSR DCSFRC
     C                     MOVE *BLANK    #1SEL
     C           WDWSIZ    IFEQ 'S'
     C                     UPDAT#SFLRCD
     C                     ELSE
     C                     UPDAT#SFLRCD
     C                     END
     C                     END
     C  N72                END
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         DCSFRC    BEGSR
      *================================================================
      * Process subfile record.
      *================================================================
      * Setof error indicators and SFLNXTCHG.
     C                     MOVEAWKINDS    *IN,31
     C                     SETOF                     84    *
      * Check selection option
B1   C           #1SEL     IFEQ 'X'
     C           #1SEL     OREQ '1'
      *
     C           WDWSIZ    IFEQ 'S'
B3   C           #1EXVL    IFEQ '*BLANK'
     C                     MOVE *BLANK    P1EXVL           External value
X3   C                     ELSE
     C                     MOVEL*BLANKS   P1EXVL
     C                     MOVE #1EXVL    P1EXVL           External value
E3   C                     END
X2   C                     ELSE
B3   C           #3EXVL    IFEQ '*BLANK'
     C                     MOVE *BLANK    P1EXVL           External value
X3   C                     ELSE
     C                     MOVE #3EXVL    P1EXVL           External value
E3   C                     END
E2   C                     END
     C                     SETON                     LR
     C                     RETRN
E1   C                     END
      *================================================================
     CSR         DCEXIT    ENDSR
      /EJECT
     CSR         MAFL#2    BEGSR
      *================================================================
      * Initialise subfile control.
      *================================================================
     C                     MOVE Y2EXVL    #2EXVL           External value
     C                     MOVE Y2CNTX    #2CNTX           Condition text
     C                     Z-ADDP1LSNO    #2LSNO           List number
      * Get the appropriate screen title, if not done already.
     C           TITLE     IFEQ *BLANK
     C                     EXSR NAGETT
     C                     END
      *================================================================
     CSR         MAEXIT    ENDSR
      /EJECT
     CSR         MBFL#1    BEGSR
      *================================================================
      * Move @Y2EXIN    fields to #SFLRCD.
      *================================================================
     C                     MOVE *BLANK    #1SEL
B1   C           Y2EXVL    IFEQ *BLANK
      *
B2   C           WDWSIZ    IFEQ 'S'
     C                     MOVE *BLANK    #1EXVL           External value
     C                     MOVEL'*BLANK'  #1EXVL
X2   C                     ELSE
     C                     MOVE *BLANK    #3EXVL           External value
     C                     MOVEL'*BLANK'  #3EXVL
E2   C                     END
      *
X1   C                     ELSE
B2   C           WDWSIZ    IFEQ 'S'
     C                     MOVELY2EXVL    #1EXVL           External value
     C                     MOVE *BLANKS   BDBCS  13
     C                     MOVEAY2CNTX    @D               Balance DBCS field
     C                     EXSR PADBCS
     C                     MOVEA@D        #1CNTX           Condition text
X2   C                     ELSE
     C                     MOVELY2EXVL    #3EXVL           External value
     C                     MOVELY2CNTX    #3CNTX           Condition text
E2   C                     END
E1   C                     END
      *================================================================
     CSR         MBEXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue.
      *================================================================
      * Send first message only.
     C           ZAFSMS    IFEQ 'Y'
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVE ##PGM     ZAPGMQ
     C                     END
     C                     MOVE 'N'       ZAFSMS  1
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message Id.
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA132        Message data.
     C                     PARM           ZAMSTP  7        Message type.
     C                     END
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text.
      *================================================================
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50
     C                     MVR            ZHCSCL  50
      *
     C           ZHCSRW    SUB  ZZWSR     YWHPRW  30
     C           ZHCSCL    SUB  ZZWSC     YWHPCL  30
     C                     SUB  1         YWHPCL
     C                     MOVE *BLANKS   YYLG
      *
     C                     CALL 'YDDSHPR'
     C                     PARM           ##PGM            Program name
     C                     PARM *BLANK    YYHPFL 10        *DFT text file.
     C                     PARM *BLANK    YYHPLB 10        Help text lib.
     C           ZAMSID    PARM           WWRTVM  7        Retun MSGID.
     C                     PARM '*CSRLOC' YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM YWHPRW    YYRW    50       Row
     C                     PARM YWHPCL    YYCL    50       Column
     C                     PARM 1         YYLGCT  50       Label group count
     C                     PARM WDWSIZ    YYLG   10        Label group
      * Send return message.
     C                     EXSR ZASNMS
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZRRPWD    BEGSR
      *================================================================
      * Reposition window
      *================================================================
     C                     EXSR ZVRTLC
     C                     Z-ADDROW       STRLN1
     C                     Z-ADDCOL       STRPS1
     C                     WRITEASSUME
      *================================================================
     CSR         ZREXIT    ENDSR
      /EJECT
     CSR         ZVRTLC    BEGSR
      *================================================================
      * Retrieve window location - call to API
      *================================================================
      * Get the top left corner location of the small values list window
      * based on the current cursor location.
     C                     CALL 'YWRTLCI'              91
     C                     PARM CSRLOC    FUNC   10
     C                     PARM 56        WWTH    30       WINDOW WIDTH
     C                     PARM 11        WDTH    30       WINDOW DEPTH
     C                     PARM '*CALC'   WLOC    5        WINDOW LOCATION
     C                     PARM -3        ROW     30       WINDOW ROW
     C                     PARM -3        COL     30       WINDOW COLUMN
     C                     PARM           RTNCDE           RETURN CODE
      * If any error occured the display the window in the top left corner of
      * of the screen.
     C           *IN91     IFEQ '1'
     C           RTNCDE    ORNE *BLANKS
     C                     Z-ADD1         ROW
     C                     Z-ADD2         COL
     C                     END
      *================================================================
     CSR         ZVEXIT    ENDSR
      /EJECT
     CSR         NAGETT    BEGSR
      *================================================================
      * Get the screen title.
      *================================================================
      * Get title message
      * Setup message data for message
     C                     MOVE *BLANKS   ZAMSDA
     C                     MOVELY2EXVL    ZAMSDA
      * Retrieve message with 'List' appended
     C                     CALL 'Y2RVMGC'              90  *
     C                     PARM *BLANK    W0RTN   7        Return code
     C                     PARM 'Y2U0200' ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA132        Message data
     C           TITLE     PARM           W0MTX 132        Returned messag
     C                     MOVEL*BLANK    ZAMSDA
      * Center title
     C                     MOVEATITLE     @TI
     C                     Z-ADD56        EN      30
     C           @TI,EN    DOWEQ*BLANK
     C                     SUB  1         EN
     C                     END
     C           37        SUB  EN        X       30
     C                     DIV  2         X
     C           X         IFGT 0
     C                     MOVEA@TI       @WK
     C                     MOVEA*BLANK    @TI
     C                     MOVEA@WK,1     @TI,X
     C                     END
     C                     MOVEA@TI       TITL#
     CSR         NAEXIT    ENDSR
      /EJECT
     CSR         OAMORK    BEGSR
      *================================================================
      * DDS small window: If F24 pressed give em more command keys.
      *================================================================
     C           *IN27     IFEQ '0'
     C                     SETON                     27
     C                     ELSE
     C                     SETOF                     27
     C                     END
     CSR         OAEXIT    ENDSR
      /EJECT
     CSR         PADBCS    BEGSR
      *================================================================
      * Balance DBCS field
      *================================================================
     C                     Z-ADD25        PAX     30
     C                     MOVE 'N'       OEFND   1         X'0E' FOUND
     C                     MOVE 'N'       OFFND   1         X'OF' FOUND
      *
     C           PAX       DOWGE1
     C           OFFND     ANDEQ'N'
     C           OEFND     ANDEQ'N'
      *
     C           @D,PAX    IFEQ SFTOUT
     C                     MOVE 'Y'       OEFND
     C                     END
      *
     C           @D,PAX    IFEQ SFTIN
     C                     MOVE 'Y'       OFFND
     C                     END
      *
     C                     SUB  1         PAX
     C                     END
      *
     C                     ADD  1         PAX
     C           OFFND     IFNE 'Y'
     C           OEFND     IFEQ 'Y'
     C           PAX       IFGE 23
      * If X'0E' in last 3 chars, blank out the last three
     C                     MOVEA'   '     @D,23
     C                     ELSE
     C           PAX       DIV  2         PAXE    30
     C                     MVR            PAXER   30
      *
     C           PAXER     IFEQ 0
     C                     MOVE SFTIN     @D,25            X'0F' TO BALANCE
     C                     ELSE
     C                     MOVE *BLANK    @D,25
     C                     MOVE SFTIN     @D,24            X'0F' TO BALANCE
     C                     END                             PAXER
     C                     END                             PAX
     C                     END                             OEFND
     C                     END                             OFFND
     CSR         PAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program by request
      *================================================================
      * Send message '*No value selected'
     C                     MOVE 'Y2U0016' ZAMSID           Message id.
     C                     MOVE '*PRV '   ZAPGRL           Pgmq rel.
     C                     EXSR ZASNMS                     Send message
     C                     MOVE 'Y2U0016' P0RTN            No value selected
     C                     MOVE *BLANK    P1EXVL           No value
      * Close the display file.
     C                     CLOSEY2VLLWR#
     C                     SETON                     LR
     C                     RETRN                           Exit
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation.
      *================================================================
      * First time processing.
b1   C           ZZ1ST     IFEQ *BLANK
     C                     MOVE 'N'       ZZ1ST   1
      * *DTAARA = *COMPANY NAME
      *          *NAMVAR   DEFN YYCOTXA   ##CMP
      *                    IN   *NAMVAR
      * Open file xxVLLSL0 where xx is 1st 2 char of program name.
     C                     MOVEL##PGM     @OV,9
      * OVRDBF to correct file name.
     C                     CALL 'QCAEXEC'
     C                     PARM           @OV
     C                     PARM 40        WKOVLN 155
     C                     OPEN Y2VLLSL0               90
b2   C           *IN90     IFEQ '1'
     C                     MOVEL@1MSID    P0RTN            Exception msgid
     C                     MOVEL@1MSID    ZAMSID           Message id.
     C                     MOVE '*PRV '   ZAPGRL           Pgmq rel.
     C                     EXSR ZASNMS                     Send message
     C                     SETON                     LR
     C                     RETRN
e2   C                     END
      * Open file xxVLLWR# where xx is 1st 2 char of program name.
     C                     MOVEL##PGM     @OD,10
      * OVRDSPF to correct file name.
     C                     CALL 'QCAEXEC'
     C                     PARM           @OD
     C                     PARM 40        WKOVLN 155
     C                     OPEN Y2VLLWR#               90
b2   C           *IN90     IFEQ '1'
     C                     MOVEL@1MSID    P0RTN            Exception msgid
     C                     MOVEL@1MSID    ZAMSID           Message id.
     C                     MOVE '*PRV '   ZAPGRL           Pgmq rel.
     C                     EXSR ZASNMS                     Send message
     C                     SETON                     LR
     C                     RETRN
e2   C                     END
e1   C                     END                             ZZ1ST
      *................................................................
      * Condition display size. @#SCRW is number of rows on display -
      * found in DSPF file information data structure.
     C                     SETOF                     93
     C           @#SCRW    COMP 24                   93
      *................................................................
     C                     Z-ADD1         ##SFRC           SFLRCDNBR
      *................................................................
     C                     MOVE *BLANK    W0STVL 20        PRV START
     C                     MOVELW0EXVL    #2STVL           PRV START
      *................................................................
     C                     MOVEL'Y2USRMSG'ZAMSGF 10        MSGF for errors
      *................................................................
     C                     Z-ADD1         STRLN2
     C                     Z-ADD2         STRPS2
     C                     Z-ADD0         STRLN1
     C                     Z-ADD0         STRPS1
     C                     MOVE *BLANKS   RTNCDE  7
      * Retrieve window location
     C                     EXSR ZVRTLC
     C                     Z-ADDROW       STRLN1
     C                     Z-ADDCOL       STRPS1
      *................................................................
     C                     Z-ADDSTRLN1    ZZWSR   30       WINDOW START ROW
     C                     Z-ADDSTRPS1    ZZWSC   30       WINDOW START COLUMN
      *................................................................
      * Position neatly where the cursor will be placed after the call to ASSUME
     C                     Z-ADDSTRLN1    ZZASRW           ASSUME start row
     C                     ADD  5         ZZASRW           ASSUME start row
     C                     Z-ADDSTRPS1    ZZASCL           ASSUME start column
     C                     ADD  3         ZZASCL           ASSUME start column
      *................................................................
     C                     WRITEASSUME
      *................................................................
     C                     MOVEL'S'       WDWSIZ  1
     C                     MOVE *BLANKS   TITLE  56        Window title
     C                     SETOF                     27    More cmd keys
      * SET UP DBCS SHIFT IN/OUT FIELDS
     C                     BITOF'01234567'SFTOUT  1        X'0E'
     C                     BITOF'01234567'SFTIN   1        X'0F'
     C                     BITON'456'     SFTOUT
     C                     BITON'4567'    SFTIN
      *================================================================
     CSR         ZZEXIT    ENDSR
** @OV4 5 6 7 8 9
OVRDBF Y2VLLSL0 ??VLLSL0 SECURE(*YES)
** @OD4 5 6 7 8 9 10
OVRDSPF Y2VLLWR#  ??VLLWR# SECURE(*YES)
