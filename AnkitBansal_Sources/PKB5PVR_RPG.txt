     H/TITLE Pmt Prt Receiving Rpt PV  Prompt & validate record
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Prompts fields, allowing user changes
     H* - Validates fields
     H* - If valid, performs an action
      *
     H* Generated by CA 2E release 8.7 (1632)
     H* Function type : Prompt & validate record
      *
     H* Company       : HPEDEVMDL
     H* System        : HPEDEVMDL
     H* User name     : ISELOUC
     H* Date          : 06/12/23  Time  : 11:44:57
     H* Copyright     : HPEDEVMDL
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPKB5PVR#CF  E                    WORKSTN
     F                                              KINFDS INFDS#
      * DSP: Pmt Prt Receiving Rpt PV  Prompt & validate record
      *
     FPKACREL1IF  E           K        DISK
      * RTV : Producer                  Retrieval index
      *
     FPKAAREL0IF  E           K        DISK
      * RTV : Source                    Retrieval index
      *
      * Days in month for date validation
     E                    @XD    12  12  2 0
      * DETAIL Screen: Field position and name array
     E                    W0BEG   7 017  5 0A
     E                    W0END   7 017  5 0A
     E                    W0NAM   7 017 10
      * Long constants
     E                    @CN#    1  01  6   @CN    25
     I@ACREAI
      * Producer                  Retrieval index
      * Renamed input format fields
     I              ACABCD                          WAABCD
     I              ACAGTX                          WAAGTX
     I              ACALNB                          WAALNB
     I              ACAATH                          WAAATH
     I              ACAMNB                          WAAMNB
     I              ACIWST                          WAIWST
     I              ACAPST                          WAAPST
     I              ACGCNB                          WAGCNB
     I              ACGJNB                          WAGJNB
     I              ACC2TX                          WAC2TX
     I              ACAACD                          WAAACD
     I              ACACCD                          WAACCD
     I              ACADCD                          WAADCD
     I              ACAAVN                          WAAAVN
     I              ACAADT                          WAAADT
     I              ACAMTM                          WAAMTM
     I              ACAJST                          WAAJST
     I              ACAHVN                          WAAHVN
     I              ACAGVN                          WAAGVN
     I              ACABVN                          WAABVN
     I              ACABDT                          WAABDT
     I              ACABTM                          WAABTM
      *
     I@AAREAC
      * Source                    Retrieval index
      * Renamed input format fields
     I              AAAACD                          WBAACD
     I              AAAFTX                          WBAFTX
     I              AAIXST                          WBIXST
     I              AACYSS                          WBCYSS
     I              AACZSS                          WBCZSS
     I              AAC0SS                          WBC0SS
     I              AAC1SS                          WBC1SS
     I              AAAAVN                          WBAAVN
     I              AAAADT                          WBAADT
     I              AAAMTM                          WBAMTM
     I              AAAJST                          WBAJST
     I              AAAHVN                          WBAHVN
     I              AAAGVN                          WBAGVN
     I              AAABVN                          WBABVN
     I              AAABDT                          WBABDT
     I              AAABTM                          WBABTM
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXTCK        DS
      * Time: hours, minutes, seconds
     I                                        1   60XTTIM
     I                                        1   20XTHH
     I                                        3   40XTNN
     I                                        5   60XTSS
      /EJECT
     IXDOFF       DS
      * Cut-off year
     I                                        1   40XOFF
     I                                        3   40XOFFYY
      /EJECT
     IXD1T        DS
      * Internal date
     I                                        1   70XDINT1
     I                                        1   30XDINY1
     I                                        4   50XDINM1
     I                                        6   70XDIND1
      /EJECT
     IXD2T        DS
      * Internal date
     I                                        1   70XDINT2
     I                                        1   30XDINY2
     I                                        4   50XDINM2
     I                                        6   70XDIND2
      /EJECT
     IXDMT        DS
      * Duration mask
     I                                        1   70XDIMDT
     I                                        1   30XDIMYY
     I                                        4   50XDIMMM
     I                                        6   70XDIMDD
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: *Arrays
      * N : MAP Oms Warehouse Code
     I                                        1   3 P1J8NB
      * N : MAP CC Company Number
     I                                    P   4   50P1HONB
      * N : MAP Oms SalesPerson Code
     I                                        6   8 P1C8CD
      * N : MAP Oms Allow Multi-Company
     I                                        9   9 P1G8ST
      * N : MAP Oms Default Printer
     I                                       10  19 P1G9ST
      * N : MAP Oms Name
     I                                       20  49 P1EUTX
      * N : MAP Oms System Value Alpha
     I                                       50  89 P1EVTX
      * N : MAP Oms Access Denied (Y/N)
     I                                       90  90 P1HAST
     IP2PARM      DS
      * FLD: *Arrays
      * N : MAP PRT Description
     I                                        1  25 P2ETTX
      * N : MAP PRT Printer Device
     I                                       26  35 P2ACVN
      * N : MAP PRT Hold Output Sts
     I                                       36  39 P2AKST
      * N : MAP PRT Save Output Sts
     I                                       40  43 P2AMST
      * N : MAP PRT Copies
     I                                       44  450P2AKNB
      * N : MAP PRT Night Queue Run Sts
     I                                       46  46 P2ALST
      * N : MAP PRT Night Queue
     I                                       47  56 P2AIVN
      * N : MAP Oms Application Code
     I                                       57  62 P2C7CD
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'SBM Prt Receiving Report'
      * PRT Printer Device
     I                                        1  10 ZA0001
      * PRT Hold Output Sts
     I                                       11  14 ZA0002
      * PRT Save Output Sts
     I                                       15  18 ZA0003
      * PRT Copies
     I                                    P  19  200ZA0004
      * PRT Night Queue
     I                                       21  30 ZA0005
      * Company Number Alpha Usr
     I                                       31  33 ZA0006
      * Date Alpha USR
     I                                       34  40 ZA0007
      * Date Alpha Usr 2
     I                                       41  47 ZA0008
      * TH Hog Class Type
     I                                       48  48 ZA0009
      * TH Source Type
     I                                       49  49 ZA0010
      * Receiving Rpt Type    USR
     I                                       50  50 ZA0011
      * TH Schedule Kill Shift
     I                                       51  51 ZA0012
      * Farm Site Alpha       USR
     I                                       52  56 ZA0013
      * PD Producer Code
     I                                       57  62 ZA0014
      * Oms System Value Alpha
     I                                       63 102 ZA0015
      * SR Source Code
     I                                      103 105 ZA0016
      * Load Type USR
     I                                      106 107 ZA0017
      * Message data for 'Value Required Number ERR'
      * #Num USR
     I                                    P   1   10ZA0018
      * Message data for 'Invalid Company Number'
      * CC Company Number
     I                                    P   1   20ZA0019
      * Message data for 'From Date > To Date'
      * Date From USR
     I                                    P   1   40ZA0020
      * Date To   USR
     I                                    P   5   80ZA0021
      * Message data for 'Farm Site Invalid.'
      * HRH Farm Site
     I                                    P   1   30ZA0022
      * Message data for 'Kill Date Range > 2 Years'
      * Date From USR
     I                                    P   1   40ZA0023
      * Date To   USR
     I                                    P   5   80ZA0024
      * Message data for 'Farm Site Invalid.'
      * HRH Farm Site
     I                                    P   1   30ZA0025
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Conduct screen conversation
     C                     DO   *HIVAL
      * Start new transaction
     C                     MOVEL'Y'       W0TRN   1
      * Process current transaction
     C           W0TRN     DOWEQ'Y'
      * Convert fields to external form
     C                     EXSR MNCV#1
      * Display screen
     C                     EXSR CAEXFM
      * Process response
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Reset screen fields
     C   30                CAS            MALDSC
      * Process screen input
     C                     CAS            DAPRSC
     C                     END
      *
     C                     END
      *
     C                     END
      *****************************************************************
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen and process HELP requests
      *================================================================
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
      * Enable PUTOVR
     C                     SETON                     86
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#RCDDTL1
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPRSC    BEGSR
      *================================================================
      * Process screen input
      *================================================================
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * Validate screen input
     C                     EXSR DBVLSC
      * If error, exit
     C           *IN99     CABEQ'1'       DAEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       DAEXIT
      * USER: User defined action
      * Pmt Print Options Size XF - STR Order Management Sys  * 
     C                     CALL 'PDV8PVR'              90  Pmt Print Optio
     C                     PARM *BLANK    W0RTN   7
     C                     PARM @CN,001   WQ0001 25        PRT Description
     C           P2ACVN    PARM P2ACVN    WQ0002 10        PRT Printer Dev
     C           P2AKST    PARM P2AKST    WQ0003  4        PRT Hold Output
     C           P2AMST    PARM P2AMST    WQ0004  4        PRT Save Output
     C           P2AKNB    PARM P2AKNB    WQ0005  20       PRT Copies
     C                     PARM 'N'       WQ0006  1        PRT Night Queue
     C           P2AIVN    PARM P2AIVN    WQ0007 10        PRT Night Queue
     C                     PARM 'P/S'     WQ0008  6        Oms Application
     C                     PARM '1'       WQ0009  1        Paper Type Usr-
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDV8PVR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     MOVEL*BLANK    WUC3CD           Company Number
     C                     MOVEL#1HONB    WUC3CD           Company Number
     C                     MOVEL*BLANK    WUCZCD           Date Alpha USR
     C                     MOVEL#DB3DT    WUCZCD           Date Alpha USR
     C                     MOVEL*BLANK    WUDHCD           Date Alpha Usr
     C                     MOVEL#DB4DT    WUDHCD           Date Alpha Usr
     C                     MOVELWUCRTX    #DLLST           TH Hog Class Ty
     C                     MOVEL*BLANK    WUK6TX           Farm Site Alpha
     C                     MOVEL#DETNB    WUK6TX           Farm Site Alpha
      * Setup message data for message
     C                     MOVELP2ACVN    ZA0001           PRT Printer Dev
     C                     MOVELP2AKST    ZA0002           PRT Hold Output
     C                     MOVELP2AMST    ZA0003           PRT Save Output
     C                     Z-ADDP2AKNB    ZA0004           PRT Copies
     C                     MOVELP2AIVN    ZA0005           PRT Night Queue
     C                     MOVELWUC3CD    ZA0006           Company Number
     C                     MOVELWUCZCD    ZA0007           Date Alpha USR
     C                     MOVELWUDHCD    ZA0008           Date Alpha Usr
     C                     MOVEL#DLLST    ZA0009           TH Hog Class Ty
     C                     MOVEL#DIXST    ZA0010           SR Type
     C                     MOVEL#DNOST    ZA0011           Receiving Rpt T
     C                     MOVEL#DLIST    ZA0012           TH Schedule Kil
     C                     MOVELWUK6TX    ZA0013           Farm Site Alpha
     C                     MOVEL#DABCD    ZA0014           PD Producer Cod
     C                     MOVELP1EVTX    ZA0015           Oms System Valu
     C                     MOVEL#DAACD    ZA0016           SR Source Code
     C                     MOVEL#DXYST    ZA0017           Load Type USR
      *
      * Execute message
     C                     MOVELZADFMF    ZAMSGF
     C                     CALL 'Y2EXMCC'              90  *
     C                     PARM *BLANK    W0RTN   7        Return code
     C                     PARM 'PRK0657' ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSGF
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN   7
     C                     END
      *
     C           W0RTN     IFNE *BLANK
      * Error detected during execution
     C                     SETON                     993634*
     C                     SETON                     373935*
     C                     SETON                     40    *
     C                     END
      *
     C                     MOVELWUCRTX    #DKKTX           Description 30
     C                     MOVELWUCRTX    #DEETX           Int/External De
     C                     END                             *FI
      * Request new transaction
     C                     MOVEL'N'       W0TRN
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         DBVLSC    BEGSR
      *================================================================
      * Validate screen input
      *================================================================
      * Validate Date From USR
      * External date
     C                     Z-ADDVDB3DT    XDEXDT
      * Check date
     C                     EXSR XDCK2
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9932  *
     C                     END
     C                     Z-ADDXDINDT    #DB3DT
      * Validate Date To   USR
      * External date
     C                     Z-ADDVDB4DT    XDEXDT
      * Check date
     C                     EXSR XDCK2
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9933  *
     C                     END
     C                     Z-ADDXDINDT    #DB4DT
      * Validate Receiving Rpt Type    USR
     C                     MOVEL*BLANK    W0RTN
      * Name search required?
     C           '#DNOST'  IFEQ YPMTFD
      * Receiving Rpt Type    USR
     C                     MOVEL#DNOST    W0INVL 25
      * Set current value in drop down list.
     C                     MOVEL*ZEROS    ZHNOST
     C                     SELEC
     C           W0INVL    WHEQ 'S'                        S
     C                     Z-ADD1         ZHNOST
     C           W0INVL    WHEQ 'D'                        D
     C                     Z-ADD2         ZHNOST
     C           W0INVL    WHEQ 'L'                        L
     C                     Z-ADD3         ZHNOST
     C           W0INVL    WHEQ 'F'                        F
     C                     Z-ADD4         ZHNOST
     C                     ENDSL
     C                     EXFMTZGNOST
      * Set selected value from drop down list.
     C                     MOVEL*BLANKS   W0INVL
     C                     SELEC
     C           ZHNOST    WHEQ 1
     C                     MOVEL'S'       W0INVL           S
     C           ZHNOST    WHEQ 2
     C                     MOVEL'D'       W0INVL           D
     C           ZHNOST    WHEQ 3
     C                     MOVEL'L'       W0INVL           L
     C           ZHNOST    WHEQ 4
     C                     MOVEL'F'       W0INVL           F
     C                     ENDSL
     C                     SETOF                     90    *
     C                     MOVELW0INVL    #DNOST
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
      * Validate SR Type
     C                     MOVEL*BLANK    W0RTN
      * Name search required?
     C           '#DIXST'  IFEQ YPMTFD
      * SR Type
     C                     MOVEL#DIXST    W0INVL 25
      * Set current value in drop down list.
     C                     MOVEL*ZEROS    ZHIXST
     C                     SELEC
     C           W0INVL    WHEQ 'E'                        E
     C                     Z-ADD1         ZHIXST
     C           W0INVL    WHEQ 'I'                        I
     C                     Z-ADD2         ZHIXST
     C                     ENDSL
     C                     EXFMTZGIXST
      * Set selected value from drop down list.
     C                     MOVEL*BLANKS   W0INVL
     C                     SELEC
     C           ZHIXST    WHEQ 1
     C                     MOVEL'E'       W0INVL           E
     C           ZHIXST    WHEQ 2
     C                     MOVEL'I'       W0INVL           I
     C                     ENDSL
     C                     SETOF                     90    *
     C                     MOVELW0INVL    #DIXST
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
      * Validate TH Schedule Kill Shift
     C                     MOVEL*BLANK    W0RTN
      * Name search required?
     C           '#DLIST'  IFEQ YPMTFD
      * TH Schedule Kill Shift
     C                     MOVEL#DLIST    W0INVL 25
      * Set current value in drop down list.
     C                     MOVEL*ZEROS    ZHLIST
     C                     SELEC
     C           W0INVL    WHEQ '1'                        1
     C                     Z-ADD1         ZHLIST
     C           W0INVL    WHEQ '2'                        2
     C                     Z-ADD2         ZHLIST
     C           W0INVL    WHEQ '3'                        3
     C                     Z-ADD3         ZHLIST
     C           W0INVL    WHEQ *BLANK                     *BLANK
     C                     Z-ADD4         ZHLIST
     C                     ENDSL
     C                     EXFMTZGLIST
      * Set selected value from drop down list.
     C                     MOVEL*BLANKS   W0INVL
     C                     SELEC
     C           ZHLIST    WHEQ 1
     C                     MOVEL'1'       W0INVL           1
     C           ZHLIST    WHEQ 2
     C                     MOVEL'2'       W0INVL           2
     C           ZHLIST    WHEQ 3
     C                     MOVEL'3'       W0INVL           3
     C           ZHLIST    WHEQ 4
     C                     MOVEL*BLANK    W0INVL           *BLANK
     C                     ENDSL
     C                     SETOF                     90    *
     C                     MOVELW0INVL    #DLIST
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
      * Validate Load Type USR
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#DXYST    W0NSRQ  1        Load Type USR
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C           '#DXYST'  OREQ YPMTFD
     C                     CALL 'PKVLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1309802   Y2LSNO  70
     C           #DXYST    PARM #DXYST    W0EXVL 25        Load Type USR
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C           W0NSRQ    IFNE '?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
     C                     END
      *
     C           YPMTFD    IFEQ *BLANKS
      * USER: Validate fields
      *  5/07/19 JBB E14956 - Validate Company Number
      * CASE: DTL.CC Company Number is *ZERO
     C           #1HONB    IFEQ *ZERO                      *IF
      * Setup message data for message
     C                     Z-ADD#1HONB    ZA0018           CC Company Numb
      * Send message 'Value Required Number ERR'
     C                     MOVEL'PRK1406' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * Val Company Number    IF
      * Val Company Number    XF - STR Order Management Sys  * 
     C                     CALL 'PDGZXFR'              90  Val Company Num
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1HONB    WQ0010  30       CC Company Numb
     C           #PEUTX    PARM *BLANK    WQ0011 30        Oms Name
     C           WUG3ST    PARM *BLANK    WQ0012  1        Invalid Y/N USR
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDGZXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9931  *
     C                     END
      * CASE: WRK.Invalid Y/N USR is Yes
     C           WUG3ST    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     Z-ADD#1HONB    ZA0019           CC Company Numb
      * Send message 'Invalid Company Number'
     C                     MOVEL'PRK0299' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
      *
     C                     END                             *FI
     C                     MOVELWUG3ST    YN0001           Invalid Y/N USR
     C                     END                             *FI
      * Shift selection not allowed for summary  or log reports
      * CASE: DTL.TH Schedule Kill Shift NE WRK.Blank Usr 1 fld Usr
     C           #DLIST    IFNE WUIXTX                     *IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : DTL.Receiving Rpt Type    USR is Summary
      *   |- c2    : DTL.Receiving Rpt Type    USR is Log
      *   '-
     C           #DNOST    IFEQ 'S'                        *IF
     C           #DNOST    OREQ 'L'                        *OR
      * Send message 'Summary NAll Shift'
     C                     MOVEL'PRK0736' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Prompt Farm Site
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DTL.*CMD key is *Prompt
      *   |- c2    : PGM.*Cursor field <IS> DTL.Farm Site USR
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *IN04     IFEQ '1'                        *IF
     C           W0CFL     IFEQ '#DETNB'                   *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Sel HPS Farm Site     UP - STR HPS Interface  * 
     C                     CALL 'HP5003'               90  Sel HPS Farm Si
     C           WULMST    PARM WULMST    WQ0013  7        Return Code USR
     C           #DETNB    PARM #DETNB    WQ0014  50       HRH Farm Site
     C           #DKQTX    PARM #DKQTX    WQ0015 25        Farm site Name
     C                     PARM *BLANK    WQ0016 20        MTech Farm Site
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'HP5003'  W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     9938  *
     C                     END
     C                     END                             *FI
      * Farm Site selection not allowed for summary  or log reports
      * CASE: DTL.Farm Site USR NE WRK.Zero USR
     C           #DETNB    IFNE WUE9NB                     *IF
      * CASE:
      *  - c1 OR c2
      *   |- c1    : DTL.Receiving Rpt Type    USR is Summary
      *   |- c2    : DTL.Receiving Rpt Type    USR is Log
      *   '-
     C           #DNOST    IFEQ 'S'                        *IF
     C           #DNOST    OREQ 'L'                        *OR
      * Send message 'Sum/Log N/Allow Farm Site'
     C                     MOVEL'PRK0835' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Prompt Producer
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DTL.*CMD key is *Prompt
      *   |- c2    : PGM.*Cursor field <IS> DTL.PD Producer Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           *IN04     IFEQ '1'                        *IF
     C           W0CFL     IFEQ '#DABCD'                   *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Sel Producer          SR - Producer  * 
     C                     CALL 'PKA1SRR'              90  Sel Producer
     C                     PARM *BLANK    W0RTN   7
     C           #DABCD    PARM #DABCD    WQ0017  6        PD Producer Cod
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PKA1SRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9939  *
     C                     END
     C                     END                             *FI
      * Val Producer
      * CASE: DTL.PD Producer Code is Entered
     C           #DABCD    IFNE *BLANK                     *IF
      * Val Prod Existance    RT - Producer  * 
     C                     EXSR SARVGN
      * CASE: LCL.Record Found USR is Record Not Found
     C           YL0001    IFEQ 'N'                        *IF
      * Send message 'Producer               NF'
     C                     MOVEL'PRK0009' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Validate dates
      * CASE: DTL.Date To   USR LT DTL.Date From USR
     C           #DB4DT    IFLT #DB3DT                     *IF
      * Setup message data for message
      * Convert Date From USR to display format
      * Convert date
     C           1000000   ADD  #DB3DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0020
      * Convert Date To   USR to display format
      * Convert date
     C           1000000   ADD  #DB4DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0021
      * Send message 'From Date > To Date'
     C                     MOVEL'PRK1450' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     993233*
      *
     C                     END                             *FI
      * E11245 JJH 07/20/17 - Validate Source Code
      * Validate Source
      * CASE: DTL.SR Source Code is NE Blank
     C           #DAACD    IFNE *BLANK                     *IF
      * Val Source-2          RT - Source  * 
     C                     EXSR SBRVGN
      * CASE: LCL.Record Found USR is Record Not Found
     C           YL0001    IFEQ 'N'                        *IF
      * Send message 'Source                 NF'
     C                     MOVEL'PRK0005' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     END                             *FI
     C                     END                             *FI
      * E11245 JJH 07/20/17 - Prompt Source
      * Prompt Source
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PGM.*Cursor field <IS> DTL.SR Source Code
      *   |- c2    : DTL.*CMD key is *Prompt
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           W0CFL     IFEQ '#DAACD'                   *IF
     C           *IN04     IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Sel Source            SR - Source  * 
     C                     CALL 'PKDRSRR'              90  Sel Source
     C                     PARM *BLANK    W0RTN   7
     C           #DAACD    PARM #DAACD    WQ0018  3        SR Source Code
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PKDRSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9935  *
     C                     END
     C                     END                             *FI
     C                     END
      * Bypass ref file checks if error already detected
     C   99                GOTO DBEXIT
      * Select existing record
     C                     EXSR VACKRL
     C           YPMTFD    IFEQ *BLANKS
      * CALC: Screen function fields
      * DTL.Int/External Desc Usr = Condition name of DTL.SR Type
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1121482   Y2LSNO  70       List number
     C                     PARM #DIXST    W0INVL 25        SR Type
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DEETX    PARM           W0CNNM 25        Int/External De
      *
      * DTL.Report Type Desc Usr = Condition name of DTL.Receiving Rpt Ty
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1183672   Y2LSNO  70       List number
     C                     PARM #DNOST    W0INVL 25        Receiving Rpt T
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DJJTX    PARM           W0CNNM 25        Report Type Des
      *
      * Validate farm site selection
      * CASE: DTL.Farm Site USR NE WRK.Zero USR
     C           #DETNB    IFNE WUE9NB                     *IF
      * Val HPS Farm Site     UP - STR HPS Interface  * 
     C                     CALL 'HP256'                90  Val HPS Farm Si
     C           WULMST    PARM WULMST    WQ0024  7        Return Code USR
     C                     PARM #DETNB    WQ0025  50       HRH Farm Site
     C                     PARM WUOCTX    WQ0026  5        Farm Site Prod
     C           #DKQTX    PARM *BLANK    WQ0027 25        Farm site Name
     C                     PARM *BLANK    WQ0028 20        MTech Farm Site
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'HP256'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     9938  *
     C                     END
      * CASE: DTL.Farm site Name f/ HPS USR EQ WRK.Blank USR
     C           #DKQTX    IFEQ WUCRTX                     *IF
      * Setup message data for message
     C                     Z-ADD#DETNB    ZA0022           Farm Site USR
      * Send message 'Farm Site Invalid.'
     C                     MOVEL'PRK0688' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9938  *
      *
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    #DKQTX           Farm site Name
     C                     END                             *FI
      * E11245 JJH 07/20/17 - Display SR Source Code Description
     C                     MOVEL*BLANK    #DELT1           SR Description
      * SR Description DRV
      * Rtv Source Desc       RT - Source  * 
     C                     EXSR SCRVGN
     C                     END
     C           YPMTFD    IFEQ *BLANKS
      * USER: Validate relations
      * LCL.Date To   USR = DTL.Date From USR + CON.2 *YEARS
     C           #DB3DT    ADD  1000000   XDINDT
     C                     Z-ADD2         XDURR   80
     C                     EXSR XDAYR
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0002
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0002
     C                     END
      * SENDERRMSG: Kill Date Range > 2 years
      * CASE: DTL.Date To   USR GT LCL.Date To   USR
     C           #DB4DT    IFGT YL0002                     *IF
      * Setup message data for message
      * Convert Date From USR to display format
      * Convert date
     C           1000000   ADD  #DB3DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0023
      * Convert Date To   USR to display format
      * Convert date
     C           1000000   ADD  #DB4DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0024
      * Send message 'Kill Date Range > 2 Years'
     C                     MOVEL'PRK1550' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     993233*
      *
     C                     END                             *FI
     C                     END
      * CC Company Number required
     C           #1HONB    IFEQ *ZERO                      IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9931  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      * Date From USR required
     C           #DB3DT    IFEQ *ZERO                      IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9932  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      * Date To   USR required
     C           #DB4DT    IFEQ *ZERO                      IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9933  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      * Receiving Rpt Type    USR required
     C           #DNOST    IFEQ *BLANK                     IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9934  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      *================================================================
     CSR         DBEXIT    ENDSR
      /EJECT
     CSR         MALDSC    BEGSR
      *================================================================
      * Load screen from passed parameters
      *================================================================
     C                     MOVELP1J8NB    #PJ8NB           Oms Warehouse C
     C                     MOVELP1C8CD    #PC8CD           Oms SalesPerson
     C                     MOVELP1G8ST    #PG8ST           Oms Allow Multi
     C                     MOVELP1G9ST    #PG9ST           Oms Default Pri
     C                     MOVELP1EVTX    #PEVTX           Oms System Valu
     C                     MOVELP1HAST    #PHAST           Oms Access Deni
     C                     MOVELP2ETTX    #PETTX           PRT Description
     C                     MOVELP2ACVN    #PACVN           PRT Printer Dev
     C                     MOVELP2AKST    #PAKST           PRT Hold Output
     C                     MOVELP2AMST    #PAMST           PRT Save Output
     C                     Z-ADDP2AKNB    #PAKNB           PRT Copies
     C                     MOVELP2ALST    #PALST           PRT Night Queue
     C                     MOVELP2AIVN    #PAIVN           PRT Night Queue
     C                     MOVELP2C7CD    #PC7CD           Oms Application
     C                     MOVEL*BLANK    #DLLST           TH Hog Class Ty
     C                     MOVEL*BLANK    #DKKTX           Description 30
     C                     Z-ADD*ZERO     #1BSNB           Next Buy Order
     C                     Z-ADD*ZERO     #1B1DT           Current Kill Da
     C                     Z-ADD*ZERO     #1B2DT           Next Kill Date
     C                     Z-ADD*ZERO     #1H4NB           Last Drive Card
     C                     Z-ADD*ZERO     #1K3NB           Last Tattoo Nbr
     C                     Z-ADD*ZERO     #1CDDT           Current Product
     C                     Z-ADD*ZERO     #1CEDT           Next Production
     C                     MOVEL*BLANK    #1AAVN           RS User Changed
     C                     Z-ADD*ZERO     #1AADT           RS Date Changed
     C                     Z-ADD*ZERO     #1AMTM           RS Time Changed
     C                     MOVEL*BLANK    #1AJST           RS Record Statu
     C                     MOVEL*BLANK    #1AHVN           RS Job
     C                     MOVEL*BLANK    #1AGVN           RS Program
     C                     MOVEL*BLANK    #1ABVN           RS User Added
     C                     Z-ADD*ZERO     #1ABDT           RS Date Added
     C                     Z-ADD*ZERO     #1ABTM           RS Time Added
     C                     Z-ADDP1HONB    #1HONB           CC Company Numb
     C                     MOVELP1EUTX    #PEUTX           Oms Name
     C                     Z-ADD*ZERO     #DB3DT           Date From USR
      * Clear external version also
     C                     Z-ADD*ZERO     VDB3DT
     C                     Z-ADD*ZERO     #DB4DT           Date To   USR
      * Clear external version also
     C                     Z-ADD*ZERO     VDB4DT
     C                     MOVEL*BLANK    #DNOST           Receiving Rpt T
     C                     MOVEL*BLANK    #DJJTX           Report Type Des
     C                     MOVEL*BLANK    #DAACD           SR Source Code
     C                     MOVEL*BLANK    #DELT1           SR Description
     C                     MOVEL*BLANK    #DIXST           SR Type
     C                     MOVEL*BLANK    #DEETX           Int/External De
     C                     MOVEL*BLANK    #DLIST           TH Schedule Kil
     C                     MOVEL*BLANK    #DFSTX           Shift Descripti
     C                     Z-ADD*ZERO     #DETNB           Farm Site USR
     C                     MOVEL*BLANK    #DKQTX           Farm site Name
     C                     MOVEL*BLANK    #DABCD           PD Producer Cod
     C                     MOVEL*BLANK    #DAGTX           PD Name
     C                     MOVEL*BLANK    #DXYST           Load Type USR
      * CALC: Screen function fields
      * DTL.Int/External Desc Usr = Condition name of DTL.SR Type
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1121482   Y2LSNO  70       List number
     C                     PARM #DIXST    W0INVL 25        SR Type
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DEETX    PARM           W0CNNM 25        Int/External De
      *
      * DTL.Report Type Desc Usr = Condition name of DTL.Receiving Rpt Ty
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1183672   Y2LSNO  70       List number
     C                     PARM #DNOST    W0INVL 25        Receiving Rpt T
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DJJTX    PARM           W0CNNM 25        Report Type Des
      *
      * Validate farm site selection
      * CASE: DTL.Farm Site USR NE WRK.Zero USR
     C           #DETNB    IFNE WUE9NB                     *IF
      * Val HPS Farm Site     UP - STR HPS Interface  * 
     C                     CALL 'HP256'                90  Val HPS Farm Si
     C           WULMST    PARM WULMST    WQ0029  7        Return Code USR
     C                     PARM #DETNB    WQ0030  50       HRH Farm Site
     C                     PARM WUOCTX    WQ0031  5        Farm Site Prod
     C           #DKQTX    PARM *BLANK    WQ0032 25        Farm site Name
     C                     PARM *BLANK    WQ0033 20        MTech Farm Site
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'HP256'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     9938  *
     C                     END
      * CASE: DTL.Farm site Name f/ HPS USR EQ WRK.Blank USR
     C           #DKQTX    IFEQ WUCRTX                     *IF
      * Setup message data for message
     C                     Z-ADD#DETNB    ZA0025           Farm Site USR
      * Send message 'Farm Site Invalid.'
     C                     MOVEL'PRK0688' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9938  *
      *
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    #DKQTX           Farm site Name
     C                     END                             *FI
      * E11245 JJH 07/20/17 - Display SR Source Code Description
     C                     MOVEL*BLANK    #DELT1           SR Description
      * SR Description DRV
      * Rtv Source Desc       RT - Source  * 
     C                     EXSR SDRVGN
      * USER: Load screen
      * CASE: WRK.First Time Flag Usr EQ WRK.Blank USR
     C           WUHBST    IFEQ WUCRTX                     *IF
     C                     Z-ADDWUHONB    #1HONB           CC Company Numb
     C                     MOVEL'Y'       WUHJST           Display Print P
     C                     MOVEL'Y'       WUHBST           First Time Flag
     C                     MOVEL'D'       #DNOST           Receiving Rpt T
      * DTL.Report Type Desc Usr = Condition name of DTL.Receiving Rpt Ty
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1183672   Y2LSNO  70       List number
     C                     PARM #DNOST    W0INVL 25        Receiving Rpt T
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DJJTX    PARM           W0CNNM 25        Report Type Des
      *
     C                     END                             *FI
      * 5/07/19 JBB E14956 - Validate Company Number
      * Validation moved to Validate fields user point
      *================================================================
     CSR         MAEXIT    ENDSR
      /EJECT
     CSR         MNCV#1    BEGSR
      *================================================================
      * Convert fields into external form
      *================================================================
      * Convert Date From USR to display format
      * Convert date
     C           1000000   ADD  #DB3DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VDB3DT
      * Convert Date To   USR to display format
      * Convert date
     C           1000000   ADD  #DB4DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VDB4DT
      *================================================================
     CSR         MNEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Val Prod Existance    RT - Producer  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WAABCD           PD Producer Cod
      * Setup key
     C                     MOVEL#DABCD    WAABCD           PD Producer Cod
      * Establish starting position
     C           KRSSA     CHAIN@ACREAI              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0009' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    #DAGTX           PD Name
     C                     MOVEL*BLANK    YL0001           Record Found US
     C                     MOVEL'N'       YL0001           Record Found US
     C                     GOTO SAEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWAAGTX    #DAGTX           PD Name
     C                     MOVEL'Y'       YL0001           Record Found US
     C                     ENDIF
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * Val Source-2          RT - Source  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WBAACD           SR Source Code
      * Setup key
     C                     MOVEL#DAACD    WBAACD           SR Source Code
      * Establish starting position
     C           KRSSB     CHAIN@AAREAC              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0005' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'N'       YL0001           Record Found US
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL'Y'       YL0001           Record Found US
     C                     ENDIF
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * Rtv Source Desc       RT - Source  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           WBAACD           SR Source Code
      * Setup key
     C                     MOVEL#DAACD    WBAACD           SR Source Code
      * Establish starting position
     C           KRSSC     CHAIN@AAREAC              90    *
      * Data record not found
     C   90                MOVEL'PRK0005' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWBAFTX    #DELT1           SR Description
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * Rtv Source Desc       RT - Source  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           WBAACD           SR Source Code
      * Setup key
     C                     MOVEL#DAACD    WBAACD           SR Source Code
      * Establish starting position
     C           KRSSD     CHAIN@AAREAC              90    *
      * Data record not found
     C   90                MOVEL'PRK0005' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWBAFTX    #DELT1           SR Description
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Modifications and Comments
      *================================================================
      * E15489 JBB  9/18/19 - Limit Kill Date Range
      * - Limit Kill Date range to 2 years
      * - Add From Date and To Date relationship checking.  If From Date
      *   is greater than To Date, send error message.
      * E50577 JJH 07/24/19 - Load Type conditions from 2D, 3D, and 4D
      * - Recompile only, no logic changes
      * E11245 JJH 07/20/17 - Receiving Report Modifications
      * - Add Selection by Source Code
      * ELDTYPE JBB 10/26/17 - Add Load Type to screen
      * - Added Load Type User to screen as a promptable field.
      * E14956 JBB  5/07/19 - Validate Company Number on screen
      * - The company number validation is currently performed in the
      *   User: Load.  It needs to be under the Validate Fields user
      *   point.
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         VACKRL    BEGSR
      *================================================================
      * Select existing record
      *================================================================
      * Name search required?
     C           YPMTFD    IFEQ '#1HONB'
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DTL) #1HONB' defaulted for 'CC Company Number'.
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DTL) #1BSNB' defaulted for 'Next Buy Order Number'.
      * Field '(DTL) #1B1DT' defaulted for 'Current Kill Date'.
      * Field '(DTL) #1B2DT' defaulted for 'Next Kill Date'.
      * Field '(DTL) #1H4NB' defaulted for 'Last Drive Card Number'.
     C                     CALL 'PKLFSRR'              90  Sel Company Con
     C                     PARM *BLANK    W0RTN   7
     C           #1HONB    PARM #1HONB    WQ0019  30       CC Company Numb
     C           #1BSNB    PARM *ZERO     WQ0020  70       Next Buy Order
     C           #1B1DT    PARM *ZERO     WQ0021  70       Current Kill Da
     C           #1B2DT    PARM *ZERO     WQ0022  70       Next Kill Date
     C           #1H4NB    PARM *ZERO     WQ0023  30       Last Drive Card
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PKLFSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     9931  *
     C                     END
      *
     C           #1HONB    IFNE *ZERO                      CC Company Numb
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *================================================================
     CSR         VAEXIT    ENDSR
      /EJECT
     CSR         XDAG1     BEGSR
      *================================================================
      * Prepare parameters to calculate Date Increment
      *================================================================
     C           XDURR     IFLT 0
      * Negative date increment
     C                     Z-ADD-1        XDWK2   60
     C                     ELSE
      * Positive date increment
     C                     Z-ADD1         XDWK2
     C                     ENDIF
     C                     MULT XDWK2     XDURR
      * Refresh the length of updated month (returned in XDWK1).
     C                     Z-ADDXDINDT    XDINT2
     C                     EXSR XDMNH
     C           XDINDD    IFEQ XDWK1
      * Save the start day
     C                     Z-ADD0         XDINDD
     C                     ENDIF
     C                     Z-ADD0         XDINT2
     C                     Z-ADD0         XDIMDT
     C                     MOVEL*BLANK    W0RTN   7
      *================================================================
     CSR         XDAG1E    ENDSR
      /EJECT
     CSR         XDAG2     BEGSR
      *================================================================
      * General calculations driven by Increment Mask
      *================================================================
      * Extract days
     C           XDIMDD    IFEQ 1
     C                     DIV  100       XDURR   80
     C                     MVR            XDIND2
     C                     ENDIF
      * Extract months
     C           XDIMMM    IFEQ 1
     C                     DIV  100       XDURR   80
     C                     MVR            XDINM2
     C                     ENDIF
      * Extract years
     C           XDIMYY    IFEQ 1
     C                     DIV  1000      XDURR   80
     C                     MVR            XDINY2
     C                     ENDIF
     C           XDURR     IFNE 0
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     ENDIF
      * Normalize month increment
     C           XDINM2    DIV  12        XDURR   80
     C                     MVR            XDINM2
     C                     ADD  XDURR     XDINY2
      * Apply year increment
     C                     MULT XDWK2     XDINY2
     C                     ADD  XDINYY    XDINY2
      * Apply month increment
     C                     MULT XDWK2     XDINM2
     C                     ADD  XDINMM    XDINM2
      * Normalize updated month
     C                     EXSR XDNZM
     C           XDINDD    IFGT XDWK1
     C           XDINDD    OREQ 0
      * Restore the start day
     C                     Z-ADDXDWK1     XDINDD
     C                     ENDIF
      * Apply day increment
     C                     MULT XDWK2     XDIND2
     C           XDINDD    ADD  XDIND2    XDURR
     C                     Z-ADD0         XDIND2
      * Normalize day increment
     C           XDIND2    DOWLE0
     C           XDURR     IFEQ 0
     C                     ADD  XDWK2     XDINM2
      * Normalize updated month
     C                     EXSR XDNZM
     C                     Z-ADDXDWK1     XDURR
     C                     ENDIF
     C           XDURR     IFLT 0
     C                     SUB  1         XDINM2
      * Normalize updated month
     C                     EXSR XDNZM
     C                     ADD  XDWK1     XDURR
     C                     ELSE
     C           XDURR     IFGT XDWK1
     C                     SUB  XDWK1     XDURR
     C                     ADD  1         XDINM2
      * Normalize updated month
     C                     EXSR XDNZM
     C                     ELSE
     C                     Z-ADDXDURR     XDIND2
     C                     ENDIF
     C                     ENDIF
     C                     ENDDO
      * Check updated year
     C           XDINY2    IFGE 400
     C           XDINY2    ORLE 0
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     ENDIF
     C           W0RTN     IFEQ 'Y2U0006'
     C                     Z-ADD0         XDINDT
     C                     ELSE
     C                     Z-ADDXDINT2    XDINDT
     C                     ENDIF
      *================================================================
     CSR         XDAG2E    ENDSR
      /EJECT
     CSR         XDAYR     BEGSR
      *================================================================
      * Calculate duration, *YEARS
      *================================================================
      * Check and adjust End Of Month dates, if any.
     C                     EXSR XDAG1
      * Define increment Mask.
     C                     Z-ADD1         XDIMYY
      * Initiate general DATE INCREMENT calculations.
     C                     EXSR XDAG2
      *================================================================
     CSR         XDAYRE    ENDSR
      /EJECT
     CSR         XDCK2     BEGSR
      *================================================================
      * Validate external date format
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
     C                     Z-ADD*ZERO     XDINDT
      * If external date is zero, do not check
     C           XDEXDT    CABEQ*ZERO     XDCK2E
      *................................................................
      * Map external to internal according to date format
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDEX02    XDINDD           DD
     C                     Z-ADDXDEX03    XDINMM           MM
     C                     Z-ADDXDEX04    XDINYY           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDEX02    XDINMM           MM
     C                     Z-ADDXDEX03    XDINDD           DD
     C                     Z-ADDXDEX04    XDINYY           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDEX02    XDINYY           YY
     C                     Z-ADDXDEX03    XDINMM           MM
     C                     Z-ADDXDEX04    XDINDD           DD
     C                     END
     C                     END
      * If YY prior to the 'cut-off' year treat as 20YY.
     C           XDINYY    IFLT XOFFYY
     C                     ADD  100       XDINYY
     C                     END
     C           YPMTFD    CABNE*BLANK    XDCK2E
      *................................................................
      * Check months in range 1 to 12
     C           XDINMM    CABLT1         XDCK2M
     C           XDINMM    CABGT12        XDCK2M
      *................................................................
      * Check days in range 1 to maximum for month
     C           XDINDD    CABLT1         XDCK2M
     C           XDINDD    CABGT@XD,XDINMMXDCK2M
      *................................................................
      * Special case: leap year
     C           XDINMM    IFEQ 2
     C           XDINYY    IFNE *ZERO
     C           XDINYY    ANDNE200
     C           XDINYY    DIV  4         XDWK1   80
     C                     MVR            XDWK1
     C                     ELSE
     C                     Z-ADD1         XDWK1
     C                     END
      * Year is not leap
     C           XDWK1     IFNE *ZERO
     C           XDINDD    CABGT28        XDCK2M
     C                     END
     C                     END
     C                     GOTO XDCK2E
      *................................................................
      * Send error message
     C           XDCK2M    TAG
      * Send message '*Invalid date'
     C                     MOVEL'Y2U0006' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     MOVEL'Y2U0006' W0RTN
      * Disable time portion if timestamp is validated
     C                     Z-ADD*ZERO     XTTIM
      *================================================================
     CSR         XDCK2E    ENDSR
      /EJECT
     CSR         XDMNH     BEGSR
      *================================================================
      * Find length(XDWK1) in days for the month passed in XDIN2TS
      *================================================================
     C           XDINM2    IFEQ 4
     C           XDINM2    OREQ 6
     C           XDINM2    OREQ 9
     C           XDINM2    OREQ 11
     C                     Z-ADD30        XDWK1   80
     C                     ELSE
     C                     Z-ADD31        XDWK1
     C                     END
     C           XDINM2    IFEQ 2
      * Determine February length
     C           XDINY2    IFEQ 300
     C           XDINY2    OREQ 100
     C                     Z-ADD28        XDWK1
     C                     ELSE
     C           XDINY2    DIV  4         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     Z-ADD29        XDWK1
     C                     ELSE
     C                     Z-ADD28        XDWK1
     C                     END
     C                     END
     C                     END
      *================================================================
     CSR         XDMNHE    ENDSR
      /EJECT
     CSR         XDNZM     BEGSR
      *================================================================
      * Normalize days
      *================================================================
     C           XDINM2    IFLT 1
     C                     ADD  12        XDINM2
     C                     SUB  1         XDINY2
     C                     ENDIF
     C           XDINM2    IFGT 12
     C                     SUB  12        XDINM2
     C                     ADD  1         XDINY2
     C                     ENDIF
      * Refresh the length of updated month (returned in XDWK1).
     C                     EXSR XDMNH
      *================================================================
     CSR         XDNZME    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
     C                     MOVE *BLANK    W0CFL
     C                     Z-ADD1         F       30
     C           ZINPOS    LOKUPW0END,F              96  96LE
     C           *IN96     IFEQ '1'
     C           ZINPOS    ANDGEW0BEG,F
     C                     MOVELW0NAM,F   W0CFL
     C                     ENDIF
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZDVPMT    BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                     MOVEL*BLANK    YPMTFD 10
     C                     Z-ADD*ZERO     YAFSCH  40
     C                     Z-ADD*ZERO     YPMRRN  40
      *
     C           *IN04     IFEQ '1'
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50
     C                     MVR            ZHCSCL  50
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
     C           ZHCSRW    IFEQ 004
     C           ZHCSCL    ANDGE035
     C           ZHCSCL    ANDLE037
     C           @#DFMT    ANDEQ'#RCDDTL1'
     C                     MOVEL'#1HONB'  YPMTFD           CC Company Numb
     C                     END
      *
     C           ZHCSRW    IFEQ 007
     C           ZHCSCL    ANDEQ035
     C           @#DFMT    ANDEQ'#RCDDTL1'
     C                     MOVEL'#DNOST'  YPMTFD           Receiving Rpt T
     C                     END
      *
     C           ZHCSRW    IFEQ 012
     C           ZHCSCL    ANDEQ035
     C           @#DFMT    ANDEQ'#RCDDTL1'
     C                     MOVEL'#DIXST'  YPMTFD           SR Type
     C                     END
      *
     C           ZHCSRW    IFEQ 013
     C           ZHCSCL    ANDEQ035
     C           @#DFMT    ANDEQ'#RCDDTL1'
     C                     MOVEL'#DLIST'  YPMTFD           TH Schedule Kil
     C                     END
      *
     C           ZHCSRW    IFEQ 016
     C           ZHCSCL    ANDGE035
     C           ZHCSCL    ANDLE036
     C           @#DFMT    ANDEQ'#RCDDTL1'
     C                     MOVEL'#DXYST'  YPMTFD           Load Type USR
     C                     END
      *
     C           YPMTFD    IFEQ *BLANK
      * Error if user defined prompting is not specified.
     C           W0PMT     IFEQ 'N'
     C                     MOVEL'*NONE'   YPMTFD
     C                     MOVEL'Y'       W0HLP   1
     C                     MOVEL'Y'       ZAFSMS
      * Send error message.
     C                     MOVEL'Y2U0101' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
     C                     END
      *================================================================
     CSR         ZDEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*CSRLOC' YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM *ZERO     YYLGCT  50       # of grps
     C                     PARM *BLANK    YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Copy any undisplayed messages back to caller
     C                     CALL 'Y2CPMSC'
     C                     PARM           ##PGM
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     MOVEL*BLANK    P1J8NB           Oms Warehouse C
     C                     Z-ADD*ZERO     P1HONB           CC Company Numb
     C                     MOVEL*BLANK    P1C8CD           Oms SalesPerson
     C                     MOVEL*BLANK    P1G8ST           Oms Allow Multi
     C                     MOVEL*BLANK    P1G9ST           Oms Default Pri
     C                     MOVEL*BLANK    P1EUTX           Oms Name
     C                     MOVEL*BLANK    P1EVTX           Oms System Valu
     C                     MOVEL*BLANK    P1HAST           Oms Access Deni
     C                     MOVEL*BLANK    P2ETTX           PRT Description
     C                     MOVEL*BLANK    P2ACVN           PRT Printer Dev
     C                     MOVEL*BLANK    P2AKST           PRT Hold Output
     C                     MOVEL*BLANK    P2AMST           PRT Save Output
     C                     Z-ADD*ZERO     P2AKNB           PRT Copies
     C                     MOVEL*BLANK    P2ALST           PRT Night Queue
     C                     MOVEL*BLANK    P2AIVN           PRT Night Queue
     C                     MOVEL*BLANK    P2C7CD           Oms Application
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field Company Number Alpha Usr
     C                     MOVEL*BLANK    WUC3CD  3
      * Define work field Date Alpha USR
     C                     MOVEL*BLANK    WUCZCD  7
      * Define work field Date Alpha Usr 2
     C                     MOVEL*BLANK    WUDHCD  7
      * Define work field Blank USR
     C                     MOVEL*BLANK    WUCRTX 80
      * Define work field Farm Site Alpha       USR
     C                     MOVEL*BLANK    WUK6TX  5
      * Obtain default message file
     C           *NAMVAR   DEFN PKMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field Invalid Y/N USR
     C                     MOVEL*BLANK    WUG3ST  1
      * Define work field Blank Usr 1 fld Usr
     C                     MOVEL*BLANK    WUIXTX  1
      * Define work field Return Code USR
     C                     MOVEL*BLANK    WULMST  7
      * Define work field Zero USR
     C                     Z-ADD*ZERO     WUE9NB  10
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAALNB           PD Production C
     C                     Z-ADD*ZERO     WAAATH           PD Std Delv Tim
     C                     Z-ADD*ZERO     WAAMNB           PD Std Truck Si
     C                     Z-ADD*ZERO     WAGCNB           PD VND Address
     C                     Z-ADD*ZERO     WAGJNB           PD EDI Trading
     C                     Z-ADD*ZERO     WAAADT           RS Date Changed
     C                     Z-ADD*ZERO     WAAMTM           RS Time Changed
     C                     Z-ADD*ZERO     WAABDT           RS Date Added
     C                     Z-ADD*ZERO     WAABTM           RS Time Added
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WBAADT           RS Date Changed
     C                     Z-ADD*ZERO     WBAMTM           RS Time Changed
     C                     Z-ADD*ZERO     WBABDT           RS Date Added
     C                     Z-ADD*ZERO     WBABTM           RS Time Added
      * Define work field Txt Field Not Needed
     C                     MOVEL*BLANK    WUOCTX 25
      * Define work field First Time Flag Usr
     C                     MOVEL*BLANK    WUHBST  1
      * Define work field CC Company Number
     C                     Z-ADD*ZERO     WUHONB  30
      * Define work field Display Print Prompt  Usr
     C                     MOVEL*BLANK    WUHJST  1
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'Y'       W0PMT   1
      * Define null work field Invalid Y/N USR
     C                     MOVEL*BLANK    YN0001  1
      * Define null work field MTech Farm Site Ref
     C                     MOVEL*BLANK    YN0002 20
      * Define local work field Record Found USR
     C                     MOVEL*BLANK    YL0001  1
      * Define local work field Date To   USR
     C                     Z-ADD*ZERO     YL0002  70
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      * Retrieve the 'cut-off' year YY: 19YY-1999,2000-20(YY-1).
     C           *NAMVAR   DEFN Y2CTOFF   XOFF
     C                     IN   XOFF
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   ##CMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      * Modifications and Comments
     C                     EXSR UASUBR                     Modifications a
      * Val Application/User  IF
      * Val Application/User  XF - STR Order Management Sys  * 
     C                     CALL 'PDGXXFR'              90  Val Application
     C                     PARM *BLANK    W0RTN   7
     C           P1J8NB    PARM *BLANK    WQ0034  3        Oms Warehouse C
     C           WUHONB    PARM *ZERO     WQ0035  30       CC Company Numb
     C                     PARM 'HPE'     WQ0036  6        Oms Application
     C           P1C8CD    PARM *BLANK    WQ0037  3        Oms SalesPerson
     C           P1G8ST    PARM *BLANK    WQ0038  1        Oms Allow Multi
     C           P1G9ST    PARM *BLANK    WQ0039 10        Oms Default Pri
     C           P1EUTX    PARM *BLANK    WQ0040 30        Oms Name
     C           P1EVTX    PARM *BLANK    WQ0041 40        Oms System Valu
     C           P1HAST    PARM *BLANK    WQ0042  1        Oms Access Deni
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDGXXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PAR.Oms Access Denied (Y/N) is Yes
     C           P1HAST    IFEQ 'Y'                        *IF
      * Send message 'Access Denied for User'
     C                     MOVEL'PRK0298' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * Mov ApplN to Company  US - STR User Source Functions  * 
     C***   MOVE USER SOURCE                      ***
     C                     MOVELP1EVTX    ##CMP
     C                     END                             *FI
      * CASE: PAR.Oms Access Denied (Y/N) is Yes
     C           P1HAST    IFEQ 'Y'                        *IF
     C                     MOVELW0RTN     P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
      * Load screen
     C                     EXSR MALDSC
      *================================================================
     CSR         ZZEXIT    ENDSR
** @XD
312931303130313130313031
** W0BEG
01059010680131501324018270183602851
02860031070311603363033720361903628
038750388404131
** W0END
01061010970132001329018270185002853
02884031070314003363034010362303652
038800391304132
** W0NAM
#1HONB    #PEUTX    VDB3DT    VDB4DT    #DNOST    #DJJTX    #DAACD
#DELT1    #DIXST    #DEETX    #DLIST    #DFSTX    #DETNB    #DKQTX
#DABCD    #DAGTX    #DXYST
** @CN
00001 Print Receiving Report
