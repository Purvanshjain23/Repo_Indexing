// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMOOEFR
// ?Date: 14.08.2025 Time: 03:43:38
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv and Center Hdg IF) TYPE(EXCINTFUN)                     AC1258539;
PARAMETER('SHP');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


// LCL.First Time Flag = CND.Yes
LCL.First_Time_Flag = 'Y';

//?USER: Initialize subfile header

CASE;

// IF LCL.First Time Flag is Yes
IF LCL.First_Time_Flag = 'Y';

MOVE *ALL (To: CTL From: PAR);

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(CTL.Company_Number);
PARAMETER(CTL.Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Description        RT) TYPE(RTVOBJ) FILE(PMCAREP)          AC1850788;
PARAMETER(CTL.Company_Number);
PARAMETER(CTL.COA_Bio_diesel_Fuel_Code);
PARAMETER(CTL.COA_Bio_dsl_Fuel_Cd_Descr);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Also if Batch is closed, prevent update of Property values
CASE;

// IF PAR.COA Batch Header Sts is Closed from shipping
IF PAR.COA_Batch_Header_Sts = 'C';

// LCL.USR Ship Y/N = CND.yes
LCL.USR_Ship_Y_N = 'Y';

// Send information message - 'COA Batch is Closed.'
MESSAGE(USR3873 *INFO);
MSGPARM(CTL.COA_Batch_Number);

ENDIF;

// LCL.First Time Flag = CND.NO
LCL.First_Time_Flag = 'N';

ENDIF;

//?USER: Change DBF record

EXECUTE FUNCTION(Chg COA Batch Detail  CH) TYPE(CHGOBJ) FILE(PMCDCPP)           AC1847456;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.COA_ULSD_Company_#);
PARAMETER(RCD.COA_Batch_Number);
PARAMETER(RCD.COA_Property);
PARAMETER(RCD.COA_Test);
PARAMETER(RCD.COA_Test_Method);
PARAMETER(RCD.COA_Unit_of_Measure);
PARAMETER(RCD.COA_Limit);
PARAMETER(RCD.COA_Limit_Max);
PARAMETER(RCD.COA_Print_Sequence);
PARAMETER(RCD.COA_Property_Value);
PARAMETER(RCD.COA_OMS_Item_Code);
PARAMETER(RCD.Sold_To_Customer_hpb_biod);
PARAMETER(RCD.COA_Footnote_Indicator);
PARAMETER(RCD.COA_Fuel_Desc2_Prop_Value);
PARAMETER(RCD.Record_Status);
PARAMETER(RCD.Create_Date);
PARAMETER(RCD.Create_Time);
PARAMETER(RCD.Create_User);
PARAMETER(RCD.Create_Program);
PARAMETER(RCD.Change_Date);
PARAMETER(RCD.Change_Time);
PARAMETER(RCD.Change_User);
PARAMETER(RCD.Change_Program);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Chg Date/Time      IF) TYPE(EXCINTFUN)                     AC1523476;
 PARAMETER(DB1.Change_Date);
 PARAMETER(DB1.Change_Time);
 PARAMETER(DB1.Change_User);
 PARAMETER(DB1.Change_Program);
 {
  //?Execute internal function

  // PAR.Change Date = JOB.*Job date
  PAR.Change_Date = JOB.*Job_date;

  // PAR.Change Time = JOB.*Job time
  PAR.Change_Time = JOB.*Job_time;

  // PAR.Change User = JOB.*USER
  PAR.Change_User = JOB.*USER;

  // PAR.Change Program = JOB.*PROGRAM
  PAR.Change_Program = JOB.*PROGRAM;

 }

}


//?USER: Exit program processing

EXECUTE FUNCTION(RTV Set prop comp flg  RT) TYPE(RTVOBJ) FILE(PMCDCPP)          AC1853008;
PARAMETER(CTL.Company_Number);
PARAMETER(CTL.COA_ULSD_Company_#);
PARAMETER(CTL.COA_Batch_Number);
{
 //?USER: Initialize routine

 // LCL.USR Zero Value = CND.No
 LCL.USR_Zero_Value = *BLANK;

 //?USER: Process Data record

 CASE;

 // IF DB1.COA Property Value Text is Not entered
 IF DB1.COA_Fuel_Desc2_Prop_Value = *BLANK;

 // LCL.USR Zero Value = CND.Yes
 LCL.USR_Zero_Value = 'Y';

 ENDIF;

 //?USER: Exit processing

 CASE;

 // IF LCL.USR Zero Value is Yes
 IF LCL.USR_Zero_Value = 'Y';

 // LCL.COA Batch Properties Cmpl = CND.No
 LCL.COA_Batch_Properties_Cmpl = 'N';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.COA Batch Properties Cmpl = CND.Yes
 LCL.COA_Batch_Properties_Cmpl = 'Y';

 ENDIF;

 EXECUTE FUNCTION(RTV for Upd Prop Comp  RT) TYPE(RTVOBJ) FILE(PMCCCPP)          AC1853010;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.COA_ULSD_Company_#);
 PARAMETER(DB1.COA_Batch_Number);
 PARAMETER(LCL.COA_Batch_Properties_Cmpl);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(CHG Change Record      CH) TYPE(CHGOBJ) FILE(PMCCCPP)          AC1851634;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.COA_ULSD_Company_#);
  PARAMETER(DB1.COA_Batch_Number);
  PARAMETER(DB1.COA_Active_Whse_Tank);
  PARAMETER(DB1.COA_Bio_diesel_Fuel_Code);
  PARAMETER(DB1.COA_Date_Open_for_Ship);
  PARAMETER(DB1.COA_Time_Open_for_Ship);
  PARAMETER(DB1.COA_Open_for_Ship_Inits);
  PARAMETER(DB1.COA_Date_Close_from_Ship);
  PARAMETER(DB1.COA_Time_Close_from_Ship);
  PARAMETER(DB1.COA_Close_from_Ship_Inits);
  PARAMETER(DB1.COA_Gallons_Used);
  PARAMETER(DB1.COA_Comment);
  PARAMETER(DB1.COA_Batch_Production_Date);
  PARAMETER(DB1.COA_Batch_Unused_Time);
  PARAMETER(DB1.COA_Specification);
  PARAMETER(DB1.COA_RFS_Program_ID);
  PARAMETER(DB1.COA_Batch_Header_Sts);
  PARAMETER(PAR.COA_Batch_Properties_Cmpl);
  PARAMETER(DB1.COA_Batch_Int_Ext_Company);
  PARAMETER(DB1.COA_Temperature_Loadout);
  PARAMETER(DB1.COA_Batch_Volume);
  PARAMETER(DB1.COA_Batch_Denaturant_Vol);
  PARAMETER(DB1.COA_RFS_Renew_Fuel_Code);
  PARAMETER(DB1.COA_RFS_Rnwbl_Feedstock);
  PARAMETER(DB1.COA_Batch_RIN);
  PARAMETER(DB1.COA_Batch_Export_Volume);
  PARAMETER(DB1.COA_Last_RIN_EEEEEEEE);
  PARAMETER(DB1.COA_Density_Loadout);
  PARAMETER(DB1.COA_Density_Reference);
  PARAMETER(DB1.COA_RIN_Equivalence_Valu#);
  PARAMETER(DB1.COA_Batch_Unused_Date);
  PARAMETER(DB1.RFS_Fuel_Code);
  PARAMETER(DB1.RFS_Process_Code);
  PARAMETER(DB1.RFS_Fuel_Category_Code);
  PARAMETER(DB1.COA_RIN_Equivalence_Valu);
  PARAMETER(DB1.COA_RIN_Quantity);
  PARAMETER(DB1.COA_ULSD_Facility_#);
  PARAMETER(DB1.COA_Co_Product_Code);
  PARAMETER(DB1.COA_Co_Product_Comment);
  PARAMETER(DB1.COA_Transaction_Comment);
  PARAMETER(DB1.COA_BH_RFS_Version_Nbr);
  PARAMETER(DB1.COA_BH_EMTS_Sts);
  PARAMETER(DB1.COA_BH_EMTS_Date_Sent);
  PARAMETER(DB1.COA_BH_EMTS_Time_Sent);
  PARAMETER(DB1.COA_Reviewed_By);
  PARAMETER(DB1.COA_BH_Equiv_Value_f_SEP);
  PARAMETER(DB1.COA_BH_Yield_Percent);
  PARAMETER(DB1.COA_BH_Unused_Cde);
  PARAMETER(DB1.COA_Sample_Date);
  PARAMETER(DB1.COA_Sample_Time);
  PARAMETER(DB1.COA_LIMS_ID);
  PARAMETER(DB1.RFS_Feedstock_Code_1);
  PARAMETER(DB1.COA_BH_Feedstck_Volume_1);
  PARAMETER(DB1.COA_BH_Feedstck_Measure_1);
  PARAMETER(DB1.COA_BH_Feedstck_Biomass_1);
  PARAMETER(DB1.COA_BH_Feedstck_Pct_Ord_1);
  PARAMETER(DB1.COA_BH_Feedstck_comment_1);
  PARAMETER(DB1.RFS_Feedstock_Code_2);
  PARAMETER(DB1.COA_BH_Feedstck_Volume_2);
  PARAMETER(DB1.COA_BH_Feedstck_Measure_2);
  PARAMETER(DB1.COA_BH_Feedstck_Biomass_2);
  PARAMETER(DB1.COA_BH_Feedstck_Pct_Ord_2);
  PARAMETER(DB1.COA_BH_Feedstck_Comment_2);
  PARAMETER(DB1.RFS_Feedstock_Code_3);
  PARAMETER(DB1.COA_BH_Feedstck_Volume_3);
  PARAMETER(DB1.COA_BH_Feedstck_Measure_3);
  PARAMETER(DB1.COA_BH_Feedstck_Biomass_3);
  PARAMETER(DB1.cOA_BH_Feedstck_Pct_Ord_3);
  PARAMETER(DB1.COA_BH_Feedstck_Comment_3);
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Create_Date);
  PARAMETER(DB1.Create_Time);
  PARAMETER(DB1.Create_User);
  PARAMETER(DB1.Create_Program);
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Set Chg Date/Time      IF) TYPE(EXCINTFUN)                     AC1523476;
   PARAMETER(DB1.Change_Date);
   PARAMETER(DB1.Change_Time);
   PARAMETER(DB1.Change_User);
   PARAMETER(DB1.Change_Program);
   {
    //?Execute internal function

    // PAR.Change Date = JOB.*Job date
    PAR.Change_Date = JOB.*Job_date;

    // PAR.Change Time = JOB.*Job time
    PAR.Change_Time = JOB.*Job_time;

    // PAR.Change User = JOB.*USER
    PAR.Change_User = JOB.*USER;

    // PAR.Change Program = JOB.*PROGRAM
    PAR.Change_Program = JOB.*PROGRAM;

   }

  }

 }

}


