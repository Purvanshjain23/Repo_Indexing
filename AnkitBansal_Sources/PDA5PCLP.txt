/********************************************************************/
/*                                                                  */
/*  SYNOPSIS - CL PROGRAM FOR PURGING INVENTORY FILES               */
/*             THIS CL IS CALLED FROM THE JOB SCHEDULE              */
/*             TO PURGE THE PRIMAL DETAIL.  THIS RUNS               */
/*             ON SUNDAY AND THE PURGE DATA WILL BE SAVED           */
/*             TO TAPE ON MONDAY.                                   */
/*                                                                  */
/*  SYSTEM    - INVENTORY                                           */
/*  DATE      -  7/16/97                                            */
/*                                                                  */
/* STEP 1:  CREATE A DUPLICATE OBJECT OF THE FILE BEING PURGED IN   */
/*          THE SAME ENVIRONMENT.  (EG.   CAB1REPPRG)               */
/*          THIS FILE WILL BE SAVED TO TAPE.                        */
/*                                                                  */
/*          CHANGE CAB1REPPRG TO ALLOW MULTIPLE MEMBERS             */
/*                                                                  */
/* STEP 2:  CREATE A PROGRAM THAT WILL READ THE PURGE FILE AND      */
/*          CREATE A RECORD IN QTEMP THEN DELETE THE RECORD FROM    */
/*          THE PURGE FILE.                                         */
/*                                                                  */
/* STEP 3:  CREATE A CL PROGRAM                                     */
/*      -   CREATE MEMBER IN CAB1REPPRG (ZYYMMDD)                   */
/*      -   BACKUP FILE BEING PURGED TO MEMBER CAB1REP              */
/*      -   CREATE QTEMP ENVIRONMENT                                */
/*      -   CALL PURGE PROGRAM                                      */
/*      -   COPY THE RECORDS CREATED IN QTEMP TO THE FILE BEING     */
/*          SAVED TO TAPE.                                          */
/*      -   CHANGE THE MEMBER DESCRIPTION WITH THE FROM AND TO      */
/*          DATE FROM THE PURGE PROGRAM.                            */
/*      -   REORGANIZE THE FILE THAT IS BEING PURGED                */
/*                                                                  */
/********************************************************************/
/*  Modification History                                            */
/*                                                                  */
/*                                                                  */
/********************************************************************/
/*      PARAMETERS RECEIVED:                                        */
/*        &LIB        THE LIBRARY TO PROCESS                        */
/*        &COMPANYN   THE COMPANY TO PROCESS                        */
/*                                                                  */
/********************************************************************/
 PDA5PCLP:   PGM  PARM(&LIB &COMPANYN)

        DCL    &LIB         *CHAR  10
        DCL    &COMPANYN    *DEC
        DCL    &COMPANY     *DEC   (3 0)

/* FILES BEING PURGED */
             DCL        VAR(&FILE1) TYPE(*CHAR) LEN(10) +
                          VALUE('CAB0REP   ')
             DCL        VAR(&FILE2) TYPE(*CHAR) LEN(10) +
                          VALUE('CAB1REP   ')
             DCL        VAR(&FILE3) TYPE(*CHAR) LEN(10) +
                          VALUE('CAB7CPP   ')
             DCL        VAR(&FILE4) TYPE(*CHAR) LEN(10) +
                          VALUE('PDKZCPP   ')

/* FILE BEING SAVED TO TAPE */
             DCL        VAR(&PRGFILE1) TYPE(*CHAR) LEN(10) +
                          VALUE('CAB0REPPRG')
             DCL        VAR(&PRGFILE2) TYPE(*CHAR) LEN(10) +
                          VALUE('CAB1REPPRG')
             DCL        VAR(&PRGFILE3) TYPE(*CHAR) LEN(10) +
                          VALUE('CAB7CPPPRG')
             DCL        VAR(&PRGFILE4) TYPE(*CHAR) LEN(10) +
                          VALUE('PDKZCPPPRG')

/* MEMBER BEING SAVED TO TAPE */
             DCL        VAR(&PRGMBR) TYPE(*CHAR) LEN(10)

/* MEMBER NAMING VARIABLES    */
             DCL        VAR(&JDATE)  TYPE(*CHAR) LEN(6)
             DCL        VAR(&JYEAR)  TYPE(*CHAR) LEN(2)
             DCL        VAR(&JMONTH) TYPE(*CHAR) LEN(2)
             DCL        VAR(&JDAY)   TYPE(*CHAR) LEN(2)
             DCL        VAR(&MDSC)   TYPE(*CHAR) LEN(30)

/* MESSAGE VARIABLES          */
             DCL        VAR(&MSGT)   TYPE(*CHAR) LEN(50)
             DCL        VAR(&CURFIL) TYPE(*CHAR) LEN(10)

/*-----------------------------------------------------------------*/
/*                     INITIALIZATION                              */
/*-----------------------------------------------------------------*/

/* SET UP VARIABLES */
             CHGVAR     VAR(&COMPANY) VALUE(&COMPANYN)

/* CREATE NEW MEMBER IN THE FILE FOR SAVING TO TAPE */
             RTVJOBA    DATE(&JDATE)
             CHGVAR     VAR(&JYEAR) VALUE(%SST(&JDATE 5 2))
             CHGVAR     VAR(&JMONTH) VALUE(%SST(&JDATE 1 2))
             CHGVAR     VAR(&JDAY) VALUE(%SST(&JDATE 3 2))

             CHGVAR     VAR(&PRGMBR) VALUE('Z')
             CHGVAR     VAR(%SST(&PRGMBR 2 2)) VALUE(&JYEAR)
             CHGVAR     VAR(%SST(&PRGMBR 4 2)) VALUE(&JMONTH)
             CHGVAR     VAR(%SST(&PRGMBR 6 2)) VALUE(&JDAY)

             CHGVAR     VAR(&CURFIL) VALUE(&PRGFILE1)
             ADDPFM     FILE(&PRGFILE1) MBR(&PRGMBR)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(ADDPFM))

             CHGVAR     VAR(&CURFIL) VALUE(&PRGFILE2)
             ADDPFM     FILE(&PRGFILE2) MBR(&PRGMBR)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(ADDPFM))

             CHGVAR     VAR(&CURFIL) VALUE(&PRGFILE3)
             ADDPFM     FILE(&PRGFILE3) MBR(&PRGMBR)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(ADDPFM))

             CHGVAR     VAR(&CURFIL) VALUE(&PRGFILE4)
             ADDPFM     FILE(&PRGFILE4) MBR(&PRGMBR)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(ADDPFM))

/* BACKUP FILES BEING PURGED                                      */
             CHGVAR     VAR(&CURFIL) VALUE(&FILE1)
             CPYF       FROMFILE(&FILE1) TOFILE(&PRGFILE1) +
                          MBROPT(*REPLACE)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(CPYF))

             CHGVAR     VAR(&CURFIL) VALUE(&FILE2)
             CPYF       FROMFILE(&FILE2) TOFILE(&PRGFILE2) +
                          MBROPT(*REPLACE)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(CPYF))

             CHGVAR     VAR(&CURFIL) VALUE(&FILE3)
             CPYF       FROMFILE(&FILE3) TOFILE(&PRGFILE3) +
                          MBROPT(*REPLACE)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(CPYF))

             CHGVAR     VAR(&CURFIL) VALUE(&FILE4)
             CPYF       FROMFILE(&FILE4) TOFILE(&PRGFILE4) +
                          MBROPT(*REPLACE)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(CPYF))

/* CREATE QTEMP ENVIRONMENT                                        */
             CHGVAR     VAR(&CURFIL) VALUE(&FILE1)
             CRTDUPOBJ  OBJ(&FILE1) FROMLIB(&LIB) OBJTYPE(*FILE) +
                          TOLIB(QTEMP)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(CRTDUP))
             CHGVAR     VAR(&CURFIL) VALUE('CAB0REW0')
             CRTDUPOBJ  OBJ(CAB0REW0) FROMLIB(&LIB) OBJTYPE(*FILE) +
                          TOLIB(QTEMP)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(CRTDUP))

             CHGVAR     VAR(&CURFIL) VALUE(&FILE2)
             CRTDUPOBJ  OBJ(&FILE2) FROMLIB(&LIB) OBJTYPE(*FILE) +
                          TOLIB(QTEMP)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(CRTDUP))
             CHGVAR     VAR(&CURFIL) VALUE('CAB1REW1')
             CRTDUPOBJ  OBJ(CAB1REW1) FROMLIB(&LIB) OBJTYPE(*FILE) +
                          TOLIB(QTEMP)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(CRTDUP))

             CHGVAR     VAR(&CURFIL) VALUE(&FILE3)
             CRTDUPOBJ  OBJ(&FILE3) FROMLIB(&LIB) OBJTYPE(*FILE) +
                          TOLIB(QTEMP)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(CRTDUP))
             CHGVAR     VAR(&CURFIL) VALUE('CAB7CPW0')
             CRTDUPOBJ  OBJ(CAB7CPW0) FROMLIB(&LIB) OBJTYPE(*FILE) +
                          TOLIB(QTEMP)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(CRTDUP))

             CHGVAR     VAR(&CURFIL) VALUE(&FILE4)
             CRTDUPOBJ  OBJ(&FILE4) FROMLIB(&LIB) OBJTYPE(*FILE) +
                          TOLIB(QTEMP)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(CRTDUP))
             CHGVAR     VAR(&CURFIL) VALUE('PDKZCPW0')
             CRTDUPOBJ  OBJ(PDKZCPW0) FROMLIB(&LIB) OBJTYPE(*FILE) +
                          TOLIB(QTEMP)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(CRTDUP))

/*******************************************************************/
/*                 PURGE PROGRAM                                   */
/*******************************************************************/
             CALL       PGM(PDA5XFR) PARM('' &COMPANY)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(CALL))

/*  COPY QTEMP TO THE NEW MEMBER CREATED FOR SAVING TO TAPE       */
             CHGVAR     VAR(&CURFIL) VALUE(&PRGFILE1)
             CPYF       FROMFILE(QTEMP/&FILE1) TOFILE(&PRGFILE1) +
                          FROMMBR(*FIRST) TOMBR(&PRGMBR) MBROPT(*ADD)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(CPYF))

             CHGVAR     VAR(&CURFIL) VALUE(&PRGFILE2)
             CPYF       FROMFILE(QTEMP/&FILE2) TOFILE(&PRGFILE2) +
                          FROMMBR(*FIRST) TOMBR(&PRGMBR) MBROPT(*ADD)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(CPYF))

             CHGVAR     VAR(&CURFIL) VALUE(&PRGFILE3)
             CPYF       FROMFILE(QTEMP/&FILE3) TOFILE(&PRGFILE3) +
                          FROMMBR(*FIRST) TOMBR(&PRGMBR) MBROPT(*ADD)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(CPYF))

             CHGVAR     VAR(&CURFIL) VALUE(&PRGFILE4)
             CPYF       FROMFILE(QTEMP/&FILE4) TOFILE(&PRGFILE4) +
                          FROMMBR(*FIRST) TOMBR(&PRGMBR) MBROPT(*ADD)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(CPYF))

/*  CHANGE MEMBER DESCRIPTIONS                                    */
             CHGVAR     VAR(&MDSC) VALUE('PURGE' *BCAT &PRGMBR)
             CHGVAR     VAR(&CURFIL) VALUE(&PRGFILE1)
             CHGPFM     FILE(&PRGFILE1) MBR(&PRGMBR) TEXT(&MDSC)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(CHGPFM))

             CHGVAR     VAR(&CURFIL) VALUE(&PRGFILE2)
             CHGPFM     FILE(&PRGFILE2) MBR(&PRGMBR) TEXT(&MDSC)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(CHGPFM))

             CHGVAR     VAR(&CURFIL) VALUE(&PRGFILE3)
             CHGPFM     FILE(&PRGFILE3) MBR(&PRGMBR) TEXT(&MDSC)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(CHGPFM))

             CHGVAR     VAR(&CURFIL) VALUE(&PRGFILE4)
             CHGPFM     FILE(&PRGFILE4) MBR(&PRGMBR) TEXT(&MDSC)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(CHGPFM))

/*  REORGANIZE PURGED FILES                                       */
             CHGVAR     VAR(&CURFIL) VALUE(&PRGFILE1)
             RGZPFM     FILE(&LIB/&FILE1)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(RGZPFM))

             CHGVAR     VAR(&CURFIL) VALUE(&PRGFILE2)
             RGZPFM     FILE(&LIB/&FILE2)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(RGZPFM))

             CHGVAR     VAR(&CURFIL) VALUE(&PRGFILE3)
             RGZPFM     FILE(&LIB/&FILE3)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(RGZPFM))

             CHGVAR     VAR(&CURFIL) VALUE(&PRGFILE4)
             RGZPFM     FILE(&LIB/&FILE4)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(RGZPFM))

             GOTO       CMDLBL(PGMMSG)

/*-----------------------------------------------------------------*/
/*                     ERROR MESSAGES                              */
/*-----------------------------------------------------------------*/
 ADDPFM:     CHGVAR &MSGT VALUE('Add Physical File Member Error')
             CHGVAR &MSGT VALUE(&MSGT *BCAT &CURFIL)
             SNDDST     TYPE(*MSG) TOUSRID((OMSPURGE BIGBYTE)) +
                          DSTD('Inventory Data Purge') MSG(&MSGT)
             GOTO       CMDLBL(ERROR)

 CPYF:       CHGVAR &MSGT VALUE('Copy File Error')
             CHGVAR &MSGT VALUE(&MSGT *BCAT &CURFIL)
             SNDDST     TYPE(*MSG) TOUSRID((OMSPURGE BIGBYTE)) +
                          DSTD('Inventory Data Purge') MSG(&MSGT)
             GOTO       CMDLBL(ERROR)

 CRTDUP:     CHGVAR &MSGT VALUE('Create Duplicate Object Error')
             CHGVAR &MSGT VALUE(&MSGT *BCAT &CURFIL)
             SNDDST     TYPE(*MSG) TOUSRID((OMSPURGE BIGBYTE)) +
                          DSTD('Inventory Data Purge') MSG(&MSGT)
             GOTO       CMDLBL(ERROR)

 CALL:
             SNDDST     TYPE(*MSG) TOUSRID((OMSPURGE BIGBYTE)) +
                          DSTD('Inventory Date Purge') MSG('Call to +
                          program PDA5XFR Error')
             GOTO       CMDLBL(ERROR)

 CHGPFM:     CHGVAR &MSGT VALUE('Change Member Text Error')
             CHGVAR &MSGT VALUE(&MSGT *BCAT &CURFIL)
             SNDDST     TYPE(*MSG) TOUSRID((OMSPURGE BIGBYTE)) +
                          DSTD('Inventory Date Purge') MSG(&MSGT)
             GOTO       CMDLBL(ERROR)

 RGZPFM:     CHGVAR &MSGT VALUE('Reorganize Physical File Error')
             CHGVAR &MSGT VALUE(&MSGT *BCAT &CURFIL)
             SNDDST     TYPE(*MSG) TOUSRID((OMSPURGE BIGBYTE)) +
                          DSTD('Inventory Date Purge') MSG(&MSGT)
             GOTO       CMDLBL(ERROR)

 ERROR:
             SNDDST     TYPE(*MSG) TOUSRID((OMSPURGE BIGBYTE)) +
                          DSTD('Inventory Data Purge') +
                          MSG('Inventory Data Purge Ended Abnormally')

             CHGJOB     LOG(4 00 *SECLVL)

             GOTO       CMDLBL(ENDPGM)
/*-----------------------------------------------------------------*/
/*                      PROGRAM END                                */
/*-----------------------------------------------------------------*/
 PGMMSG:
             SNDDST     TYPE(*MSG) TOUSRID((OMSPURGE BIGBYTE)) +
                          DSTD('Inventory Data Purge') +
                          MSG('Inventory Data Purge Ended +
                          Normally.  Ready to save to tape.')


 ENDPGM:     ENDPGM
