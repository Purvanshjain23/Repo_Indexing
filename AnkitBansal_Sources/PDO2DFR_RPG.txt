     H/TITLE WW Prod Order Hold Dtl DF Display file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Displays the records from DBF as a subfile
     H* - Loads the SFL from the DBF a page at a time
     H* - The DBF record at which the SFL display starts may be
     H*   controlled by positioning fields on the SFL header
     H* - Any key fields on the SFL header will be used as
     H*   positioning values
     H* - Any non-key fields on the SFL header will be used as
     H*   selection values: a maximum of W0SLM records will be
     H*   read from the DBF before giving up
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Display file
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISRCENT
     H* Date          : 07/28/17  Time  : 14:46:57
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCAVLLSL0IF  E           K        DISK
      * Values list details file
      *
     FPDO2DFR#CF  E                    WORKSTN
     F                                        ##RR  KSFILE #SFLRCD
     F                                              KINFDS INFDS#
      * DSP: WW Prod Order Hold Dtl DF Display file
      *
     FOPBGWKL1IF  E           K        DISK
     F                                              KINFDS INFDS1
      * RTV : Order Detail              Retrieval index
      *
     FOPBFCPL1IF  E           K        DISK
      * RTV : Order Header TRG          Retrieval index       NV
      *
     FPDJEREL1IF  E           K        DISK
      * RTV : Sales Route               Retrieval index
      *
     FCAAFREL1IF  E           K        DISK
      * RTV : Calendar                  Retrieval index       NV
      *
     FCAAFRELBIF  E           K        DISK
      * RSQ : Calendar                  Co/Year/Week#/Date
      *
     FCABBREL1IF  E           K        DISK
      * RTV : Customer                  Retrieval index       NV
      *
     FOPEYCPL9IF  E           K        DISK
      * RSQ : Order Events              Co/Order/Event Code
      *
     FCABZREL1IF  E           K        DISK
      * RTV : Company Item              Retrieval index       NV
      *
     FCAADREL1IF  E           K        DISK
      * RTV : Warehouse                 Retrieval index       NV
      *
     FPDL5CPL1IF  E           K        DISK
      * RTV : Item Lot Location         Retrieval index
      *
     FCAB0RELCIF  E           K        DISK
      * RSQ : Item Balance              Co/Whse/Item
      *
     FPDI8CPL1IF  E           K        DISK
      * RTV : PS Prod Item Schedule     Retrieval index
      *
     FCAB7CPLJIF  E           K        DISK
      * RSQ : Item Transaction Detail   Co/Itm/Whs/PDte    R/RR
      *
     FOPBGWKLFIF  E           K        DISK
      * RSQ : Order Detail              Co/Itm/Whs/SSD(d)/Od Omt
      *
     FCAADREL3IF  E           K        DISK
      * RTV : Warehouse                 Active records only
      *
     FOMFKREL0IF  E           K        DISK
      * RTV : Truck Size                Retrieval index
      *
     FCAB0RELJIF  E           K        DISK
      * RTV : Item Balance              Acitve records only
      *
     FCAADREL6IF  E           K        DISK
      * RSQ : Warehouse                 Typ/Whs
      *
     FPDI8CPLCIF  E           K        DISK
      * RSQ : PS Prod Item Schedule     Co/Itm/Whs/ShpDte/Typ
      *
     FOPBGWKLVIF  E           K        DISK
      * RSQ : Order Detail              Co/Itm/Whs/SSD(d)/Om CCC
      *
     FCAAFREL7IF  E           K        DISK
      * RSQ : Calendar                  RSQ Co/Yr/Period/Week/Da
      *
     FPDKNCPL1IF  E           K        DISK
      * RTV : Order Detail Schedule     Retrieval index
      *
     FPDKNCPL5IF  E           K        DISK
      * RSQ : Order Detail Schedule     Co/Item/Whse/SchdDte
      *
     FOMFJCPL0IF  E           K        DISK
      * RTV : Load Header               Retrieval index
      *
     FOPBFCPL8IF  E           K        DISK
      * RSQ : Order Header TRG          Load #/All orders
      *
     FCADRREL1IF  E           K        DISK
      * RTV : User Profile Control      Retrieval index       NV
      *
     FCADTREL1IF  E           K        DISK
      * RTV : User Application Profile  Retrieval index       NV
      *
     FCAADREL9IF  E           K        DISK
      * RSQ : Warehouse                 ShipCo/Warehouse
      *
     FCAABREL3IF  E           K        DISK
      * RTV : Company Name and Address  Retrieval index       NV
      *
     FOMFLCPL2IF  E           K        DISK
      * RSQ : Load Detail               Load/Stop/Order
      *
     FOPBGWKLAIF  E           K        DISK
      * RSQ : Order Detail              co/
      *
     FPDLGCPL2IF  E           K        DISK
      * RSQ : Legal Run Mileage Hours   Rtv Index w/ Desc Miles
      *
     FOMFLCPL4IF  E           K        DISK
      * RSQ : Load Detail               Load/Stop(Desc)/Order
      *
     FPDLECPL1IF  E           K        DISK
      * RTV : Carrier Destination Rate  Retrieval index
      *
     FOMFLCPL5IF  E           K        DISK
      * RSQ : Load Detail               Co/Load/Order
      *
     FOMFLCPL1IF  E           K        DISK
      * RTV : Load Detail               Retrieval index
      *
     FPPBUREL1IF  E           K        DISK
      * RTV : PFS Interface             Retrieval index
      *
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
     FOPBGWKL0UF  E           K        DISK
      * UPD : Order Detail              Update index
      *
     FOPBFCPL0UF  E           K        DISK
      * UPD : Order Header TRG          Update index
      *
     FOMFJCPL1UF  E           K        DISK
      * UPD : Load Header               Update index
      *
     E                    J7          7  1
     E                    K7          7  1
      * RIGHT JUSTIFY INPUT FIELD
     E                    #L7         7  1
     E                    #L3         3  1
     E                    AR1        30  1               ARRAY 1
     E                    AR2        30  1               ARRAY 2
     E                    UCT        40  1               CENTER TABLE
      * Long constants
     E                    @CN#    1  06  6   @CN    25
     E                    YK01      100 12  D            PA Work Array f
      *
     E                    YDOW        7  1               *Days of week
     I@AFREH3
      * Calendar                  Co/Year/Week#/Date
      * Renamed input format fields
     I              AFAIC3                          WAAIC3
     I              AFBCDT                          WABCDT
     I              AFCQNB                          WACQNB
     I              AFESNB                          WAESNB
     I              AFETNB                          WAETNB
     I              AFBZNB                          WABZNB
     I              AFA9ST                          WAA9ST
     I              AFEINB                          WAEINB
     I              AFC5ST                          WAC5ST
     I              AFAQNB                          WAAQNB
     I              AFCMST                          WACMST
     I              AFV9ST                          WAV9ST
     I              AFWAST                          WAWAST
     I              AFX2ST                          WAX2ST
     I              AFOJDT                          WAOJDT
     I              AFNQNX                          WANQNX
     I              AFNRNX                          WANRNX
     I              AFI9SX                          WAI9SX
     I              AFJASX                          WAJASX
     I              AFOKDT                          WAOKDT
     I              AFOLDT                          WAOLDT
     I              AFUVST                          WAUVST
     I              AFUWST                          WAUWST
     I              AFUXST                          WAUXST
     I              AFAATM                          WAAATM
     I              AFAYNA                          WAAYNA
     I              AFA0NA                          WAA0NA
     I              AFAXDT                          WAAXDT
      *
     I@BGWKKG
      * Order Detail              Co/Itm/Whs/SSD(d)/Od Omt
      * Renamed input format fields
     I              OMAIC3                          WBAIC3
     I              OMC4NB                          WBC4NB
     I              OMDPNB                          WBDPNB
     I              OMUENB                          WBUENB
     I              OMHGCD                          WBHGCD
     I              OMAJCD                          WBAJCD
     I              OMBKC7                          WBBKC7
     I              OMCFC7                          WBCFC7
     I              OMGMST                          WBGMST
     I              OMGNST                          WBGNST
     I              OMMAVA                          WBMAVA
     I              OMKDVA                          WBKDVA
     I              OML8VA                          WBL8VA
     I              OML9VA                          WBL9VA
     I              OMGTST                          WBGTST
     I              OMGVST                          WBGVST
     I              OMGUST                          WBGUST
     I              OMQFST                          WBQFST
     I              OMAYVA                          WBAYVA
     I              OMEXDT                          WBEXDT
     I              OMLQCD                          WBLQCD
     I              OMRDCD                          WBRDCD
     I              OMQ7CD                          WBQ7CD
     I              OMBZPR                          WBBZPR
     I              OML6NB                          WBL6NB
     I              OMU1ST                          WBU1ST
     I              OMGIDT                          WBGIDT
     I              OMCRCD                          WBCRCD
     I              OMAGCD                          WBAGCD
     I              OMRZST                          WBRZST
     I              OMR0ST                          WBR0ST
     I              OMR1ST                          WBR1ST
     I              OMG7NA                          WBG7NA
     I              OMG8NA                          WBG8NA
     I              OMRPCD                          WBRPCD
     I              OMVEST                          WBVEST
     I              OMVGST                          WBVGST
     I              OMAVST                          WBAVST
     I              OMU0ST                          WBU0ST
     I              OMRFCD                          WBRFCD
     I              OMFZST                          WBFZST
     I              OMR1NB                          WBR1NB
     I              OMAVQT                          WBAVQT
     I              OMD0WG                          WBD0WG
     I              OMCCQT                          WBCCQT
     I              OMAUWG                          WBAUWG
     I              OMCBQT                          WBCBQT
     I              OMATWG                          WBATWG
     I              OMAQCS                          WBAQCS
     I              OMAGCS                          WBAGCS
     I              OMAKPR                          WBAKPR
     I              OMALPR                          WBALPR
     I              OMAUPR                          WBAUPR
     I              OMAVWG                          WBAVWG
     I              OMA4WG                          WBA4WG
     I              OMA5DT                          WBA5DT
     I              OMAODT                          WBAODT
     I              OMGNDT                          WBGNDT
     I              OMAMST                          WBAMST
     I              OMANST                          WBANST
     I              OMVAST                          WBVAST
     I              OMRGNB                          WBRGNB
     I              OMRHNB                          WBRHNB
     I              OMRINB                          WBRINB
     I              OMRBCD                          WBRBCD
     I              OMHICD                          WBHICD
     I              OMRNCD                          WBRNCD
     I              OMROCD                          WBROCD
     I              OMCXDT                          WBCXDT
     I              OMAJVN                          WBAJVN
     I              OMKXCD                          WBKXCD
     I              OMJPCD                          WBJPCD
     I              OMCQCD                          WBCQCD
     I              OMR4CD                          WBR4CD
     I              OMZ1ST                          WBZ1ST
     I              OMZ3ST                          WBZ3ST
     I              OMZ4ST                          WBZ4ST
     I              OMDUPR                          WBDUPR
     I              OMB6VL                          WBB6VL
     I              OMA1AA                          WBA1AA
     I              OMFZSX                          WBFZSX
     I              OMF0SX                          WBF0SX
     I              OMF1SX                          WBF1SX
     I              OMF2SX                          WBF2SX
     I              OMF3SX                          WBF3SX
     I              OMF4SX                          WBF4SX
     I              OMF5SX                          WBF5SX
     I              OMF6SX                          WBF6SX
     I              OMF7SX                          WBF7SX
     I              OMNTDT                          WBNTDT
     I              OMNUDT                          WBNUDT
     I              OMNVDT                          WBNVDT
     I              OMNWDT                          WBNWDT
     I              OMNXDT                          WBNXDT
     I              OMBUTM                          WBBUTM
     I              OMBVTM                          WBBVTM
     I              OMBWTM                          WBBWTM
     I              OMBXTM                          WBBXTM
     I              OMBYTM                          WBBYTM
     I              OMH5NX                          WBH5NX
     I              OMH6NX                          WBH6NX
     I              OMH7NX                          WBH7NX
     I              OMH8NX                          WBH8NX
     I              OMH9NX                          WBH9NX
     I              OMDVPR                          WBDVPR
     I              OMDWPR                          WBDWPR
     I              OMDXPR                          WBDXPR
     I              OMDYPR                          WBDYPR
     I              OMDZPR                          WBDZPR
     I              OMGSPR                          WBGSPR
     I              OMGTPR                          WBGTPR
     I              OMGUPR                          WBGUPR
     I              OMHOST                          WBHOST
     I              OMHPST                          WBHPST
     I              OMIOST                          WBIOST
     I              OMPEWG                          WBPEWG
     I              OMRINY                          WBRINY
     I              OMTIDT                          WBTIDT
     I              OMTJDT                          WBTJDT
     I              OMH2ST                          WBH2ST
     I              OMH0ST                          WBH0ST
     I              OMH1ST                          WBH1ST
     I              OMTKDT                          WBTKDT
     I              OMTLDT                          WBTLDT
     I              OMTMDT                          WBTMDT
     I              OMUVST                          WBUVST
     I              OMUWST                          WBUWST
     I              OMUXST                          WBUXST
     I              OMAATM                          WBAATM
     I              OMAYNA                          WBAYNA
     I              OMA0NA                          WBA0NA
     I              OMAXDT                          WBAXDT
      *
     I@ADRET1
      * Warehouse                 Active records only
      * Renamed input format fields
     I              ADAJCD                          WCAJCD
     I              ADF8NA                          WCF8NA
     I              ADACNA                          WCACNA
     I              ADADNA                          WCADNA
     I              ADAENA                          WCAENA
     I              ADAJNA                          WCAJNA
     I              ADBTTX                          WCBTTX
     I              ADAOCD                          WCAOCD
     I              ADBGCD                          WCBGCD
     I              ADVHST                          WCVHST
     I              ADMPNA                          WCMPNA
     I              ADWPST                          WCWPST
     I              ADXUST                          WCXUST
     I              ADT0ST                          WCT0ST
     I              ADT1ST                          WCT1ST
     I              ADDBNB                          WCDBNB
     I              ADT2ST                          WCT2ST
     I              ADT3ST                          WCT3ST
     I              ADT4ST                          WCT4ST
     I              ADT6ST                          WCT6ST
     I              ADBWC3                          WCBWC3
     I              ADBTC3                          WCBTC3
     I              ADBUC3                          WCBUC3
     I              ADBVC3                          WCBVC3
     I              ADFCAA                          WCFCAA
     I              ADRQSX                          WCRQSX
     I              ADRRSX                          WCRRSX
     I              ADRSSX                          WCRSSX
     I              ADRTSX                          WCRTSX
     I              ADT7ST                          WCT7ST
     I              ADT8ST                          WCT8ST
     I              ADRNSX                          WCRNSX
     I              ADROSX                          WCROSX
     I              ADRPSX                          WCRPSX
     I              ADUVST                          WCUVST
     I              ADUWST                          WCUWST
     I              ADUXST                          WCUXST
     I              ADVSST                          WCVSST
     I              ADAATM                          WCAATM
     I              ADAYNA                          WCAYNA
     I              ADA0NA                          WCA0NA
     I              ADAXDT                          WCAXDT
      *
     I@B0REYY
      * Item Balance              Acitve records only
      * Renamed input format fields
     I              B0AIC3                          WDAIC3
     I              B0HGCD                          WDHGCD
     I              B0AJCD                          WDAJCD
     I              B0AGCS                          WDAGCS
     I              B0AECS                          WDAECS
     I              B0BACS                          WDBACS
     I              B0BBCS                          WDBBCS
     I              B0CBPR                          WDCBPR
     I              B0GUDT                          WDGUDT
     I              B0XYST                          WDXYST
     I              B0CTPR                          WDCTPR
     I              B0G4DT                          WDG4DT
     I              B0BOWG                          WDBOWG
     I              B0DDQT                          WDDDQT
     I              B0DEQT                          WDDEQT
     I              B0DFQT                          WDDFQT
     I              B0HDQT                          WDHDQT
     I              B0HEQT                          WDHEQT
     I              B0AJQT                          WDAJQT
     I              B0AQQT                          WDAQQT
     I              B0AUQT                          WDAUQT
     I              B0EMQT                          WDEMQT
     I              B0DOQT                          WDDOQT
     I              B0ATNA                          WDATNA
     I              B0AKDT                          WDAKDT
     I              B0ANDT                          WDANDT
     I              B0IDVA                          WDIDVA
     I              B0JVST                          WDJVST
     I              B0BZPC                          WDBZPC
     I              B0DGQT                          WDDGQT
     I              B0DIDT                          WDDIDT
     I              B0ALCD                          WDALCD
     I              B0BFDY                          WDBFDY
     I              B0DJDT                          WDDJDT
     I              B0BGDY                          WDBGDY
     I              B0DKDT                          WDDKDT
     I              B0J2ST                          WDJ2ST
     I              B0DJQT                          WDDJQT
     I              B0BNWG                          WDBNWG
     I              B0DLDT                          WDDLDT
     I              B0DPQT                          WDDPQT
     I              B0DQQT                          WDDQQT
     I              B0DMDT                          WDDMDT
     I              B0M0ST                          WDM0ST
     I              B0J9ST                          WDJ9ST
     I              B0KBST                          WDKBST
     I              B0AKC8                          WDAKC8
     I              B0RINB                          WDRINB
     I              B0RHNB                          WDRHNB
     I              B0RGNB                          WDRGNB
     I              B0UVST                          WDUVST
     I              B0UWST                          WDUWST
     I              B0UXST                          WDUXST
     I              B0VSST                          WDVSST
     I              B0AATM                          WDAATM
     I              B0AYNA                          WDAYNA
     I              B0A0NA                          WDA0NA
     I              B0AXDT                          WDAXDT
      *
     I@ADREOJ
      * Warehouse                 Typ/Whs
      * Renamed input format fields
     I              ADAJCD                          WEAJCD
     I              ADF8NA                          WEF8NA
     I              ADACNA                          WEACNA
     I              ADADNA                          WEADNA
     I              ADAENA                          WEAENA
     I              ADAJNA                          WEAJNA
     I              ADBTTX                          WEBTTX
     I              ADAOCD                          WEAOCD
     I              ADBGCD                          WEBGCD
     I              ADVHST                          WEVHST
     I              ADMPNA                          WEMPNA
     I              ADWPST                          WEWPST
     I              ADXUST                          WEXUST
     I              ADT0ST                          WET0ST
     I              ADT1ST                          WET1ST
     I              ADDBNB                          WEDBNB
     I              ADT2ST                          WET2ST
     I              ADT3ST                          WET3ST
     I              ADT4ST                          WET4ST
     I              ADT6ST                          WET6ST
     I              ADBWC3                          WEBWC3
     I              ADBTC3                          WEBTC3
     I              ADBUC3                          WEBUC3
     I              ADBVC3                          WEBVC3
     I              ADFCAA                          WEFCAA
     I              ADRQSX                          WERQSX
     I              ADRRSX                          WERRSX
     I              ADRSSX                          WERSSX
     I              ADRTSX                          WERTSX
     I              ADT7ST                          WET7ST
     I              ADT8ST                          WET8ST
     I              ADRNSX                          WERNSX
     I              ADROSX                          WEROSX
     I              ADRPSX                          WERPSX
     I              ADUVST                          WEUVST
     I              ADUWST                          WEUWST
     I              ADUXST                          WEUXST
     I              ADVSST                          WEVSST
     I              ADAATM                          WEAATM
     I              ADAYNA                          WEAYNA
     I              ADA0NA                          WEA0NA
     I              ADAXDT                          WEAXDT
      *
     I@I8CPDZ
      * PS Prod Item Schedule     Co/Itm/Whs/ShpDte/Typ
      * Renamed input format fields
     I              I8AIC3                          WFAIC3
     I              I8V5ST                          WFV5ST
     I              I8ELDT                          WFELDT
     I              I8HGCD                          WFHGCD
     I              I8AJCD                          WFAJCD
     I              I8GPDT                          WFGPDT
     I              I8WTSP                          WFWTSP
     I              I8QTSP                          WFQTSP
     I              I8DJPC                          WFDJPC
     I              I8F8WG                          WFF8WG
     I              I8WTIN                          WFWTIN
     I              I8D5NB                          WFD5NB
     I              I8DXWG                          WFDXWG
     I              I8B2NB                          WFB2NB
     I              I8WTCN                          WFWTCN
     I              I8PSCV                          WFPSCV
     I              I8SAWT                          WFSAWT
     I              I8B9NB                          WFB9NB
     I              I8D1WG                          WFD1WG
     I              I8CBNB                          WFCBNB
     I              I8EZWG                          WFEZWG
     I              I8CCNB                          WFCCNB
     I              I8E0WG                          WFE0WG
     I              I8D6NB                          WFD6NB
     I              I8OAWT                          WFOAWT
     I              I8CDNB                          WFCDNB
     I              I8UNW2                          WFUNW2
     I              I8CENB                          WFCENB
     I              I8F9WG                          WFF9WG
     I              I8BPNB                          WFBPNB
     I              I8GAWG                          WFGAWG
     I              I8BQNB                          WFBQNB
     I              I8GBWG                          WFGBWG
     I              I8BRNB                          WFBRNB
     I              I8GCWG                          WFGCWG
     I              I8BSNB                          WFBSNB
     I              I8GDWG                          WFGDWG
     I              I8BWNB                          WFBWNB
     I              I8GEWG                          WFGEWG
     I              I8PS6U                          WFPS6U
     I              I8WCST                          WFWCST
     I              I8WPST                          WFWPST
     I              I8B5ST                          WFB5ST
     I              I8TFST                          WFTFST
     I              I8TEST                          WFTEST
     I              I8THST                          WFTHST
     I              I8UDST                          WFUDST
     I              I8UFST                          WFUFST
     I              I8UGST                          WFUGST
     I              I8UHST                          WFUHST
     I              I8B6ST                          WFB6ST
     I              I8B7ST                          WFB7ST
     I              I8DVWG                          WFDVWG
     I              I8D7NB                          WFD7NB
     I              I8FCAD                          WFFCAD
     I              I8D9NB                          WFD9NB
     I              I8DWWG                          WFDWWG
     I              I8EANB                          WFEANB
     I              I8SHWT                          WFSHWT
     I              I8EBNB                          WFEBNB
     I              I8AVWT                          WFAVWT
     I              I8ECNB                          WFECNB
     I              I8WTON                          WFWTON
     I              I8EDNB                          WFEDNB
     I              I8FNWT                          WFFNWT
     I              I8EENB                          WFEENB
     I              I8QTAS                          WFQTAS
     I              I8EFNB                          WFEFNB
     I              I8WAIO                          WFWAIO
     I              I8EGNB                          WFEGNB
     I              I8R3CD                          WFR3CD
     I              I8RGNB                          WFRGNB
     I              I8RHNB                          WFRHNB
     I              I8RINB                          WFRINB
     I              I8XRCD                          WFXRCD
     I              I8UVST                          WFUVST
     I              I8UWST                          WFUWST
     I              I8UXST                          WFUXST
     I              I8VSST                          WFVSST
     I              I8AATM                          WFAATM
     I              I8AYNA                          WFAYNA
     I              I8A0NA                          WFA0NA
     I              I8AXDT                          WFAXDT
      *
     I@BGWKYG
      * Order Detail              Co/Itm/Whs/SSD(d)/Om CCC
      * Renamed input format fields
     I              OMAIC3                          WHAIC3
     I              OMC4NB                          WHC4NB
     I              OMDPNB                          WHDPNB
     I              OMUENB                          WHUENB
     I              OMHGCD                          WHHGCD
     I              OMAJCD                          WHAJCD
     I              OMBKC7                          WHBKC7
     I              OMCFC7                          WHCFC7
     I              OMGMST                          WHGMST
     I              OMGNST                          WHGNST
     I              OMMAVA                          WHMAVA
     I              OMKDVA                          WHKDVA
     I              OML8VA                          WHL8VA
     I              OML9VA                          WHL9VA
     I              OMGTST                          WHGTST
     I              OMGVST                          WHGVST
     I              OMGUST                          WHGUST
     I              OMQFST                          WHQFST
     I              OMAYVA                          WHAYVA
     I              OMEXDT                          WHEXDT
     I              OMLQCD                          WHLQCD
     I              OMRDCD                          WHRDCD
     I              OMQ7CD                          WHQ7CD
     I              OMBZPR                          WHBZPR
     I              OML6NB                          WHL6NB
     I              OMU1ST                          WHU1ST
     I              OMGIDT                          WHGIDT
     I              OMCRCD                          WHCRCD
     I              OMAGCD                          WHAGCD
     I              OMRZST                          WHRZST
     I              OMR0ST                          WHR0ST
     I              OMR1ST                          WHR1ST
     I              OMG7NA                          WHG7NA
     I              OMG8NA                          WHG8NA
     I              OMRPCD                          WHRPCD
     I              OMVEST                          WHVEST
     I              OMVGST                          WHVGST
     I              OMAVST                          WHAVST
     I              OMU0ST                          WHU0ST
     I              OMRFCD                          WHRFCD
     I              OMFZST                          WHFZST
     I              OMR1NB                          WHR1NB
     I              OMAVQT                          WHAVQT
     I              OMD0WG                          WHD0WG
     I              OMCCQT                          WHCCQT
     I              OMAUWG                          WHAUWG
     I              OMCBQT                          WHCBQT
     I              OMATWG                          WHATWG
     I              OMAQCS                          WHAQCS
     I              OMAGCS                          WHAGCS
     I              OMAKPR                          WHAKPR
     I              OMALPR                          WHALPR
     I              OMAUPR                          WHAUPR
     I              OMAVWG                          WHAVWG
     I              OMA4WG                          WHA4WG
     I              OMA5DT                          WHA5DT
     I              OMAODT                          WHAODT
     I              OMGNDT                          WHGNDT
     I              OMAMST                          WHAMST
     I              OMANST                          WHANST
     I              OMVAST                          WHVAST
     I              OMRGNB                          WHRGNB
     I              OMRHNB                          WHRHNB
     I              OMRINB                          WHRINB
     I              OMRBCD                          WHRBCD
     I              OMHICD                          WHHICD
     I              OMRNCD                          WHRNCD
     I              OMROCD                          WHROCD
     I              OMCXDT                          WHCXDT
     I              OMAJVN                          WHAJVN
     I              OMKXCD                          WHKXCD
     I              OMJPCD                          WHJPCD
     I              OMCQCD                          WHCQCD
     I              OMR4CD                          WHR4CD
     I              OMZ1ST                          WHZ1ST
     I              OMZ3ST                          WHZ3ST
     I              OMZ4ST                          WHZ4ST
     I              OMDUPR                          WHDUPR
     I              OMB6VL                          WHB6VL
     I              OMA1AA                          WHA1AA
     I              OMFZSX                          WHFZSX
     I              OMF0SX                          WHF0SX
     I              OMF1SX                          WHF1SX
     I              OMF2SX                          WHF2SX
     I              OMF3SX                          WHF3SX
     I              OMF4SX                          WHF4SX
     I              OMF5SX                          WHF5SX
     I              OMF6SX                          WHF6SX
     I              OMF7SX                          WHF7SX
     I              OMNTDT                          WHNTDT
     I              OMNUDT                          WHNUDT
     I              OMNVDT                          WHNVDT
     I              OMNWDT                          WHNWDT
     I              OMNXDT                          WHNXDT
     I              OMBUTM                          WHBUTM
     I              OMBVTM                          WHBVTM
     I              OMBWTM                          WHBWTM
     I              OMBXTM                          WHBXTM
     I              OMBYTM                          WHBYTM
     I              OMH5NX                          WHH5NX
     I              OMH6NX                          WHH6NX
     I              OMH7NX                          WHH7NX
     I              OMH8NX                          WHH8NX
     I              OMH9NX                          WHH9NX
     I              OMDVPR                          WHDVPR
     I              OMDWPR                          WHDWPR
     I              OMDXPR                          WHDXPR
     I              OMDYPR                          WHDYPR
     I              OMDZPR                          WHDZPR
     I              OMGSPR                          WHGSPR
     I              OMGTPR                          WHGTPR
     I              OMGUPR                          WHGUPR
     I              OMHOST                          WHHOST
     I              OMHPST                          WHHPST
     I              OMIOST                          WHIOST
     I              OMPEWG                          WHPEWG
     I              OMRINY                          WHRINY
     I              OMTIDT                          WHTIDT
     I              OMTJDT                          WHTJDT
     I              OMH2ST                          WHH2ST
     I              OMH0ST                          WHH0ST
     I              OMH1ST                          WHH1ST
     I              OMTKDT                          WHTKDT
     I              OMTLDT                          WHTLDT
     I              OMTMDT                          WHTMDT
     I              OMUVST                          WHUVST
     I              OMUWST                          WHUWST
     I              OMUXST                          WHUXST
     I              OMAATM                          WHAATM
     I              OMAYNA                          WHAYNA
     I              OMA0NA                          WHA0NA
     I              OMAXDT                          WHAXDT
      *
     I@AFREQ0
      * Calendar                  RSQ Co/Yr/Period/Week/Da
      * Renamed input format fields
     I              AFAIC3                          WIAIC3
     I              AFBCDT                          WIBCDT
     I              AFCQNB                          WICQNB
     I              AFESNB                          WIESNB
     I              AFETNB                          WIETNB
     I              AFBZNB                          WIBZNB
     I              AFA9ST                          WIA9ST
     I              AFEINB                          WIEINB
     I              AFC5ST                          WIC5ST
     I              AFAQNB                          WIAQNB
     I              AFCMST                          WICMST
     I              AFV9ST                          WIV9ST
     I              AFWAST                          WIWAST
     I              AFX2ST                          WIX2ST
     I              AFOJDT                          WIOJDT
     I              AFNQNX                          WINQNX
     I              AFNRNX                          WINRNX
     I              AFI9SX                          WII9SX
     I              AFJASX                          WIJASX
     I              AFOKDT                          WIOKDT
     I              AFOLDT                          WIOLDT
     I              AFUVST                          WIUVST
     I              AFUWST                          WIUWST
     I              AFUXST                          WIUXST
     I              AFAATM                          WIAATM
     I              AFAYNA                          WIAYNA
     I              AFA0NA                          WIA0NA
     I              AFAXDT                          WIAXDT
      *
     I@KNCPZ7
      * Order Detail Schedule     Co/Item/Whse/SchdDte
      * Renamed input format fields
     I              KNAIC3                          WJAIC3
     I              KNC4NB                          WJC4NB
     I              KNDPNB                          WJDPNB
     I              KNUENB                          WJUENB
     I              KNJGDT                          WJJGDT
     I              KNAODT                          WJAODT
     I              KNAJCD                          WJAJCD
     I              KNAYAA                          WJAYAA
     I              KNHGCD                          WJHGCD
     I              KNIGQT                          WJIGQT
     I              KNFLWG                          WJFLWG
     I              KNIUQT                          WJIUQT
     I              KNF3WG                          WJF3WG
     I              KNIVQT                          WJIVQT
     I              KNF4WG                          WJF4WG
     I              KNP7ST                          WJP7ST
     I              KNP8ST                          WJP8ST
     I              KNQAST                          WJQAST
     I              KNUVST                          WJUVST
     I              KNUWST                          WJUWST
     I              KNUXST                          WJUXST
     I              KNVSST                          WJVSST
     I              KNAATM                          WJAATM
     I              KNAYNA                          WJAYNA
     I              KNA0NA                          WJA0NA
     I              KNAXDT                          WJAXDT
      *
     I@BGWKL0
      * Order Detail              Update index
      * Renamed input format fields
     I              OMAIC3                          WKAIC3
     I              OMC4NB                          WKC4NB
     I              OMDPNB                          WKDPNB
     I              OMUENB                          WKUENB
     I              OMHGCD                          WKHGCD
     I              OMAJCD                          WKAJCD
     I              OMBKC7                          WKBKC7
     I              OMCFC7                          WKCFC7
     I              OMGMST                          WKGMST
     I              OMGNST                          WKGNST
     I              OMMAVA                          WKMAVA
     I              OMKDVA                          WKKDVA
     I              OML8VA                          WKL8VA
     I              OML9VA                          WKL9VA
     I              OMGTST                          WKGTST
     I              OMGVST                          WKGVST
     I              OMGUST                          WKGUST
     I              OMQFST                          WKQFST
     I              OMAYVA                          WKAYVA
     I              OMEXDT                          WKEXDT
     I              OMLQCD                          WKLQCD
     I              OMRDCD                          WKRDCD
     I              OMQ7CD                          WKQ7CD
     I              OMBZPR                          WKBZPR
     I              OML6NB                          WKL6NB
     I              OMU1ST                          WKU1ST
     I              OMGIDT                          WKGIDT
     I              OMCRCD                          WKCRCD
     I              OMAGCD                          WKAGCD
     I              OMRZST                          WKRZST
     I              OMR0ST                          WKR0ST
     I              OMR1ST                          WKR1ST
     I              OMG7NA                          WKG7NA
     I              OMG8NA                          WKG8NA
     I              OMRPCD                          WKRPCD
     I              OMVEST                          WKVEST
     I              OMVGST                          WKVGST
     I              OMAVST                          WKAVST
     I              OMU0ST                          WKU0ST
     I              OMRFCD                          WKRFCD
     I              OMFZST                          WKFZST
     I              OMR1NB                          WKR1NB
     I              OMAVQT                          WKAVQT
     I              OMD0WG                          WKD0WG
     I              OMCCQT                          WKCCQT
     I              OMAUWG                          WKAUWG
     I              OMCBQT                          WKCBQT
     I              OMATWG                          WKATWG
     I              OMAQCS                          WKAQCS
     I              OMAGCS                          WKAGCS
     I              OMAKPR                          WKAKPR
     I              OMALPR                          WKALPR
     I              OMAUPR                          WKAUPR
     I              OMAVWG                          WKAVWG
     I              OMA4WG                          WKA4WG
     I              OMA5DT                          WKA5DT
     I              OMAODT                          WKAODT
     I              OMGNDT                          WKGNDT
     I              OMAMST                          WKAMST
     I              OMANST                          WKANST
     I              OMVAST                          WKVAST
     I              OMRGNB                          WKRGNB
     I              OMRHNB                          WKRHNB
     I              OMRINB                          WKRINB
     I              OMRBCD                          WKRBCD
     I              OMHICD                          WKHICD
     I              OMRNCD                          WKRNCD
     I              OMROCD                          WKROCD
     I              OMCXDT                          WKCXDT
     I              OMAJVN                          WKAJVN
     I              OMKXCD                          WKKXCD
     I              OMJPCD                          WKJPCD
     I              OMCQCD                          WKCQCD
     I              OMR4CD                          WKR4CD
     I              OMZ1ST                          WKZ1ST
     I              OMZ3ST                          WKZ3ST
     I              OMZ4ST                          WKZ4ST
     I              OMDUPR                          WKDUPR
     I              OMB6VL                          WKB6VL
     I              OMA1AA                          WKA1AA
     I              OMFZSX                          WKFZSX
     I              OMF0SX                          WKF0SX
     I              OMF1SX                          WKF1SX
     I              OMF2SX                          WKF2SX
     I              OMF3SX                          WKF3SX
     I              OMF4SX                          WKF4SX
     I              OMF5SX                          WKF5SX
     I              OMF6SX                          WKF6SX
     I              OMF7SX                          WKF7SX
     I              OMNTDT                          WKNTDT
     I              OMNUDT                          WKNUDT
     I              OMNVDT                          WKNVDT
     I              OMNWDT                          WKNWDT
     I              OMNXDT                          WKNXDT
     I              OMBUTM                          WKBUTM
     I              OMBVTM                          WKBVTM
     I              OMBWTM                          WKBWTM
     I              OMBXTM                          WKBXTM
     I              OMBYTM                          WKBYTM
     I              OMH5NX                          WKH5NX
     I              OMH6NX                          WKH6NX
     I              OMH7NX                          WKH7NX
     I              OMH8NX                          WKH8NX
     I              OMH9NX                          WKH9NX
     I              OMDVPR                          WKDVPR
     I              OMDWPR                          WKDWPR
     I              OMDXPR                          WKDXPR
     I              OMDYPR                          WKDYPR
     I              OMDZPR                          WKDZPR
     I              OMGSPR                          WKGSPR
     I              OMGTPR                          WKGTPR
     I              OMGUPR                          WKGUPR
     I              OMHOST                          WKHOST
     I              OMHPST                          WKHPST
     I              OMIOST                          WKIOST
     I              OMPEWG                          WKPEWG
     I              OMRINY                          WKRINY
     I              OMTIDT                          WKTIDT
     I              OMTJDT                          WKTJDT
     I              OMH2ST                          WKH2ST
     I              OMH0ST                          WKH0ST
     I              OMH1ST                          WKH1ST
     I              OMTKDT                          WKTKDT
     I              OMTLDT                          WKTLDT
     I              OMTMDT                          WKTMDT
     I              OMUVST                          WKUVST
     I              OMUWST                          WKUWST
     I              OMUXST                          WKUXST
     I              OMAATM                          WKAATM
     I              OMAYNA                          WKAYNA
     I              OMA0NA                          WKA0NA
     I              OMAXDT                          WKAXDT
      *
     I@BECPFJ
      * Order Header TRG          Update index
      * Renamed input format fields
     I              BEAIC3                          WLAIC3
     I              BEC4NB                          WLC4NB
     I              BEJNCD                          WLJNCD
     I              BEANC7                          WLANC7
     I              BEBKC7                          WLBKC7
     I              BEBRTX                          WLBRTX
     I              BEHMNA                          WLHMNA
     I              BEHONA                          WLHONA
     I              BEHPNA                          WLHPNA
     I              BEHNNA                          WLHNNA
     I              BEDBCD                          WLDBCD
     I              BECKTX                          WLCKTX
     I              BEB0C7                          WLB0C7
     I              BEAETX                          WLAETX
     I              BEB1NA                          WLB1NA
     I              BEB3NA                          WLB3NA
     I              BEB4NA                          WLB4NA
     I              BEB2NA                          WLB2NA
     I              BEBHCD                          WLBHCD
     I              BEC8TX                          WLC8TX
     I              BEBCNA                          WLBCNA
     I              BEA0DT                          WLA0DT
     I              BEA5DT                          WLA5DT
     I              BEGNDT                          WLGNDT
     I              BEACDT                          WLACDT
     I              BEAQCD                          WLAQCD
     I              BEB6NA                          WLB6NA
     I              BEBYNA                          WLBYNA
     I              BEBZNA                          WLBZNA
     I              BEGTST                          WLGTST
     I              BEGVST                          WLGVST
     I              BEGUST                          WLGUST
     I              BEQFST                          WLQFST
     I              BECQCD                          WLCQCD
     I              BEGJST                          WLGJST
     I              BEGWST                          WLGWST
     I              BEGXST                          WLGXST
     I              BEGYST                          WLGYST
     I              BEAODT                          WLAODT
     I              BEAIVN                          WLAIVN
     I              BECXDT                          WLCXDT
     I              BEJZVA                          WLJZVA
     I              BEA1WG                          WLA1WG
     I              BEXIST                          WLXIST
     I              BEXJST                          WLXJST
     I              BEXKST                          WLXKST
     I              BEEIDT                          WLEIDT
     I              BEAFTM                          WLAFTM
     I              BEE8CD                          WLE8CD
     I              BEE9CD                          WLE9CD
     I              BERMNB                          WLRMNB
     I              BETBNB                          WLTBNB
     I              BER1NB                          WLR1NB
     I              BEPJST                          WLPJST
     I              BEU0ST                          WLU0ST
     I              BEU1ST                          WLU1ST
     I              BEQ2CD                          WLQ2CD
     I              BEU2ST                          WLU2ST
     I              BEVEST                          WLVEST
     I              BEVFST                          WLVFST
     I              BEVGST                          WLVGST
     I              BERPCD                          WLRPCD
     I              BERNNB                          WLRNNB
     I              BEVDST                          WLVDST
     I              BEATIN                          WLATIN
     I              BEU4ST                          WLU4ST
     I              BEU5ST                          WLU5ST
     I              BERSRN                          WLRSRN
     I              BEMHNA                          WLMHNA
     I              BEMINA                          WLMINA
     I              BEWBST                          WLWBST
     I              BER4CD                          WLR4CD
     I              BEBFCD                          WLBFCD
     I              BEQ4CD                          WLQ4CD
     I              BET3NB                          WLT3NB
     I              BESICD                          WLSICD
     I              BECONB                          WLCONB
     I              BECEST                          WLCEST
     I              BEAWDT                          WLAWDT
     I              BEJPCD                          WLJPCD
     I              BEXUST                          WLXUST
     I              BEZ1ST                          WLZ1ST
     I              BEVRVA                          WLVRVA
     I              BEOBST                          WLOBST
     I              BEBCST                          WLBCST
     I              BEBDST                          WLBDST
     I              BEB7VL                          WLB7VL
     I              BEGASX                          WLGASX
     I              BEGBSX                          WLGBSX
     I              BEGCSX                          WLGCSX
     I              BEGDSX                          WLGDSX
     I              BEFNSX                          WLFNSX
     I              BEFOSX                          WLFOSX
     I              BEFPSX                          WLFPSX
     I              BEFQSX                          WLFQSX
     I              BEFRSX                          WLFRSX
     I              BEFSSX                          WLFSSX
     I              BEFTSX                          WLFTSX
     I              BEFUSX                          WLFUSX
     I              BEFVSX                          WLFVSX
     I              BEFWSX                          WLFWSX
     I              BEFXSX                          WLFXSX
     I              BEFYSX                          WLFYSX
     I              BENODT                          WLNODT
     I              BENPDT                          WLNPDT
     I              BENQDT                          WLNQDT
     I              BENRDT                          WLNRDT
     I              BENSDT                          WLNSDT
     I              BEBPTM                          WLBPTM
     I              BEBQTM                          WLBQTM
     I              BEBRTM                          WLBRTM
     I              BEBSTM                          WLBSTM
     I              BEBTTM                          WLBTTM
     I              BEH0NX                          WLH0NX
     I              BEH1NX                          WLH1NX
     I              BEH2NX                          WLH2NX
     I              BEH3NX                          WLH3NX
     I              BEH4NX                          WLH4NX
     I              BEC0C7                          WLC0C7
     I              BEUVST                          WLUVST
     I              BEUWST                          WLUWST
     I              BEUXST                          WLUXST
     I              BEAATM                          WLAATM
     I              BEAYNA                          WLAYNA
     I              BEA0NA                          WLA0NA
     I              BEAXDT                          WLAXDT
      *
     I@BFCPD9
      * Order Header TRG          Load #/All orders
      * Renamed input format fields
     I              BEAIC3                          WMAIC3
     I              BEC4NB                          WMC4NB
     I              BEJNCD                          WMJNCD
     I              BEANC7                          WMANC7
     I              BEBKC7                          WMBKC7
     I              BEBRTX                          WMBRTX
     I              BEHMNA                          WMHMNA
     I              BEHONA                          WMHONA
     I              BEHPNA                          WMHPNA
     I              BEHNNA                          WMHNNA
     I              BEDBCD                          WMDBCD
     I              BECKTX                          WMCKTX
     I              BEB0C7                          WMB0C7
     I              BEAETX                          WMAETX
     I              BEB1NA                          WMB1NA
     I              BEB3NA                          WMB3NA
     I              BEB4NA                          WMB4NA
     I              BEB2NA                          WMB2NA
     I              BEBHCD                          WMBHCD
     I              BEC8TX                          WMC8TX
     I              BEBCNA                          WMBCNA
     I              BEA0DT                          WMA0DT
     I              BEA5DT                          WMA5DT
     I              BEGNDT                          WMGNDT
     I              BEACDT                          WMACDT
     I              BEAQCD                          WMAQCD
     I              BEB6NA                          WMB6NA
     I              BEBYNA                          WMBYNA
     I              BEBZNA                          WMBZNA
     I              BEGTST                          WMGTST
     I              BEGVST                          WMGVST
     I              BEGUST                          WMGUST
     I              BEQFST                          WMQFST
     I              BECQCD                          WMCQCD
     I              BEGJST                          WMGJST
     I              BEGWST                          WMGWST
     I              BEGXST                          WMGXST
     I              BEGYST                          WMGYST
     I              BEAODT                          WMAODT
     I              BEAIVN                          WMAIVN
     I              BECXDT                          WMCXDT
     I              BEJZVA                          WMJZVA
     I              BEA1WG                          WMA1WG
     I              BEXIST                          WMXIST
     I              BEXJST                          WMXJST
     I              BEXKST                          WMXKST
     I              BEEIDT                          WMEIDT
     I              BEAFTM                          WMAFTM
     I              BEE8CD                          WME8CD
     I              BEE9CD                          WME9CD
     I              BERMNB                          WMRMNB
     I              BETBNB                          WMTBNB
     I              BER1NB                          WMR1NB
     I              BEPJST                          WMPJST
     I              BEU0ST                          WMU0ST
     I              BEU1ST                          WMU1ST
     I              BEQ2CD                          WMQ2CD
     I              BEU2ST                          WMU2ST
     I              BEVEST                          WMVEST
     I              BEVFST                          WMVFST
     I              BEVGST                          WMVGST
     I              BERPCD                          WMRPCD
     I              BERNNB                          WMRNNB
     I              BEVDST                          WMVDST
     I              BEATIN                          WMATIN
     I              BEU4ST                          WMU4ST
     I              BEU5ST                          WMU5ST
     I              BERSRN                          WMRSRN
     I              BEMHNA                          WMMHNA
     I              BEMINA                          WMMINA
     I              BEWBST                          WMWBST
     I              BER4CD                          WMR4CD
     I              BEBFCD                          WMBFCD
     I              BEQ4CD                          WMQ4CD
     I              BET3NB                          WMT3NB
     I              BESICD                          WMSICD
     I              BECONB                          WMCONB
     I              BECEST                          WMCEST
     I              BEAWDT                          WMAWDT
     I              BEJPCD                          WMJPCD
     I              BEXUST                          WMXUST
     I              BEZ1ST                          WMZ1ST
     I              BEVRVA                          WMVRVA
     I              BEOBST                          WMOBST
     I              BEBCST                          WMBCST
     I              BEBDST                          WMBDST
     I              BEB7VL                          WMB7VL
     I              BEGASX                          WMGASX
     I              BEGBSX                          WMGBSX
     I              BEGCSX                          WMGCSX
     I              BEGDSX                          WMGDSX
     I              BEFNSX                          WMFNSX
     I              BEFOSX                          WMFOSX
     I              BEFPSX                          WMFPSX
     I              BEFQSX                          WMFQSX
     I              BEFRSX                          WMFRSX
     I              BEFSSX                          WMFSSX
     I              BEFTSX                          WMFTSX
     I              BEFUSX                          WMFUSX
     I              BEFVSX                          WMFVSX
     I              BEFWSX                          WMFWSX
     I              BEFXSX                          WMFXSX
     I              BEFYSX                          WMFYSX
     I              BENODT                          WMNODT
     I              BENPDT                          WMNPDT
     I              BENQDT                          WMNQDT
     I              BENRDT                          WMNRDT
     I              BENSDT                          WMNSDT
     I              BEBPTM                          WMBPTM
     I              BEBQTM                          WMBQTM
     I              BEBRTM                          WMBRTM
     I              BEBSTM                          WMBSTM
     I              BEBTTM                          WMBTTM
     I              BEH0NX                          WMH0NX
     I              BEH1NX                          WMH1NX
     I              BEH2NX                          WMH2NX
     I              BEH3NX                          WMH3NX
     I              BEH4NX                          WMH4NX
     I              BEC0C7                          WMC0C7
     I              BEUVST                          WMUVST
     I              BEUWST                          WMUWST
     I              BEUXST                          WMUXST
     I              BEAATM                          WMAATM
     I              BEAYNA                          WMAYNA
     I              BEA0NA                          WMA0NA
     I              BEAXDT                          WMAXDT
      *
     I@ADREWA
      * Warehouse                 ShipCo/Warehouse
      * Renamed input format fields
     I              ADAJCD                          WOAJCD
     I              ADF8NA                          WOF8NA
     I              ADACNA                          WOACNA
     I              ADADNA                          WOADNA
     I              ADAENA                          WOAENA
     I              ADAJNA                          WOAJNA
     I              ADBTTX                          WOBTTX
     I              ADAOCD                          WOAOCD
     I              ADBGCD                          WOBGCD
     I              ADVHST                          WOVHST
     I              ADMPNA                          WOMPNA
     I              ADWPST                          WOWPST
     I              ADXUST                          WOXUST
     I              ADT0ST                          WOT0ST
     I              ADT1ST                          WOT1ST
     I              ADDBNB                          WODBNB
     I              ADT2ST                          WOT2ST
     I              ADT3ST                          WOT3ST
     I              ADT4ST                          WOT4ST
     I              ADT6ST                          WOT6ST
     I              ADBWC3                          WOBWC3
     I              ADBTC3                          WOBTC3
     I              ADBUC3                          WOBUC3
     I              ADBVC3                          WOBVC3
     I              ADFCAA                          WOFCAA
     I              ADRQSX                          WORQSX
     I              ADRRSX                          WORRSX
     I              ADRSSX                          WORSSX
     I              ADRTSX                          WORTSX
     I              ADT7ST                          WOT7ST
     I              ADT8ST                          WOT8ST
     I              ADRNSX                          WORNSX
     I              ADROSX                          WOROSX
     I              ADRPSX                          WORPSX
     I              ADUVST                          WOUVST
     I              ADUWST                          WOUWST
     I              ADUXST                          WOUXST
     I              ADVSST                          WOVSST
     I              ADAATM                          WOAATM
     I              ADAYNA                          WOAYNA
     I              ADA0NA                          WOA0NA
     I              ADAXDT                          WOAXDT
      *
     I@BGWKAE
      * Order Detail              co/
      * Renamed input format fields
     I              OMAIC3                          WRAIC3
     I              OMC4NB                          WRC4NB
     I              OMDPNB                          WRDPNB
     I              OMUENB                          WRUENB
     I              OMHGCD                          WRHGCD
     I              OMAJCD                          WRAJCD
     I              OMBKC7                          WRBKC7
     I              OMCFC7                          WRCFC7
     I              OMGMST                          WRGMST
     I              OMGNST                          WRGNST
     I              OMMAVA                          WRMAVA
     I              OMKDVA                          WRKDVA
     I              OML8VA                          WRL8VA
     I              OML9VA                          WRL9VA
     I              OMGTST                          WRGTST
     I              OMGVST                          WRGVST
     I              OMGUST                          WRGUST
     I              OMQFST                          WRQFST
     I              OMAYVA                          WRAYVA
     I              OMEXDT                          WREXDT
     I              OMLQCD                          WRLQCD
     I              OMRDCD                          WRRDCD
     I              OMQ7CD                          WRQ7CD
     I              OMBZPR                          WRBZPR
     I              OML6NB                          WRL6NB
     I              OMU1ST                          WRU1ST
     I              OMGIDT                          WRGIDT
     I              OMCRCD                          WRCRCD
     I              OMAGCD                          WRAGCD
     I              OMRZST                          WRRZST
     I              OMR0ST                          WRR0ST
     I              OMR1ST                          WRR1ST
     I              OMG7NA                          WRG7NA
     I              OMG8NA                          WRG8NA
     I              OMRPCD                          WRRPCD
     I              OMVEST                          WRVEST
     I              OMVGST                          WRVGST
     I              OMAVST                          WRAVST
     I              OMU0ST                          WRU0ST
     I              OMRFCD                          WRRFCD
     I              OMFZST                          WRFZST
     I              OMR1NB                          WRR1NB
     I              OMAVQT                          WRAVQT
     I              OMD0WG                          WRD0WG
     I              OMCCQT                          WRCCQT
     I              OMAUWG                          WRAUWG
     I              OMCBQT                          WRCBQT
     I              OMATWG                          WRATWG
     I              OMAQCS                          WRAQCS
     I              OMAGCS                          WRAGCS
     I              OMAKPR                          WRAKPR
     I              OMALPR                          WRALPR
     I              OMAUPR                          WRAUPR
     I              OMAVWG                          WRAVWG
     I              OMA4WG                          WRA4WG
     I              OMA5DT                          WRA5DT
     I              OMAODT                          WRAODT
     I              OMGNDT                          WRGNDT
     I              OMAMST                          WRAMST
     I              OMANST                          WRANST
     I              OMVAST                          WRVAST
     I              OMRGNB                          WRRGNB
     I              OMRHNB                          WRRHNB
     I              OMRINB                          WRRINB
     I              OMRBCD                          WRRBCD
     I              OMHICD                          WRHICD
     I              OMRNCD                          WRRNCD
     I              OMROCD                          WRROCD
     I              OMCXDT                          WRCXDT
     I              OMAJVN                          WRAJVN
     I              OMKXCD                          WRKXCD
     I              OMJPCD                          WRJPCD
     I              OMCQCD                          WRCQCD
     I              OMR4CD                          WRR4CD
     I              OMZ1ST                          WRZ1ST
     I              OMZ3ST                          WRZ3ST
     I              OMZ4ST                          WRZ4ST
     I              OMDUPR                          WRDUPR
     I              OMB6VL                          WRB6VL
     I              OMA1AA                          WRA1AA
     I              OMFZSX                          WRFZSX
     I              OMF0SX                          WRF0SX
     I              OMF1SX                          WRF1SX
     I              OMF2SX                          WRF2SX
     I              OMF3SX                          WRF3SX
     I              OMF4SX                          WRF4SX
     I              OMF5SX                          WRF5SX
     I              OMF6SX                          WRF6SX
     I              OMF7SX                          WRF7SX
     I              OMNTDT                          WRNTDT
     I              OMNUDT                          WRNUDT
     I              OMNVDT                          WRNVDT
     I              OMNWDT                          WRNWDT
     I              OMNXDT                          WRNXDT
     I              OMBUTM                          WRBUTM
     I              OMBVTM                          WRBVTM
     I              OMBWTM                          WRBWTM
     I              OMBXTM                          WRBXTM
     I              OMBYTM                          WRBYTM
     I              OMH5NX                          WRH5NX
     I              OMH6NX                          WRH6NX
     I              OMH7NX                          WRH7NX
     I              OMH8NX                          WRH8NX
     I              OMH9NX                          WRH9NX
     I              OMDVPR                          WRDVPR
     I              OMDWPR                          WRDWPR
     I              OMDXPR                          WRDXPR
     I              OMDYPR                          WRDYPR
     I              OMDZPR                          WRDZPR
     I              OMGSPR                          WRGSPR
     I              OMGTPR                          WRGTPR
     I              OMGUPR                          WRGUPR
     I              OMHOST                          WRHOST
     I              OMHPST                          WRHPST
     I              OMIOST                          WRIOST
     I              OMPEWG                          WRPEWG
     I              OMRINY                          WRRINY
     I              OMTIDT                          WRTIDT
     I              OMTJDT                          WRTJDT
     I              OMH2ST                          WRH2ST
     I              OMH0ST                          WRH0ST
     I              OMH1ST                          WRH1ST
     I              OMTKDT                          WRTKDT
     I              OMTLDT                          WRTLDT
     I              OMTMDT                          WRTMDT
     I              OMUVST                          WRUVST
     I              OMUWST                          WRUWST
     I              OMUXST                          WRUXST
     I              OMAATM                          WRAATM
     I              OMAYNA                          WRAYNA
     I              OMA0NA                          WRA0NA
     I              OMAXDT                          WRAXDT
      *
     I@FJCPBO
      * Load Header               Update index
      * Renamed input format fields
     I              FJRMNB                          WSRMNB
     I              FJAIC3                          WSAIC3
     I              FJAODT                          WSAODT
     I              FJPJST                          WSPJST
     I              FJPKST                          WSPKST
     I              FJRNNB                          WSRNNB
     I              FJDMTX                          WSDMTX
     I              FJDNTX                          WSDNTX
     I              FJDOTX                          WSDOTX
     I              FJWTTX                          WSWTTX
     I              FJWUTX                          WSWUTX
     I              FJRPNB                          WSRPNB
     I              FJFLAM                          WSFLAM
     I              FJXQST                          WSXQST
     I              FJRRNB                          WSRRNB
     I              FJDXTX                          WSDXTX
     I              FJDYTX                          WSDYTX
     I              FJSBNB                          WSSBNB
     I              FJBZNA                          WSBZNA
     I              FJRONB                          WSRONB
     I              FJSQNB                          WSSQNB
     I              FJR1NB                          WSR1NB
     I              FJVCST                          WSVCST
     I              FJVDST                          WSVDST
     I              FJSDNB                          WSSDNB
     I              FJPAOU                          WSPAOU
     I              FJDGWG                          WSDGWG
     I              FJSXNB                          WSSXNB
     I              FJHADT                          WSHADT
     I              FJAART                          WSAART
     I              FJDHWG                          WSDHWG
     I              FJDIWG                          WSDIWG
     I              FJAQDT                          WSAQDT
     I              FJS6NB                          WSS6NB
     I              FJT4NB                          WST4NB
     I              FJPRTM                          WSPRTM
     I              FJNPSV                          WSNPSV
     I              FJJ8TX                          WSJ8TX
     I              FJTLMI                          WSTLMI
     I              FJJ9TX                          WSJ9TX
     I              FJQ2CD                          WSQ2CD
     I              FJVPCD                          WSVPCD
     I              FJDBCD                          WSDBCD
     I              FJGRWE                          WSGRWE
     I              FJXCCD                          WSXCCD
     I              FJU2ST                          WSU2ST
     I              FJF9DT                          WSF9DT
     I              FJONTM                          WSONTM
     I              FJJ4DT                          WSJ4DT
     I              FJTRTM                          WSTRTM
     I              FJJ5DT                          WSJ5DT
     I              FJSPTM                          WSSPTM
     I              FJJ6DT                          WSJ6DT
     I              FJLFTM                          WSLFTM
     I              FJJ7DT                          WSJ7DT
     I              FJBOTM                          WSBOTM
     I              FJJ8DT                          WSJ8DT
     I              FJBLTM                          WSBLTM
     I              FJKIDT                          WSKIDT
     I              FJASTM                          WSASTM
     I              FJKADT                          WSKADT
     I              FJAJCM                          WSAJCM
     I              FJXACD                          WSXACD
     I              FJOANA                          WSOANA
     I              FJK4TX                          WSK4TX
     I              FJVOAG                          WSVOAG
     I              FJKBDT                          WSKBDT
     I              FJNBBO                          WSNBBO
     I              FJW4CD                          WSW4CD
     I              FJEFDT                          WSEFDT
     I              FJCNTN                          WSCNTN
     I              FJKCDT                          WSKCDT
     I              FJTMIN                          WSTMIN
     I              FJKDDT                          WSKDDT
     I              FJVMNB                          WSVMNB
     I              FJOCFR                          WSOCFR
     I              FJKJDT                          WSKJDT
     I              FJATTM                          WSATTM
     I              FJOTRS                          WSOTRS
     I              FJRNST                          WSRNST
     I              FJBRBK                          WSBRBK
     I              FJEIDT                          WSEIDT
     I              FJRMST                          WSRMST
     I              FJAJCD                          WSAJCD
     I              FJKKDT                          WSKKDT
     I              FJAVTM                          WSAVTM
     I              FJKZDT                          WSKZDT
     I              FJAXTM                          WSAXTM
     I              FJLHOS                          WSLHOS
     I              FJLHOR                          WSLHOR
     I              FJWNTX                          WSWNTX
     I              FJOITX                          WSOITX
     I              FJOJTX                          WSOJTX
     I              FJLLDT                          WSLLDT
     I              FJLSHG                          WSLSHG
     I              FJYPST                          WSYPST
     I              FJK0DT                          WSK0DT
     I              FJAYTM                          WSAYTM
     I              FJKNNX                          WSKNNX
     I              FJICWG                          WSICWG
     I              FJIDWG                          WSIDWG
     I              FJH9SX                          WSH9SX
     I              FJWOTX                          WSWOTX
     I              FJK1DT                          WSK1DT
     I              FJAZTM                          WSAZTM
     I              FJK2DT                          WSK2DT
     I              FJA0TM                          WSA0TM
     I              FJROST                          WSROST
     I              FJRPST                          WSRPST
     I              FJRQST                          WSRQST
     I              FJRRST                          WSRRST
     I              FJZBVA                          WSZBVA
     I              FJWPTX                          WSWPTX
     I              FJWQTX                          WSWQTX
     I              FJWRTX                          WSWRTX
     I              FJWSTX                          WSWSTX
     I              FJRVSX                          WSRVSX
     I              FJRUSX                          WSRUSX
     I              FJRWSX                          WSRWSX
     I              FJRXSX                          WSRXSX
     I              FJRYSX                          WSRYSX
     I              FJRZSX                          WSRZSX
     I              FJR0SX                          WSR0SX
     I              FJR1SX                          WSR1SX
     I              FJR2SX                          WSR2SX
     I              FJR3SX                          WSR3SX
     I              FJR4SX                          WSR4SX
     I              FJPYDT                          WSPYDT
     I              FJCKTM                          WSCKTM
     I              FJPZDT                          WSPZDT
     I              FJCLTM                          WSCLTM
     I              FJP0DT                          WSP0DT
     I              FJCMTM                          WSCMTM
     I              FJP1DT                          WSP1DT
     I              FJCNTM                          WSCNTM
     I              FJP2DT                          WSP2DT
     I              FJCOTM                          WSCOTM
     I              FJP3DT                          WSP3DT
     I              FJCQTM                          WSCQTM
     I              FJUVST                          WSUVST
     I              FJUWST                          WSUWST
     I              FJUXST                          WSUXST
     I              FJAATM                          WSAATM
     I              FJAYNA                          WSAYNA
     I              FJA0NA                          WSA0NA
     I              FJAXDT                          WSAXDT
      *
     I@FLCPE8
      * Load Detail               Load/Stop(Desc)/Order
      * Renamed input format fields
     I              FLRMNB                          WTRMNB
     I              FLRUNB                          WTRUNB
     I              FLRVNB                          WTRVNB
     I              FLDQTX                          WTDQTX
     I              FLRWNB                          WTRWNB
     I              FLRXNB                          WTRXNB
     I              FLSQNB                          WTSQNB
     I              FLT0NB                          WTT0NB
     I              FLT1NB                          WTT1NB
     I              FLR1NB                          WTR1NB
     I              FLAIC3                          WTAIC3
     I              FLC4NB                          WTC4NB
     I              FLVCST                          WTVCST
     I              FLKEDT                          WTKEDT
     I              FLSXNB                          WTSXNB
     I              FLKFDT                          WTKFDT
     I              FLACTM                          WTACTM
     I              FLK5TX                          WTK5TX
     I              FLW5CD                          WTW5CD
     I              FLEJDT                          WTEJDT
     I              FLAGTM                          WTAGTM
     I              FLKJDT                          WTKJDT
     I              FLATTM                          WTATTM
     I              FLHDDT                          WTHDDT
     I              FLAUTM                          WTAUTM
     I              FLKKDT                          WTKKDT
     I              FLAVTM                          WTAVTM
     I              FLZ4NB                          WTZ4NB
     I              FLY7ST                          WTY7ST
     I              FLY2ST                          WTY2ST
     I              FLWHTX                          WTWHTX
     I              FLWITX                          WTWITX
     I              FLWJTX                          WTWJTX
     I              FLWKTX                          WTWKTX
     I              FLWLTX                          WTWLTX
     I              FLN7DT                          WTN7DT
     I              FLN8DT                          WTN8DT
     I              FLN9DT                          WTN9DT
     I              FLB3TM                          WTB3TM
     I              FLB4TM                          WTB4TM
     I              FLB5TM                          WTB5TM
     I              FLIASX                          WTIASX
     I              FLIBSX                          WTIBSX
     I              FLICSX                          WTICSX
     I              FLWVTX                          WTWVTX
     I              FLWWTX                          WTWWTX
     I              FLWXTX                          WTWXTX
     I              FLUVST                          WTUVST
     I              FLUWST                          WTUWST
     I              FLUXST                          WTUXST
     I              FLAATM                          WTAATM
     I              FLAYNA                          WTAYNA
     I              FLA0NA                          WTA0NA
     I              FLAXDT                          WTAXDT
      *
     I@FLCPKF
      * Load Detail               Co/Load/Order
      * Renamed input format fields
     I              FLRMNB                          WVRMNB
     I              FLRUNB                          WVRUNB
     I              FLRVNB                          WVRVNB
     I              FLDQTX                          WVDQTX
     I              FLRWNB                          WVRWNB
     I              FLRXNB                          WVRXNB
     I              FLSQNB                          WVSQNB
     I              FLT0NB                          WVT0NB
     I              FLT1NB                          WVT1NB
     I              FLR1NB                          WVR1NB
     I              FLAIC3                          WVAIC3
     I              FLC4NB                          WVC4NB
     I              FLVCST                          WVVCST
     I              FLKEDT                          WVKEDT
     I              FLSXNB                          WVSXNB
     I              FLKFDT                          WVKFDT
     I              FLACTM                          WVACTM
     I              FLK5TX                          WVK5TX
     I              FLW5CD                          WVW5CD
     I              FLEJDT                          WVEJDT
     I              FLAGTM                          WVAGTM
     I              FLKJDT                          WVKJDT
     I              FLATTM                          WVATTM
     I              FLHDDT                          WVHDDT
     I              FLAUTM                          WVAUTM
     I              FLKKDT                          WVKKDT
     I              FLAVTM                          WVAVTM
     I              FLZ4NB                          WVZ4NB
     I              FLY7ST                          WVY7ST
     I              FLY2ST                          WVY2ST
     I              FLWHTX                          WVWHTX
     I              FLWITX                          WVWITX
     I              FLWJTX                          WVWJTX
     I              FLWKTX                          WVWKTX
     I              FLWLTX                          WVWLTX
     I              FLN7DT                          WVN7DT
     I              FLN8DT                          WVN8DT
     I              FLN9DT                          WVN9DT
     I              FLB3TM                          WVB3TM
     I              FLB4TM                          WVB4TM
     I              FLB5TM                          WVB5TM
     I              FLIASX                          WVIASX
     I              FLIBSX                          WVIBSX
     I              FLICSX                          WVICSX
     I              FLWVTX                          WVWVTX
     I              FLWWTX                          WVWWTX
     I              FLWXTX                          WVWXTX
     I              FLUVST                          WVUVST
     I              FLUWST                          WVUWST
     I              FLUXST                          WVUXST
     I              FLAATM                          WVAATM
     I              FLAYNA                          WVAYNA
     I              FLA0NA                          WVA0NA
     I              FLAXDT                          WVAXDT
      *
     I@FLCPBW
      * Load Detail               Retrieval index
      * Renamed input format fields
     I              FLRMNB                          WWRMNB
     I              FLRUNB                          WWRUNB
     I              FLRVNB                          WWRVNB
     I              FLDQTX                          WWDQTX
     I              FLRWNB                          WWRWNB
     I              FLRXNB                          WWRXNB
     I              FLSQNB                          WWSQNB
     I              FLT0NB                          WWT0NB
     I              FLT1NB                          WWT1NB
     I              FLR1NB                          WWR1NB
     I              FLAIC3                          WWAIC3
     I              FLC4NB                          WWC4NB
     I              FLVCST                          WWVCST
     I              FLKEDT                          WWKEDT
     I              FLSXNB                          WWSXNB
     I              FLKFDT                          WWKFDT
     I              FLACTM                          WWACTM
     I              FLK5TX                          WWK5TX
     I              FLW5CD                          WWW5CD
     I              FLEJDT                          WWEJDT
     I              FLAGTM                          WWAGTM
     I              FLKJDT                          WWKJDT
     I              FLATTM                          WWATTM
     I              FLHDDT                          WWHDDT
     I              FLAUTM                          WWAUTM
     I              FLKKDT                          WWKKDT
     I              FLAVTM                          WWAVTM
     I              FLZ4NB                          WWZ4NB
     I              FLY7ST                          WWY7ST
     I              FLY2ST                          WWY2ST
     I              FLWHTX                          WWWHTX
     I              FLWITX                          WWWITX
     I              FLWJTX                          WWWJTX
     I              FLWKTX                          WWWKTX
     I              FLWLTX                          WWWLTX
     I              FLN7DT                          WWN7DT
     I              FLN8DT                          WWN8DT
     I              FLN9DT                          WWN9DT
     I              FLB3TM                          WWB3TM
     I              FLB4TM                          WWB4TM
     I              FLB5TM                          WWB5TM
     I              FLIASX                          WWIASX
     I              FLIBSX                          WWIBSX
     I              FLICSX                          WWICSX
     I              FLWVTX                          WWWVTX
     I              FLWWTX                          WWWWTX
     I              FLWXTX                          WWWXTX
     I              FLUVST                          WWUVST
     I              FLUWST                          WWUWST
     I              FLUXST                          WWUXST
     I              FLAATM                          WWAATM
     I              FLAYNA                          WWAYNA
     I              FLA0NA                          WWA0NA
     I              FLAXDT                          WWAXDT
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IINFDS1    E DSY2I1DSP
      * File information data structure
      *
     IYD01        DS
     I                                        1   70YI0101
     I                                        8  120YI01
      *
     IYM01        DS                        100
     I                                        1   70WGJODT
     I                                        8  140WGGXDT
     I                                       15  201WGQINV
     I                                       21  261WGWPRD
     I                                       27  321WGQSSH
     I                                       33  381WGWSLS
     I                                       39  441WGQAVL
     I                                       45  45 WGG2SX
      *
     IYW01        DS
     I                                        1   70XAJODT
     I                                        8  140XAGXDT
     I                                       15  201XAQINV
     I                                       21  261XAWPRD
     I                                       27  321XAQSSH
     I                                       33  381XAWSLS
     I                                       39  441XAQAVL
     I                                       45  45 XAG2SX
      *
      * Outward parameters
     IPARC        DS                              6
      * KEY : Order Header TRG          Retrieval index       NV
      * I : RST Company Number
     I                                    P   1   20PAAIC3
      * I : RST Order Number
     I                                    P   3   60PAC4NB
      *
      * Outward parameters
     IPBRC        DS                             10
      * KEY : Order Detail              Retrieval index
      * I : RST Company Number
     I                                    P   1   20PBAIC3
      * I : RST Order Number
     I                                    P   3   60PBC4NB
      * I : RST Order Sequence Number
     I                                    P   7   80PBDPNB
      * I : RST Order Secondary Line Seq
     I                                    P   9  100PBUENB
      *
      * Outward parameters
     IPCRC        DS                             27
      * KEY : Order Detail              CItm/PrWhs/SSD/Itm/DD+
      * I : RST Consumed Item Code
     I                                    P   1   40PCNUDT
      * I : RST Production Warehouse
     I                                        5   7 PCF6SX
      *
     IQOPBG1    E DSOPBGWKL0
      * UPD : Order Detail              Update index
      * Renamed input format fields
     I              OMAIC3                          WKAIC3
     I              OMC4NB                          WKC4NB
     I              OMDPNB                          WKDPNB
     I              OMUENB                          WKUENB
     I              OMHGCD                          WKHGCD
     I              OMAJCD                          WKAJCD
     I              OMBKC7                          WKBKC7
     I              OMCFC7                          WKCFC7
     I              OMGMST                          WKGMST
     I              OMGNST                          WKGNST
     I              OMMAVA                          WKMAVA
     I              OMKDVA                          WKKDVA
     I              OML8VA                          WKL8VA
     I              OML9VA                          WKL9VA
     I              OMGTST                          WKGTST
     I              OMGVST                          WKGVST
     I              OMGUST                          WKGUST
     I              OMQFST                          WKQFST
     I              OMAYVA                          WKAYVA
     I              OMEXDT                          WKEXDT
     I              OMLQCD                          WKLQCD
     I              OMRDCD                          WKRDCD
     I              OMQ7CD                          WKQ7CD
     I              OMBZPR                          WKBZPR
     I              OML6NB                          WKL6NB
     I              OMU1ST                          WKU1ST
     I              OMGIDT                          WKGIDT
     I              OMCRCD                          WKCRCD
     I              OMAGCD                          WKAGCD
     I              OMRZST                          WKRZST
     I              OMR0ST                          WKR0ST
     I              OMR1ST                          WKR1ST
     I              OMG7NA                          WKG7NA
     I              OMG8NA                          WKG8NA
     I              OMRPCD                          WKRPCD
     I              OMVEST                          WKVEST
     I              OMVGST                          WKVGST
     I              OMAVST                          WKAVST
     I              OMU0ST                          WKU0ST
     I              OMRFCD                          WKRFCD
     I              OMFZST                          WKFZST
     I              OMR1NB                          WKR1NB
     I              OMAVQT                          WKAVQT
     I              OMD0WG                          WKD0WG
     I              OMCCQT                          WKCCQT
     I              OMAUWG                          WKAUWG
     I              OMCBQT                          WKCBQT
     I              OMATWG                          WKATWG
     I              OMAQCS                          WKAQCS
     I              OMAGCS                          WKAGCS
     I              OMAKPR                          WKAKPR
     I              OMALPR                          WKALPR
     I              OMAUPR                          WKAUPR
     I              OMAVWG                          WKAVWG
     I              OMA4WG                          WKA4WG
     I              OMA5DT                          WKA5DT
     I              OMAODT                          WKAODT
     I              OMGNDT                          WKGNDT
     I              OMAMST                          WKAMST
     I              OMANST                          WKANST
     I              OMVAST                          WKVAST
     I              OMRGNB                          WKRGNB
     I              OMRHNB                          WKRHNB
     I              OMRINB                          WKRINB
     I              OMRBCD                          WKRBCD
     I              OMHICD                          WKHICD
     I              OMRNCD                          WKRNCD
     I              OMROCD                          WKROCD
     I              OMCXDT                          WKCXDT
     I              OMAJVN                          WKAJVN
     I              OMKXCD                          WKKXCD
     I              OMJPCD                          WKJPCD
     I              OMCQCD                          WKCQCD
     I              OMR4CD                          WKR4CD
     I              OMZ1ST                          WKZ1ST
     I              OMZ3ST                          WKZ3ST
     I              OMZ4ST                          WKZ4ST
     I              OMDUPR                          WKDUPR
     I              OMB6VL                          WKB6VL
     I              OMA1AA                          WKA1AA
     I              OMFZSX                          WKFZSX
     I              OMF0SX                          WKF0SX
     I              OMF1SX                          WKF1SX
     I              OMF2SX                          WKF2SX
     I              OMF3SX                          WKF3SX
     I              OMF4SX                          WKF4SX
     I              OMF5SX                          WKF5SX
     I              OMF6SX                          WKF6SX
     I              OMF7SX                          WKF7SX
     I              OMNTDT                          WKNTDT
     I              OMNUDT                          WKNUDT
     I              OMNVDT                          WKNVDT
     I              OMNWDT                          WKNWDT
     I              OMNXDT                          WKNXDT
     I              OMBUTM                          WKBUTM
     I              OMBVTM                          WKBVTM
     I              OMBWTM                          WKBWTM
     I              OMBXTM                          WKBXTM
     I              OMBYTM                          WKBYTM
     I              OMH5NX                          WKH5NX
     I              OMH6NX                          WKH6NX
     I              OMH7NX                          WKH7NX
     I              OMH8NX                          WKH8NX
     I              OMH9NX                          WKH9NX
     I              OMDVPR                          WKDVPR
     I              OMDWPR                          WKDWPR
     I              OMDXPR                          WKDXPR
     I              OMDYPR                          WKDYPR
     I              OMDZPR                          WKDZPR
     I              OMGSPR                          WKGSPR
     I              OMGTPR                          WKGTPR
     I              OMGUPR                          WKGUPR
     I              OMHOST                          WKHOST
     I              OMHPST                          WKHPST
     I              OMIOST                          WKIOST
     I              OMPEWG                          WKPEWG
     I              OMRINY                          WKRINY
     I              OMTIDT                          WKTIDT
     I              OMTJDT                          WKTJDT
     I              OMH2ST                          WKH2ST
     I              OMH0ST                          WKH0ST
     I              OMH1ST                          WKH1ST
     I              OMTKDT                          WKTKDT
     I              OMTLDT                          WKTLDT
     I              OMTMDT                          WKTMDT
     I              OMUVST                          WKUVST
     I              OMUWST                          WKUWST
     I              OMUXST                          WKUXST
     I              OMAATM                          WKAATM
     I              OMAYNA                          WKAYNA
     I              OMA0NA                          WKA0NA
     I              OMAXDT                          WKAXDT
      *
     IYARDCS      DS                            525
      * Message data for message Y2U0009.
     IMD0009      DS
     I                                        1  10 MDPGM
     I                                       11  20 MDACP
     I                                       21  30 MDFMT
     I                                       31  34 MDACT
     I                                       35  40 MDLBL
     IQOPBF1    E DSOPBFCPL0
      * UPD : Order Header TRG          Update index
      * Renamed input format fields
     I              BEAIC3                          WLAIC3
     I              BEC4NB                          WLC4NB
     I              BEJNCD                          WLJNCD
     I              BEANC7                          WLANC7
     I              BEBKC7                          WLBKC7
     I              BEBRTX                          WLBRTX
     I              BEHMNA                          WLHMNA
     I              BEHONA                          WLHONA
     I              BEHPNA                          WLHPNA
     I              BEHNNA                          WLHNNA
     I              BEDBCD                          WLDBCD
     I              BECKTX                          WLCKTX
     I              BEB0C7                          WLB0C7
     I              BEAETX                          WLAETX
     I              BEB1NA                          WLB1NA
     I              BEB3NA                          WLB3NA
     I              BEB4NA                          WLB4NA
     I              BEB2NA                          WLB2NA
     I              BEBHCD                          WLBHCD
     I              BEC8TX                          WLC8TX
     I              BEBCNA                          WLBCNA
     I              BEA0DT                          WLA0DT
     I              BEA5DT                          WLA5DT
     I              BEGNDT                          WLGNDT
     I              BEACDT                          WLACDT
     I              BEAQCD                          WLAQCD
     I              BEB6NA                          WLB6NA
     I              BEBYNA                          WLBYNA
     I              BEBZNA                          WLBZNA
     I              BEGTST                          WLGTST
     I              BEGVST                          WLGVST
     I              BEGUST                          WLGUST
     I              BEQFST                          WLQFST
     I              BECQCD                          WLCQCD
     I              BEGJST                          WLGJST
     I              BEGWST                          WLGWST
     I              BEGXST                          WLGXST
     I              BEGYST                          WLGYST
     I              BEAODT                          WLAODT
     I              BEAIVN                          WLAIVN
     I              BECXDT                          WLCXDT
     I              BEJZVA                          WLJZVA
     I              BEA1WG                          WLA1WG
     I              BEXIST                          WLXIST
     I              BEXJST                          WLXJST
     I              BEXKST                          WLXKST
     I              BEEIDT                          WLEIDT
     I              BEAFTM                          WLAFTM
     I              BEE8CD                          WLE8CD
     I              BEE9CD                          WLE9CD
     I              BERMNB                          WLRMNB
     I              BETBNB                          WLTBNB
     I              BER1NB                          WLR1NB
     I              BEPJST                          WLPJST
     I              BEU0ST                          WLU0ST
     I              BEU1ST                          WLU1ST
     I              BEQ2CD                          WLQ2CD
     I              BEU2ST                          WLU2ST
     I              BEVEST                          WLVEST
     I              BEVFST                          WLVFST
     I              BEVGST                          WLVGST
     I              BERPCD                          WLRPCD
     I              BERNNB                          WLRNNB
     I              BEVDST                          WLVDST
     I              BEATIN                          WLATIN
     I              BEU4ST                          WLU4ST
     I              BEU5ST                          WLU5ST
     I              BERSRN                          WLRSRN
     I              BEMHNA                          WLMHNA
     I              BEMINA                          WLMINA
     I              BEWBST                          WLWBST
     I              BER4CD                          WLR4CD
     I              BEBFCD                          WLBFCD
     I              BEQ4CD                          WLQ4CD
     I              BET3NB                          WLT3NB
     I              BESICD                          WLSICD
     I              BECONB                          WLCONB
     I              BECEST                          WLCEST
     I              BEAWDT                          WLAWDT
     I              BEJPCD                          WLJPCD
     I              BEXUST                          WLXUST
     I              BEZ1ST                          WLZ1ST
     I              BEVRVA                          WLVRVA
     I              BEOBST                          WLOBST
     I              BEBCST                          WLBCST
     I              BEBDST                          WLBDST
     I              BEB7VL                          WLB7VL
     I              BEGASX                          WLGASX
     I              BEGBSX                          WLGBSX
     I              BEGCSX                          WLGCSX
     I              BEGDSX                          WLGDSX
     I              BEFNSX                          WLFNSX
     I              BEFOSX                          WLFOSX
     I              BEFPSX                          WLFPSX
     I              BEFQSX                          WLFQSX
     I              BEFRSX                          WLFRSX
     I              BEFSSX                          WLFSSX
     I              BEFTSX                          WLFTSX
     I              BEFUSX                          WLFUSX
     I              BEFVSX                          WLFVSX
     I              BEFWSX                          WLFWSX
     I              BEFXSX                          WLFXSX
     I              BEFYSX                          WLFYSX
     I              BENODT                          WLNODT
     I              BENPDT                          WLNPDT
     I              BENQDT                          WLNQDT
     I              BENRDT                          WLNRDT
     I              BENSDT                          WLNSDT
     I              BEBPTM                          WLBPTM
     I              BEBQTM                          WLBQTM
     I              BEBRTM                          WLBRTM
     I              BEBSTM                          WLBSTM
     I              BEBTTM                          WLBTTM
     I              BEH0NX                          WLH0NX
     I              BEH1NX                          WLH1NX
     I              BEH2NX                          WLH2NX
     I              BEH3NX                          WLH3NX
     I              BEH4NX                          WLH4NX
     I              BEC0C7                          WLC0C7
     I              BEUVST                          WLUVST
     I              BEUWST                          WLUWST
     I              BEUXST                          WLUXST
     I              BEAATM                          WLAATM
     I              BEAYNA                          WLAYNA
     I              BEA0NA                          WLA0NA
     I              BEAXDT                          WLAXDT
      *
     IYBRDCS      DS                            779
      * Outward parameters
     IPDRC        DS                            779
      * RCD : Order Header TRG          Retrieval index       NV
      * I :  Company Number
     I                                    P   1   20PDAIC3
      * I :  Order Number
     I                                    P   3   60PDC4NB
      * I :  Order Type - Sales
     I                                        7   8 PDJNCD
      * I :  A/R Customer Number
     I                                    P   9  120PDANC7
      * I :  Ship To Customer
     I                                    P  13  160PDBKC7
      * I :  Ship To Name
     I                                       17  46 PDBRTX
      * I :  Ship To Address Line 1
     I                                       47  76 PDHMNA
      * I :  Ship To Address Line 2
     I                                       77 106 PDHONA
      * I :  Ship To Address Line 3
     I                                      107 136 PDHPNA
      * I :  Ship To City
     I                                      137 156 PDHNNA
      * I :  Ship To State Code
     I                                      157 158 PDDBCD
      * I :  Ship To Zip/Postal Code
     I                                      159 169 PDCKTX
      * I :  Bill to Customer
     I                                    P 170 1730PDB0C7
      * I :  Bill to Name
     I                                      174 203 PDAETX
      * I :  Bill to Address Line 1
     I                                      204 233 PDB1NA
      * I :  Bill to Address Line 2
     I                                      234 263 PDB3NA
      * I :  Bill to Address Line 3
     I                                      264 293 PDB4NA
      * I :  Bill to City
     I                                      294 313 PDB2NA
      * I :  Bill to State Code
     I                                      314 315 PDBHCD
      * I :  Bill to Zip/Postal Code
     I                                      316 326 PDC8TX
      * I :  Customer Purchase Order #
     I                                      327 341 PDBCNA
      * I :  Order Date
     I                                    P 342 3450PDA0DT
      * I :  Requested Ship Date
     I                                    P 346 3490PDA5DT
      * I :  Actual Shipped Date
     I                                    P 350 3530PDGNDT
      * I :  Cancel Date
     I                                    P 354 3570PDACDT
      * I :  Terms Code
     I                                      358 359 PDAQCD
      * I :  Special Instructions
     I                                      360 399 PDB6NA
      * I :  Special Instructions 2
     I                                      400 439 PDBYNA
      * I :  Carrier Code
     I                                      440 442 PDBZNA
      * I :  Comment Print Acknowledge
     I                                      443 443 PDGTST
      * I :  Comment Print Inv/Cr.Memo
     I                                      444 444 PDGVST
      * I :  Comment Print Pick Slip
     I                                      445 445 PDGUST
      * I :  Comment Print Ship Doc
     I                                      446 446 PDQFST
      * I :  Reason Code
     I                                      447 449 PDCQCD
      * I :  Order in Use
     I                                      450 450 PDGJST
      * I :  Header Status
     I                                      451 451 PDGWST
      * I :  Header Status Last
     I                                      452 452 PDGXST
      * I :  Order Type Print Status
     I                                      453 453 PDGYST
      * I :  Scheduled Ship Date
     I                                    P 454 4570PDAODT
      * I :  User Original Entry
     I                                      458 467 PDAIVN
      * I :  Date of Original Entry
     I                                    P 468 4710PDCXDT
      * I :  Order Value Total
     I                                    P 472 4772PDJZVA
      * I :  Order Weight Total
     I                                    P 478 4832PDA1WG
      * I :  Credit Hold
     I                                      484 484 PDXIST
      * I :  Production Hold
     I                                      485 485 PDXJST
      * I :  New Customer Hold
     I                                      486 486 PDXKST
      * I :  Requested Delivery Date
     I                                    P 487 4900PDEIDT
      * I :  Requested Delivery Time
     I                                    P 491 4930PDAFTM
      * I :  Accounts Receiv. Ent 1
     I                                      494 497 PDE8CD
      * I :  Accounts Receiv. Ent 2
     I                                      498 509 PDE9CD
      * I :  Load ID
     I                                    P 510 5130PDRMNB
      * I :  Absorbed Freight Rate CWT
     I                                    P 514 5162PDTBNB
      * I :  Rated Freight
     I                                    P 517 5222PDR1NB
      * I :  LTL Flag
     I                                      523 523 PDPJST
      * I :  Price Audit
     I                                      524 524 PDU0ST
      * I :  Price Status
     I                                      525 525 PDU1ST
      * I :  Shipping Method
     I                                      526 527 PDQ2CD
      * I :  Export Status
     I                                      528 528 PDU2ST
      * I :  Palletize
     I                                      529 529 PDVEST
      * I :  Shrink Wrap
     I                                      530 530 PDVFST
      * I :  Slip Sheet
     I                                      531 531 PDVGST
      * I :  Age Code
     I                                      532 532 PDRPCD
      * I :  Reefer Temperature
     I                                    P 533 5352PDRNNB
      * I :  Load Type
     I                                      536 536 PDVDST
      * I :  Attach to Invoice Number
     I                                    P 537 5400PDATIN
      * I :  Load Plan Order
     I                                      541 541 PDU4ST
      * I :  Print Pick Slip
     I                                      542 542 PDU5ST
      * I :  Resell Reference Number
     I                                    P 543 5460PDRSRN
      * I :  Special Comment 1
     I                                      547 576 PDMHNA
      * I :  Special Comment 2
     I                                      577 606 PDMINA
      * I :  Affect Auto Accruals
     I                                      607 607 PDWBST
      * I :  Sales Route Code
     I                                      608 610 PDR4CD
      * I :  Manager Level Code
     I                                      611 612 PDBFCD
      * I :  VP Level Code
     I                                      613 615 PDQ4CD
      * I :  Attach to Order Number
     I                                    P 616 6190PDT3NB
      * I :  Reason for Price Audit
     I                                      620 622 PDSICD
      * I :  Invoice Number
     I                                    P 623 6260PDCONB
      * I :  Invoice Suffix
     I                                      627 628 PDCEST
      * I :  Invoice Date
     I                                    P 629 6320PDAWDT
      * I :  Event Code
     I                                      633 634 PDJPCD
      * I :  Trans Contol AS400/Plant
     I                                      635 635 PDXUST
      * I :  Modified Flag
     I                                      636 636 PDZ1ST
      * I :  A/R order Value Total
     I                                    P 637 6422PDVRVA
      * I :  Billing Activity Type
     I                                      643 643 PDOBST
      * I :  Block Order Flag
     I                                      644 644 PDBCST
      * I :  Order Certification Flag
     I                                      645 645 PDBDST
      * I :  Invoice Order Value Tot
     I                                    P 646 6512PDB7VL
      * I :  Process Sts for 3C
     I                                      652 652 PDGASX
      * I :  Order Conf Fax Sts
     I                                      653 653 PDGBSX
      * I :  Manifest Fax Sts
     I                                      654 654 PDGCSX
      * I :  Invoice Fax Sts
     I                                      655 655 PDGDSX
      * I :  Transfer in Storage Ind
     I                                      656 656 PDFNSX
      * I :  Email Cust On Order Ship
     I                                      657 657 PDFOSX
      * I :  Order Emailed
     I                                      658 658 PDFPSX
      * I :  Export Docs Go w/Driver
     I                                      659 659 PDFQSX
      * I :  Shipping Temp Code C/F
     I                                      660 660 PDFRSX
      * I :  Broker Order Status
     I                                      661 661 PDFSSX
      * I :  Air Freight Order
     I                                      662 662 PDFTSX
      * I :  Order Requires Review
     I                                      663 664 PDFUSX
      * I :  OH Load Plan Ready
     I                                      665 666 PDFVSX
      * I :  Export USDA Approved
     I                                      667 668 PDFWSX
      * I :  HPB Ship to Warehouse
     I                                      669 671 PDFXSX
      * I :  OH TF Exempt Code
     I                                      672 674 PDFYSX
      * I :  OH Appt Confirmation Dt
     I                                    P 675 6780PDNODT
      * I :  JPN Invoice Issuance Date
     I                                    P 679 6820PDNPDT
      * I :  Load Actual Shipped Date
     I                                    P 683 6860PDNQDT
      * I :  Load BOL Complete Date
     I                                    P 687 6900PDNRDT
      * I :  Load Truck Departure Date
     I                                    P 691 6940PDNSDT
      * I :  Maximum Gross Weight
     I                                    P 695 6980PDBPTM
      * I :  Time of Original Entry
     I                                    P 699 7020PDBQTM
      * I :  OH Appt Confirmation Tm
     I                                    P 703 7060PDBRTM
      * I :  Load BOL Complete Time
     I                                    P 707 7100PDBSTM
      * I :  Load Truck Departure Time
     I                                    P 711 7140PDBTTM
      * I :  Act Frt Reference Amount
     I                                    P 715 7202PDH0NX
      * I :  Act Non-Ref Frt Amount
     I                                    P 721 7262PDH1NX
      * I :  OH Fuel Surcharge Amount
     I                                    P 727 7322PDH2NX
      * I :  OH Total Non-Ref Frt Amt
     I                                    P 733 7382PDH3NX
      * I :  OH Total Ref Frt Amt
     I                                    P 739 7442PDH4NX
      * I :  Claim Number
     I                                    P 745 7480PDC0C7
      * I :  EDI Status 1
     I                                      749 749 PDUVST
      * I :  EDI Status 2
     I                                      750 750 PDUWST
      * I :  EDI Status 3
     I                                      751 751 PDUXST
      * I :  Job Time
     I                                    P 752 7550PDAATM
      * I :  User Id
     I                                      756 765 PDAYNA
      * I :  Job Name
     I                                      766 775 PDA0NA
      * I :  Job Date
     I                                    P 776 7790PDAXDT
      *
      * Outward parameters
     IPERC        DS                             82
      * RCD : Load Order Change Log     Retrieval index
      * N :  Sequence Number
     I                                    P   9  100PEDXNB
      * I :  Load ID
     I                                    P  11  140PERMNB
      * I :  Stop/Drop
     I                                    P  15  170PERVNB
      * I :  Load Change Type
     I                                       18  23 PERVST
      * I :  Department Control Code
     I                                       24  26 PEUJST
      * I :  Change Log Prior Value
     I                                       27  38 PEMNTX
      * I :  Change Log New Value
     I                                       39  50 PEMOTX
      * I :  User Id
     I                                       51  60 PEAYNA
      * I :  Job Name
     I                                       61  70 PEA0NA
      * I :  Carrier Code
     I                                       71  73 PEBZNA
      * N :  Carrier Broker Carrier Co
     I                                       74  76 PEXMCD
      * I :  Company Number
     I                                    P  77  780PEAIC3
      * I :  Order Number
     I                                    P  79  820PEC4NB
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      * Outward parameters
     IPFRC        DS                             11
      * KEY : Load Detail               Load/Stop/Order
      * I :  Load ID
     I                                    P   1   40PFRMNB
      *
     IQOMFJ1    E DSOMFJCPL1
      * UPD : Load Header               Update index
      * Renamed input format fields
     I              FJRMNB                          WSRMNB
     I              FJAIC3                          WSAIC3
     I              FJAODT                          WSAODT
     I              FJPJST                          WSPJST
     I              FJPKST                          WSPKST
     I              FJRNNB                          WSRNNB
     I              FJDMTX                          WSDMTX
     I              FJDNTX                          WSDNTX
     I              FJDOTX                          WSDOTX
     I              FJWTTX                          WSWTTX
     I              FJWUTX                          WSWUTX
     I              FJRPNB                          WSRPNB
     I              FJFLAM                          WSFLAM
     I              FJXQST                          WSXQST
     I              FJRRNB                          WSRRNB
     I              FJDXTX                          WSDXTX
     I              FJDYTX                          WSDYTX
     I              FJSBNB                          WSSBNB
     I              FJBZNA                          WSBZNA
     I              FJRONB                          WSRONB
     I              FJSQNB                          WSSQNB
     I              FJR1NB                          WSR1NB
     I              FJVCST                          WSVCST
     I              FJVDST                          WSVDST
     I              FJSDNB                          WSSDNB
     I              FJPAOU                          WSPAOU
     I              FJDGWG                          WSDGWG
     I              FJSXNB                          WSSXNB
     I              FJHADT                          WSHADT
     I              FJAART                          WSAART
     I              FJDHWG                          WSDHWG
     I              FJDIWG                          WSDIWG
     I              FJAQDT                          WSAQDT
     I              FJS6NB                          WSS6NB
     I              FJT4NB                          WST4NB
     I              FJPRTM                          WSPRTM
     I              FJNPSV                          WSNPSV
     I              FJJ8TX                          WSJ8TX
     I              FJTLMI                          WSTLMI
     I              FJJ9TX                          WSJ9TX
     I              FJQ2CD                          WSQ2CD
     I              FJVPCD                          WSVPCD
     I              FJDBCD                          WSDBCD
     I              FJGRWE                          WSGRWE
     I              FJXCCD                          WSXCCD
     I              FJU2ST                          WSU2ST
     I              FJF9DT                          WSF9DT
     I              FJONTM                          WSONTM
     I              FJJ4DT                          WSJ4DT
     I              FJTRTM                          WSTRTM
     I              FJJ5DT                          WSJ5DT
     I              FJSPTM                          WSSPTM
     I              FJJ6DT                          WSJ6DT
     I              FJLFTM                          WSLFTM
     I              FJJ7DT                          WSJ7DT
     I              FJBOTM                          WSBOTM
     I              FJJ8DT                          WSJ8DT
     I              FJBLTM                          WSBLTM
     I              FJKIDT                          WSKIDT
     I              FJASTM                          WSASTM
     I              FJKADT                          WSKADT
     I              FJAJCM                          WSAJCM
     I              FJXACD                          WSXACD
     I              FJOANA                          WSOANA
     I              FJK4TX                          WSK4TX
     I              FJVOAG                          WSVOAG
     I              FJKBDT                          WSKBDT
     I              FJNBBO                          WSNBBO
     I              FJW4CD                          WSW4CD
     I              FJEFDT                          WSEFDT
     I              FJCNTN                          WSCNTN
     I              FJKCDT                          WSKCDT
     I              FJTMIN                          WSTMIN
     I              FJKDDT                          WSKDDT
     I              FJVMNB                          WSVMNB
     I              FJOCFR                          WSOCFR
     I              FJKJDT                          WSKJDT
     I              FJATTM                          WSATTM
     I              FJOTRS                          WSOTRS
     I              FJRNST                          WSRNST
     I              FJBRBK                          WSBRBK
     I              FJEIDT                          WSEIDT
     I              FJRMST                          WSRMST
     I              FJAJCD                          WSAJCD
     I              FJKKDT                          WSKKDT
     I              FJAVTM                          WSAVTM
     I              FJKZDT                          WSKZDT
     I              FJAXTM                          WSAXTM
     I              FJLHOS                          WSLHOS
     I              FJLHOR                          WSLHOR
     I              FJWNTX                          WSWNTX
     I              FJOITX                          WSOITX
     I              FJOJTX                          WSOJTX
     I              FJLLDT                          WSLLDT
     I              FJLSHG                          WSLSHG
     I              FJYPST                          WSYPST
     I              FJK0DT                          WSK0DT
     I              FJAYTM                          WSAYTM
     I              FJKNNX                          WSKNNX
     I              FJICWG                          WSICWG
     I              FJIDWG                          WSIDWG
     I              FJH9SX                          WSH9SX
     I              FJWOTX                          WSWOTX
     I              FJK1DT                          WSK1DT
     I              FJAZTM                          WSAZTM
     I              FJK2DT                          WSK2DT
     I              FJA0TM                          WSA0TM
     I              FJROST                          WSROST
     I              FJRPST                          WSRPST
     I              FJRQST                          WSRQST
     I              FJRRST                          WSRRST
     I              FJZBVA                          WSZBVA
     I              FJWPTX                          WSWPTX
     I              FJWQTX                          WSWQTX
     I              FJWRTX                          WSWRTX
     I              FJWSTX                          WSWSTX
     I              FJRVSX                          WSRVSX
     I              FJRUSX                          WSRUSX
     I              FJRWSX                          WSRWSX
     I              FJRXSX                          WSRXSX
     I              FJRYSX                          WSRYSX
     I              FJRZSX                          WSRZSX
     I              FJR0SX                          WSR0SX
     I              FJR1SX                          WSR1SX
     I              FJR2SX                          WSR2SX
     I              FJR3SX                          WSR3SX
     I              FJR4SX                          WSR4SX
     I              FJPYDT                          WSPYDT
     I              FJCKTM                          WSCKTM
     I              FJPZDT                          WSPZDT
     I              FJCLTM                          WSCLTM
     I              FJP0DT                          WSP0DT
     I              FJCMTM                          WSCMTM
     I              FJP1DT                          WSP1DT
     I              FJCNTM                          WSCNTM
     I              FJP2DT                          WSP2DT
     I              FJCOTM                          WSCOTM
     I              FJP3DT                          WSP3DT
     I              FJCQTM                          WSCQTM
     I              FJUVST                          WSUVST
     I              FJUWST                          WSUWST
     I              FJUXST                          WSUXST
     I              FJAATM                          WSAATM
     I              FJAYNA                          WSAYNA
     I              FJA0NA                          WSA0NA
     I              FJAXDT                          WSAXDT
      *
     IYCRDCS      DS                            793
      /EJECT
     IXD2T        DS
      * Internal date
     I                                        1   70XDINT2
     I                                        1   30XDINY2
     I                                        4   50XDINM2
     I                                        6   70XDIND2
     IYDRDCS      DS                            793
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Order Detail
      * B : RST Company Number
     I                                    P   1   20P1AIC3
      * B : RST Order Number
     I                                    P   3   60P1C4NB
     IP2PARM      DS
      * FLD: Order Header TRG
      * B : MAP Order Type - Sales
     I                                        1   2 P2JNCD
      * I : MAP Ship To City
     I                                        3  22 P2HNNA
      * I : MAP Ship To State Code
     I                                       23  24 P2DBCD
      * I : MAP Customer Purchase Order #
     I                                       25  39 P2BCNA
      * I : MAP Order Date
     I                                    P  40  430P2A0DT
      * B : MAP Requested Ship Date
     I                                    P  44  470P2A5DT
      * B : MAP Header Status
     I                                       48  48 P2GWST
      * B : MAP Scheduled Ship Date
     I                                    P  49  520P2AODT
      * B : MAP Credit Hold
     I                                       53  53 P2XIST
      * B : MAP Production Hold
     I                                       54  54 P2XJST
      * B : MAP Requested Delivery Date
     I                                    P  55  580P2EIDT
      * I : MAP Load ID
     I                                    P  59  620P2RMNB
     IP3PARM      DS
      * B : MAP Application Code
     I                                        1   6 P3DNCD
     IP4PARM      DS
      * N :  Load Status
     I                                        1   1 P4PKST
     IP5PARM      DS
      * FLD: PS Prod Item Schedule
      * N :  Production Type
     I                                        1   1 P5V5ST
      * N :  Production Date
     I                                    P   2   50P5ELDT
      * N :  PS Avg Piece Wgt
     I                                    P   6  102P5F8WG
      * N :  PS Weight Ship Cut Adj
     I                                    P  11  152P5E0WG
      * N :  PS Pieces Ship Cut Adj
     I                                    P  16  190P5D6NB
     IP6PARM      DS
      * FLD: Order Auth History
      * N :  Sequence Number
     I                                    P   1   20P6DXNB
      * N :  Bill to Customer
     I                                    P   3   60P6B0C7
      * N :  Requested Delivery Time
     I                                    P   7   90P6AFTM
     IP7PARM      DS
      * FLD: Company Item
      * N :  U/M - Primary
     I                                        1   2 P7ADCD
      * N :  Unit Weight
     I                                    P   3   82P7AIWG
      * N :  Fresh Chilling Time
     I                                    P   9  112P7CHTM
      * N :  Piece Count Item
     I                                       12  12 P7PCCT
      * N :  Pieces Per Bag
     I                                    P  13  160P7BDNB
      * N :  Bags Per Unit
     I                                    P  17  200P7BJNB
     IP8PARM      DS
      * FLD: *Arrays
      * N :  Avail Ship Date 1 USR
     I                                    P   1   40P8H6DT
      * N :  Avail Ship Date 2 USR
     I                                    P   5   80P8H7DT
      * N :  Avail Ship Date 3 USR
     I                                    P   9  120P8H8DT
      * N :  Avail Ship Date 4 USR
     I                                    P  13  160P8H9DT
      * N :  Avail Ship Date 5 USR
     I                                    P  17  200P8IADT
      * N :  Avail Ship Date 6 USR
     I                                    P  21  240P8IBDT
      * N :  Avail Ship Date 7 USR
     I                                    P  25  280P8INDT
      * N :  Avail Ship Date 8 USR
     I                                    P  29  320P8IODT
      * N :  Avail Ship Date 9 USR
     I                                    P  33  360P8IPDT
      * N :  Avail Ship Date 10 USR
     I                                    P  37  400P8IQDT
      * N :  Avail Ship Date 11 USR
     I                                    P  41  440P8IRDT
      * N :  Avail Ship Date 12 USR
     I                                    P  45  480P8ISDT
      * N :  Avail Ship Date 13 USR
     I                                    P  49  520P8ITDT
      * N :  Avail Ship Date 14 USR
     I                                    P  53  560P8IUDT
      * N :  Avail Ship Date 15 USR
     I                                    P  57  600P8IVDT
      * N :  Avail Ship Date 16 USR
     I                                    P  61  640P8IWDT
      * N :  Avail Ship Date 17 USR
     I                                    P  65  680P8IXDT
      * N :  Avail Ship Date 18 USR
     I                                    P  69  720P8IYDT
      * N :  Avail Ship Date 19 USR
     I                                    P  73  760P8IZDT
      * N :  Avail Ship Date 20 USR
     I                                    P  77  800P8I0DT
      * N :  Avail Ship Date 21 USR
     I                                    P  81  840P8I1DT
      * N :  Day 1 Availability USR
     I                                    P  85  881P8D1AV
      * N :  Day 2 Availability USR
     I                                    P  89  921P8D2AV
      * N :  Day 3 Availability USR
     I                                    P  93  961P8D3AV
      * N :  Day 4 Availability USR
     I                                    P  97 1001P8D4AV
      * N :  Day 5 Availability USR
     I                                    P 101 1041P8D5AV
      * N :  Day 6 Availability USR
     I                                    P 105 1081P8D6AV
      * N :  Day 7 Availability USR
     I                                    P 109 1121P8D7AV
      * N :  Day 8 Availability USR
     I                                    P 113 1161P8D8AV
      * N :  Day 9 Availability USR
     I                                    P 117 1201P8D9AV
      * N :  Day 10 Availability USR
     I                                    P 121 1241P8D1AB
      * N :  Day 11 Availability USR
     I                                    P 125 1281P8D2AB
      * N :  Day 12 Availability USR
     I                                    P 129 1321P8D3AB
      * N :  Day 13 Availability USR
     I                                    P 133 1361P8D4AB
      * N :  Day 14 Availability USR
     I                                    P 137 1401P8D5AB
      * N :  Day 15 Availability USR
     I                                    P 141 1441P8D6AB
      * N :  Day 16 Availability USR
     I                                    P 145 1481P8D7AB
      * N :  Day 17 Availability USR
     I                                    P 149 1521P8D8AB
      * N :  Day 18 Availability USR
     I                                    P 153 1561P8D9AB
      * N :  Day 19 Availability USR
     I                                    P 157 1601P8D1AL
      * N :  Day 20 Availability USR
     I                                    P 161 1641P8D2AL
      * N :  Day 21 Availability USR
     I                                    P 165 1681P8D3AL
      * N :  Load Size USR
     I                                    P 169 1720P8LDSZ
      * N :  Quantity Adjustment USR
     I                                    P 173 1761P8WADJ
      * N :  Company Name
     I                                      177 206 P8APTX
      * N :  Week Number
     I                                    P 207 2080P8EINB
     IP9PARM      DS
      * FLD: Warehouse
      * N :  Warehouse Description
     I                                        1  30 P9F8NA
      * N :  Warehouse Type
     I                                       31  32 P9WPST
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'CD7 Non numeric data'
      * Message data for 'Load Locked Opt Invalid'
      * *SFLSEL
     I                                        1   1 ZA0001
      * Message data for 'Order in use'
      * Order Number
     I                                        1   7 ZA0002
      * Message data for 'No Orders Assinged - INF'
      * Load ID
     I                                    P   1   40ZA0003
      * *SFLSEL
     I                                        5   5 ZA0004
      * Message data for 'Blck Ord on Ld-no UPD-INF'
      * *SFLSEL
     I                                        1   1 ZA0005
      * Load ID
     I                                    P   2   50ZA0006
      * Message data for 'Load Cant be Locked - INF'
      * *SFLSEL
     I                                        1   1 ZA0007
      * Load ID
     I                                    P   2   50ZA0008
      * Message data for 'Carrier must be ent.- INF'
      * Carrier Code
     I                                        1   3 ZA0009
      * Load ID
     I                                    P   4   70ZA0010
      * Message data for 'Truck size needed - INF'
      * Truck Size
     I                                        1   7 ZA0011
      * Load ID
     I                                    P   8  110ZA0012
      * Message data for 'Shipping Mthd req - INF'
      * Shipping Method
     I                                        1   2 ZA0013
      * Message data for 'Load has ords w/o stp-INF'
      * Load ID
     I                                    P   1   40ZA0014
      * Message data for 'Load is not accepted- INF'
      * Load ID
     I                                    P   1   40ZA0015
      * Message data for 'Load has Ords on Hold-INF'
      * Load ID
     I                                    P   1   40ZA0016
      * *SFLSEL
     I                                        5   5 ZA0017
      * Message data for 'Load has Cncld Ords - INF'
      * Load ID
     I                                    P   1   40ZA0018
      * *SFLSEL
     I                                        5   5 ZA0019
      * Message data for 'Load has Ords in Use-INF'
      * *SFLSEL
     I                                        1   1 ZA0020
      * Load ID
     I                                    P   2   50ZA0021
      * Message data for 'Order detail needs review'
      * *SFLSEL
     I                                        1   1 ZA0022
      * Load ID
     I                                    P   2   50ZA0023
      * Message data for 'Load Weight LT Minimum'
      * Load ID
     I                                    P   1   40ZA0024
      * Message data for 'Preliminary Pick Printing'
      * USR Warehouse Code
     I                                        1   3 ZA0025
      * USR CDE Parm 1
     I                                        4   6 ZA0026
      * USR CDE Parm 2
     I                                        7   9 ZA0027
      * USR CDE Parm 3
     I                                       10  12 ZA0028
      * USR CDE Parm 4
     I                                       13  15 ZA0029
      * USR CDE Parm 5
     I                                       16  18 ZA0030
      * USR CDE Parm 6
     I                                       19  21 ZA0031
      * USR CDE Parm 7
     I                                       22  24 ZA0032
      * USR CDE Parm 8
     I                                       25  27 ZA0033
      * USR CDE Parm 9
     I                                       28  30 ZA0034
      * Message data for 'Load Locked'
      * Load ID
     I                                    P   1   40ZA0035
      * Message data for 'Application access denied'
      * User Profile Name
     I                                        1  10 ZA0036
      * Application Code
     I                                       11  16 ZA0037
      * Message data for 'Application access denied'
      * User Profile Name
     I                                        1  10 ZA0038
      * Application Code
     I                                       11  16 ZA0039
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1AIC3    PARM P1AIC3    WP0001  30       Company Number
     C           P1C4NB    PARM P1C4NB    WP0002  70       Order Number
     C           P2JNCD    PARM P2JNCD    WP0003  2        Order Type - Sa
     C           P2HNNA    PARM           WP0004 20        Ship To City
     C           P2DBCD    PARM           WP0005  2        Ship To State C
     C           P2BCNA    PARM           WP0006 15        Customer Purcha
     C           P2A0DT    PARM           WP0007  70       Order Date
     C           P2A5DT    PARM P2A5DT    WP0008  70       Requested Ship
     C           P2GWST    PARM P2GWST    WP0009  1        Header Status
     C           P2AODT    PARM P2AODT    WP0010  70       Scheduled Ship
     C           P2XIST    PARM P2XIST    WP0011  1        Credit Hold
     C           P2XJST    PARM P2XJST    WP0012  1        Production Hold
     C           P2EIDT    PARM P2EIDT    WP0013  70       Requested Deliv
     C           P2RMNB    PARM           WP0014  70       Load ID
     C           P3DNCD    PARM P3DNCD    WP0015  6        Application Cod
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
     C                     DO   *HIVAL
      * Initialise & load subfile page
     C                     EXSR BAIZSF
     C                     MOVEL'N'       W0RSF   1
      * Display screen until reload requested
     C           W0RSF     DOWEQ'N'
      * Display screen
     C                     EXSR CAEXFM
      * Process response
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Request subfile reload
     C   30                CAS            FBRQRL
      * Display next SFL page
     C   27                CAS            BBLDSF
      * Process screen input
     C                     CAS            DAPR##
     C                     END
      *
     C                     END                             OD W0RSF
     C                     END                             OD *HIVAL
      *****************************************************************
      /EJECT
     CSR         BAIZSF    BEGSR
      *================================================================
      * Initialise and load subfile page
      *================================================================
      * Clear subfile
     C                     SETON                     80
     C                     WRITE#SFLCTL
     C                     SETOF                     80
      * Reset no of records in subfile
     C                     Z-ADD*ZERO     ##RRMX  50 81     SETOF 81
      * USER: Initialize subfile control
      * CTL = PAR By name
     C                     Z-ADDP1AIC3    #2AIC3           Company Number
     C                     Z-ADDP1C4NB    #2C4NB           Order Number
     C                     MOVELP2HNNA    #2HNNA           Ship To City
     C                     MOVELP2DBCD    #2DBCD           Ship To State C
     C                     Z-ADDP6AFTM    #2AFTM           Requested Deliv
     C                     Z-ADDP2A0DT    #PA0DT           Order Date
     C                     MOVELP2BCNA    #PBCNA           Customer Purcha
     C                     Z-ADDP2AODT    #2AODT           Scheduled Ship
     C                     MOVELP2JNCD    #2JNCD           Order Type - Sa
     C                     MOVELP2XIST    #2XIST           Credit Hold
     C                     MOVELP2XJST    #2XJST           Production Hold
     C                     Z-ADDP2A5DT    #2A5DT           Requested Ship
     C                     Z-ADDP2EIDT    #2EIDT           Requested Deliv
     C                     Z-ADDP2RMNB    #2RMNB           Load ID
     C                     MOVELP2GWST    #2GWST           Header Status
     C                     MOVELP3DNCD    #PDNCD           Application Cod
     C                     Z-ADDP8D1AV    #CD1AV           Day 1 Availabil
      * RTV Sales Route/Desc   RT - PD Order Header  * 
     C                     EXSR SARVGN
      * RTV Hold/Status        RT - Order Header TRG  * 
     C                     EXSR SCRVGN
      * Ensure Credit Hold is N if blank passed in
      * CASE: CTL.Credit Hold EQ WRK.BLANK
     C           #2XIST    IFEQ WUGSTX                     *IF
     C                     MOVEL'N'       #2XIST           Credit Hold
     C                     END                             *FI
      * Ensure Prod Hold is N if blank passed in
      * CASE: CTL.Production Hold EQ WRK.BLANK
     C           #2XJST    IFEQ WUGSTX                     *IF
     C                     MOVEL'N'       #2XJST           Production Hold
     C                     END                             *FI
     C                     Z-ADD##JDT     #CFFDT           USR Day 1
      * RTV Next Prod Date     RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0001           Company Number
     C                     Z-ADD#CFFDT    WL0002           Post to G/L Dat
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0003    #CE1DT           Production Date
      * RTV Next Prod Date     RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0001           Company Number
     C                     Z-ADD#CE1DT    WL0002           Post to G/L Dat
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0003    #CE2DT           Production Date
     C                     Z-ADD1         P8EINB           Week Number
      * RTV Mon-Sat Dates      IF
      * Rtv Week Number       RT - Calendar  * 
     C                     EXSR SERVGN
      * RTV Mon-Sat w/Wk#      RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0004           Company Number
     C                     Z-ADDWUESNB    WL0005           Accounting Year
     C                     Z-ADDP8EINB    WL0006           Week Number
     C                     MOVEL'Y'       WL0014    P      First Time Flag
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0007    WUJHDT           Date Mon USR
     C                     Z-ADDWL0008    WUJIDT           Date Tue USR
     C                     Z-ADDWL0009    WUJJDT           Date Wed USR
     C                     Z-ADDWL0010    WUJKDT           Date Thu USR
     C                     Z-ADDWL0011    WUJLDT           Date Fri USR
     C                     Z-ADDWL0012    WUJMDT           Date Sat USR
     C                     Z-ADDWL0013    WUJNDT           Date Sun USR
      * CASE: If any of the dates are zero
      *  - c1 OR c2 OR c3 OR c4 OR c5 OR c6
      *   |- c1    : PAR.Date Mon USR EQ WRK.ZERO
      *   |- c2    : PAR.Date Tue USR EQ WRK.ZERO
      *   |- c3    : PAR.Date Wed USR EQ WRK.ZERO
      *   |- c4    : PAR.Date Thu USR EQ WRK.ZERO
      *   |- c5    : PAR.Date Fri USR EQ WRK.ZERO
      *   |- c6    : PAR.Date Sat USR EQ WRK.ZERO
      *   '-
     C           WUJHDT    IFEQ WUW0NB                     *IF
     C           WUJIDT    OREQ WUW0NB                     *OR
     C           WUJJDT    OREQ WUW0NB                     *OR
     C           WUJKDT    OREQ WUW0NB                     *OR
     C           WUJLDT    OREQ WUW0NB                     *OR
     C           WUJMDT    OREQ WUW0NB                     *OR
      * And the Week is 52 or 53
      * CASE: PAR.Week Number is Year End
     C           P8EINB    IFGE 52                         *IF
     C           P8EINB    ANDLE53
     C                     ADD  1         WUESNB           Accounting Year
      * RTV Mon-Sat w/Wk#      RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0004           Company Number
     C                     Z-ADDWUESNB    WL0005           Accounting Year
     C                     Z-ADD1         WL0006           Week Number
     C                     MOVEL'N'       WL0014    P      First Time Flag
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0007    WUJHDT           Date Mon USR
     C                     Z-ADDWL0008    WUJIDT           Date Tue USR
     C                     Z-ADDWL0009    WUJJDT           Date Wed USR
     C                     Z-ADDWL0010    WUJKDT           Date Thu USR
     C                     Z-ADDWL0011    WUJLDT           Date Fri USR
     C                     Z-ADDWL0012    WUJMDT           Date Sat USR
     C                     Z-ADDWL0013    WUJNDT           Date Sun USR
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  -1        WUESNB           Accounting Year
      * RTV Mon-Sat w/Wk#      RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0004           Company Number
     C                     Z-ADDWUESNB    WL0005           Accounting Year
     C                     Z-ADD53        WL0006           Week Number
     C                     MOVEL'N'       WL0014    P      First Time Flag
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0007    WUJHDT           Date Mon USR
     C                     Z-ADDWL0008    WUJIDT           Date Tue USR
     C                     Z-ADDWL0009    WUJJDT           Date Wed USR
     C                     Z-ADDWL0010    WUJKDT           Date Thu USR
     C                     Z-ADDWL0011    WUJLDT           Date Fri USR
     C                     Z-ADDWL0012    WUJMDT           Date Sat USR
     C                     Z-ADDWL0013    WUJNDT           Date Sun USR
     C                     END                             *FI
     C                     END                             *FI
      * Rtv PA Shipdate-21+SunRT - Calendar  * 
     C                     EXSR SGRVGN
      * Position DBF file
     C           KPOS      KLIST
     C                     KFLD           OMAIC3           Company Number
     C                     KFLD           OMC4NB           Order Number
     C                     KFLD           OMDPNB           Order Sequence
     C                     KFLD           OMUENB           Order Secondary
      * Setup key
     C                     Z-ADD#2AIC3    OMAIC3
     C                     Z-ADD#2C4NB    OMC4NB
     C                     Z-ADD#2DPNB    OMDPNB
     C                     Z-ADD#2UENB    OMUENB
     C           KPOS      SETLL@BGWKL1
     C           KRST      KLIST
     C                     KFLD           OMAIC3           Company Number
     C                     KFLD           OMC4NB           Order Number
      * Setup key
     C                     Z-ADD#2AIC3    OMAIC3
     C                     Z-ADD#2C4NB    OMC4NB
     C           KRST      READE@BGWKL1                8782*82=EOF
      * Save previous selector values
     C           *LIKE     DEFN #2U2ST    WZU2ST
     C                     MOVEL#2U2ST    WZU2ST           Export Status
     C           *LIKE     DEFN #2AFTM    WZAFTM
     C                     MOVEL#2AFTM    WZAFTM           Requested Deliv
     C           *LIKE     DEFN #2GJST    WZGJST
     C                     MOVEL#2GJST    WZGJST           Order in Use
     C           *LIKE     DEFN #2DPNB    WZDPNB
     C                     MOVEL#2DPNB    WZDPNB           Order Sequence
     C           *LIKE     DEFN #2UENB    WZUENB
     C                     MOVEL#2UENB    WZUENB           Order Secondary
     C           *LIKE     DEFN #2RPCD    WZRPCD
     C                     MOVEL#2RPCD    WZRPCD           Age Code
     C           *LIKE     DEFN #2AVQT    WZAVQT
     C                     MOVEL#2AVQT    WZAVQT           Quantity Ordere
     C           *LIKE     DEFN #2D0WG    WZD0WG
     C                     MOVEL#2D0WG    WZD0WG           Weight Ordered
     C           *LIKE     DEFN #2CCQT    WZCCQT
     C                     MOVEL#2CCQT    WZCCQT           Quantity Schedu
     C           *LIKE     DEFN #2AUWG    WZAUWG
     C                     MOVEL#2AUWG    WZAUWG           Weight Schedule
     C           *LIKE     DEFN #2AIC3    WZAIC3
     C                     MOVEL#2AIC3    WZAIC3           Company Number
     C           *LIKE     DEFN #2BKC7    WZBKC7
     C                     MOVEL#2BKC7    WZBKC7           Ship To Custome
     C           *LIKE     DEFN #2C4NB    WZC4NB
     C                     MOVEL#2C4NB    WZC4NB           Order Number
     C           *LIKE     DEFN #2HNNA    WZHNNA
     C                     MOVEL#2HNNA    WZHNNA           Ship To City
     C           *LIKE     DEFN #2DBCD    WZDBCD
     C                     MOVEL#2DBCD    WZDBCD           Ship To State C
     C           *LIKE     DEFN #2AODT    WZAODT
     C                     MOVEL#2AODT    WZAODT           Scheduled Ship
     C           *LIKE     DEFN #2JNCD    WZJNCD
     C                     MOVEL#2JNCD    WZJNCD           Order Type - Sa
     C           *LIKE     DEFN #2XIST    WZXIST
     C                     MOVEL#2XIST    WZXIST           Credit Hold
     C           *LIKE     DEFN #2XJST    WZXJST
     C                     MOVEL#2XJST    WZXJST           Production Hold
     C           *LIKE     DEFN #2A5DT    WZA5DT
     C                     MOVEL#2A5DT    WZA5DT           Requested Ship
     C           *LIKE     DEFN #2R4CD    WZR4CD
     C                     MOVEL#2R4CD    WZR4CD           Sales Route Cod
     C           *LIKE     DEFN #2EIDT    WZEIDT
     C                     MOVEL#2EIDT    WZEIDT           Requested Deliv
     C           *LIKE     DEFN #2RMNB    WZRMNB
     C                     MOVEL#2RMNB    WZRMNB           Load ID
     C           *LIKE     DEFN #2GWST    WZGWST
     C                     MOVEL#2GWST    WZGWST           Header Status
     C           *LIKE     DEFN #2HGCD    WZHGCD
     C                     MOVEL#2HGCD    WZHGCD           Item Code
     C           *LIKE     DEFN #2AJCD    WZAJCD
     C                     MOVEL#2AJCD    WZAJCD           Warehouse Code
     C           *LIKE     DEFN #2A1AA    WZA1AA
     C                     MOVEL#2A1AA    WZA1AA           Ham Group Numbe
     C           *LIKE     DEFN #2AGCD    WZAGCD
     C                     MOVEL#2AGCD    WZAGCD           U/M - Ordered
     C           *LIKE     DEFN #2RINY    WZRINY
     C                     MOVEL#2RINY    WZRINY           Item Age Days
     C           *LIKE     DEFN #2F3SX    WZF3SX
     C                     MOVEL#2F3SX    WZF3SX           Released by Use
     C           *LIKE     DEFN #2GMST    WZGMST
     C                     MOVEL#2GMST    WZGMST           Detail Line Sta
      * Load subfile page
     C                     Z-ADD0         ##RROK  50
     C                     EXSR BBLDSF
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         BBLDSF    BEGSR
      *================================================================
      * Load subfile page
      *================================================================
      * Re-establish fields in read-ahead record
     C   27                DO
     C  N82                READP@BGWKL1                  90*
     C  N82                READ @BGWKL1                  90*
     C                     END
      *
      * Setof record error indicators
     C                     MOVEL*ALL'0'   WKIND0  1
     C                     MOVEAWKIND0    *IN,34
      * Start at previous highest record in SFL
     C                     Z-ADD##RRMX    ##RR    50
      * Reset count of DBF records read
     C                     Z-ADD0         ##RRRD  90
      * Set required pages based on *Set Cursor or *Subfile Pages
     C           W0RR0     IFGT 0
     C           W0RR0     DIV  ##SFPG    ##SPG   30
     C                     MVR            ##SLIN  30
     C           ##SLIN    IFGT 0
     C                     ADD  1         ##SPG
     C                     END
     C           W0SPG     IFGT ##SPG
     C                     Z-ADDW0SPG     ##SPG
     C                     END
     C                     ELSE
     C                     Z-ADDW0SPG     ##SPG
     C                     END
      * Compute lines required based on pages
     C           ##SPG     MULT ##SFPG    ##SFLN  90
     C           ##SFLN    IFGT 999
     C                     Z-ADD999       ##SFLN
     C                     END
      *................................................................
      * Load next SFL page until SFL page full, or
      * Scan limit reached
     C           *IN82     DOWEQ'0'                        DO
     C           ##RROK    ANDLT##SFLN
     C           ##RRRD    ANDLTW0SLM
      * Check selection fields - if fail, read next record
     C           #2AVQT    IFNE *ZERO                      Quantity Ordere
     C           OMAVQT    CABNE#2AVQT    BB020            Quantity Ordere
     C                     END
     C           #2D0WG    IFNE *ZERO                      Weight Ordered
     C           OMD0WG    CABNE#2D0WG    BB020            Weight Ordered
     C                     END
     C           #2CCQT    IFNE *ZERO                      Quantity Schedu
     C           OMCCQT    CABNE#2CCQT    BB020            Quantity Schedu
     C                     END
     C           #2AUWG    IFNE *ZERO                      Weight Schedule
     C           OMAUWG    CABNE#2AUWG    BB020            Weight Schedule
     C                     END
     C           #2BKC7    IFNE *ZERO                      Ship To Custome
     C           OMBKC7    CABNE#2BKC7    BB020            Ship To Custome
     C                     END
     C           #2AODT    IFNE *ZERO                      Scheduled Ship
     C           OMAODT    CABNE#2AODT    BB020            Scheduled Ship
     C                     END
     C           #2A5DT    IFNE *ZERO                      Requested Ship
     C           OMA5DT    CABNE#2A5DT    BB020            Requested Ship
     C                     END
     C           #2HGCD    IFNE *ZERO                      Item Code
     C           OMHGCD    CABNE#2HGCD    BB020            Item Code
     C                     END
     C           #2AJCD    IFNE *BLANK                     Warehouse Code
     C           OMAJCD    CABNE#2AJCD    BB020            Warehouse Code
     C                     END
     C           #2AGCD    IFNE *BLANK                     U/M - Ordered
     C           OMAGCD    CABNE#2AGCD    BB020            U/M - Ordered
     C                     END
     C           #2F3SX    IFNE *BLANK                     Released by Use
     C           OMF3SX    CABNE#2F3SX    BB020            Released by Use
     C                     END
     C           #2GMST    IFNE *BLANK                     Detail Line Sta
     C           OMGMST    CABNE#2GMST    BB020            Detail Line Sta
     C                     END
      * Load SFL fields
     C                     EXSR MBFL#1
     C                     MOVEL'Y'       W0RSL   1
      * Allow for possible *Set Cursor processing
     C                     ADD  1         ##RR
      * USER: Initialize subfile record from DBF record
     C                     MOVEL#1AJCD    YL0001           Warehouse Code
      * RMC 07/17/07 do if line not cancelled
      * CASE: RCD.Detail Line Status is Not cancelled
     C           #1GMST    IFEQ 'L'                        *IF
     C           #1GMST    OREQ 'A'
     C           #1GMST    OREQ 'C'
     C           #1GMST    OREQ 'R'
     C           #1GMST    OREQ 'E'
     C           #1GMST    OREQ 'H'
     C           #1GMST    OREQ 'I'
     C                     Z-ADDOMBKC7    #2BKC7           Ship To Custome
      * RTV Customer Name      RT - Customer  * 
     C                     EXSR SHRVGN
      * CTL.USR Desc. 10 = Condition name of CTL.Header Status
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1160607   Y2LSNO  70       List number
     C                     PARM #2GWST    W0INVL 25        Header Status
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #CNCNA    PARM           W0CNNM 25        USR Desc. 10
      *
     C                     END                             *FI
      * RTV Job Time           RT - Order Events  * 
     C                     EXSR SIRVGN
      * RTV Pces/Bag/Unit Chil RT - Company/Item  * 
     C                     EXSR SJRVGN
      * Get EOD Inv
      *
     C                     Z-ADD*ZERO     WN0081  92       Weight Producti
     C                     Z-ADD*ZERO     WN0082  70       Pieces Producti
     C                     MOVEL*BLANK    WN0083  1        Ord/Sch Sts USR
      *
      * Rtv Sched Item Info   IF
      * PAR = CON By name
     C                     Z-ADD*ZERO     WULEQT           Qty On-Hand USR
     C                     Z-ADD*ZERO     WULIQT           Qty Sched Prod
     C                     Z-ADD*ZERO     WULOQT           Qty Produced US
     C                     Z-ADD*ZERO     WULFQT           Qty Remaining P
     C                     Z-ADD*ZERO     WULKQT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     WULGQT           Qty EOD Inv 1 U
     C                     Z-ADD*ZERO     WULLQT           Qty Sched Ord 2
     C                     Z-ADD*ZERO     WULHQT           Qty EOD Inv 2 U
     C                     Z-ADD*ZERO     WULMQT           Qty Prod Needed
     C                     Z-ADD*ZERO     WULNQT           Qty Prod Adjust
     C                     Z-ADD*ZERO     WULJQT           Qty Sched Prod
     C                     Z-ADD*ZERO     WULVQT           Qty Sched Ord 3
     C                     Z-ADD*ZERO     WULRQT           Qty EOD Inv 3 U
     C                     Z-ADD*ZERO     WULUQT           Qty Prod Needed
     C                     Z-ADD*ZERO     WULTQT           Qty Prod Adjust
     C                     Z-ADD*ZERO     WULWQT           Qty Sched Prod
     C                     Z-ADD*ZERO     WN0081           Weight Producti
     C                     Z-ADD*ZERO     WN0082           Pieces Producti
     C                     MOVEL*BLANK    YL0002           PS Production W
     C                     MOVEL*BLANK    WN0083           Ord/Sch Sts USR
      * **********  Day 1  **********
      * Rtv Lot Tracking Flag RT - Warehouse  * 
     C                     EXSR SKRVGN
      * CASE: LCL.Lot Tracking Flag is yes
     C           YL0003    IFEQ 'Y'                        *IF
      * Rtv Item Loc Qty Tot  RT - IC Item Lot Location  * 
     C                     EXSR SLRVGN
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV On Hand Qty f/Whse RT - IC Item Balance  * 
     C                     EXSR SMRVGN
     C                     END                             *FI
      * If inventory qty is less than zero then make zero
      * CASE: PAR.Qty On-Hand USR is LT Zero
     C           WULEQT    IFLT 0                          *IF
     C                     Z-ADD0         WULEQT           Qty On-Hand USR
     C                     END                             *FI
      * Rtv Production        RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0015           Company Number
     C                     MOVEL'S'       WL0016    P      Production Type
     C                     Z-ADD#CFFDT    WL0017           Production Date
     C                     Z-ADD#1HGCD    WL0018           Item Code
     C                     MOVEL#1AJCD    WL0019    P      Warehouse Code
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0020    WN0081           Weight Producti
     C                     Z-ADDWL0021    WN0082           Pieces Producti
     C                     MOVELWL0022    YL0004    P      PS Production W
      * Scheduled Production Quantity
      * CASE: PAR.Piece Count Item is yes
     C           P7PCCT    IFEQ 'Y'                        *IF
      * Qty Sched Prod
      * PAR.Qty Sched Prod 1 USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.Pieces Production USR
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           P7BDNB    MULT P7BJNB    W0WJ01           *Synon (15,0) w
     C           WN0082    DIV  W0WJ01    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WULIQT           Qty Sched Prod
     C                     ELSE
      * CASE: *OTHERWISE
     C           WN0081    DIV  P7AIWG    WULIQT    H      Qty Sched Prod
     C                     END                             *FI
      * Rtv Actual Production RT - IC Transaction Detail  * 
     C                     EXSR SORVGN
      * Remaining to Produce Quantity
      * CASE: PAR.Qty Sched Prod 1 USR GT PAR.Qty Produced USR
     C           WULIQT    IFGT WULOQT                     *IF
     C           WULIQT    SUB  WULOQT    WULFQT           Qty Remaining P
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD0         WULFQT           Qty Remaining P
     C                     END                             *FI
      * Rtv Sched wgt qty which is what it was doing. FP1054 4/15/09
      * Rtv Sched Ship ALL    RT - Order Detail  * 
     C                     EXSR SPRVGN
      * EOD Inventory
      * PAR.Qty EOD Inv 1 USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Qty On-Hand USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.Qty Remaining Prod USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Qty Sched Ord 1 USR
     C           WULEQT    ADD  WULFQT    W0WJ01           *Synon (15,0) w
     C           W0WJ01    SUB  WULKQT    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WULGQT           Qty EOD Inv 1 U
      * **********  Day 2  **********
     C                     MOVEL'S'       WN0083           Ord/Sch Sts USR
      * Rtv Production        RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0015           Company Number
     C                     MOVEL'P'       WL0016    P      Production Type
     C                     Z-ADD#CE1DT    WL0017           Production Date
     C                     Z-ADD#1HGCD    WL0018           Item Code
     C                     MOVEL#1AJCD    WL0019    P      Warehouse Code
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0020    WN0081           Weight Producti
     C                     Z-ADDWL0021    WN0082           Pieces Producti
     C                     MOVELWL0022    YL0002    P      PS Production W
      * Scheduled Production Quantity
      * CASE: PAR.Piece Count Item is yes
     C           P7PCCT    IFEQ 'Y'                        *IF
      * Qty Sched Prod
      * PAR.Qty Sched Prod 2 USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.Pieces Production USR
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           P7BDNB    MULT P7BJNB    W0WJ01           *Synon (15,0) w
     C           WN0082    DIV  W0WJ01    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WULJQT           Qty Sched Prod
     C                     ELSE
      * CASE: *OTHERWISE
     C           WN0081    DIV  P7AIWG    WULJQT    H      Qty Sched Prod
     C                     END                             *FI
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0027           Company Number
     C                     Z-ADD#1HGCD    WL0028           Item Code
     C                     MOVEL#1AJCD    WL0029    P      Warehouse Code
     C                     Z-ADD#CE1DT    WL0030           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0031           Weight Schedule
     C                     Z-ADDWULLQT    WL0032           Quantity Schedu
     C                     MOVELWN0083    WL0033    P      Ord/Sch Sts USR
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0031    WUEEWG           Weight Schedule
     C                     Z-ADDWL0032    WULLQT           Quantity Schedu
      * EOD Inventory
      * PAR.Qty EOD Inv 2 USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Qty EOD Inv 1 USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.Qty Sched Prod 2 USR
      * -     : PGM.*Synon (15,0) work field
      * x3    : PAR.Qty Sched Ord 2 USR
     C           WULGQT    ADD  WULJQT    W0WJ01           *Synon (15,0) w
     C           W0WJ01    SUB  WULLQT    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WULHQT           Qty EOD Inv 2 U
      * CASE: PAR.Qty EOD Inv 2 USR is LT Zero
     C           WULHQT    IFLT 0                          *IF
     C           WULHQT    MULT -1        WULMQT           Qty Prod Needed
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD0         WULMQT           Qty Prod Needed
     C                     END                             *FI
     C           WULJQT    ADD  WULMQT    WULNQT           Qty Prod Adjust
      * **********  Day 3  **********
      * Rtv Production        RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0015           Company Number
     C                     MOVEL'P'       WL0016    P      Production Type
     C                     Z-ADD#CE2DT    WL0017           Production Date
     C                     Z-ADD#1HGCD    WL0018           Item Code
     C                     MOVEL#1AJCD    WL0019    P      Warehouse Code
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0020    WN0081           Weight Producti
     C                     Z-ADDWL0021    WN0082           Pieces Producti
     C                     MOVELWL0022    YL0004    P      PS Production W
      * Scheduled Production Quantity
      * CASE: PAR.Piece Count Item is yes
     C           P7PCCT    IFEQ 'Y'                        *IF
      * Qty Sched Prod
      * PAR.Qty Sched Prod 3 USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.Pieces Production USR
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           P7BDNB    MULT P7BJNB    W0WJ01           *Synon (15,0) w
     C           WN0082    DIV  W0WJ01    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WULWQT           Qty Sched Prod
     C                     ELSE
      * CASE: *OTHERWISE
     C           WN0081    DIV  P7AIWG    WULWQT    H      Qty Sched Prod
     C                     END                             *FI
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0027           Company Number
     C                     Z-ADD#1HGCD    WL0028           Item Code
     C                     MOVEL#1AJCD    WL0029    P      Warehouse Code
     C                     Z-ADD#CE2DT    WL0030           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0031           Weight Schedule
     C                     Z-ADDWULVQT    WL0032           Quantity Schedu
     C                     MOVELWN0083    WL0033    P      Ord/Sch Sts USR
     C                     EXSR SRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0031    WUEEWG           Weight Schedule
     C                     Z-ADDWL0032    WULVQT           Quantity Schedu
      * EOD Inventory
      * PAR.Qty EOD Inv 3 USR =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : PAR.Qty EOD Inv 2 USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.Qty Sched Prod 3 USR
      * -     : PGM.*Synon (15,0) work field
      * x3    : PAR.Qty Sched Ord 3 USR
     C           WULHQT    ADD  WULWQT    W0WJ01           *Synon (15,0) w
     C           W0WJ01    SUB  WULVQT    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WULRQT           Qty EOD Inv 3 U
      * CASE: PAR.Qty EOD Inv 3 USR is LT Zero
     C           WULRQT    IFLT 0                          *IF
     C           WULRQT    MULT -1        WULUQT           Qty Prod Needed
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD0         WULUQT           Qty Prod Needed
     C                     END                             *FI
     C           WULWQT    ADD  WULUQT    WULTQT           Qty Prod Adjust
      * EOD
      * CASE: CTL.Scheduled Ship Date EQ CTL.USR Day 1
     C           #2AODT    IFEQ #CFFDT                     *IF
     C                     Z-ADDWULGQT    #RLRQT           Qty EOD Inv 3 U
     C                     ELSE
      * CASE: CTL.Scheduled Ship Date EQ CTL.USR Day 2
     C           #2AODT    IFEQ #CE1DT                     *IF
     C                     Z-ADDWULHQT    #RLRQT           Qty EOD Inv 3 U
     C                     ELSE
      * CASE: CTL.Scheduled Ship Date EQ CTL.USR Day 3
     C           #2AODT    IFEQ #CE2DT                     *IF
     C                     Z-ADDWULRQT    #RLRQT           Qty EOD Inv 3 U
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * EOD GT CTL Date  Move Zeros
      * CASE: CTL.Scheduled Ship Date GT CTL.USR Day 3
     C           #2AODT    IFGT #CE2DT                     *IF
     C                     Z-ADD*ZERO     #RLRQT           Qty EOD Inv 3 U
     C                     END                             *FI
     C                     Z-ADDOMAVQT    #RL1QT           Qty 5.0 USR
     C                     Z-ADDOMCCQT    #RLEQT           Qty On-Hand USR
      * Rtv Base Values PA    RT - Company Item  * 
     C                     EXSR SSRVGN
      * RTV Desc/Type/LotTrk  RT - Warehouse  * 
     C                     EXSR STRVGN
      * Rtv Min & Max Pounds  RT - OM Truck Size  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL'T'       WL0034    P      Truck Size
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0035    WURSNB           Maximum pounds
     C                     Z-ADDWL0036    P8LDSZ           Minimum pounds
      * Warehouse Code
      * CASE: CTL.Warehouse Code is Warehouse Code Blank
     C           #2AJCD    IFEQ *BLANK                     *IF
      * Val Item Bal Exist    RT - IC Item Balance  * 
     C                     EXSR SVRVGN
     C                     END                             *FI
      * Warehouse Is Not Equal to Blank  Do all Process
      * CASE:
      *  - c1 OR c2
      *   |- c1    : CTL.Warehouse Code is Warehouse Code Blank
      *   |- c2    : WRK.Record Found USR is Record Found
      *   '-
     C           #2AJCD    IFEQ *BLANK                     *IF
     C           WUWXST    OREQ 'Y'                        *OR
      * Rtv PA For 21 Days    RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELP9WPST    WL0037    P      Warehouse Type
     C                     MOVEL#1AJCD    WL0038    P      Warehouse Code
     C                     Z-ADD#1AIC3    WL0039           Company Number
     C                     Z-ADD#1HGCD    WL0040           Item Code
     C                     Z-ADD##JDT     WL0041           PS Available Sh
     C                     Z-ADDP8H6DT    WL0042           Avail Ship Date
     C                     Z-ADDP8H7DT    WL0043           Avail Ship Date
     C                     Z-ADDP8H8DT    WL0044           Avail Ship Date
     C                     Z-ADDP8H9DT    WL0045           Avail Ship Date
     C                     Z-ADDP8IADT    WL0046           Avail Ship Date
     C                     Z-ADDP8IBDT    WL0047           Avail Ship Date
     C                     Z-ADDP8INDT    WL0048           Avail Ship Date
     C                     Z-ADDP8IODT    WL0049           Avail Ship Date
     C                     Z-ADDP8IPDT    WL0050           Avail Ship Date
     C                     Z-ADDP8IQDT    WL0051           Avail Ship Date
     C                     Z-ADDP8IRDT    WL0052           Avail Ship Date
     C                     Z-ADDP8ISDT    WL0053           Avail Ship Date
     C                     Z-ADDP8ITDT    WL0054           Avail Ship Date
     C                     Z-ADDP8IUDT    WL0055           Avail Ship Date
     C                     Z-ADDP8IVDT    WL0056           Avail Ship Date
     C                     Z-ADDP8IWDT    WL0057           Avail Ship Date
     C                     Z-ADDP8IXDT    WL0058           Avail Ship Date
     C                     Z-ADDP8IYDT    WL0059           Avail Ship Date
     C                     Z-ADDP8IZDT    WL0060           Avail Ship Date
     C                     Z-ADDP8I0DT    WL0061           Avail Ship Date
     C                     Z-ADDP8I1DT    WL0062           Avail Ship Date
     C                     Z-ADDWUFFDT    WL0063           USR Day 1
     C                     Z-ADDWUE1DT    WL0064           USR Day 2
     C                     Z-ADDWUE2DT    WL0065           USR Day 3
     C                     Z-ADDWUE3DT    WL0066           USR Day 4
     C                     Z-ADDWUE4DT    WL0067           USR Day 5
     C                     Z-ADDWUE5DT    WL0068           USR Day 6
     C                     Z-ADDWUE6DT    WL0069           USR Day 7
     C                     Z-ADDWUFKDT    WL0070           USR Day 8
     C                     Z-ADDWUFLDT    WL0071           USR Day 9
     C                     Z-ADDWUFGDT    WL0072           USR Day 10
     C                     Z-ADDWUFHDT    WL0073           USR Day 11
     C                     Z-ADDWUFIDT    WL0074           USR Day 12
     C                     Z-ADDWUFJDT    WL0075           USR Day 13
     C                     Z-ADDWUHPDT    WL0076           USR Day 14
     C                     Z-ADDWUHQDT    WL0077           USR Day 15
     C                     Z-ADDWUHRDT    WL0078           USR Day 16
     C                     Z-ADDWUHSDT    WL0079           USR Day 17
     C                     Z-ADDWUHTDT    WL0080           USR Day 18
     C                     Z-ADDWUHUDT    WL0081           USR Day 19
     C                     Z-ADDWUHVDT    WL0082           USR Day 20
     C                     Z-ADDWUHWDT    WL0083           USR Day 21
     C                     MOVELWUGHSX    WL0084    P      Day 1 Rsrvd Oth
     C                     MOVELWUGISX    WL0085    P      Day 2 Rsrvd Oth
     C                     MOVELWUGJSX    WL0086    P      Day 3 Rsrvd Oth
     C                     MOVELWUGKSX    WL0087    P      Day 4 Rsrvd Oth
     C                     MOVELWUGLSX    WL0088    P      Day 5 Rsrvd Oth
     C                     MOVELWUGMSX    WL0089    P      Day 6 Rsrvd Oth
     C                     MOVELWUGNSX    WL0090    P      Day 7 Rsrvd Oth
     C                     MOVELWUGOSX    WL0091    P      Day 8 Rsrvd Oth
     C                     MOVELWUGPSX    WL0092    P      Day 9 Rsrvd Oth
     C                     MOVELWUGQSX    WL0093    P      Day 10 Rsrv Oth
     C                     MOVELWUGRSX    WL0094    P      Day 11 Rsrv Oth
     C                     MOVELWUGSSX    WL0095    P      Day 12 Rsrv Oth
     C                     MOVELWUGTSX    WL0096    P      Day 13 Rsrv Oth
     C                     MOVELWUGUSX    WL0097    P      Day 14 Rsrv Oth
     C                     MOVELWUGVSX    WL0098    P      Day 15 Rsrv Oth
     C                     MOVELWUGWSX    WL0099    P      Day 16 Rsrv Oth
     C                     MOVELWUGXSX    WL0100    P      Day 17 Rsrv Oth
     C                     MOVELWUGYSX    WL0101    P      Day 18 Rsrv Oth
     C                     MOVELWUGZSX    WL0102    P      Day 19 Rsrv Oth
     C                     MOVELWUG0SX    WL0103    P      Day 20 Rsrv Oth
     C                     MOVELWUG1SX    WL0104    P      Day 21 Rsrv Oth
     C                     Z-ADDWUOHLO    WL0105           Order Hold Over
     C                     Z-ADDWUC8NX    WL0106           Order Hold Over
     C                     MOVELP7ADCD    WL0107    P      U/M - Primary
     C                     Z-ADDP7AIWG    WL0108           Unit Weight
     C                     Z-ADDP7CHTM    WL0109           Fresh Chilling
     C                     MOVELP7PCCT    WL0110    P      Piece Count Ite
     C                     Z-ADDP7BDNB    WL0111           Pieces Per Bag
     C                     Z-ADDP7BJNB    WL0112           Bags Per Unit
     C                     Z-ADDWUFFNB    WL0113           Day 1 Inventory
     C                     Z-ADDWUFGNB    WL0114           Day 2 Inventory
     C                     Z-ADDWUGPNB    WL0115           Day 3 Inventory
     C                     Z-ADDWUFHNB    WL0116           Day 4 Inventory
     C                     Z-ADDWUFINB    WL0117           Day 5 Inventory
     C                     Z-ADDWUFJNB    WL0118           Day 6 Inventory
     C                     Z-ADDWUFLNB    WL0119           Day 7 Inventory
     C                     Z-ADDWUGJNX    WL0120           Day 8 Inventory
     C                     Z-ADDWUGKNX    WL0121           Day 9 Inventory
     C                     Z-ADDWUGLNX    WL0122           Day 10 Inventor
     C                     Z-ADDWUGMNX    WL0123           Day 11 Inventor
     C                     Z-ADDWUGNNX    WL0124           Day 12 Inventor
     C                     Z-ADDWUGONX    WL0125           Day 13 Inventor
     C                     Z-ADDWUGPNX    WL0126           Day 14 Inventor
     C                     Z-ADDWUFMNB    WL0127           Day 1 Productio
     C                     Z-ADDWUFNNB    WL0128           Day 2 Productio
     C                     Z-ADDWUFONB    WL0129           Day 3 Productio
     C                     Z-ADDWUFPNB    WL0130           Day 4 Productio
     C                     Z-ADDWUFQNB    WL0131           Day 5 Productio
     C                     Z-ADDWUFRNB    WL0132           Day 6 Productio
     C                     Z-ADDWUFTNB    WL0133           Day 7 Productio
     C                     Z-ADDWUGQNB    WL0134           Day 8 Prod Tota
     C                     Z-ADDWUGRNB    WL0135           Day 9 Prod Tota
     C                     Z-ADDWUGSNB    WL0136           Day 10 Prod Tot
     C                     Z-ADDWUGTNB    WL0137           Day 11 Prod Tot
     C                     Z-ADDWUGUNB    WL0138           Day 12 Prod Tot
     C                     Z-ADDWUGVNB    WL0139           Day 13 Prod Tot
     C                     Z-ADDWUGWNB    WL0140           Day 14 Prod Tot
     C                     Z-ADDWUGXNB    WL0141           Day 15 Prod Tot
     C                     Z-ADDWUGYNB    WL0142           Day 16 Prod Tot
     C                     Z-ADDWUGZNB    WL0143           Day 17 Prod Tot
     C                     Z-ADDWUG0NB    WL0144           Day 18 Prod Tot
     C                     Z-ADDWUG2NB    WL0145           Day 19 Prod Tot
     C                     Z-ADDWUG3NB    WL0146           Day 20 Prod Tot
     C                     Z-ADDWUG5NB    WL0147           Day 21 Prod Tot
     C                     Z-ADDWUF4NB    WL0148           Day 1 Sales Tot
     C                     Z-ADDWUF5NB    WL0149           Day 2 Sales Tot
     C                     Z-ADDWUF6NB    WL0150           Day 3 Sales Tot
     C                     Z-ADDWUF7NB    WL0151           Day 4 Sales Tot
     C                     Z-ADDWUF8NB    WL0152           Day 5 Sales Tot
     C                     Z-ADDWUF9NB    WL0153           Day 6 Sales Tot
     C                     Z-ADDWUGANB    WL0154           Day 7 Sales Tot
     C                     Z-ADDWUHSNB    WL0155           Day 8 Sales Tot
     C                     Z-ADDWUHTNB    WL0156           Day 9 Sales Tot
     C                     Z-ADDWUHUNB    WL0157           Day 10 Sales To
     C                     Z-ADDWUHVNB    WL0158           Day 11 Sales To
     C                     Z-ADDWUHWNB    WL0159           Day 12 Sales To
     C                     Z-ADDWUHXNB    WL0160           Day 13 Sales To
     C                     Z-ADDWUHYNB    WL0161           Day 14 Sales To
     C                     Z-ADDWUHZNB    WL0162           Day 15 Sales To
     C                     Z-ADDWUH2NB    WL0163           Day 16 Sales To
     C                     Z-ADDWUH3NB    WL0164           Day 17 Sales To
     C                     Z-ADDWUH4NB    WL0165           Day 18 Sales To
     C                     Z-ADDWUH7NB    WL0166           Day 19 Sales To
     C                     Z-ADDWUH8NB    WL0167           Day 20 Sales To
     C                     Z-ADDWUH9NB    WL0168           Day 21 Sales To
     C                     Z-ADDP8D1AV    WL0169           Day 1 Avail Tot
     C                     Z-ADDP8D2AV    WL0170           Day 2 Avail Tot
     C                     Z-ADDP8D3AV    WL0171           Day 3 Avail Tot
     C                     Z-ADDP8D4AV    WL0172           Day 4 Avail Tot
     C                     Z-ADDP8D5AV    WL0173           Day 5 Avail Tot
     C                     Z-ADDP8D6AV    WL0174           Day 6 Avail Tot
     C                     Z-ADDP8D7AV    WL0175           Day 7 Avail Tot
     C                     Z-ADDP8D8AV    WL0176           Day 8 Avail Tot
     C                     Z-ADDP8D9AV    WL0177           Day 9 Avail Tot
     C                     Z-ADDP8D1AB    WL0178           Day 10 Avail To
     C                     Z-ADDP8D2AB    WL0179           Day 11 Avail To
     C                     Z-ADDP8D3AB    WL0180           Day 12 Avail To
     C                     Z-ADDP8D4AB    WL0181           Day 13 Avail To
     C                     Z-ADDP8D5AB    WL0182           Day 14 Avail To
     C                     Z-ADDP8D6AB    WL0183           Day 15 Avail To
     C                     Z-ADDP8D7AB    WL0184           Day 16 Avail To
     C                     Z-ADDP8D8AB    WL0185           Day 17 Avail To
     C                     Z-ADDP8D9AB    WL0186           Day 18 Avail To
     C                     Z-ADDP8D1AL    WL0187           Day 19 Avail To
     C                     Z-ADDP8D2AL    WL0188           Day 20 Avail To
     C                     Z-ADDP8D3AL    WL0189           Day 21 Avail To
     C                     Z-ADDWUFUNB    WL0190           Day 1 Schd Ship
     C                     Z-ADDWUFVNB    WL0191           Day 2 Schd Ship
     C                     Z-ADDWUFWNB    WL0192           Day 3 Schd Ship
     C                     Z-ADDWUFYNB    WL0193           Day 4 Schd Ship
     C                     Z-ADDWUFZNB    WL0194           Day 5 Schd Ship
     C                     Z-ADDWUF2NB    WL0195           Day 6 Schd Ship
     C                     Z-ADDWUF3NB    WL0196           Day 7 Schd Ship
     C                     Z-ADDWUISNB    WL0197           Day 8 Schd Ship
     C                     Z-ADDWUITNB    WL0198           Day 9 Schd Ship
     C                     Z-ADDWUIUNB    WL0199           Day 10 SchdShip
     C                     Z-ADDWUIVNB    WL0200           Day 11 SchdShip
     C                     Z-ADDWUIWNB    WL0201           Day 12 SchdShip
     C                     Z-ADDWUIYNB    WL0202           Day 13 SchdShip
     C                     Z-ADDWUIZNB    WL0203           Day 14 SchdShip
     C                     Z-ADDWUI0NB    WL0204           Day 15 SchdShip
     C                     Z-ADDWUI2NB    WL0205           Day 16 SchdShip
     C                     Z-ADDWUI3NB    WL0206           Day 17 SchdShip
     C                     Z-ADDWUI5NB    WL0207           Day 18 SchdShip
     C                     Z-ADDWUI8NB    WL0208           Day 19 SchdShip
     C                     Z-ADDWUJANB    WL0209           Day 20 SchdShip
     C                     Z-ADDWUJCNB    WL0210           Day 21 SchdShip
     C                     EXSR SWRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0063    WUFFDT           USR Day 1
     C                     Z-ADDWL0064    WUE1DT           USR Day 2
     C                     Z-ADDWL0065    WUE2DT           USR Day 3
     C                     Z-ADDWL0066    WUE3DT           USR Day 4
     C                     Z-ADDWL0067    WUE4DT           USR Day 5
     C                     Z-ADDWL0068    WUE5DT           USR Day 6
     C                     Z-ADDWL0069    WUE6DT           USR Day 7
     C                     Z-ADDWL0070    WUFKDT           USR Day 8
     C                     Z-ADDWL0071    WUFLDT           USR Day 9
     C                     Z-ADDWL0072    WUFGDT           USR Day 10
     C                     Z-ADDWL0073    WUFHDT           USR Day 11
     C                     Z-ADDWL0074    WUFIDT           USR Day 12
     C                     Z-ADDWL0075    WUFJDT           USR Day 13
     C                     Z-ADDWL0076    WUHPDT           USR Day 14
     C                     Z-ADDWL0077    WUHQDT           USR Day 15
     C                     Z-ADDWL0078    WUHRDT           USR Day 16
     C                     Z-ADDWL0079    WUHSDT           USR Day 17
     C                     Z-ADDWL0080    WUHTDT           USR Day 18
     C                     Z-ADDWL0081    WUHUDT           USR Day 19
     C                     Z-ADDWL0082    WUHVDT           USR Day 20
     C                     Z-ADDWL0083    WUHWDT           USR Day 21
     C                     MOVELWL0084    WUGHSX    P      Day 1 Rsrvd Oth
     C                     MOVELWL0085    WUGISX    P      Day 2 Rsrvd Oth
     C                     MOVELWL0086    WUGJSX    P      Day 3 Rsrvd Oth
     C                     MOVELWL0087    WUGKSX    P      Day 4 Rsrvd Oth
     C                     MOVELWL0088    WUGLSX    P      Day 5 Rsrvd Oth
     C                     MOVELWL0089    WUGMSX    P      Day 6 Rsrvd Oth
     C                     MOVELWL0090    WUGNSX    P      Day 7 Rsrvd Oth
     C                     MOVELWL0091    WUGOSX    P      Day 8 Rsrvd Oth
     C                     MOVELWL0092    WUGPSX    P      Day 9 Rsrvd Oth
     C                     MOVELWL0093    WUGQSX    P      Day 10 Rsrv Oth
     C                     MOVELWL0094    WUGRSX    P      Day 11 Rsrv Oth
     C                     MOVELWL0095    WUGSSX    P      Day 12 Rsrv Oth
     C                     MOVELWL0096    WUGTSX    P      Day 13 Rsrv Oth
     C                     MOVELWL0097    WUGUSX    P      Day 14 Rsrv Oth
     C                     MOVELWL0098    WUGVSX    P      Day 15 Rsrv Oth
     C                     MOVELWL0099    WUGWSX    P      Day 16 Rsrv Oth
     C                     MOVELWL0100    WUGXSX    P      Day 17 Rsrv Oth
     C                     MOVELWL0101    WUGYSX    P      Day 18 Rsrv Oth
     C                     MOVELWL0102    WUGZSX    P      Day 19 Rsrv Oth
     C                     MOVELWL0103    WUG0SX    P      Day 20 Rsrv Oth
     C                     MOVELWL0104    WUG1SX    P      Day 21 Rsrv Oth
     C                     Z-ADDWL0105    WUOHLO           Order Hold Over
     C                     Z-ADDWL0106    WUC8NX           Order Hold Over
     C                     Z-ADDWL0113    WUFFNB           Day 1 Inventory
     C                     Z-ADDWL0114    WUFGNB           Day 2 Inventory
     C                     Z-ADDWL0115    WUGPNB           Day 3 Inventory
     C                     Z-ADDWL0116    WUFHNB           Day 4 Inventory
     C                     Z-ADDWL0117    WUFINB           Day 5 Inventory
     C                     Z-ADDWL0118    WUFJNB           Day 6 Inventory
     C                     Z-ADDWL0119    WUFLNB           Day 7 Inventory
     C                     Z-ADDWL0120    WUGJNX           Day 8 Inventory
     C                     Z-ADDWL0121    WUGKNX           Day 9 Inventory
     C                     Z-ADDWL0122    WUGLNX           Day 10 Inventor
     C                     Z-ADDWL0123    WUGMNX           Day 11 Inventor
     C                     Z-ADDWL0124    WUGNNX           Day 12 Inventor
     C                     Z-ADDWL0125    WUGONX           Day 13 Inventor
     C                     Z-ADDWL0126    WUGPNX           Day 14 Inventor
     C                     Z-ADDWL0127    WUFMNB           Day 1 Productio
     C                     Z-ADDWL0128    WUFNNB           Day 2 Productio
     C                     Z-ADDWL0129    WUFONB           Day 3 Productio
     C                     Z-ADDWL0130    WUFPNB           Day 4 Productio
     C                     Z-ADDWL0131    WUFQNB           Day 5 Productio
     C                     Z-ADDWL0132    WUFRNB           Day 6 Productio
     C                     Z-ADDWL0133    WUFTNB           Day 7 Productio
     C                     Z-ADDWL0134    WUGQNB           Day 8 Prod Tota
     C                     Z-ADDWL0135    WUGRNB           Day 9 Prod Tota
     C                     Z-ADDWL0136    WUGSNB           Day 10 Prod Tot
     C                     Z-ADDWL0137    WUGTNB           Day 11 Prod Tot
     C                     Z-ADDWL0138    WUGUNB           Day 12 Prod Tot
     C                     Z-ADDWL0139    WUGVNB           Day 13 Prod Tot
     C                     Z-ADDWL0140    WUGWNB           Day 14 Prod Tot
     C                     Z-ADDWL0141    WUGXNB           Day 15 Prod Tot
     C                     Z-ADDWL0142    WUGYNB           Day 16 Prod Tot
     C                     Z-ADDWL0143    WUGZNB           Day 17 Prod Tot
     C                     Z-ADDWL0144    WUG0NB           Day 18 Prod Tot
     C                     Z-ADDWL0145    WUG2NB           Day 19 Prod Tot
     C                     Z-ADDWL0146    WUG3NB           Day 20 Prod Tot
     C                     Z-ADDWL0147    WUG5NB           Day 21 Prod Tot
     C                     Z-ADDWL0148    WUF4NB           Day 1 Sales Tot
     C                     Z-ADDWL0149    WUF5NB           Day 2 Sales Tot
     C                     Z-ADDWL0150    WUF6NB           Day 3 Sales Tot
     C                     Z-ADDWL0151    WUF7NB           Day 4 Sales Tot
     C                     Z-ADDWL0152    WUF8NB           Day 5 Sales Tot
     C                     Z-ADDWL0153    WUF9NB           Day 6 Sales Tot
     C                     Z-ADDWL0154    WUGANB           Day 7 Sales Tot
     C                     Z-ADDWL0155    WUHSNB           Day 8 Sales Tot
     C                     Z-ADDWL0156    WUHTNB           Day 9 Sales Tot
     C                     Z-ADDWL0157    WUHUNB           Day 10 Sales To
     C                     Z-ADDWL0158    WUHVNB           Day 11 Sales To
     C                     Z-ADDWL0159    WUHWNB           Day 12 Sales To
     C                     Z-ADDWL0160    WUHXNB           Day 13 Sales To
     C                     Z-ADDWL0161    WUHYNB           Day 14 Sales To
     C                     Z-ADDWL0162    WUHZNB           Day 15 Sales To
     C                     Z-ADDWL0163    WUH2NB           Day 16 Sales To
     C                     Z-ADDWL0164    WUH3NB           Day 17 Sales To
     C                     Z-ADDWL0165    WUH4NB           Day 18 Sales To
     C                     Z-ADDWL0166    WUH7NB           Day 19 Sales To
     C                     Z-ADDWL0167    WUH8NB           Day 20 Sales To
     C                     Z-ADDWL0168    WUH9NB           Day 21 Sales To
     C                     Z-ADDWL0169    P8D1AV           Day 1 Avail Tot
     C                     Z-ADDWL0170    P8D2AV           Day 2 Avail Tot
     C                     Z-ADDWL0171    P8D3AV           Day 3 Avail Tot
     C                     Z-ADDWL0172    P8D4AV           Day 4 Avail Tot
     C                     Z-ADDWL0173    P8D5AV           Day 5 Avail Tot
     C                     Z-ADDWL0174    P8D6AV           Day 6 Avail Tot
     C                     Z-ADDWL0175    P8D7AV           Day 7 Avail Tot
     C                     Z-ADDWL0176    P8D8AV           Day 8 Avail Tot
     C                     Z-ADDWL0177    P8D9AV           Day 9 Avail Tot
     C                     Z-ADDWL0178    P8D1AB           Day 10 Avail To
     C                     Z-ADDWL0179    P8D2AB           Day 11 Avail To
     C                     Z-ADDWL0180    P8D3AB           Day 12 Avail To
     C                     Z-ADDWL0181    P8D4AB           Day 13 Avail To
     C                     Z-ADDWL0182    P8D5AB           Day 14 Avail To
     C                     Z-ADDWL0183    P8D6AB           Day 15 Avail To
     C                     Z-ADDWL0184    P8D7AB           Day 16 Avail To
     C                     Z-ADDWL0185    P8D8AB           Day 17 Avail To
     C                     Z-ADDWL0186    P8D9AB           Day 18 Avail To
     C                     Z-ADDWL0187    P8D1AL           Day 19 Avail To
     C                     Z-ADDWL0188    P8D2AL           Day 20 Avail To
     C                     Z-ADDWL0189    P8D3AL           Day 21 Avail To
     C                     Z-ADDWL0190    WUFUNB           Day 1 Schd Ship
     C                     Z-ADDWL0191    WUFVNB           Day 2 Schd Ship
     C                     Z-ADDWL0192    WUFWNB           Day 3 Schd Ship
     C                     Z-ADDWL0193    WUFYNB           Day 4 Schd Ship
     C                     Z-ADDWL0194    WUFZNB           Day 5 Schd Ship
     C                     Z-ADDWL0195    WUF2NB           Day 6 Schd Ship
     C                     Z-ADDWL0196    WUF3NB           Day 7 Schd Ship
     C                     Z-ADDWL0197    WUISNB           Day 8 Schd Ship
     C                     Z-ADDWL0198    WUITNB           Day 9 Schd Ship
     C                     Z-ADDWL0199    WUIUNB           Day 10 SchdShip
     C                     Z-ADDWL0200    WUIVNB           Day 11 SchdShip
     C                     Z-ADDWL0201    WUIWNB           Day 12 SchdShip
     C                     Z-ADDWL0202    WUIYNB           Day 13 SchdShip
     C                     Z-ADDWL0203    WUIZNB           Day 14 SchdShip
     C                     Z-ADDWL0204    WUI0NB           Day 15 SchdShip
     C                     Z-ADDWL0205    WUI2NB           Day 16 SchdShip
     C                     Z-ADDWL0206    WUI3NB           Day 17 SchdShip
     C                     Z-ADDWL0207    WUI5NB           Day 18 SchdShip
     C                     Z-ADDWL0208    WUI8NB           Day 19 SchdShip
     C                     Z-ADDWL0209    WUJANB           Day 20 SchdShip
     C                     Z-ADDWL0210    WUJCNB           Day 21 SchdShip
      * Total Available(week1)
      * RCD.Day 7 Availability USR =
      *    *COMPUTE (x1 + x2 + x3 + x4 + x5 + x6)
      * x1    : PAR.Day 1 Availability USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 2 Availability USR
      * +     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 3 Availability USR
      * +     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 4 Availability USR
      * +     : PGM.*Synon (17,7) work field
      * x5    : PAR.Day 5 Availability USR
      * +     : PGM.*Synon (17,7) work field
      * x6    : PAR.Day 6 Availability USR
     C           P8D1AV    ADD  P8D2AV    W0WD04           *Synon (17,7) w
     C           W0WD04    ADD  P8D3AV    W0WD03           *Synon (17,7) w
     C           W0WD03    ADD  P8D4AV    W0WD02           *Synon (17,7) w
     C           W0WD02    ADD  P8D5AV    W0WD01           *Synon (17,7) w
     C           W0WD01    ADD  P8D6AV    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    #RD7AV           Day 7 Availabil
      * Total Available(week2)
      * RCD.Day 14 Availability USR =
      *    *COMPUTE (x1 + x2 + x3 + x4 + x5 + x6)
      * x1    : PAR.Day 8 Availability USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 9 Availability USR
      * +     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 10 Availability USR
      * +     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 11 Availability USR
      * +     : PGM.*Synon (17,7) work field
      * x5    : PAR.Day 12 Availability USR
      * +     : PGM.*Synon (17,7) work field
      * x6    : PAR.Day 13 Availability USR
     C           P8D8AV    ADD  P8D9AV    W0WD04           *Synon (17,7) w
     C           W0WD04    ADD  P8D1AB    W0WD03           *Synon (17,7) w
     C           W0WD03    ADD  P8D2AB    W0WD02           *Synon (17,7) w
     C           W0WD02    ADD  P8D3AB    W0WD01           *Synon (17,7) w
     C           W0WD01    ADD  P8D4AB    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    #RD5AB           Day 14 Availabi
      * Total Available(week3)
      * RCD.Day 21 Availability USR =
      *    *COMPUTE (x1 + x2 + x3 + x4 + x5 + x6)
      * x1    : PAR.Day 15 Availability USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 16 Availability USR
      * +     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 17 Availability USR
      * +     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 18 Availability USR
      * +     : PGM.*Synon (17,7) work field
      * x5    : PAR.Day 19 Availability USR
      * +     : PGM.*Synon (17,7) work field
      * x6    : PAR.Day 20 Availability USR
     C           P8D6AB    ADD  P8D7AB    W0WD04           *Synon (17,7) w
     C           W0WD04    ADD  P8D8AB    W0WD03           *Synon (17,7) w
     C           W0WD03    ADD  P8D9AB    W0WD02           *Synon (17,7) w
     C           W0WD02    ADD  P8D1AL    W0WD01           *Synon (17,7) w
     C           W0WD01    ADD  P8D2AL    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    #RD3AL           Day 21 Availabi
      * Load1
      * CASE: PAR.Load Size USR is Not Equal to Zero
     C           P8LDSZ    IFNE *ZERO                      *IF
      * day 1
      * WRK.Day 1 Available Loads =
      *    *COMPUTE ((x1 * x2) / x3)
      * x1    : PAR.Day 1 Availability USR
      * *     : PGM.*Synon (17,7) work field *
      * x2    : PAR.Unit Weight
      * /     : PGM.*Synon (17,7) work field *
      * x3    : PAR.Load Size USR
     C           P8D1AV    MULT P7AIWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  P8LDSZ    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WUJ9NB           Day 1 Available
      * Day 2
      * WRK.Day 2 Available Loads =
      *    *COMPUTE ((x1 * x2) / x3)
      * x1    : PAR.Day 2 Availability USR
      * *     : PGM.*Synon (17,7) work field *
      * x2    : PAR.Unit Weight
      * /     : PGM.*Synon (17,7) work field *
      * x3    : PAR.Load Size USR
     C           P8D2AV    MULT P7AIWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  P8LDSZ    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WUKANB           Day 2 Available
      * Day 3
      * WRK.Day 3 Available Loads =
      *    *COMPUTE ((x1 * x2) / x3)
      * x1    : PAR.Day 3 Availability USR
      * *     : PGM.*Synon (17,7) work field *
      * x2    : PAR.Unit Weight
      * /     : PGM.*Synon (17,7) work field *
      * x3    : PAR.Load Size USR
     C           P8D3AV    MULT P7AIWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  P8LDSZ    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WUKBNB           Day 3 Available
      * Day 4
      * WRK.Day 4 Available Loads =
      *    *COMPUTE ((x1 * x2) / x3)
      * x1    : PAR.Day 4 Availability USR
      * *     : PGM.*Synon (17,7) work field *
      * x2    : PAR.Unit Weight
      * /     : PGM.*Synon (17,7) work field *
      * x3    : PAR.Load Size USR
     C           P8D4AV    MULT P7AIWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  P8LDSZ    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WUKDNB           Day 4 Available
      * Day 5
      * WRK.Day 5 Available Loads =
      *    *COMPUTE ((x1 * x2) / x3)
      * x1    : PAR.Day 5 Availability USR
      * *     : PGM.*Synon (17,7) work field *
      * x2    : PAR.Unit Weight
      * /     : PGM.*Synon (17,7) work field *
      * x3    : PAR.Load Size USR
     C           P8D5AV    MULT P7AIWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  P8LDSZ    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WUKENB           Day 5 Available
      * Day 6
      * WRK.Day 6 Available Loads =
      *    *COMPUTE ((x1 * x2) / x3)
      * x1    : PAR.Day 6 Availability USR
      * *     : PGM.*Synon (17,7) work field *
      * x2    : PAR.Unit Weight
      * /     : PGM.*Synon (17,7) work field *
      * x3    : PAR.Load Size USR
     C           P8D6AV    MULT P7AIWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  P8LDSZ    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WUKFNB           Day 6 Available
      * Day 7
      * WRK.Day 1 Avail (Ld) Usr =
      *    *COMPUTE ( x1 + x2 + x3 + x4 + x5 + x6)
      * x1    : WRK.Day 1 Available Loads
      * +     : PGM.*Synon (17,7) work field
      * x2    : WRK.Day 2 Available Loads
      * +     : PGM.*Synon (17,7) work field
      * x3    : WRK.Day 3 Available Loads
      * +     : PGM.*Synon (17,7) work field
      * x4    : WRK.Day 4 Available Loads
      * +     : PGM.*Synon (17,7) work field
      * x5    : WRK.Day 5 Available Loads
      * +     : PGM.*Synon (17,7) work field
      * x6    : WRK.Day 6 Available Loads
     C           WUJ9NB    ADD  WUKANB    W0WD04           *Synon (17,7) w
     C           W0WD04    ADD  WUKBNB    W0WD03           *Synon (17,7) w
     C           W0WD03    ADD  WUKDNB    W0WD02           *Synon (17,7) w
     C           W0WD02    ADD  WUKENB    W0WD01           *Synon (17,7) w
     C           W0WD01    ADD  WUKFNB    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WUD1LD           Day 1 Avail (Ld
     C                     END                             *FI
      * Load2
      * CASE: PAR.Load Size USR is Not Equal to Zero
     C           P8LDSZ    IFNE *ZERO                      *IF
      * day 8
      * WRK.Day 8 Available Loads =
      *    *COMPUTE ((x1 * x2) / x3)
      * x1    : PAR.Day 8 Availability USR
      * *     : PGM.*Synon (17,7) work field *
      * x2    : PAR.Unit Weight
      * /     : PGM.*Synon (17,7) work field *
      * x3    : PAR.Load Size USR
     C           P8D8AV    MULT P7AIWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  P8LDSZ    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WUL2NX           Day 8 Available
      * Day 9
      * WRK.Day 9 Available Loads =
      *    *COMPUTE ((x1 * x2) / x3)
      * x1    : PAR.Day 9 Availability USR
      * *     : PGM.*Synon (17,7) work field *
      * x2    : PAR.Unit Weight
      * /     : PGM.*Synon (17,7) work field *
      * x3    : PAR.Load Size USR
     C           P8D9AV    MULT P7AIWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  P8LDSZ    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WUL3NX           Day 9 Available
      * Day 10
      * WRK.Day 10 Available Loads =
      *    *COMPUTE ((x1 * x2) / x3)
      * x1    : PAR.Day 10 Availability USR
      * *     : PGM.*Synon (17,7) work field *
      * x2    : PAR.Unit Weight
      * /     : PGM.*Synon (17,7) work field *
      * x3    : PAR.Load Size USR
     C           P8D1AB    MULT P7AIWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  P8LDSZ    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WUL4NX           Day 10 Availabl
      * Day 11
      * WRK.Day 11 Available Loads =
      *    *COMPUTE ((x1 * x2) / x3)
      * x1    : PAR.Day 11 Availability USR
      * *     : PGM.*Synon (17,7) work field *
      * x2    : PAR.Unit Weight
      * /     : PGM.*Synon (17,7) work field *
      * x3    : PAR.Load Size USR
     C           P8D2AB    MULT P7AIWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  P8LDSZ    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WUL5NX           Day 11 Availabl
      * Day 12
      * WRK.Day 12 Available Loads =
      *    *COMPUTE ((x1 * x2) / x3)
      * x1    : PAR.Day 12 Availability USR
      * *     : PGM.*Synon (17,7) work field *
      * x2    : PAR.Unit Weight
      * /     : PGM.*Synon (17,7) work field *
      * x3    : PAR.Load Size USR
     C           P8D3AB    MULT P7AIWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  P8LDSZ    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WUL6NX           Day 12 Availabl
      * Day 13
      * WRK.Day 13 Available Loads =
      *    *COMPUTE ((x1 * x2) / x3)
      * x1    : PAR.Day 13 Availability USR
      * *     : PGM.*Synon (17,7) work field *
      * x2    : PAR.Unit Weight
      * /     : PGM.*Synon (17,7) work field *
      * x3    : PAR.Load Size USR
     C           P8D4AB    MULT P7AIWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  P8LDSZ    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WUL7NX           Day 13 Availabl
      * Day 14
      * WRK.Day 14 Available Loads =
      *    *COMPUTE ( x1 + x2 + x3 + x4 + x5 + x6)
      * x1    : WRK.Day 8 Available Loads
      * +     : PGM.*Synon (17,7) work field
      * x2    : WRK.Day 9 Available Loads
      * +     : PGM.*Synon (17,7) work field
      * x3    : WRK.Day 10 Available Loads
      * +     : PGM.*Synon (17,7) work field
      * x4    : WRK.Day 11 Available Loads
      * +     : PGM.*Synon (17,7) work field
      * x5    : WRK.Day 12 Available Loads
      * +     : PGM.*Synon (17,7) work field
      * x6    : WRK.Day 13 Available Loads
     C           WUL2NX    ADD  WUL3NX    W0WD04           *Synon (17,7) w
     C           W0WD04    ADD  WUL4NX    W0WD03           *Synon (17,7) w
     C           W0WD03    ADD  WUL5NX    W0WD02           *Synon (17,7) w
     C           W0WD02    ADD  WUL6NX    W0WD01           *Synon (17,7) w
     C           W0WD01    ADD  WUL7NX    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WUL8NX           Day 14 Availabl
     C                     END                             *FI
      * Load3
      * CASE: PAR.Load Size USR is Not Equal to Zero
     C           P8LDSZ    IFNE *ZERO                      *IF
      * day 15
      * WRK.Day 15 Available Loads =
      *    *COMPUTE ((x1 * x2) / x3)
      * x1    : PAR.Day 15 Availability USR
      * *     : PGM.*Synon (17,7) work field *
      * x2    : PAR.Unit Weight
      * /     : PGM.*Synon (17,7) work field *
      * x3    : PAR.Load Size USR
     C           P8D6AB    MULT P7AIWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  P8LDSZ    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WUL9NX           Day 15 Availabl
      * Day 16
      * WRK.Day 16 Available Loads =
      *    *COMPUTE ((x1 * x2) / x3)
      * x1    : PAR.Day 16 Availability USR
      * *     : PGM.*Synon (17,7) work field *
      * x2    : PAR.Unit Weight
      * /     : PGM.*Synon (17,7) work field *
      * x3    : PAR.Load Size USR
     C           P8D7AB    MULT P7AIWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  P8LDSZ    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WUMANX           Day 16 Availabl
      * Day 17
      * WRK.Day 17 Available Loads =
      *    *COMPUTE ((x1 * x2) / x3)
      * x1    : PAR.Day 17 Availability USR
      * *     : PGM.*Synon (17,7) work field *
      * x2    : PAR.Unit Weight
      * /     : PGM.*Synon (17,7) work field *
      * x3    : PAR.Load Size USR
     C           P8D8AB    MULT P7AIWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  P8LDSZ    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WUMBNX           Day 17 Availabl
      * Day 18
      * WRK.Day 18 Available Loads =
      *    *COMPUTE ((x1 * x2) / x3)
      * x1    : PAR.Day 18 Availability USR
      * *     : PGM.*Synon (17,7) work field *
      * x2    : PAR.Unit Weight
      * /     : PGM.*Synon (17,7) work field *
      * x3    : PAR.Load Size USR
     C           P8D9AB    MULT P7AIWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  P8LDSZ    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WUMCNX           Day 18 Availabl
      * Day 19
      * WRK.Day 19 Available Loads =
      *    *COMPUTE ((x1 * x2) / x3)
      * x1    : PAR.Day 19 Availability USR
      * *     : PGM.*Synon (17,7) work field *
      * x2    : PAR.Unit Weight
      * /     : PGM.*Synon (17,7) work field *
      * x3    : PAR.Load Size USR
     C           P8D1AL    MULT P7AIWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  P8LDSZ    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WUMDNX           Day 19 Availabl
      * Day 20
      * WRK.Day 20 Available Loads =
      *    *COMPUTE ((x1 * x2) / x3)
      * x1    : PAR.Day 20 Availability USR
      * *     : PGM.*Synon (17,7) work field *
      * x2    : PAR.Unit Weight
      * /     : PGM.*Synon (17,7) work field *
      * x3    : PAR.Load Size USR
     C           P8D2AL    MULT P7AIWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  P8LDSZ    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WUMENX           Day 20 Availabl
      * Day 21
      * WRK.Day 21 Available Loads =
      *    *COMPUTE ( x1 + x2 + x3 + x4 + x5 + x6)
      * x1    : WRK.Day 15 Available Loads
      * +     : PGM.*Synon (17,7) work field
      * x2    : WRK.Day 16 Available Loads
      * +     : PGM.*Synon (17,7) work field
      * x3    : WRK.Day 17 Available Loads
      * +     : PGM.*Synon (17,7) work field
      * x4    : WRK.Day 18 Available Loads
      * +     : PGM.*Synon (17,7) work field
      * x5    : WRK.Day 19 Available Loads
      * +     : PGM.*Synon (17,7) work field
      * x6    : WRK.Day 20 Available Loads
     C           WUL9NX    ADD  WUMANX    W0WD04           *Synon (17,7) w
     C           W0WD04    ADD  WUMBNX    W0WD03           *Synon (17,7) w
     C           W0WD03    ADD  WUMCNX    W0WD02           *Synon (17,7) w
     C           W0WD02    ADD  WUMDNX    W0WD01           *Synon (17,7) w
     C           W0WD01    ADD  WUMENX    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WUMFNX           Day 21 Availabl
     C                     END                             *FI
      * Check On Three Weeks
      * CASE: CTL.Scheduled Ship Date LE PAR.Avail Ship Date 6 USR
     C           #2AODT    IFLE P8IBDT                     *IF
     C                     Z-ADD#RD7AV    #RD7AV           Day 7 Availabil
     C                     Z-ADDWUD1LD    #RD1LD           Day 1 Avail (Ld
     C                     ELSE
      * CASE:
      *  - c1 AND c2
      *   |- c1    : CTL.Scheduled Ship Date GT PAR.Avail Ship Date 6 USR
      *   |- c2    : CTL.Scheduled Ship Date LE PAR.Avail Ship Date 13 US
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #2AODT    IFGT P8IBDT                     *IF
     C           #2AODT    IFLE P8ITDT                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     Z-ADD#RD5AB    #RD7AV           Day 7 Availabil
     C                     Z-ADDWUL8NX    #RD1LD           Day 1 Avail (Ld
     C                     ELSE
      * CASE:
      *  - c1 AND c2
      *   |- c1    : CTL.Scheduled Ship Date GT PAR.Avail Ship Date 13 US
      *   |- c2    : CTL.Scheduled Ship Date LE PAR.Avail Ship Date 20 US
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #2AODT    IFGT P8ITDT                     *IF
     C           #2AODT    IFLE P8I0DT                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     Z-ADD#RD3AL    #RD7AV           Day 7 Availabil
     C                     Z-ADDWUMFNX    #RD1LD           Day 1 Avail (Ld
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Ship Date IS GT 21 Days Move zeros to Avl Qty AND Avl Lds
      * CASE: CTL.Scheduled Ship Date GT PAR.Avail Ship Date 21 USR
     C           #2AODT    IFGT P8I1DT                     *IF
     C                     Z-ADD*ZERO     #RD7AV           Day 7 Availabil
     C                     Z-ADD*ZERO     #RD1LD           Day 1 Avail (Ld
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * CASE: DB1.Production Ovr AgeDte Fr is not equal zero
     C           OMTIDT    IFNE *ZERO                      *IF
     C                     MOVEL'O'       WUI0ST           Override Age Da
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WUI0ST           Override Age Da
     C                     END                             *FI
     C                     SUB  1         ##RR
      * DBF record not selected
     C           W0RSL     CABNE'Y'       BB020
      * Convert fields to external form
     C                     EXSR MNCV#1
      * Output to subfile
     C                     ADD  1         ##RR
     C                     ADD  1         ##RROK     81    *
      * If SFLRCD invalid, note that errors present
     C   98N99             SETON                     99    *
      * Set screen conditioning indicators
     C                     EXSR GADSA1
     C                     WRITE#SFLRCD
     C           BB020     TAG
      * Increment scan check count
     C                     ADD  1         ##RRRD
     C           KRST      READE@BGWKL1                  82*82=EOF
     C                     END                             OD 1 - ##SFPG
      *................................................................
     C           BB900     TAG
      *................................................................
      * If no DBF records found, display error message
     C           ##RR      IFEQ *ZERO
     C           *IN82     ANDEQ'1'
      * Send message '*No data to display'
     C                     MOVEL'Y2U0008' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI ##RR = *ZERO
      *
      *................................................................
      * Save highest SFL record load can continue at end point
     C           ##RR      IFGT ##RRMX
      * Calculate top line
     C           ##RROK    DIV  ##SFPG    ##SPG
     C                     MVR            ##SLIN
     C           ##SLIN    IFGT 0
     C           ##RR      SUB  ##SLIN    ##SFRC
     C                     ELSE
     C           ##RR      SUB  ##SFPG    ##SFRC
     C                     END
     C                     ADD  1         ##SFRC
     C                     Z-ADD##RR      ##RRMX
     C                     END
      * If scan limit reached, display error message
     C           ##RRRD    IFGE W0SLM
      * Send message '*Scan limit reached'
     C                     MOVEL'Y2U0017' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     ELSE
     C                     Z-ADD0         ##RROK
     C                     END
      *================================================================
     CSR         BBEXIT    ENDSR
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen
      *================================================================
      * Convert fields to external form
     C  N30N27             EXSR MOCV#2
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
      * Update screen time
     C                     TIME           ##TME
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#SFLCTL
      * Maintain subfile position where possible
     C           @#SFRC    IFGT *ZERO
     C                     Z-ADD@#SFRC    ##SFRC
     C                     END
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C                     SETOF                       8392*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPR##    BEGSR
      *================================================================
      * Process screen input
      *================================================================
      *
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * Validate Item Code and convert to internal.
      * CD7 Ext/Int
     C                     MOVELV2HGCD    WUI3ST           USR First Posit
     C                     MOVEL*BLANK    W0RTN            *Return code
      * CASE: WRK.USR First Position is Search request
     C           WUI3ST    IFEQ '?'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVELV2HGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Ext/Int EXCUSRSRC - *Field attribute types  * 
     C                     MOVE *BLANKS   JUSTC7  7
     C                     MOVEA*BLANKS   K7
     C                     Z-ADD7         C       30
     C                     Z-ADD7         D       30
      * FIELD LOADED TO WRK CONTEXT BY INTERNAL FUNCTION
     C                     MOVEAWUEOCD    J7
     C                     MOVE *BLANKS   W0RTN
     C                     DO   7
     C           J7,C      IFNE ' '
     C                     MOVEAJ7,C      K7,D
     C                     SUB  1         D
     C                     END
     C                     SUB  1         C
     C                     END
     C                     MOVEAK7        JUSTC7
      * TEST FOR INVALID DATA IN FIELD
     C                     MOVE JUSTC7    TEST7   1
     C           TEST7     IFGT '?'
     C           TEST7     ANDLT'0'
     C                     MOVE 'USR0752' W0RTN
     C                     ELSE
     C                     MOVE *IN60     HLDIN   1
     C                     TESTN          JUSTC7     606060
     C           *IN60     IFEQ '0'
     C                     MOVE 'USR0752' W0RTN
     C                     END
     C                     END
     C                     MOVE JUSTC7    WUEOCD
     C                     MOVE HLDIN     *IN60
      * CASE: PGM.*Return code is CD3 Non numeric data
     C           W0RTN     IFEQ @CN,001                    *IF
      * Setup message data for message
      * Send message 'CD7 Non numeric data'
     C                     MOVEL'USR0802' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     Z-ADD0         #2HGCD           CD7 Int Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVE WUEOCD    #2HGCD           CD7 Int Numeric
     C                     END                             *FI
     C                     END                             *FI
      * If error, exit
     C           *IN99     CABEQ'1'       DAEXIT
      *................................................................
     C           YPMTFD    IFNE *BLANKS
     C           YPMRRN    ANDEQ*ZERO
     C                     GOTO DAEXIT
     C                     END
     C           YPMTFD    CABNE*BLANKS   DATAG1
      * Change of position specified
     C           WZHGCD    CASNE#2HGCD    FBRQRL
     C           WZAJCD    CASNE#2AJCD    FBRQRL
     C           WZGMST    CASNE#2GMST    FBRQRL
     C                     END
     C           DATAG1    TAG
     C           YPMTFD    IFEQ *BLANKS
      * USER: Process subfile control (Pre-confirm)
     C                     MOVEL'Y'       W0DCF            *Defer confirm
      * Display Order Special Instructions
      * CASE: CTL.*CMD key is CF08
     C           *IN08     IFEQ '1'                        *IF
      * Dsp Special Instr      DR - OP Order Header  * 
     C                     CLEARPARC
     C                     Z-ADD#2AIC3    PAAIC3           Company Number
     C                     Z-ADD#2C4NB    PAC4NB           Order Number
      *
     C                     CALL 'PDXPD1R'              90  Dsp Special Ins
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PARC             KEY: Order Head
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDXPD1R' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
      * Display Shipping Instructions
      * CASE: CTL.*CMD key is CF13
     C           *IN13     IFEQ '1'                        *IF
      * DSP Shipping Inst.     DF - PD Shipping Instructions  * 
     C                     CALL 'PDNADFR'              90  DSP Shipping In
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #2AIC3    WQ0139  30       Company Number
     C                     PARM #2C4NB    WQ0140  70       Order Number
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDNADFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
      * Display Production Availability
      * CASE: CTL.*CMD key is CF16
     C           *IN16     IFEQ '1'                        *IF
      * ** Pass company# & whse to Product Availability   09/01/2006 LJB
      * CASE: CTL.Warehouse Code is Warehouse Code Blank
     C           #2AJCD    IFEQ *BLANK                     *IF
     C                     MOVELYL0001    WUT3CD           Warehouse Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL#2AJCD    WUT3CD           Warehouse Code
     C                     END                             *FI
      * WW Product Availablty DF - Company Item Avail Group  * 
     C                     CALL 'PDFPDFR'              90  WW Product Avai
     C                     PARM *BLANK    W0RTN   7
     C           #2AIC3    PARM #2AIC3    WQ0141  30       Company Number
     C                     PARM WUT3CD    WQ0142  3        Warehouse Code
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDFPDFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
      * Print Order Acknoledgement
      * CASE: CTL.*CMD key is CF18
     C           *IN18     IFEQ '1'                        *IF
      * ** FT299 LJB 04/18/2007
      * ** Pass blanks to the Print Acknowledgement program. It will
      * ** check for allow multiple warehouse access authority
     C                     MOVEL*BLANK    WUCPCD           USR Warehouse C
      * PRT Acknowledgements   PV - Order Header TRG  * 
     C                     CALL 'PDJ4PVR'              90  PRT Acknowledge
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WUCPCD    WQ0143  3        Warehouse Code
     C                     PARM '1'       WQ0144  1        Billing Activit
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDJ4PVR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
     C                     END
     C           YPMTFD    IFEQ *BLANKS
      * Reload subfile requested
     C           W0RSF     CABEQ'Y'       DAEXIT
     C                     END
     C           *IN81     IFEQ '1'
      * Process subfile records
     C                     EXSR DBPRSF
     C                     END
     C           YPMTFD    CABNE*BLANKS   DAEXIT
      * If error, quit processing
     C           *IN99     CABEQ'1'       DAEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       DAEXIT
      * Prompt for confirmation
     C                     EXSR DHPRCF
      * Exit if not confirmed
     C           *IN99     IFEQ '1'
     C                     SETOF                     99
     C                     GOTO DAEXIT
     C                     END
      * Process subfile (pass 2)
     C                     EXSR EAPRSF
      * If error during 2nd pass exit:
     C           *IN99     CABEQ'1'       DAEXIT
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         DBPRSF    BEGSR
      *================================================================
      * Process modified subfile record
      *================================================================
      * Read first changed slf record
     C           YAFSCH    IFNE *ZERO
     C           YAFSCH    CHAIN#SFLRCD              92    *
     C                     ELSE
     C                     READC#SFLRCD                  92*
     C                     END
     C           *IN92     DOWEQ'0'
      * Process subfile record
     C                     EXSR DCPRSR
      * Convert fields to external form
     C                     EXSR MNCV#1
      * Set screen conditioning indicators
     C                     EXSR GADSA1
     C                     UPDAT#SFLRCD
     C                     READC#SFLRCD                  92*
     C                     END
      *================================================================
     CSR         DBEXIT    ENDSR
      /EJECT
     CSR         DCPRSR    BEGSR
      *================================================================
      * Process subfile record
      *================================================================
      * Setof error indicators and SFLNXTCHG
     C                     MOVEAWKIND0    *IN,34
     C                     SETOF                     98    *
     C           YPMTFD    CABNE*BLANKS   DCEXIT
      * SFLNXTCHG
     C                     SETON                     84
      * USER: Process subfile record (Pre-confirm)
      * Display order detail line if Display is selected
      * CASE: RCD.*SFLSEL is *Display
     C           #1SEL     IFEQ '5'                        *IF
     C           #1SEL     OREQ ' 5'
      * DSP Ord Ship Dtl Line  D1 - PD Order Detail  * 
     C                     CALL 'PDP4D1R'              90  DSP Order Detai
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1AIC3    WQ0145  30       Company Number
     C                     PARM #1C4NB    WQ0146  70       Order Number
     C                     PARM #1DPNB    WQ0147  30       Order Sequence
     C                     PARM #1UENB    WQ0148  30       Order Secondary
     C                     PARM P3DNCD    WQ0149  6        Application Cod
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDP4D1R' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
      * Validate Load Status
      * CASE: If Option 7, 9, 11, 12
      *  - c2 OR c3 OR c4
      *   |- c2    : RCD.*SFLSEL is Option 9
      *   |- c3    : RCD.*SFLSEL is Option 11
      *   |- c4    : RCD.*SFLSEL is Option 12
      *   '-
     C           #1SEL     IFEQ '9'                        *IF
     C           #1SEL     OREQ ' 9'
     C           #1SEL     OREQ '11'                       *OR
     C           #1SEL     OREQ '12'                       *OR
      * CASE: CTL.Load ID is NE Blank
     C           #2RMNB    IFNE *ZERO                      *IF
      * RTV Load Status        RT - OM Load Header  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2RMNB    WL0366           Load ID
     C                     EXSR TSRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0367    P4PKST    P      Load Status
      * CASE: PAR.Load Status is Locked thru Invoiced
     C           P4PKST    IFEQ 'I'                        *IF
     C           P4PKST    OREQ 'L'
     C           P4PKST    OREQ 'S'
      * Setup message data for message
     C                     MOVEL#1SEL     ZA0001           *SFLSEL
      * Send message 'Load Locked Opt Invalid'
     C                     MOVEL'USR2308' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9834  *
      *
     C                     GOTO DCEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      *  7=Dsp Age
      * CASE: RCD.*SFLSEL is Option 7
     C           #1SEL     IFEQ '7'                        *IF
     C           #1SEL     OREQ ' 7'
      * Dsp Age Information   DR - Order Detail  * 
     C                     CLEARPBRC
     C                     Z-ADD#1AIC3    PBAIC3           Company Number
     C                     Z-ADD#1C4NB    PBC4NB           Order Number
     C                     Z-ADD#1DPNB    PBDPNB           Order Sequence
     C                     Z-ADD#1UENB    PBUENB           Order Secondary
      *
     C                     CALL 'PNQ0D1R'              90  Dsp Age Informa
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PBRC             KEY: Order Deta
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNQ0D1R' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
      * 11=Work With Order Production Schedule
      * CASE: RCD.*SFLSEL is Option 11
     C           #1SEL     IFEQ '11'                       *IF
      * WW OrdPrdSch Edit     DF - Order Detail  * 
     C                     CLEARPCRC
     C                     Z-ADD#1NUDT    PCNUDT           Consumed Item C
     C                     MOVEL#1F6SX    PCF6SX    P      Production Ware
      *
     C                     CALL 'POQJDFR'              90  WW OrdPrdSch Ed
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PCRC             KEY: Order Deta
     C                     PARM #1HGCD    WQ0150  70       Item Code
     C                     PARM *BLANK    WQ0151132        Message USR
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'POQJDFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
      * 14=Release line itm    FP1054 - new opt
      * CASE: RCD.*SFLSEL is Option 14
     C           #1SEL     IFEQ '14'                       *IF
      * RTV Order in Use       RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0368           Company Number
     C                     Z-ADD#2C4NB    WL0369           Order Number
     C                     EXSR TTRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0370    YL0008    P      Order in Use
     C                     MOVELWL0371    YL0009    P      Header Status
     C                     Z-ADDWL0372    YL0010           Load ID
      * CASE: LCL.Order in Use is yes
     C           YL0008    IFEQ 'Y'                        *IF
      * Setup message data for message
      * Convert Order Number to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           #1C4NB    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL#1C4NB    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    ZA0002           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    ZA0002           CD7 Ext Numeric
     C                     END                             *FI
      * Send message 'Order in use'
     C                     MOVEL'USR0508' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     98    *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0DCF            *Defer confirm
     C                     END                             *FI
     C                     END                             *FI
      * CASE: CTL.Requested Ship Date GT CTL.USR Day 3
     C           #2A5DT    IFGT #CE2DT                     *IF
     C                     Z-ADD*ZERO     #RLRQT           Qty EOD Inv 3 U
     C                     END                             *FI
     C           *IN98     IFEQ '1'
      * SFLRCD invalid
     C  N99                Z-ADD##RR      ##SFRC     99    *
     C                     END                             FI *IN98
      *================================================================
     CSR         DCEXIT    ENDSR
      /EJECT
     CSR         DHPRCF    BEGSR
      *================================================================
      * Prompt for confirmation
      *================================================================
      * Convert fields to external form
     C                     EXSR MOCV#2
      * Update screen time
     C                     TIME           ##TME
     C                     MOVEL*BLANK    ##CFCD
     C                     MOVEL'N'       ##CFCD
      * Save CMD keys
     C                     MOVEA*IN       WN30   30
     C                     SETOF                     29    *
      * Generate internal/external key list
     C           KINEX     KLIST
     C                     KFLD           Y2LSNO
     C                     KFLD           Y2INVL
      * Convert *CONFIRM to external value
     C                     Z-ADD1001713   Y2LSNO
     C                     MOVEL*BLANK    Y2INVL
     C                     MOVEL##CFCD    Y2INVL           *CONFIRM
     C           KINEX     CHAIN@Y2INEX              90    *
     C  N90                MOVELY2EXVL    V#CFCD           *CONFIRM
      *
     C           W0HLP     DOUEQ'N'
     C           *IN29     ANDEQ'0'
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     WRITE#SFLCTL
     C                     EXFMT#CONFIRM
     C           *IN29     IFEQ '1'
     C                     SETON                     99
     C                     GOTO DHEXIT
     C                     END
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
      * Validate *CONFIRM
     C                     MOVEL*BLANK    W0RTN
     C                     MOVELV#CFCD    W0NSRQ  1        *CONFIRM
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C           'V#CFCD'  OREQ YPMTFD
     C                     CALL 'CAVLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1001713   Y2LSNO  70
     C           V#CFCD    PARM V#CFCD    W0EXVL 25        *CONFIRM
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C           W0NSRQ    IFNE '?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
     C                     END
      * Check external value of *CONFIRM
      * Generate internal/external key list
     C           KEXIN     KLIST
     C                     KFLD           Y2LSNO
     C                     KFLD           Y2EXVL
      * Convert *CONFIRM to internal value
     C                     Z-ADD1001713   Y2LSNO
     C                     MOVEL*BLANK    Y2EXVL
     C                     MOVELV#CFCD    Y2EXVL           *CONFIRM
     C           KEXIN     CHAIN@Y2EXIN              90    *
     C           *IN90     IFEQ '1'
     C                     MOVEL*BLANK    ##CFCD
     C           YPMTFD    IFEQ *BLANK
     C                     SETON                     96    *
     C                     WRITE#CONFIRM
     C                     SETOF                     96    *
     C                     END
     C                     ELSE
     C                     MOVELY2INVL    ##CFCD           *CONFIRM
     C                     END
      *
     C   90                SETON                     29    *
     C  N90                SETOF                     29    *
     C                     END
      * Restore CMD keys
     C                     MOVEAWN30      *IN
      * Update job time
     C                     TIME           ##JTM
     C           ##CFCD    IFEQ 'Y'
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C                     END
     C           ##CFCD    COMP 'Y'                  9999  *
      * Not confirmed
      *================================================================
     CSR         DHEXIT    ENDSR
      /EJECT
     CSR         EAPRSF    BEGSR
      *================================================================
      * Update DBF from subfile
      *================================================================
     C           *IN81     IFEQ '1'
      * Process all modified subfile records
     C                     READC#SFLRCD                  92*
     C           *IN92     DOWEQ'0'
      * Process modified subfile record
     C                     EXSR EBPRSR
      * Convert fields to external form
     C                     EXSR MNCV#1
      * Set screen conditioning indicators
     C                     EXSR GADSA1
     C                     UPDAT#SFLRCD
     C                     READC#SFLRCD                  92*
     C                     END                             WOD *92
     C                     END                             FI *81
      * If any errors, cancel reload
     C           *IN99     IFEQ '1'
     C                     MOVEL'N'       W0RSF   1
     C                     END
      * USER: Final processing (Post-confirm)
     C                     MOVEL'Y'       W0RSF            *Reload subfile
      *================================================================
     CSR         EAEXIT    ENDSR
      /EJECT
     CSR         EBPRSR    BEGSR
      *================================================================
      * Process modified subfile record
      *================================================================
      * Set off error indicators
     C                     MOVEAWKIND0    *IN,34
     C                     SETOF                     98
      * USER: Process subfile record (Post-confirm)
      * Send message 'Processing'
     C                     MOVEL'USR2303' ZAMSID
     C                     MOVEL'*EXT '   ZAPGRL           Rel queue
     C                     MOVEL'*STATUS' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
      * 14=Release Line item-FP1054
      * CASE: RCD.*SFLSEL is Option 14
     C           #1SEL     IFEQ '14'                       *IF
      * CHG Released by User  CH - Order Detail  * 
     C                     EXSR TUCHRC
      * FP1054 chg prod hold status if orders line pass test
      * RTV Chg Sts/Prd Sts   RT - Order Header TRG  * 
     C                     EXSR TVRVGN
      * * FP1054 Create rcd * RLSLIN
     C                     MOVEL*BLANK    WUFYTX           Item Code Txt
     C                     MOVEL#1HGCD    WUFYTX           Item Code Txt
      * CRT Load/Order Chg Log XF - Load Order Change Log  * 
     C                     CLEARPERC
     C                     Z-ADD#2RMNB    PERMNB           Load ID
     C                     Z-ADD*ZERO     PERVNB           Stop/Drop
     C                     MOVEL'RLSLIN'  PERVST    P      Load Change Typ
     C                     MOVEL'SLS'     PEUJST    P      Department Cont
     C                     MOVELWUFYTX    PEMNTX    P      Change Log Prio
     C                     MOVEL@CN,002   PEMOTX    P      Change Log New
     C                     MOVEL##USR     PEAYNA    P      User Id
     C                     MOVEL##PGM     PEA0NA    P      Job Name
     C                     MOVEL*BLANK    PEBZNA    P      Carrier Code
     C                     Z-ADD#1AIC3    PEAIC3           Company Number
     C                     Z-ADD#1C4NB    PEC4NB           Order Number
      *
     C                     CALL 'PDADXFR'              90  CRT Load/Order
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PERC             RCD: Load Order
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDADXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      * *
     C                     MOVEL'Y'       YL0014           Status - Y or N
      * *
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C           *IN98     IFEQ '1'
      * SFLRCD invalid
     C                     SETON                     84    SFLNXTCHG
     C  N99                Z-ADD##RR      ##SFRC     99    *
     C                     GOTO EBEXIT
     C                     ELSE
      * SFLRCD valid
     C                     SETOF                     84    SFLNXTCHG
     C                     MOVEL*BLANK    #1SEL
     C                     END                             FI *IN98
      *================================================================
     CSR         EBEXIT    ENDSR
      /EJECT
     CSR         FBRQRL    BEGSR
      *================================================================
      * Request subfile reload
      *================================================================
     C                     MOVEL'Y'       W0RSF
      *================================================================
     CSR         FBEXIT    ENDSR
      /EJECT
     CSR         GADSA1    BEGSR
      *================================================================
      * Set display attributes for Subfile record
      *================================================================
     C                     MOVEL'0'       *IN79
     C           #1GMST    IFEQ 'X'                        *IF
     C           #1GMST    OREQ 'C'
     C           #1GMST    OREQ 'R'
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
     C                     MOVEL'0'       *IN78
     C           WUI0ST    IFEQ 'O'                        *IF
     C                     MOVEL'1'       *IN78
     C                     END                             *FI
      *================================================================
     CSR         GAEXIT    ENDSR
      /EJECT
     CSR         MBFL#1    BEGSR
      *================================================================
      * Move @BGWKL1 fields to subfile
      *================================================================
     C                     MOVEL*BLANK    #1SEL
     C                     Z-ADDOMAIC3    #1AIC3           Company Number
     C                     Z-ADDOMC4NB    #1C4NB           Order Number
     C                     Z-ADDOMDPNB    #1DPNB           Order Sequence
     C                     Z-ADDOMUENB    #1UENB           Order Secondary
     C                     MOVELOMRPCD    #1RPCD           Age Code
     C                     Z-ADDOMBKC7    #1BKC7           Ship To Custome
     C                     Z-ADDOMCFC7    #1CFC7           Order Group Cod
     C                     MOVELOMGNST    #1GNST           Detail Line Sta
     C                     Z-ADDOMMAVA    #1MAVA           Billing Detail
     C                     Z-ADDOMKDVA    #1KDVA           Billing Detail
     C                     Z-ADDOML8VA    #1L8VA           Billing Detail
     C                     Z-ADDOML9VA    #1L9VA           Quantity to Sub
     C                     MOVELOMGTST    #1GTST           Comment Print A
     C                     MOVELOMGVST    #1GVST           Comment Print I
     C                     MOVELOMGUST    #1GUST           Comment Print P
     C                     MOVELOMQFST    #1QFST           Comment Print S
     C                     Z-ADDOMAYVA    #1AYVA           Extended Amount
     C                     Z-ADDOMEXDT    #1EXDT           Market Pricing
     C                     MOVELOMLQCD    #1LQCD           Commodity Marke
     C                     MOVELOMRDCD    #1RDCD           Date Method Cod
     C                     MOVELOMQ7CD    #1Q7CD           Price Method Co
     C                     Z-ADDOMBZPR    #1BZPR           Price Overage O
     C                     Z-ADDOML6NB    #1L6NB           Contract Number
     C                     MOVELOMU1ST    #1U1ST           Price Status
     C                     Z-ADDOMGIDT    #1GIDT           Pricing Date Us
     C                     MOVELOMCRCD    #1CRCD           U/M - Base Pric
     C                     MOVELOMRZST    #1RZST           Work Confirm St
     C                     MOVELOMR0ST    #1R0ST           Work Over/Short
     C                     MOVELOMR1ST    #1R1ST           OD Production P
     C                     MOVELOMG8NA    #1G8NA           Order Desc. Lin
     C                     MOVELOMVEST    #1VEST           Palletize
     C                     MOVELOMVGST    #1VGST           Slip Sheet
     C                     MOVELOMAVST    #1AVST           Catch Weight St
     C                     MOVELOMU0ST    #1U0ST           Price Audit
     C                     MOVELOMRFCD    #1RFCD           Price Audit Rea
     C                     MOVELOMFZST    #1FZST           Production Date
     C                     Z-ADDOMR1NB    #1R1NB           Rated Freight
     C                     Z-ADDOMAVQT    #1AVQT           Quantity Ordere
     C                     Z-ADDOMD0WG    #1D0WG           Weight Ordered
     C                     Z-ADDOMCCQT    #1CCQT           Quantity Schedu
     C                     Z-ADDOMAUWG    #1AUWG           Weight Schedule
     C                     Z-ADDOMCBQT    #1CBQT           Quantity Shippe
     C                     Z-ADDOMATWG    #1ATWG           Weight Shipped
     C                     Z-ADDOMAQCS    #1AQCS           Unit Cost Prici
     C                     Z-ADDOMAGCS    #1AGCS           Unit Cost Per P
     C                     Z-ADDOMAKPR    #1AKPR           Unit Price
     C                     Z-ADDOMALPR    #1ALPR           Unit Price - Cr
     C                     Z-ADDOMAUPR    #1AUPR           Unit Price Orde
     C                     Z-ADDOMAVWG    #1AVWG           Unit Weight Ord
     C                     Z-ADDOMA4WG    #1A4WG           Tare Weight Tot
     C                     Z-ADDOMA5DT    #1A5DT           Requested Ship
     C                     Z-ADDOMAODT    #1AODT           Scheduled Ship
     C                     Z-ADDOMGNDT    #1GNDT           Actual Shipped
     C                     MOVELOMAMST    #1AMST           Affect Inventor
     C                     MOVELOMANST    #1ANST           Affect Sales Do
     C                     MOVELOMVAST    #1VAST           Affect Sales Pn
     C                     Z-ADDOMRGNB    #1RGNB           Item Structure
     C                     Z-ADDOMRHNB    #1RHNB           Item Structure
     C                     Z-ADDOMRINB    #1RINB           Item Structure
     C                     MOVELOMRBCD    #1RBCD           Item Level
     C                     MOVELOMHICD    #1HICD           Quality Level
     C                     MOVELOMRNCD    #1RNCD           Pricing Product
     C                     MOVELOMROCD    #1ROCD           Season Product
     C                     Z-ADDOMCXDT    #1CXDT           Date of Origina
     C                     MOVELOMAJVN    #1AJVN           User Profile Na
     C                     MOVELOMKXCD    #1KXCD           Country Code
     C                     MOVELOMJPCD    #1JPCD           Event Code
     C                     MOVELOMCQCD    #1CQCD           Reason Code
     C                     MOVELOMR4CD    #1R4CD           Sales Route Cod
     C                     MOVELOMZ1ST    #1Z1ST           Modified Flag
     C                     MOVELOMZ3ST    #1Z3ST           Substituted Fla
     C                     MOVELOMZ4ST    #1Z4ST           OD Schedule Ove
     C                     Z-ADDOMDUPR    #1DUPR           Invoice Unit Pr
     C                     Z-ADDOMB6VL    #1B6VL           Invoice Extende
     C                     MOVELOMFZSX    #1FZSX           OD Adj Type Ove
     C                     MOVELOMF0SX    #1F0SX           Affect Trade Fu
     C                     MOVELOMF1SX    #1F1SX           Affect Commissi
     C                     MOVELOMF2SX    #1F2SX           Affect Pricing
     C                     MOVELOMF4SX    #1F4SX           Ord TF Exempt C
     C                     MOVELOMF5SX    #1F5SX           OD Pallet Type
     C                     MOVELOMF6SX    #1F6SX           Production Ware
     C                     MOVELOMF7SX    #1F7SX           OD Price Type
     C                     Z-ADDOMNTDT    #1NTDT           Warehouse Palle
     C                     Z-ADDOMNUDT    #1NUDT           Consumed Item C
     C                     Z-ADDOMNVDT    #1NVDT           Deadline Depart
     C                     Z-ADDOMNWDT    #1NWDT           OD Price Type R
     C                     Z-ADDOMNXDT    #1NXDT           OD Unused Date
     C                     Z-ADDOMBUTM    #1BUTM           Deadline Depart
     C                     Z-ADDOMBVTM    #1BVTM           Price Code
     C                     Z-ADDOMBWTM    #1BWTM           Maximum Net Wei
     C                     Z-ADDOMBXTM    #1BXTM           Substitution Li
     C                     Z-ADDOMBYTM    #1BYTM           Max Qty to sche
     C                     Z-ADDOMH5NX    #1H5NX           Warehouse Palle
     C                     Z-ADDOMH6NX    #1H6NX           Warehouse Avg P
     C                     Z-ADDOMH7NX    #1H7NX           OD Item Target
     C                     Z-ADDOMH8NX    #1H8NX           OD Estimated Gr
     C                     Z-ADDOMH9NX    #1H9NX           OD Maximum Unit
     C                     Z-ADDOMDVPR    #1DVPR           Order Gate/Fina
     C                     Z-ADDOMDWPR    #1DWPR           OD Ceiling Pric
     C                     Z-ADDOMDXPR    #1DXPR           OD Gate/Final P
     C                     Z-ADDOMDYPR    #1DYPR           OD Weighted Avg
     C                     Z-ADDOMDZPR    #1DZPR           OD Unused Prc 5
     C                     Z-ADDOMGSPR    #1GSPR           OD Unused Prc 6
     C                     Z-ADDOMGTPR    #1GTPR           OD Unused Prc 7
     C                     Z-ADDOMGUPR    #1GUPR           OD Unused Prc 8
     C                     MOVELOMHOST    #1HOST           OD MPR Sent to
     C                     MOVELOMHPST    #1HPST           OD MPR Prc Read
     C                     MOVELOMIOST    #1IOST           OD UnUsed Price
     C                     Z-ADDOMPEWG    #1PEWG           Weight Amount E
     C                     Z-ADDOMTIDT    #1TIDT           Production Ovr
     C                     Z-ADDOMTJDT    #1TJDT           Production Ovr
     C                     MOVELOMH2ST    #1H2ST           OD UnUsed Statu
     C                     MOVELOMH0ST    #1H0ST           OD Clm Full Ret
     C                     MOVELOMH1ST    #1H1ST           Order Line Erro
     C                     Z-ADDOMTKDT    #1TKDT           OD Market Begin
     C                     Z-ADDOMTLDT    #1TLDT           OD Market Endin
     C                     Z-ADDOMTMDT    #1TMDT           OD Atch to Ord
     C                     MOVELOMUVST    #1UVST           EDI Status 1
     C                     MOVELOMUWST    #1UWST           EDI Status 2
     C                     MOVELOMUXST    #1UXST           EDI Status 3
     C                     Z-ADDOMAATM    #1AATM           Job Time
     C                     MOVELOMAYNA    #1AYNA           User Id
     C                     MOVELOMA0NA    #1A0NA           Job Name
     C                     Z-ADDOMAXDT    #1AXDT           Job Date
     C                     Z-ADDOMHGCD    #1HGCD           Item Code
      * Clear external version also
     C                     MOVEL*BLANK    V1HGCD
     C                     MOVELOMAJCD    #1AJCD           Warehouse Code
     C                     Z-ADDOMA1AA    #1A1AA           Ham Group Numbe
     C                     MOVELOMAGCD    #1AGCD           U/M - Ordered
     C                     Z-ADDOMRINY    #1RINY           Item Age Days
     C                     MOVELOMF3SX    #1F3SX           Released by Use
     C                     MOVELOMGMST    #1GMST           Detail Line Sta
     C                     MOVELOMG7NA    #1G7NA           Order Desc. Lin
     C                     Z-ADD*ZERO     #RD3AL           Day 21 Availabi
     C                     Z-ADD*ZERO     #RD5AB           Day 14 Availabi
     C                     Z-ADD*ZERO     #RLHQT           Qty EOD Inv 2 U
     C                     Z-ADD*ZERO     #RLGQT           Qty EOD Inv 1 U
     C                     Z-ADD*ZERO     #RD7AV           Day 7 Availabil
     C                     Z-ADD*ZERO     #RD1LD           Day 1 Avail (Ld
     C                     Z-ADD*ZERO     #RD1AV           Day 1 Availabil
     C                     Z-ADD*ZERO     #RDOQT           Quantity Avail.
     C                     MOVEL*BLANK    #1SEL            *SFLSEL
     C                     Z-ADD*ZERO     #RL1QT           Qty 5.0 USR
     C                     Z-ADD*ZERO     #RLEQT           Qty On-Hand USR
     C                     Z-ADD*ZERO     #RLRQT           Qty EOD Inv 3 U
      *================================================================
     CSR         MBEXIT    ENDSR
      /EJECT
     CSR         MEIZ#2    BEGSR
      *================================================================
      * Initialise subfile control
      *================================================================
     C                     Z-ADD*ZERO     #CE2DT           USR Day 3
     C                     Z-ADD*ZERO     #CE1DT           USR Day 2
     C                     Z-ADD*ZERO     #CFFDT           USR Day 1
     C                     MOVEL*BLANK    #2U2ST           Export Status
     C                     Z-ADD*ZERO     #2AFTM           Requested Deliv
     C                     MOVEL*BLANK    #2GJST           Order in Use
     C                     MOVELP3DNCD    #PDNCD           Application Cod
     C                     Z-ADD*ZERO     #2DPNB           Order Sequence
     C                     Z-ADD*ZERO     #2UENB           Order Secondary
     C                     MOVEL*BLANK    #2RPCD           Age Code
     C                     Z-ADD*ZERO     #2AVQT           Quantity Ordere
     C                     Z-ADD*ZERO     #2D0WG           Weight Ordered
     C                     Z-ADD*ZERO     #2CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     #CD1AV           Day 1 Availabil
     C                     Z-ADD*ZERO     #CD1LD           Day 1 Avail (Ld
     C                     Z-ADD*ZERO     #CDOQT           Quantity Avail.
     C                     Z-ADD*ZERO     #2AUWG           Weight Schedule
     C                     Z-ADDP1AIC3    #2AIC3           Company Number
      * Clear external version also
     C                     MOVEL*BLANK    V2AIC3
     C                     Z-ADD*ZERO     #2BKC7           Ship To Custome
      * Clear external version also
     C                     MOVEL*BLANK    V2BKC7
     C                     MOVEL*BLANK    #CAYTX           Customer Name
     C                     Z-ADDP1C4NB    #2C4NB           Order Number
      * Clear external version also
     C                     MOVEL*BLANK    V2C4NB
     C                     MOVELP2HNNA    #2HNNA           Ship To City
     C                     MOVELP2DBCD    #2DBCD           Ship To State C
     C                     Z-ADDP2A0DT    #PA0DT           Order Date
      * Clear external version also
     C                     Z-ADD*ZERO     VPA0DT
     C                     Z-ADD*ZERO     #CAPTM           Time
     C                     MOVELP2BCNA    #PBCNA           Customer Purcha
     C                     Z-ADDP2AODT    #2AODT           Scheduled Ship
      * Clear external version also
     C                     Z-ADD*ZERO     V2AODT
     C                     MOVELP2JNCD    #2JNCD           Order Type - Sa
     C                     MOVELP2XIST    #2XIST           Credit Hold
     C                     MOVELP2XJST    #2XJST           Production Hold
     C                     Z-ADDP2A5DT    #2A5DT           Requested Ship
      * Clear external version also
     C                     Z-ADD*ZERO     V2A5DT
     C                     MOVEL*BLANK    #2R4CD           Sales Route Cod
     C                     MOVEL*BLANK    #CMZNA           Sales Route Des
     C                     Z-ADDP2EIDT    #2EIDT           Requested Deliv
      * Clear external version also
     C                     Z-ADD*ZERO     V2EIDT
     C                     Z-ADDP2RMNB    #2RMNB           Load ID
     C                     MOVELP2GWST    #2GWST           Header Status
     C                     MOVEL*BLANK    #CNCNA           USR Desc. 10
     C                     Z-ADD*ZERO     #2HGCD           Item Code
      * Clear external version also
     C                     MOVEL*BLANK    V2HGCD
     C                     MOVEL*BLANK    #2AJCD           Warehouse Code
     C                     Z-ADD*ZERO     #2A1AA           Ham Group Numbe
     C                     MOVEL*BLANK    #2AGCD           U/M - Ordered
     C                     Z-ADD*ZERO     #2RINY           Item Age Days
     C                     Z-ADD*ZERO     #CL1QT           Qty 5.0 USR
     C                     Z-ADD*ZERO     #CLEQT           Qty On-Hand USR
     C                     Z-ADD*ZERO     #CLRQT           Qty EOD Inv 3 U
     C                     MOVEL*BLANK    #2F3SX           Released by Use
     C                     MOVEL*BLANK    #2GMST           Detail Line Sta
      * Check restriction within
     C                     EXSR VACKRL
      *================================================================
     CSR         MEEXIT    ENDSR
      /EJECT
     CSR         MNCV#1    BEGSR
      *================================================================
      * Convert subfile fields into external form
      *================================================================
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           #1HGCD    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL#1HGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    V1HGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V1HGCD           CD7 Ext Numeric
     C                     END                             *FI
      *================================================================
     CSR         MNEXIT    ENDSR
      /EJECT
     CSR         MOCV#2    BEGSR
      *================================================================
      * Convert control fields into external form
      *================================================================
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           #2AIC3    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL#2AIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    V2AIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V2AIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Convert Ship To Customer to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           #2BKC7    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL#2BKC7    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    V2BKC7           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V2BKC7           CD7 Ext Numeric
     C                     END                             *FI
      * Convert Order Number to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           #2C4NB    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL#2C4NB    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    V2C4NB           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V2C4NB           CD7 Ext Numeric
     C                     END                             *FI
      * Convert Order Date to display format
      * Convert date
     C           1000000   ADD  #PA0DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VPA0DT
      * Convert Scheduled Ship Date to display format
      * Convert date
     C           1000000   ADD  #2AODT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    V2AODT
      * Convert Requested Ship Date to display format
      * Convert date
     C           1000000   ADD  #2A5DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    V2A5DT
      * Convert Requested Delivery Date to display format
      * Convert date
     C           1000000   ADD  #2EIDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    V2EIDT
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           #2HGCD    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL#2HGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    V2HGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V2HGCD           CD7 Ext Numeric
     C                     END                             *FI
      *================================================================
     CSR         MOEXIT    ENDSR
      /EJECT
     CSR         NARVGN    BEGSR
      *================================================================
      * RTV Program Setup w/Co RT - User Profile Control  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSNA     KLIST
     C                     KFLD           DRAJVN           User Profile Na
      * Setup key
     C                     MOVELWL0373    DRAJVN           User Profile Na
      * Establish starting position
     C           KRSNA     CHAIN@DRRETH              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0763' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO NAEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDRI6ST    WL0374           Allow Multi-Com
     C                     MOVELDRMPNA    WL0375           Default Printer
     C                     MOVELDRBCCD    WL0376           Salesperson Cod
     C                     Z-ADDDRAIC3    WL0377           Company Number
     C                     MOVELDRBUVN    WL0378           User Code Model
     C                     ENDIF
      *================================================================
     CSR         NAEXIT    ENDSR
      /EJECT
     CSR         NBRVGN    BEGSR
      *================================================================
      * RTV Appl. Profile      RT - Application Profile  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSNB     KLIST
     C                     KFLD           DTAJVN           User Profile Na
     C                     KFLD           DTDNCD           Application Cod
      * Setup key
     C                     MOVELWL0379    DTAJVN           User Profile Na
     C                     MOVELWL0380    DTDNCD           Application Cod
      * Establish starting position
     C           KRSNB     CHAIN@DTRETE              90    *
      * Data record not found
     C   90                MOVEL'USR0767' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDDTAIC3    WL0381           Company Number
     C                     MOVELDTAJCD    WL0382           Warehouse Code
     C                     ENDIF
      *================================================================
     CSR         NBEXIT    ENDSR
      /EJECT
     CSR         NCRVGN    BEGSR
      *================================================================
      * RTV Prod Whse for Co  RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WOBWC3    WQNC01           Shipping Compan
      * Define keylist
     C           KRSNC     KLIST
     C                     KFLD           WQNC01           Shipping Compan
      * Setup key
     C                     Z-ADDWL0384    WQNC01           Shipping Compan
      * Establish starting position
     C           KRSNC     SETLL@ADREWA                    *
     C           KRSNC     READE@ADREWA                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0383           Warehouse Code
     C                     GOTO NCEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Record Status is Active
     C           WOVSST    IFEQ 'A'                        *IF
      * CASE: DB1.Production Warehouse Code is Warehouse Code not Blank
     C           WOAOCD    IFNE *BLANK                     *IF
     C                     MOVELWOAOCD    WL0383           Warehouse Code
     C                     GOTO NCEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
     C           KRSNC     READE@ADREWA                  90*
     C                     ENDDO
      *================================================================
     CSR         NCEXIT    ENDSR
      /EJECT
     CSR         NDRVGN    BEGSR
      *================================================================
      * RTV Company Name       RT - Company Name and Address  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSND     KLIST
     C                     KFLD           ABAIC3           Company Number
      * Setup key
     C                     Z-ADDWUAIC3    ABAIC3           Company Number
      * Establish starting position
     C           KRSND     CHAIN@ABREG3              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0003' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUG0TX           Name
     C                     GOTO NDEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELABADTX    WUG0TX           Name
     C                     ENDIF
      *================================================================
     CSR         NDEXIT    ENDSR
      /EJECT
     CSR         NERVGN    BEGSR
      *================================================================
      * VAL no Stop Entered    RT - Load Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     MOVEL'N'       WN0488           Status - Y or N
      * Declare restrictor key work fields
     C           *LIKE     DEFN FLRMNB    WQNE02           Load ID
      * Define keylist
     C           KRSNE     KLIST
     C                     KFLD           WQNE02           Load ID
      * Setup key
     C                     Z-ADD#2RMNB    WQNE02           Load ID
      * Establish starting position
     C           KRSNE     SETLL@FLCPEB                    *
     C           KRSNE     READE@FLCPEB                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1192' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO NEEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Stop/Drop is EQ Zero
     C           FLRVNB    IFEQ 0                          *IF
     C                     MOVEL'Y'       WN0488           Status - Y or N
     C                     GOTO NEEXIT                     *QUIT
     C                     END                             *FI
     C           KRSNE     READE@FLCPEB                  90*
     C                     ENDDO
      *================================================================
     CSR         NEEXIT    ENDSR
      /EJECT
     CSR         NFRVGN    BEGSR
      *================================================================
      * RTV Hold, Use-by load  RT - PD Order Header  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * 05/14/04 SLM PKTR01 Multi-Company - Funct chg remove Company RST
      * PAR = CON By name
     C                     MOVEL*BLANK    WN0489           Order in Use
     C                     MOVEL*BLANK    WN0490           Header Status
      * Declare restrictor key work fields
     C           *LIKE     DEFN WMRMNB    WQNF02           Load ID
      * Define keylist
     C           KRSNF     KLIST
     C                     KFLD           WQNF02           Load ID
      * Setup key
     C                     Z-ADD#2RMNB    WQNF02           Load ID
      * Establish starting position
     C           KRSNF     SETLL@BFCPD9                    *
     C           KRSNF     READE@BFCPD9                  90*
      * Data record not found
     C   90                MOVEL'USR0176' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * If find 1 order on load which is held/cancelled, set par flag and
      * CASE: DB1.Header Status is Hold
     C           WMGWST    IFEQ 'H'                        *IF
     C                     MOVELWMGWST    WN0490           Header Status
     C                     GOTO NFEXIT                     *QUIT
     C                     ELSE
      * CASE: DB1.Header Status is Cancelled
     C           WMGWST    IFEQ 'X'                        *IF
     C                     MOVELWMGWST    WN0490           Header Status
     C                     GOTO NFEXIT                     *QUIT
     C                     ELSE
      * CASE: DB1.Order in Use is yes
     C           WMGJST    IFEQ 'Y'                        *IF
     C                     MOVELWMGJST    WN0489           Order in Use
     C                     GOTO NFEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSNF     READE@BFCPD9                  90*
     C                     ENDDO
      *================================================================
     CSR         NFEXIT    ENDSR
      /EJECT
     CSR         NGRVGN    BEGSR
      *================================================================
      * RTV Ord Requires Revw RT - Order Header TRG  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WMRMNB    WQNG02           Load ID
      * Define keylist
     C           KRSNG     KLIST
     C                     KFLD           WQNG02           Load ID
      * Setup key
     C                     Z-ADD#2RMNB    WQNG02           Load ID
      * Establish starting position
     C           KRSNG     SETLL@BFCPD9                    *
     C           KRSNG     READE@BFCPD9                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0176' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    YL0018           Order Requires
     C                     GOTO NGEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWMFUSX    YL0018           Order Requires
     C           KRSNG     READE@BFCPD9                  90*
     C                     ENDDO
      *================================================================
     CSR         NGEXIT    ENDSR
      /EJECT
     CSR         NHRVGN    BEGSR
      *================================================================
      * RTV Load Header All,Mg RT - Load Header  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSNH     KLIST
     C                     KFLD           FJRMNB           Load ID
      * Setup key
     C                     Z-ADD#2RMNB    FJRMNB           Load ID
      * Establish starting position
     C           KRSNH     CHAIN@FJCPBN              90    *
      * Data record not found
     C   90                MOVEL'USR1188' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDFJAODT    WN0494           Scheduled Ship
     C                     MOVELFJPJST    WUG0TX           LTL Flag
     C                     MOVELFJPKST    WUG0TX           Load Status
     C                     Z-ADDFJRNNB    WUNFNN           Reefer Temperat
     C                     MOVELFJDMTX    WUG0TX           Seal 1
     C                     MOVELFJDNTX    WUG0TX           Seal 2
     C                     MOVELFJDOTX    WUG0TX           Seal 3
     C                     Z-ADDFJRPNB    WUNFNN           Total Load Orde
     C                     Z-ADDFJFLAM    WN0495           Flat Amount
     C                     MOVELFJXQST    WUG0TX           Allocate Pounds
     C                     Z-ADDFJRRNB    WN0496           Total Stops
     C                     MOVELFJDXTX    WUG0TX           Trailer Id
     C                     MOVELFJDYTX    WUG0TX           Transloader Car
     C                     Z-ADDFJSBNB    WUNFNN           BOL Time
     C                     MOVELFJBZNA    WUG0TX           Carrier Code
     C                     MOVELFJRONB    WUG0TX           Truck Size
     C                     Z-ADDFJSQNB    WUNFNN           Ld Hdr/Ld Dtl U
     C                     Z-ADDFJR1NB    WUNFNN           Rated Freight
     C                     MOVELFJVCST    WUG0TX           Ship Status
     C                     MOVELFJVDST    WUG0TX           Load Type
     C                     Z-ADDFJSDNB    WUNFNN           Number Pallets
     C                     Z-ADDFJPAOU    WUNFNN           Number Pallets
     C                     Z-ADDFJDGWG    WUNFNN           Load Carrier Pa
     C                     Z-ADDFJSXNB    WUNFNN           Estimated Arriv
     C                     Z-ADDFJHADT    WUNFNN           Actual Arrival
     C                     Z-ADDFJAART    WUNFNN           Actual Arrival
     C                     Z-ADDFJDHWG    WUNFNN           Trailer IN Weig
     C                     Z-ADDFJDIWG    WUNFNN           Trailer OUT Wei
     C                     Z-ADDFJAQDT    WUNFNN           Actual Departur
     C                     Z-ADDFJS6NB    WUNFNN           Departure Time
     C                     Z-ADDFJT4NB    WUNFNN           Schedule Sequen
     C                     Z-ADDFJPRTM    WUNFNN           Product Tempera
     C                     Z-ADDFJNPSV    WUNFNN           Number Pallets
     C                     MOVELFJJ8TX    WUG0TX           Car/Veh. Initia
     C                     Z-ADDFJTLMI    WN0497           Total Load Mile
     C                     MOVELFJJ9TX    WUG0TX           Recorder ID
     C                     MOVELFJQ2CD    WUG0TX           Shipping Method
     C                     MOVELFJVPCD    WN0498           Ship From Wareh
     C                     MOVELFJDBCD    WN0499           Ship To State C
     C                     Z-ADDFJGRWE    WUNFNN           Gross Weight
     C                     MOVELFJXCCD    WN0500           Carrier Broker
     C                     MOVELFJU2ST    WN0501           Export Status
     C                     Z-ADDFJF9DT    WUNFNN           Actual Ship Dat
     C                     MOVELFJONTM    WUG0TX           On Time - (Y/N)
     C                     Z-ADDFJJ4DT    WUNFNN           Truck Ready Dat
     C                     Z-ADDFJTRTM    WUNFNN           Truck Ready Tim
     C                     Z-ADDFJJ5DT    WUNFNN           Spotted Date
     C                     Z-ADDFJSPTM    WUNFNN           Spotted Time
     C                     Z-ADDFJJ6DT    WUNFNN           Load Finished D
     C                     Z-ADDFJLFTM    WUNFNN           Load Finished T
     C                     Z-ADDFJJ7DT    WUNFNN           BOL Complete Da
     C                     Z-ADDFJBOTM    WUNFNN           BOL Complete Ti
     C                     Z-ADDFJJ8DT    WUNFNN           BOL Received Da
     C                     Z-ADDFJBLTM    WUNFNN           BOL Received Ti
     C                     Z-ADDFJKIDT    WUNFNN           Truck Departure
     C                     Z-ADDFJASTM    WUNFNN           Truck Departure
     C                     Z-ADDFJKADT    WUNFNN           Adjusted Depart
     C                     Z-ADDFJAJCM    WUNFNN           Adjusted Depart
     C                     MOVELFJXACD    WUG0TX           Shipping Line
     C                     MOVELFJOANA    WUG0TX           Port Delv Termi
     C                     MOVELFJK4TX    WUG0TX           Vessel Name
     C                     Z-ADDFJVOAG    WUNFNN           Voyage
     C                     Z-ADDFJKBDT    WUNFNN           Sail Date
     C                     MOVELFJNBBO    WUG0TX           Booking Number
     C                     MOVELFJW4CD    WUG0TX           Discharge Port
     C                     Z-ADDFJEFDT    WUNFNN           Arrival Date
     C                     MOVELFJCNTN    WUG0TX           Container Numbe
     C                     Z-ADDFJKCDT    WUNFNN           Date In
     C                     Z-ADDFJTMIN    WUNFNN           Time In
     C                     Z-ADDFJKDDT    WUNFNN           Date Out
     C                     Z-ADDFJVMNB    WUNFNN           Time Out
     C                     Z-ADDFJOCFR    WUNFNN           Load Total Frei
     C                     Z-ADDFJKJDT    WUNFNN           Scheduled Deliv
     C                     Z-ADDFJATTM    WUNFNN           Scheduled Deliv
     C                     MOVELFJOTRS    WUG0TX           LH Unused Sts
     C                     Z-ADDFJKKDT    WUNFNN           On Yard Date
     C                     Z-ADDFJAVTM    WUNFNN           On Yard Time
     C                     Z-ADDFJKZDT    WN0504           Deadline Depart
     C                     Z-ADDFJAXTM    WN0505           Deadline Depart
     C                     MOVELFJRYSX    WN0506           MG Created Load
     C                     GOTO NHEXIT                     *QUIT
     C                     ENDIF
      *================================================================
     CSR         NHEXIT    ENDSR
      /EJECT
     CSR         NIRVGN    BEGSR
      *================================================================
      * Rtv/Chg Whs,ld miles  RT - Load Header  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0526  70       Total Load Mile
     C                     MOVEL*BLANK    WN0527  3        Ship From Wareh
     C                     MOVEL*BLANK    WN0528  3        Warehouse Code
     C                     Z-ADD*ZERO     WN0529  70       Override Total
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSNI     KLIST
     C                     KFLD           FJRMNB           Load ID
      * Setup key
     C                     Z-ADD#2RMNB    FJRMNB           Load ID
      * Establish starting position
     C           KRSNI     CHAIN@FJCPBN              90    *
      * Data record not found
     C   90                MOVEL'USR1188' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * RTV First Order Whse   RT - OM Load Detail  * 
     C                     EXSR NJRVGN
      * CASE: DB1.Warehouse Code EQ PAR.Ship From Warehouse
     C           FJAJCD    IFEQ WN0527                     *IF
     C                     MOVEL*BLANK    WN0528           Warehouse Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVELFJAJCD    WN0528           Warehouse Code
     C                     END                             *FI
      * ** 11/16/2007 LJB FP1251 Total Load Miles will = zeros if no
      * ** Miles Between Cities record exists
      * ** Override total load miles will take precedence over tlm  E0020
      * E4119 RMC 7/15/16  Upd miles if NOT MG LOAD
      * CASE: DB1.MG Created Load is Yes
     C           FJRYSX    IFEQ 'Y'                        *IF
     C                     Z-ADDFJTLMI    WN0526           Total Load Mile
     C                     Z-ADDFJK2DT    WN0529           Override Total
     C                     ELSE
      * CASE: *OTHERWISE
      * CLC Total Load Miles   XF - Load Detail  * 
     C                     CLEARPFRC
     C                     Z-ADDFJRMNB    PFRMNB           Load ID
      *
     C                     CALL 'PDW3XFR'              90  CLC Total Load
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PFRC             KEY: Load Detai
     C           WN0526    PARM WN0526    WQ0160  70       Total Load Mile
     C           WN0529    PARM WN0529    WQ0161  70       Override Total
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDW3XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
      * ** Add override miles to the update            E00207 LJB 08/13/0
      * CHG Ship FrmWhs,ld mls CH - Load Header  * 
     C                     EXSR NMCHRC
     C                     ENDIF
      *================================================================
     CSR         NIEXIT    ENDSR
      /EJECT
     CSR         NJRVGN    BEGSR
      *================================================================
      * RTV First Order Whse   RT - OM Load Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN FLRMNB    WQNJ02           Load ID
      * Define keylist
     C           KPSNJ     KLIST
     C                     KFLD           WQNJ02           Load ID
     C                     KFLD           FLRVNB           Stop/Drop
      * Define keylist
     C           KRSNJ     KLIST
     C                     KFLD           WQNJ02           Load ID
      * Setup key
     C                     Z-ADDFJRMNB    WQNJ02           Load ID
     C                     Z-ADD1         FLRVNB           Stop/Drop
      * Establish starting position
     C           KPSNJ     SETLL@FLCPEB                    *
     C           KRSNJ     READE@FLCPEB                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1192' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO NJEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * RTV 1st Warehouse/Ctl  RT - Order Detail  * 
     C                     EXSR NKRVGN
     C                     GOTO NJEXIT                     *QUIT
     C           KRSNJ     READE@FLCPEB                  90*
     C                     ENDDO
      *================================================================
     CSR         NJEXIT    ENDSR
      /EJECT
     CSR         NKRVGN    BEGSR
      *================================================================
      * RTV 1st Warehouse/Ctl  RT - Order Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WRAIC3    WQNK01           Company Number
     C           *LIKE     DEFN WRC4NB    WQNK02           Order Number
      * Define keylist
     C           KPSNK     KLIST
     C                     KFLD           WQNK01           Company Number
     C                     KFLD           WQNK02           Order Number
     C                     KFLD           WRDPNB           Order Sequence
     C                     KFLD           WRUENB           Order Secondary
      * Define keylist
     C           KRSNK     KLIST
     C                     KFLD           WQNK01           Company Number
     C                     KFLD           WQNK02           Order Number
      * Setup key
     C                     Z-ADDFLAIC3    WQNK01           Company Number
     C                     Z-ADDFLC4NB    WQNK02           Order Number
     C                     Z-ADD0         WRDPNB           Order Sequence
     C                     Z-ADD0         WRUENB           Order Secondary
      * Establish starting position
     C           KPSNK     SETLL@BGWKAE                    *
     C           KRSNK     READE@BGWKAE                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1309' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WN0527           Warehouse Code
     C                     MOVEL*BLANK    WUG0TX           Trans Contol AS
     C                     GOTO NKEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * RTV Warehouse Control  RT - Warehouse  * 
     C                     EXSR NLRVGN
      * PAR = DB1 By name
     C                     MOVELWRAJCD    WN0527           Warehouse Code
     C                     GOTO NKEXIT                     *QUIT
     C           KRSNK     READE@BGWKAE                  90*
     C                     ENDDO
      *================================================================
     CSR         NKEXIT    ENDSR
      /EJECT
     CSR         NLRVGN    BEGSR
      *================================================================
      * RTV Warehouse Control  RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSNL     KLIST
     C                     KFLD           ADAJCD           Warehouse Code
      * Setup key
     C                     MOVELWRAJCD    ADAJCD           Warehouse Code
      * Establish starting position
     C           KRSNL     CHAIN@ADREAO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUG0TX           Trans Contol AS
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO NLEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELADXUST    WUG0TX           Trans Contol AS
     C                     ENDIF
      *================================================================
     CSR         NLEXIT    ENDSR
      /EJECT
     CSR         NMCHRC    BEGSR
      *================================================================
      * CHG Ship FrmWhs,ld mls CH - Load Header  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0530  30       Company Number
     C                     Z-ADD*ZERO     WN0531  70       Scheduled Ship
     C                     MOVEL*BLANK    WN0532  1        LTL Flag
     C                     MOVEL*BLANK    WN0533  1        Load Status
     C                     Z-ADD*ZERO     WN0534  52       Reefer Temperat
     C                     MOVEL*BLANK    WN0535 15        Seal 1
     C                     MOVEL*BLANK    WN0536 15        Seal 2
     C                     MOVEL*BLANK    WN0537 15        Seal 3
     C                     MOVEL*BLANK    WN0538 15        Seal 1 Unused
     C                     MOVEL*BLANK    WN0539 15        Seal 2 Unused
     C                     Z-ADD*ZERO     WN0540  70       Total Load Orde
     C                     Z-ADD*ZERO     WN0541 112       Flat Amount
     C                     MOVEL*BLANK    WN0542  1        Allocate Pounds
     C                     Z-ADD*ZERO     WN0543  50       Total Stops
     C                     MOVEL*BLANK    WN0544 20        Trailer Id
     C                     MOVEL*BLANK    WN0545  3        Transloader Car
     C                     Z-ADD*ZERO     WN0546  40       BOL Time
     C                     MOVEL*BLANK    WN0547  3        Carrier Code
     C                     MOVEL*BLANK    WN0548  7        Truck Size
     C                     Z-ADD*ZERO     WN0549  70       Ld Hdr/Ld Dtl U
     C                     Z-ADD*ZERO     WN0550 112       Rated Freight
     C                     MOVEL*BLANK    WN0551  1        Ship Status
     C                     MOVEL*BLANK    WN0552  1        Load Type
     C                     Z-ADD*ZERO     WN0553  50       Number Pallets
     C                     Z-ADD*ZERO     WN0554  50       Number Pallets
     C                     Z-ADD*ZERO     WN0555 112       Load Carrier Pa
     C                     Z-ADD*ZERO     WN0556  60       Estimated Arriv
     C                     Z-ADD*ZERO     WN0557  70       Actual Arrival
     C                     Z-ADD*ZERO     WN0558  40       Actual Arrival
     C                     Z-ADD*ZERO     WN0559 112       Trailer IN Weig
     C                     Z-ADD*ZERO     WN0560 112       Trailer OUT Wei
     C                     Z-ADD*ZERO     WN0561  70       Actual Departur
     C                     Z-ADD*ZERO     WN0562  40       Departure Time
     C                     Z-ADD*ZERO     WN0563  50       Schedule Sequen
     C                     Z-ADD*ZERO     WN0564  52       Product Tempera
     C                     Z-ADD*ZERO     WN0565  50       Number Pallets
     C                     MOVEL*BLANK    WN0566 12        Car/Veh. Initia
     C                     MOVEL*BLANK    WN0567 12        Recorder ID
     C                     MOVEL*BLANK    WN0568  2        Shipping Method
     C                     MOVEL*BLANK    WN0569  2        Ship To State C
     C                     Z-ADD*ZERO     WN0570  70       Gross Weight
     C                     MOVEL*BLANK    WN0571  3        Carrier Broker
     C                     MOVEL*BLANK    WN0572  1        Export Status
     C                     Z-ADD*ZERO     WN0573  70       Actual Ship Dat
     C                     MOVEL*BLANK    WN0574  1        On Time - (Y/N)
     C                     Z-ADD*ZERO     WN0575  70       Truck Ready Dat
     C                     Z-ADD*ZERO     WN0576  60       Truck Ready Tim
     C                     Z-ADD*ZERO     WN0577  70       Spotted Date
     C                     Z-ADD*ZERO     WN0578  60       Spotted Time
     C                     Z-ADD*ZERO     WN0579  70       Load Finished D
     C                     Z-ADD*ZERO     WN0580  60       Load Finished T
     C                     Z-ADD*ZERO     WN0581  70       BOL Complete Da
     C                     Z-ADD*ZERO     WN0582  60       BOL Complete Ti
     C                     Z-ADD*ZERO     WN0583  70       BOL Received Da
     C                     Z-ADD*ZERO     WN0584  60       BOL Received Ti
     C                     Z-ADD*ZERO     WN0585  70       Truck Departure
     C                     Z-ADD*ZERO     WN0586  60       Truck Departure
     C                     Z-ADD*ZERO     WN0587  70       Adjusted Depart
     C                     Z-ADD*ZERO     WN0588  60       Adjusted Depart
     C                     MOVEL*BLANK    WN0589  3        Shipping Line
     C                     MOVEL*BLANK    WN0590 20        Port Delv Termi
     C                     MOVEL*BLANK    WN0591 30        Vessel Name
     C                     Z-ADD*ZERO     WN0592  50       Voyage
     C                     Z-ADD*ZERO     WN0593  70       Sail Date
     C                     MOVEL*BLANK    WN0594 12        Booking Number
     C                     MOVEL*BLANK    WN0595 20        Discharge Port
     C                     Z-ADD*ZERO     WN0596  70       Arrival Date
     C                     MOVEL*BLANK    WN0597 12        Container Numbe
     C                     Z-ADD*ZERO     WN0598  70       Date In
     C                     Z-ADD*ZERO     WN0599  60       Time In
     C                     Z-ADD*ZERO     WN0600  70       Date Out
     C                     Z-ADD*ZERO     WN0601  60       Time Out
     C                     Z-ADD*ZERO     WN0602 112       Load Total Frei
     C                     Z-ADD*ZERO     WN0603  70       Scheduled Deliv
     C                     Z-ADD*ZERO     WN0604  60       Scheduled Deliv
     C                     MOVEL*BLANK    WN0605  1        LH Unused Sts
     C                     MOVEL*BLANK    WN0606  1        LH Carrier Paym
     C                     Z-ADD*ZERO     WN0607  70       Bring Back Mile
     C                     Z-ADD*ZERO     WN0608  70       Requested Deliv
     C                     MOVEL*BLANK    WN0609  1        Load Acceptance
     C                     Z-ADD*ZERO     WN0610  70       On Yard Date
     C                     Z-ADD*ZERO     WN0611  60       On Yard Time
     C                     Z-ADD*ZERO     WN0612  70       Deadline Depart
     C                     Z-ADD*ZERO     WN0613  60       Deadline Depart
     C                     MOVEL*BLANK    WN0614  1        Load Held Over
     C                     MOVEL*BLANK    WN0615  1        Load Held Over
     C                     MOVEL*BLANK    WN0616 15        Load Held Over
     C                     MOVEL*BLANK    WN0617 25        Ocean BOL Numbe
     C                     MOVEL*BLANK    WN0618 20        Express Mail Nu
     C                     Z-ADD*ZERO     WN0619  70       Express Mail Da
     C                     MOVEL*BLANK    WN0620  1        Load Shag Flag
     C                     MOVEL*BLANK    WN0621  1        Load Wash Flag
     C                     Z-ADD*ZERO     WN0622  70       Product Complet
     C                     Z-ADD*ZERO     WN0623  60       Product Complet
     C                     Z-ADD*ZERO     WN0624  50       Pallets Loaded
     C                     Z-ADD*ZERO     WN0625  92       Avg Pallet Tare
     C                     Z-ADD*ZERO     WN0626  92       Tot Pallet Tare
     C                     MOVEL*BLANK    WN0627  1        Load Confirmed
     C                     MOVEL*BLANK    WN0628 25        Load Confirmed
     C                     Z-ADD*ZERO     WN0629  70       Load Confirmati
     C                     Z-ADD*ZERO     WN0630  60       Load Door 1
     C                     Z-ADD*ZERO     WN0631  60       Load Door 2
     C                     MOVEL*BLANK    WN0632  1        Partial Load
     C                     MOVEL*BLANK    WN0633  1        Load Confirmati
     C                     MOVEL*BLANK    WN0634  1        Export Load USD
     C                     MOVEL*BLANK    WN0635  1        Late Delivery E
     C                     Z-ADD*ZERO     WN0636 112       Load Actual Fre
     C                     MOVEL*BLANK    WN0637 15        Hide on WW Load
     C                     MOVEL*BLANK    WN0638 15        Late Billing Em
     C                     MOVEL*BLANK    WN0639 25        Shipping Temp C
     C                     MOVEL*BLANK    WN0640 25        LH Held Over Rs
     C                     MOVEL*BLANK    WN0641  1        Multi Company L
     C                     MOVEL*BLANK    WN0642  1        Fax Sent to SSI
     C                     MOVEL*BLANK    WN0643  1        Schedule Pos Lo
     C                     MOVEL*BLANK    WN0644  1        LH Power Only L
     C                     MOVEL*BLANK    WN0645  1        MG Created Load
     C                     MOVEL*BLANK    WN0646  1        LH Unused Sts 5
     C                     MOVEL*BLANK    WN0647  2        Load U/M
     C                     MOVEL*BLANK    WN0648  2        TPM Shipment St
     C                     MOVEL*BLANK    WN0649  2        LH Unused Sts 8
     C                     MOVEL*BLANK    WN0650  3        LH On-Time Reas
     C                     MOVEL*BLANK    WN0651  3        LH Held Over Re
     C                     Z-ADD*ZERO     WN0652  70       LH Carrier Paid
     C                     Z-ADD*ZERO     WN0653  60       LH Carrier Paid
     C                     Z-ADD*ZERO     WN0654  70       LH Last Combo P
     C                     Z-ADD*ZERO     WN0655  60       LH Last Combo P
     C                     Z-ADD*ZERO     WN0656  70       LPT Load Plan S
     C                     Z-ADD*ZERO     WN0657  60       LPT Load Plan S
     C                     Z-ADD*ZERO     WN0658  70       TPM Planned Shi
     C                     Z-ADD*ZERO     WN0659  60       LH Unused Time
     C                     Z-ADD*ZERO     WN0660  70       LH Unused Date
     C                     Z-ADD*ZERO     WN0661  60       LH Unused Time
     C                     Z-ADD*ZERO     WN0662  70       LH Unused Date
     C                     Z-ADD*ZERO     WN0663  60       LH Unused Time
     C                     MOVEL*BLANK    WN0664  1        EDI Status 1
     C                     MOVEL*BLANK    WN0665  1        EDI Status 2
     C                     MOVEL*BLANK    WN0666  1        EDI Status 3
     C                     Z-ADD*ZERO     WN0667  60       Job Time
     C                     MOVEL*BLANK    WN0668 10        User Id
     C                     MOVEL*BLANK    WN0669 10        Job Name
     C                     Z-ADD*ZERO     WN0670  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YCRDC   1
      *
      * Move key fields to @FJCPBO
     C                     Z-ADDFJRMNB    WSRMNB           Load ID
      *
     C           KLCHNM    KLIST
     C                     KFLD           WSRMNB           Load ID
     C           KLCHNM    CHAIN@FJCPBO              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'OMFJCPL1'MDACP
     C                     MOVEL'@FJCPBO' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL003.
     C                     MOVEL'LBL003'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO NMEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO NMEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QOMFJ1    YCRDCS
      * Move non-key fields to @FJCPBO
     C                     Z-ADDWN0526    WSTLMI           Total Load Mile
     C                     MOVELWN0527    WSVPCD    P      Ship From Wareh
     C                     MOVELWN0528    WSAJCD    P      Warehouse Code
     C                     Z-ADDWN0529    WSK2DT           Override Total
      *
      * Set PGM.*Record Data Changed flag
     C           QOMFJ1    IFNE YCRDCS
     C           YCRDC     ANDNE'N'
     C                     MOVE 'Y'       YCRDC
     C                     ENDIF
      * USER: Processing before Data update
      * Set Date/Time Stamp.PgmIF
     C                     Z-ADD##JTM     WSAATM           Job Time
     C                     MOVEL##USR     WSAYNA           User Id
     C                     MOVEL##PGM     WSA0NA           Job Name
     C                     Z-ADD##JDT     WSAXDT           Job Date
      * Set PGM.*Record Data Changed flag
     C           QOMFJ1    IFNE YCRDCS
     C           YCRDC     ANDNE'N'
     C                     MOVE 'Y'       YCRDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YCRDC     IFEQ 'Y'
     C                     UPDAT@FJCPBO                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKOMFJCPL1               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         NMEXIT    ENDSR
      /EJECT
     CSR         NNRVGN    BEGSR
      *================================================================
      * RTV 1st Carr Apt Dt/Tm RT - Load Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN FLRMNB    WQNN02           Load ID
      * Define keylist
     C           KPSNN     KLIST
     C                     KFLD           WQNN02           Load ID
     C                     KFLD           FLRVNB           Stop/Drop
      * Define keylist
     C           KRSNN     KLIST
     C                     KFLD           WQNN02           Load ID
      * Setup key
     C                     Z-ADD#2RMNB    WQNN02           Load ID
     C                     Z-ADD0         FLRVNB           Stop/Drop
      * Establish starting position
     C           KPSNN     SETLL@FLCPEB                    *
     C           KRSNN     READE@FLCPEB                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1192' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO NNEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     Z-ADDFLN7DT    WUN7DT           LD Carrier Appt
     C                     Z-ADDFLB3TM    WN0505           LD Carrier Appt
     C                     GOTO NNEXIT                     *QUIT
     C           KRSNN     READE@FLCPEB                  90*
     C                     ENDDO
      *================================================================
     CSR         NNEXIT    ENDSR
      /EJECT
     CSR         NORVGN    BEGSR
      *================================================================
      * Rtv 1st Ord Delv Dt/Tm RT - Load Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN FLRMNB    WQNO02           Load ID
      * Define keylist
     C           KPSNO     KLIST
     C                     KFLD           WQNO02           Load ID
     C                     KFLD           FLRVNB           Stop/Drop
      * Define keylist
     C           KRSNO     KLIST
     C                     KFLD           WQNO02           Load ID
      * Setup key
     C                     Z-ADD#2RMNB    WQNO02           Load ID
     C                     Z-ADD0         FLRVNB           Stop/Drop
      * Establish starting position
     C           KPSNO     SETLL@FLCPEB                    *
     C           KRSNO     READE@FLCPEB                  90*
      * Data record not found
     C   90                MOVEL'USR1192' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * Rtv Delivery Date/Time RT - Order Header TRG  * 
     C                     EXSR NPRVGN
     C                     GOTO NOEXIT                     *QUIT
     C           KRSNO     READE@FLCPEB                  90*
     C                     ENDDO
      *================================================================
     CSR         NOEXIT    ENDSR
      /EJECT
     CSR         NPRVGN    BEGSR
      *================================================================
      * Rtv Delivery Date/Time RT - Order Header TRG  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSNP     KLIST
     C                     KFLD           BEAIC3           Company Number
     C                     KFLD           BEC4NB           Order Number
      * Setup key
     C                     Z-ADDFLAIC3    BEAIC3           Company Number
     C                     Z-ADDFLC4NB    BEC4NB           Order Number
      * Establish starting position
     C           KRSNP     CHAIN@BECPFK              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0176' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUBRTX           Ship To Name
     C                     MOVEL*BLANK    WUHNNA           Ship To City
     C                     Z-ADD*ZERO     WN0504           Requested Deliv
     C                     Z-ADD*ZERO     WN0524           Requested Deliv
     C                     GOTO NPEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBEBRTX    WUBRTX           Ship To Name
     C                     MOVELBEHNNA    WUHNNA           Ship To City
     C                     Z-ADDBEEIDT    WN0504           Requested Deliv
     C                     Z-ADDBEAFTM    WN0524           Requested Deliv
     C                     ENDIF
      *================================================================
     CSR         NPEXIT    ENDSR
      /EJECT
     CSR         NQRVGN    BEGSR
      *================================================================
      * RTV Shipping Method    RT - Load Header  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSNQ     KLIST
     C                     KFLD           FJRMNB           Load ID
      * Setup key
     C                     Z-ADD#2RMNB    FJRMNB           Load ID
      * Establish starting position
     C           KRSNQ     CHAIN@FJCPBN              90    *
      * Data record not found
     C   90                MOVEL'USR1188' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELFJQ2CD    YL0019           Shipping Method
     C                     ENDIF
      *================================================================
     CSR         NQEXIT    ENDSR
      /EJECT
     CSR         NRRVGN    BEGSR
      *================================================================
      * RTV 1st Stop Mileage   RT - Load Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN FLRMNB    WQNR02           Load ID
      * Define keylist
     C           KPSNR     KLIST
     C                     KFLD           WQNR02           Load ID
     C                     KFLD           FLRVNB           Stop/Drop
     C                     KFLD           FLC4NB           Order Number
      * Define keylist
     C           KRSNR     KLIST
     C                     KFLD           WQNR02           Load ID
      * Setup key
     C                     Z-ADDWL0385    WQNR02           Load ID
     C                     Z-ADDWL0386    FLRVNB           Stop/Drop
     C                     Z-ADDWL0387    FLC4NB           Order Number
      * Establish starting position
     C           KPSNR     SETLL@FLCPEB                    *
     C           KRSNR     READE@FLCPEB                  90*
      * Data record not found
     C   90                MOVEL'USR1192' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDFLRWNB    WL0388           Miles to next s
     C                     GOTO NREXIT                     *QUIT
     C           KRSNR     READE@FLCPEB                  90*
     C                     ENDDO
      *================================================================
     CSR         NREXIT    ENDSR
      /EJECT
     CSR         NSRVGN    BEGSR
      *================================================================
      * RTV Legal Run Miles DscRT - Legal Run Mileage Hours  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KPSNS     KLIST
     C                     KFLD           LGMILE           Miles to First
      * Setup key
     C                     Z-ADDWN0672    LGMILE           Miles to First
      * Establish starting position
     C           KPSNS     SETLL@LGCPNM                    *
     C                     READ @LGCPNM                  90*
      * Data record not found
     C   90                MOVEL'USR2462' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDLGHRRQ    YL0020           Hours Required
     C                     GOTO NSEXIT                     *QUIT
     C                     READ @LGCPNM                  90*
     C                     ENDDO
      *================================================================
     CSR         NSEXIT    ENDSR
      /EJECT
     CSR         NTRVGN    BEGSR
      *================================================================
      * RTV Total Ld Mi/Sts    RT - Load Header  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSNT     KLIST
     C                     KFLD           FJRMNB           Load ID
      * Setup key
     C                     Z-ADD#2RMNB    FJRMNB           Load ID
      * Establish starting position
     C           KRSNT     CHAIN@FJCPBN              90    *
      * Data record not found
     C   90                MOVEL'USR1188' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELFJPKST    WUG0TX           Load Status
     C                     Z-ADDFJTLMI    WUTLMI           Total Load Mile
     C                     Z-ADDFJK2DT    WUK2DT           Override Total
     C                     ENDIF
      *================================================================
     CSR         NTEXIT    ENDSR
      /EJECT
     CSR         NURVGN    BEGSR
      *================================================================
      * RTV Last Stop Consign  RT - Load Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WTRMNB    WQNU02           Load ID
      * Define keylist
     C           KRSNU     KLIST
     C                     KFLD           WQNU02           Load ID
      * Setup key
     C                     Z-ADD#2RMNB    WQNU02           Load ID
      * Establish starting position
     C           KRSNU     SETLL@FLCPE8                    *
     C           KRSNU     READE@FLCPE8                  90*
      * Data record not found
     C   90                MOVEL'USR1192' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * RTV for B.O.L. Print   RT - PD Order Header  * 
     C                     EXSR NVRVGN
     C                     GOTO NUEXIT                     *QUIT
     C           KRSNU     READE@FLCPE8                  90*
     C                     ENDDO
      *================================================================
     CSR         NUEXIT    ENDSR
      /EJECT
     CSR         NVRVGN    BEGSR
      *================================================================
      * RTV for B.O.L. Print   RT - PD Order Header  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSNV     KLIST
     C                     KFLD           BEAIC3           Company Number
     C                     KFLD           BEC4NB           Order Number
      * Setup key
     C                     Z-ADDWTAIC3    BEAIC3           Company Number
     C                     Z-ADDWTC4NB    BEC4NB           Order Number
      * Establish starting position
     C           KRSNV     CHAIN@BECPFK              90    *
      * Data record not found
     C   90                MOVEL'USR0176' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDBEBKC7    WUBKC7           Ship To Custome
     C                     MOVELBEBRTX    WUBRTX           Ship To Name
     C                     MOVELBEHMNA    WUHMNA           Ship To Address
     C                     MOVELBEHONA    WUHONA           Ship To Address
     C                     MOVELBEHPNA    WUHPNA           Ship To Address
     C                     MOVELBEHNNA    WUHNNA           Ship To City
     C                     MOVELBEDBCD    WN0499           Ship To State C
     C                     MOVELBECKTX    WUCKTX           Ship To Zip/Pos
     C                     MOVELBEBCNA    WUG0TX           Customer Purcha
     C                     MOVELBEB6NA    WUG0TX           Special Instruc
     C                     MOVELBEBYNA    WUG0TX           Special Instruc
     C                     Z-ADDBEEIDT    WUNFNN           Requested Deliv
     C                     Z-ADDBEAFTM    WUNFNN           Requested Deliv
     C                     ENDIF
      *================================================================
     CSR         NVEXIT    ENDSR
      /EJECT
     CSR         NWRVGN    BEGSR
      *================================================================
      * RTV Ship To City/St-Ld RT - PD Order Header  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * 05/14/04 SLM PKTR01 Multi-Company - Funct chg remove Company RST
      * Declare restrictor key work fields
     C           *LIKE     DEFN WMRMNB    WQNW02           Load ID
      * Define keylist
     C           KRSNW     KLIST
     C                     KFLD           WQNW02           Load ID
      * Setup key
     C                     Z-ADD#2RMNB    WQNW02           Load ID
      * Establish starting position
     C           KRSNW     SETLL@BFCPD9                    *
     C           KRSNW     READE@BFCPD9                  90*
      * Data record not found
     C   90                MOVEL'USR0176' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWMHNNA    WN0509           Ship To City
     C                     MOVELWMDBCD    WN0510           Ship To State C
     C                     GOTO NWEXIT                     *QUIT
     C           KRSNW     READE@BFCPD9                  90*
     C                     ENDDO
      *================================================================
     CSR         NWEXIT    ENDSR
      /EJECT
     CSR         NXRVGN    BEGSR
      *================================================================
      * RTV Destination Amount RT - Carrier Destination Rate  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSNX     KLIST
     C                     KFLD           LEBZNA           Carrier Code
     C                     KFLD           LEAJCD           Warehouse Code
     C                     KFLD           LEXECD           Destination Cit
     C                     KFLD           LEBGCD           State Code
      * Setup key
     C                     MOVELWN0500    LEBZNA           Carrier Code
     C                     MOVELWN0498    LEAJCD           Warehouse Code
     C                     MOVELWN0509    LEXECD           Destination Cit
     C                     MOVELWN0510    LEBGCD           State Code
      * Establish starting position
     C           KRSNX     CHAIN@LECPM7              90    *
      * Data record not found
     C   90                MOVEL'USR2455' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * only pass out FLAT amt.  (it could now be a ML rate too)  01/03/0
      * CASE: DB1.CDR Unit of Measure is Flat
     C           LEAVTX    IFEQ 'FL'                       *IF
      * PAR = DB1 By name
     C                     Z-ADDLENMVA    WN0495           Flat Rate
     C                     END                             *FI
     C                     ENDIF
      *================================================================
     CSR         NXEXIT    ENDSR
      /EJECT
     CSR         NYCHRC    BEGSR
      *================================================================
      * CHG Lock Load Update   CH - Load Header  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0680  30       Company Number
     C                     MOVEL*BLANK    WN0681  1        LTL Flag
     C                     Z-ADD*ZERO     WN0682  52       Reefer Temperat
     C                     MOVEL*BLANK    WN0683 15        Seal 1
     C                     MOVEL*BLANK    WN0684 15        Seal 2
     C                     MOVEL*BLANK    WN0685 15        Seal 3
     C                     MOVEL*BLANK    WN0686 15        Seal 1 Unused
     C                     MOVEL*BLANK    WN0687 15        Seal 2 Unused
     C                     Z-ADD*ZERO     WN0688  70       Total Load Orde
     C                     MOVEL*BLANK    WN0689  1        Allocate Pounds
     C                     Z-ADD*ZERO     WN0690  50       Total Stops
     C                     MOVEL*BLANK    WN0691 20        Trailer Id
     C                     MOVEL*BLANK    WN0692  3        Transloader Car
     C                     Z-ADD*ZERO     WN0693  40       BOL Time
     C                     MOVEL*BLANK    WN0694  3        Carrier Code
     C                     MOVEL*BLANK    WN0695  7        Truck Size
     C                     Z-ADD*ZERO     WN0696  70       Ld Hdr/Ld Dtl U
     C                     Z-ADD*ZERO     WN0697 112       Rated Freight
     C                     MOVEL*BLANK    WN0698  1        Ship Status
     C                     MOVEL*BLANK    WN0699  1        Load Type
     C                     Z-ADD*ZERO     WN0700  50       Number Pallets
     C                     Z-ADD*ZERO     WN0701  50       Number Pallets
     C                     Z-ADD*ZERO     WN0702 112       Load Carrier Pa
     C                     Z-ADD*ZERO     WN0703  60       Estimated Arriv
     C                     Z-ADD*ZERO     WN0704  70       Actual Arrival
     C                     Z-ADD*ZERO     WN0705  40       Actual Arrival
     C                     Z-ADD*ZERO     WN0706 112       Trailer IN Weig
     C                     Z-ADD*ZERO     WN0707 112       Trailer OUT Wei
     C                     Z-ADD*ZERO     WN0708  70       Actual Departur
     C                     Z-ADD*ZERO     WN0709  40       Departure Time
     C                     Z-ADD*ZERO     WN0710  50       Schedule Sequen
     C                     Z-ADD*ZERO     WN0711  52       Product Tempera
     C                     Z-ADD*ZERO     WN0712  50       Number Pallets
     C                     MOVEL*BLANK    WN0713 12        Car/Veh. Initia
     C                     Z-ADD*ZERO     WN0714  70       Total Load Mile
     C                     MOVEL*BLANK    WN0715 12        Recorder ID
     C                     MOVEL*BLANK    WN0716  2        Shipping Method
     C                     Z-ADD*ZERO     WN0717  70       Gross Weight
     C                     MOVEL*BLANK    WN0718  3        Carrier Broker
     C                     MOVEL*BLANK    WN0719  1        Export Status
     C                     Z-ADD*ZERO     WN0720  70       Actual Ship Dat
     C                     MOVEL*BLANK    WN0721  1        On Time - (Y/N)
     C                     Z-ADD*ZERO     WN0722  70       Truck Ready Dat
     C                     Z-ADD*ZERO     WN0723  60       Truck Ready Tim
     C                     Z-ADD*ZERO     WN0724  70       Spotted Date
     C                     Z-ADD*ZERO     WN0725  60       Spotted Time
     C                     Z-ADD*ZERO     WN0726  70       Load Finished D
     C                     Z-ADD*ZERO     WN0727  60       Load Finished T
     C                     Z-ADD*ZERO     WN0728  70       BOL Complete Da
     C                     Z-ADD*ZERO     WN0729  60       BOL Complete Ti
     C                     Z-ADD*ZERO     WN0730  70       BOL Received Da
     C                     Z-ADD*ZERO     WN0731  60       BOL Received Ti
     C                     Z-ADD*ZERO     WN0732  70       Truck Departure
     C                     Z-ADD*ZERO     WN0733  60       Truck Departure
     C                     Z-ADD*ZERO     WN0734  70       Adjusted Depart
     C                     Z-ADD*ZERO     WN0735  60       Adjusted Depart
     C                     MOVEL*BLANK    WN0736  3        Shipping Line
     C                     MOVEL*BLANK    WN0737 20        Port Delv Termi
     C                     MOVEL*BLANK    WN0738 30        Vessel Name
     C                     Z-ADD*ZERO     WN0739  50       Voyage
     C                     Z-ADD*ZERO     WN0740  70       Sail Date
     C                     MOVEL*BLANK    WN0741 12        Booking Number
     C                     MOVEL*BLANK    WN0742 20        Discharge Port
     C                     Z-ADD*ZERO     WN0743  70       Arrival Date
     C                     MOVEL*BLANK    WN0744 12        Container Numbe
     C                     Z-ADD*ZERO     WN0745  70       Date In
     C                     Z-ADD*ZERO     WN0746  60       Time In
     C                     Z-ADD*ZERO     WN0747  70       Date Out
     C                     Z-ADD*ZERO     WN0748  60       Time Out
     C                     Z-ADD*ZERO     WN0749 112       Load Total Frei
     C                     Z-ADD*ZERO     WN0750  70       Scheduled Deliv
     C                     Z-ADD*ZERO     WN0751  60       Scheduled Deliv
     C                     MOVEL*BLANK    WN0752  1        LH Unused Sts
     C                     MOVEL*BLANK    WN0753  1        LH Carrier Paym
     C                     Z-ADD*ZERO     WN0754  70       Bring Back Mile
     C                     Z-ADD*ZERO     WN0755  70       Requested Deliv
     C                     MOVEL*BLANK    WN0756  1        Load Acceptance
     C                     MOVEL*BLANK    WN0757  3        Warehouse Code
     C                     Z-ADD*ZERO     WN0758  70       On Yard Date
     C                     Z-ADD*ZERO     WN0759  60       On Yard Time
     C                     MOVEL*BLANK    WN0760  1        Load Held Over
     C                     MOVEL*BLANK    WN0761  1        Load Held Over
     C                     MOVEL*BLANK    WN0762 15        Load Held Over
     C                     MOVEL*BLANK    WN0763 25        Ocean BOL Numbe
     C                     MOVEL*BLANK    WN0764 20        Express Mail Nu
     C                     Z-ADD*ZERO     WN0765  70       Express Mail Da
     C                     MOVEL*BLANK    WN0766  1        Load Shag Flag
     C                     MOVEL*BLANK    WN0767  1        Load Wash Flag
     C                     Z-ADD*ZERO     WN0768  70       Product Complet
     C                     Z-ADD*ZERO     WN0769  60       Product Complet
     C                     Z-ADD*ZERO     WN0770  50       Pallets Loaded
     C                     Z-ADD*ZERO     WN0771  92       Avg Pallet Tare
     C                     Z-ADD*ZERO     WN0772  92       Tot Pallet Tare
     C                     MOVEL*BLANK    WN0773  1        Load Confirmed
     C                     MOVEL*BLANK    WN0774 25        Load Confirmed
     C                     Z-ADD*ZERO     WN0775  70       Load Confirmati
     C                     Z-ADD*ZERO     WN0776  60       Load Door 1
     C                     Z-ADD*ZERO     WN0777  70       Override Total
     C                     Z-ADD*ZERO     WN0778  60       Load Door 2
     C                     MOVEL*BLANK    WN0779  1        Partial Load
     C                     MOVEL*BLANK    WN0780  1        Load Confirmati
     C                     MOVEL*BLANK    WN0781  1        Export Load USD
     C                     MOVEL*BLANK    WN0782  1        Late Delivery E
     C                     Z-ADD*ZERO     WN0783 112       Load Actual Fre
     C                     MOVEL*BLANK    WN0784 15        Hide on WW Load
     C                     MOVEL*BLANK    WN0785 15        Late Billing Em
     C                     MOVEL*BLANK    WN0786 25        Shipping Temp C
     C                     MOVEL*BLANK    WN0787 25        LH Held Over Rs
     C                     MOVEL*BLANK    WN0788  1        Multi Company L
     C                     MOVEL*BLANK    WN0789  1        Fax Sent to SSI
     C                     MOVEL*BLANK    WN0790  1        Schedule Pos Lo
     C                     MOVEL*BLANK    WN0791  1        LH Power Only L
     C                     MOVEL*BLANK    WN0792  1        MG Created Load
     C                     MOVEL*BLANK    WN0793  1        LH Unused Sts 5
     C                     MOVEL*BLANK    WN0794  2        TPM Shipment St
     C                     MOVEL*BLANK    WN0795  2        LH Unused Sts 8
     C                     MOVEL*BLANK    WN0796  3        LH On-Time Reas
     C                     MOVEL*BLANK    WN0797  3        LH Held Over Re
     C                     Z-ADD*ZERO     WN0798  70       LH Carrier Paid
     C                     Z-ADD*ZERO     WN0799  60       LH Carrier Paid
     C                     Z-ADD*ZERO     WN0800  70       LH Last Combo P
     C                     Z-ADD*ZERO     WN0801  60       LH Last Combo P
     C                     Z-ADD*ZERO     WN0802  70       LPT Load Plan S
     C                     Z-ADD*ZERO     WN0803  60       LPT Load Plan S
     C                     Z-ADD*ZERO     WN0804  70       TPM Planned Shi
     C                     Z-ADD*ZERO     WN0805  60       LH Unused Time
     C                     Z-ADD*ZERO     WN0806  70       LH Unused Date
     C                     Z-ADD*ZERO     WN0807  60       LH Unused Time
     C                     Z-ADD*ZERO     WN0808  70       LH Unused Date
     C                     Z-ADD*ZERO     WN0809  60       LH Unused Time
     C                     MOVEL*BLANK    WN0810  1        EDI Status 1
     C                     MOVEL*BLANK    WN0811  1        EDI Status 2
     C                     MOVEL*BLANK    WN0812  1        EDI Status 3
     C                     Z-ADD*ZERO     WN0813  60       Job Time
     C                     MOVEL*BLANK    WN0814 10        User Id
     C                     MOVEL*BLANK    WN0815 10        Job Name
     C                     Z-ADD*ZERO     WN0816  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YDRDC   1
      *
      * Move key fields to @FJCPBO
     C                     Z-ADD#2RMNB    WSRMNB           Load ID
      *
     C           KLCHNY    KLIST
     C                     KFLD           WSRMNB           Load ID
     C           KLCHNY    CHAIN@FJCPBO              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'OMFJCPL1'MDACP
     C                     MOVEL'@FJCPBO' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL004.
     C                     MOVEL'LBL004'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO NYEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO NYEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QOMFJ1    YDRDCS
      * Move non-key fields to @FJCPBO
     C                     Z-ADDWN0494    WSAODT           Scheduled Ship
     C                     MOVEL'L'       WSPKST    P      Load Status
     C                     Z-ADDWN0495    WSFLAM           Flat Amount
     C                     MOVELWN0498    WSVPCD    P      Ship From Wareh
     C                     MOVELWN0499    WSDBCD    P      Ship To State C
     C                     Z-ADDWN0504    WSKZDT           Deadline Depart
     C                     Z-ADDWN0505    WSAXTM           Deadline Depart
     C                     MOVELWN0507    WSR0SX    P      Load U/M
      *
      * Set PGM.*Record Data Changed flag
     C           QOMFJ1    IFNE YDRDCS
     C           YDRDC     ANDNE'N'
     C                     MOVE 'Y'       YDRDC
     C                     ENDIF
      * USER: Processing before Data update
     C                     Z-ADD##JTM     WSAATM           Job Time
     C                     MOVEL##USR     WSAYNA           User Id
     C                     MOVEL##JOB     WSA0NA           Job Name
     C                     Z-ADD##JDT     WSAXDT           Job Date
      * Set PGM.*Record Data Changed flag
     C           QOMFJ1    IFNE YDRDCS
     C           YDRDC     ANDNE'N'
     C                     MOVE 'Y'       YDRDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YDRDC     IFEQ 'Y'
     C                     UPDAT@FJCPBO                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKOMFJCPL1               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         NYEXIT    ENDSR
      /EJECT
     CSR         NZRVGN    BEGSR
      *================================================================
      * RTV All Whses on Load  RT - Load Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     MOVEL*BLANK    WN0511           USR Warehouse C
     C                     MOVEL*BLANK    WN0512           USR CDE Parm 1
     C                     MOVEL*BLANK    WN0513           USR CDE Parm 2
     C                     MOVEL*BLANK    WN0514           USR CDE Parm 3
     C                     MOVEL*BLANK    WN0515           USR CDE Parm 4
     C                     MOVEL*BLANK    WN0516           USR CDE Parm 5
     C                     MOVEL*BLANK    WN0517           USR CDE Parm 6
     C                     MOVEL*BLANK    WN0518           USR CDE Parm 7
     C                     MOVEL*BLANK    WN0519           USR CDE Parm 8
     C                     MOVEL*BLANK    WN0520           USR CDE Parm 9
      * Declare restrictor key work fields
     C           *LIKE     DEFN WVRMNB    WQNZ02           Load ID
      * Define keylist
     C           KRSNZ     KLIST
     C                     KFLD           WQNZ02           Load ID
      * Setup key
     C                     Z-ADD#2RMNB    WQNZ02           Load ID
      * Establish starting position
     C           KRSNZ     SETLL@FLCPKF                    *
     C           KRSNZ     READE@FLCPKF                  90*
      * Data record not found
     C   90                MOVEL'USR1192' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * RTV All Whses on Order RT - Order Detail  * 
     C                     EXSR OARVGN
     C           KRSNZ     READE@FLCPKF                  90*
     C                     ENDDO
      *================================================================
     CSR         NZEXIT    ENDSR
      /EJECT
     CSR         OARVGN    BEGSR
      *================================================================
      * RTV All Whses on Order RT - Order Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WRAIC3    WQOA01           Company Number
     C           *LIKE     DEFN WRC4NB    WQOA02           Order Number
      * Define keylist
     C           KPSOA     KLIST
     C                     KFLD           WQOA01           Company Number
     C                     KFLD           WQOA02           Order Number
     C                     KFLD           WRDPNB           Order Sequence
     C                     KFLD           WRUENB           Order Secondary
      * Define keylist
     C           KRSOA     KLIST
     C                     KFLD           WQOA01           Company Number
     C                     KFLD           WQOA02           Order Number
      * Setup key
     C                     Z-ADDWVAIC3    WQOA01           Company Number
     C                     Z-ADDWVC4NB    WQOA02           Order Number
     C                     Z-ADD0         WRDPNB           Order Sequence
     C                     Z-ADD0         WRUENB           Order Secondary
      * Establish starting position
     C           KPSOA     SETLL@BGWKAE                    *
     C           KRSOA     READE@BGWKAE                  90*
      * Data record not found
     C   90                MOVEL'USR1309' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Warehouse Code EQ PAR.USR Warehouse Code
     C           WRAJCD    IFEQ WN0511                     *IF
     C                     ELSE
      * CASE: DB1.Warehouse Code EQ PAR.USR CDE Parm 1
     C           WRAJCD    IFEQ WN0512                     *IF
     C                     ELSE
      * CASE: DB1.Warehouse Code EQ PAR.USR CDE Parm 2
     C           WRAJCD    IFEQ WN0513                     *IF
     C                     ELSE
      * CASE: DB1.Warehouse Code EQ PAR.USR CDE Parm 3
     C           WRAJCD    IFEQ WN0514                     *IF
     C                     ELSE
      * CASE: DB1.Warehouse Code EQ PAR.USR CDE Parm 4
     C           WRAJCD    IFEQ WN0515                     *IF
     C                     ELSE
      * CASE: DB1.Warehouse Code EQ PAR.USR CDE Parm 5
     C           WRAJCD    IFEQ WN0516                     *IF
     C                     ELSE
      * CASE: DB1.Warehouse Code EQ PAR.USR CDE Parm 6
     C           WRAJCD    IFEQ WN0517                     *IF
     C                     ELSE
      * CASE: DB1.Warehouse Code EQ PAR.USR CDE Parm 7
     C           WRAJCD    IFEQ WN0518                     *IF
     C                     ELSE
      * CASE: DB1.Warehouse Code EQ PAR.USR CDE Parm 8
     C           WRAJCD    IFEQ WN0519                     *IF
     C                     ELSE
      * CASE: DB1.Warehouse Code EQ PAR.USR CDE Parm 9
     C           WRAJCD    IFEQ WN0520                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * current warehouse not already being used
      * Fill in first blank warehouse
      * CASE: PAR.USR Warehouse Code EQ WRK.BLANK
     C           WN0511    IFEQ WUGSTX                     *IF
     C                     MOVELWRAJCD    WN0511           USR Warehouse C
     C                     ELSE
      * CASE: PAR.USR CDE Parm 1 EQ WRK.BLANK
     C           WN0512    IFEQ WUGSTX                     *IF
     C                     MOVELWRAJCD    WN0512           USR CDE Parm 1
     C                     ELSE
      * CASE: PAR.USR CDE Parm 2 EQ WRK.BLANK
     C           WN0513    IFEQ WUGSTX                     *IF
     C                     MOVELWRAJCD    WN0513           USR CDE Parm 2
     C                     ELSE
      * CASE: PAR.USR CDE Parm 3 EQ WRK.BLANK
     C           WN0514    IFEQ WUGSTX                     *IF
     C                     MOVELWRAJCD    WN0514           USR CDE Parm 3
     C                     ELSE
      * CASE: PAR.USR CDE Parm 4 EQ WRK.BLANK
     C           WN0515    IFEQ WUGSTX                     *IF
     C                     MOVELWRAJCD    WN0515           USR CDE Parm 4
     C                     ELSE
      * CASE: PAR.USR CDE Parm 5 EQ WRK.BLANK
     C           WN0516    IFEQ WUGSTX                     *IF
     C                     MOVELWRAJCD    WN0516           USR CDE Parm 5
     C                     ELSE
      * CASE: PAR.USR CDE Parm 6 EQ WRK.BLANK
     C           WN0517    IFEQ WUGSTX                     *IF
     C                     MOVELWRAJCD    WN0517           USR CDE Parm 6
     C                     ELSE
      * CASE: PAR.USR CDE Parm 7 EQ WRK.BLANK
     C           WN0518    IFEQ WUGSTX                     *IF
     C                     MOVELWRAJCD    WN0518           USR CDE Parm 7
     C                     ELSE
      * CASE: PAR.USR CDE Parm 8 EQ WRK.BLANK
     C           WN0519    IFEQ WUGSTX                     *IF
     C                     MOVELWRAJCD    WN0519           USR CDE Parm 8
     C                     ELSE
      * CASE: PAR.USR CDE Parm 9 EQ WRK.BLANK
     C           WN0520    IFEQ WUGSTX                     *IF
     C                     MOVELWRAJCD    WN0520           USR CDE Parm 9
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSOA     READE@BGWKAE                  90*
     C                     ENDDO
      *================================================================
     CSR         OAEXIT    ENDSR
      /EJECT
     CSR         OBRVGN    BEGSR
      *================================================================
      * zzV for Accusort Load  RT - Load Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WWRMNB    WQOB01           Load ID
      * Define keylist
     C           KRSOB     KLIST
     C                     KFLD           WQOB01           Load ID
      * Setup key
     C                     Z-ADD#2RMNB    WQOB01           Load ID
      * Establish starting position
     C           KRSOB     SETLL@FLCPBW                    *
     C           KRSOB     READE@FLCPBW                  90*
      * Data record not found
     C   90                MOVEL'USR1192' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * RTV Trans Control      RT - PD Order Header      TRG  * 
     C                     EXSR OCRVGN
      * CASE: WRK.Trans Contol AS400/Plant is Plant
     C           WUXUST    IFEQ 'P'                        *IF
     C                     MOVELWUXUST    WN0817           Trans Contol AS
     C                     GOTO OBEXIT                     *QUIT
     C                     END                             *FI
     C           KRSOB     READE@FLCPBW                  90*
     C                     ENDDO
      *================================================================
     CSR         OBEXIT    ENDSR
      /EJECT
     CSR         OCRVGN    BEGSR
      *================================================================
      * RTV Trans Control      RT - PD Order Header      TRG  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSOC     KLIST
     C                     KFLD           BEAIC3           Company Number
     C                     KFLD           BEC4NB           Order Number
      * Setup key
     C                     Z-ADDWWAIC3    BEAIC3           Company Number
     C                     Z-ADDWWC4NB    BEC4NB           Order Number
      * Establish starting position
     C           KRSOC     CHAIN@BECPFK              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0176' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUXUST           Trans Contol AS
     C                     GOTO OCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * RTV Trans Control      RT - PD Order Detail  * 
     C                     EXSR ODRVGN
      * CASE: WRK.Trans Contol AS400/Plant is Plant
     C           WUXUST    IFEQ 'P'                        *IF
     C                     MOVELWUXUST    WUXUST           Trans Contol AS
     C                     GOTO OCEXIT                     *QUIT
     C                     END                             *FI
     C                     ENDIF
      *================================================================
     CSR         OCEXIT    ENDSR
      /EJECT
     CSR         ODRVGN    BEGSR
      *================================================================
      * RTV Trans Control      RT - PD Order Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN OMAIC3    WQOD01           Company Number
     C           *LIKE     DEFN OMC4NB    WQOD02           Order Number
      * Define keylist
     C           KRSOD     KLIST
     C                     KFLD           WQOD01           Company Number
     C                     KFLD           WQOD02           Order Number
      * Setup key
     C                     Z-ADDBEAIC3    WQOD01           Company Number
     C                     Z-ADDBEC4NB    WQOD02           Order Number
      * Establish starting position
     C           KRSOD     SETLL@BGWKL1                    *
     C           KRSOD     READE@BGWKL1                  90*
      * Data record not found
     C   90                MOVEL'USR1309' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Detail Line Status is Not cancelled
     C           OMGMST    IFEQ 'L'                        *IF
     C           OMGMST    OREQ 'A'
     C           OMGMST    OREQ 'C'
     C           OMGMST    OREQ 'R'
     C           OMGMST    OREQ 'E'
     C           OMGMST    OREQ 'H'
     C           OMGMST    OREQ 'I'
      * Rtv Desc/Trans Control RT - Warehouse  * 
     C                     EXSR OERVGN
     C                     GOTO ODEXIT                     *QUIT
     C                     END                             *FI
     C           KRSOD     READE@BGWKL1                  90*
     C                     ENDDO
      *================================================================
     CSR         ODEXIT    ENDSR
      /EJECT
     CSR         OERVGN    BEGSR
      *================================================================
      * Rtv Desc/Trans Control RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSOE     KLIST
     C                     KFLD           ADAJCD           Warehouse Code
      * Setup key
     C                     MOVELOMAJCD    ADAJCD           Warehouse Code
      * Establish starting position
     C           KRSOE     CHAIN@ADREAO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUF8NA           Warehouse Descr
     C                     MOVEL*BLANK    WUXUST           Trans Contol AS
     C                     GOTO OEEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELADF8NA    WUF8NA           Warehouse Descr
     C                     MOVELADXUST    WUXUST           Trans Contol AS
     C                     ENDIF
      *================================================================
     CSR         OEEXIT    ENDSR
      /EJECT
     CSR         OFRVGN    BEGSR
      *================================================================
      * Rtv Active Status     RT - PFS Interface  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSOF     KLIST
     C                     KFLD           BUY1NX           PFS Company Num
     C                     KFLD           BUGYAA           PFS Interface C
      * Setup key
     C                     Z-ADD#2AIC3    BUY1NX           PFS Company Num
     C                     MOVEL'LDORDD'  BUGYAA           PFS Interface C
      * Establish starting position
     C           KRSOF     CHAIN@BUREBI              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR3541' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    YL0022           PFS AccuSort Ac
     C                     MOVEL*BLANK    YL0023           PFS Carlisle Ac
     C                     GOTO OFEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBUWSSX    YL0022           PFS AccuSort Ac
     C                     MOVELBUWUSX    YL0023           PFS Carlisle Ac
     C                     ENDIF
      *================================================================
     CSR         OFEXIT    ENDSR
      /EJECT
     CSR         OGRVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQOG01           Application Cod
      * Define keylist
     C           KRSOG     KLIST
     C                     KFLD           WQOG01           Application Cod
      * Setup key
     C                     MOVELWL0389    WQOG01           Application Cod
      * Establish starting position
     C           KRSOG     SETLL@DNRESF                    *
     C           KRSOG     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           DNRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WL0390           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR OHRVGN
     C                     END                             *FI
     C           KRSOG     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         OGEXIT    ENDSR
      /EJECT
     CSR         OHRVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQOH01           Application Cod
      * Define keylist
     C           KRSOH     KLIST
     C                     KFLD           WQOH01           Application Cod
      * Setup key
     C                     MOVELDNRSCD    WQOH01           Application Cod
      * Establish starting position
     C           KRSOH     SETLL@DNRESF                    *
     C           KRSOH     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0390           Description
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO OHEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WL0390           Description
     C           KRSOH     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         OHEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV Sales Route/Desc   RT - PD Order Header  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           BEAIC3           Company Number
     C                     KFLD           BEC4NB           Order Number
      * Setup key
     C                     Z-ADD#2AIC3    BEAIC3           Company Number
     C                     Z-ADD#2C4NB    BEC4NB           Order Number
      * Establish starting position
     C           KRSSA     CHAIN@BECPFK              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0176' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SAEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBER4CD    #2R4CD           Sales Route Cod
      * Get sales route description
      * CASE: DB1.Sales Route Code NE WRK.BLANK
     C           BER4CD    IFNE WUGSTX                     *IF
      * RTV Description        RT - PD Sales Route  * 
     C                     EXSR SBRVGN
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    #CMZNA           Sales Route Des
     C                     END                             *FI
     C                     MOVEL*BLANK    W0RTN            *Return code
     C                     ENDIF
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * RTV Description        RT - PD Sales Route  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           JER4CD           Sales Route Cod
      * Setup key
     C                     MOVELBER4CD    JER4CD           Sales Route Cod
      * Establish starting position
     C           KRSSB     CHAIN@JEREWF              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1800' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    #CMZNA           Sales Route Des
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELJEMZNA    #CMZNA           Sales Route Des
     C                     ENDIF
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * RTV Hold/Status        RT - Order Header TRG  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           BEAIC3           Company Number
     C                     KFLD           BEC4NB           Order Number
      * Setup key
     C                     Z-ADD#2AIC3    BEAIC3           Company Number
     C                     Z-ADD#2C4NB    BEC4NB           Order Number
      * Establish starting position
     C           KRSSC     CHAIN@BECPFK              90    *
      * Data record not found
     C   90                MOVEL'USR0176' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBEJNCD    #2JNCD           Order Type - Sa
     C                     MOVELBEGWST    #2GWST           Header Status
     C                     MOVELBEXIST    #2XIST           Credit Hold
     C                     MOVELBEXJST    #2XJST           Production Hold
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * RTV Next Prod Date     RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN AFAIC3    WQSD01           Company Number
      * Define keylist
     C           KPSSD     KLIST
     C                     KFLD           WQSD01           Company Number
     C                     KFLD           AFBCDT           Post to G/L Dat
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           WQSD01           Company Number
      * Setup key
     C                     Z-ADDWL0001    WQSD01           Company Number
     C                     Z-ADDWL0002    AFBCDT           Post to G/L Dat
      * Establish starting position
     C           KPSSD     SETLL@AFREBE                    *
     C           KRSSD     READE@AFREBE                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0018' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0003           Production Date
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Plant Date of Last Order EQ PAR.Plant Date of Last Orde
     C           AFBCDT    IFEQ WL0002                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DB1.Production Day Status is yes
     C           AFWAST    IFEQ 'Y'                        *IF
     C                     Z-ADDAFBCDT    WL0003           Production Date
     C                     GOTO SDEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSD     READE@AFREBE                  90*
     C                     ENDDO
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * Rtv Week Number       RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           AFAIC3           Company Number
     C                     KFLD           AFBCDT           Post to G/L Dat
      * Setup key
     C                     Z-ADD#2AIC3    AFAIC3           Company Number
     C                     Z-ADD##JDT     AFBCDT           Post to G/L Dat
      * Establish starting position
     C           KRSSE     CHAIN@AFREBE              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0018' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WUESNB           Accounting Year
     C                     Z-ADD*ZERO     P8EINB           Week Number
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDAFESNB    WUESNB           Accounting Year
     C                     Z-ADDAFEINB    P8EINB           Week Number
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * RTV Mon-Sat w/Wk#      RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * CASE: PAR.First Time Flag is Yes
     C           WL0014    IFEQ 'Y'                        *IF
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0007           Date Mon USR
     C                     Z-ADD*ZERO     WL0008           Date Tue USR
     C                     Z-ADD*ZERO     WL0009           Date Wed USR
     C                     Z-ADD*ZERO     WL0010           Date Thu USR
     C                     Z-ADD*ZERO     WL0011           Date Fri USR
     C                     Z-ADD*ZERO     WL0012           Date Sat USR
     C                     Z-ADD*ZERO     WL0013           Date Sun USR
     C                     END                             *FI
      * Declare restrictor key work fields
     C           *LIKE     DEFN WAAIC3    WQSF01           Company Number
     C           *LIKE     DEFN WAESNB    WQSF02           Accounting Year
     C           *LIKE     DEFN WAEINB    WQSF03           Week Number
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           WQSF01           Company Number
     C                     KFLD           WQSF02           Accounting Year
     C                     KFLD           WQSF03           Week Number
      * Setup key
     C                     Z-ADDWL0004    WQSF01           Company Number
     C                     Z-ADDWL0005    WQSF02           Accounting Year
     C                     Z-ADDWL0006    WQSF03           Week Number
      * Establish starting position
     C           KRSSF     SETLL@AFREH3                    *
     C           KRSSF     READE@AFREH3                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0018' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0007           Date Mon USR
     C                     Z-ADD*ZERO     WL0008           Date Tue USR
     C                     Z-ADD*ZERO     WL0009           Date Wed USR
     C                     Z-ADD*ZERO     WL0010           Date Thu USR
     C                     Z-ADD*ZERO     WL0011           Date Fri USR
     C                     Z-ADD*ZERO     WL0012           Date Sat USR
     C                     Z-ADD*ZERO     WL0013           Date Sun USR
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Day of Week is Sunday
     C           WAA9ST    IFEQ '1'                        *IF
     C                     Z-ADDWABCDT    WL0013           Date Sun USR
     C                     ELSE
      * CASE: DB1.Day of Week is Monday
     C           WAA9ST    IFEQ '2'                        *IF
     C                     Z-ADDWABCDT    WL0007           Date Mon USR
     C                     ELSE
      * CASE: DB1.Day of Week is Tuesday
     C           WAA9ST    IFEQ '3'                        *IF
     C                     Z-ADDWABCDT    WL0008           Date Tue USR
     C                     ELSE
      * CASE: DB1.Day of Week is Wednesday
     C           WAA9ST    IFEQ '4'                        *IF
     C                     Z-ADDWABCDT    WL0009           Date Wed USR
     C                     ELSE
      * CASE: DB1.Day of Week is Thursday
     C           WAA9ST    IFEQ '5'                        *IF
     C                     Z-ADDWABCDT    WL0010           Date Thu USR
     C                     ELSE
      * CASE: DB1.Day of Week is Friday
     C           WAA9ST    IFEQ '6'                        *IF
     C                     Z-ADDWABCDT    WL0011           Date Fri USR
     C                     ELSE
      * CASE: DB1.Day of Week is Saturday
     C           WAA9ST    IFEQ '7'                        *IF
     C                     Z-ADDWABCDT    WL0012           Date Sat USR
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSF     READE@AFREH3                  90*
     C                     ENDDO
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * Rtv PA Shipdate-21+SunRT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD1         WUCNTU           Count USR
      * Declare restrictor key work fields
     C           *LIKE     DEFN AFAIC3    WQSG01           Company Number
      * Define keylist
     C           KPSSG     KLIST
     C                     KFLD           WQSG01           Company Number
     C                     KFLD           AFBCDT           Post to G/L Dat
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           WQSG01           Company Number
      * Setup key
     C                     Z-ADD#2AIC3    WQSG01           Company Number
     C                     Z-ADDWUJHDT    AFBCDT           Post to G/L Dat
      * Establish starting position
     C           KPSSG     SETLL@AFREBE                    *
     C           KRSSG     READE@AFREBE                  90*
      * Data record not found
     C   90                MOVEL'USR0018' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: WRK.Count USR is GT 21
     C           WUCNTU    IFGT 21                         *IF
     C                     GOTO SGEXIT                     *QUIT
     C                     ELSE
      * CASE: *OTHERWISE
      * Move Date
      * CASE: WRK.Count USR is One
     C           WUCNTU    IFEQ 1                          *IF
      *
     C                     MOVEL*BLANK    WN0001  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0002  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0003  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0004  2        Month (Char) US
     C                     MOVEL*BLANK    WN0005  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0002           Date (Alpha) US
     C                     MOVELAFBCDT    WN0002           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0002:ZQ WN0003    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0002:ZQ WN0004    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0002:ZQ WN0005    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD0         ZQ      50
     C           WN0004    CAT  WN0005:ZQ WN0001    P      Date (Char-6) U
     C                     Z-ADD0         ZQ      50
     C           WN0001    CAT  WN0003:ZQ WN0001    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0001    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WUMWTX           Generic Heading
     C                     MOVELWUCLC6    WUMWTX           Generic Heading
     C                     Z-ADDAFBCDT    P8H6DT           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           AFA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WUMXTX           Generic Heading
     C                     MOVEL'Total'   WUMXTX           Generic Heading
     C                     Z-ADD0         P8H7DT           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Two
     C           WUCNTU    IFEQ 2                          *IF
      *
     C                     MOVEL*BLANK    WN0006  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0007  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0008  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0009  2        Month (Char) US
     C                     MOVEL*BLANK    WN0010  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0007           Date (Alpha) US
     C                     MOVELAFBCDT    WN0007           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0007:ZQ WN0008    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0007:ZQ WN0009    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0007:ZQ WN0010    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD0         ZQ      50
     C           WN0009    CAT  WN0010:ZQ WN0006    P      Date (Char-6) U
     C                     Z-ADD0         ZQ      50
     C           WN0006    CAT  WN0008:ZQ WN0006    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0006    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WUMXTX           Generic Heading
     C                     MOVELWUCLC6    WUMXTX           Generic Heading
     C                     Z-ADDAFBCDT    P8H7DT           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           AFA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WUMYTX           Generic Heading
     C                     MOVEL'Total'   WUMYTX           Generic Heading
     C                     Z-ADD0         P8H8DT           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Three
     C           WUCNTU    IFEQ 3                          *IF
      *
     C                     MOVEL*BLANK    WN0011  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0012  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0013  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0014  2        Month (Char) US
     C                     MOVEL*BLANK    WN0015  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0012           Date (Alpha) US
     C                     MOVELAFBCDT    WN0012           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0012:ZQ WN0013    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0012:ZQ WN0014    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0012:ZQ WN0015    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD0         ZQ      50
     C           WN0014    CAT  WN0015:ZQ WN0011    P      Date (Char-6) U
     C                     Z-ADD0         ZQ      50
     C           WN0011    CAT  WN0013:ZQ WN0011    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0011    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WUMYTX           Generic Heading
     C                     MOVELWUCLC6    WUMYTX           Generic Heading
     C                     Z-ADDAFBCDT    P8H8DT           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           AFA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WUMZTX           Generic Heading
     C                     MOVEL'Total'   WUMZTX           Generic Heading
     C                     Z-ADD0         P8H9DT           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Four
     C           WUCNTU    IFEQ 4                          *IF
      *
     C                     MOVEL*BLANK    WN0016  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0017  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0018  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0019  2        Month (Char) US
     C                     MOVEL*BLANK    WN0020  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0017           Date (Alpha) US
     C                     MOVELAFBCDT    WN0017           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0017:ZQ WN0018    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0017:ZQ WN0019    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0017:ZQ WN0020    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD0         ZQ      50
     C           WN0019    CAT  WN0020:ZQ WN0016    P      Date (Char-6) U
     C                     Z-ADD0         ZQ      50
     C           WN0016    CAT  WN0018:ZQ WN0016    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0016    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WUMZTX           Generic Heading
     C                     MOVELWUCLC6    WUMZTX           Generic Heading
     C                     Z-ADDAFBCDT    P8H9DT           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           AFA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WUM0TX           Generic Heading
     C                     MOVEL'Total'   WUM0TX           Generic Heading
     C                     Z-ADD0         P8IADT           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Five
     C           WUCNTU    IFEQ 5                          *IF
      *
     C                     MOVEL*BLANK    WN0021  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0022  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0023  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0024  2        Month (Char) US
     C                     MOVEL*BLANK    WN0025  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0022           Date (Alpha) US
     C                     MOVELAFBCDT    WN0022           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0022:ZQ WN0023    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0022:ZQ WN0024    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0022:ZQ WN0025    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD0         ZQ      50
     C           WN0024    CAT  WN0025:ZQ WN0021    P      Date (Char-6) U
     C                     Z-ADD0         ZQ      50
     C           WN0021    CAT  WN0023:ZQ WN0021    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0021    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WUM0TX           Generic Heading
     C                     MOVELWUCLC6    WUM0TX           Generic Heading
     C                     Z-ADDAFBCDT    P8IADT           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           AFA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WUM1TX           Generic Heading
     C                     MOVEL'Total'   WUM1TX           Generic Heading
     C                     Z-ADD0         P8IBDT           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Six
     C           WUCNTU    IFEQ 6                          *IF
      *
     C                     MOVEL*BLANK    WN0026  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0027  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0028  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0029  2        Month (Char) US
     C                     MOVEL*BLANK    WN0030  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0027           Date (Alpha) US
     C                     MOVELAFBCDT    WN0027           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0027:ZQ WN0028    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0027:ZQ WN0029    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0027:ZQ WN0030    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD0         ZQ      50
     C           WN0029    CAT  WN0030:ZQ WN0026    P      Date (Char-6) U
     C                     Z-ADD0         ZQ      50
     C           WN0026    CAT  WN0028:ZQ WN0026    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0026    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WUM1TX           Generic Heading
     C                     MOVELWUCLC6    WUM1TX           Generic Heading
     C                     Z-ADDAFBCDT    P8IBDT           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           AFA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WUM2TX           Generic Heading
     C                     MOVEL'Total'   WUM2TX           Generic Heading
     C                     Z-ADD0         P8INDT           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Seven
     C           WUCNTU    IFEQ 7                          *IF
      *
     C                     MOVEL*BLANK    WN0031  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0032  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0033  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0034  2        Month (Char) US
     C                     MOVEL*BLANK    WN0035  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0032           Date (Alpha) US
     C                     MOVELAFBCDT    WN0032           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0032:ZQ WN0033    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0032:ZQ WN0034    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0032:ZQ WN0035    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD0         ZQ      50
     C           WN0034    CAT  WN0035:ZQ WN0031    P      Date (Char-6) U
     C                     Z-ADD0         ZQ      50
     C           WN0031    CAT  WN0033:ZQ WN0031    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0031    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WUM2TX           Generic Heading
     C                     MOVELWUCLC6    WUM2TX           Generic Heading
     C                     Z-ADDAFBCDT    P8INDT           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           AFA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WUM3TX           Generic Heading
     C                     MOVEL'Total'   WUM3TX           Generic Heading
     C                     Z-ADD0         P8IODT           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Eight
     C           WUCNTU    IFEQ 8                          *IF
      *
     C                     MOVEL*BLANK    WN0036  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0037  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0038  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0039  2        Month (Char) US
     C                     MOVEL*BLANK    WN0040  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0037           Date (Alpha) US
     C                     MOVELAFBCDT    WN0037           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0037:ZQ WN0038    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0037:ZQ WN0039    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0037:ZQ WN0040    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD0         ZQ      50
     C           WN0039    CAT  WN0040:ZQ WN0036    P      Date (Char-6) U
     C                     Z-ADD0         ZQ      50
     C           WN0036    CAT  WN0038:ZQ WN0036    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0036    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WUM3TX           Generic Heading
     C                     MOVELWUCLC6    WUM3TX           Generic Heading
     C                     Z-ADDAFBCDT    P8IODT           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           AFA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WUM4TX           Generic Heading
     C                     MOVEL'Total'   WUM4TX           Generic Heading
     C                     Z-ADD0         P8IPDT           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Nine
     C           WUCNTU    IFEQ 9                          *IF
      *
     C                     MOVEL*BLANK    WN0041  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0042  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0043  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0044  2        Month (Char) US
     C                     MOVEL*BLANK    WN0045  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0042           Date (Alpha) US
     C                     MOVELAFBCDT    WN0042           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0042:ZQ WN0043    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0042:ZQ WN0044    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0042:ZQ WN0045    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD0         ZQ      50
     C           WN0044    CAT  WN0045:ZQ WN0041    P      Date (Char-6) U
     C                     Z-ADD0         ZQ      50
     C           WN0041    CAT  WN0043:ZQ WN0041    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0041    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WUM4TX           Generic Heading
     C                     MOVELWUCLC6    WUM4TX           Generic Heading
     C                     Z-ADDAFBCDT    P8IPDT           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           AFA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WUM5TX           Generic Heading
     C                     MOVEL'Total'   WUM5TX           Generic Heading
     C                     Z-ADD0         P8IQDT           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Ten
     C           WUCNTU    IFEQ 10                         *IF
      *
     C                     MOVEL*BLANK    WN0046  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0047  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0048  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0049  2        Month (Char) US
     C                     MOVEL*BLANK    WN0050  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0047           Date (Alpha) US
     C                     MOVELAFBCDT    WN0047           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0047:ZQ WN0048    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0047:ZQ WN0049    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0047:ZQ WN0050    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD0         ZQ      50
     C           WN0049    CAT  WN0050:ZQ WN0046    P      Date (Char-6) U
     C                     Z-ADD0         ZQ      50
     C           WN0046    CAT  WN0048:ZQ WN0046    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0046    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WUM5TX           Generic Heading
     C                     MOVELWUCLC6    WUM5TX           Generic Heading
     C                     Z-ADDAFBCDT    P8IQDT           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           AFA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WUM6TX           Generic Heading
     C                     MOVEL'Total'   WUM6TX           Generic Heading
     C                     Z-ADD0         P8IRDT           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Eleven
     C           WUCNTU    IFEQ 11                         *IF
      *
     C                     MOVEL*BLANK    WN0051  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0052  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0053  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0054  2        Month (Char) US
     C                     MOVEL*BLANK    WN0055  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0052           Date (Alpha) US
     C                     MOVELAFBCDT    WN0052           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0052:ZQ WN0053    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0052:ZQ WN0054    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0052:ZQ WN0055    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD0         ZQ      50
     C           WN0054    CAT  WN0055:ZQ WN0051    P      Date (Char-6) U
     C                     Z-ADD0         ZQ      50
     C           WN0051    CAT  WN0053:ZQ WN0051    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0051    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WUM6TX           Generic Heading
     C                     MOVELWUCLC6    WUM6TX           Generic Heading
     C                     Z-ADDAFBCDT    P8IRDT           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           AFA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WUM7TX           Generic Heading
     C                     MOVEL'Total'   WUM7TX           Generic Heading
     C                     Z-ADD0         P8ISDT           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Twelve
     C           WUCNTU    IFEQ 12                         *IF
      *
     C                     MOVEL*BLANK    WN0056  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0057  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0058  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0059  2        Month (Char) US
     C                     MOVEL*BLANK    WN0060  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0057           Date (Alpha) US
     C                     MOVELAFBCDT    WN0057           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0057:ZQ WN0058    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0057:ZQ WN0059    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0057:ZQ WN0060    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD0         ZQ      50
     C           WN0059    CAT  WN0060:ZQ WN0056    P      Date (Char-6) U
     C                     Z-ADD0         ZQ      50
     C           WN0056    CAT  WN0058:ZQ WN0056    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0056    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WUM7TX           Generic Heading
     C                     MOVELWUCLC6    WUM7TX           Generic Heading
     C                     Z-ADDAFBCDT    P8ISDT           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           AFA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WUM8TX           Generic Heading
     C                     MOVEL'Total'   WUM8TX           Generic Heading
     C                     Z-ADD0         P8ITDT           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Thirteen
     C           WUCNTU    IFEQ 13                         *IF
      *
     C                     MOVEL*BLANK    WN0061  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0062  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0063  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0064  2        Month (Char) US
     C                     MOVEL*BLANK    WN0065  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0062           Date (Alpha) US
     C                     MOVELAFBCDT    WN0062           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0062:ZQ WN0063    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0062:ZQ WN0064    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0062:ZQ WN0065    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD0         ZQ      50
     C           WN0064    CAT  WN0065:ZQ WN0061    P      Date (Char-6) U
     C                     Z-ADD0         ZQ      50
     C           WN0061    CAT  WN0063:ZQ WN0061    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0061    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WUM8TX           Generic Heading
     C                     MOVELWUCLC6    WUM8TX           Generic Heading
     C                     Z-ADDAFBCDT    P8ITDT           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           AFA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WUM9TX           Generic Heading
     C                     MOVEL'Total'   WUM9TX           Generic Heading
     C                     Z-ADD0         P8IUDT           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Fourteen
     C           WUCNTU    IFEQ 14                         *IF
      *
     C                     MOVEL*BLANK    WN0066  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0067  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0068  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0069  2        Month (Char) US
     C                     MOVEL*BLANK    WN0070  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0067           Date (Alpha) US
     C                     MOVELAFBCDT    WN0067           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0067:ZQ WN0068    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0067:ZQ WN0069    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0067:ZQ WN0070    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD0         ZQ      50
     C           WN0069    CAT  WN0070:ZQ WN0066    P      Date (Char-6) U
     C                     Z-ADD0         ZQ      50
     C           WN0066    CAT  WN0068:ZQ WN0066    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0066    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WUM9TX           Generic Heading
     C                     MOVELWUCLC6    WUM9TX           Generic Heading
     C                     Z-ADDAFBCDT    P8IUDT           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           AFA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WUY5TX           Generic Heading
     C                     MOVEL'Total'   WUY5TX           Generic Heading
     C                     Z-ADD0         P8IVDT           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Fifteen
     C           WUCNTU    IFEQ 15                         *IF
      *
     C                     MOVEL*BLANK    WN0071  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0072  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0073  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0074  2        Month (Char) US
     C                     MOVEL*BLANK    WN0075  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0072           Date (Alpha) US
     C                     MOVELAFBCDT    WN0072           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0072:ZQ WN0073    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0072:ZQ WN0074    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0072:ZQ WN0075    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD0         ZQ      50
     C           WN0074    CAT  WN0075:ZQ WN0071    P      Date (Char-6) U
     C                     Z-ADD0         ZQ      50
     C           WN0071    CAT  WN0073:ZQ WN0071    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0071    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WUY5TX           Generic Heading
     C                     MOVELWUCLC6    WUY5TX           Generic Heading
     C                     Z-ADDAFBCDT    P8IVDT           Avail Ship Date
      * CASE: DB1.Day of Week is Sunday
     C           AFA9ST    IFEQ '1'                        *IF
     C                     MOVEL*BLANK    WUY6TX           Generic Heading
     C                     MOVEL'Total'   WUY6TX           Generic Heading
     C                     Z-ADD0         P8IWDT           Avail Ship Date
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: WRK.Count USR is Sixteen
     C           WUCNTU    IFEQ 16                         *IF
      *
     C                     MOVEL*BLANK    WN0076  6        Date (Char-6) U
     C                     MOVEL*BLANK    WN0077  7        Date (Alpha) US
     C                     MOVEL*BLANK    WN0078  2        Year  (Char) US
     C                     MOVEL*BLANK    WN0079  2        Month (Char) US
     C                     MOVEL*BLANK    WN0080  2        Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                     MOVEL*BLANK    WN0077           Date (Alpha) US
     C                     MOVELAFBCDT    WN0077           Date (Alpha) US
      * extract month, day, and year.
     C                     Z-ADD2         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0077:ZQ WN0078    P  90  Year  (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0077:ZQ WN0079    P  90  Month (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD2         YRSW00
     C                     Z-ADD6         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWN0077:ZQ WN0080    P  90  Day   (Char) US
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * reconstruct date in mmddyy format.
     C                     Z-ADD0         ZQ      50
     C           WN0079    CAT  WN0080:ZQ WN0076    P      Date (Char-6) U
     C                     Z-ADD0         ZQ      50
     C           WN0076    CAT  WN0078:ZQ WN0076    P      Date (Char-6) U
      * convert character date to numeric date.
     C                     MOVE WN0076    WUCLC6           Date Out (6,0)
     C                     MOVEL*BLANK    WUY6TX           Generic Heading
     C                     MOVELWUCLC6    WUY6TX           Generic Heading
     C                     Z-ADDAFBCDT    P8IWDT           Avail Ship Date
     C                     ELSE
      * CASE: WRK.Count USR is Seventeen
     C           WUCNTU    IFEQ 17                         *IF
     C                     Z-ADDAFBCDT    P8IXDT           Avail Ship Date
     C                     ELSE
      * CASE: WRK.Count USR is Eighteen
     C           WUCNTU    IFEQ 18                         *IF
     C                     Z-ADDAFBCDT    P8IYDT           Avail Ship Date
     C                     ELSE
      * CASE: WRK.Count USR is Nineteen
     C           WUCNTU    IFEQ 19                         *IF
     C                     Z-ADDAFBCDT    P8IZDT           Avail Ship Date
     C                     ELSE
      * CASE: WRK.Count USR is Twenty
     C           WUCNTU    IFEQ 20                         *IF
     C                     Z-ADDAFBCDT    P8I0DT           Avail Ship Date
     C                     ELSE
      * CASE: WRK.Count USR is Twenty One
     C           WUCNTU    IFEQ 21                         *IF
     C                     Z-ADDAFBCDT    P8I1DT           Avail Ship Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C           KRSSG     READE@AFREBE                  90*
     C                     ENDDO
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHRVGN    BEGSR
      *================================================================
      * RTV Customer Name      RT - Customer  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSH     KLIST
     C                     KFLD           BBBKC7           Ship To Custome
      * Setup key
     C                     Z-ADD#1BKC7    BBBKC7           Ship To Custome
      * Establish starting position
     C           KRSSH     CHAIN@BBREE9              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0170' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    #CAYTX           Customer Name
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SHEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBBAYTX    #CAYTX           Customer Name
     C                     ENDIF
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * RTV Job Time           RT - Order Events  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN EYAIC3    WQSI01           Company Number
     C           *LIKE     DEFN EYC4NB    WQSI02           Order Number
     C           *LIKE     DEFN EYJPCD    WQSI03           Event Code
      * Define keylist
     C           KRSSI     KLIST
     C                     KFLD           WQSI01           Company Number
     C                     KFLD           WQSI02           Order Number
     C                     KFLD           WQSI03           Event Code
      * Setup key
     C                     Z-ADD#2AIC3    WQSI01           Company Number
     C                     Z-ADD#2C4NB    WQSI02           Order Number
     C                     MOVEL'01'      WQSI03           Event Code
      * Establish starting position
     C           KRSSI     SETLL@EYCPZE                    *
     C           KRSSI     READE@EYCPZE                  90*
      * Data record not found
     C   90                MOVEL'USR1074' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDEYAATM    #CAPTM           Job Time
     C           KRSSI     READE@EYCPZE                  90*
     C                     ENDDO
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * RTV Pces/Bag/Unit Chil RT - Company/Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSJ     KLIST
     C                     KFLD           BZAIC3           Company Number
     C                     KFLD           BZHGCD           Item Code
      * Setup key
     C                     Z-ADD#1AIC3    BZAIC3           Company Number
     C                     Z-ADD#1HGCD    BZHGCD           Item Code
      * Establish starting position
     C           KRSSJ     CHAIN@BZREJU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SJEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBZAVNA    WUAVNA           Description Lin
     C                     Z-ADDBZAIWG    P7AIWG           Unit Weight
     C                     Z-ADDBZCHTM    P7CHTM           Fresh Chilling
     C                     MOVELBZPCCT    P7PCCT           Piece Count Ite
     C                     Z-ADDBZBDNB    P7BDNB           Pieces Per Bag
     C                     Z-ADDBZBJNB    P7BJNB           Bags Per Unit
     C                     ENDIF
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         SKRVGN    BEGSR
      *================================================================
      * Rtv Lot Tracking Flag RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSK     KLIST
     C                     KFLD           ADAJCD           Warehouse Code
      * Setup key
     C                     MOVEL#1AJCD    ADAJCD           Warehouse Code
      * Establish starting position
     C           KRSSK     CHAIN@ADREAO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    YL0003           Lot Tracking Fl
     C                     GOTO SKEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELADVHST    YL0003           Lot Tracking Fl
     C                     ENDIF
      *================================================================
     CSR         SKEXIT    ENDSR
      /EJECT
     CSR         SLRVGN    BEGSR
      *================================================================
      * Rtv Item Loc Qty Tot  RT - IC Item Lot Location  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     WULEQT           Quantity Loc On
      * Declare restrictor key work fields
     C           *LIKE     DEFN L5AIC3    WQSL01           Company Number
     C           *LIKE     DEFN L5HGCD    WQSL02           Item Code
     C           *LIKE     DEFN L5AJCD    WQSL03           Warehouse Code
      * Define keylist
     C           KRSSL     KLIST
     C                     KFLD           WQSL01           Company Number
     C                     KFLD           WQSL02           Item Code
     C                     KFLD           WQSL03           Warehouse Code
      * Setup key
     C                     Z-ADD#1AIC3    WQSL01           Company Number
     C                     Z-ADD#1HGCD    WQSL02           Item Code
     C                     MOVEL#1AJCD    WQSL03           Warehouse Code
      * Establish starting position
     C           KRSSL     SETLL@L5CPSV                    *
     C           KRSSL     READE@L5CPSV                  90*
      * Data record not found
     C   90                MOVEL'USR2634' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     ADD  L5J2QT    WULEQT           Quantity Loc On
     C           KRSSL     READE@L5CPSV                  90*
     C                     ENDDO
      *================================================================
     CSR         SLEXIT    ENDSR
      /EJECT
     CSR         SMRVGN    BEGSR
      *================================================================
      * RTV On Hand Qty f/Whse RT - IC Item Balance  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN B0AIC3    WQSM01           Company Number
     C           *LIKE     DEFN B0AJCD    WQSM02           Warehouse Code
     C           *LIKE     DEFN B0HGCD    WQSM03           Item Code
      * Define keylist
     C           KRSSM     KLIST
     C                     KFLD           WQSM01           Company Number
     C                     KFLD           WQSM02           Warehouse Code
     C                     KFLD           WQSM03           Item Code
      * Setup key
     C                     Z-ADD#1AIC3    WQSM01           Company Number
     C                     MOVEL#1AJCD    WQSM02           Warehouse Code
     C                     Z-ADD#1HGCD    WQSM03           Item Code
      * Establish starting position
     C           KRSSM     SETLL@B0REHD                    *
     C           KRSSM     READE@B0REHD                  90*
      * Data record not found
     C   90                MOVEL'USR0328' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     ADD  B0DDQT    WULEQT           On Hand U/M1 Su
     C           KRSSM     READE@B0REHD                  90*
     C                     ENDDO
      *================================================================
     CSR         SMEXIT    ENDSR
      /EJECT
     CSR         SNRVGN    BEGSR
      *================================================================
      * Rtv Production        RT - PS Prod Item Schedule  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSN     KLIST
     C                     KFLD           I8AIC3           Company Number
     C                     KFLD           I8V5ST           Production Type
     C                     KFLD           I8ELDT           Production Date
     C                     KFLD           I8HGCD           Item Code
     C                     KFLD           I8AJCD           Warehouse Code
      * Setup key
     C                     Z-ADDWL0015    I8AIC3           Company Number
     C                     MOVELWL0016    I8V5ST           Production Type
     C                     Z-ADDWL0017    I8ELDT           Production Date
     C                     Z-ADDWL0018    I8HGCD           Item Code
     C                     MOVELWL0019    I8AJCD           Warehouse Code
      * Establish starting position
     C           KRSSN     CHAIN@I8CPUS              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1763' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0020           Weight Producti
     C                     Z-ADD*ZERO     WL0021           Pieces Producti
     C                     MOVEL*BLANK    WL0022           PS Production W
     C                     GOTO SNEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * Weight Production
      * PAR.Weight Production USR =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.PS Weight Standard
      * +     : PGM.*Synon (15,2) work field
      * x2    : DB1.PS Weight Prod Adj
      * -     : PGM.*Synon (15,2) work field
      * x3    : DB1.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x4    : DB1.PS Weight Whse Tfr Adj
     C           I8DXWG    ADD  I8D1WG    W0WA02           *Synon (15,2) w
     C           W0WA02    SUB  I8WTCN    W0WA01           *Synon (15,2) w
     C           W0WA01    SUB  I8GAWG    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WL0020           Weight Producti
      * Pieces Production
      * PAR.Pieces Production USR =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x2    : DB1.PS Pieces Prod Adj
      * -     : PGM.*Synon (15,0) work field
      * x3    : DB1.PS Pieces Converted
      * -     : PGM.*Synon (17,7) work field
      * x4    : DB1.PS Pieces Whse Tfr Adj
     C           I8B2NB    ADD  I8CBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  I8PSCV    W0WJ01           *Synon (15,0) w
     C           W0WJ01    SUB  I8BPNB    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WL0021           Pieces Producti
     C                     MOVELI8B7ST    WL0022           PS Production W
     C                     ENDIF
      *================================================================
     CSR         SNEXIT    ENDSR
      /EJECT
     CSR         SORVGN    BEGSR
      *================================================================
      * Rtv Actual Production RT - IC Transaction Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     WUFDWG           Production Weig
     C                     Z-ADD*ZERO     WULOQT           Production Quan
      * Declare restrictor key work fields
     C           *LIKE     DEFN B7AIC3    WQSO01           Company Number
     C           *LIKE     DEFN B7HGCD    WQSO02           Item Code
     C           *LIKE     DEFN B7AJCD    WQSO03           Warehouse Code
     C           *LIKE     DEFN B7ELDT    WQSO04           Production Date
      * Define keylist
     C           KRSSO     KLIST
     C                     KFLD           WQSO01           Company Number
     C                     KFLD           WQSO02           Item Code
     C                     KFLD           WQSO03           Warehouse Code
     C                     KFLD           WQSO04           Production Date
      * Setup key
     C                     Z-ADD#1AIC3    WQSO01           Company Number
     C                     Z-ADD#1HGCD    WQSO02           Item Code
     C                     MOVEL#1AJCD    WQSO03           Warehouse Code
     C                     Z-ADD#CFFDT    WQSO04           Production Date
      * Establish starting position
     C           KRSSO     SETLL@B7CPGM                    *
     C           KRSSO     READE@B7CPGM                  90*
      * Data record not found
     C   90                MOVEL'USR0344' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     ADD  B7AHWG    WUFDWG           Production Weig
     C                     ADD  B7A5QT    WULOQT           Production Quan
     C           KRSSO     READE@B7CPGM                  90*
     C                     ENDDO
      *================================================================
     CSR         SOEXIT    ENDSR
      /EJECT
     CSR         SPRVGN    BEGSR
      *================================================================
      * Rtv Sched Ship ALL    RT - Order Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD0         WUEEWG           Weight Schedule
     C                     Z-ADD0         WULKQT           Quantity Schedu
      * Declare restrictor key work fields
     C           *LIKE     DEFN WBAIC3    WQSP01           Company Number
     C           *LIKE     DEFN WBHGCD    WQSP02           Item Code
     C           *LIKE     DEFN WBAJCD    WQSP03           Warehouse Code
      * Define keylist
     C           KPSSP     KLIST
     C                     KFLD           WQSP01           Company Number
     C                     KFLD           WQSP02           Item Code
     C                     KFLD           WQSP03           Warehouse Code
     C                     KFLD           WBAODT           Scheduled Ship
      * Define keylist
     C           KRSSP     KLIST
     C                     KFLD           WQSP01           Company Number
     C                     KFLD           WQSP02           Item Code
     C                     KFLD           WQSP03           Warehouse Code
      * Setup key
     C                     Z-ADD#1AIC3    WQSP01           Company Number
     C                     Z-ADD#1HGCD    WQSP02           Item Code
     C                     MOVEL#1AJCD    WQSP03           Warehouse Code
     C                     Z-ADD#CFFDT    WBAODT           Scheduled Ship
      * Establish starting position
     C           KPSSP     SETLL@BGWKKG                    *
     C           KRSSP     READE@BGWKKG                  90*
      * Data record not found
     C   90                MOVEL'USR1309' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * RTV Hdr Sts,BillActTy RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWBAIC3    WL0023           Company Number
     C                     Z-ADDWBC4NB    WL0024           Order Number
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0025    WUGWST    P      Header Status
     C                     MOVELWL0026    WUOBST    P      Billing Activit
      * CASE:
      *  - c1ANDc2
      *   |- c1    : WRK.Header Status is Not Comp/Canc/Conf
      *   |- c2    : WRK.Billing Activity Type is Invoice or Transfer
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WUGWST    IFEQ 'L'                        *IF
     C           WUGWST    OREQ 'A'
     C           WUGWST    OREQ 'E'
     C           WUGWST    OREQ 'H'
     C           WUOBST    IFEQ '1'                        *IF
     C           WUOBST    OREQ '4'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * CASE: PAR.Status Flag 10 Y/N is Yes
     C           'Y'       IFEQ 'Y'                        *IF
      * FP1054 if Yes, accum Scheduled qty & wgt as it was before
     C                     ADD  WBAUWG    WUEEWG           Weight Schedule
     C                     ADD  WBCCQT    WULKQT           Quantity Schedu
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 if no, accum Ordered & qty & wgt
     C                     ADD  WBD0WG    WUEEWG           Weight Schedule
     C                     ADD  WBAVQT    WULKQT           Quantity Schedu
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSP     READE@BGWKKG                  90*
     C                     ENDDO
      *================================================================
     CSR         SPEXIT    ENDSR
      /EJECT
     CSR         SQRVGN    BEGSR
      *================================================================
      * RTV Hdr Sts,BillActTy RT - Order Header TRG  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSQ     KLIST
     C                     KFLD           BEAIC3           Company Number
     C                     KFLD           BEC4NB           Order Number
      * Setup key
     C                     Z-ADDWL0023    BEAIC3           Company Number
     C                     Z-ADDWL0024    BEC4NB           Order Number
      * Establish starting position
     C           KRSSQ     CHAIN@BECPFK              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0176' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SQEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBEGWST    WL0025           Header Status
     C                     MOVELBEOBST    WL0026           Billing Activit
     C                     ENDIF
      *================================================================
     CSR         SQEXIT    ENDSR
      /EJECT
     CSR         SRRVGN    BEGSR
      *================================================================
      * Rtv Sched Shipments   RT - Order Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD0         WL0031           Weight Schedule
     C                     Z-ADD0         WL0032           Quantity Schedu
      * Declare restrictor key work fields
     C           *LIKE     DEFN WBAIC3    WQSR01           Company Number
     C           *LIKE     DEFN WBHGCD    WQSR02           Item Code
     C           *LIKE     DEFN WBAJCD    WQSR03           Warehouse Code
     C           *LIKE     DEFN WBAODT    WQSR04           Scheduled Ship
      * Define keylist
     C           KRSSR     KLIST
     C                     KFLD           WQSR01           Company Number
     C                     KFLD           WQSR02           Item Code
     C                     KFLD           WQSR03           Warehouse Code
     C                     KFLD           WQSR04           Scheduled Ship
      * Setup key
     C                     Z-ADDWL0027    WQSR01           Company Number
     C                     Z-ADDWL0028    WQSR02           Item Code
     C                     MOVELWL0029    WQSR03           Warehouse Code
     C                     Z-ADDWL0030    WQSR04           Scheduled Ship
      * Establish starting position
     C           KRSSR     SETLL@BGWKKG                    *
     C           KRSSR     READE@BGWKKG                  90*
      * Data record not found
     C   90                MOVEL'USR1309' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * RTV Hdr Sts,BillActTy RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWBAIC3    WL0023           Company Number
     C                     Z-ADDWBC4NB    WL0024           Order Number
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0025    WUGWST    P      Header Status
     C                     MOVELWL0026    WUOBST    P      Billing Activit
      * CASE:
      *  - c1ANDc2
      *   |- c1    : WRK.Header Status is Not Comp/Canc/Conf
      *   |- c2    : WRK.Billing Activity Type is Invoice or Transfer
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WUGWST    IFEQ 'L'                        *IF
     C           WUGWST    OREQ 'A'
     C           WUGWST    OREQ 'E'
     C           WUGWST    OREQ 'H'
     C           WUOBST    IFEQ '1'                        *IF
     C           WUOBST    OREQ '4'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * CASE: PAR.Ord/Sch Sts USR is Scheduled
     C           WL0033    IFEQ 'S'                        *IF
     C                     ADD  WBAUWG    WL0031           Weight Schedule
     C                     ADD  WBCCQT    WL0032           Quantity Schedu
     C                     ELSE
      * CASE: PAR.Ord/Sch Sts USR is Ordered
     C           WL0033    IFEQ 'O'                        *IF
     C                     ADD  WBD0WG    WL0031           Weight Schedule
     C                     ADD  WBAVQT    WL0032           Quantity Schedu
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSR     READE@BGWKKG                  90*
     C                     ENDDO
      *================================================================
     CSR         SREXIT    ENDSR
      /EJECT
     CSR         SSRVGN    BEGSR
      *================================================================
      * Rtv Base Values PA    RT - Company Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSS     KLIST
     C                     KFLD           BZAIC3           Company Number
     C                     KFLD           BZHGCD           Item Code
      * Setup key
     C                     Z-ADD#1AIC3    BZAIC3           Company Number
     C                     Z-ADD#1HGCD    BZHGCD           Item Code
      * Establish starting position
     C           KRSSS     CHAIN@BZREJU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAVNA           Description Lin
     C                     MOVEL*BLANK    WUAWNA           Description Lin
     C                     MOVEL*BLANK    P7ADCD           U/M - Primary
     C                     Z-ADD*ZERO     WUAWPC           Conversion Fact
     C                     MOVEL*BLANK    WULXST           Operation Facto
     C                     MOVEL*BLANK    WUAECD           U/M - Second
     C                     Z-ADD*ZERO     WUAXPC           Conversion Fact
     C                     MOVEL*BLANK    WULYST           Operation Facto
     C                     MOVEL*BLANK    WUAFCD           U/M - Third
     C                     MOVEL*BLANK    WUAICD           U/M - Pricing
     C                     Z-ADD*ZERO     P7AIWG           Unit Weight
     C                     MOVEL*BLANK    #1FZST           Production Date
     C                     MOVEL*BLANK    #1AVST           Catch Weight St
     C                     Z-ADD*ZERO     P7CHTM           Fresh Chilling
     C                     MOVEL*BLANK    WUQZCD           Base/Conv/Loss
     C                     MOVEL*BLANK    P7PCCT           Piece Count Ite
     C                     Z-ADD*ZERO     P7BDNB           Pieces Per Bag
     C                     Z-ADD*ZERO     P7BJNB           Bags Per Unit
     C                     MOVEL*BLANK    WUVSST           Record Status
     C                     GOTO SSEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBZAVNA    WUAVNA           Description Lin
     C                     MOVELBZAWNA    WUAWNA           Description Lin
     C                     MOVELBZADCD    P7ADCD           U/M - Primary
     C                     Z-ADDBZAWPC    WUAWPC           Conversion Fact
     C                     MOVELBZLXST    WULXST           Operation Facto
     C                     MOVELBZAECD    WUAECD           U/M - Second
     C                     Z-ADDBZAXPC    WUAXPC           Conversion Fact
     C                     MOVELBZLYST    WULYST           Operation Facto
     C                     MOVELBZAFCD    WUAFCD           U/M - Third
     C                     MOVELBZAICD    WUAICD           U/M - Pricing
     C                     Z-ADDBZAIWG    P7AIWG           Unit Weight
     C                     MOVELBZFZST    #1FZST           Production Date
     C                     MOVELBZAVST    #1AVST           Catch Weight St
     C                     Z-ADDBZCHTM    P7CHTM           Fresh Chilling
     C                     MOVELBZQZCD    WUQZCD           Base/Conv/Loss
     C                     MOVELBZPCCT    P7PCCT           Piece Count Ite
     C                     Z-ADDBZBDNB    P7BDNB           Pieces Per Bag
     C                     Z-ADDBZBJNB    P7BJNB           Bags Per Unit
     C                     MOVELBZVSST    WUVSST           Record Status
     C                     ENDIF
      *================================================================
     CSR         SSEXIT    ENDSR
      /EJECT
     CSR         STRVGN    BEGSR
      *================================================================
      * RTV Desc/Type/LotTrk  RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSST     KLIST
     C                     KFLD           WCAJCD           Warehouse Code
      * Setup key
     C                     MOVEL#1AJCD    WCAJCD           Warehouse Code
      * Establish starting position
     C           KRSST     CHAIN@ADRET1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     MOVEL*BLANK    P9F8NA           Warehouse Descr
     C                     MOVEL*BLANK    WUVHST           Lot Tracking Fl
     C                     MOVEL*BLANK    P9WPST           Warehouse Type
     C                     GOTO STEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWCF8NA    P9F8NA           Warehouse Descr
     C                     MOVELWCVHST    WUVHST           Lot Tracking Fl
     C                     MOVELWCWPST    P9WPST           Warehouse Type
     C                     ENDIF
      *================================================================
     CSR         STEXIT    ENDSR
      /EJECT
     CSR         SURVGN    BEGSR
      *================================================================
      * Rtv Min & Max Pounds  RT - OM Truck Size  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSU     KLIST
     C                     KFLD           FKRONB           Truck Size
      * Setup key
     C                     MOVELWL0034    FKRONB           Truck Size
      * Establish starting position
     C           KRSSU     CHAIN@FKREBT              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1190' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0035           Maximum pounds
     C                     Z-ADD*ZERO     WL0036           Minimum pounds
     C                     GOTO SUEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDFKRSNB    WL0035           Maximum pounds
     C                     Z-ADDFKTANB    WL0036           Minimum pounds
     C                     ENDIF
      *================================================================
     CSR         SUEXIT    ENDSR
      /EJECT
     CSR         SVRVGN    BEGSR
      *================================================================
      * Val Item Bal Exist    RT - IC Item Balance  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSV     KLIST
     C                     KFLD           WDAIC3           Company Number
     C                     KFLD           WDHGCD           Item Code
     C                     KFLD           WDAJCD           Warehouse Code
      * Setup key
     C                     Z-ADD#1AIC3    WDAIC3           Company Number
     C                     Z-ADD#1HGCD    WDHGCD           Item Code
     C                     MOVEL#1AJCD    WDAJCD           Warehouse Code
      * Establish starting position
     C           KRSSV     CHAIN@B0REYY              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0328' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'N'       WUWXST           Record Found US
     C                     GOTO SVEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL'Y'       WUWXST           Record Found US
     C                     ENDIF
      *================================================================
     CSR         SVEXIT    ENDSR
      /EJECT
     CSR         SWRVGN    BEGSR
      *================================================================
      * Rtv PA For 21 Days    RT - Warehouse  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0084  61       Day 1 Inventory
     C                     Z-ADD*ZERO     WN0085  61       Day 2 Inventory
     C                     Z-ADD*ZERO     WN0086  61       Day 3 Inventory
     C                     Z-ADD*ZERO     WN0087  61       Day 4 Inventory
     C                     Z-ADD*ZERO     WN0088  61       Day 5 Inventory
     C                     Z-ADD*ZERO     WN0089  61       Day 6 Inventory
     C                     Z-ADD*ZERO     WN0090  61       Day 7 Inventory
     C                     Z-ADD*ZERO     WN0091  61       Day 8 Inventory
     C                     Z-ADD*ZERO     WN0092  61       Day 9 Inventory
     C                     Z-ADD*ZERO     WN0093  61       Day 10 Inventor
     C                     Z-ADD*ZERO     WN0094  61       Day 11 Inventor
     C                     Z-ADD*ZERO     WN0095  61       Day 12 Inventor
     C                     Z-ADD*ZERO     WN0096  61       Day 13 Inventor
     C                     Z-ADD*ZERO     WN0097  61       Day 14 Inventor
     C                     Z-ADD*ZERO     WN0098  61       Day 1 Productio
     C                     Z-ADD*ZERO     WN0099  61       Day 2 Productio
     C                     Z-ADD*ZERO     WN0100  61       Day 3 Productio
     C                     Z-ADD*ZERO     WN0101  61       Day 4 Productio
     C                     Z-ADD*ZERO     WN0102  61       Day 5 Productio
     C                     Z-ADD*ZERO     WN0103  61       Day 6 Productio
     C                     Z-ADD*ZERO     WN0104  61       Day 7 Productio
     C                     Z-ADD*ZERO     WN0105  61       Day 8 Productio
     C                     Z-ADD*ZERO     WN0106  61       Day 9 Productio
     C                     Z-ADD*ZERO     WN0107  61       Day 10 Producti
     C                     Z-ADD*ZERO     WN0108  61       Day 11 Producti
     C                     Z-ADD*ZERO     WN0109  61       Day 12 Producti
     C                     Z-ADD*ZERO     WN0110  61       Day 13 Producti
     C                     Z-ADD*ZERO     WN0111  61       Day 14 Producti
     C                     Z-ADD*ZERO     WN0112  61       Day 15 Producti
     C                     Z-ADD*ZERO     WN0113  61       Day 16 Producti
     C                     Z-ADD*ZERO     WN0114  61       Day 17 Producti
     C                     Z-ADD*ZERO     WN0115  61       Day 18 Producti
     C                     Z-ADD*ZERO     WN0116  61       Day 19 Producti
     C                     Z-ADD*ZERO     WN0117  61       Day 20 Producti
     C                     Z-ADD*ZERO     WN0118  61       Day 21 Producti
     C                     Z-ADD*ZERO     WN0119  61       Day 1 Sales USR
     C                     Z-ADD*ZERO     WN0120  61       Day 2 Sales USR
     C                     Z-ADD*ZERO     WN0121  61       Day 3 Sales USR
     C                     Z-ADD*ZERO     WN0122  61       Day 4 Sales USR
     C                     Z-ADD*ZERO     WN0123  61       Day 5 Sales USR
     C                     Z-ADD*ZERO     WN0124  61       Day 6 Sales USR
     C                     Z-ADD*ZERO     WN0125  61       Day 7 Sales USR
     C                     Z-ADD*ZERO     WN0126  61       Day 8 Sales USR
     C                     Z-ADD*ZERO     WN0127  61       Day 9 Sales USR
     C                     Z-ADD*ZERO     WN0128  61       Day 10 Sales US
     C                     Z-ADD*ZERO     WN0129  61       Day 11 Sales US
     C                     Z-ADD*ZERO     WN0130  61       Day 12 Sales US
     C                     Z-ADD*ZERO     WN0131  61       Day 13 Sales US
     C                     Z-ADD*ZERO     WN0132  61       Day 14 Sales US
     C                     Z-ADD*ZERO     WN0133  61       Day 15 Sales US
     C                     Z-ADD*ZERO     WN0134  61       Day 16 Sales US
     C                     Z-ADD*ZERO     WN0135  61       Day 17 Sales US
     C                     Z-ADD*ZERO     WN0136  61       Day 18 Sales US
     C                     Z-ADD*ZERO     WN0137  61       Day 19 Sales US
     C                     Z-ADD*ZERO     WN0138  61       Day 20 Sales US
     C                     Z-ADD*ZERO     WN0139  61       Day 21 Sales US
     C                     Z-ADD*ZERO     WN0140  61       Day 1 Availabil
     C                     Z-ADD*ZERO     WN0141  61       Day 2 Availabil
     C                     Z-ADD*ZERO     WN0142  61       Day 3 Availabil
     C                     Z-ADD*ZERO     WN0143  61       Day 4 Availabil
     C                     Z-ADD*ZERO     WN0144  61       Day 5 Availabil
     C                     Z-ADD*ZERO     WN0145  61       Day 6 Availabil
     C                     Z-ADD*ZERO     WN0146  61       Day 7 Availabil
     C                     Z-ADD*ZERO     WN0147  61       Day 8 Availabil
     C                     Z-ADD*ZERO     WN0148  61       Day 9 Availabil
     C                     Z-ADD*ZERO     WN0149  61       Day 10 Availabi
     C                     Z-ADD*ZERO     WN0150  61       Day 11 Availabi
     C                     Z-ADD*ZERO     WN0151  61       Day 12 Availabi
     C                     Z-ADD*ZERO     WN0152  61       Day 13 Availabi
     C                     Z-ADD*ZERO     WN0153  61       Day 14 Availabi
     C                     Z-ADD*ZERO     WN0154  61       Day 15 Availabi
     C                     Z-ADD*ZERO     WN0155  61       Day 16 Availabi
     C                     Z-ADD*ZERO     WN0156  61       Day 17 Availabi
     C                     Z-ADD*ZERO     WN0157  61       Day 18 Availabi
     C                     Z-ADD*ZERO     WN0158  61       Day 19 Availabi
     C                     Z-ADD*ZERO     WN0159  61       Day 20 Availabi
     C                     Z-ADD*ZERO     WN0160  61       Day 21 Availabi
     C                     MOVEL*BLANK    WN0161  1        Status - Y or N
     C                     Z-ADD*ZERO     WN0162  61       Day 1 Sched Shi
     C                     Z-ADD*ZERO     WN0163  61       Day 2 Sched Shi
     C                     Z-ADD*ZERO     WN0164  61       Day 3 Sched Shi
     C                     Z-ADD*ZERO     WN0165  61       Day 4 Sched Shi
     C                     Z-ADD*ZERO     WN0166  61       Day 5 Sched Shi
     C                     Z-ADD*ZERO     WN0167  61       Day 6 Sched Shi
     C                     Z-ADD*ZERO     WN0168  61       Day 7 Sched Shi
     C                     Z-ADD*ZERO     WN0169  61       Day 8 Sched Shi
     C                     Z-ADD*ZERO     WN0170  61       Day 9 Sched Shi
     C                     Z-ADD*ZERO     WN0171  61       Day 10 Sched Sh
     C                     Z-ADD*ZERO     WN0172  61       Day 11 Sched Sh
     C                     Z-ADD*ZERO     WN0173  61       Day 12 Sched Sh
     C                     Z-ADD*ZERO     WN0174  61       Day 13 Sched Sh
     C                     Z-ADD*ZERO     WN0175  61       Day 14 Sched Sh
     C                     Z-ADD*ZERO     WN0176  61       Day 15 Sched Sh
     C                     Z-ADD*ZERO     WN0177  61       Day 16 Sched Sh
     C                     Z-ADD*ZERO     WN0178  61       Day 17 Sched Sh
     C                     Z-ADD*ZERO     WN0179  61       Day 18 Sched Sh
     C                     Z-ADD*ZERO     WN0180  61       Day 19 Sched Sh
     C                     Z-ADD*ZERO     WN0181  61       Day 20 Sched Sh
     C                     Z-ADD*ZERO     WN0182  61       Day 21 Sched Sh
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0063           USR Day 1
     C                     Z-ADD*ZERO     WL0064           USR Day 2
     C                     Z-ADD*ZERO     WL0065           USR Day 3
     C                     Z-ADD*ZERO     WL0066           USR Day 4
     C                     Z-ADD*ZERO     WL0067           USR Day 5
     C                     Z-ADD*ZERO     WL0068           USR Day 6
     C                     Z-ADD*ZERO     WL0069           USR Day 7
     C                     Z-ADD*ZERO     WL0070           USR Day 8
     C                     Z-ADD*ZERO     WL0071           USR Day 9
     C                     Z-ADD*ZERO     WL0072           USR Day 10
     C                     Z-ADD*ZERO     WL0073           USR Day 11
     C                     Z-ADD*ZERO     WL0074           USR Day 12
     C                     Z-ADD*ZERO     WL0075           USR Day 13
     C                     Z-ADD*ZERO     WL0076           USR Day 14
     C                     Z-ADD*ZERO     WL0077           USR Day 15
     C                     Z-ADD*ZERO     WL0078           USR Day 16
     C                     Z-ADD*ZERO     WL0079           USR Day 17
     C                     Z-ADD*ZERO     WL0080           USR Day 18
     C                     Z-ADD*ZERO     WL0081           USR Day 19
     C                     Z-ADD*ZERO     WL0082           USR Day 20
     C                     Z-ADD*ZERO     WL0083           USR Day 21
     C                     Z-ADD*ZERO     WN0084           Day 1 Inventory
     C                     Z-ADD*ZERO     WN0085           Day 2 Inventory
     C                     Z-ADD*ZERO     WN0086           Day 3 Inventory
     C                     Z-ADD*ZERO     WN0087           Day 4 Inventory
     C                     Z-ADD*ZERO     WN0088           Day 5 Inventory
     C                     Z-ADD*ZERO     WN0089           Day 6 Inventory
     C                     Z-ADD*ZERO     WN0090           Day 7 Inventory
     C                     Z-ADD*ZERO     WN0091           Day 8 Inventory
     C                     Z-ADD*ZERO     WN0092           Day 9 Inventory
     C                     Z-ADD*ZERO     WN0093           Day 10 Inventor
     C                     Z-ADD*ZERO     WN0094           Day 11 Inventor
     C                     Z-ADD*ZERO     WN0095           Day 12 Inventor
     C                     Z-ADD*ZERO     WN0096           Day 13 Inventor
     C                     Z-ADD*ZERO     WN0097           Day 14 Inventor
     C                     Z-ADD*ZERO     WN0098           Day 1 Productio
     C                     Z-ADD*ZERO     WN0099           Day 2 Productio
     C                     Z-ADD*ZERO     WN0100           Day 3 Productio
     C                     Z-ADD*ZERO     WN0101           Day 4 Productio
     C                     Z-ADD*ZERO     WN0102           Day 5 Productio
     C                     Z-ADD*ZERO     WN0103           Day 6 Productio
     C                     Z-ADD*ZERO     WN0104           Day 7 Productio
     C                     Z-ADD*ZERO     WN0105           Day 8 Productio
     C                     Z-ADD*ZERO     WN0106           Day 9 Productio
     C                     Z-ADD*ZERO     WN0107           Day 10 Producti
     C                     Z-ADD*ZERO     WN0108           Day 11 Producti
     C                     Z-ADD*ZERO     WN0109           Day 12 Producti
     C                     Z-ADD*ZERO     WN0110           Day 13 Producti
     C                     Z-ADD*ZERO     WN0111           Day 14 Producti
     C                     Z-ADD*ZERO     WN0112           Day 15 Producti
     C                     Z-ADD*ZERO     WN0113           Day 16 Producti
     C                     Z-ADD*ZERO     WN0114           Day 17 Producti
     C                     Z-ADD*ZERO     WN0115           Day 18 Producti
     C                     Z-ADD*ZERO     WN0116           Day 19 Producti
     C                     Z-ADD*ZERO     WN0117           Day 20 Producti
     C                     Z-ADD*ZERO     WN0118           Day 21 Producti
     C                     Z-ADD*ZERO     WN0119           Day 1 Sales USR
     C                     Z-ADD*ZERO     WN0120           Day 2 Sales USR
     C                     Z-ADD*ZERO     WN0121           Day 3 Sales USR
     C                     Z-ADD*ZERO     WN0122           Day 4 Sales USR
     C                     Z-ADD*ZERO     WN0123           Day 5 Sales USR
     C                     Z-ADD*ZERO     WN0124           Day 6 Sales USR
     C                     Z-ADD*ZERO     WN0125           Day 7 Sales USR
     C                     Z-ADD*ZERO     WN0126           Day 8 Sales USR
     C                     Z-ADD*ZERO     WN0127           Day 9 Sales USR
     C                     Z-ADD*ZERO     WN0128           Day 10 Sales US
     C                     Z-ADD*ZERO     WN0129           Day 11 Sales US
     C                     Z-ADD*ZERO     WN0130           Day 12 Sales US
     C                     Z-ADD*ZERO     WN0131           Day 13 Sales US
     C                     Z-ADD*ZERO     WN0132           Day 14 Sales US
     C                     Z-ADD*ZERO     WN0133           Day 15 Sales US
     C                     Z-ADD*ZERO     WN0134           Day 16 Sales US
     C                     Z-ADD*ZERO     WN0135           Day 17 Sales US
     C                     Z-ADD*ZERO     WN0136           Day 18 Sales US
     C                     Z-ADD*ZERO     WN0137           Day 19 Sales US
     C                     Z-ADD*ZERO     WN0138           Day 20 Sales US
     C                     Z-ADD*ZERO     WN0139           Day 21 Sales US
     C                     Z-ADD*ZERO     WN0140           Day 1 Availabil
     C                     Z-ADD*ZERO     WN0141           Day 2 Availabil
     C                     Z-ADD*ZERO     WN0142           Day 3 Availabil
     C                     Z-ADD*ZERO     WN0143           Day 4 Availabil
     C                     Z-ADD*ZERO     WN0144           Day 5 Availabil
     C                     Z-ADD*ZERO     WN0145           Day 6 Availabil
     C                     Z-ADD*ZERO     WN0146           Day 7 Availabil
     C                     Z-ADD*ZERO     WN0147           Day 8 Availabil
     C                     Z-ADD*ZERO     WN0148           Day 9 Availabil
     C                     Z-ADD*ZERO     WN0149           Day 10 Availabi
     C                     Z-ADD*ZERO     WN0150           Day 11 Availabi
     C                     Z-ADD*ZERO     WN0151           Day 12 Availabi
     C                     Z-ADD*ZERO     WN0152           Day 13 Availabi
     C                     Z-ADD*ZERO     WN0153           Day 14 Availabi
     C                     Z-ADD*ZERO     WN0154           Day 15 Availabi
     C                     Z-ADD*ZERO     WN0155           Day 16 Availabi
     C                     Z-ADD*ZERO     WN0156           Day 17 Availabi
     C                     Z-ADD*ZERO     WN0157           Day 18 Availabi
     C                     Z-ADD*ZERO     WN0158           Day 19 Availabi
     C                     Z-ADD*ZERO     WN0159           Day 20 Availabi
     C                     Z-ADD*ZERO     WN0160           Day 21 Availabi
     C                     MOVEL*BLANK    WN0161           Status - Y or N
     C                     Z-ADD*ZERO     WN0162           Day 1 Sched Shi
     C                     Z-ADD*ZERO     WN0163           Day 2 Sched Shi
     C                     Z-ADD*ZERO     WN0164           Day 3 Sched Shi
     C                     Z-ADD*ZERO     WN0165           Day 4 Sched Shi
     C                     Z-ADD*ZERO     WN0166           Day 5 Sched Shi
     C                     Z-ADD*ZERO     WN0167           Day 6 Sched Shi
     C                     Z-ADD*ZERO     WN0168           Day 7 Sched Shi
     C                     Z-ADD*ZERO     WN0169           Day 8 Sched Shi
     C                     Z-ADD*ZERO     WN0170           Day 9 Sched Shi
     C                     Z-ADD*ZERO     WN0171           Day 10 Sched Sh
     C                     Z-ADD*ZERO     WN0172           Day 11 Sched Sh
     C                     Z-ADD*ZERO     WN0173           Day 12 Sched Sh
     C                     Z-ADD*ZERO     WN0174           Day 13 Sched Sh
     C                     Z-ADD*ZERO     WN0175           Day 14 Sched Sh
     C                     Z-ADD*ZERO     WN0176           Day 15 Sched Sh
     C                     Z-ADD*ZERO     WN0177           Day 16 Sched Sh
     C                     Z-ADD*ZERO     WN0178           Day 17 Sched Sh
     C                     Z-ADD*ZERO     WN0179           Day 18 Sched Sh
     C                     Z-ADD*ZERO     WN0180           Day 19 Sched Sh
     C                     Z-ADD*ZERO     WN0181           Day 20 Sched Sh
     C                     Z-ADD*ZERO     WN0182           Day 21 Sched Sh
     C                     MOVEL*BLANK    WL0084           Day 1 Rsrvd Oth
     C                     MOVEL*BLANK    WL0085           Day 2 Rsrvd Oth
     C                     MOVEL*BLANK    WL0086           Day 3 Rsrvd Oth
     C                     MOVEL*BLANK    WL0087           Day 4 Rsrvd Oth
     C                     MOVEL*BLANK    WL0088           Day 5 Rsrvd Oth
     C                     MOVEL*BLANK    WL0089           Day 6 Rsrvd Oth
     C                     MOVEL*BLANK    WL0090           Day 7 Rsrvd Oth
     C                     MOVEL*BLANK    WL0091           Day 8 Rsrvd Oth
     C                     MOVEL*BLANK    WL0092           Day 9 Rsrvd Oth
     C                     MOVEL*BLANK    WL0093           Day 10 Rsrv Oth
     C                     MOVEL*BLANK    WL0094           Day 11 Rsrv Oth
     C                     MOVEL*BLANK    WL0095           Day 12 Rsrv Oth
     C                     MOVEL*BLANK    WL0096           Day 13 Rsrv Oth
     C                     MOVEL*BLANK    WL0097           Day 14 Rsrv Oth
     C                     MOVEL*BLANK    WL0098           Day 15 Rsrv Oth
     C                     MOVEL*BLANK    WL0099           Day 16 Rsrv Oth
     C                     MOVEL*BLANK    WL0100           Day 17 Rsrv Oth
     C                     MOVEL*BLANK    WL0101           Day 18 Rsrv Oth
     C                     MOVEL*BLANK    WL0102           Day 19 Rsrv Oth
     C                     MOVEL*BLANK    WL0103           Day 20 Rsrv Oth
     C                     MOVEL*BLANK    WL0104           Day 21 Rsrv Oth
     C                     Z-ADD*ZERO     WL0105           Order Hold Over
     C                     Z-ADD*ZERO     WL0106           Order Hold Over
     C                     Z-ADD*ZERO     WL0113           Day 1 Inventory
     C                     Z-ADD*ZERO     WL0114           Day 2 Inventory
     C                     Z-ADD*ZERO     WL0115           Day 3 Inventory
     C                     Z-ADD*ZERO     WL0116           Day 4 Inventory
     C                     Z-ADD*ZERO     WL0117           Day 5 Inventory
     C                     Z-ADD*ZERO     WL0118           Day 6 Inventory
     C                     Z-ADD*ZERO     WL0119           Day 7 Inventory
     C                     Z-ADD*ZERO     WL0120           Day 8 Inventory
     C                     Z-ADD*ZERO     WL0121           Day 9 Inventory
     C                     Z-ADD*ZERO     WL0122           Day 10 Inventor
     C                     Z-ADD*ZERO     WL0123           Day 11 Inventor
     C                     Z-ADD*ZERO     WL0124           Day 12 Inventor
     C                     Z-ADD*ZERO     WL0125           Day 13 Inventor
     C                     Z-ADD*ZERO     WL0126           Day 14 Inventor
     C                     Z-ADD*ZERO     WL0127           Day 1 Productio
     C                     Z-ADD*ZERO     WL0128           Day 2 Productio
     C                     Z-ADD*ZERO     WL0129           Day 3 Productio
     C                     Z-ADD*ZERO     WL0130           Day 4 Productio
     C                     Z-ADD*ZERO     WL0131           Day 5 Productio
     C                     Z-ADD*ZERO     WL0132           Day 6 Productio
     C                     Z-ADD*ZERO     WL0133           Day 7 Productio
     C                     Z-ADD*ZERO     WL0134           Day 8 Prod Tota
     C                     Z-ADD*ZERO     WL0135           Day 9 Prod Tota
     C                     Z-ADD*ZERO     WL0136           Day 10 Prod Tot
     C                     Z-ADD*ZERO     WL0137           Day 11 Prod Tot
     C                     Z-ADD*ZERO     WL0138           Day 12 Prod Tot
     C                     Z-ADD*ZERO     WL0139           Day 13 Prod Tot
     C                     Z-ADD*ZERO     WL0140           Day 14 Prod Tot
     C                     Z-ADD*ZERO     WL0141           Day 15 Prod Tot
     C                     Z-ADD*ZERO     WL0142           Day 16 Prod Tot
     C                     Z-ADD*ZERO     WL0143           Day 17 Prod Tot
     C                     Z-ADD*ZERO     WL0144           Day 18 Prod Tot
     C                     Z-ADD*ZERO     WL0145           Day 19 Prod Tot
     C                     Z-ADD*ZERO     WL0146           Day 20 Prod Tot
     C                     Z-ADD*ZERO     WL0147           Day 21 Prod Tot
     C                     Z-ADD*ZERO     WL0148           Day 1 Sales Tot
     C                     Z-ADD*ZERO     WL0149           Day 2 Sales Tot
     C                     Z-ADD*ZERO     WL0150           Day 3 Sales Tot
     C                     Z-ADD*ZERO     WL0151           Day 4 Sales Tot
     C                     Z-ADD*ZERO     WL0152           Day 5 Sales Tot
     C                     Z-ADD*ZERO     WL0153           Day 6 Sales Tot
     C                     Z-ADD*ZERO     WL0154           Day 7 Sales Tot
     C                     Z-ADD*ZERO     WL0155           Day 8 Sales Tot
     C                     Z-ADD*ZERO     WL0156           Day 9 Sales Tot
     C                     Z-ADD*ZERO     WL0157           Day 10 Sales To
     C                     Z-ADD*ZERO     WL0158           Day 11 Sales To
     C                     Z-ADD*ZERO     WL0159           Day 12 Sales To
     C                     Z-ADD*ZERO     WL0160           Day 13 Sales To
     C                     Z-ADD*ZERO     WL0161           Day 14 Sales To
     C                     Z-ADD*ZERO     WL0162           Day 15 Sales To
     C                     Z-ADD*ZERO     WL0163           Day 16 Sales To
     C                     Z-ADD*ZERO     WL0164           Day 17 Sales To
     C                     Z-ADD*ZERO     WL0165           Day 18 Sales To
     C                     Z-ADD*ZERO     WL0166           Day 19 Sales To
     C                     Z-ADD*ZERO     WL0167           Day 20 Sales To
     C                     Z-ADD*ZERO     WL0168           Day 21 Sales To
     C                     Z-ADD*ZERO     WL0169           Day 1 Avail Tot
     C                     Z-ADD*ZERO     WL0170           Day 2 Avail Tot
     C                     Z-ADD*ZERO     WL0171           Day 3 Avail Tot
     C                     Z-ADD*ZERO     WL0172           Day 4 Avail Tot
     C                     Z-ADD*ZERO     WL0173           Day 5 Avail Tot
     C                     Z-ADD*ZERO     WL0174           Day 6 Avail Tot
     C                     Z-ADD*ZERO     WL0175           Day 7 Avail Tot
     C                     Z-ADD*ZERO     WL0176           Day 8 Avail Tot
     C                     Z-ADD*ZERO     WL0177           Day 9 Avail Tot
     C                     Z-ADD*ZERO     WL0178           Day 10 Avail To
     C                     Z-ADD*ZERO     WL0179           Day 11 Avail To
     C                     Z-ADD*ZERO     WL0180           Day 12 Avail To
     C                     Z-ADD*ZERO     WL0181           Day 13 Avail To
     C                     Z-ADD*ZERO     WL0182           Day 14 Avail To
     C                     Z-ADD*ZERO     WL0183           Day 15 Avail To
     C                     Z-ADD*ZERO     WL0184           Day 16 Avail To
     C                     Z-ADD*ZERO     WL0185           Day 17 Avail To
     C                     Z-ADD*ZERO     WL0186           Day 18 Avail To
     C                     Z-ADD*ZERO     WL0187           Day 19 Avail To
     C                     Z-ADD*ZERO     WL0188           Day 20 Avail To
     C                     Z-ADD*ZERO     WL0189           Day 21 Avail To
     C                     Z-ADD*ZERO     WL0190           Day 1 Schd Ship
     C                     Z-ADD*ZERO     WL0191           Day 2 Schd Ship
     C                     Z-ADD*ZERO     WL0192           Day 3 Schd Ship
     C                     Z-ADD*ZERO     WL0193           Day 4 Schd Ship
     C                     Z-ADD*ZERO     WL0194           Day 5 Schd Ship
     C                     Z-ADD*ZERO     WL0195           Day 6 Schd Ship
     C                     Z-ADD*ZERO     WL0196           Day 7 Schd Ship
     C                     Z-ADD*ZERO     WL0197           Day 8 Schd Ship
     C                     Z-ADD*ZERO     WL0198           Day 9 Schd Ship
     C                     Z-ADD*ZERO     WL0199           Day 10 SchdShip
     C                     Z-ADD*ZERO     WL0200           Day 11 SchdShip
     C                     Z-ADD*ZERO     WL0201           Day 12 SchdShip
     C                     Z-ADD*ZERO     WL0202           Day 13 SchdShip
     C                     Z-ADD*ZERO     WL0203           Day 14 SchdShip
     C                     Z-ADD*ZERO     WL0204           Day 15 SchdShip
     C                     Z-ADD*ZERO     WL0205           Day 16 SchdShip
     C                     Z-ADD*ZERO     WL0206           Day 17 SchdShip
     C                     Z-ADD*ZERO     WL0207           Day 18 SchdShip
     C                     Z-ADD*ZERO     WL0208           Day 19 SchdShip
     C                     Z-ADD*ZERO     WL0209           Day 20 SchdShip
     C                     Z-ADD*ZERO     WL0210           Day 21 SchdShip
     C                     MOVEL'N'       WN0161           Status - Y or N
      * Establish starting position
     C           *LOVAL    SETLL@ADREOJ                    *
     C                     READ @ADREOJ                  90*
      * Data record not found
     C   90                MOVEL'USR0007' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * Check for matching warehouse code and warehouse type
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Warehouse Code is Warehouse Code Blank
      *   |- c2    : PAR.Warehouse Type is Equal blank
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0038    IFEQ *BLANK                     *IF
     C           WL0037    IFEQ *BLANK                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *
     C                     MOVEL*BLANK    WN0183  3        Production Ware
     C                     MOVEL*BLANK    WN0184  1        Lot Tracking Fl
      *
      * Rtv PA For 21 Days    IF
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0063           USR Day 1
     C                     Z-ADD*ZERO     WL0064           USR Day 2
     C                     Z-ADD*ZERO     WL0065           USR Day 3
     C                     Z-ADD*ZERO     WL0066           USR Day 4
     C                     Z-ADD*ZERO     WL0067           USR Day 5
     C                     Z-ADD*ZERO     WL0068           USR Day 6
     C                     Z-ADD*ZERO     WL0069           USR Day 7
     C                     Z-ADD*ZERO     WL0070           USR Day 8
     C                     Z-ADD*ZERO     WL0071           USR Day 9
     C                     Z-ADD*ZERO     WL0072           USR Day 10
     C                     Z-ADD*ZERO     WL0073           USR Day 11
     C                     Z-ADD*ZERO     WL0074           USR Day 12
     C                     Z-ADD*ZERO     WL0075           USR Day 13
     C                     Z-ADD*ZERO     WL0076           USR Day 14
     C                     Z-ADD*ZERO     WL0077           USR Day 15
     C                     Z-ADD*ZERO     WL0078           USR Day 16
     C                     Z-ADD*ZERO     WL0079           USR Day 17
     C                     Z-ADD*ZERO     WL0080           USR Day 18
     C                     Z-ADD*ZERO     WL0081           USR Day 19
     C                     Z-ADD*ZERO     WL0082           USR Day 20
     C                     Z-ADD*ZERO     WL0083           USR Day 21
     C                     Z-ADD*ZERO     WN0084           Day 1 Inventory
     C                     Z-ADD*ZERO     WN0085           Day 2 Inventory
     C                     Z-ADD*ZERO     WN0086           Day 3 Inventory
     C                     Z-ADD*ZERO     WN0087           Day 4 Inventory
     C                     Z-ADD*ZERO     WN0088           Day 5 Inventory
     C                     Z-ADD*ZERO     WN0089           Day 6 Inventory
     C                     Z-ADD*ZERO     WN0090           Day 7 Inventory
     C                     Z-ADD*ZERO     WN0091           Day 8 Inventory
     C                     Z-ADD*ZERO     WN0092           Day 9 Inventory
     C                     Z-ADD*ZERO     WN0093           Day 10 Inventor
     C                     Z-ADD*ZERO     WN0094           Day 11 Inventor
     C                     Z-ADD*ZERO     WN0095           Day 12 Inventor
     C                     Z-ADD*ZERO     WN0096           Day 13 Inventor
     C                     Z-ADD*ZERO     WN0097           Day 14 Inventor
     C                     Z-ADD*ZERO     WN0098           Day 1 Productio
     C                     Z-ADD*ZERO     WN0099           Day 2 Productio
     C                     Z-ADD*ZERO     WN0100           Day 3 Productio
     C                     Z-ADD*ZERO     WN0101           Day 4 Productio
     C                     Z-ADD*ZERO     WN0102           Day 5 Productio
     C                     Z-ADD*ZERO     WN0103           Day 6 Productio
     C                     Z-ADD*ZERO     WN0104           Day 7 Productio
     C                     Z-ADD*ZERO     WN0105           Day 8 Productio
     C                     Z-ADD*ZERO     WN0106           Day 9 Productio
     C                     Z-ADD*ZERO     WN0107           Day 10 Producti
     C                     Z-ADD*ZERO     WN0108           Day 11 Producti
     C                     Z-ADD*ZERO     WN0109           Day 12 Producti
     C                     Z-ADD*ZERO     WN0110           Day 13 Producti
     C                     Z-ADD*ZERO     WN0111           Day 14 Producti
     C                     Z-ADD*ZERO     WN0112           Day 15 Producti
     C                     Z-ADD*ZERO     WN0113           Day 16 Producti
     C                     Z-ADD*ZERO     WN0114           Day 17 Producti
     C                     Z-ADD*ZERO     WN0115           Day 18 Producti
     C                     Z-ADD*ZERO     WN0116           Day 19 Producti
     C                     Z-ADD*ZERO     WN0117           Day 20 Producti
     C                     Z-ADD*ZERO     WN0118           Day 21 Producti
     C                     Z-ADD*ZERO     WN0119           Day 1 Sales USR
     C                     Z-ADD*ZERO     WN0120           Day 2 Sales USR
     C                     Z-ADD*ZERO     WN0121           Day 3 Sales USR
     C                     Z-ADD*ZERO     WN0122           Day 4 Sales USR
     C                     Z-ADD*ZERO     WN0123           Day 5 Sales USR
     C                     Z-ADD*ZERO     WN0124           Day 6 Sales USR
     C                     Z-ADD*ZERO     WN0125           Day 7 Sales USR
     C                     Z-ADD*ZERO     WN0126           Day 8 Sales USR
     C                     Z-ADD*ZERO     WN0127           Day 9 Sales USR
     C                     Z-ADD*ZERO     WN0128           Day 10 Sales US
     C                     Z-ADD*ZERO     WN0129           Day 11 Sales US
     C                     Z-ADD*ZERO     WN0130           Day 12 Sales US
     C                     Z-ADD*ZERO     WN0131           Day 13 Sales US
     C                     Z-ADD*ZERO     WN0132           Day 14 Sales US
     C                     Z-ADD*ZERO     WN0133           Day 15 Sales US
     C                     Z-ADD*ZERO     WN0134           Day 16 Sales US
     C                     Z-ADD*ZERO     WN0135           Day 17 Sales US
     C                     Z-ADD*ZERO     WN0136           Day 18 Sales US
     C                     Z-ADD*ZERO     WN0137           Day 19 Sales US
     C                     Z-ADD*ZERO     WN0138           Day 20 Sales US
     C                     Z-ADD*ZERO     WN0139           Day 21 Sales US
     C                     Z-ADD*ZERO     WN0140           Day 1 Availabil
     C                     Z-ADD*ZERO     WN0141           Day 2 Availabil
     C                     Z-ADD*ZERO     WN0142           Day 3 Availabil
     C                     Z-ADD*ZERO     WN0143           Day 4 Availabil
     C                     Z-ADD*ZERO     WN0144           Day 5 Availabil
     C                     Z-ADD*ZERO     WN0145           Day 6 Availabil
     C                     Z-ADD*ZERO     WN0146           Day 7 Availabil
     C                     Z-ADD*ZERO     WN0147           Day 8 Availabil
     C                     Z-ADD*ZERO     WN0148           Day 9 Availabil
     C                     Z-ADD*ZERO     WN0149           Day 10 Availabi
     C                     Z-ADD*ZERO     WN0150           Day 11 Availabi
     C                     Z-ADD*ZERO     WN0151           Day 12 Availabi
     C                     Z-ADD*ZERO     WN0152           Day 13 Availabi
     C                     Z-ADD*ZERO     WN0153           Day 14 Availabi
     C                     Z-ADD*ZERO     WN0154           Day 15 Availabi
     C                     Z-ADD*ZERO     WN0155           Day 16 Availabi
     C                     Z-ADD*ZERO     WN0156           Day 17 Availabi
     C                     Z-ADD*ZERO     WN0157           Day 18 Availabi
     C                     Z-ADD*ZERO     WN0158           Day 19 Availabi
     C                     Z-ADD*ZERO     WN0159           Day 20 Availabi
     C                     Z-ADD*ZERO     WN0160           Day 21 Availabi
     C                     Z-ADD*ZERO     WN0162           Day 1 Sched Shi
     C                     Z-ADD*ZERO     WN0163           Day 2 Sched Shi
     C                     Z-ADD*ZERO     WN0164           Day 3 Sched Shi
     C                     Z-ADD*ZERO     WN0165           Day 4 Sched Shi
     C                     Z-ADD*ZERO     WN0166           Day 5 Sched Shi
     C                     Z-ADD*ZERO     WN0167           Day 6 Sched Shi
     C                     Z-ADD*ZERO     WN0168           Day 7 Sched Shi
     C                     Z-ADD*ZERO     WN0169           Day 8 Sched Shi
     C                     Z-ADD*ZERO     WN0170           Day 9 Sched Shi
     C                     Z-ADD*ZERO     WN0171           Day 10 Sched Sh
     C                     Z-ADD*ZERO     WN0172           Day 11 Sched Sh
     C                     Z-ADD*ZERO     WN0173           Day 12 Sched Sh
     C                     Z-ADD*ZERO     WN0174           Day 13 Sched Sh
     C                     Z-ADD*ZERO     WN0175           Day 14 Sched Sh
     C                     Z-ADD*ZERO     WN0176           Day 15 Sched Sh
     C                     Z-ADD*ZERO     WN0177           Day 16 Sched Sh
     C                     Z-ADD*ZERO     WN0178           Day 17 Sched Sh
     C                     Z-ADD*ZERO     WN0179           Day 18 Sched Sh
     C                     Z-ADD*ZERO     WN0180           Day 19 Sched Sh
     C                     Z-ADD*ZERO     WN0181           Day 20 Sched Sh
     C                     Z-ADD*ZERO     WN0182           Day 21 Sched Sh
     C                     MOVEL*BLANK    WL0084           Day 1 Rsrvd Oth
     C                     MOVEL*BLANK    WL0085           Day 2 Rsrvd Oth
     C                     MOVEL*BLANK    WL0086           Day 3 Rsrvd Oth
     C                     MOVEL*BLANK    WL0087           Day 4 Rsrvd Oth
     C                     MOVEL*BLANK    WL0088           Day 5 Rsrvd Oth
     C                     MOVEL*BLANK    WL0089           Day 6 Rsrvd Oth
     C                     MOVEL*BLANK    WL0090           Day 7 Rsrvd Oth
     C                     MOVEL*BLANK    WL0091           Day 8 Rsrvd Oth
     C                     MOVEL*BLANK    WL0092           Day 9 Rsrvd Oth
     C                     MOVEL*BLANK    WL0093           Day 10 Rsrv Oth
     C                     MOVEL*BLANK    WL0094           Day 11 Rsrv Oth
     C                     MOVEL*BLANK    WL0095           Day 12 Rsrv Oth
     C                     MOVEL*BLANK    WL0096           Day 13 Rsrv Oth
     C                     MOVEL*BLANK    WL0097           Day 14 Rsrv Oth
     C                     MOVEL*BLANK    WL0098           Day 15 Rsrv Oth
     C                     MOVEL*BLANK    WL0099           Day 16 Rsrv Oth
     C                     MOVEL*BLANK    WL0100           Day 17 Rsrv Oth
     C                     MOVEL*BLANK    WL0101           Day 18 Rsrv Oth
     C                     MOVEL*BLANK    WL0102           Day 19 Rsrv Oth
     C                     MOVEL*BLANK    WL0103           Day 20 Rsrv Oth
     C                     MOVEL*BLANK    WL0104           Day 21 Rsrv Oth
     C                     Z-ADD*ZERO     WL0105           Order Hold Over
     C                     Z-ADD*ZERO     WL0106           Order Hold Over
     C                     MOVEL*BLANK    WN0183           Production Ware
     C                     MOVEL*BLANK    WN0184           Lot Tracking Fl
      * Rtv Prod Whse/Lot Trck RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWEAJCD    WL0211    P      Warehouse Code
     C                     EXSR SXRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0212    WN0183    P      Production Ware
     C                     MOVELWL0213    WN0184    P      Lot Tracking Fl
      * Rtv PA Inv/Hold Overs XF - PS Prod Item Schedule  * 
     C                     CALL 'PDS0XFR'              90  Rtv PA Inv/Hold
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0039    WQ0001  30       Company Number
     C                     PARM WL0040    WQ0002  70       Item Code
     C                     PARM WEAJCD    WQ0003  3        Warehouse Code
     C                     PARM WL0108    WQ0004 112       Unit Weight
     C                     PARM WL0109    WQ0005  52       Fresh Chilling
     C                     PARM WL0110    WQ0006  1        Piece Count Ite
     C                     PARM WL0111    WQ0007  70       Pieces Per Bag
     C                     PARM WL0112    WQ0008  70       Bags Per Unit
     C                     PARM WL0042    WQ0009  70       Avail Ship Date
     C                     PARM WL0043    WQ0010  70       Avail Ship Date
     C                     PARM WL0044    WQ0011  70       Avail Ship Date
     C                     PARM WL0045    WQ0012  70       Avail Ship Date
     C                     PARM WL0046    WQ0013  70       Avail Ship Date
     C                     PARM WL0047    WQ0014  70       Avail Ship Date
     C                     PARM WL0048    WQ0015  70       Avail Ship Date
     C                     PARM WL0049    WQ0016  70       Avail Ship Date
     C                     PARM WL0050    WQ0017  70       Avail Ship Date
     C                     PARM WL0051    WQ0018  70       Avail Ship Date
     C                     PARM WL0052    WQ0019  70       Avail Ship Date
     C                     PARM WL0053    WQ0020  70       Avail Ship Date
     C                     PARM WL0054    WQ0021  70       Avail Ship Date
     C                     PARM WL0055    WQ0022  70       Avail Ship Date
     C           WN0084    PARM WN0084    WQ0023  61       Day 1 Inventory
     C           WN0085    PARM WN0085    WQ0024  61       Day 2 Inventory
     C           WN0086    PARM WN0086    WQ0025  61       Day 3 Inventory
     C           WN0087    PARM WN0087    WQ0026  61       Day 4 Inventory
     C           WN0088    PARM WN0088    WQ0027  61       Day 5 Inventory
     C           WN0089    PARM WN0089    WQ0028  61       Day 6 Inventory
     C           WN0090    PARM WN0090    WQ0029  61       Day 7 Inventory
     C           WN0091    PARM WN0091    WQ0030  61       Day 8 Inventory
     C           WN0092    PARM WN0092    WQ0031  61       Day 9 Inventory
     C           WN0093    PARM WN0093    WQ0032  61       Day 10 Inventor
     C           WN0094    PARM WN0094    WQ0033  61       Day 11 Inventor
     C           WN0095    PARM WN0095    WQ0034  61       Day 12 Inventor
     C           WN0096    PARM WN0096    WQ0035  61       Day 13 Inventor
     C           WN0097    PARM WN0097    WQ0036  61       Day 14 Inventor
     C           WN0119    PARM WN0119    WQ0037  61       Day 1 Sales USR
     C           WN0120    PARM WN0120    WQ0038  61       Day 2 Sales USR
     C           WN0121    PARM WN0121    WQ0039  61       Day 3 Sales USR
     C           WN0122    PARM WN0122    WQ0040  61       Day 4 Sales USR
     C           WN0123    PARM WN0123    WQ0041  61       Day 5 Sales USR
     C           WN0124    PARM WN0124    WQ0042  61       Day 6 Sales USR
     C           WN0125    PARM WN0125    WQ0043  61       Day 7 Sales USR
     C           WL0105    PARM WL0105    WQ0044  50       Order Hold Over
     C           WL0106    PARM WL0106    WQ0045  50       Order Hold Over
     C                     PARM WN0184    WQ0046  1        Lot Tracking Fl
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDS0XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      * Rtv PA Production     RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0039    WL0214           Company Number
     C                     Z-ADDWL0040    WL0215           Item Code
     C                     MOVELWEAJCD    WL0216    P      Warehouse Code
     C                     Z-ADDWL0041    WL0217           PS Available Sh
     C                     Z-ADDWL0042    WL0218           Avail Ship Date
     C                     Z-ADDWL0043    WL0219           Avail Ship Date
     C                     Z-ADDWL0044    WL0220           Avail Ship Date
     C                     Z-ADDWL0045    WL0221           Avail Ship Date
     C                     Z-ADDWL0046    WL0222           Avail Ship Date
     C                     Z-ADDWL0047    WL0223           Avail Ship Date
     C                     Z-ADDWL0048    WL0224           Avail Ship Date
     C                     Z-ADDWL0049    WL0225           Avail Ship Date
     C                     Z-ADDWL0050    WL0226           Avail Ship Date
     C                     Z-ADDWL0051    WL0227           Avail Ship Date
     C                     Z-ADDWL0052    WL0228           Avail Ship Date
     C                     Z-ADDWL0053    WL0229           Avail Ship Date
     C                     Z-ADDWL0054    WL0230           Avail Ship Date
     C                     Z-ADDWL0055    WL0231           Avail Ship Date
     C                     Z-ADDWL0056    WL0232           Avail Ship Date
     C                     Z-ADDWL0057    WL0233           Avail Ship Date
     C                     Z-ADDWL0058    WL0234           Avail Ship Date
     C                     Z-ADDWL0059    WL0235           Avail Ship Date
     C                     Z-ADDWL0060    WL0236           Avail Ship Date
     C                     Z-ADDWL0061    WL0237           Avail Ship Date
     C                     Z-ADDWL0062    WL0238           Avail Ship Date
     C                     Z-ADDWN0098    WL0260           Day 1 Productio
     C                     Z-ADDWN0099    WL0261           Day 2 Productio
     C                     Z-ADDWN0100    WL0262           Day 3 Productio
     C                     Z-ADDWN0101    WL0263           Day 4 Productio
     C                     Z-ADDWN0102    WL0264           Day 5 Productio
     C                     Z-ADDWN0103    WL0265           Day 6 Productio
     C                     Z-ADDWN0104    WL0266           Day 7 Productio
     C                     Z-ADDWN0105    WL0267           Day 8 Productio
     C                     Z-ADDWN0106    WL0268           Day 9 Productio
     C                     Z-ADDWN0107    WL0269           Day 10 Producti
     C                     Z-ADDWN0108    WL0270           Day 11 Producti
     C                     Z-ADDWN0109    WL0271           Day 12 Producti
     C                     Z-ADDWN0110    WL0272           Day 13 Producti
     C                     Z-ADDWN0111    WL0273           Day 14 Producti
     C                     Z-ADDWN0112    WL0274           Day 15 Producti
     C                     Z-ADDWN0113    WL0275           Day 16 Producti
     C                     Z-ADDWN0114    WL0276           Day 17 Producti
     C                     Z-ADDWN0115    WL0277           Day 18 Producti
     C                     Z-ADDWN0116    WL0278           Day 19 Producti
     C                     Z-ADDWN0117    WL0279           Day 20 Producti
     C                     Z-ADDWN0118    WL0280           Day 21 Producti
     C                     Z-ADDWL0108    WL0281           Unit Weight
     C                     Z-ADDWL0109    WL0282           Fresh Chilling
     C                     MOVELWL0110    WL0283    P      Piece Count Ite
     C                     Z-ADDWL0111    WL0284           Pieces Per Bag
     C                     Z-ADDWL0112    WL0285           Bags Per Unit
     C                     EXSR SYRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0239    WL0063           USR Day 1
     C                     Z-ADDWL0240    WL0064           USR Day 2
     C                     Z-ADDWL0241    WL0065           USR Day 3
     C                     Z-ADDWL0242    WL0066           USR Day 4
     C                     Z-ADDWL0243    WL0067           USR Day 5
     C                     Z-ADDWL0244    WL0068           USR Day 6
     C                     Z-ADDWL0245    WL0069           USR Day 7
     C                     Z-ADDWL0246    WL0070           USR Day 8
     C                     Z-ADDWL0247    WL0071           USR Day 9
     C                     Z-ADDWL0248    WL0072           USR Day 10
     C                     Z-ADDWL0249    WL0073           USR Day 11
     C                     Z-ADDWL0250    WL0074           USR Day 12
     C                     Z-ADDWL0251    WL0075           USR Day 13
     C                     Z-ADDWL0252    WL0076           USR Day 14
     C                     Z-ADDWL0253    WL0077           USR Day 15
     C                     Z-ADDWL0254    WL0078           USR Day 16
     C                     Z-ADDWL0255    WL0079           USR Day 17
     C                     Z-ADDWL0256    WL0080           USR Day 18
     C                     Z-ADDWL0257    WL0081           USR Day 19
     C                     Z-ADDWL0258    WL0082           USR Day 20
     C                     Z-ADDWL0259    WL0083           USR Day 21
     C                     Z-ADDWL0260    WN0098           Day 1 Productio
     C                     Z-ADDWL0261    WN0099           Day 2 Productio
     C                     Z-ADDWL0262    WN0100           Day 3 Productio
     C                     Z-ADDWL0263    WN0101           Day 4 Productio
     C                     Z-ADDWL0264    WN0102           Day 5 Productio
     C                     Z-ADDWL0265    WN0103           Day 6 Productio
     C                     Z-ADDWL0266    WN0104           Day 7 Productio
     C                     Z-ADDWL0267    WN0105           Day 8 Productio
     C                     Z-ADDWL0268    WN0106           Day 9 Productio
     C                     Z-ADDWL0269    WN0107           Day 10 Producti
     C                     Z-ADDWL0270    WN0108           Day 11 Producti
     C                     Z-ADDWL0271    WN0109           Day 12 Producti
     C                     Z-ADDWL0272    WN0110           Day 13 Producti
     C                     Z-ADDWL0273    WN0111           Day 14 Producti
     C                     Z-ADDWL0274    WN0112           Day 15 Producti
     C                     Z-ADDWL0275    WN0113           Day 16 Producti
     C                     Z-ADDWL0276    WN0114           Day 17 Producti
     C                     Z-ADDWL0277    WN0115           Day 18 Producti
     C                     Z-ADDWL0278    WN0116           Day 19 Producti
     C                     Z-ADDWL0279    WN0117           Day 20 Producti
     C                     Z-ADDWL0280    WN0118           Day 21 Producti
      * Create array to be used for PA Calc when orders are processed.
      * CASE: WRK.BLANK EQ WRK.BLANK
     C           WUGSTX    IFEQ WUGSTX                     *IF
      * Clear PA Array
      * Del PA Work Array Roll RT - *Arrays  * 
     C                     EXSR SZRVGN
      * Day 1 Available
      * PAR.Day 1 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 1 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 1 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 1 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 1 Sales USR
     C           WN0084    ADD  WN0098    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0162    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0119    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0140           Day 1 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0042    WL0286           Avail Ship Date
     C                     Z-ADDWL0063    WL0287           Production Date
     C                     Z-ADDWN0084    WL0288           Quantity Invent
     C                     Z-ADDWN0098    WL0289           Quantity Produc
     C                     Z-ADDWN0162    WL0290           Quantity Sched
     C                     Z-ADDWN0119    WL0291           Quantity Sales
     C                     Z-ADDWN0140    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 2 Available
      * PAR.Day 2 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 2 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 2 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 2 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 2 Sales USR
     C           WN0085    ADD  WN0099    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0163    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0120    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0141           Day 2 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0043    WL0286           Avail Ship Date
     C                     Z-ADDWL0064    WL0287           Production Date
     C                     Z-ADDWN0085    WL0288           Quantity Invent
     C                     Z-ADDWN0099    WL0289           Quantity Produc
     C                     Z-ADDWN0163    WL0290           Quantity Sched
     C                     Z-ADDWN0120    WL0291           Quantity Sales
     C                     Z-ADDWN0141    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 3 Available
      * PAR.Day 3 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 3 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 3 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 3 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 3 Sales USR
     C           WN0086    ADD  WN0100    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0164    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0121    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0142           Day 3 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0044    WL0286           Avail Ship Date
     C                     Z-ADDWL0065    WL0287           Production Date
     C                     Z-ADDWN0086    WL0288           Quantity Invent
     C                     Z-ADDWN0100    WL0289           Quantity Produc
     C                     Z-ADDWN0164    WL0290           Quantity Sched
     C                     Z-ADDWN0121    WL0291           Quantity Sales
     C                     Z-ADDWN0142    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 4 Available
      * PAR.Day 4 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 4 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 4 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 4 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 4 Sales USR
     C           WN0087    ADD  WN0101    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0165    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0122    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0143           Day 4 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0045    WL0286           Avail Ship Date
     C                     Z-ADDWL0066    WL0287           Production Date
     C                     Z-ADDWN0087    WL0288           Quantity Invent
     C                     Z-ADDWN0101    WL0289           Quantity Produc
     C                     Z-ADDWN0165    WL0290           Quantity Sched
     C                     Z-ADDWN0122    WL0291           Quantity Sales
     C                     Z-ADDWN0143    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 5 Available
      * PAR.Day 5 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 5 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 5 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 5 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 5 Sales USR
     C           WN0088    ADD  WN0102    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0166    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0123    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0144           Day 5 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0046    WL0286           Avail Ship Date
     C                     Z-ADDWL0067    WL0287           Production Date
     C                     Z-ADDWN0088    WL0288           Quantity Invent
     C                     Z-ADDWN0102    WL0289           Quantity Produc
     C                     Z-ADDWN0166    WL0290           Quantity Sched
     C                     Z-ADDWN0123    WL0291           Quantity Sales
     C                     Z-ADDWN0144    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 6 Available
      * PAR.Day 6 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 6 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 6 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 6 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 6 Sales USR
     C           WN0089    ADD  WN0103    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0167    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0124    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0145           Day 6 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0047    WL0286           Avail Ship Date
     C                     Z-ADDWL0068    WL0287           Production Date
     C                     Z-ADDWN0089    WL0288           Quantity Invent
     C                     Z-ADDWN0103    WL0289           Quantity Produc
     C                     Z-ADDWN0167    WL0290           Quantity Sched
     C                     Z-ADDWN0124    WL0291           Quantity Sales
     C                     Z-ADDWN0145    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 7 Available
      * PAR.Day 7 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 7 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 7 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 7 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 7 Sales USR
     C           WN0090    ADD  WN0104    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0168    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0125    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0146           Day 7 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0048    WL0286           Avail Ship Date
     C                     Z-ADDWL0069    WL0287           Production Date
     C                     Z-ADDWN0090    WL0288           Quantity Invent
     C                     Z-ADDWN0104    WL0289           Quantity Produc
     C                     Z-ADDWN0168    WL0290           Quantity Sched
     C                     Z-ADDWN0125    WL0291           Quantity Sales
     C                     Z-ADDWN0146    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 8 Available
      * PAR.Day 8 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 8 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 8 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 8 Sales USR
     C           WN0105    SUB  WN0169    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0126    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0147           Day 8 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0049    WL0286           Avail Ship Date
     C                     Z-ADDWL0070    WL0287           Production Date
     C                     Z-ADDWUQINV    WL0288           Quantity Invent
     C                     Z-ADDWN0105    WL0289           Quantity Produc
     C                     Z-ADDWN0169    WL0290           Quantity Sched
     C                     Z-ADDWN0126    WL0291           Quantity Sales
     C                     Z-ADDWN0147    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 9 Available
      * PAR.Day 9 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 9 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 9 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 9 Sales USR
     C           WN0106    SUB  WN0170    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0127    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0148           Day 9 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0050    WL0286           Avail Ship Date
     C                     Z-ADDWL0071    WL0287           Production Date
     C                     Z-ADDWUQINV    WL0288           Quantity Invent
     C                     Z-ADDWN0106    WL0289           Quantity Produc
     C                     Z-ADDWN0170    WL0290           Quantity Sched
     C                     Z-ADDWN0127    WL0291           Quantity Sales
     C                     Z-ADDWN0148    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 10 Available
      * PAR.Day 10 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 10 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 10 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 10 Sales USR
     C           WN0107    SUB  WN0171    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0128    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0149           Day 10 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0051    WL0286           Avail Ship Date
     C                     Z-ADDWL0072    WL0287           Production Date
     C                     Z-ADDWUQINV    WL0288           Quantity Invent
     C                     Z-ADDWN0107    WL0289           Quantity Produc
     C                     Z-ADDWN0171    WL0290           Quantity Sched
     C                     Z-ADDWN0128    WL0291           Quantity Sales
     C                     Z-ADDWN0149    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 11 Available
      * PAR.Day 11 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 11 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 11 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 11 Sales USR
     C           WN0108    SUB  WN0172    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0129    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0150           Day 11 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0052    WL0286           Avail Ship Date
     C                     Z-ADDWL0073    WL0287           Production Date
     C                     Z-ADDWUQINV    WL0288           Quantity Invent
     C                     Z-ADDWN0108    WL0289           Quantity Produc
     C                     Z-ADDWN0172    WL0290           Quantity Sched
     C                     Z-ADDWN0129    WL0291           Quantity Sales
     C                     Z-ADDWN0150    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 12 Available
      * PAR.Day 12 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 12 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 12 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 12 Sales USR
     C           WN0109    SUB  WN0173    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0130    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0151           Day 12 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0053    WL0286           Avail Ship Date
     C                     Z-ADDWL0074    WL0287           Production Date
     C                     Z-ADDWUQINV    WL0288           Quantity Invent
     C                     Z-ADDWN0109    WL0289           Quantity Produc
     C                     Z-ADDWN0173    WL0290           Quantity Sched
     C                     Z-ADDWN0130    WL0291           Quantity Sales
     C                     Z-ADDWN0151    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 13 Available
      * PAR.Day 13 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 13 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 13 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 13 Sales USR
     C           WN0110    SUB  WN0174    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0131    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0152           Day 13 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0054    WL0286           Avail Ship Date
     C                     Z-ADDWL0075    WL0287           Production Date
     C                     Z-ADDWUQINV    WL0288           Quantity Invent
     C                     Z-ADDWN0110    WL0289           Quantity Produc
     C                     Z-ADDWN0174    WL0290           Quantity Sched
     C                     Z-ADDWN0131    WL0291           Quantity Sales
     C                     Z-ADDWN0152    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 14 Available
      * PAR.Day 14 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 14 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 14 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 14 Sales USR
     C           WN0111    SUB  WN0175    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0132    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0153           Day 14 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0055    WL0286           Avail Ship Date
     C                     Z-ADDWL0076    WL0287           Production Date
     C                     Z-ADDWUQINV    WL0288           Quantity Invent
     C                     Z-ADDWN0111    WL0289           Quantity Produc
     C                     Z-ADDWN0175    WL0290           Quantity Sched
     C                     Z-ADDWN0132    WL0291           Quantity Sales
     C                     Z-ADDWN0153    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 15 Available
      * PAR.Day 15 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 15 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 15 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 15 Sales USR
     C           WN0112    SUB  WN0176    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0133    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0154           Day 15 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0056    WL0286           Avail Ship Date
     C                     Z-ADDWL0077    WL0287           Production Date
     C                     Z-ADDWUQINV    WL0288           Quantity Invent
     C                     Z-ADDWN0112    WL0289           Quantity Produc
     C                     Z-ADDWN0176    WL0290           Quantity Sched
     C                     Z-ADDWN0133    WL0291           Quantity Sales
     C                     Z-ADDWN0154    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 16 Available
      * PAR.Day 16 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 16 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 16 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 16 Sales USR
     C           WN0113    SUB  WN0177    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0134    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0155           Day 16 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0057    WL0286           Avail Ship Date
     C                     Z-ADDWL0078    WL0287           Production Date
     C                     Z-ADDWUQINV    WL0288           Quantity Invent
     C                     Z-ADDWN0113    WL0289           Quantity Produc
     C                     Z-ADDWN0177    WL0290           Quantity Sched
     C                     Z-ADDWN0134    WL0291           Quantity Sales
     C                     Z-ADDWN0155    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 17 Available
      * PAR.Day 17 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 17 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 17 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 17 Sales USR
     C           WN0114    SUB  WN0178    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0135    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0156           Day 17 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0058    WL0286           Avail Ship Date
     C                     Z-ADDWL0079    WL0287           Production Date
     C                     Z-ADDWUQINV    WL0288           Quantity Invent
     C                     Z-ADDWN0114    WL0289           Quantity Produc
     C                     Z-ADDWN0178    WL0290           Quantity Sched
     C                     Z-ADDWN0135    WL0291           Quantity Sales
     C                     Z-ADDWN0156    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 18 Available
      * PAR.Day 18 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 18 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 18 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 18 Sales USR
     C           WN0115    SUB  WN0179    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0136    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0157           Day 18 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0059    WL0286           Avail Ship Date
     C                     Z-ADDWL0080    WL0287           Production Date
     C                     Z-ADDWUQINV    WL0288           Quantity Invent
     C                     Z-ADDWN0115    WL0289           Quantity Produc
     C                     Z-ADDWN0179    WL0290           Quantity Sched
     C                     Z-ADDWN0136    WL0291           Quantity Sales
     C                     Z-ADDWN0157    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 19 Available
      * PAR.Day 19 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 19 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 19 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 19 Sales USR
     C           WN0116    SUB  WN0180    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0137    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0158           Day 19 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0060    WL0286           Avail Ship Date
     C                     Z-ADDWL0081    WL0287           Production Date
     C                     Z-ADDWUQINV    WL0288           Quantity Invent
     C                     Z-ADDWN0116    WL0289           Quantity Produc
     C                     Z-ADDWN0180    WL0290           Quantity Sched
     C                     Z-ADDWN0137    WL0291           Quantity Sales
     C                     Z-ADDWN0158    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 20 Available
      * PAR.Day 20 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 20 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 20 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 20 Sales USR
     C           WN0117    SUB  WN0181    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0138    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0159           Day 20 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0061    WL0286           Avail Ship Date
     C                     Z-ADDWL0082    WL0287           Production Date
     C                     Z-ADDWUQINV    WL0288           Quantity Invent
     C                     Z-ADDWN0117    WL0289           Quantity Produc
     C                     Z-ADDWN0181    WL0290           Quantity Sched
     C                     Z-ADDWN0138    WL0291           Quantity Sales
     C                     Z-ADDWN0159    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 21 Available
      * PAR.Day 21 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 21 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 21 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 21 Sales USR
     C           WN0118    SUB  WN0182    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0139    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0160           Day 21 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0062    WL0286           Avail Ship Date
     C                     Z-ADDWL0083    WL0287           Production Date
     C                     Z-ADDWUQINV    WL0288           Quantity Invent
     C                     Z-ADDWN0118    WL0289           Quantity Produc
     C                     Z-ADDWN0182    WL0290           Quantity Sched
     C                     Z-ADDWN0139    WL0291           Quantity Sales
     C                     Z-ADDWN0160    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
     C                     END                             *FI
      * Rtv Sched Ship/Clc PA RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0039    WL0294           Company Number
     C                     Z-ADDWUC4NB    WL0295           Order Number
     C                     Z-ADDWL0040    WL0296           Item Code
     C                     MOVELWEAJCD    WL0297    P      Warehouse Code
     C                     Z-ADDWL0041    WL0298           Scheduled Ship
     C                     Z-ADDWL0062    WL0299           Avail Ship Date
     C                     MOVELWN0183    WL0300    P      Production Ware
     C                     MOVELWN0184    WL0301    P      Lot Tracking Fl
     C                     EXSR TCRVGN
      * If this is a production whse, then reserve other whse orders.
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Production Warehouse Code EQ PAR.Warehouse Code
      *   |- c2    : PAR.Production Warehouse Code is Warehouse Code Blan
      *   '-
     C           WN0183    IFEQ WEAJCD                     *IF
     C           WN0183    OREQ *BLANK                     *OR
      * Rtv Rsrvd Other Whse  RT - PD Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0039    WL0356           Company Number
     C                     Z-ADDWL0040    WL0357           Item Code
     C                     MOVELWEAJCD    WL0358    P      Warehouse Code
     C                     Z-ADDWL0041    WL0359           Scheduled Ship
     C                     Z-ADDWL0062    WL0360           Avail Ship Date
     C                     EXSR TORVGN
     C                     END                             *FI
      * Retrieve Sched Ship/Allocation/Available from PA Array
      * CASE: WRK.BLANK EQ WRK.BLANK
     C           WUGSTX    IFEQ WUGSTX                     *IF
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0042    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0162           Quantity Sched
     C                     Z-ADDWL0363    WN0119           Quantity Sales
     C                     Z-ADDWL0364    WN0140           Quantity Availa
     C                     MOVELWL0365    WL0084    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0043    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0163           Quantity Sched
     C                     Z-ADDWL0363    WN0120           Quantity Sales
     C                     Z-ADDWL0364    WN0141           Quantity Availa
     C                     MOVELWL0365    WL0085    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0044    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0164           Quantity Sched
     C                     Z-ADDWL0363    WN0121           Quantity Sales
     C                     Z-ADDWL0364    WN0142           Quantity Availa
     C                     MOVELWL0365    WL0086    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0045    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0165           Quantity Sched
     C                     Z-ADDWL0363    WN0122           Quantity Sales
     C                     Z-ADDWL0364    WN0143           Quantity Availa
     C                     MOVELWL0365    WL0087    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0046    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0166           Quantity Sched
     C                     Z-ADDWL0363    WN0123           Quantity Sales
     C                     Z-ADDWL0364    WN0144           Quantity Availa
     C                     MOVELWL0365    WL0088    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0047    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0167           Quantity Sched
     C                     Z-ADDWL0363    WN0124           Quantity Sales
     C                     Z-ADDWL0364    WN0145           Quantity Availa
     C                     MOVELWL0365    WL0089    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0048    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0168           Quantity Sched
     C                     Z-ADDWL0363    WN0125           Quantity Sales
     C                     Z-ADDWL0364    WN0146           Quantity Availa
     C                     MOVELWL0365    WL0090    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0049    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0169           Quantity Sched
     C                     Z-ADDWL0363    WN0126           Quantity Sales
     C                     Z-ADDWL0364    WN0147           Quantity Availa
     C                     MOVELWL0365    WL0091    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0050    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0170           Quantity Sched
     C                     Z-ADDWL0363    WN0127           Quantity Sales
     C                     Z-ADDWL0364    WN0148           Quantity Availa
     C                     MOVELWL0365    WL0092    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0051    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0171           Quantity Sched
     C                     Z-ADDWL0363    WN0128           Quantity Sales
     C                     Z-ADDWL0364    WN0149           Quantity Availa
     C                     MOVELWL0365    WL0093    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0052    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0172           Quantity Sched
     C                     Z-ADDWL0363    WN0129           Quantity Sales
     C                     Z-ADDWL0364    WN0150           Quantity Availa
     C                     MOVELWL0365    WL0094    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0053    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0173           Quantity Sched
     C                     Z-ADDWL0363    WN0130           Quantity Sales
     C                     Z-ADDWL0364    WN0151           Quantity Availa
     C                     MOVELWL0365    WL0095    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0054    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0174           Quantity Sched
     C                     Z-ADDWL0363    WN0131           Quantity Sales
     C                     Z-ADDWL0364    WN0152           Quantity Availa
     C                     MOVELWL0365    WL0096    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0055    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0175           Quantity Sched
     C                     Z-ADDWL0363    WN0132           Quantity Sales
     C                     Z-ADDWL0364    WN0153           Quantity Availa
     C                     MOVELWL0365    WL0097    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0056    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0176           Quantity Sched
     C                     Z-ADDWL0363    WN0133           Quantity Sales
     C                     Z-ADDWL0364    WN0154           Quantity Availa
     C                     MOVELWL0365    WL0098    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0057    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0177           Quantity Sched
     C                     Z-ADDWL0363    WN0134           Quantity Sales
     C                     Z-ADDWL0364    WN0155           Quantity Availa
     C                     MOVELWL0365    WL0099    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0058    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0178           Quantity Sched
     C                     Z-ADDWL0363    WN0135           Quantity Sales
     C                     Z-ADDWL0364    WN0156           Quantity Availa
     C                     MOVELWL0365    WL0100    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0059    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0179           Quantity Sched
     C                     Z-ADDWL0363    WN0136           Quantity Sales
     C                     Z-ADDWL0364    WN0157           Quantity Availa
     C                     MOVELWL0365    WL0101    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0060    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0180           Quantity Sched
     C                     Z-ADDWL0363    WN0137           Quantity Sales
     C                     Z-ADDWL0364    WN0158           Quantity Availa
     C                     MOVELWL0365    WL0102    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0061    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0181           Quantity Sched
     C                     Z-ADDWL0363    WN0138           Quantity Sales
     C                     Z-ADDWL0364    WN0159           Quantity Availa
     C                     MOVELWL0365    WL0103    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0062    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0182           Quantity Sched
     C                     Z-ADDWL0363    WN0139           Quantity Sales
     C                     Z-ADDWL0364    WN0160           Quantity Availa
     C                     MOVELWL0365    WL0104    P      Reserved for Ot
     C                     END                             *FI
     C                     MOVEL'Y'       WN0161           Status - Y or N
     C                     ELSE
      * CASE: *OTHERWISE
      * If whse code is blank & whse type isn't, calculate for that whse
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Warehouse Code is Warehouse Code Blank
      *   |- c2    : PAR.Warehouse Type EQ DB1.Warehouse Type
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0038    IFEQ *BLANK                     *IF
     C           WL0037    IFEQ WEWPST                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(PAR) WL0084' defaulted for 'Day 1 Rsrvd Other Whse Fl'.
      * Field '(PAR) WL0085' defaulted for 'Day 2 Rsrvd Other Whse Fl'.
      * Field '(PAR) WL0086' defaulted for 'Day 3 Rsrvd Other Whse Fl'.
      * Field '(PAR) WL0087' defaulted for 'Day 4 Rsrvd Other Whse Fl'.
      * Field '(PAR) WL0088' defaulted for 'Day 5 Rsrvd Other Whse Fl'.
      * Field '(PAR) WL0089' defaulted for 'Day 6 Rsrvd Other Whse Fl'.
      * Field '(PAR) WL0090' defaulted for 'Day 7 Rsrvd Other Whse Fl'.
      * Field '(PAR) WL0091' defaulted for 'Day 8 Rsrvd Other Whse Fl'.
      * Field '(PAR) WL0092' defaulted for 'Day 9 Rsrvd Other Whse Fl'.
      * Field '(PAR) WL0093' defaulted for 'Day 10 Rsrv Other Whse Fl'.
      * Field '(PAR) WL0094' defaulted for 'Day 11 Rsrv Other Whse Fl'.
      * Field '(PAR) WL0095' defaulted for 'Day 12 Rsrv Other Whse Fl'.
      * Field '(PAR) WL0096' defaulted for 'Day 13 Rsrv Other Whse Fl'.
      * Field '(PAR) WL0097' defaulted for 'Day 14 Rsrv Other Whse Fl'.
      * Field '(PAR) WL0098' defaulted for 'Day 15 Rsrv Other Whse Fl'.
      * Field '(PAR) WL0099' defaulted for 'Day 16 Rsrv Other Whse Fl'.
      * Field '(PAR) WL0100' defaulted for 'Day 17 Rsrv Other Whse Fl'.
      * Field '(PAR) WL0101' defaulted for 'Day 18 Rsrv Other Whse Fl'.
      * Field '(PAR) WL0102' defaulted for 'Day 19 Rsrv Other Whse Fl'.
      * Field '(PAR) WL0103' defaulted for 'Day 20 Rsrv Other Whse Fl'.
      * Field '(PAR) WL0104' defaulted for 'Day 21 Rsrv Other Whse Fl'.
      *
     C                     MOVEL*BLANK    WN0228  3        Production Ware
     C                     MOVEL*BLANK    WN0229  1        Lot Tracking Fl
      *
      * Rtv PA For 21 Days    IF
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0063           USR Day 1
     C                     Z-ADD*ZERO     WL0064           USR Day 2
     C                     Z-ADD*ZERO     WL0065           USR Day 3
     C                     Z-ADD*ZERO     WL0066           USR Day 4
     C                     Z-ADD*ZERO     WL0067           USR Day 5
     C                     Z-ADD*ZERO     WL0068           USR Day 6
     C                     Z-ADD*ZERO     WL0069           USR Day 7
     C                     Z-ADD*ZERO     WL0070           USR Day 8
     C                     Z-ADD*ZERO     WL0071           USR Day 9
     C                     Z-ADD*ZERO     WL0072           USR Day 10
     C                     Z-ADD*ZERO     WL0073           USR Day 11
     C                     Z-ADD*ZERO     WL0074           USR Day 12
     C                     Z-ADD*ZERO     WL0075           USR Day 13
     C                     Z-ADD*ZERO     WL0076           USR Day 14
     C                     Z-ADD*ZERO     WL0077           USR Day 15
     C                     Z-ADD*ZERO     WL0078           USR Day 16
     C                     Z-ADD*ZERO     WL0079           USR Day 17
     C                     Z-ADD*ZERO     WL0080           USR Day 18
     C                     Z-ADD*ZERO     WL0081           USR Day 19
     C                     Z-ADD*ZERO     WL0082           USR Day 20
     C                     Z-ADD*ZERO     WL0083           USR Day 21
     C                     Z-ADD*ZERO     WN0084           Day 1 Inventory
     C                     Z-ADD*ZERO     WN0085           Day 2 Inventory
     C                     Z-ADD*ZERO     WN0086           Day 3 Inventory
     C                     Z-ADD*ZERO     WN0087           Day 4 Inventory
     C                     Z-ADD*ZERO     WN0088           Day 5 Inventory
     C                     Z-ADD*ZERO     WN0089           Day 6 Inventory
     C                     Z-ADD*ZERO     WN0090           Day 7 Inventory
     C                     Z-ADD*ZERO     WN0091           Day 8 Inventory
     C                     Z-ADD*ZERO     WN0092           Day 9 Inventory
     C                     Z-ADD*ZERO     WN0093           Day 10 Inventor
     C                     Z-ADD*ZERO     WN0094           Day 11 Inventor
     C                     Z-ADD*ZERO     WN0095           Day 12 Inventor
     C                     Z-ADD*ZERO     WN0096           Day 13 Inventor
     C                     Z-ADD*ZERO     WN0097           Day 14 Inventor
     C                     Z-ADD*ZERO     WN0098           Day 1 Productio
     C                     Z-ADD*ZERO     WN0099           Day 2 Productio
     C                     Z-ADD*ZERO     WN0100           Day 3 Productio
     C                     Z-ADD*ZERO     WN0101           Day 4 Productio
     C                     Z-ADD*ZERO     WN0102           Day 5 Productio
     C                     Z-ADD*ZERO     WN0103           Day 6 Productio
     C                     Z-ADD*ZERO     WN0104           Day 7 Productio
     C                     Z-ADD*ZERO     WN0105           Day 8 Productio
     C                     Z-ADD*ZERO     WN0106           Day 9 Productio
     C                     Z-ADD*ZERO     WN0107           Day 10 Producti
     C                     Z-ADD*ZERO     WN0108           Day 11 Producti
     C                     Z-ADD*ZERO     WN0109           Day 12 Producti
     C                     Z-ADD*ZERO     WN0110           Day 13 Producti
     C                     Z-ADD*ZERO     WN0111           Day 14 Producti
     C                     Z-ADD*ZERO     WN0112           Day 15 Producti
     C                     Z-ADD*ZERO     WN0113           Day 16 Producti
     C                     Z-ADD*ZERO     WN0114           Day 17 Producti
     C                     Z-ADD*ZERO     WN0115           Day 18 Producti
     C                     Z-ADD*ZERO     WN0116           Day 19 Producti
     C                     Z-ADD*ZERO     WN0117           Day 20 Producti
     C                     Z-ADD*ZERO     WN0118           Day 21 Producti
     C                     Z-ADD*ZERO     WN0119           Day 1 Sales USR
     C                     Z-ADD*ZERO     WN0120           Day 2 Sales USR
     C                     Z-ADD*ZERO     WN0121           Day 3 Sales USR
     C                     Z-ADD*ZERO     WN0122           Day 4 Sales USR
     C                     Z-ADD*ZERO     WN0123           Day 5 Sales USR
     C                     Z-ADD*ZERO     WN0124           Day 6 Sales USR
     C                     Z-ADD*ZERO     WN0125           Day 7 Sales USR
     C                     Z-ADD*ZERO     WN0126           Day 8 Sales USR
     C                     Z-ADD*ZERO     WN0127           Day 9 Sales USR
     C                     Z-ADD*ZERO     WN0128           Day 10 Sales US
     C                     Z-ADD*ZERO     WN0129           Day 11 Sales US
     C                     Z-ADD*ZERO     WN0130           Day 12 Sales US
     C                     Z-ADD*ZERO     WN0131           Day 13 Sales US
     C                     Z-ADD*ZERO     WN0132           Day 14 Sales US
     C                     Z-ADD*ZERO     WN0133           Day 15 Sales US
     C                     Z-ADD*ZERO     WN0134           Day 16 Sales US
     C                     Z-ADD*ZERO     WN0135           Day 17 Sales US
     C                     Z-ADD*ZERO     WN0136           Day 18 Sales US
     C                     Z-ADD*ZERO     WN0137           Day 19 Sales US
     C                     Z-ADD*ZERO     WN0138           Day 20 Sales US
     C                     Z-ADD*ZERO     WN0139           Day 21 Sales US
     C                     Z-ADD*ZERO     WN0140           Day 1 Availabil
     C                     Z-ADD*ZERO     WN0141           Day 2 Availabil
     C                     Z-ADD*ZERO     WN0142           Day 3 Availabil
     C                     Z-ADD*ZERO     WN0143           Day 4 Availabil
     C                     Z-ADD*ZERO     WN0144           Day 5 Availabil
     C                     Z-ADD*ZERO     WN0145           Day 6 Availabil
     C                     Z-ADD*ZERO     WN0146           Day 7 Availabil
     C                     Z-ADD*ZERO     WN0147           Day 8 Availabil
     C                     Z-ADD*ZERO     WN0148           Day 9 Availabil
     C                     Z-ADD*ZERO     WN0149           Day 10 Availabi
     C                     Z-ADD*ZERO     WN0150           Day 11 Availabi
     C                     Z-ADD*ZERO     WN0151           Day 12 Availabi
     C                     Z-ADD*ZERO     WN0152           Day 13 Availabi
     C                     Z-ADD*ZERO     WN0153           Day 14 Availabi
     C                     Z-ADD*ZERO     WN0154           Day 15 Availabi
     C                     Z-ADD*ZERO     WN0155           Day 16 Availabi
     C                     Z-ADD*ZERO     WN0156           Day 17 Availabi
     C                     Z-ADD*ZERO     WN0157           Day 18 Availabi
     C                     Z-ADD*ZERO     WN0158           Day 19 Availabi
     C                     Z-ADD*ZERO     WN0159           Day 20 Availabi
     C                     Z-ADD*ZERO     WN0160           Day 21 Availabi
     C                     Z-ADD*ZERO     WN0162           Day 1 Sched Shi
     C                     Z-ADD*ZERO     WN0163           Day 2 Sched Shi
     C                     Z-ADD*ZERO     WN0164           Day 3 Sched Shi
     C                     Z-ADD*ZERO     WN0165           Day 4 Sched Shi
     C                     Z-ADD*ZERO     WN0166           Day 5 Sched Shi
     C                     Z-ADD*ZERO     WN0167           Day 6 Sched Shi
     C                     Z-ADD*ZERO     WN0168           Day 7 Sched Shi
     C                     Z-ADD*ZERO     WN0169           Day 8 Sched Shi
     C                     Z-ADD*ZERO     WN0170           Day 9 Sched Shi
     C                     Z-ADD*ZERO     WN0171           Day 10 Sched Sh
     C                     Z-ADD*ZERO     WN0172           Day 11 Sched Sh
     C                     Z-ADD*ZERO     WN0173           Day 12 Sched Sh
     C                     Z-ADD*ZERO     WN0174           Day 13 Sched Sh
     C                     Z-ADD*ZERO     WN0175           Day 14 Sched Sh
     C                     Z-ADD*ZERO     WN0176           Day 15 Sched Sh
     C                     Z-ADD*ZERO     WN0177           Day 16 Sched Sh
     C                     Z-ADD*ZERO     WN0178           Day 17 Sched Sh
     C                     Z-ADD*ZERO     WN0179           Day 18 Sched Sh
     C                     Z-ADD*ZERO     WN0180           Day 19 Sched Sh
     C                     Z-ADD*ZERO     WN0181           Day 20 Sched Sh
     C                     Z-ADD*ZERO     WN0182           Day 21 Sched Sh
     C                     MOVEL*BLANK    WL0084           Day 1 Rsrvd Oth
     C                     MOVEL*BLANK    WL0085           Day 2 Rsrvd Oth
     C                     MOVEL*BLANK    WL0086           Day 3 Rsrvd Oth
     C                     MOVEL*BLANK    WL0087           Day 4 Rsrvd Oth
     C                     MOVEL*BLANK    WL0088           Day 5 Rsrvd Oth
     C                     MOVEL*BLANK    WL0089           Day 6 Rsrvd Oth
     C                     MOVEL*BLANK    WL0090           Day 7 Rsrvd Oth
     C                     MOVEL*BLANK    WL0091           Day 8 Rsrvd Oth
     C                     MOVEL*BLANK    WL0092           Day 9 Rsrvd Oth
     C                     MOVEL*BLANK    WL0093           Day 10 Rsrv Oth
     C                     MOVEL*BLANK    WL0094           Day 11 Rsrv Oth
     C                     MOVEL*BLANK    WL0095           Day 12 Rsrv Oth
     C                     MOVEL*BLANK    WL0096           Day 13 Rsrv Oth
     C                     MOVEL*BLANK    WL0097           Day 14 Rsrv Oth
     C                     MOVEL*BLANK    WL0098           Day 15 Rsrv Oth
     C                     MOVEL*BLANK    WL0099           Day 16 Rsrv Oth
     C                     MOVEL*BLANK    WL0100           Day 17 Rsrv Oth
     C                     MOVEL*BLANK    WL0101           Day 18 Rsrv Oth
     C                     MOVEL*BLANK    WL0102           Day 19 Rsrv Oth
     C                     MOVEL*BLANK    WL0103           Day 20 Rsrv Oth
     C                     MOVEL*BLANK    WL0104           Day 21 Rsrv Oth
     C                     Z-ADD*ZERO     WL0105           Order Hold Over
     C                     Z-ADD*ZERO     WL0106           Order Hold Over
     C                     MOVEL*BLANK    WN0228           Production Ware
     C                     MOVEL*BLANK    WN0229           Lot Tracking Fl
      * Rtv Prod Whse/Lot Trck RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWEAJCD    WL0211    P      Warehouse Code
     C                     EXSR SXRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0212    WN0228    P      Production Ware
     C                     MOVELWL0213    WN0229    P      Lot Tracking Fl
      * Rtv PA Inv/Hold Overs XF - PS Prod Item Schedule  * 
     C                     CALL 'PDS0XFR'              90  Rtv PA Inv/Hold
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0039    WQ0047  30       Company Number
     C                     PARM WL0040    WQ0048  70       Item Code
     C                     PARM WEAJCD    WQ0049  3        Warehouse Code
     C                     PARM WL0108    WQ0050 112       Unit Weight
     C                     PARM WL0109    WQ0051  52       Fresh Chilling
     C                     PARM WL0110    WQ0052  1        Piece Count Ite
     C                     PARM WL0111    WQ0053  70       Pieces Per Bag
     C                     PARM WL0112    WQ0054  70       Bags Per Unit
     C                     PARM WL0042    WQ0055  70       Avail Ship Date
     C                     PARM WL0043    WQ0056  70       Avail Ship Date
     C                     PARM WL0044    WQ0057  70       Avail Ship Date
     C                     PARM WL0045    WQ0058  70       Avail Ship Date
     C                     PARM WL0046    WQ0059  70       Avail Ship Date
     C                     PARM WL0047    WQ0060  70       Avail Ship Date
     C                     PARM WL0048    WQ0061  70       Avail Ship Date
     C                     PARM WL0049    WQ0062  70       Avail Ship Date
     C                     PARM WL0050    WQ0063  70       Avail Ship Date
     C                     PARM WL0051    WQ0064  70       Avail Ship Date
     C                     PARM WL0052    WQ0065  70       Avail Ship Date
     C                     PARM WL0053    WQ0066  70       Avail Ship Date
     C                     PARM WL0054    WQ0067  70       Avail Ship Date
     C                     PARM WL0055    WQ0068  70       Avail Ship Date
     C           WN0084    PARM WN0084    WQ0069  61       Day 1 Inventory
     C           WN0085    PARM WN0085    WQ0070  61       Day 2 Inventory
     C           WN0086    PARM WN0086    WQ0071  61       Day 3 Inventory
     C           WN0087    PARM WN0087    WQ0072  61       Day 4 Inventory
     C           WN0088    PARM WN0088    WQ0073  61       Day 5 Inventory
     C           WN0089    PARM WN0089    WQ0074  61       Day 6 Inventory
     C           WN0090    PARM WN0090    WQ0075  61       Day 7 Inventory
     C           WN0091    PARM WN0091    WQ0076  61       Day 8 Inventory
     C           WN0092    PARM WN0092    WQ0077  61       Day 9 Inventory
     C           WN0093    PARM WN0093    WQ0078  61       Day 10 Inventor
     C           WN0094    PARM WN0094    WQ0079  61       Day 11 Inventor
     C           WN0095    PARM WN0095    WQ0080  61       Day 12 Inventor
     C           WN0096    PARM WN0096    WQ0081  61       Day 13 Inventor
     C           WN0097    PARM WN0097    WQ0082  61       Day 14 Inventor
     C           WN0119    PARM WN0119    WQ0083  61       Day 1 Sales USR
     C           WN0120    PARM WN0120    WQ0084  61       Day 2 Sales USR
     C           WN0121    PARM WN0121    WQ0085  61       Day 3 Sales USR
     C           WN0122    PARM WN0122    WQ0086  61       Day 4 Sales USR
     C           WN0123    PARM WN0123    WQ0087  61       Day 5 Sales USR
     C           WN0124    PARM WN0124    WQ0088  61       Day 6 Sales USR
     C           WN0125    PARM WN0125    WQ0089  61       Day 7 Sales USR
     C           WL0105    PARM WL0105    WQ0090  50       Order Hold Over
     C           WL0106    PARM WL0106    WQ0091  50       Order Hold Over
     C                     PARM WN0229    WQ0092  1        Lot Tracking Fl
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDS0XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      * Rtv PA Production     RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0039    WL0214           Company Number
     C                     Z-ADDWL0040    WL0215           Item Code
     C                     MOVELWEAJCD    WL0216    P      Warehouse Code
     C                     Z-ADDWL0041    WL0217           PS Available Sh
     C                     Z-ADDWL0042    WL0218           Avail Ship Date
     C                     Z-ADDWL0043    WL0219           Avail Ship Date
     C                     Z-ADDWL0044    WL0220           Avail Ship Date
     C                     Z-ADDWL0045    WL0221           Avail Ship Date
     C                     Z-ADDWL0046    WL0222           Avail Ship Date
     C                     Z-ADDWL0047    WL0223           Avail Ship Date
     C                     Z-ADDWL0048    WL0224           Avail Ship Date
     C                     Z-ADDWL0049    WL0225           Avail Ship Date
     C                     Z-ADDWL0050    WL0226           Avail Ship Date
     C                     Z-ADDWL0051    WL0227           Avail Ship Date
     C                     Z-ADDWL0052    WL0228           Avail Ship Date
     C                     Z-ADDWL0053    WL0229           Avail Ship Date
     C                     Z-ADDWL0054    WL0230           Avail Ship Date
     C                     Z-ADDWL0055    WL0231           Avail Ship Date
     C                     Z-ADDWL0056    WL0232           Avail Ship Date
     C                     Z-ADDWL0057    WL0233           Avail Ship Date
     C                     Z-ADDWL0058    WL0234           Avail Ship Date
     C                     Z-ADDWL0059    WL0235           Avail Ship Date
     C                     Z-ADDWL0060    WL0236           Avail Ship Date
     C                     Z-ADDWL0061    WL0237           Avail Ship Date
     C                     Z-ADDWL0062    WL0238           Avail Ship Date
     C                     Z-ADDWN0098    WL0260           Day 1 Productio
     C                     Z-ADDWN0099    WL0261           Day 2 Productio
     C                     Z-ADDWN0100    WL0262           Day 3 Productio
     C                     Z-ADDWN0101    WL0263           Day 4 Productio
     C                     Z-ADDWN0102    WL0264           Day 5 Productio
     C                     Z-ADDWN0103    WL0265           Day 6 Productio
     C                     Z-ADDWN0104    WL0266           Day 7 Productio
     C                     Z-ADDWN0105    WL0267           Day 8 Productio
     C                     Z-ADDWN0106    WL0268           Day 9 Productio
     C                     Z-ADDWN0107    WL0269           Day 10 Producti
     C                     Z-ADDWN0108    WL0270           Day 11 Producti
     C                     Z-ADDWN0109    WL0271           Day 12 Producti
     C                     Z-ADDWN0110    WL0272           Day 13 Producti
     C                     Z-ADDWN0111    WL0273           Day 14 Producti
     C                     Z-ADDWN0112    WL0274           Day 15 Producti
     C                     Z-ADDWN0113    WL0275           Day 16 Producti
     C                     Z-ADDWN0114    WL0276           Day 17 Producti
     C                     Z-ADDWN0115    WL0277           Day 18 Producti
     C                     Z-ADDWN0116    WL0278           Day 19 Producti
     C                     Z-ADDWN0117    WL0279           Day 20 Producti
     C                     Z-ADDWN0118    WL0280           Day 21 Producti
     C                     Z-ADDWL0108    WL0281           Unit Weight
     C                     Z-ADDWL0109    WL0282           Fresh Chilling
     C                     MOVELWL0110    WL0283    P      Piece Count Ite
     C                     Z-ADDWL0111    WL0284           Pieces Per Bag
     C                     Z-ADDWL0112    WL0285           Bags Per Unit
     C                     EXSR SYRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0239    WL0063           USR Day 1
     C                     Z-ADDWL0240    WL0064           USR Day 2
     C                     Z-ADDWL0241    WL0065           USR Day 3
     C                     Z-ADDWL0242    WL0066           USR Day 4
     C                     Z-ADDWL0243    WL0067           USR Day 5
     C                     Z-ADDWL0244    WL0068           USR Day 6
     C                     Z-ADDWL0245    WL0069           USR Day 7
     C                     Z-ADDWL0246    WL0070           USR Day 8
     C                     Z-ADDWL0247    WL0071           USR Day 9
     C                     Z-ADDWL0248    WL0072           USR Day 10
     C                     Z-ADDWL0249    WL0073           USR Day 11
     C                     Z-ADDWL0250    WL0074           USR Day 12
     C                     Z-ADDWL0251    WL0075           USR Day 13
     C                     Z-ADDWL0252    WL0076           USR Day 14
     C                     Z-ADDWL0253    WL0077           USR Day 15
     C                     Z-ADDWL0254    WL0078           USR Day 16
     C                     Z-ADDWL0255    WL0079           USR Day 17
     C                     Z-ADDWL0256    WL0080           USR Day 18
     C                     Z-ADDWL0257    WL0081           USR Day 19
     C                     Z-ADDWL0258    WL0082           USR Day 20
     C                     Z-ADDWL0259    WL0083           USR Day 21
     C                     Z-ADDWL0260    WN0098           Day 1 Productio
     C                     Z-ADDWL0261    WN0099           Day 2 Productio
     C                     Z-ADDWL0262    WN0100           Day 3 Productio
     C                     Z-ADDWL0263    WN0101           Day 4 Productio
     C                     Z-ADDWL0264    WN0102           Day 5 Productio
     C                     Z-ADDWL0265    WN0103           Day 6 Productio
     C                     Z-ADDWL0266    WN0104           Day 7 Productio
     C                     Z-ADDWL0267    WN0105           Day 8 Productio
     C                     Z-ADDWL0268    WN0106           Day 9 Productio
     C                     Z-ADDWL0269    WN0107           Day 10 Producti
     C                     Z-ADDWL0270    WN0108           Day 11 Producti
     C                     Z-ADDWL0271    WN0109           Day 12 Producti
     C                     Z-ADDWL0272    WN0110           Day 13 Producti
     C                     Z-ADDWL0273    WN0111           Day 14 Producti
     C                     Z-ADDWL0274    WN0112           Day 15 Producti
     C                     Z-ADDWL0275    WN0113           Day 16 Producti
     C                     Z-ADDWL0276    WN0114           Day 17 Producti
     C                     Z-ADDWL0277    WN0115           Day 18 Producti
     C                     Z-ADDWL0278    WN0116           Day 19 Producti
     C                     Z-ADDWL0279    WN0117           Day 20 Producti
     C                     Z-ADDWL0280    WN0118           Day 21 Producti
      * Create array to be used for PA Calc when orders are processed.
      * CASE: WRK.BLANK EQ WRK.BLANK
     C           WUGSTX    IFEQ WUGSTX                     *IF
      * Clear PA Array
      * Del PA Work Array Roll RT - *Arrays  * 
     C                     EXSR SZRVGN
      * Day 1 Available
      * PAR.Day 1 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 1 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 1 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 1 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 1 Sales USR
     C           WN0084    ADD  WN0098    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0162    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0119    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0140           Day 1 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0042    WL0286           Avail Ship Date
     C                     Z-ADDWL0063    WL0287           Production Date
     C                     Z-ADDWN0084    WL0288           Quantity Invent
     C                     Z-ADDWN0098    WL0289           Quantity Produc
     C                     Z-ADDWN0162    WL0290           Quantity Sched
     C                     Z-ADDWN0119    WL0291           Quantity Sales
     C                     Z-ADDWN0140    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 2 Available
      * PAR.Day 2 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 2 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 2 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 2 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 2 Sales USR
     C           WN0085    ADD  WN0099    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0163    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0120    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0141           Day 2 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0043    WL0286           Avail Ship Date
     C                     Z-ADDWL0064    WL0287           Production Date
     C                     Z-ADDWN0085    WL0288           Quantity Invent
     C                     Z-ADDWN0099    WL0289           Quantity Produc
     C                     Z-ADDWN0163    WL0290           Quantity Sched
     C                     Z-ADDWN0120    WL0291           Quantity Sales
     C                     Z-ADDWN0141    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 3 Available
      * PAR.Day 3 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 3 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 3 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 3 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 3 Sales USR
     C           WN0086    ADD  WN0100    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0164    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0121    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0142           Day 3 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0044    WL0286           Avail Ship Date
     C                     Z-ADDWL0065    WL0287           Production Date
     C                     Z-ADDWN0086    WL0288           Quantity Invent
     C                     Z-ADDWN0100    WL0289           Quantity Produc
     C                     Z-ADDWN0164    WL0290           Quantity Sched
     C                     Z-ADDWN0121    WL0291           Quantity Sales
     C                     Z-ADDWN0142    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 4 Available
      * PAR.Day 4 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 4 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 4 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 4 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 4 Sales USR
     C           WN0087    ADD  WN0101    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0165    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0122    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0143           Day 4 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0045    WL0286           Avail Ship Date
     C                     Z-ADDWL0066    WL0287           Production Date
     C                     Z-ADDWN0087    WL0288           Quantity Invent
     C                     Z-ADDWN0101    WL0289           Quantity Produc
     C                     Z-ADDWN0165    WL0290           Quantity Sched
     C                     Z-ADDWN0122    WL0291           Quantity Sales
     C                     Z-ADDWN0143    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 5 Available
      * PAR.Day 5 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 5 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 5 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 5 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 5 Sales USR
     C           WN0088    ADD  WN0102    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0166    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0123    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0144           Day 5 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0046    WL0286           Avail Ship Date
     C                     Z-ADDWL0067    WL0287           Production Date
     C                     Z-ADDWN0088    WL0288           Quantity Invent
     C                     Z-ADDWN0102    WL0289           Quantity Produc
     C                     Z-ADDWN0166    WL0290           Quantity Sched
     C                     Z-ADDWN0123    WL0291           Quantity Sales
     C                     Z-ADDWN0144    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 6 Available
      * PAR.Day 6 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 6 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 6 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 6 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 6 Sales USR
     C           WN0089    ADD  WN0103    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0167    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0124    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0145           Day 6 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0047    WL0286           Avail Ship Date
     C                     Z-ADDWL0068    WL0287           Production Date
     C                     Z-ADDWN0089    WL0288           Quantity Invent
     C                     Z-ADDWN0103    WL0289           Quantity Produc
     C                     Z-ADDWN0167    WL0290           Quantity Sched
     C                     Z-ADDWN0124    WL0291           Quantity Sales
     C                     Z-ADDWN0145    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 7 Available
      * PAR.Day 7 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 7 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 7 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 7 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 7 Sales USR
     C           WN0090    ADD  WN0104    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0168    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0125    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0146           Day 7 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0048    WL0286           Avail Ship Date
     C                     Z-ADDWL0069    WL0287           Production Date
     C                     Z-ADDWN0090    WL0288           Quantity Invent
     C                     Z-ADDWN0104    WL0289           Quantity Produc
     C                     Z-ADDWN0168    WL0290           Quantity Sched
     C                     Z-ADDWN0125    WL0291           Quantity Sales
     C                     Z-ADDWN0146    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 8 Available
      * PAR.Day 8 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 8 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 8 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 8 Sales USR
     C           WN0105    SUB  WN0169    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0126    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0147           Day 8 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0049    WL0286           Avail Ship Date
     C                     Z-ADDWL0070    WL0287           Production Date
     C                     Z-ADDWUQINV    WL0288           Quantity Invent
     C                     Z-ADDWN0105    WL0289           Quantity Produc
     C                     Z-ADDWN0169    WL0290           Quantity Sched
     C                     Z-ADDWN0126    WL0291           Quantity Sales
     C                     Z-ADDWN0147    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 9 Available
      * PAR.Day 9 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 9 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 9 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 9 Sales USR
     C           WN0106    SUB  WN0170    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0127    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0148           Day 9 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0050    WL0286           Avail Ship Date
     C                     Z-ADDWL0071    WL0287           Production Date
     C                     Z-ADDWUQINV    WL0288           Quantity Invent
     C                     Z-ADDWN0106    WL0289           Quantity Produc
     C                     Z-ADDWN0170    WL0290           Quantity Sched
     C                     Z-ADDWN0127    WL0291           Quantity Sales
     C                     Z-ADDWN0148    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 10 Available
      * PAR.Day 10 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 10 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 10 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 10 Sales USR
     C           WN0107    SUB  WN0171    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0128    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0149           Day 10 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0051    WL0286           Avail Ship Date
     C                     Z-ADDWL0072    WL0287           Production Date
     C                     Z-ADDWUQINV    WL0288           Quantity Invent
     C                     Z-ADDWN0107    WL0289           Quantity Produc
     C                     Z-ADDWN0171    WL0290           Quantity Sched
     C                     Z-ADDWN0128    WL0291           Quantity Sales
     C                     Z-ADDWN0149    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 11 Available
      * PAR.Day 11 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 11 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 11 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 11 Sales USR
     C           WN0108    SUB  WN0172    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0129    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0150           Day 11 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0052    WL0286           Avail Ship Date
     C                     Z-ADDWL0073    WL0287           Production Date
     C                     Z-ADDWUQINV    WL0288           Quantity Invent
     C                     Z-ADDWN0108    WL0289           Quantity Produc
     C                     Z-ADDWN0172    WL0290           Quantity Sched
     C                     Z-ADDWN0129    WL0291           Quantity Sales
     C                     Z-ADDWN0150    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 12 Available
      * PAR.Day 12 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 12 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 12 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 12 Sales USR
     C           WN0109    SUB  WN0173    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0130    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0151           Day 12 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0053    WL0286           Avail Ship Date
     C                     Z-ADDWL0074    WL0287           Production Date
     C                     Z-ADDWUQINV    WL0288           Quantity Invent
     C                     Z-ADDWN0109    WL0289           Quantity Produc
     C                     Z-ADDWN0173    WL0290           Quantity Sched
     C                     Z-ADDWN0130    WL0291           Quantity Sales
     C                     Z-ADDWN0151    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 13 Available
      * PAR.Day 13 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 13 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 13 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 13 Sales USR
     C           WN0110    SUB  WN0174    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0131    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0152           Day 13 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0054    WL0286           Avail Ship Date
     C                     Z-ADDWL0075    WL0287           Production Date
     C                     Z-ADDWUQINV    WL0288           Quantity Invent
     C                     Z-ADDWN0110    WL0289           Quantity Produc
     C                     Z-ADDWN0174    WL0290           Quantity Sched
     C                     Z-ADDWN0131    WL0291           Quantity Sales
     C                     Z-ADDWN0152    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 14 Available
      * PAR.Day 14 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 14 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 14 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 14 Sales USR
     C           WN0111    SUB  WN0175    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0132    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0153           Day 14 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0055    WL0286           Avail Ship Date
     C                     Z-ADDWL0076    WL0287           Production Date
     C                     Z-ADDWUQINV    WL0288           Quantity Invent
     C                     Z-ADDWN0111    WL0289           Quantity Produc
     C                     Z-ADDWN0175    WL0290           Quantity Sched
     C                     Z-ADDWN0132    WL0291           Quantity Sales
     C                     Z-ADDWN0153    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 15 Available
      * PAR.Day 15 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 15 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 15 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 15 Sales USR
     C           WN0112    SUB  WN0176    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0133    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0154           Day 15 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0056    WL0286           Avail Ship Date
     C                     Z-ADDWL0077    WL0287           Production Date
     C                     Z-ADDWUQINV    WL0288           Quantity Invent
     C                     Z-ADDWN0112    WL0289           Quantity Produc
     C                     Z-ADDWN0176    WL0290           Quantity Sched
     C                     Z-ADDWN0133    WL0291           Quantity Sales
     C                     Z-ADDWN0154    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 16 Available
      * PAR.Day 16 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 16 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 16 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 16 Sales USR
     C           WN0113    SUB  WN0177    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0134    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0155           Day 16 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0057    WL0286           Avail Ship Date
     C                     Z-ADDWL0078    WL0287           Production Date
     C                     Z-ADDWUQINV    WL0288           Quantity Invent
     C                     Z-ADDWN0113    WL0289           Quantity Produc
     C                     Z-ADDWN0177    WL0290           Quantity Sched
     C                     Z-ADDWN0134    WL0291           Quantity Sales
     C                     Z-ADDWN0155    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 17 Available
      * PAR.Day 17 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 17 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 17 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 17 Sales USR
     C           WN0114    SUB  WN0178    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0135    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0156           Day 17 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0058    WL0286           Avail Ship Date
     C                     Z-ADDWL0079    WL0287           Production Date
     C                     Z-ADDWUQINV    WL0288           Quantity Invent
     C                     Z-ADDWN0114    WL0289           Quantity Produc
     C                     Z-ADDWN0178    WL0290           Quantity Sched
     C                     Z-ADDWN0135    WL0291           Quantity Sales
     C                     Z-ADDWN0156    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 18 Available
      * PAR.Day 18 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 18 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 18 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 18 Sales USR
     C           WN0115    SUB  WN0179    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0136    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0157           Day 18 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0059    WL0286           Avail Ship Date
     C                     Z-ADDWL0080    WL0287           Production Date
     C                     Z-ADDWUQINV    WL0288           Quantity Invent
     C                     Z-ADDWN0115    WL0289           Quantity Produc
     C                     Z-ADDWN0179    WL0290           Quantity Sched
     C                     Z-ADDWN0136    WL0291           Quantity Sales
     C                     Z-ADDWN0157    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 19 Available
      * PAR.Day 19 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 19 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 19 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 19 Sales USR
     C           WN0116    SUB  WN0180    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0137    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0158           Day 19 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0060    WL0286           Avail Ship Date
     C                     Z-ADDWL0081    WL0287           Production Date
     C                     Z-ADDWUQINV    WL0288           Quantity Invent
     C                     Z-ADDWN0116    WL0289           Quantity Produc
     C                     Z-ADDWN0180    WL0290           Quantity Sched
     C                     Z-ADDWN0137    WL0291           Quantity Sales
     C                     Z-ADDWN0158    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 20 Available
      * PAR.Day 20 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 20 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 20 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 20 Sales USR
     C           WN0117    SUB  WN0181    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0138    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0159           Day 20 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0061    WL0286           Avail Ship Date
     C                     Z-ADDWL0082    WL0287           Production Date
     C                     Z-ADDWUQINV    WL0288           Quantity Invent
     C                     Z-ADDWN0117    WL0289           Quantity Produc
     C                     Z-ADDWN0181    WL0290           Quantity Sched
     C                     Z-ADDWN0138    WL0291           Quantity Sales
     C                     Z-ADDWN0159    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 21 Available
      * PAR.Day 21 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 21 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 21 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 21 Sales USR
     C           WN0118    SUB  WN0182    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0139    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0160           Day 21 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0062    WL0286           Avail Ship Date
     C                     Z-ADDWL0083    WL0287           Production Date
     C                     Z-ADDWUQINV    WL0288           Quantity Invent
     C                     Z-ADDWN0118    WL0289           Quantity Produc
     C                     Z-ADDWN0182    WL0290           Quantity Sched
     C                     Z-ADDWN0139    WL0291           Quantity Sales
     C                     Z-ADDWN0160    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
     C                     END                             *FI
      * Rtv Sched Ship/Clc PA RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0039    WL0294           Company Number
     C                     Z-ADDWUC4NB    WL0295           Order Number
     C                     Z-ADDWL0040    WL0296           Item Code
     C                     MOVELWEAJCD    WL0297    P      Warehouse Code
     C                     Z-ADDWL0041    WL0298           Scheduled Ship
     C                     Z-ADDWL0062    WL0299           Avail Ship Date
     C                     MOVELWN0228    WL0300    P      Production Ware
     C                     MOVELWN0229    WL0301    P      Lot Tracking Fl
     C                     EXSR TCRVGN
      * If this is a production whse, then reserve other whse orders.
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Production Warehouse Code EQ PAR.Warehouse Code
      *   |- c2    : PAR.Production Warehouse Code is Warehouse Code Blan
      *   '-
     C           WN0228    IFEQ WEAJCD                     *IF
     C           WN0228    OREQ *BLANK                     *OR
      * Rtv Rsrvd Other Whse  RT - PD Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0039    WL0356           Company Number
     C                     Z-ADDWL0040    WL0357           Item Code
     C                     MOVELWEAJCD    WL0358    P      Warehouse Code
     C                     Z-ADDWL0041    WL0359           Scheduled Ship
     C                     Z-ADDWL0062    WL0360           Avail Ship Date
     C                     EXSR TORVGN
     C                     END                             *FI
      * Retrieve Sched Ship/Allocation/Available from PA Array
      * CASE: WRK.BLANK EQ WRK.BLANK
     C           WUGSTX    IFEQ WUGSTX                     *IF
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0042    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0162           Quantity Sched
     C                     Z-ADDWL0363    WN0119           Quantity Sales
     C                     Z-ADDWL0364    WN0140           Quantity Availa
     C                     MOVELWL0365    WL0084    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0043    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0163           Quantity Sched
     C                     Z-ADDWL0363    WN0120           Quantity Sales
     C                     Z-ADDWL0364    WN0141           Quantity Availa
     C                     MOVELWL0365    WL0085    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0044    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0164           Quantity Sched
     C                     Z-ADDWL0363    WN0121           Quantity Sales
     C                     Z-ADDWL0364    WN0142           Quantity Availa
     C                     MOVELWL0365    WL0086    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0045    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0165           Quantity Sched
     C                     Z-ADDWL0363    WN0122           Quantity Sales
     C                     Z-ADDWL0364    WN0143           Quantity Availa
     C                     MOVELWL0365    WL0087    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0046    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0166           Quantity Sched
     C                     Z-ADDWL0363    WN0123           Quantity Sales
     C                     Z-ADDWL0364    WN0144           Quantity Availa
     C                     MOVELWL0365    WL0088    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0047    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0167           Quantity Sched
     C                     Z-ADDWL0363    WN0124           Quantity Sales
     C                     Z-ADDWL0364    WN0145           Quantity Availa
     C                     MOVELWL0365    WL0089    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0048    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0168           Quantity Sched
     C                     Z-ADDWL0363    WN0125           Quantity Sales
     C                     Z-ADDWL0364    WN0146           Quantity Availa
     C                     MOVELWL0365    WL0090    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0049    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0169           Quantity Sched
     C                     Z-ADDWL0363    WN0126           Quantity Sales
     C                     Z-ADDWL0364    WN0147           Quantity Availa
     C                     MOVELWL0365    WL0091    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0050    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0170           Quantity Sched
     C                     Z-ADDWL0363    WN0127           Quantity Sales
     C                     Z-ADDWL0364    WN0148           Quantity Availa
     C                     MOVELWL0365    WL0092    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0051    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0171           Quantity Sched
     C                     Z-ADDWL0363    WN0128           Quantity Sales
     C                     Z-ADDWL0364    WN0149           Quantity Availa
     C                     MOVELWL0365    WL0093    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0052    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0172           Quantity Sched
     C                     Z-ADDWL0363    WN0129           Quantity Sales
     C                     Z-ADDWL0364    WN0150           Quantity Availa
     C                     MOVELWL0365    WL0094    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0053    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0173           Quantity Sched
     C                     Z-ADDWL0363    WN0130           Quantity Sales
     C                     Z-ADDWL0364    WN0151           Quantity Availa
     C                     MOVELWL0365    WL0095    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0054    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0174           Quantity Sched
     C                     Z-ADDWL0363    WN0131           Quantity Sales
     C                     Z-ADDWL0364    WN0152           Quantity Availa
     C                     MOVELWL0365    WL0096    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0055    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0175           Quantity Sched
     C                     Z-ADDWL0363    WN0132           Quantity Sales
     C                     Z-ADDWL0364    WN0153           Quantity Availa
     C                     MOVELWL0365    WL0097    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0056    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0176           Quantity Sched
     C                     Z-ADDWL0363    WN0133           Quantity Sales
     C                     Z-ADDWL0364    WN0154           Quantity Availa
     C                     MOVELWL0365    WL0098    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0057    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0177           Quantity Sched
     C                     Z-ADDWL0363    WN0134           Quantity Sales
     C                     Z-ADDWL0364    WN0155           Quantity Availa
     C                     MOVELWL0365    WL0099    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0058    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0178           Quantity Sched
     C                     Z-ADDWL0363    WN0135           Quantity Sales
     C                     Z-ADDWL0364    WN0156           Quantity Availa
     C                     MOVELWL0365    WL0100    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0059    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0179           Quantity Sched
     C                     Z-ADDWL0363    WN0136           Quantity Sales
     C                     Z-ADDWL0364    WN0157           Quantity Availa
     C                     MOVELWL0365    WL0101    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0060    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0180           Quantity Sched
     C                     Z-ADDWL0363    WN0137           Quantity Sales
     C                     Z-ADDWL0364    WN0158           Quantity Availa
     C                     MOVELWL0365    WL0102    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0061    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0181           Quantity Sched
     C                     Z-ADDWL0363    WN0138           Quantity Sales
     C                     Z-ADDWL0364    WN0159           Quantity Availa
     C                     MOVELWL0365    WL0103    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0062    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0182           Quantity Sched
     C                     Z-ADDWL0363    WN0139           Quantity Sales
     C                     Z-ADDWL0364    WN0160           Quantity Availa
     C                     MOVELWL0365    WL0104    P      Reserved for Ot
     C                     END                             *FI
     C                     MOVEL'Y'       WN0161           Status - Y or N
     C                     ELSE
      * CASE: *OTHERWISE
      * If warehouse code is entered, calculate for that warehouse only
      * CASE: PAR.Warehouse Code EQ DB1.Warehouse Code
     C           WL0038    IFEQ WEAJCD                     *IF
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(PAR) WL0084' defaulted for 'Day 1 Rsrvd Other Whse Fl'.
      * Field '(PAR) WL0085' defaulted for 'Day 2 Rsrvd Other Whse Fl'.
      * Field '(PAR) WL0086' defaulted for 'Day 3 Rsrvd Other Whse Fl'.
      * Field '(PAR) WL0087' defaulted for 'Day 4 Rsrvd Other Whse Fl'.
      * Field '(PAR) WL0088' defaulted for 'Day 5 Rsrvd Other Whse Fl'.
      * Field '(PAR) WL0089' defaulted for 'Day 6 Rsrvd Other Whse Fl'.
      * Field '(PAR) WL0090' defaulted for 'Day 7 Rsrvd Other Whse Fl'.
      * Field '(PAR) WL0091' defaulted for 'Day 8 Rsrvd Other Whse Fl'.
      * Field '(PAR) WL0092' defaulted for 'Day 9 Rsrvd Other Whse Fl'.
      * Field '(PAR) WL0093' defaulted for 'Day 10 Rsrv Other Whse Fl'.
      * Field '(PAR) WL0094' defaulted for 'Day 11 Rsrv Other Whse Fl'.
      * Field '(PAR) WL0095' defaulted for 'Day 12 Rsrv Other Whse Fl'.
      * Field '(PAR) WL0096' defaulted for 'Day 13 Rsrv Other Whse Fl'.
      * Field '(PAR) WL0097' defaulted for 'Day 14 Rsrv Other Whse Fl'.
      * Field '(PAR) WL0098' defaulted for 'Day 15 Rsrv Other Whse Fl'.
      * Field '(PAR) WL0099' defaulted for 'Day 16 Rsrv Other Whse Fl'.
      * Field '(PAR) WL0100' defaulted for 'Day 17 Rsrv Other Whse Fl'.
      * Field '(PAR) WL0101' defaulted for 'Day 18 Rsrv Other Whse Fl'.
      * Field '(PAR) WL0102' defaulted for 'Day 19 Rsrv Other Whse Fl'.
      * Field '(PAR) WL0103' defaulted for 'Day 20 Rsrv Other Whse Fl'.
      * Field '(PAR) WL0104' defaulted for 'Day 21 Rsrv Other Whse Fl'.
      *
     C                     MOVEL*BLANK    WN0230  3        Production Ware
     C                     MOVEL*BLANK    WN0231  1        Lot Tracking Fl
      *
      * Rtv PA For 21 Days    IF
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0063           USR Day 1
     C                     Z-ADD*ZERO     WL0064           USR Day 2
     C                     Z-ADD*ZERO     WL0065           USR Day 3
     C                     Z-ADD*ZERO     WL0066           USR Day 4
     C                     Z-ADD*ZERO     WL0067           USR Day 5
     C                     Z-ADD*ZERO     WL0068           USR Day 6
     C                     Z-ADD*ZERO     WL0069           USR Day 7
     C                     Z-ADD*ZERO     WL0070           USR Day 8
     C                     Z-ADD*ZERO     WL0071           USR Day 9
     C                     Z-ADD*ZERO     WL0072           USR Day 10
     C                     Z-ADD*ZERO     WL0073           USR Day 11
     C                     Z-ADD*ZERO     WL0074           USR Day 12
     C                     Z-ADD*ZERO     WL0075           USR Day 13
     C                     Z-ADD*ZERO     WL0076           USR Day 14
     C                     Z-ADD*ZERO     WL0077           USR Day 15
     C                     Z-ADD*ZERO     WL0078           USR Day 16
     C                     Z-ADD*ZERO     WL0079           USR Day 17
     C                     Z-ADD*ZERO     WL0080           USR Day 18
     C                     Z-ADD*ZERO     WL0081           USR Day 19
     C                     Z-ADD*ZERO     WL0082           USR Day 20
     C                     Z-ADD*ZERO     WL0083           USR Day 21
     C                     Z-ADD*ZERO     WN0084           Day 1 Inventory
     C                     Z-ADD*ZERO     WN0085           Day 2 Inventory
     C                     Z-ADD*ZERO     WN0086           Day 3 Inventory
     C                     Z-ADD*ZERO     WN0087           Day 4 Inventory
     C                     Z-ADD*ZERO     WN0088           Day 5 Inventory
     C                     Z-ADD*ZERO     WN0089           Day 6 Inventory
     C                     Z-ADD*ZERO     WN0090           Day 7 Inventory
     C                     Z-ADD*ZERO     WN0091           Day 8 Inventory
     C                     Z-ADD*ZERO     WN0092           Day 9 Inventory
     C                     Z-ADD*ZERO     WN0093           Day 10 Inventor
     C                     Z-ADD*ZERO     WN0094           Day 11 Inventor
     C                     Z-ADD*ZERO     WN0095           Day 12 Inventor
     C                     Z-ADD*ZERO     WN0096           Day 13 Inventor
     C                     Z-ADD*ZERO     WN0097           Day 14 Inventor
     C                     Z-ADD*ZERO     WN0098           Day 1 Productio
     C                     Z-ADD*ZERO     WN0099           Day 2 Productio
     C                     Z-ADD*ZERO     WN0100           Day 3 Productio
     C                     Z-ADD*ZERO     WN0101           Day 4 Productio
     C                     Z-ADD*ZERO     WN0102           Day 5 Productio
     C                     Z-ADD*ZERO     WN0103           Day 6 Productio
     C                     Z-ADD*ZERO     WN0104           Day 7 Productio
     C                     Z-ADD*ZERO     WN0105           Day 8 Productio
     C                     Z-ADD*ZERO     WN0106           Day 9 Productio
     C                     Z-ADD*ZERO     WN0107           Day 10 Producti
     C                     Z-ADD*ZERO     WN0108           Day 11 Producti
     C                     Z-ADD*ZERO     WN0109           Day 12 Producti
     C                     Z-ADD*ZERO     WN0110           Day 13 Producti
     C                     Z-ADD*ZERO     WN0111           Day 14 Producti
     C                     Z-ADD*ZERO     WN0112           Day 15 Producti
     C                     Z-ADD*ZERO     WN0113           Day 16 Producti
     C                     Z-ADD*ZERO     WN0114           Day 17 Producti
     C                     Z-ADD*ZERO     WN0115           Day 18 Producti
     C                     Z-ADD*ZERO     WN0116           Day 19 Producti
     C                     Z-ADD*ZERO     WN0117           Day 20 Producti
     C                     Z-ADD*ZERO     WN0118           Day 21 Producti
     C                     Z-ADD*ZERO     WN0119           Day 1 Sales USR
     C                     Z-ADD*ZERO     WN0120           Day 2 Sales USR
     C                     Z-ADD*ZERO     WN0121           Day 3 Sales USR
     C                     Z-ADD*ZERO     WN0122           Day 4 Sales USR
     C                     Z-ADD*ZERO     WN0123           Day 5 Sales USR
     C                     Z-ADD*ZERO     WN0124           Day 6 Sales USR
     C                     Z-ADD*ZERO     WN0125           Day 7 Sales USR
     C                     Z-ADD*ZERO     WN0126           Day 8 Sales USR
     C                     Z-ADD*ZERO     WN0127           Day 9 Sales USR
     C                     Z-ADD*ZERO     WN0128           Day 10 Sales US
     C                     Z-ADD*ZERO     WN0129           Day 11 Sales US
     C                     Z-ADD*ZERO     WN0130           Day 12 Sales US
     C                     Z-ADD*ZERO     WN0131           Day 13 Sales US
     C                     Z-ADD*ZERO     WN0132           Day 14 Sales US
     C                     Z-ADD*ZERO     WN0133           Day 15 Sales US
     C                     Z-ADD*ZERO     WN0134           Day 16 Sales US
     C                     Z-ADD*ZERO     WN0135           Day 17 Sales US
     C                     Z-ADD*ZERO     WN0136           Day 18 Sales US
     C                     Z-ADD*ZERO     WN0137           Day 19 Sales US
     C                     Z-ADD*ZERO     WN0138           Day 20 Sales US
     C                     Z-ADD*ZERO     WN0139           Day 21 Sales US
     C                     Z-ADD*ZERO     WN0140           Day 1 Availabil
     C                     Z-ADD*ZERO     WN0141           Day 2 Availabil
     C                     Z-ADD*ZERO     WN0142           Day 3 Availabil
     C                     Z-ADD*ZERO     WN0143           Day 4 Availabil
     C                     Z-ADD*ZERO     WN0144           Day 5 Availabil
     C                     Z-ADD*ZERO     WN0145           Day 6 Availabil
     C                     Z-ADD*ZERO     WN0146           Day 7 Availabil
     C                     Z-ADD*ZERO     WN0147           Day 8 Availabil
     C                     Z-ADD*ZERO     WN0148           Day 9 Availabil
     C                     Z-ADD*ZERO     WN0149           Day 10 Availabi
     C                     Z-ADD*ZERO     WN0150           Day 11 Availabi
     C                     Z-ADD*ZERO     WN0151           Day 12 Availabi
     C                     Z-ADD*ZERO     WN0152           Day 13 Availabi
     C                     Z-ADD*ZERO     WN0153           Day 14 Availabi
     C                     Z-ADD*ZERO     WN0154           Day 15 Availabi
     C                     Z-ADD*ZERO     WN0155           Day 16 Availabi
     C                     Z-ADD*ZERO     WN0156           Day 17 Availabi
     C                     Z-ADD*ZERO     WN0157           Day 18 Availabi
     C                     Z-ADD*ZERO     WN0158           Day 19 Availabi
     C                     Z-ADD*ZERO     WN0159           Day 20 Availabi
     C                     Z-ADD*ZERO     WN0160           Day 21 Availabi
     C                     Z-ADD*ZERO     WN0162           Day 1 Sched Shi
     C                     Z-ADD*ZERO     WN0163           Day 2 Sched Shi
     C                     Z-ADD*ZERO     WN0164           Day 3 Sched Shi
     C                     Z-ADD*ZERO     WN0165           Day 4 Sched Shi
     C                     Z-ADD*ZERO     WN0166           Day 5 Sched Shi
     C                     Z-ADD*ZERO     WN0167           Day 6 Sched Shi
     C                     Z-ADD*ZERO     WN0168           Day 7 Sched Shi
     C                     Z-ADD*ZERO     WN0169           Day 8 Sched Shi
     C                     Z-ADD*ZERO     WN0170           Day 9 Sched Shi
     C                     Z-ADD*ZERO     WN0171           Day 10 Sched Sh
     C                     Z-ADD*ZERO     WN0172           Day 11 Sched Sh
     C                     Z-ADD*ZERO     WN0173           Day 12 Sched Sh
     C                     Z-ADD*ZERO     WN0174           Day 13 Sched Sh
     C                     Z-ADD*ZERO     WN0175           Day 14 Sched Sh
     C                     Z-ADD*ZERO     WN0176           Day 15 Sched Sh
     C                     Z-ADD*ZERO     WN0177           Day 16 Sched Sh
     C                     Z-ADD*ZERO     WN0178           Day 17 Sched Sh
     C                     Z-ADD*ZERO     WN0179           Day 18 Sched Sh
     C                     Z-ADD*ZERO     WN0180           Day 19 Sched Sh
     C                     Z-ADD*ZERO     WN0181           Day 20 Sched Sh
     C                     Z-ADD*ZERO     WN0182           Day 21 Sched Sh
     C                     MOVEL*BLANK    WL0084           Day 1 Rsrvd Oth
     C                     MOVEL*BLANK    WL0085           Day 2 Rsrvd Oth
     C                     MOVEL*BLANK    WL0086           Day 3 Rsrvd Oth
     C                     MOVEL*BLANK    WL0087           Day 4 Rsrvd Oth
     C                     MOVEL*BLANK    WL0088           Day 5 Rsrvd Oth
     C                     MOVEL*BLANK    WL0089           Day 6 Rsrvd Oth
     C                     MOVEL*BLANK    WL0090           Day 7 Rsrvd Oth
     C                     MOVEL*BLANK    WL0091           Day 8 Rsrvd Oth
     C                     MOVEL*BLANK    WL0092           Day 9 Rsrvd Oth
     C                     MOVEL*BLANK    WL0093           Day 10 Rsrv Oth
     C                     MOVEL*BLANK    WL0094           Day 11 Rsrv Oth
     C                     MOVEL*BLANK    WL0095           Day 12 Rsrv Oth
     C                     MOVEL*BLANK    WL0096           Day 13 Rsrv Oth
     C                     MOVEL*BLANK    WL0097           Day 14 Rsrv Oth
     C                     MOVEL*BLANK    WL0098           Day 15 Rsrv Oth
     C                     MOVEL*BLANK    WL0099           Day 16 Rsrv Oth
     C                     MOVEL*BLANK    WL0100           Day 17 Rsrv Oth
     C                     MOVEL*BLANK    WL0101           Day 18 Rsrv Oth
     C                     MOVEL*BLANK    WL0102           Day 19 Rsrv Oth
     C                     MOVEL*BLANK    WL0103           Day 20 Rsrv Oth
     C                     MOVEL*BLANK    WL0104           Day 21 Rsrv Oth
     C                     Z-ADD*ZERO     WL0105           Order Hold Over
     C                     Z-ADD*ZERO     WL0106           Order Hold Over
     C                     MOVEL*BLANK    WN0230           Production Ware
     C                     MOVEL*BLANK    WN0231           Lot Tracking Fl
      * Rtv Prod Whse/Lot Trck RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWEAJCD    WL0211    P      Warehouse Code
     C                     EXSR SXRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0212    WN0230    P      Production Ware
     C                     MOVELWL0213    WN0231    P      Lot Tracking Fl
      * Rtv PA Inv/Hold Overs XF - PS Prod Item Schedule  * 
     C                     CALL 'PDS0XFR'              90  Rtv PA Inv/Hold
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WL0039    WQ0093  30       Company Number
     C                     PARM WL0040    WQ0094  70       Item Code
     C                     PARM WEAJCD    WQ0095  3        Warehouse Code
     C                     PARM WL0108    WQ0096 112       Unit Weight
     C                     PARM WL0109    WQ0097  52       Fresh Chilling
     C                     PARM WL0110    WQ0098  1        Piece Count Ite
     C                     PARM WL0111    WQ0099  70       Pieces Per Bag
     C                     PARM WL0112    WQ0100  70       Bags Per Unit
     C                     PARM WL0042    WQ0101  70       Avail Ship Date
     C                     PARM WL0043    WQ0102  70       Avail Ship Date
     C                     PARM WL0044    WQ0103  70       Avail Ship Date
     C                     PARM WL0045    WQ0104  70       Avail Ship Date
     C                     PARM WL0046    WQ0105  70       Avail Ship Date
     C                     PARM WL0047    WQ0106  70       Avail Ship Date
     C                     PARM WL0048    WQ0107  70       Avail Ship Date
     C                     PARM WL0049    WQ0108  70       Avail Ship Date
     C                     PARM WL0050    WQ0109  70       Avail Ship Date
     C                     PARM WL0051    WQ0110  70       Avail Ship Date
     C                     PARM WL0052    WQ0111  70       Avail Ship Date
     C                     PARM WL0053    WQ0112  70       Avail Ship Date
     C                     PARM WL0054    WQ0113  70       Avail Ship Date
     C                     PARM WL0055    WQ0114  70       Avail Ship Date
     C           WN0084    PARM WN0084    WQ0115  61       Day 1 Inventory
     C           WN0085    PARM WN0085    WQ0116  61       Day 2 Inventory
     C           WN0086    PARM WN0086    WQ0117  61       Day 3 Inventory
     C           WN0087    PARM WN0087    WQ0118  61       Day 4 Inventory
     C           WN0088    PARM WN0088    WQ0119  61       Day 5 Inventory
     C           WN0089    PARM WN0089    WQ0120  61       Day 6 Inventory
     C           WN0090    PARM WN0090    WQ0121  61       Day 7 Inventory
     C           WN0091    PARM WN0091    WQ0122  61       Day 8 Inventory
     C           WN0092    PARM WN0092    WQ0123  61       Day 9 Inventory
     C           WN0093    PARM WN0093    WQ0124  61       Day 10 Inventor
     C           WN0094    PARM WN0094    WQ0125  61       Day 11 Inventor
     C           WN0095    PARM WN0095    WQ0126  61       Day 12 Inventor
     C           WN0096    PARM WN0096    WQ0127  61       Day 13 Inventor
     C           WN0097    PARM WN0097    WQ0128  61       Day 14 Inventor
     C           WN0119    PARM WN0119    WQ0129  61       Day 1 Sales USR
     C           WN0120    PARM WN0120    WQ0130  61       Day 2 Sales USR
     C           WN0121    PARM WN0121    WQ0131  61       Day 3 Sales USR
     C           WN0122    PARM WN0122    WQ0132  61       Day 4 Sales USR
     C           WN0123    PARM WN0123    WQ0133  61       Day 5 Sales USR
     C           WN0124    PARM WN0124    WQ0134  61       Day 6 Sales USR
     C           WN0125    PARM WN0125    WQ0135  61       Day 7 Sales USR
     C           WL0105    PARM WL0105    WQ0136  50       Order Hold Over
     C           WL0106    PARM WL0106    WQ0137  50       Order Hold Over
     C                     PARM WN0231    WQ0138  1        Lot Tracking Fl
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDS0XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      * Rtv PA Production     RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0039    WL0214           Company Number
     C                     Z-ADDWL0040    WL0215           Item Code
     C                     MOVELWEAJCD    WL0216    P      Warehouse Code
     C                     Z-ADDWL0041    WL0217           PS Available Sh
     C                     Z-ADDWL0042    WL0218           Avail Ship Date
     C                     Z-ADDWL0043    WL0219           Avail Ship Date
     C                     Z-ADDWL0044    WL0220           Avail Ship Date
     C                     Z-ADDWL0045    WL0221           Avail Ship Date
     C                     Z-ADDWL0046    WL0222           Avail Ship Date
     C                     Z-ADDWL0047    WL0223           Avail Ship Date
     C                     Z-ADDWL0048    WL0224           Avail Ship Date
     C                     Z-ADDWL0049    WL0225           Avail Ship Date
     C                     Z-ADDWL0050    WL0226           Avail Ship Date
     C                     Z-ADDWL0051    WL0227           Avail Ship Date
     C                     Z-ADDWL0052    WL0228           Avail Ship Date
     C                     Z-ADDWL0053    WL0229           Avail Ship Date
     C                     Z-ADDWL0054    WL0230           Avail Ship Date
     C                     Z-ADDWL0055    WL0231           Avail Ship Date
     C                     Z-ADDWL0056    WL0232           Avail Ship Date
     C                     Z-ADDWL0057    WL0233           Avail Ship Date
     C                     Z-ADDWL0058    WL0234           Avail Ship Date
     C                     Z-ADDWL0059    WL0235           Avail Ship Date
     C                     Z-ADDWL0060    WL0236           Avail Ship Date
     C                     Z-ADDWL0061    WL0237           Avail Ship Date
     C                     Z-ADDWL0062    WL0238           Avail Ship Date
     C                     Z-ADDWN0098    WL0260           Day 1 Productio
     C                     Z-ADDWN0099    WL0261           Day 2 Productio
     C                     Z-ADDWN0100    WL0262           Day 3 Productio
     C                     Z-ADDWN0101    WL0263           Day 4 Productio
     C                     Z-ADDWN0102    WL0264           Day 5 Productio
     C                     Z-ADDWN0103    WL0265           Day 6 Productio
     C                     Z-ADDWN0104    WL0266           Day 7 Productio
     C                     Z-ADDWN0105    WL0267           Day 8 Productio
     C                     Z-ADDWN0106    WL0268           Day 9 Productio
     C                     Z-ADDWN0107    WL0269           Day 10 Producti
     C                     Z-ADDWN0108    WL0270           Day 11 Producti
     C                     Z-ADDWN0109    WL0271           Day 12 Producti
     C                     Z-ADDWN0110    WL0272           Day 13 Producti
     C                     Z-ADDWN0111    WL0273           Day 14 Producti
     C                     Z-ADDWN0112    WL0274           Day 15 Producti
     C                     Z-ADDWN0113    WL0275           Day 16 Producti
     C                     Z-ADDWN0114    WL0276           Day 17 Producti
     C                     Z-ADDWN0115    WL0277           Day 18 Producti
     C                     Z-ADDWN0116    WL0278           Day 19 Producti
     C                     Z-ADDWN0117    WL0279           Day 20 Producti
     C                     Z-ADDWN0118    WL0280           Day 21 Producti
     C                     Z-ADDWL0108    WL0281           Unit Weight
     C                     Z-ADDWL0109    WL0282           Fresh Chilling
     C                     MOVELWL0110    WL0283    P      Piece Count Ite
     C                     Z-ADDWL0111    WL0284           Pieces Per Bag
     C                     Z-ADDWL0112    WL0285           Bags Per Unit
     C                     EXSR SYRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0239    WL0063           USR Day 1
     C                     Z-ADDWL0240    WL0064           USR Day 2
     C                     Z-ADDWL0241    WL0065           USR Day 3
     C                     Z-ADDWL0242    WL0066           USR Day 4
     C                     Z-ADDWL0243    WL0067           USR Day 5
     C                     Z-ADDWL0244    WL0068           USR Day 6
     C                     Z-ADDWL0245    WL0069           USR Day 7
     C                     Z-ADDWL0246    WL0070           USR Day 8
     C                     Z-ADDWL0247    WL0071           USR Day 9
     C                     Z-ADDWL0248    WL0072           USR Day 10
     C                     Z-ADDWL0249    WL0073           USR Day 11
     C                     Z-ADDWL0250    WL0074           USR Day 12
     C                     Z-ADDWL0251    WL0075           USR Day 13
     C                     Z-ADDWL0252    WL0076           USR Day 14
     C                     Z-ADDWL0253    WL0077           USR Day 15
     C                     Z-ADDWL0254    WL0078           USR Day 16
     C                     Z-ADDWL0255    WL0079           USR Day 17
     C                     Z-ADDWL0256    WL0080           USR Day 18
     C                     Z-ADDWL0257    WL0081           USR Day 19
     C                     Z-ADDWL0258    WL0082           USR Day 20
     C                     Z-ADDWL0259    WL0083           USR Day 21
     C                     Z-ADDWL0260    WN0098           Day 1 Productio
     C                     Z-ADDWL0261    WN0099           Day 2 Productio
     C                     Z-ADDWL0262    WN0100           Day 3 Productio
     C                     Z-ADDWL0263    WN0101           Day 4 Productio
     C                     Z-ADDWL0264    WN0102           Day 5 Productio
     C                     Z-ADDWL0265    WN0103           Day 6 Productio
     C                     Z-ADDWL0266    WN0104           Day 7 Productio
     C                     Z-ADDWL0267    WN0105           Day 8 Productio
     C                     Z-ADDWL0268    WN0106           Day 9 Productio
     C                     Z-ADDWL0269    WN0107           Day 10 Producti
     C                     Z-ADDWL0270    WN0108           Day 11 Producti
     C                     Z-ADDWL0271    WN0109           Day 12 Producti
     C                     Z-ADDWL0272    WN0110           Day 13 Producti
     C                     Z-ADDWL0273    WN0111           Day 14 Producti
     C                     Z-ADDWL0274    WN0112           Day 15 Producti
     C                     Z-ADDWL0275    WN0113           Day 16 Producti
     C                     Z-ADDWL0276    WN0114           Day 17 Producti
     C                     Z-ADDWL0277    WN0115           Day 18 Producti
     C                     Z-ADDWL0278    WN0116           Day 19 Producti
     C                     Z-ADDWL0279    WN0117           Day 20 Producti
     C                     Z-ADDWL0280    WN0118           Day 21 Producti
      * Create array to be used for PA Calc when orders are processed.
      * CASE: WRK.BLANK EQ WRK.BLANK
     C           WUGSTX    IFEQ WUGSTX                     *IF
      * Clear PA Array
      * Del PA Work Array Roll RT - *Arrays  * 
     C                     EXSR SZRVGN
      * Day 1 Available
      * PAR.Day 1 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 1 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 1 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 1 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 1 Sales USR
     C           WN0084    ADD  WN0098    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0162    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0119    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0140           Day 1 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0042    WL0286           Avail Ship Date
     C                     Z-ADDWL0063    WL0287           Production Date
     C                     Z-ADDWN0084    WL0288           Quantity Invent
     C                     Z-ADDWN0098    WL0289           Quantity Produc
     C                     Z-ADDWN0162    WL0290           Quantity Sched
     C                     Z-ADDWN0119    WL0291           Quantity Sales
     C                     Z-ADDWN0140    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 2 Available
      * PAR.Day 2 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 2 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 2 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 2 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 2 Sales USR
     C           WN0085    ADD  WN0099    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0163    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0120    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0141           Day 2 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0043    WL0286           Avail Ship Date
     C                     Z-ADDWL0064    WL0287           Production Date
     C                     Z-ADDWN0085    WL0288           Quantity Invent
     C                     Z-ADDWN0099    WL0289           Quantity Produc
     C                     Z-ADDWN0163    WL0290           Quantity Sched
     C                     Z-ADDWN0120    WL0291           Quantity Sales
     C                     Z-ADDWN0141    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 3 Available
      * PAR.Day 3 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 3 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 3 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 3 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 3 Sales USR
     C           WN0086    ADD  WN0100    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0164    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0121    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0142           Day 3 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0044    WL0286           Avail Ship Date
     C                     Z-ADDWL0065    WL0287           Production Date
     C                     Z-ADDWN0086    WL0288           Quantity Invent
     C                     Z-ADDWN0100    WL0289           Quantity Produc
     C                     Z-ADDWN0164    WL0290           Quantity Sched
     C                     Z-ADDWN0121    WL0291           Quantity Sales
     C                     Z-ADDWN0142    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 4 Available
      * PAR.Day 4 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 4 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 4 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 4 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 4 Sales USR
     C           WN0087    ADD  WN0101    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0165    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0122    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0143           Day 4 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0045    WL0286           Avail Ship Date
     C                     Z-ADDWL0066    WL0287           Production Date
     C                     Z-ADDWN0087    WL0288           Quantity Invent
     C                     Z-ADDWN0101    WL0289           Quantity Produc
     C                     Z-ADDWN0165    WL0290           Quantity Sched
     C                     Z-ADDWN0122    WL0291           Quantity Sales
     C                     Z-ADDWN0143    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 5 Available
      * PAR.Day 5 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 5 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 5 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 5 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 5 Sales USR
     C           WN0088    ADD  WN0102    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0166    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0123    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0144           Day 5 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0046    WL0286           Avail Ship Date
     C                     Z-ADDWL0067    WL0287           Production Date
     C                     Z-ADDWN0088    WL0288           Quantity Invent
     C                     Z-ADDWN0102    WL0289           Quantity Produc
     C                     Z-ADDWN0166    WL0290           Quantity Sched
     C                     Z-ADDWN0123    WL0291           Quantity Sales
     C                     Z-ADDWN0144    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 6 Available
      * PAR.Day 6 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 6 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 6 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 6 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 6 Sales USR
     C           WN0089    ADD  WN0103    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0167    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0124    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0145           Day 6 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0047    WL0286           Avail Ship Date
     C                     Z-ADDWL0068    WL0287           Production Date
     C                     Z-ADDWN0089    WL0288           Quantity Invent
     C                     Z-ADDWN0103    WL0289           Quantity Produc
     C                     Z-ADDWN0167    WL0290           Quantity Sched
     C                     Z-ADDWN0124    WL0291           Quantity Sales
     C                     Z-ADDWN0145    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 7 Available
      * PAR.Day 7 Availability USR =
      *    *COMPUTE (x1 + x2 - x3 -x4)
      * x1    : PAR.Day 7 Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.Day 7 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 7 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 7 Sales USR
     C           WN0090    ADD  WN0104    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0168    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0125    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0146           Day 7 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0048    WL0286           Avail Ship Date
     C                     Z-ADDWL0069    WL0287           Production Date
     C                     Z-ADDWN0090    WL0288           Quantity Invent
     C                     Z-ADDWN0104    WL0289           Quantity Produc
     C                     Z-ADDWN0168    WL0290           Quantity Sched
     C                     Z-ADDWN0125    WL0291           Quantity Sales
     C                     Z-ADDWN0146    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 8 Available
      * PAR.Day 8 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 8 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 8 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 8 Sales USR
     C           WN0105    SUB  WN0169    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0126    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0147           Day 8 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0049    WL0286           Avail Ship Date
     C                     Z-ADDWL0070    WL0287           Production Date
     C                     Z-ADDWUQINV    WL0288           Quantity Invent
     C                     Z-ADDWN0105    WL0289           Quantity Produc
     C                     Z-ADDWN0169    WL0290           Quantity Sched
     C                     Z-ADDWN0126    WL0291           Quantity Sales
     C                     Z-ADDWN0147    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 9 Available
      * PAR.Day 9 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 9 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 9 Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 9 Sales USR
     C           WN0106    SUB  WN0170    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0127    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0148           Day 9 Availabil
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0050    WL0286           Avail Ship Date
     C                     Z-ADDWL0071    WL0287           Production Date
     C                     Z-ADDWUQINV    WL0288           Quantity Invent
     C                     Z-ADDWN0106    WL0289           Quantity Produc
     C                     Z-ADDWN0170    WL0290           Quantity Sched
     C                     Z-ADDWN0127    WL0291           Quantity Sales
     C                     Z-ADDWN0148    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 10 Available
      * PAR.Day 10 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 10 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 10 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 10 Sales USR
     C           WN0107    SUB  WN0171    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0128    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0149           Day 10 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0051    WL0286           Avail Ship Date
     C                     Z-ADDWL0072    WL0287           Production Date
     C                     Z-ADDWUQINV    WL0288           Quantity Invent
     C                     Z-ADDWN0107    WL0289           Quantity Produc
     C                     Z-ADDWN0171    WL0290           Quantity Sched
     C                     Z-ADDWN0128    WL0291           Quantity Sales
     C                     Z-ADDWN0149    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 11 Available
      * PAR.Day 11 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 11 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 11 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 11 Sales USR
     C           WN0108    SUB  WN0172    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0129    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0150           Day 11 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0052    WL0286           Avail Ship Date
     C                     Z-ADDWL0073    WL0287           Production Date
     C                     Z-ADDWUQINV    WL0288           Quantity Invent
     C                     Z-ADDWN0108    WL0289           Quantity Produc
     C                     Z-ADDWN0172    WL0290           Quantity Sched
     C                     Z-ADDWN0129    WL0291           Quantity Sales
     C                     Z-ADDWN0150    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 12 Available
      * PAR.Day 12 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 12 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 12 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 12 Sales USR
     C           WN0109    SUB  WN0173    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0130    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0151           Day 12 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0053    WL0286           Avail Ship Date
     C                     Z-ADDWL0074    WL0287           Production Date
     C                     Z-ADDWUQINV    WL0288           Quantity Invent
     C                     Z-ADDWN0109    WL0289           Quantity Produc
     C                     Z-ADDWN0173    WL0290           Quantity Sched
     C                     Z-ADDWN0130    WL0291           Quantity Sales
     C                     Z-ADDWN0151    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 13 Available
      * PAR.Day 13 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 13 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 13 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 13 Sales USR
     C           WN0110    SUB  WN0174    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0131    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0152           Day 13 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0054    WL0286           Avail Ship Date
     C                     Z-ADDWL0075    WL0287           Production Date
     C                     Z-ADDWUQINV    WL0288           Quantity Invent
     C                     Z-ADDWN0110    WL0289           Quantity Produc
     C                     Z-ADDWN0174    WL0290           Quantity Sched
     C                     Z-ADDWN0131    WL0291           Quantity Sales
     C                     Z-ADDWN0152    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 14 Available
      * PAR.Day 14 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 14 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 14 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 14 Sales USR
     C           WN0111    SUB  WN0175    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0132    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0153           Day 14 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0055    WL0286           Avail Ship Date
     C                     Z-ADDWL0076    WL0287           Production Date
     C                     Z-ADDWUQINV    WL0288           Quantity Invent
     C                     Z-ADDWN0111    WL0289           Quantity Produc
     C                     Z-ADDWN0175    WL0290           Quantity Sched
     C                     Z-ADDWN0132    WL0291           Quantity Sales
     C                     Z-ADDWN0153    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 15 Available
      * PAR.Day 15 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 15 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 15 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 15 Sales USR
     C           WN0112    SUB  WN0176    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0133    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0154           Day 15 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0056    WL0286           Avail Ship Date
     C                     Z-ADDWL0077    WL0287           Production Date
     C                     Z-ADDWUQINV    WL0288           Quantity Invent
     C                     Z-ADDWN0112    WL0289           Quantity Produc
     C                     Z-ADDWN0176    WL0290           Quantity Sched
     C                     Z-ADDWN0133    WL0291           Quantity Sales
     C                     Z-ADDWN0154    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 16 Available
      * PAR.Day 16 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 16 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 16 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 16 Sales USR
     C           WN0113    SUB  WN0177    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0134    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0155           Day 16 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0057    WL0286           Avail Ship Date
     C                     Z-ADDWL0078    WL0287           Production Date
     C                     Z-ADDWUQINV    WL0288           Quantity Invent
     C                     Z-ADDWN0113    WL0289           Quantity Produc
     C                     Z-ADDWN0177    WL0290           Quantity Sched
     C                     Z-ADDWN0134    WL0291           Quantity Sales
     C                     Z-ADDWN0155    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 17 Available
      * PAR.Day 17 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 17 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 17 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 17 Sales USR
     C           WN0114    SUB  WN0178    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0135    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0156           Day 17 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0058    WL0286           Avail Ship Date
     C                     Z-ADDWL0079    WL0287           Production Date
     C                     Z-ADDWUQINV    WL0288           Quantity Invent
     C                     Z-ADDWN0114    WL0289           Quantity Produc
     C                     Z-ADDWN0178    WL0290           Quantity Sched
     C                     Z-ADDWN0135    WL0291           Quantity Sales
     C                     Z-ADDWN0156    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 18 Available
      * PAR.Day 18 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 18 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 18 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 18 Sales USR
     C           WN0115    SUB  WN0179    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0136    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0157           Day 18 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0059    WL0286           Avail Ship Date
     C                     Z-ADDWL0080    WL0287           Production Date
     C                     Z-ADDWUQINV    WL0288           Quantity Invent
     C                     Z-ADDWN0115    WL0289           Quantity Produc
     C                     Z-ADDWN0179    WL0290           Quantity Sched
     C                     Z-ADDWN0136    WL0291           Quantity Sales
     C                     Z-ADDWN0157    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 19 Available
      * PAR.Day 19 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 19 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 19 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 19 Sales USR
     C           WN0116    SUB  WN0180    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0137    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0158           Day 19 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0060    WL0286           Avail Ship Date
     C                     Z-ADDWL0081    WL0287           Production Date
     C                     Z-ADDWUQINV    WL0288           Quantity Invent
     C                     Z-ADDWN0116    WL0289           Quantity Produc
     C                     Z-ADDWN0180    WL0290           Quantity Sched
     C                     Z-ADDWN0137    WL0291           Quantity Sales
     C                     Z-ADDWN0158    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 20 Available
      * PAR.Day 20 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 20 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 20 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 20 Sales USR
     C           WN0117    SUB  WN0181    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0138    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0159           Day 20 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0061    WL0286           Avail Ship Date
     C                     Z-ADDWL0082    WL0287           Production Date
     C                     Z-ADDWUQINV    WL0288           Quantity Invent
     C                     Z-ADDWN0117    WL0289           Quantity Produc
     C                     Z-ADDWN0181    WL0290           Quantity Sched
     C                     Z-ADDWN0138    WL0291           Quantity Sales
     C                     Z-ADDWN0159    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
      * Day 21 Available
      * PAR.Day 21 Availability USR =
      *    *COMPUTE (x2 - x3 -x4)
      * x2    : PAR.Day 21 Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Day 21 Sched Shipment USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Day 21 Sales USR
     C           WN0118    SUB  WN0182    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0139    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0160           Day 21 Availabi
      * CRT PA Work Array     CR - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0062    WL0286           Avail Ship Date
     C                     Z-ADDWL0083    WL0287           Production Date
     C                     Z-ADDWUQINV    WL0288           Quantity Invent
     C                     Z-ADDWN0118    WL0289           Quantity Produc
     C                     Z-ADDWN0182    WL0290           Quantity Sched
     C                     Z-ADDWN0139    WL0291           Quantity Sales
     C                     Z-ADDWN0160    WL0292           Quantity Availa
     C                     MOVEL'N'       WL0293    P      Reserved for Ot
     C                     EXSR TBCRRC
     C                     END                             *FI
      * Rtv Sched Ship/Clc PA RT - PD Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0039    WL0294           Company Number
     C                     Z-ADDWUC4NB    WL0295           Order Number
     C                     Z-ADDWL0040    WL0296           Item Code
     C                     MOVELWEAJCD    WL0297    P      Warehouse Code
     C                     Z-ADDWL0041    WL0298           Scheduled Ship
     C                     Z-ADDWL0062    WL0299           Avail Ship Date
     C                     MOVELWN0230    WL0300    P      Production Ware
     C                     MOVELWN0231    WL0301    P      Lot Tracking Fl
     C                     EXSR TCRVGN
      * If this is a production whse, then reserve other whse orders.
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Production Warehouse Code EQ PAR.Warehouse Code
      *   |- c2    : PAR.Production Warehouse Code is Warehouse Code Blan
      *   '-
     C           WN0230    IFEQ WEAJCD                     *IF
     C           WN0230    OREQ *BLANK                     *OR
      * Rtv Rsrvd Other Whse  RT - PD Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0039    WL0356           Company Number
     C                     Z-ADDWL0040    WL0357           Item Code
     C                     MOVELWEAJCD    WL0358    P      Warehouse Code
     C                     Z-ADDWL0041    WL0359           Scheduled Ship
     C                     Z-ADDWL0062    WL0360           Avail Ship Date
     C                     EXSR TORVGN
     C                     END                             *FI
      * Retrieve Sched Ship/Allocation/Available from PA Array
      * CASE: WRK.BLANK EQ WRK.BLANK
     C           WUGSTX    IFEQ WUGSTX                     *IF
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0042    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0162           Quantity Sched
     C                     Z-ADDWL0363    WN0119           Quantity Sales
     C                     Z-ADDWL0364    WN0140           Quantity Availa
     C                     MOVELWL0365    WL0084    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0043    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0163           Quantity Sched
     C                     Z-ADDWL0363    WN0120           Quantity Sales
     C                     Z-ADDWL0364    WN0141           Quantity Availa
     C                     MOVELWL0365    WL0085    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0044    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0164           Quantity Sched
     C                     Z-ADDWL0363    WN0121           Quantity Sales
     C                     Z-ADDWL0364    WN0142           Quantity Availa
     C                     MOVELWL0365    WL0086    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0045    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0165           Quantity Sched
     C                     Z-ADDWL0363    WN0122           Quantity Sales
     C                     Z-ADDWL0364    WN0143           Quantity Availa
     C                     MOVELWL0365    WL0087    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0046    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0166           Quantity Sched
     C                     Z-ADDWL0363    WN0123           Quantity Sales
     C                     Z-ADDWL0364    WN0144           Quantity Availa
     C                     MOVELWL0365    WL0088    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0047    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0167           Quantity Sched
     C                     Z-ADDWL0363    WN0124           Quantity Sales
     C                     Z-ADDWL0364    WN0145           Quantity Availa
     C                     MOVELWL0365    WL0089    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0048    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0168           Quantity Sched
     C                     Z-ADDWL0363    WN0125           Quantity Sales
     C                     Z-ADDWL0364    WN0146           Quantity Availa
     C                     MOVELWL0365    WL0090    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0049    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0169           Quantity Sched
     C                     Z-ADDWL0363    WN0126           Quantity Sales
     C                     Z-ADDWL0364    WN0147           Quantity Availa
     C                     MOVELWL0365    WL0091    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0050    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0170           Quantity Sched
     C                     Z-ADDWL0363    WN0127           Quantity Sales
     C                     Z-ADDWL0364    WN0148           Quantity Availa
     C                     MOVELWL0365    WL0092    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0051    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0171           Quantity Sched
     C                     Z-ADDWL0363    WN0128           Quantity Sales
     C                     Z-ADDWL0364    WN0149           Quantity Availa
     C                     MOVELWL0365    WL0093    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0052    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0172           Quantity Sched
     C                     Z-ADDWL0363    WN0129           Quantity Sales
     C                     Z-ADDWL0364    WN0150           Quantity Availa
     C                     MOVELWL0365    WL0094    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0053    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0173           Quantity Sched
     C                     Z-ADDWL0363    WN0130           Quantity Sales
     C                     Z-ADDWL0364    WN0151           Quantity Availa
     C                     MOVELWL0365    WL0095    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0054    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0174           Quantity Sched
     C                     Z-ADDWL0363    WN0131           Quantity Sales
     C                     Z-ADDWL0364    WN0152           Quantity Availa
     C                     MOVELWL0365    WL0096    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0055    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0175           Quantity Sched
     C                     Z-ADDWL0363    WN0132           Quantity Sales
     C                     Z-ADDWL0364    WN0153           Quantity Availa
     C                     MOVELWL0365    WL0097    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0056    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0176           Quantity Sched
     C                     Z-ADDWL0363    WN0133           Quantity Sales
     C                     Z-ADDWL0364    WN0154           Quantity Availa
     C                     MOVELWL0365    WL0098    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0057    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0177           Quantity Sched
     C                     Z-ADDWL0363    WN0134           Quantity Sales
     C                     Z-ADDWL0364    WN0155           Quantity Availa
     C                     MOVELWL0365    WL0099    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0058    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0178           Quantity Sched
     C                     Z-ADDWL0363    WN0135           Quantity Sales
     C                     Z-ADDWL0364    WN0156           Quantity Availa
     C                     MOVELWL0365    WL0100    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0059    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0179           Quantity Sched
     C                     Z-ADDWL0363    WN0136           Quantity Sales
     C                     Z-ADDWL0364    WN0157           Quantity Availa
     C                     MOVELWL0365    WL0101    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0060    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0180           Quantity Sched
     C                     Z-ADDWL0363    WN0137           Quantity Sales
     C                     Z-ADDWL0364    WN0158           Quantity Availa
     C                     MOVELWL0365    WL0102    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0061    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0181           Quantity Sched
     C                     Z-ADDWL0363    WN0138           Quantity Sales
     C                     Z-ADDWL0364    WN0159           Quantity Availa
     C                     MOVELWL0365    WL0103    P      Reserved for Ot
      * Rtv PA Array for Roll RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0062    WL0361           Avail Ship Date
     C                     EXSR TRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0362    WN0182           Quantity Sched
     C                     Z-ADDWL0363    WN0139           Quantity Sales
     C                     Z-ADDWL0364    WN0160           Quantity Availa
     C                     MOVELWL0365    WL0104    P      Reserved for Ot
     C                     END                             *FI
     C                     MOVEL'Y'       WN0161           Status - Y or N
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * If match found add up totals
      * CASE: PAR.Status - Y or N is yes
     C           WN0161    IFEQ 'Y'                        *IF
     C                     ADD  WN0084    WL0113           Day 1 Inventory
     C                     ADD  WN0085    WL0114           Day 2 Inventory
     C                     ADD  WN0086    WL0115           Day 3 Inventory
     C                     ADD  WN0087    WL0116           Day 4 Inventory
     C                     ADD  WN0088    WL0117           Day 5 Inventory
     C                     ADD  WN0089    WL0118           Day 6 Inventory
     C                     ADD  WN0090    WL0119           Day 7 Inventory
     C                     ADD  WN0091    WL0120           Day 8 Inventory
     C                     ADD  WN0092    WL0121           Day 9 Inventory
     C                     ADD  WN0093    WL0122           Day 10 Inventor
     C                     ADD  WN0094    WL0123           Day 11 Inventor
     C                     ADD  WN0095    WL0124           Day 12 Inventor
     C                     ADD  WN0096    WL0125           Day 13 Inventor
     C                     ADD  WN0097    WL0126           Day 14 Inventor
     C                     ADD  WN0098    WL0127           Day 1 Productio
     C                     ADD  WN0099    WL0128           Day 2 Productio
     C                     ADD  WN0100    WL0129           Day 3 Productio
     C                     ADD  WN0101    WL0130           Day 4 Productio
     C                     ADD  WN0102    WL0131           Day 5 Productio
     C                     ADD  WN0103    WL0132           Day 6 Productio
     C                     ADD  WN0104    WL0133           Day 7 Productio
     C                     ADD  WN0105    WL0134           Day 8 Prod Tota
     C                     ADD  WN0106    WL0135           Day 9 Prod Tota
     C                     ADD  WN0107    WL0136           Day 10 Prod Tot
     C                     ADD  WN0108    WL0137           Day 11 Prod Tot
     C                     ADD  WN0109    WL0138           Day 12 Prod Tot
     C                     ADD  WN0110    WL0139           Day 13 Prod Tot
     C                     ADD  WN0111    WL0140           Day 14 Prod Tot
     C                     ADD  WN0112    WL0141           Day 15 Prod Tot
     C                     ADD  WN0113    WL0142           Day 16 Prod Tot
     C                     ADD  WN0114    WL0143           Day 17 Prod Tot
     C                     ADD  WN0115    WL0144           Day 18 Prod Tot
     C                     ADD  WN0116    WL0145           Day 19 Prod Tot
     C                     ADD  WN0117    WL0146           Day 20 Prod Tot
     C                     ADD  WN0118    WL0147           Day 21 Prod Tot
     C                     ADD  WN0162    WL0190           Day 1 Schd Ship
     C                     ADD  WN0163    WL0191           Day 2 Schd Ship
     C                     ADD  WN0164    WL0192           Day 3 Schd Ship
     C                     ADD  WN0165    WL0193           Day 4 Schd Ship
     C                     ADD  WN0166    WL0194           Day 5 Schd Ship
     C                     ADD  WN0167    WL0195           Day 6 Schd Ship
     C                     ADD  WN0168    WL0196           Day 7 Schd Ship
     C                     ADD  WN0169    WL0197           Day 8 Schd Ship
     C                     ADD  WN0170    WL0198           Day 9 Schd Ship
     C                     ADD  WN0171    WL0199           Day 10 SchdShip
     C                     ADD  WN0172    WL0200           Day 11 SchdShip
     C                     ADD  WN0173    WL0201           Day 12 SchdShip
     C                     ADD  WN0174    WL0202           Day 13 SchdShip
     C                     ADD  WN0175    WL0203           Day 14 SchdShip
     C                     ADD  WN0176    WL0204           Day 15 SchdShip
     C                     ADD  WN0177    WL0205           Day 16 SchdShip
     C                     ADD  WN0178    WL0206           Day 17 SchdShip
     C                     ADD  WN0179    WL0207           Day 18 SchdShip
     C                     ADD  WN0180    WL0208           Day 19 SchdShip
     C                     ADD  WN0181    WL0209           Day 20 SchdShip
     C                     ADD  WN0182    WL0210           Day 21 SchdShip
     C                     ADD  WN0119    WL0148           Day 1 Sales Tot
     C                     ADD  WN0120    WL0149           Day 2 Sales Tot
     C                     ADD  WN0121    WL0150           Day 3 Sales Tot
     C                     ADD  WN0122    WL0151           Day 4 Sales Tot
     C                     ADD  WN0123    WL0152           Day 5 Sales Tot
     C                     ADD  WN0124    WL0153           Day 6 Sales Tot
     C                     ADD  WN0125    WL0154           Day 7 Sales Tot
     C                     ADD  WN0126    WL0155           Day 8 Sales Tot
     C                     ADD  WN0127    WL0156           Day 9 Sales Tot
     C                     ADD  WN0128    WL0157           Day 10 Sales To
     C                     ADD  WN0129    WL0158           Day 11 Sales To
     C                     ADD  WN0130    WL0159           Day 12 Sales To
     C                     ADD  WN0131    WL0160           Day 13 Sales To
     C                     ADD  WN0132    WL0161           Day 14 Sales To
     C                     ADD  WN0133    WL0162           Day 15 Sales To
     C                     ADD  WN0134    WL0163           Day 16 Sales To
     C                     ADD  WN0135    WL0164           Day 17 Sales To
     C                     ADD  WN0136    WL0165           Day 18 Sales To
     C                     ADD  WN0137    WL0166           Day 19 Sales To
     C                     ADD  WN0138    WL0167           Day 20 Sales To
     C                     ADD  WN0139    WL0168           Day 21 Sales To
     C                     ADD  WN0140    WL0169           Day 1 Avail Tot
     C                     ADD  WN0141    WL0170           Day 2 Avail Tot
     C                     ADD  WN0142    WL0171           Day 3 Avail Tot
     C                     ADD  WN0143    WL0172           Day 4 Avail Tot
     C                     ADD  WN0144    WL0173           Day 5 Avail Tot
     C                     ADD  WN0145    WL0174           Day 6 Avail Tot
     C                     ADD  WN0146    WL0175           Day 7 Avail Tot
     C                     ADD  WN0147    WL0176           Day 8 Avail Tot
     C                     ADD  WN0148    WL0177           Day 9 Avail Tot
     C                     ADD  WN0149    WL0178           Day 10 Avail To
     C                     ADD  WN0150    WL0179           Day 11 Avail To
     C                     ADD  WN0151    WL0180           Day 12 Avail To
     C                     ADD  WN0152    WL0181           Day 13 Avail To
     C                     ADD  WN0153    WL0182           Day 14 Avail To
     C                     ADD  WN0154    WL0183           Day 15 Avail To
     C                     ADD  WN0155    WL0184           Day 16 Avail To
     C                     ADD  WN0156    WL0185           Day 17 Avail To
     C                     ADD  WN0157    WL0186           Day 18 Avail To
     C                     ADD  WN0158    WL0187           Day 19 Avail To
     C                     ADD  WN0159    WL0188           Day 20 Avail To
     C                     ADD  WN0160    WL0189           Day 21 Avail To
     C                     END                             *FI
     C                     MOVEL'N'       WN0161           Status - Y or N
     C                     READ @ADREOJ                  90*
     C                     ENDDO
      *================================================================
     CSR         SWEXIT    ENDSR
      /EJECT
     CSR         SXRVGN    BEGSR
      *================================================================
      * Rtv Prod Whse/Lot Trck RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSX     KLIST
     C                     KFLD           ADAJCD           Warehouse Code
      * Setup key
     C                     MOVELWL0211    ADAJCD           Warehouse Code
      * Establish starting position
     C           KRSSX     CHAIN@ADREAO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0212           Production Ware
     C                     MOVEL*BLANK    WL0213           Lot Tracking Fl
     C                     GOTO SXEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELADAOCD    WL0212           Production Ware
     C                     MOVELADVHST    WL0213           Lot Tracking Fl
     C                     ENDIF
      *================================================================
     CSR         SXEXIT    ENDSR
      /EJECT
     CSR         SYRVGN    BEGSR
      *================================================================
      * Rtv PA Production     RT - PS Prod Item Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0185  61       Quantity Sched
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WFAIC3    WQSY01           Company Number
     C           *LIKE     DEFN WFHGCD    WQSY02           Item Code
     C           *LIKE     DEFN WFAJCD    WQSY03           Warehouse Code
      * Define keylist
     C           KPSSY     KLIST
     C                     KFLD           WQSY01           Company Number
     C                     KFLD           WQSY02           Item Code
     C                     KFLD           WQSY03           Warehouse Code
     C                     KFLD           WFGPDT           PS Available Sh
      * Define keylist
     C           KRSSY     KLIST
     C                     KFLD           WQSY01           Company Number
     C                     KFLD           WQSY02           Item Code
     C                     KFLD           WQSY03           Warehouse Code
      * Setup key
     C                     Z-ADDWL0214    WQSY01           Company Number
     C                     Z-ADDWL0215    WQSY02           Item Code
     C                     MOVELWL0216    WQSY03           Warehouse Code
     C                     Z-ADDWL0217    WFGPDT           PS Available Sh
      * Establish starting position
     C           KPSSY     SETLL@I8CPDZ                    *
     C           KRSSY     READE@I8CPDZ                  90*
      * Data record not found
     C   90                MOVEL'USR1763' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * Is it time to Quit ??
      * CASE: DB1.PS Available Ship Date GT PAR.Avail Ship Date 21 USR
     C           WFGPDT    IFGT WL0238                     *IF
     C                     GOTO SYEXIT                     *QUIT
     C                     END                             *FI
      * CASE: DB1.PA Available Ship Date GE JOB.*Job date
     C           WFGPDT    IFGE ##JDT                      *IF
      * Calculate Production based on Unit Weight or Pieces
      * CASE: (Unit Weight > 0  OR Piece count item
      *  - c2 OR c3
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C           WL0281    IFGT 0                          *IF
     C           WL0283    OREQ 'Y'                        *OR
      * Retrieve production according to day
      * CASE: PAR.Avail Ship Date 1 USR EQ DB1.PA Available Ship Date
     C           WL0218    IFEQ WFGPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFEQ ##JDT                      *IF
     C           WFV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0282    IFGT 0                          *IF
     C           WL0218    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFLT ##JDT                      *IF
     C           WFV5ST    IFEQ 'P'                        *IF
     C           WL0282    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFLT ##JDT                      *IF
     C           WL0218    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WFV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFEQ *BLANK                     *IF
     C           WL0283    OREQ 'N'
     C           WL0281    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WFDXWG    ADD  WFD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WFWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WFGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WL0281    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0260           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFEQ 'Y'                        *IF
     C           WL0284    IFGT 0                          *IF
     C           WL0285    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WFB2NB    ADD  WFCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WFPSCV    W0WD01           *Synon (17,7) w
     C           WL0284    MULT WL0285    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0260           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WL0260    IFLT 0                          *IF
     C                     Z-ADD0         WL0260           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWFELDT    WL0239           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 2 USR EQ DB1.PA Available Ship Date
     C           WL0219    IFEQ WFGPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFEQ ##JDT                      *IF
     C           WFV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0282    IFGT 0                          *IF
     C           WL0219    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFLT ##JDT                      *IF
     C           WFV5ST    IFEQ 'P'                        *IF
     C           WL0282    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFLT ##JDT                      *IF
     C           WL0219    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WFV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFEQ *BLANK                     *IF
     C           WL0283    OREQ 'N'
     C           WL0281    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WFDXWG    ADD  WFD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WFWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WFGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WL0281    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0261           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFEQ 'Y'                        *IF
     C           WL0284    IFGT 0                          *IF
     C           WL0285    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WFB2NB    ADD  WFCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WFPSCV    W0WD01           *Synon (17,7) w
     C           WL0284    MULT WL0285    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0261           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WL0261    IFLT 0                          *IF
     C                     Z-ADD0         WL0261           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWFELDT    WL0240           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 3 USR EQ DB1.PA Available Ship Date
     C           WL0220    IFEQ WFGPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFEQ ##JDT                      *IF
     C           WFV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0282    IFGT 0                          *IF
     C           WL0220    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFLT ##JDT                      *IF
     C           WFV5ST    IFEQ 'P'                        *IF
     C           WL0282    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFLT ##JDT                      *IF
     C           WL0220    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WFV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFEQ *BLANK                     *IF
     C           WL0283    OREQ 'N'
     C           WL0281    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WFDXWG    ADD  WFD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WFWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WFGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WL0281    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0262           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFEQ 'Y'                        *IF
     C           WL0284    IFGT 0                          *IF
     C           WL0285    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WFB2NB    ADD  WFCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WFPSCV    W0WD01           *Synon (17,7) w
     C           WL0284    MULT WL0285    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0262           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WL0262    IFLT 0                          *IF
     C                     Z-ADD0         WL0262           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWFELDT    WL0241           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 4 USR EQ DB1.PA Available Ship Date
     C           WL0221    IFEQ WFGPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFEQ ##JDT                      *IF
     C           WFV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0282    IFGT 0                          *IF
     C           WL0221    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFLT ##JDT                      *IF
     C           WFV5ST    IFEQ 'P'                        *IF
     C           WL0282    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFLT ##JDT                      *IF
     C           WL0221    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WFV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFEQ *BLANK                     *IF
     C           WL0283    OREQ 'N'
     C           WL0281    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WFDXWG    ADD  WFD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WFWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WFGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WL0281    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0263           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFEQ 'Y'                        *IF
     C           WL0284    IFGT 0                          *IF
     C           WL0285    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WFB2NB    ADD  WFCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WFPSCV    W0WD01           *Synon (17,7) w
     C           WL0284    MULT WL0285    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0263           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WL0263    IFLT 0                          *IF
     C                     Z-ADD0         WL0263           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWFELDT    WL0242           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 5 USR EQ DB1.PA Available Ship Date
     C           WL0222    IFEQ WFGPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFEQ ##JDT                      *IF
     C           WFV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0282    IFGT 0                          *IF
     C           WL0222    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFLT ##JDT                      *IF
     C           WFV5ST    IFEQ 'P'                        *IF
     C           WL0282    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFLT ##JDT                      *IF
     C           WL0222    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WFV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFEQ *BLANK                     *IF
     C           WL0283    OREQ 'N'
     C           WL0281    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WFDXWG    ADD  WFD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WFWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WFGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WL0281    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0264           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFEQ 'Y'                        *IF
     C           WL0284    IFGT 0                          *IF
     C           WL0285    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WFB2NB    ADD  WFCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WFPSCV    W0WD01           *Synon (17,7) w
     C           WL0284    MULT WL0285    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0264           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WL0264    IFLT 0                          *IF
     C                     Z-ADD0         WL0264           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWFELDT    WL0243           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 6 USR EQ DB1.PA Available Ship Date
     C           WL0223    IFEQ WFGPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFEQ ##JDT                      *IF
     C           WFV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0282    IFGT 0                          *IF
     C           WL0223    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFLT ##JDT                      *IF
     C           WFV5ST    IFEQ 'P'                        *IF
     C           WL0282    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFLT ##JDT                      *IF
     C           WL0223    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WFV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFEQ *BLANK                     *IF
     C           WL0283    OREQ 'N'
     C           WL0281    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WFDXWG    ADD  WFD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WFWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WFGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WL0281    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0265           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFEQ 'Y'                        *IF
     C           WL0284    IFGT 0                          *IF
     C           WL0285    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WFB2NB    ADD  WFCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WFPSCV    W0WD01           *Synon (17,7) w
     C           WL0284    MULT WL0285    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0265           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WL0265    IFLT 0                          *IF
     C                     Z-ADD0         WL0265           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWFELDT    WL0244           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 7 USR EQ DB1.PA Available Ship Date
     C           WL0224    IFEQ WFGPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFEQ ##JDT                      *IF
     C           WFV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0282    IFGT 0                          *IF
     C           WL0224    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFLT ##JDT                      *IF
     C           WFV5ST    IFEQ 'P'                        *IF
     C           WL0282    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFLT ##JDT                      *IF
     C           WL0224    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WFV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFEQ *BLANK                     *IF
     C           WL0283    OREQ 'N'
     C           WL0281    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WFDXWG    ADD  WFD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WFWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WFGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WL0281    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0266           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFEQ 'Y'                        *IF
     C           WL0284    IFGT 0                          *IF
     C           WL0285    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WFB2NB    ADD  WFCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WFPSCV    W0WD01           *Synon (17,7) w
     C           WL0284    MULT WL0285    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0266           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WL0266    IFLT 0                          *IF
     C                     Z-ADD0         WL0266           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWFELDT    WL0245           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 8 USR EQ DB1.PA Available Ship Date
     C           WL0225    IFEQ WFGPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFEQ ##JDT                      *IF
     C           WFV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0282    IFGT 0                          *IF
     C           WL0225    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFLT ##JDT                      *IF
     C           WFV5ST    IFEQ 'P'                        *IF
     C           WL0282    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFLT ##JDT                      *IF
     C           WL0225    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WFV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFEQ *BLANK                     *IF
     C           WL0283    OREQ 'N'
     C           WL0281    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WFDXWG    ADD  WFD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WFWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WFGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WL0281    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0267           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFEQ 'Y'                        *IF
     C           WL0284    IFGT 0                          *IF
     C           WL0285    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WFB2NB    ADD  WFCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WFPSCV    W0WD01           *Synon (17,7) w
     C           WL0284    MULT WL0285    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0267           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WL0267    IFLT 0                          *IF
     C                     Z-ADD0         WL0267           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWFELDT    WL0246           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 9 USR EQ DB1.PA Available Ship Date
     C           WL0226    IFEQ WFGPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFEQ ##JDT                      *IF
     C           WFV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0282    IFGT 0                          *IF
     C           WL0226    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFLT ##JDT                      *IF
     C           WFV5ST    IFEQ 'P'                        *IF
     C           WL0282    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFLT ##JDT                      *IF
     C           WL0226    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WFV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFEQ *BLANK                     *IF
     C           WL0283    OREQ 'N'
     C           WL0281    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WFDXWG    ADD  WFD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WFWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WFGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WL0281    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0268           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFEQ 'Y'                        *IF
     C           WL0284    IFGT 0                          *IF
     C           WL0285    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WFB2NB    ADD  WFCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WFPSCV    W0WD01           *Synon (17,7) w
     C           WL0284    MULT WL0285    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0268           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WL0268    IFLT 0                          *IF
     C                     Z-ADD0         WL0268           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWFELDT    WL0247           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 10 USR EQ DB1.PA Available Ship Date
     C           WL0227    IFEQ WFGPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFEQ ##JDT                      *IF
     C           WFV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0282    IFGT 0                          *IF
     C           WL0227    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFLT ##JDT                      *IF
     C           WFV5ST    IFEQ 'P'                        *IF
     C           WL0282    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFLT ##JDT                      *IF
     C           WL0227    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WFV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFEQ *BLANK                     *IF
     C           WL0283    OREQ 'N'
     C           WL0281    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WFDXWG    ADD  WFD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WFWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WFGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WL0281    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0269           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFEQ 'Y'                        *IF
     C           WL0284    IFGT 0                          *IF
     C           WL0285    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WFB2NB    ADD  WFCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WFPSCV    W0WD01           *Synon (17,7) w
     C           WL0284    MULT WL0285    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0269           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WL0269    IFLT 0                          *IF
     C                     Z-ADD0         WL0269           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWFELDT    WL0248           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 11 USR EQ DB1.PA Available Ship Date
     C           WL0228    IFEQ WFGPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFEQ ##JDT                      *IF
     C           WFV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0282    IFGT 0                          *IF
     C           WL0228    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFLT ##JDT                      *IF
     C           WFV5ST    IFEQ 'P'                        *IF
     C           WL0282    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFLT ##JDT                      *IF
     C           WL0228    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WFV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFEQ *BLANK                     *IF
     C           WL0283    OREQ 'N'
     C           WL0281    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WFDXWG    ADD  WFD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WFWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WFGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WL0281    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0270           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFEQ 'Y'                        *IF
     C           WL0284    IFGT 0                          *IF
     C           WL0285    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WFB2NB    ADD  WFCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WFPSCV    W0WD01           *Synon (17,7) w
     C           WL0284    MULT WL0285    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0270           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WL0270    IFLT 0                          *IF
     C                     Z-ADD0         WL0270           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWFELDT    WL0249           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 12 USR EQ DB1.PA Available Ship Date
     C           WL0229    IFEQ WFGPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFEQ ##JDT                      *IF
     C           WFV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0282    IFGT 0                          *IF
     C           WL0229    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFLT ##JDT                      *IF
     C           WFV5ST    IFEQ 'P'                        *IF
     C           WL0282    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFLT ##JDT                      *IF
     C           WL0229    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WFV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFEQ *BLANK                     *IF
     C           WL0283    OREQ 'N'
     C           WL0281    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WFDXWG    ADD  WFD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WFWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WFGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WL0281    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0271           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFEQ 'Y'                        *IF
     C           WL0284    IFGT 0                          *IF
     C           WL0285    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WFB2NB    ADD  WFCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WFPSCV    W0WD01           *Synon (17,7) w
     C           WL0284    MULT WL0285    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0271           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WL0271    IFLT 0                          *IF
     C                     Z-ADD0         WL0271           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWFELDT    WL0250           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 13 USR EQ DB1.PA Available Ship Date
     C           WL0230    IFEQ WFGPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFEQ ##JDT                      *IF
     C           WFV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0282    IFGT 0                          *IF
     C           WL0230    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFLT ##JDT                      *IF
     C           WFV5ST    IFEQ 'P'                        *IF
     C           WL0282    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFLT ##JDT                      *IF
     C           WL0230    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WFV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFEQ *BLANK                     *IF
     C           WL0283    OREQ 'N'
     C           WL0281    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WFDXWG    ADD  WFD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WFWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WFGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WL0281    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0272           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFEQ 'Y'                        *IF
     C           WL0284    IFGT 0                          *IF
     C           WL0285    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WFB2NB    ADD  WFCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WFPSCV    W0WD01           *Synon (17,7) w
     C           WL0284    MULT WL0285    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0272           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WL0272    IFLT 0                          *IF
     C                     Z-ADD0         WL0272           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWFELDT    WL0251           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 14 USR EQ DB1.PA Available Ship Date
     C           WL0231    IFEQ WFGPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFEQ ##JDT                      *IF
     C           WFV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0282    IFGT 0                          *IF
     C           WL0231    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFLT ##JDT                      *IF
     C           WFV5ST    IFEQ 'P'                        *IF
     C           WL0282    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFLT ##JDT                      *IF
     C           WL0231    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WFV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFEQ *BLANK                     *IF
     C           WL0283    OREQ 'N'
     C           WL0281    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WFDXWG    ADD  WFD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WFWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WFGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WL0281    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0273           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFEQ 'Y'                        *IF
     C           WL0284    IFGT 0                          *IF
     C           WL0285    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WFB2NB    ADD  WFCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WFPSCV    W0WD01           *Synon (17,7) w
     C           WL0284    MULT WL0285    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0273           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WL0273    IFLT 0                          *IF
     C                     Z-ADD0         WL0273           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWFELDT    WL0252           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 15 USR EQ DB1.PS Available Ship Date
     C           WL0232    IFEQ WFGPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFEQ ##JDT                      *IF
     C           WFV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0282    IFGT 0                          *IF
     C           WL0232    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFLT ##JDT                      *IF
     C           WFV5ST    IFEQ 'P'                        *IF
     C           WL0282    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFLT ##JDT                      *IF
     C           WL0232    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WFV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFEQ *BLANK                     *IF
     C           WL0283    OREQ 'N'
     C           WL0281    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WFDXWG    ADD  WFD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WFWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WFGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WL0281    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0274           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFEQ 'Y'                        *IF
     C           WL0284    IFGT 0                          *IF
     C           WL0285    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WFB2NB    ADD  WFCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WFPSCV    W0WD01           *Synon (17,7) w
     C           WL0284    MULT WL0285    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0274           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WL0274    IFLT 0                          *IF
     C                     Z-ADD0         WL0274           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWFELDT    WL0253           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 16 USR EQ DB1.PS Available Ship Date
     C           WL0233    IFEQ WFGPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFEQ ##JDT                      *IF
     C           WFV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0282    IFGT 0                          *IF
     C           WL0233    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFLT ##JDT                      *IF
     C           WFV5ST    IFEQ 'P'                        *IF
     C           WL0282    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFLT ##JDT                      *IF
     C           WL0233    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WFV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFEQ *BLANK                     *IF
     C           WL0283    OREQ 'N'
     C           WL0281    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WFDXWG    ADD  WFD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WFWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WFGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WL0281    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0275           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFEQ 'Y'                        *IF
     C           WL0284    IFGT 0                          *IF
     C           WL0285    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WFB2NB    ADD  WFCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WFPSCV    W0WD01           *Synon (17,7) w
     C           WL0284    MULT WL0285    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0275           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WL0275    IFLT 0                          *IF
     C                     Z-ADD0         WL0275           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWFELDT    WL0254           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 17 USR EQ DB1.PS Available Ship Date
     C           WL0234    IFEQ WFGPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFEQ ##JDT                      *IF
     C           WFV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0282    IFGT 0                          *IF
     C           WL0234    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFLT ##JDT                      *IF
     C           WFV5ST    IFEQ 'P'                        *IF
     C           WL0282    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFLT ##JDT                      *IF
     C           WL0234    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WFV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFEQ *BLANK                     *IF
     C           WL0283    OREQ 'N'
     C           WL0281    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WFDXWG    ADD  WFD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WFWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WFGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WL0281    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0276           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFEQ 'Y'                        *IF
     C           WL0284    IFGT 0                          *IF
     C           WL0285    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WFB2NB    ADD  WFCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WFPSCV    W0WD01           *Synon (17,7) w
     C           WL0284    MULT WL0285    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0276           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WL0276    IFLT 0                          *IF
     C                     Z-ADD0         WL0276           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWFELDT    WL0255           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 18 USR EQ DB1.PS Available Ship Date
     C           WL0235    IFEQ WFGPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFEQ ##JDT                      *IF
     C           WFV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0282    IFGT 0                          *IF
     C           WL0235    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFLT ##JDT                      *IF
     C           WFV5ST    IFEQ 'P'                        *IF
     C           WL0282    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFLT ##JDT                      *IF
     C           WL0235    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WFV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFEQ *BLANK                     *IF
     C           WL0283    OREQ 'N'
     C           WL0281    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WFDXWG    ADD  WFD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WFWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WFGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WL0281    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0277           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFEQ 'Y'                        *IF
     C           WL0284    IFGT 0                          *IF
     C           WL0285    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WFB2NB    ADD  WFCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WFPSCV    W0WD01           *Synon (17,7) w
     C           WL0284    MULT WL0285    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0277           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WL0277    IFLT 0                          *IF
     C                     Z-ADD0         WL0277           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWFELDT    WL0256           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 19 USR EQ DB1.PS Available Ship Date
     C           WL0236    IFEQ WFGPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFEQ ##JDT                      *IF
     C           WFV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0282    IFGT 0                          *IF
     C           WL0236    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFLT ##JDT                      *IF
     C           WFV5ST    IFEQ 'P'                        *IF
     C           WL0282    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFLT ##JDT                      *IF
     C           WL0236    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WFV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFEQ *BLANK                     *IF
     C           WL0283    OREQ 'N'
     C           WL0281    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WFDXWG    ADD  WFD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WFWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WFGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WL0281    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0278           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFEQ 'Y'                        *IF
     C           WL0284    IFGT 0                          *IF
     C           WL0285    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WFB2NB    ADD  WFCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WFPSCV    W0WD01           *Synon (17,7) w
     C           WL0284    MULT WL0285    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0278           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WL0278    IFLT 0                          *IF
     C                     Z-ADD0         WL0278           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWFELDT    WL0257           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 20 USR EQ DB1.PS Available Ship Date
     C           WL0237    IFEQ WFGPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFEQ ##JDT                      *IF
     C           WFV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0282    IFGT 0                          *IF
     C           WL0237    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFLT ##JDT                      *IF
     C           WFV5ST    IFEQ 'P'                        *IF
     C           WL0282    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFLT ##JDT                      *IF
     C           WL0237    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WFV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFEQ *BLANK                     *IF
     C           WL0283    OREQ 'N'
     C           WL0281    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WFDXWG    ADD  WFD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WFWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WFGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WL0281    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0279           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFEQ 'Y'                        *IF
     C           WL0284    IFGT 0                          *IF
     C           WL0285    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WFB2NB    ADD  WFCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WFPSCV    W0WD01           *Synon (17,7) w
     C           WL0284    MULT WL0285    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0279           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WL0279    IFLT 0                          *IF
     C                     Z-ADD0         WL0279           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWFELDT    WL0258           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Avail Ship Date 21 USR EQ DB1.PS Available Ship Date
     C           WL0238    IFEQ WFGPDT                     *IF
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFEQ ##JDT                      *IF
     C           WFV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0282    IFGT 0                          *IF
     C           WL0238    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFLT ##JDT                      *IF
     C           WFV5ST    IFEQ 'P'                        *IF
     C           WL0282    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WFELDT    IFLT ##JDT                      *IF
     C           WL0238    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WFV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFEQ *BLANK                     *IF
     C           WL0283    OREQ 'N'
     C           WL0281    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WFDXWG    ADD  WFD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WFWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WFGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WL0281    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0280           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0283    IFEQ 'Y'                        *IF
     C           WL0284    IFGT 0                          *IF
     C           WL0285    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WFB2NB    ADD  WFCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WFPSCV    W0WD01           *Synon (17,7) w
     C           WL0284    MULT WL0285    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0280           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           WL0280    IFLT 0                          *IF
     C                     Z-ADD0         WL0280           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWFELDT    WL0259           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSY     READE@I8CPDZ                  90*
     C                     ENDDO
      *================================================================
     CSR         SYEXIT    ENDSR
      /EJECT
     CSR         SZRVGN    BEGSR
      *================================================================
      * Del PA Work Array Roll RT - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
     C                     Z-ADD1         Y       50
     C           YL01      IFGT 0
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
     C                     ELSE
      * Array element not found
     C                     MOVEL'Y2U0005' W0RTN   7
     C                     ENDIF
      *
      * Sequence through qualified elements:
     C                     Z-ADDY         YR01    50
     C           YR01      DOWLEYL01
     C                     Z-ADDYR01      Y
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * USER: Process Data record
      * Del PA Work Array Roll DL - *Arrays  * 
     C                     EXSR TADLRC
     C                     ADD  1         YR01
     C                     ENDDO
      *================================================================
     CSR         SZEXIT    ENDSR
      /EJECT
     CSR         TADLRC    BEGSR
      *================================================================
      * Del PA Work Array Roll DL - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move key fields to PA Work Array for Roll
     C                     Z-ADDWGJODT    YI0101           Avail Ship Date
      *
      * Reset global index if not within range of current elements
     C           Y         IFGT YL01
     C                     Z-ADD1         Y
     C                     ENDIF
      * Only search if not already pointing to correct element
     C           Y         IFGT 0
     C           YD01      ANDNEYK01,Y
      * Initialize internal index
     C                     Z-ADD99999     YI01
      * Only search if key is not beyond range of current elements
     C           YL01      IFGT 0
     C           YK01,YL01 ANDLTYD01
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C           YD01      LOKUPYK01,Y                 90  Look for <
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFNE WGJODT
      *
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * Element not found in array
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     GOTO TAEXIT
     C                     ENDIF
     C                     ENDIF
      *
      * Adjust RTVOBJ index to reflect position of added/removed element
     C           YR01      IFGT 0
     C           YR01      ANDLE100
     C           YK01,YR01 ANDLEYD01
     C                     SUB  1         YR01    50
     C                     ENDIF
      *
      * Initialize keys in array but retain index to MODS for later reuse
     C                     Z-ADDYI01      YISAV   50
     C                     MOVEL*LOVAL    YD01
     C                     Z-ADDYISAV     YI01
     C                     MOVELYD01      YK01,Y
      * Sort array to compress out deleted element
     C                     SORTAYK01
      * Adjust number of elements currently in array
     C                     SUB  1         YL01
      *================================================================
     CSR         TAEXIT    ENDSR
      /EJECT
     CSR         TBCRRC    BEGSR
      *================================================================
      * CRT PA Work Array     CR - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Array full, cannot add any more elements
     C           YL01      IFEQ 100
     C                     MOVEL'Y2U0036' W0RTN   7
     C                     GOTO TBEXIT
     C                     ENDIF
      *
     C                     Z-ADD*ZERO     XAJODT           Avail Ship Date
     C                     Z-ADD*ZERO     XAGXDT           Production Date
     C                     Z-ADD*ZERO     XAQINV           Quantity Invent
     C                     Z-ADD*ZERO     XAWPRD           Quantity Produc
     C                     Z-ADD*ZERO     XAQSSH           Quantity Sched
     C                     Z-ADD*ZERO     XAWSLS           Quantity Sales
     C                     Z-ADD*ZERO     XAQAVL           Quantity Availa
     C                     MOVEL*BLANK    XAG2SX           Reserved for Ot
      * Move all fields to PA Work Array for Roll
     C                     Z-ADDWL0286    XAJODT           Avail Ship Date
     C                     Z-ADDWL0287    XAGXDT           Production Date
     C                     Z-ADDWL0288    XAQINV           Quantity Invent
     C                     Z-ADDWL0289    XAWPRD           Quantity Produc
     C                     Z-ADDWL0290    XAQSSH           Quantity Sched
     C                     Z-ADDWL0291    XAWSLS           Quantity Sales
     C                     Z-ADDWL0292    XAQAVL           Quantity Availa
     C                     MOVELWL0293    XAG2SX           Reserved for Ot
      *
      * Move key fields to PA Work Array for Roll
     C                     Z-ADDXAJODT    YI0101           Avail Ship Date
      *
      * Check for duplicate primary key
      * Initialize internal index
     C                     Z-ADD99999     YI01
      * Only search if key is not beyond range of current elements
     C           YL01      IFGT 0
     C           YK01,YL01 ANDLTYD01
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C           YD01      LOKUPYK01,Y                 90  Look for <
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFEQ XAJODT
      * Array element already exists
     C                     MOVEL'Y2U0003' W0RTN   7
     C                     GOTO TBEXIT
     C                     ENDIF
      *
     C                     ENDIF
      *
      * Insert after last used element
     C           YL01      ADD  1         Y       50
      * Check if element was a previously deleted element
     C           YK01,Y    IFNE *LOVAL
      * If so, reuse MODS index
     C                     MOVELYK01,Y    YD01
     C                     ELSE
      * If not, use element number as MODS index
     C                     Z-ADDY         YI01
     C                     ENDIF
      *
      * Create(insert) new element
      * Move key fields to PA Work Array for Roll
     C                     Z-ADDXAJODT    YI0101           Avail Ship Date
      *
     C                     MOVELYD01      YK01,Y
     C           YI01      OCUR YM01
      * Update MODS fields
     C                     Z-ADDXAJODT    WGJODT           Avail Ship Date
     C                     Z-ADDXAGXDT    WGGXDT           Production Date
     C                     Z-ADDXAQINV    WGQINV           Quantity Invent
     C                     Z-ADDXAWPRD    WGWPRD           Quantity Produc
     C                     Z-ADDXAQSSH    WGQSSH           Quantity Sched
     C                     Z-ADDXAWSLS    WGWSLS           Quantity Sales
     C                     Z-ADDXAQAVL    WGQAVL           Quantity Availa
     C                     MOVELXAG2SX    WGG2SX           Reserved for Ot
      * Only sort if element is out of position
     C           YL01      IFGT 0
     C           YK01,YL01 ANDLTYD01
      * Adjust RTVOBJ index to reflect position of added/removed element
     C           YR01      IFGT 0
     C           YR01      ANDLE100
     C           YK01,YR01 ANDLTYD01
     C                     ADD  1         YR01    50
     C                     ENDIF
      * Sort array to place element in correct position
     C                     SORTAYK01
     C                     ENDIF
      * Adjust number of elements currently in array
     C                     ADD  1         YL01
      *================================================================
     CSR         TBEXIT    ENDSR
      /EJECT
     CSR         TCRVGN    BEGSR
      *================================================================
      * Rtv Sched Ship/Clc PA RT - PD Order Detail  * 
      *================================================================
      *
     C                     MOVEL*BLANK    WN0186  1        Header Status
     C                     Z-ADD*ZERO     WN0187  50       Aging Day
     C                     Z-ADD*ZERO     WN0188  70       Week End Date
     C                     Z-ADD*ZERO     WN0189 112       Qty Not Alloc o
     C                     Z-ADD*ZERO     WN0190 112       ATS Quantity Ne
     C                     Z-ADD*ZERO     WN0191  40       Accounting Year
     C                     Z-ADD*ZERO     WN0192  20       Accounting Peri
     C                     Z-ADD*ZERO     WN0193  20       Week Number
     C                     MOVEL*BLANK    WN0194  1        Production Type
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WHAIC3    WQTC01           Company Number
     C           *LIKE     DEFN WHHGCD    WQTC02           Item Code
     C           *LIKE     DEFN WHAJCD    WQTC03           Warehouse Code
      * Define keylist
     C           KPSTC     KLIST
     C                     KFLD           WQTC01           Company Number
     C                     KFLD           WQTC02           Item Code
     C                     KFLD           WQTC03           Warehouse Code
     C                     KFLD           WHAODT           Scheduled Ship
      * Define keylist
     C           KRSTC     KLIST
     C                     KFLD           WQTC01           Company Number
     C                     KFLD           WQTC02           Item Code
     C                     KFLD           WQTC03           Warehouse Code
      * Setup key
     C                     Z-ADDWL0294    WQTC01           Company Number
     C                     Z-ADDWL0296    WQTC02           Item Code
     C                     MOVELWL0297    WQTC03           Warehouse Code
     C                     Z-ADDWL0298    WHAODT           Scheduled Ship
      * Establish starting position
     C           KPSTC     SETLL@BGWKYG                    *
     C           KRSTC     READE@BGWKYG                  90*
      * Data record not found
     C   90                MOVEL'USR1309' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * RTV Hdr Sts,BillActTy RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWHAIC3    WL0023           Company Number
     C                     Z-ADDWHC4NB    WL0024           Order Number
     C                     EXSR SQRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0025    WN0186    P      Header Status
     C                     MOVELWL0026    YL0005    P      Billing Activit
      * CASE:
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Header Status is Not Comp/Canc/Conf
      *   |- c2    : PAR.Order Number NE DB1.Order Number
      *   |- c3    : LCL.Billing Activity Type is Invoice or Transfer
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0186    IFEQ 'L'                        *IF
     C           WN0186    OREQ 'A'
     C           WN0186    OREQ 'E'
     C           WN0186    OREQ 'H'
     C           WL0295    IFNE WHC4NB                     *IF
     C           YL0005    IFEQ '1'                        *IF
     C           YL0005    OREQ '4'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Is it time to Quit ??
      * CASE: DB1.Scheduled Ship Date GT PAR.Avail Ship Date 21 USR
     C           WHAODT    IFGT WL0299                     *IF
     C                     GOTO TCEXIT                     *QUIT
     C                     END                             *FI
      * Retrieve Week End date for *JOB DATE
      * Determine production type
      * CASE: DB1.Scheduled Ship Date EQ JOB.*Job date
     C           WHAODT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0194           Production Type
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'P'       WN0194           Production Type
     C                     END                             *FI
      * Rtv Production Date   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWHAIC3    WL0302           Company Number
     C                     MOVELWN0194    WL0303    P      Production Type
     C                     Z-ADDWHHGCD    WL0305           Item Code
     C                     MOVELWHAJCD    WL0306    P      Warehouse Code
     C                     Z-ADDWHAODT    WL0307           PS Available Sh
     C                     EXSR TDRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0304    YL0006           Production Date
      * RTV Day/Wk/Prd/Yr      RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0294    WL0308           Company Number
     C                     Z-ADD##JDT     WL0309           Post to G/L Dat
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0310    WUCQNB           Julian Date
     C                     Z-ADDWL0311    WN0191           Accounting Year
     C                     Z-ADDWL0312    WN0192           Accounting Peri
     C                     Z-ADDWL0313    WUBZNB           OM Week
     C                     MOVELWL0314    WUA9ST    P      Day of Week
     C                     Z-ADDWL0315    WN0193           Week Number
      * RTV Bgn/End Dts Prd/Yr RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0294    WL0316           Company Number
     C                     Z-ADDWN0191    WL0318           Accounting Year
     C                     Z-ADDWN0192    WL0319           Accounting Peri
     C                     MOVEL'7'       WL0320    P      Day of Week
     C                     Z-ADDWN0193    WL0321           Week Number
     C                     EXSR TFRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0317    WN0188           Post to G/L Dat
      * DOC: 04/11/07 Change Log
     C                     EXSR UASUBR                     DOC: 04/11/07 C
      * Set age code to specific day by number
      * CASE: DB1.Age Code is A: 0 Day
     C           WHRPCD    IFEQ 'A'                        *IF
     C                     Z-ADD0         WN0187           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is B: 1 Day
     C           WHRPCD    IFEQ 'B'                        *IF
     C                     Z-ADD1         WN0187           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is C: 2 Day
     C           WHRPCD    IFEQ 'C'                        *IF
     C                     Z-ADD2         WN0187           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is D: 3 Day
     C           WHRPCD    IFEQ 'D'                        *IF
     C                     Z-ADD3         WN0187           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is E: 4 Day
     C           WHRPCD    IFEQ 'E'                        *IF
     C                     Z-ADD4         WN0187           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is F: 5 Day
     C           WHRPCD    IFEQ 'F'                        *IF
     C                     Z-ADD5         WN0187           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is G: 6 Day
     C           WHRPCD    IFEQ 'G'                        *IF
     C                     Z-ADD6         WN0187           Aging Day
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD999       WN0187           Aging Day
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * If warehouse is not a production whse, rtv sched qty from prod wh
      * CASE: DB1.Warehouse Code NE PAR.Production Warehouse Code
     C           WHAJCD    IFNE WL0300                     *IF
      * Rtv Qty for Prod Whse  RT - PD Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWHAIC3    WL0322           Company Number
     C                     Z-ADDWHC4NB    WL0323           Order Number
     C                     Z-ADDWHDPNB    WL0324           Order Sequence
     C                     Z-ADDWHUENB    WL0325           Order Secondary
     C                     Z-ADDWN0189    WL0326           OD Qty/Cnsmd Pi
     C                     EXSR TGRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0326    WN0189           OD Qty/Cnsmd Pi
     C           WHCCQT    SUB  WN0189    WN0190           ATS Quantity Ne
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD0         WN0189           Qty Not Alloc o
     C                     Z-ADDWHCCQT    WN0190           ATS Quantity Ne
     C                     END                             *FI
      * Clc Alloc Inv for PA RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWHAODT    WL0327           Avail Ship Date
     C                     Z-ADDWN0187    WL0328           Aging Day
     C                     Z-ADDWN0188    WL0329           Week End Date
     C                     Z-ADDWN0189    WL0330           Qty Not Alloc o
     C                     Z-ADDWN0190    WL0331           ATS Quantity Ne
     C                     Z-ADDWHCCQT    WL0332           Quantity Schedu
     C                     Z-ADDWHAODT    WL0333           Scheduled Ship
     C                     MOVELWL0301    WL0334    P      Lot Tracking Fl
     C                     Z-ADDYL0006    WL0335           Production Date
     C                     EXSR THRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0328    WN0187           Aging Day
     C                     Z-ADDWL0330    WN0189           Qty Not Alloc o
     C                     Z-ADDWL0331    WN0190           ATS Quantity Ne
     C                     MOVELWL0336    YL0007    P      Order Scheduled
      * If order was not scheduled, then schedule
      * CASE: LCL.Order Scheduled Today USR is no
     C           YL0007    IFEQ 'N'                        *IF
      * Rtv Change Sched Ship  RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWHAODT    WL0344           Avail Ship Date
     C                     Z-ADDWHCCQT    WL0345           Quantity Sched
     C                     EXSR TLRVGN
     C                     END                             *FI
      * DOC: 04/11/07 Change Log
     C                     EXSR UBSUBR                     DOC: 04/11/07 C
      * Set age code to specific day by number
      * CASE: DB1.Age Code is A: 0 Day
     C           WHRPCD    IFEQ 'A'                        *IF
     C                     Z-ADD0         WN0187           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is B: 1 Day
     C           WHRPCD    IFEQ 'B'                        *IF
     C                     Z-ADD1         WN0187           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is C: 2 Day
     C           WHRPCD    IFEQ 'C'                        *IF
     C                     Z-ADD2         WN0187           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is D: 3 Day
     C           WHRPCD    IFEQ 'D'                        *IF
     C                     Z-ADD3         WN0187           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is E: 4 Day
     C           WHRPCD    IFEQ 'E'                        *IF
     C                     Z-ADD4         WN0187           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is F: 5 Day
     C           WHRPCD    IFEQ 'F'                        *IF
     C                     Z-ADD5         WN0187           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is G: 6 Day
     C           WHRPCD    IFEQ 'G'                        *IF
     C                     Z-ADD6         WN0187           Aging Day
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD999       WN0187           Aging Day
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Clc Alloc Prod for PA RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWHAODT    WL0346           Avail Ship Date
     C                     Z-ADDWN0187    WL0347           Aging Day
     C                     Z-ADDWN0188    WL0348           Week End Date
     C                     Z-ADDWN0189    WL0349           Qty Not Alloc o
     C                     Z-ADDWN0190    WL0350           ATS Quantity Ne
     C                     Z-ADDWHCCQT    WL0351           Quantity Schedu
     C                     Z-ADDWHAODT    WL0352           Scheduled Ship
     C                     MOVELWL0301    WL0353    P      Lot Tracking Fl
     C                     EXSR TMRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0347    WN0187           Aging Day
     C                     Z-ADDWL0349    WN0189           Qty Not Alloc o
      * Change allocation for schedule shipments not scheduled on ship da
      * CASE: PAR.Qty Not Alloc on Ship Dt is Greater than zero
     C           WN0189    IFGT 0                          *IF
      * Rtv Change Allocation  RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWHAODT    WL0354           Avail Ship Date
     C                     Z-ADDWN0189    WL0355           Qty Not Alloc o
     C                     EXSR TNRVGN
     C                     END                             *FI
     C                     END                             *FI
     C           KRSTC     READE@BGWKYG                  90*
     C                     ENDDO
      * USER: Exit processing
      * Retrieve Week End date for *JOB DATE
      * Determine production type
      * CASE: DB1.Scheduled Ship Date EQ JOB.*Job date
     C           WHAODT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0194           Production Type
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'P'       WN0194           Production Type
     C                     END                             *FI
      * Rtv Production Date   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWHAIC3    WL0302           Company Number
     C                     MOVELWN0194    WL0303    P      Production Type
     C                     Z-ADDWHHGCD    WL0305           Item Code
     C                     MOVELWHAJCD    WL0306    P      Warehouse Code
     C                     Z-ADDWHAODT    WL0307           PS Available Sh
     C                     EXSR TDRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0304    YL0006           Production Date
      * RTV Day/Wk/Prd/Yr     RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0294    WL0308           Company Number
     C                     Z-ADD##JDT     WL0309           Post to G/L Dat
     C                     EXSR TERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0310    WUCQNB           Julian Date
     C                     Z-ADDWL0311    WN0191           Accounting Year
     C                     Z-ADDWL0312    WN0192           Accounting Peri
     C                     Z-ADDWL0313    WUBZNB           OM Week
     C                     MOVELWL0314    WUA9ST    P      Day of Week
     C                     Z-ADDWL0315    WN0193           Week Number
      * RTV Bgn/End Dts Prd/Yr RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0294    WL0316           Company Number
     C                     Z-ADDWN0191    WL0318           Accounting Year
     C                     Z-ADDWN0192    WL0319           Accounting Peri
     C                     MOVEL'7'       WL0320    P      Day of Week
     C                     Z-ADDWN0193    WL0321           Week Number
     C                     EXSR TFRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0317    WN0188           Post to G/L Dat
      * DOC: 04/11/07 Change Log
     C                     EXSR UCSUBR                     DOC: 04/11/07 C
      * Set age code to specific day by number
      * CASE: DB1.Age Code is A: 0 Day
     C           WHRPCD    IFEQ 'A'                        *IF
     C                     Z-ADD0         WN0187           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is B: 1 Day
     C           WHRPCD    IFEQ 'B'                        *IF
     C                     Z-ADD1         WN0187           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is C: 2 Day
     C           WHRPCD    IFEQ 'C'                        *IF
     C                     Z-ADD2         WN0187           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is D: 3 Day
     C           WHRPCD    IFEQ 'D'                        *IF
     C                     Z-ADD3         WN0187           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is E: 4 Day
     C           WHRPCD    IFEQ 'E'                        *IF
     C                     Z-ADD4         WN0187           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is F: 5 Day
     C           WHRPCD    IFEQ 'F'                        *IF
     C                     Z-ADD5         WN0187           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is G: 6 Day
     C           WHRPCD    IFEQ 'G'                        *IF
     C                     Z-ADD6         WN0187           Aging Day
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD999       WN0187           Aging Day
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * If warehouse is not a production whse, rtv sched qty from prod wh
      * CASE: DB1.Warehouse Code NE PAR.Production Warehouse Code
     C           WHAJCD    IFNE WL0300                     *IF
      * Rtv Qty for Prod Whse  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWHAIC3    WL0322           Company Number
     C                     Z-ADDWHC4NB    WL0323           Order Number
     C                     Z-ADDWHDPNB    WL0324           Order Sequence
     C                     Z-ADDWHUENB    WL0325           Order Secondary
     C                     Z-ADDWN0189    WL0326           OD Qty/Cnsmd Pi
     C                     EXSR TGRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0326    WN0189           OD Qty/Cnsmd Pi
     C           WHCCQT    SUB  WN0189    WN0190           ATS Quantity Ne
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD0         WN0189           Qty Not Alloc o
     C                     Z-ADDWHCCQT    WN0190           ATS Quantity Ne
     C                     END                             *FI
      * Clc Alloc Inv for PA RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWHAODT    WL0327           Avail Ship Date
     C                     Z-ADDWN0187    WL0328           Aging Day
     C                     Z-ADDWN0188    WL0329           Week End Date
     C                     Z-ADDWN0189    WL0330           Qty Not Alloc o
     C                     Z-ADDWN0190    WL0331           ATS Quantity Ne
     C                     Z-ADDWHCCQT    WL0332           Quantity Schedu
     C                     Z-ADDWHAODT    WL0333           Scheduled Ship
     C                     MOVELWL0301    WL0334    P      Lot Tracking Fl
     C                     Z-ADDYL0006    WL0335           Production Date
     C                     EXSR THRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0328    WN0187           Aging Day
     C                     Z-ADDWL0330    WN0189           Qty Not Alloc o
     C                     Z-ADDWL0331    WN0190           ATS Quantity Ne
     C                     MOVELWL0336    YL0007    P      Order Scheduled
      * If order was not scheduled, then schedule
      * CASE: LCL.Order Scheduled Today USR is no
     C           YL0007    IFEQ 'N'                        *IF
      * Rtv Change Sched Ship  RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWHAODT    WL0344           Avail Ship Date
     C                     Z-ADDWHCCQT    WL0345           Quantity Sched
     C                     EXSR TLRVGN
     C                     END                             *FI
      * DOC: 04/11/07 Change Log
     C                     EXSR UDSUBR                     DOC: 04/11/07 C
      * Set age code to specific day by number
      * CASE: DB1.Age Code is A: 0 Day
     C           WHRPCD    IFEQ 'A'                        *IF
     C                     Z-ADD0         WN0187           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is B: 1 Day
     C           WHRPCD    IFEQ 'B'                        *IF
     C                     Z-ADD1         WN0187           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is C: 2 Day
     C           WHRPCD    IFEQ 'C'                        *IF
     C                     Z-ADD2         WN0187           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is D: 3 Day
     C           WHRPCD    IFEQ 'D'                        *IF
     C                     Z-ADD3         WN0187           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is E: 4 Day
     C           WHRPCD    IFEQ 'E'                        *IF
     C                     Z-ADD4         WN0187           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is F: 5 Day
     C           WHRPCD    IFEQ 'F'                        *IF
     C                     Z-ADD5         WN0187           Aging Day
     C                     ELSE
      * CASE: DB1.Age Code is G: 6 Day
     C           WHRPCD    IFEQ 'G'                        *IF
     C                     Z-ADD6         WN0187           Aging Day
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD999       WN0187           Aging Day
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Clc Alloc Prod for PA RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWHAODT    WL0346           Avail Ship Date
     C                     Z-ADDWN0187    WL0347           Aging Day
     C                     Z-ADDWN0188    WL0348           Week End Date
     C                     Z-ADDWN0189    WL0349           Qty Not Alloc o
     C                     Z-ADDWN0190    WL0350           ATS Quantity Ne
     C                     Z-ADDWHCCQT    WL0351           Quantity Schedu
     C                     Z-ADDWHAODT    WL0352           Scheduled Ship
     C                     MOVELWL0301    WL0353    P      Lot Tracking Fl
     C                     EXSR TMRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0347    WN0187           Aging Day
     C                     Z-ADDWL0349    WN0189           Qty Not Alloc o
      * Change allocation for schedule shipments not scheduled on ship da
      * CASE: PAR.Qty Not Alloc on Ship Dt is Greater than zero
     C           WN0189    IFGT 0                          *IF
      * Rtv Change Allocation  RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWHAODT    WL0354           Avail Ship Date
     C                     Z-ADDWN0189    WL0355           Qty Not Alloc o
     C                     EXSR TNRVGN
     C                     END                             *FI
      *================================================================
     CSR         TCEXIT    ENDSR
      /EJECT
     CSR         TDRVGN    BEGSR
      *================================================================
      * Rtv Production Date   RT - PS Prod Item Schedule  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WFAIC3    WQTD01           Company Number
     C           *LIKE     DEFN WFHGCD    WQTD02           Item Code
     C           *LIKE     DEFN WFAJCD    WQTD03           Warehouse Code
     C           *LIKE     DEFN WFGPDT    WQTD04           PS Available Sh
     C           *LIKE     DEFN WFV5ST    WQTD05           Production Type
      * Define keylist
     C           KRSTD     KLIST
     C                     KFLD           WQTD01           Company Number
     C                     KFLD           WQTD02           Item Code
     C                     KFLD           WQTD03           Warehouse Code
     C                     KFLD           WQTD04           PS Available Sh
     C                     KFLD           WQTD05           Production Type
      * Setup key
     C                     Z-ADDWL0302    WQTD01           Company Number
     C                     Z-ADDWL0305    WQTD02           Item Code
     C                     MOVELWL0306    WQTD03           Warehouse Code
     C                     Z-ADDWL0307    WQTD04           PS Available Sh
     C                     MOVELWL0303    WQTD05           Production Type
      * Establish starting position
     C           KRSTD     SETLL@I8CPDZ                    *
     C           KRSTD     READE@I8CPDZ                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1763' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0304           Production Date
     C                     GOTO TDEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWFELDT    WL0304           Production Date
     C                     GOTO TDEXIT                     *QUIT
     C           KRSTD     READE@I8CPDZ                  90*
     C                     ENDDO
      *================================================================
     CSR         TDEXIT    ENDSR
      /EJECT
     CSR         TERVGN    BEGSR
      *================================================================
      * RTV Day/Wk/Prd/Yr      RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSTE     KLIST
     C                     KFLD           AFAIC3           Company Number
     C                     KFLD           AFBCDT           Post to G/L Dat
      * Setup key
     C                     Z-ADDWL0308    AFAIC3           Company Number
     C                     Z-ADDWL0309    AFBCDT           Post to G/L Dat
      * Establish starting position
     C           KRSTE     CHAIN@AFREBE              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0018' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0310           Julian Date
     C                     Z-ADD*ZERO     WL0311           Accounting Year
     C                     Z-ADD*ZERO     WL0312           Accounting Peri
     C                     Z-ADD*ZERO     WL0313           OM Week
     C                     MOVEL*BLANK    WL0314           Day of Week
     C                     Z-ADD*ZERO     WL0315           Week Number
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO TEEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDAFCQNB    WL0310           Julian Date
     C                     Z-ADDAFESNB    WL0311           Accounting Year
     C                     Z-ADDAFETNB    WL0312           Accounting Peri
     C                     Z-ADDAFBZNB    WL0313           OM Week
     C                     MOVELAFA9ST    WL0314           Day of Week
     C                     Z-ADDAFEINB    WL0315           Week Number
     C                     MOVEL*BLANK    W0RTN            *Return code
     C                     ENDIF
      *================================================================
     CSR         TEEXIT    ENDSR
      /EJECT
     CSR         TFRVGN    BEGSR
      *================================================================
      * RTV Bgn/End Dts Prd/Yr RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WIAIC3    WQTF01           Company Number
     C           *LIKE     DEFN WIESNB    WQTF02           Accounting Year
     C           *LIKE     DEFN WIETNB    WQTF03           Accounting Peri
     C           *LIKE     DEFN WIEINB    WQTF04           Week Number
     C           *LIKE     DEFN WIA9ST    WQTF05           Day of Week
      * Define keylist
     C           KRSTF     KLIST
     C                     KFLD           WQTF01           Company Number
     C                     KFLD           WQTF02           Accounting Year
     C                     KFLD           WQTF03           Accounting Peri
     C                     KFLD           WQTF04           Week Number
     C                     KFLD           WQTF05           Day of Week
      * Setup key
     C                     Z-ADDWL0316    WQTF01           Company Number
     C                     Z-ADDWL0318    WQTF02           Accounting Year
     C                     Z-ADDWL0319    WQTF03           Accounting Peri
     C                     Z-ADDWL0321    WQTF04           Week Number
     C                     MOVELWL0320    WQTF05           Day of Week
      * Establish starting position
     C           KRSTF     SETLL@AFREQ0                    *
     C           KRSTF     READE@AFREQ0                  90*
      * Data record not found
     C   90                MOVEL'USR0018' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWIBCDT    WL0317           Post to G/L Dat
     C           KRSTF     READE@AFREQ0                  90*
     C                     ENDDO
      *================================================================
     CSR         TFEXIT    ENDSR
      /EJECT
     CSR         TGRVGN    BEGSR
      *================================================================
      * Rtv Qty for Prod Whse  RT - PD Order Detail Schedule  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD0         WL0326           OD Qty/Cnsmd Pi
      * Declare restrictor key work fields
     C           *LIKE     DEFN KNAIC3    WQTG01           Company Number
     C           *LIKE     DEFN KNC4NB    WQTG02           Order Number
     C           *LIKE     DEFN KNDPNB    WQTG03           Order Sequence
     C           *LIKE     DEFN KNUENB    WQTG04           Order Secondary
      * Define keylist
     C           KRSTG     KLIST
     C                     KFLD           WQTG01           Company Number
     C                     KFLD           WQTG02           Order Number
     C                     KFLD           WQTG03           Order Sequence
     C                     KFLD           WQTG04           Order Secondary
      * Setup key
     C                     Z-ADDWL0322    WQTG01           Company Number
     C                     Z-ADDWL0323    WQTG02           Order Number
     C                     Z-ADDWL0324    WQTG03           Order Sequence
     C                     Z-ADDWL0325    WQTG04           Order Secondary
      * Establish starting position
     C           KRSTG     SETLL@KNCPHO                    *
     C           KRSTG     READE@KNCPHO                  90*
      * Data record not found
     C   90                MOVEL'USR2238' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Warehouse Code NE DB1.Order From Warehouse
     C           KNAJCD    IFNE KNAYAA                     *IF
     C                     ADD  KNIGQT    WL0326           OD Qty/Cnsmd Pi
     C                     END                             *FI
     C           KRSTG     READE@KNCPHO                  90*
     C                     ENDDO
      *================================================================
     CSR         TGEXIT    ENDSR
      /EJECT
     CSR         THRVGN    BEGSR
      *================================================================
      * Clc Alloc Inv for PA RT - *Arrays  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0195 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0196  70       Quantity Sched
     C                     Z-ADD*ZERO     WN0197 112       Quantity Availa
     C                     Z-ADD*ZERO     WN0198 112       Total Quantity
     C                     Z-ADD*ZERO     WN0199  81       Total Sched Shi
     C                     Z-ADD*ZERO     WN0200  81       Total Availabil
     C                     MOVEL*BLANK    WN0201  1        First Time Flag
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     MOVEL'Y'       WN0201           First Time Flag
     C                     MOVEL'N'       WL0336           Order Scheduled
     C                     Z-ADDWL0331    WN0196           Quantity Sched
     C           YL01      IFGT 0
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * Initialize internal index
     C                     MOVEL*HIVAL    YD01
      * Move key fields to PA Work Array for Roll
     C                     Z-ADDWL0327    YI0101           Avail Ship Date
      *
      *
      *
      *
      *
      *
      *
      * Only search if key is not beyond range of current elements
     C           YK01,YL01 IFLT YD01
     C           YD01      LOKUPYK01,Y                 90  Look for <
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Array element not found
     C                     MOVEL'Y2U0005' W0RTN   7
     C                     ENDIF
      *
     C           *IN90     IFEQ '1'
      * Sequence through qualified elements:
     C                     Z-ADDY         YR01    50
     C           YR01      DOWLEYL01
     C                     Z-ADDYR01      Y
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * USER: Process Data record
     C                     Z-ADD0         WN0195           Quantity Alloca
      * If age day is zero or order has been allocated, then QUIT
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Aging Day is equal to zero
      *   |- c2    : PAR.Quantity Sched 1 USR is LE Zero
      *   '-
     C           WL0328    IFEQ 0                          *IF
     C           WN0196    ORLE 0                          *OR
     C                     Z-ADDWN0196    WL0331           ATS Quantity Ne
      * CASE: PAR.First Time Flag is Yes
     C           WN0201    IFEQ 'Y'                        *IF
      * If ord ship is this day, updt Sched Ship/Avail
      * CASE: DB1.Avail Ship Date USR EQ PAR.Scheduled Ship Date
     C           WGJODT    IFEQ WL0333                     *IF
     C           WGQSSH    ADD  WL0332    WN0199           Total Sched Shi
      * New Available
      * PAR.Total Availability    USR =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.Quantity Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Total Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : DB1.Quantity Sales USR
     C           WGQINV    ADD  WGWPRD    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0199    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WGWSLS    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0200           Total Availabil
      * Chg SchdShp/Avail      CH - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWGJODT    WL0337           Avail Ship Date
     C                     Z-ADDWN0199    WL0338           Quantity Sched
     C                     Z-ADDWN0200    WL0339           Quantity Availa
     C                     EXSR TICHRC
     C                     MOVEL'N'       WN0201           First Time Flag
     C                     MOVEL'Y'       WL0336           Order Scheduled
     C                     END                             *FI
     C                     END                             *FI
     C                     GOTO THEXIT                     *QUIT
     C                     END                             *FI
      * Calc new avail with inv if current week, else calc with no inv
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Production Date LE PAR.Week End Date        USR
      *   |- c2    : PAR.Lot Tracking Flag is yes
      *   '-
     C           WL0335    IFLE WL0329                     *IF
     C           WL0334    OREQ 'Y'                        *OR
      * Avail with inventory
      * PAR.Quantity Available    SUM =
      *    *COMPUTE (x1 - x3 - x4)
      * x1    : DB1.Quantity Inventory USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : DB1.Quantity Sched Ship USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : DB1.Quantity Sales USR
     C           WGQINV    SUB  WGQSSH    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WGWSLS    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0197           Quantity Availa
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD0         WN0197           Quantity Availa
     C                     END                             *FI
      * Allocate Order
      * CASE: PAR.Quantity Available    SUM is GT Zero
     C           WN0197    IFGT 0                          *IF
      * CASE: PAR.Quantity Available    SUM GE PAR.Quantity Sched 1 USR
     C           WN0197    IFGE WN0196                     *IF
     C                     Z-ADDWN0196    WN0195           Quantity Alloca
     C                     Z-ADD0         WN0196           Quantity Sched
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWN0197    WN0195           Quantity Alloca
     C                     SUB  WN0197    WN0196           Quantity Sched
     C                     END                             *FI
      * If ord ship is this day, updt Sched Ship/Alloc/Avail, else Alloc/
      * CASE: DB1.Avail Ship Date USR EQ PAR.Scheduled Ship Date
     C           WGJODT    IFEQ WL0333                     *IF
     C                     Z-ADDWGWSLS    WN0198           Total Quantity
     C           WGQSSH    ADD  WL0332    WN0199           Total Sched Shi
      * New Available
      * PAR.Total Availability    USR =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.Quantity Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Total Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Total Quantity Alloc USR
     C           WGQINV    ADD  WGWPRD    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0199    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0198    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0200           Total Availabil
      * Chg SchdShp/Allc/Avail CH - *Arrays  * 
     C                     EXSR TJCHRC
     C                     MOVEL'Y'       WL0336           Order Scheduled
     C                     ELSE
      * CASE: *OTHERWISE
     C           WGWSLS    ADD  WN0195    WN0198           Total Quantity
      * New Available
      * PAR.Total Availability    USR =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.Quantity Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : DB1.Quantity Sched Ship USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Total Quantity Alloc USR
     C           WGQINV    ADD  WGWPRD    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WGQSSH    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0198    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0200           Total Availabil
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DB1) WGG2SX' defaulted for 'Reserved for Other Whse'.
      * Chg Alloc/Avail       CH - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWGJODT    WL0340           Avail Ship Date
     C                     Z-ADDWN0198    WL0341           Quantity Sales
     C                     Z-ADDWN0200    WL0342           Quantity Availa
     C                     MOVELWGG2SX    WL0343    P      Reserved for Ot
     C                     EXSR TKCHRC
     C                     ADD  WN0195    WL0330           Qty Not Alloc o
     C                     END                             *FI
     C                     END                             *FI
     C                     SUB  1         WL0328           Aging Day
     C                     MOVEL'N'       WN0201           First Time Flag
     C                     ADD  1         YR01
     C                     ENDDO
     C                     ENDIF
      * USER: Exit processing
     C                     Z-ADDWN0196    WL0331           ATS Quantity Ne
      *================================================================
     CSR         THEXIT    ENDSR
      /EJECT
     CSR         TICHRC    BEGSR
      *================================================================
      * Chg SchdShp/Avail      CH - *Arrays  * 
      *================================================================
      * This is a shared subroutine
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0202  70       Production Date
     C                     Z-ADD*ZERO     WN0203  61       Quantity Invent
     C                     Z-ADD*ZERO     WN0204  61       Quantity Produc
     C                     Z-ADD*ZERO     WN0205  61       Quantity Sales
     C                     MOVEL*BLANK    WN0206  1        Reserved for Ot
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Move key fields to PA Work Array for Roll
     C                     Z-ADDWL0337    YI0101           Avail Ship Date
      *
      * Reset global index if not within range of current elements
     C           Y         IFGT YL01
     C                     Z-ADD1         Y
     C                     ENDIF
      * Only search if not already pointing to correct element
     C           Y         IFGT 0
     C           YD01      ANDNEYK01,Y
      * Initialize internal index
     C                     Z-ADD99999     YI01
      * Only search if key is not beyond range of current elements
     C           YL01      IFGT 0
     C           YK01,YL01 ANDLTYD01
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C           YD01      LOKUPYK01,Y                 90  Look for <
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFNE WL0337
      *
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Element not found in array
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     GOTO TIEXIT
     C                     ENDIF
      *
     C                     ENDIF
     C           YI01      OCUR YM01
      *
      * Move all fields to PA Work Array for Roll
     C                     Z-ADDWL0337    WGJODT           Avail Ship Date
     C                     Z-ADDWL0338    WGQSSH           Quantity Sched
     C                     Z-ADDWL0339    WGQAVL           Quantity Availa
      *
      *
      *================================================================
     CSR         TIEXIT    ENDSR
      /EJECT
     CSR         TJCHRC    BEGSR
      *================================================================
      * Chg SchdShp/Allc/Avail CH - *Arrays  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0207  70       Production Date
     C                     Z-ADD*ZERO     WN0208  61       Quantity Invent
     C                     Z-ADD*ZERO     WN0209  61       Quantity Produc
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Move key fields to PA Work Array for Roll
     C                     Z-ADDWGJODT    YI0101           Avail Ship Date
      *
      * Reset global index if not within range of current elements
     C           Y         IFGT YL01
     C                     Z-ADD1         Y
     C                     ENDIF
      * Only search if not already pointing to correct element
     C           Y         IFGT 0
     C           YD01      ANDNEYK01,Y
      * Initialize internal index
     C                     Z-ADD99999     YI01
      * Only search if key is not beyond range of current elements
     C           YL01      IFGT 0
     C           YK01,YL01 ANDLTYD01
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C           YD01      LOKUPYK01,Y                 90  Look for <
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFNE WGJODT
      *
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Element not found in array
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     GOTO TJEXIT
     C                     ENDIF
      *
     C                     ENDIF
     C           YI01      OCUR YM01
      *
      * Move all fields to PA Work Array for Roll
     C                     Z-ADDWN0199    WGQSSH           Quantity Sched
     C                     Z-ADDWN0198    WGWSLS           Quantity Sales
     C                     Z-ADDWN0200    WGQAVL           Quantity Availa
      *
      *
      *================================================================
     CSR         TJEXIT    ENDSR
      /EJECT
     CSR         TKCHRC    BEGSR
      *================================================================
      * Chg Alloc/Avail       CH - *Arrays  * 
      *================================================================
      * This is a shared subroutine
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0210  70       Production Date
     C                     Z-ADD*ZERO     WN0211  61       Quantity Invent
     C                     Z-ADD*ZERO     WN0212  61       Quantity Produc
     C                     Z-ADD*ZERO     WN0213  61       Quantity Sched
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Move key fields to PA Work Array for Roll
     C                     Z-ADDWL0340    YI0101           Avail Ship Date
      *
      * Reset global index if not within range of current elements
     C           Y         IFGT YL01
     C                     Z-ADD1         Y
     C                     ENDIF
      * Only search if not already pointing to correct element
     C           Y         IFGT 0
     C           YD01      ANDNEYK01,Y
      * Initialize internal index
     C                     Z-ADD99999     YI01
      * Only search if key is not beyond range of current elements
     C           YL01      IFGT 0
     C           YK01,YL01 ANDLTYD01
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C           YD01      LOKUPYK01,Y                 90  Look for <
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFNE WL0340
      *
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Element not found in array
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     GOTO TKEXIT
     C                     ENDIF
      *
     C                     ENDIF
     C           YI01      OCUR YM01
      *
      * Move all fields to PA Work Array for Roll
     C                     Z-ADDWL0340    WGJODT           Avail Ship Date
     C                     Z-ADDWL0341    WGWSLS           Quantity Sales
     C                     Z-ADDWL0342    WGQAVL           Quantity Availa
     C                     MOVELWL0343    WGG2SX    P      Reserved for Ot
      *
      *
      *================================================================
     CSR         TKEXIT    ENDSR
      /EJECT
     CSR         TLRVGN    BEGSR
      *================================================================
      * Rtv Change Sched Ship  RT - *Arrays  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0214  81       Total Sched Shi
     C                     Z-ADD*ZERO     WN0215  81       Total Availabil
      *
     C                     MOVEL*BLANK    W0RTN   7
     C           YL01      IFGT 0
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * Initialize internal index
     C                     MOVEL*HIVAL    YD01
      * Move key fields to PA Work Array for Roll
     C                     Z-ADDWL0344    YI0101           Avail Ship Date
      *
      *
      * Only search if key is not beyond range of current elements
     C           YK01,YL01 IFLT YD01
     C           YD01      LOKUPYK01,Y                 90  Look for <
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFNE WL0344
      *
      *
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Array element not found
     C                     MOVEL'Y2U0005' W0RTN   7
     C                     ENDIF
      *
     C           *IN90     IFEQ '1'
     C           YI01      OCUR YM01
      * USER: Process Data record
     C           WGQSSH    ADD  WL0345    WN0214           Total Sched Shi
      * New Available
      * PAR.Total Availability    USR =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.Quantity Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : PAR.Total Sched Shipments USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : DB1.Quantity Sales USR
     C           WGQINV    ADD  WGWPRD    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WN0214    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WGWSLS    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0215           Total Availabil
      * Chg SchdShp/Avail      CH - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWGJODT    WL0337           Avail Ship Date
     C                     Z-ADDWN0214    WL0338           Quantity Sched
     C                     Z-ADDWN0215    WL0339           Quantity Availa
     C                     EXSR TICHRC
     C                     ENDIF
      *================================================================
     CSR         TLEXIT    ENDSR
      /EJECT
     CSR         TMRVGN    BEGSR
      *================================================================
      * Clc Alloc Prod for PA RT - *Arrays  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0216 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0217  70       Quantity Sched
     C                     Z-ADD*ZERO     WN0218 112       Quantity Availa
     C                     Z-ADD*ZERO     WN0219 112       Total Quantity
     C                     Z-ADD*ZERO     WN0220  81       Total Sched Shi
     C                     Z-ADD*ZERO     WN0221  81       Total Availabil
     C                     MOVEL*BLANK    WN0222  1        First Time Flag
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADDWL0350    WN0217           Quantity Sched
     C           YL01      IFGT 0
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * Initialize internal index
     C                     MOVEL*HIVAL    YD01
      * Move key fields to PA Work Array for Roll
     C                     Z-ADDWL0346    YI0101           Avail Ship Date
      *
      *
      *
      *
      *
      * Only search if key is not beyond range of current elements
     C           YK01,YL01 IFLT YD01
     C           YD01      LOKUPYK01,Y                 90  Look for <
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Array element not found
     C                     MOVEL'Y2U0005' W0RTN   7
     C                     ENDIF
      *
     C           *IN90     IFEQ '1'
      * Sequence through qualified elements:
     C                     Z-ADDY         YR01    50
     C           YR01      DOWLEYL01
     C                     Z-ADDYR01      Y
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * USER: Process Data record
     C                     Z-ADD0         WN0216           Quantity Alloca
      * If age day is zero or order has been allocated, then QUIT
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Aging Day is equal to zero
      *   |- c2    : PAR.Quantity Sched 1 USR is LE Zero
      *   '-
     C           WL0347    IFEQ 0                          *IF
     C           WN0217    ORLE 0                          *OR
     C                     GOTO TMEXIT                     *QUIT
     C                     END                             *FI
      * Avail with no inventory
      * PAR.Quantity Available    SUM =
      *    *COMPUTE (x2 - x3 - x4)
      * x2    : DB1.Quantity Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : DB1.Quantity Sched Ship USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : DB1.Quantity Sales USR
     C           WGWPRD    SUB  WGQSSH    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WGWSLS    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0218           Quantity Availa
      * Allocate Order
      * CASE: PAR.Quantity Available    SUM is GT Zero
     C           WN0218    IFGT 0                          *IF
      * CASE: PAR.Quantity Available    SUM GE PAR.Quantity Sched 1 USR
     C           WN0218    IFGE WN0217                     *IF
     C                     Z-ADDWN0217    WN0216           Quantity Alloca
     C                     Z-ADD0         WN0217           Quantity Sched
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWN0218    WN0216           Quantity Alloca
     C                     SUB  WN0218    WN0217           Quantity Sched
     C                     END                             *FI
      * If ord ship is this day, updt Sched Ship/Alloc/Avail, else Alloc/
      * CASE: DB1.Avail Ship Date USR EQ PAR.Scheduled Ship Date
     C           WGJODT    IFEQ WL0352                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C           WGWSLS    ADD  WN0216    WN0219           Total Quantity
      * New Available
      * PAR.Total Availability    USR =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.Quantity Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : DB1.Quantity Sched Ship USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Total Quantity Alloc USR
     C           WGQINV    ADD  WGWPRD    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WGQSSH    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0219    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0221           Total Availabil
      * Chg Alloc/Avail       CH - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWGJODT    WL0340           Avail Ship Date
     C                     Z-ADDWN0219    WL0341           Quantity Sales
     C                     Z-ADDWN0221    WL0342           Quantity Availa
     C                     MOVELWGG2SX    WL0343    P      Reserved for Ot
     C                     EXSR TKCHRC
     C                     ADD  WN0216    WL0349           Qty Not Alloc o
     C                     END                             *FI
     C                     END                             *FI
     C                     SUB  1         WL0347           Aging Day
     C                     MOVEL'N'       WN0222           First Time Flag
     C                     ADD  1         YR01
     C                     ENDDO
     C                     ENDIF
      *================================================================
     CSR         TMEXIT    ENDSR
      /EJECT
     CSR         TNRVGN    BEGSR
      *================================================================
      * Rtv Change Allocation  RT - *Arrays  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0223 112       Total Quantity
     C                     Z-ADD*ZERO     WN0224  81       Total Availabil
      *
     C                     MOVEL*BLANK    W0RTN   7
     C           YL01      IFGT 0
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * Initialize internal index
     C                     MOVEL*HIVAL    YD01
      * Move key fields to PA Work Array for Roll
     C                     Z-ADDWL0354    YI0101           Avail Ship Date
      *
      *
      * Only search if key is not beyond range of current elements
     C           YK01,YL01 IFLT YD01
     C           YD01      LOKUPYK01,Y                 90  Look for <
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFNE WL0354
      *
      *
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Array element not found
     C                     MOVEL'Y2U0005' W0RTN   7
     C                     ENDIF
      *
     C           *IN90     IFEQ '1'
     C           YI01      OCUR YM01
      * USER: Process Data record
     C           WGWSLS    SUB  WL0355    WN0223           Total Quantity
      * New Available
      * PAR.Total Availability    USR =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.Quantity Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : DB1.Quantity Sched Ship USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Total Quantity Alloc USR
     C           WGQINV    ADD  WGWPRD    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WGQSSH    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0223    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0224           Total Availabil
      * Chg Alloc/Avail       CH - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWGJODT    WL0340           Avail Ship Date
     C                     Z-ADDWN0223    WL0341           Quantity Sales
     C                     Z-ADDWN0224    WL0342           Quantity Availa
     C                     MOVELWGG2SX    WL0343    P      Reserved for Ot
     C                     EXSR TKCHRC
     C                     ENDIF
      *================================================================
     CSR         TNEXIT    ENDSR
      /EJECT
     CSR         TORVGN    BEGSR
      *================================================================
      * Rtv Rsrvd Other Whse  RT - PD Order Detail Schedule  * 
      *================================================================
      *
     C                     MOVEL*BLANK    WN0225  1        Header Status
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WJAIC3    WQTO01           Company Number
     C           *LIKE     DEFN WJHGCD    WQTO02           Item Code
     C           *LIKE     DEFN WJAJCD    WQTO03           Warehouse Code
      * Define keylist
     C           KPSTO     KLIST
     C                     KFLD           WQTO01           Company Number
     C                     KFLD           WQTO02           Item Code
     C                     KFLD           WQTO03           Warehouse Code
     C                     KFLD           WJAODT           Scheduled Ship
      * Define keylist
     C           KRSTO     KLIST
     C                     KFLD           WQTO01           Company Number
     C                     KFLD           WQTO02           Item Code
     C                     KFLD           WQTO03           Warehouse Code
      * Setup key
     C                     Z-ADDWL0356    WQTO01           Company Number
     C                     Z-ADDWL0357    WQTO02           Item Code
     C                     MOVELWL0358    WQTO03           Warehouse Code
     C                     Z-ADDWL0359    WJAODT           Scheduled Ship
      * Establish starting position
     C           KPSTO     SETLL@KNCPZ7                    *
     C           KRSTO     READE@KNCPZ7                  90*
      * Data record not found
     C   90                MOVEL'USR2238' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * RTV Header Status      RT - PD Order Header  * 
     C                     EXSR TPRVGN
      * CASE: PAR.Header Status is Not Comp/Canc/Conf
     C           WN0225    IFEQ 'L'                        *IF
     C           WN0225    OREQ 'A'
     C           WN0225    OREQ 'E'
     C           WN0225    OREQ 'H'
      * Is it time to Quit ??
      * CASE: DB1.Scheduled Ship Date GT PAR.Avail Ship Date 21 USR
     C           WJAODT    IFGT WL0360                     *IF
     C                     GOTO TOEXIT                     *QUIT
     C                     END                             *FI
      * If warehouse ordered not equal to warehouse scheduled, then reser
      * CASE: DB1.Warehouse Code NE DB1.Order From Warehouse
     C           WJAJCD    IFNE WJAYAA                     *IF
      * Rtv Add to Allocation  RT - *Arrays  * 
     C                     EXSR TQRVGN
     C                     END                             *FI
     C                     END                             *FI
     C           KRSTO     READE@KNCPZ7                  90*
     C                     ENDDO
      *================================================================
     CSR         TOEXIT    ENDSR
      /EJECT
     CSR         TPRVGN    BEGSR
      *================================================================
      * RTV Header Status      RT - PD Order Header  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSTP     KLIST
     C                     KFLD           BEAIC3           Company Number
     C                     KFLD           BEC4NB           Order Number
      * Setup key
     C                     Z-ADDWJAIC3    BEAIC3           Company Number
     C                     Z-ADDWJC4NB    BEC4NB           Order Number
      * Establish starting position
     C           KRSTP     CHAIN@BECPFK              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0176' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO TPEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBEGWST    WN0225           Header Status
     C                     ENDIF
      *================================================================
     CSR         TPEXIT    ENDSR
      /EJECT
     CSR         TQRVGN    BEGSR
      *================================================================
      * Rtv Add to Allocation  RT - *Arrays  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0226 112       Total Quantity
     C                     Z-ADD*ZERO     WN0227  81       Total Availabil
      *
     C                     MOVEL*BLANK    W0RTN   7
     C           YL01      IFGT 0
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * Initialize internal index
     C                     MOVEL*HIVAL    YD01
      * Move key fields to PA Work Array for Roll
     C                     Z-ADDWJAODT    YI0101           Avail Ship Date
      *
      *
      * Only search if key is not beyond range of current elements
     C           YK01,YL01 IFLT YD01
     C           YD01      LOKUPYK01,Y                 90  Look for <
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFNE WJAODT
      *
      *
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Array element not found
     C                     MOVEL'Y2U0005' W0RTN   7
     C                     ENDIF
      *
     C           *IN90     IFEQ '1'
     C           YI01      OCUR YM01
      * USER: Process Data record
     C           WGWSLS    ADD  WJIGQT    WN0226           Total Quantity
      * New Available
      * PAR.Total Availability    USR =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.Quantity Inventory USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.Quantity Production USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : DB1.Quantity Sched Ship USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : PAR.Total Quantity Alloc USR
     C           WGQINV    ADD  WGWPRD    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WGQSSH    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  WN0226    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0227           Total Availabil
      * Chg Alloc/Avail       CH - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWGJODT    WL0340           Avail Ship Date
     C                     Z-ADDWN0226    WL0341           Quantity Sales
     C                     Z-ADDWN0227    WL0342           Quantity Availa
     C                     MOVEL'Y'       WL0343    P      Reserved for Ot
     C                     EXSR TKCHRC
     C                     ENDIF
      *================================================================
     CSR         TQEXIT    ENDSR
      /EJECT
     CSR         TRRVGN    BEGSR
      *================================================================
      * Rtv PA Array for Roll RT - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
     C           YL01      IFGT 0
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * Initialize internal index
     C                     MOVEL*HIVAL    YD01
      * Move key fields to PA Work Array for Roll
     C                     Z-ADDWL0361    YI0101           Avail Ship Date
      *
      * Only search if key is not beyond range of current elements
     C           YK01,YL01 IFLT YD01
     C           YD01      LOKUPYK01,Y                 90  Look for <
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFNE WL0361
      *
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Array element not found
     C                     MOVEL'Y2U0005' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0362           Quantity Sched
     C                     Z-ADD*ZERO     WL0363           Quantity Sales
     C                     Z-ADD*ZERO     WL0364           Quantity Availa
     C                     MOVEL*BLANK    WL0365           Reserved for Ot
     C                     GOTO TREXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '1'
     C           YI01      OCUR YM01
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWGQSSH    WL0362           Quantity Sched
     C                     Z-ADDWGWSLS    WL0363           Quantity Sales
     C                     Z-ADDWGQAVL    WL0364           Quantity Availa
     C                     MOVELWGG2SX    WL0365           Reserved for Ot
     C                     ENDIF
      *================================================================
     CSR         TREXIT    ENDSR
      /EJECT
     CSR         TSRVGN    BEGSR
      *================================================================
      * RTV Load Status        RT - OM Load Header  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSTS     KLIST
     C                     KFLD           FJRMNB           Load ID
      * Setup key
     C                     Z-ADDWL0366    FJRMNB           Load ID
      * Establish starting position
     C           KRSTS     CHAIN@FJCPBN              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1188' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0367           Load Status
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO TSEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL'Y2U0003' W0RTN            *Return code
      * PAR = DB1 By name
     C                     MOVELFJPKST    WL0367           Load Status
     C                     ENDIF
      *================================================================
     CSR         TSEXIT    ENDSR
      /EJECT
     CSR         TTRVGN    BEGSR
      *================================================================
      * RTV Order in Use       RT - Order Header TRG  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSTT     KLIST
     C                     KFLD           BEAIC3           Company Number
     C                     KFLD           BEC4NB           Order Number
      * Setup key
     C                     Z-ADDWL0368    BEAIC3           Company Number
     C                     Z-ADDWL0369    BEC4NB           Order Number
      * Establish starting position
     C           KRSTT     CHAIN@BECPFK              90    *
      * Data record not found
     C   90                MOVEL'USR0176' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBEGJST    WL0370           Order in Use
     C                     MOVELBEGWST    WL0371           Header Status
     C                     Z-ADDBERMNB    WL0372           Load ID
     C                     ENDIF
      *================================================================
     CSR         TTEXIT    ENDSR
      /EJECT
     CSR         TUCHRC    BEGSR
      *================================================================
      * CHG Released by User  CH - Order Detail  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0232  70       Item Code
     C                     MOVEL*BLANK    WN0233  3        Warehouse Code
     C                     Z-ADD*ZERO     WN0234  70       Ship To Custome
     C                     Z-ADD*ZERO     WN0235  70       Order Group Cod
     C                     MOVEL*BLANK    WN0236  1        Detail Line Sta
     C                     MOVEL*BLANK    WN0237  1        Detail Line Sta
     C                     Z-ADD*ZERO     WN0238 112       Billing Detail
     C                     Z-ADD*ZERO     WN0239 112       Billing Detail
     C                     Z-ADD*ZERO     WN0240 112       Billing Detail
     C                     Z-ADD*ZERO     WN0241 112       Quantity to Sub
     C                     MOVEL*BLANK    WN0242  1        Comment Print A
     C                     MOVEL*BLANK    WN0243  1        Comment Print I
     C                     MOVEL*BLANK    WN0244  1        Comment Print P
     C                     MOVEL*BLANK    WN0245  1        Comment Print S
     C                     Z-ADD*ZERO     WN0246 112       Extended Amount
     C                     Z-ADD*ZERO     WN0247  70       Market Pricing
     C                     MOVEL*BLANK    WN0248  3        Commodity Marke
     C                     MOVEL*BLANK    WN0249  3        Date Method Cod
     C                     MOVEL*BLANK    WN0250  3        Price Method Co
     C                     Z-ADD*ZERO     WN0251 114       Price Overage O
     C                     Z-ADD*ZERO     WN0252  70       Contract Number
     C                     MOVEL*BLANK    WN0253  1        Price Status
     C                     Z-ADD*ZERO     WN0254  70       Pricing Date Us
     C                     MOVEL*BLANK    WN0255  2        U/M - Base Pric
     C                     MOVEL*BLANK    WN0256  2        U/M - Ordered
     C                     MOVEL*BLANK    WN0257  1        Work Confirm St
     C                     MOVEL*BLANK    WN0258  1        Work Over/Short
     C                     MOVEL*BLANK    WN0259  1        OD Production P
     C                     MOVEL*BLANK    WN0260 30        Order Desc. Lin
     C                     MOVEL*BLANK    WN0261 30        Order Desc. Lin
     C                     MOVEL*BLANK    WN0262  1        Age Code
     C                     MOVEL*BLANK    WN0263  1        Palletize
     C                     MOVEL*BLANK    WN0264  1        Slip Sheet
     C                     MOVEL*BLANK    WN0265  1        Catch Weight St
     C                     MOVEL*BLANK    WN0266  1        Price Audit
     C                     MOVEL*BLANK    WN0267  3        Price Audit Rea
     C                     MOVEL*BLANK    WN0268  1        Production Date
     C                     Z-ADD*ZERO     WN0269 112       Rated Freight
     C                     Z-ADD*ZERO     WN0270 112       Quantity Ordere
     C                     Z-ADD*ZERO     WN0271 112       Weight Ordered
     C                     Z-ADD*ZERO     WN0272 112       Quantity Schedu
     C                     Z-ADD*ZERO     WN0273 112       Weight Schedule
     C                     Z-ADD*ZERO     WN0274 112       Quantity Shippe
     C                     Z-ADD*ZERO     WN0275 112       Weight Shipped
     C                     Z-ADD*ZERO     WN0276 114       Unit Cost Prici
     C                     Z-ADD*ZERO     WN0277 114       Unit Cost Per P
     C                     Z-ADD*ZERO     WN0278 114       Unit Price
     C                     Z-ADD*ZERO     WN0279 114       Unit Price - Cr
     C                     Z-ADD*ZERO     WN0280 114       Unit Price Orde
     C                     Z-ADD*ZERO     WN0281 112       Unit Weight Ord
     C                     Z-ADD*ZERO     WN0282 112       Tare Weight Tot
     C                     Z-ADD*ZERO     WN0283  70       Requested Ship
     C                     Z-ADD*ZERO     WN0284  70       Scheduled Ship
     C                     Z-ADD*ZERO     WN0285  70       Actual Shipped
     C                     MOVEL*BLANK    WN0286  1        Affect Inventor
     C                     MOVEL*BLANK    WN0287  1        Affect Sales Do
     C                     MOVEL*BLANK    WN0288  1        Affect Sales Pn
     C                     Z-ADD*ZERO     WN0289  30       Item Structure
     C                     Z-ADD*ZERO     WN0290  30       Item Structure
     C                     Z-ADD*ZERO     WN0291  30       Item Structure
     C                     MOVEL*BLANK    WN0292  2        Item Level
     C                     MOVEL*BLANK    WN0293  2        Quality Level
     C                     MOVEL*BLANK    WN0294  2        Pricing Product
     C                     MOVEL*BLANK    WN0295  2        Season Product
     C                     Z-ADD*ZERO     WN0296  70       Date of Origina
     C                     MOVEL*BLANK    WN0297 10        User Profile Na
     C                     MOVEL*BLANK    WN0298  6        Country Code
     C                     MOVEL*BLANK    WN0299  2        Event Code
     C                     MOVEL*BLANK    WN0300  3        Reason Code
     C                     MOVEL*BLANK    WN0301  3        Sales Route Cod
     C                     MOVEL*BLANK    WN0302  1        Modified Flag
     C                     MOVEL*BLANK    WN0303  1        Substituted Fla
     C                     MOVEL*BLANK    WN0304  1        OD Schedule Ove
     C                     Z-ADD*ZERO     WN0305 114       Invoice Unit Pr
     C                     Z-ADD*ZERO     WN0306 112       Invoice Extende
     C                     Z-ADD*ZERO     WN0307  30       Ham Group Numbe
     C                     MOVEL*BLANK    WN0308  1        OD Adj Type Ove
     C                     MOVEL*BLANK    WN0309  1        Affect Trade Fu
     C                     MOVEL*BLANK    WN0310  1        Affect Commissi
     C                     MOVEL*BLANK    WN0311  1        Affect Pricing
     C                     MOVEL*BLANK    WN0312  2        Ord TF Exempt C
     C                     MOVEL*BLANK    WN0313  2        OD Pallet Type
     C                     MOVEL*BLANK    WN0314  3        Production Ware
     C                     MOVEL*BLANK    WN0315  3        OD Price Type
     C                     Z-ADD*ZERO     WN0316  70       Warehouse Palle
     C                     Z-ADD*ZERO     WN0317  70       Consumed Item C
     C                     Z-ADD*ZERO     WN0318  70       Deadline Depart
     C                     Z-ADD*ZERO     WN0319  70       OD Price Type R
     C                     Z-ADD*ZERO     WN0320  70       OD Unused Date
     C                     Z-ADD*ZERO     WN0321  60       Deadline Depart
     C                     Z-ADD*ZERO     WN0322  60       Price Code
     C                     Z-ADD*ZERO     WN0323  60       Maximum Net Wei
     C                     Z-ADD*ZERO     WN0324  60       Substitution Li
     C                     Z-ADD*ZERO     WN0325  60       Max Qty to sche
     C                     Z-ADD*ZERO     WN0326 112       Warehouse Palle
     C                     Z-ADD*ZERO     WN0327 112       Warehouse Avg P
     C                     Z-ADD*ZERO     WN0328 112       OD Item Target
     C                     Z-ADD*ZERO     WN0329 112       OD Estimated Gr
     C                     Z-ADD*ZERO     WN0330 112       OD Maximum Unit
     C                     Z-ADD*ZERO     WN0331 114       Order Gate/Fina
     C                     Z-ADD*ZERO     WN0332 114       OD Ceiling Pric
     C                     Z-ADD*ZERO     WN0333 114       OD Gate/Final P
     C                     Z-ADD*ZERO     WN0334 114       OD Weighted Avg
     C                     Z-ADD*ZERO     WN0335 114       OD Unused Prc 5
     C                     Z-ADD*ZERO     WN0336 114       OD Unused Prc 6
     C                     Z-ADD*ZERO     WN0337 114       OD Unused Prc 7
     C                     Z-ADD*ZERO     WN0338 114       OD Unused Prc 8
     C                     MOVEL*BLANK    WN0339  1        OD MPR Sent to
     C                     MOVEL*BLANK    WN0340  1        OD MPR Prc Read
     C                     MOVEL*BLANK    WN0341  1        OD UnUsed Price
     C                     Z-ADD*ZERO     WN0342 112       Weight Amount E
     C                     Z-ADD*ZERO     WN0343  40       Item Age Days
     C                     Z-ADD*ZERO     WN0344  70       Production Ovr
     C                     Z-ADD*ZERO     WN0345  70       Production Ovr
     C                     MOVEL*BLANK    WN0346  1        OD UnUsed Statu
     C                     MOVEL*BLANK    WN0347  2        OD Clm Full Ret
     C                     MOVEL*BLANK    WN0348  3        Order Line Erro
     C                     Z-ADD*ZERO     WN0349  70       OD Market Begin
     C                     Z-ADD*ZERO     WN0350  70       OD Market Endin
     C                     Z-ADD*ZERO     WN0351  70       OD Atch to Ord
     C                     MOVEL*BLANK    WN0352  1        EDI Status 1
     C                     MOVEL*BLANK    WN0353  1        EDI Status 2
     C                     MOVEL*BLANK    WN0354  1        EDI Status 3
     C                     Z-ADD*ZERO     WN0355  60       Job Time
     C                     MOVEL*BLANK    WN0356 10        User Id
     C                     MOVEL*BLANK    WN0357 10        Job Name
     C                     Z-ADD*ZERO     WN0358  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YARDC   1
      *
      * Move key fields to @BGWKL0
     C                     Z-ADD#1AIC3    WKAIC3           Company Number
     C                     Z-ADD#1C4NB    WKC4NB           Order Number
     C                     Z-ADD#1DPNB    WKDPNB           Order Sequence
     C                     Z-ADD#1UENB    WKUENB           Order Secondary
      *
     C           KLCHTU    KLIST
     C                     KFLD           WKAIC3           Company Number
     C                     KFLD           WKC4NB           Order Number
     C                     KFLD           WKDPNB           Order Sequence
     C                     KFLD           WKUENB           Order Secondary
     C           KLCHTU    CHAIN@BGWKL0              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'OPBGWKL0'MDACP
     C                     MOVEL'@BGWKL0' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL001.
     C                     MOVEL'LBL001'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO TUEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO TUEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QOPBG1    YARDCS
      * Move non-key fields to @BGWKL0
     C                     MOVEL'Y'       WKF3SX    P      Released by Use
      *
      * Set PGM.*Record Data Changed flag
     C           QOPBG1    IFNE YARDCS
     C           YARDC     ANDNE'N'
     C                     MOVE 'Y'       YARDC
     C                     ENDIF
      * USER: Processing before Data update
      * Set Date/Time Stamp   IF
     C                     Z-ADD##JTM     WKAATM           Job Time
     C                     MOVEL##USR     WKAYNA           User Id
     C                     MOVEL##JOB     WKA0NA           Job Name
     C                     Z-ADD##JDT     WKAXDT           Job Date
      * Set PGM.*Record Data Changed flag
     C           QOPBG1    IFNE YARDCS
     C           YARDC     ANDNE'N'
     C                     MOVE 'Y'       YARDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YARDC     IFEQ 'Y'
     C                     UPDAT@BGWKL0                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKOPBGWKL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         TUEXIT    ENDSR
      /EJECT
     CSR         TVRVGN    BEGSR
      *================================================================
      * RTV Chg Sts/Prd Sts   RT - Order Header TRG  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSTV     KLIST
     C                     KFLD           BEAIC3           Company Number
     C                     KFLD           BEC4NB           Order Number
      * Setup key
     C                     Z-ADD#1AIC3    BEAIC3           Company Number
     C                     Z-ADD#1C4NB    BEC4NB           Order Number
      * Establish starting position
     C           KRSTV     CHAIN@BECPFK              90    *
      * Data record not found
     C   90                MOVEL'USR0176' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * RTV Check Sch/not Rlsd RT - Order Detail  * 
     C                     EXSR TWRVGN
     C                     MOVELBEGXST    YL0012           Header Status L
     C                     MOVELBEGWST    YL0013           Header Status
      * CASE: DB1.Credit Hold is Yes
     C           BEXIST    IFEQ 'Y'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: LCL.USR Production is No
     C           YL0011    IFEQ 'N'                        *IF
     C                     MOVELBEGWST    YL0012           Header Status L
     C                     MOVEL'A'       YL0013           Header Status
     C                     END                             *FI
     C                     END                             *FI
      * CHG Prd Hld, Sts,Rsn   CH - Order Header TRG  * 
     C                     EXSR TXCHRC
     C                     ENDIF
      *================================================================
     CSR         TVEXIT    ENDSR
      /EJECT
     CSR         TWRVGN    BEGSR
      *================================================================
      * RTV Check Sch/not Rlsd RT - Order Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     MOVEL'N'       YL0011           USR Production
      * Declare restrictor key work fields
     C           *LIKE     DEFN OMAIC3    WQTW01           Company Number
     C           *LIKE     DEFN OMC4NB    WQTW02           Order Number
      * Define keylist
     C           KPSTW     KLIST
     C                     KFLD           WQTW01           Company Number
     C                     KFLD           WQTW02           Order Number
     C                     KFLD           OMDPNB           Order Sequence
     C                     KFLD           OMUENB           Order Secondary
      * Define keylist
     C           KRSTW     KLIST
     C                     KFLD           WQTW01           Company Number
     C                     KFLD           WQTW02           Order Number
      * Setup key
     C                     Z-ADDBEAIC3    WQTW01           Company Number
     C                     Z-ADDBEC4NB    WQTW02           Order Number
     C                     Z-ADD0         OMDPNB           Order Sequence
     C                     Z-ADD0         OMUENB           Order Secondary
      * Establish starting position
     C           KPSTW     SETLL@BGWKL1                    *
     C           KRSTW     READE@BGWKL1                  90*
      * Data record not found
     C   90                MOVEL'USR1309' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE:
      *  - c1ORc2ORc3
      *   |- c1    : DB1.Quantity Ordered EQ DB1.Quantity Scheduled
      *   |- c2    : DB1.Released by User Sts Y/N is yes
      *   |- c3    : DB1.Detail Line Status is Cancelled
      *   '-
     C           OMAVQT    IFEQ OMCCQT                     *IF
     C           OMF3SX    OREQ 'Y'                        *OR
     C           OMGMST    OREQ 'X'                        *OR
      * if all line items are either sched or released by user or cncled,
      * then order is not to be on prod hold
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'Y'       YL0011           USR Production
     C                     END                             *FI
     C           KRSTW     READE@BGWKL1                  90*
     C                     ENDDO
      *================================================================
     CSR         TWEXIT    ENDSR
      /EJECT
     CSR         TXCHRC    BEGSR
      *================================================================
      * CHG Prd Hld, Sts,Rsn   CH - Order Header TRG  * 
      *================================================================
      *
     C                     MOVEL*BLANK    WN0359  2        Order Type - Sa
     C                     Z-ADD*ZERO     WN0360  70       A/R Customer Nu
     C                     Z-ADD*ZERO     WN0361  70       Ship To Custome
     C                     MOVEL*BLANK    WN0362 30        Ship To Name
     C                     MOVEL*BLANK    WN0363 30        Ship To Address
     C                     MOVEL*BLANK    WN0364 30        Ship To Address
     C                     MOVEL*BLANK    WN0365 30        Ship To Address
     C                     MOVEL*BLANK    WN0366 20        Ship To City
     C                     MOVEL*BLANK    WN0367  2        Ship To State C
     C                     MOVEL*BLANK    WN0368 11        Ship To Zip/Pos
     C                     Z-ADD*ZERO     WN0369  70       Bill to Custome
     C                     MOVEL*BLANK    WN0370 30        Bill to Name
     C                     MOVEL*BLANK    WN0371 30        Bill to Address
     C                     MOVEL*BLANK    WN0372 30        Bill to Address
     C                     MOVEL*BLANK    WN0373 30        Bill to Address
     C                     MOVEL*BLANK    WN0374 20        Bill to City
     C                     MOVEL*BLANK    WN0375  2        Bill to State C
     C                     MOVEL*BLANK    WN0376 11        Bill to Zip/Pos
     C                     MOVEL*BLANK    WN0377 15        Customer Purcha
     C                     Z-ADD*ZERO     WN0378  70       Order Date
     C                     Z-ADD*ZERO     WN0379  70       Requested Ship
     C                     Z-ADD*ZERO     WN0380  70       Actual Shipped
     C                     Z-ADD*ZERO     WN0381  70       Cancel Date
     C                     MOVEL*BLANK    WN0382  2        Terms Code
     C                     MOVEL*BLANK    WN0383 40        Special Instruc
     C                     MOVEL*BLANK    WN0384 40        Special Instruc
     C                     MOVEL*BLANK    WN0385  3        Carrier Code
     C                     MOVEL*BLANK    WN0386  1        Comment Print A
     C                     MOVEL*BLANK    WN0387  1        Comment Print I
     C                     MOVEL*BLANK    WN0388  1        Comment Print P
     C                     MOVEL*BLANK    WN0389  1        Comment Print S
     C                     MOVEL*BLANK    WN0390  1        Order in Use
     C                     MOVEL*BLANK    WN0391  1        Order Type Prin
     C                     Z-ADD*ZERO     WN0392  70       Scheduled Ship
     C                     MOVEL*BLANK    WN0393 10        User Original E
     C                     Z-ADD*ZERO     WN0394  70       Date of Origina
     C                     Z-ADD*ZERO     WN0395 112       Order Value Tot
     C                     Z-ADD*ZERO     WN0396 112       Order Weight To
     C                     MOVEL*BLANK    WN0397  1        Credit Hold
     C                     MOVEL*BLANK    WN0398  1        New Customer Ho
     C                     Z-ADD*ZERO     WN0399  70       Requested Deliv
     C                     Z-ADD*ZERO     WN0400  40       Requested Deliv
     C                     MOVEL*BLANK    WN0401  4        Accounts Receiv
     C                     MOVEL*BLANK    WN0402 12        Accounts Receiv
     C                     Z-ADD*ZERO     WN0403  70       Load ID
     C                     Z-ADD*ZERO     WN0404  52       Absorbed Freigh
     C                     Z-ADD*ZERO     WN0405 112       Rated Freight
     C                     MOVEL*BLANK    WN0406  1        LTL Flag
     C                     MOVEL*BLANK    WN0407  1        Price Audit
     C                     MOVEL*BLANK    WN0408  1        Price Status
     C                     MOVEL*BLANK    WN0409  2        Shipping Method
     C                     MOVEL*BLANK    WN0410  1        Export Status
     C                     MOVEL*BLANK    WN0411  1        Palletize
     C                     MOVEL*BLANK    WN0412  1        Shrink Wrap
     C                     MOVEL*BLANK    WN0413  1        Slip Sheet
     C                     MOVEL*BLANK    WN0414  1        Age Code
     C                     Z-ADD*ZERO     WN0415  52       Reefer Temperat
     C                     MOVEL*BLANK    WN0416  1        Load Type
     C                     Z-ADD*ZERO     WN0417  70       Attach to Invoi
     C                     MOVEL*BLANK    WN0418  1        Load Plan Order
     C                     MOVEL*BLANK    WN0419  1        Print Pick Slip
     C                     Z-ADD*ZERO     WN0420  70       Resell Referenc
     C                     MOVEL*BLANK    WN0421 30        Special Comment
     C                     MOVEL*BLANK    WN0422 30        Special Comment
     C                     MOVEL*BLANK    WN0423  1        Affect Auto Acc
     C                     MOVEL*BLANK    WN0424  3        Sales Route Cod
     C                     MOVEL*BLANK    WN0425  2        Manager Level C
     C                     MOVEL*BLANK    WN0426  3        VP Level Code
     C                     Z-ADD*ZERO     WN0427  70       Attach to Order
     C                     MOVEL*BLANK    WN0428  3        Reason for Pric
     C                     Z-ADD*ZERO     WN0429  70       Invoice Number
     C                     MOVEL*BLANK    WN0430  2        Invoice Suffix
     C                     Z-ADD*ZERO     WN0431  70       Invoice Date
     C                     MOVEL*BLANK    WN0432  2        Event Code
     C                     MOVEL*BLANK    WN0433  1        Trans Contol AS
     C                     MOVEL*BLANK    WN0434  1        Modified Flag
     C                     Z-ADD*ZERO     WN0435 112       A/R order Value
     C                     MOVEL*BLANK    WN0436  1        Billing Activit
     C                     MOVEL*BLANK    WN0437  1        Block Order Fla
     C                     MOVEL*BLANK    WN0438  1        Order Certifica
     C                     Z-ADD*ZERO     WN0439 112       Invoice Order V
     C                     MOVEL*BLANK    WN0440  1        Process Sts for
     C                     MOVEL*BLANK    WN0441  1        Order Conf Fax
     C                     MOVEL*BLANK    WN0442  1        Manifest Fax St
     C                     MOVEL*BLANK    WN0443  1        Invoice Fax Sts
     C                     MOVEL*BLANK    WN0444  1        Transfer in Sto
     C                     MOVEL*BLANK    WN0445  1        Email Cust On O
     C                     MOVEL*BLANK    WN0446  1        Order Emailed
     C                     MOVEL*BLANK    WN0447  1        Export Docs Go
     C                     MOVEL*BLANK    WN0448  1        Shipping Temp C
     C                     MOVEL*BLANK    WN0449  1        Broker Order St
     C                     MOVEL*BLANK    WN0450  1        Air Freight Ord
     C                     MOVEL*BLANK    WN0451  2        Order Requires
     C                     MOVEL*BLANK    WN0452  2        OH Load Plan Re
     C                     MOVEL*BLANK    WN0453  2        Export USDA App
     C                     MOVEL*BLANK    WN0454  3        HPB Ship to War
     C                     MOVEL*BLANK    WN0455  3        OH TF Exempt Co
     C                     Z-ADD*ZERO     WN0456  70       OH Appt Confirm
     C                     Z-ADD*ZERO     WN0457  70       JPN Invoice Iss
     C                     Z-ADD*ZERO     WN0458  70       Load Actual Shi
     C                     Z-ADD*ZERO     WN0459  70       Load BOL Comple
     C                     Z-ADD*ZERO     WN0460  70       Load Truck Depa
     C                     Z-ADD*ZERO     WN0461  60       Maximum Gross W
     C                     Z-ADD*ZERO     WN0462  60       Time of Origina
     C                     Z-ADD*ZERO     WN0463  60       OH Appt Confirm
     C                     Z-ADD*ZERO     WN0464  60       Load BOL Comple
     C                     Z-ADD*ZERO     WN0465  60       Load Truck Depa
     C                     Z-ADD*ZERO     WN0466 112       Act Frt Referen
     C                     Z-ADD*ZERO     WN0467 112       Act Non-Ref Frt
     C                     Z-ADD*ZERO     WN0468 112       OH Fuel Surchar
     C                     Z-ADD*ZERO     WN0469 112       OH Total Non-Re
     C                     Z-ADD*ZERO     WN0470 112       OH Total Ref Fr
     C                     Z-ADD*ZERO     WN0471  70       Claim Number
     C                     MOVEL*BLANK    WN0472  1        EDI Status 1
     C                     MOVEL*BLANK    WN0473  1        EDI Status 2
     C                     MOVEL*BLANK    WN0474  1        EDI Status 3
     C                     Z-ADD*ZERO     WN0475  60       Job Time
     C                     MOVEL*BLANK    WN0476 10        User Id
     C                     MOVEL*BLANK    WN0477 10        Job Name
     C                     Z-ADD*ZERO     WN0478  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YBRDC   1
      *
      * Move key fields to @BECPFJ
     C                     Z-ADDBEAIC3    WLAIC3           Company Number
     C                     Z-ADDBEC4NB    WLC4NB           Order Number
      *
     C           KLCHTX    KLIST
     C                     KFLD           WLAIC3           Company Number
     C                     KFLD           WLC4NB           Order Number
     C           KLCHTX    CHAIN@BECPFJ              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'OPBFCPL0'MDACP
     C                     MOVEL'@BECPFJ' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL002.
     C                     MOVEL'LBL002'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO TXEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO TXEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QOPBF1    YBRDCS
      * Move non-key fields to @BECPFJ
     C                     MOVELBECQCD    WLCQCD    P      Reason Code
     C                     MOVELYL0013    WLGWST    P      Header Status
     C                     MOVELYL0012    WLGXST    P      Header Status L
     C                     MOVELYL0011    WLXJST    P      Production Hold
      *
      * Set PGM.*Record Data Changed flag
     C           QOPBF1    IFNE YBRDCS
     C           YBRDC     ANDNE'N'
     C                     MOVE 'Y'       YBRDC
     C                     ENDIF
      * USER: Processing before Data update
      * Set Date/Time Stamp.PgmIF
     C                     Z-ADD##JTM     WLAATM           Job Time
     C                     MOVEL##USR     WLAYNA           User Id
     C                     MOVEL##PGM     WLA0NA           Job Name
     C                     Z-ADD##JDT     WLAXDT           Job Date
      * TRG Order Hdr CHG Trig XT - Order Header TRG  * 
     C                     CLEARPDRC
     C                     Z-ADDWLAIC3    PDAIC3           Company Number
     C                     Z-ADDWLC4NB    PDC4NB           Order Number
     C                     MOVELWLJNCD    PDJNCD    P      Order Type - Sa
     C                     Z-ADDWLANC7    PDANC7           A/R Customer Nu
     C                     Z-ADDWLBKC7    PDBKC7           Ship To Custome
     C                     MOVELWLBRTX    PDBRTX    P      Ship To Name
     C                     MOVELWLHMNA    PDHMNA    P      Ship To Address
     C                     MOVELWLHONA    PDHONA    P      Ship To Address
     C                     MOVELWLHPNA    PDHPNA    P      Ship To Address
     C                     MOVELWLHNNA    PDHNNA    P      Ship To City
     C                     MOVELWLDBCD    PDDBCD    P      Ship To State C
     C                     MOVELWLCKTX    PDCKTX    P      Ship To Zip/Pos
     C                     Z-ADDWLB0C7    PDB0C7           Bill to Custome
     C                     MOVELWLAETX    PDAETX    P      Bill to Name
     C                     MOVELWLB1NA    PDB1NA    P      Bill to Address
     C                     MOVELWLB3NA    PDB3NA    P      Bill to Address
     C                     MOVELWLB4NA    PDB4NA    P      Bill to Address
     C                     MOVELWLB2NA    PDB2NA    P      Bill to City
     C                     MOVELWLBHCD    PDBHCD    P      Bill to State C
     C                     MOVELWLC8TX    PDC8TX    P      Bill to Zip/Pos
     C                     MOVELWLBCNA    PDBCNA    P      Customer Purcha
     C                     Z-ADDWLA0DT    PDA0DT           Order Date
     C                     Z-ADDWLA5DT    PDA5DT           Requested Ship
     C                     Z-ADDWLGNDT    PDGNDT           Actual Shipped
     C                     Z-ADDWLACDT    PDACDT           Cancel Date
     C                     MOVELWLAQCD    PDAQCD    P      Terms Code
     C                     MOVELWLB6NA    PDB6NA    P      Special Instruc
     C                     MOVELWLBYNA    PDBYNA    P      Special Instruc
     C                     MOVELWLBZNA    PDBZNA    P      Carrier Code
     C                     MOVELWLGTST    PDGTST    P      Comment Print A
     C                     MOVELWLGVST    PDGVST    P      Comment Print I
     C                     MOVELWLGUST    PDGUST    P      Comment Print P
     C                     MOVELWLQFST    PDQFST    P      Comment Print S
     C                     MOVELWLCQCD    PDCQCD    P      Reason Code
     C                     MOVELWLGJST    PDGJST    P      Order in Use
     C                     MOVELWLGWST    PDGWST    P      Header Status
     C                     MOVELWLGXST    PDGXST    P      Header Status L
     C                     MOVELWLGYST    PDGYST    P      Order Type Prin
     C                     Z-ADDWLAODT    PDAODT           Scheduled Ship
     C                     MOVELWLAIVN    PDAIVN    P      User Original E
     C                     Z-ADDWLCXDT    PDCXDT           Date of Origina
     C                     Z-ADDWLJZVA    PDJZVA           Order Value Tot
     C                     Z-ADDWLA1WG    PDA1WG           Order Weight To
     C                     MOVELWLXIST    PDXIST    P      Credit Hold
     C                     MOVELWLXJST    PDXJST    P      Production Hold
     C                     MOVELWLXKST    PDXKST    P      New Customer Ho
     C                     Z-ADDWLEIDT    PDEIDT           Requested Deliv
     C                     Z-ADDWLAFTM    PDAFTM           Requested Deliv
     C                     MOVELWLE8CD    PDE8CD    P      Accounts Receiv
     C                     MOVELWLE9CD    PDE9CD    P      Accounts Receiv
     C                     Z-ADDWLRMNB    PDRMNB           Load ID
     C                     Z-ADDWLTBNB    PDTBNB           Absorbed Freigh
     C                     Z-ADDWLR1NB    PDR1NB           Rated Freight
     C                     MOVELWLPJST    PDPJST    P      LTL Flag
     C                     MOVELWLU0ST    PDU0ST    P      Price Audit
     C                     MOVELWLU1ST    PDU1ST    P      Price Status
     C                     MOVELWLQ2CD    PDQ2CD    P      Shipping Method
     C                     MOVELWLU2ST    PDU2ST    P      Export Status
     C                     MOVELWLVEST    PDVEST    P      Palletize
     C                     MOVELWLVFST    PDVFST    P      Shrink Wrap
     C                     MOVELWLVGST    PDVGST    P      Slip Sheet
     C                     MOVELWLRPCD    PDRPCD    P      Age Code
     C                     Z-ADDWLRNNB    PDRNNB           Reefer Temperat
     C                     MOVELWLVDST    PDVDST    P      Load Type
     C                     Z-ADDWLATIN    PDATIN           Attach to Invoi
     C                     MOVELWLU4ST    PDU4ST    P      Load Plan Order
     C                     MOVELWLU5ST    PDU5ST    P      Print Pick Slip
     C                     Z-ADDWLRSRN    PDRSRN           Resell Referenc
     C                     MOVELWLMHNA    PDMHNA    P      Special Comment
     C                     MOVELWLMINA    PDMINA    P      Special Comment
     C                     MOVELWLWBST    PDWBST    P      Affect Auto Acc
     C                     MOVELWLR4CD    PDR4CD    P      Sales Route Cod
     C                     MOVELWLBFCD    PDBFCD    P      Manager Level C
     C                     MOVELWLQ4CD    PDQ4CD    P      VP Level Code
     C                     Z-ADDWLT3NB    PDT3NB           Attach to Order
     C                     MOVELWLSICD    PDSICD    P      Reason for Pric
     C                     Z-ADDWLCONB    PDCONB           Invoice Number
     C                     MOVELWLCEST    PDCEST    P      Invoice Suffix
     C                     Z-ADDWLAWDT    PDAWDT           Invoice Date
     C                     MOVELWLJPCD    PDJPCD    P      Event Code
     C                     MOVELWLXUST    PDXUST    P      Trans Contol AS
     C                     MOVELWLZ1ST    PDZ1ST    P      Modified Flag
     C                     Z-ADDWLVRVA    PDVRVA           A/R order Value
     C                     MOVELWLOBST    PDOBST    P      Billing Activit
     C                     MOVELWLBCST    PDBCST    P      Block Order Fla
     C                     MOVELWLBDST    PDBDST    P      Order Certifica
     C                     Z-ADDWLB7VL    PDB7VL           Invoice Order V
     C                     MOVELWLGASX    PDGASX    P      Process Sts for
     C                     MOVELWLGBSX    PDGBSX    P      Order Conf Fax
     C                     MOVELWLGCSX    PDGCSX    P      Manifest Fax St
     C                     MOVELWLGDSX    PDGDSX    P      Invoice Fax Sts
     C                     MOVELWLFNSX    PDFNSX    P      Transfer in Sto
     C                     MOVELWLFOSX    PDFOSX    P      Email Cust On O
     C                     MOVELWLFPSX    PDFPSX    P      Order Emailed
     C                     MOVELWLFQSX    PDFQSX    P      Export Docs Go
     C                     MOVELWLFRSX    PDFRSX    P      Shipping Temp C
     C                     MOVELWLFSSX    PDFSSX    P      Broker Order St
     C                     MOVELWLFTSX    PDFTSX    P      Air Freight Ord
     C                     MOVELWLFUSX    PDFUSX    P      Order Requires
     C                     MOVELWLFVSX    PDFVSX    P      OH Load Plan Re
     C                     MOVELWLFWSX    PDFWSX    P      Export USDA App
     C                     MOVELWLFXSX    PDFXSX    P      HPB Ship to War
     C                     MOVELWLFYSX    PDFYSX    P      OH TF Exempt Co
     C                     Z-ADDWLNODT    PDNODT           OH Appt Confirm
     C                     Z-ADDWLNPDT    PDNPDT           JPN Invoice Iss
     C                     Z-ADDWLNQDT    PDNQDT           Load Actual Shi
     C                     Z-ADDWLNRDT    PDNRDT           Load BOL Comple
     C                     Z-ADDWLNSDT    PDNSDT           Load Truck Depa
     C                     Z-ADDWLBPTM    PDBPTM           Maximum Gross W
     C                     Z-ADDWLBQTM    PDBQTM           Time of Origina
     C                     Z-ADDWLBRTM    PDBRTM           OH Appt Confirm
     C                     Z-ADDWLBSTM    PDBSTM           Load BOL Comple
     C                     Z-ADDWLBTTM    PDBTTM           Load Truck Depa
     C                     Z-ADDWLH0NX    PDH0NX           Act Frt Referen
     C                     Z-ADDWLH1NX    PDH1NX           Act Non-Ref Frt
     C                     Z-ADDWLH2NX    PDH2NX           OH Fuel Surchar
     C                     Z-ADDWLH3NX    PDH3NX           OH Total Non-Re
     C                     Z-ADDWLH4NX    PDH4NX           OH Total Ref Fr
     C                     Z-ADDWLC0C7    PDC0C7           Claim Number
     C                     MOVELWLUVST    PDUVST    P      EDI Status 1
     C                     MOVELWLUWST    PDUWST    P      EDI Status 2
     C                     MOVELWLUXST    PDUXST    P      EDI Status 3
     C                     Z-ADDWLAATM    PDAATM           Job Time
     C                     MOVELWLAYNA    PDAYNA    P      User Id
     C                     MOVELWLA0NA    PDA0NA    P      Job Name
     C                     Z-ADDWLAXDT    PDAXDT           Job Date
      *
     C                     CALL 'PDW9XFR'              90  TRG Order Hdr C
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PDRC             RCD: Order Head
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDW9XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      * Set PGM.*Record Data Changed flag
     C           QOPBF1    IFNE YBRDCS
     C           YBRDC     ANDNE'N'
     C                     MOVE 'Y'       YBRDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YBRDC     IFEQ 'Y'
     C                     UPDAT@BECPFJ                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKOPBFCPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         TXEXIT    ENDSR
      /EJECT
     CSR         TYRVGN    BEGSR
      *================================================================
      * RTV Load for Load Plan RT - Load Header  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSTY     KLIST
     C                     KFLD           FJRMNB           Load ID
      * Setup key
     C                     Z-ADD#2RMNB    FJRMNB           Load ID
      * Establish starting position
     C           KRSTY     CHAIN@FJCPBN              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1188' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WUAODT           Scheduled Ship
     C                     MOVEL*BLANK    WN0479           Load Status
     C                     Z-ADD*ZERO     WURNNB           Reefer Temperat
     C                     Z-ADD*ZERO     WN0480           Total Load Orde
     C                     Z-ADD*ZERO     WUFLAM           Flat Amount
     C                     MOVEL*BLANK    WUXQST           Allocate Pounds
     C                     MOVEL*BLANK    WN0481           Carrier Code
     C                     MOVEL*BLANK    WN0482           Truck Size
     C                     Z-ADD*ZERO     WUR1NB           Rated Freight
     C                     MOVEL*BLANK    WUVDST           Load Type
     C                     Z-ADD*ZERO     WUT4NB           Schedule Sequen
     C                     Z-ADD*ZERO     WUTLMI           Total Load Mile
     C                     MOVEL*BLANK    WN0483           Shipping Method
     C                     MOVEL*BLANK    WUVPCD           Ship From Wareh
     C                     MOVEL*BLANK    WUDBCD           Ship To State C
     C                     MOVEL*BLANK    WUXCCD           Carrier Broker
     C                     MOVEL*BLANK    WN0484           Load Acceptance
     C                     Z-ADD*ZERO     WUK2DT           Override Total
     C                     MOVEL*BLANK    WUWRTX           Shipping Temp C
     C                     GOTO TYEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDFJAODT    WUAODT           Scheduled Ship
     C                     MOVELFJPKST    WN0479           Load Status
     C                     Z-ADDFJRNNB    WURNNB           Reefer Temperat
     C                     Z-ADDFJRPNB    WN0480           Total Load Orde
     C                     Z-ADDFJFLAM    WUFLAM           Flat Amount
     C                     MOVELFJXQST    WUXQST           Allocate Pounds
     C                     MOVELFJBZNA    WN0481           Carrier Code
     C                     MOVELFJRONB    WN0482           Truck Size
     C                     Z-ADDFJR1NB    WUR1NB           Rated Freight
     C                     MOVELFJVDST    WUVDST           Load Type
     C                     Z-ADDFJT4NB    WUT4NB           Schedule Sequen
     C                     Z-ADDFJTLMI    WUTLMI           Total Load Mile
     C                     MOVELFJQ2CD    WN0483           Shipping Method
     C                     MOVELFJVPCD    WUVPCD           Ship From Wareh
     C                     MOVELFJDBCD    WUDBCD           Ship To State C
     C                     MOVELFJXCCD    WUXCCD           Carrier Broker
     C                     MOVELFJRMST    WN0484           Load Acceptance
     C                     Z-ADDFJK2DT    WUK2DT           Override Total
     C                     MOVELFJWRTX    WUWRTX           Shipping Temp C
     C                     ENDIF
      *================================================================
     CSR         TYEXIT    ENDSR
      /EJECT
     CSR         TZRVGN    BEGSR
      *================================================================
      * RTV Any Ord/Blk  on Ld RT - Order Header TRG  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * 05/14/04 SLM PKTR01 Multi-Company - Funct chg remove Company RST
     C                     MOVEL*BLANK    WUJDST           USR Check Y/N S
      * OMS203:  need to know if there are any Block orders on load
     C                     MOVEL'F'       WN0485           Block Order Fla
      * Declare restrictor key work fields
     C           *LIKE     DEFN WMRMNB    WQTZ02           Load ID
      * Define keylist
     C           KRSTZ     KLIST
     C                     KFLD           WQTZ02           Load ID
      * Setup key
     C                     Z-ADD#2RMNB    WQTZ02           Load ID
      * Establish starting position
     C           KRSTZ     SETLL@BFCPD9                    *
     C           KRSTZ     READE@BFCPD9                  90*
      * Data record not found
     C   90                MOVEL'USR0176' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     MOVEL'Y'       WUJDST           USR Check Y/N S
      * CASE: DB1.Block Order Flag is Block Order
     C           WMBCST    IFEQ 'B'                        *IF
     C                     MOVELWMBCST    WN0485           Block Order Fla
     C                     GOTO TZEXIT                     *QUIT
     C                     END                             *FI
     C           KRSTZ     READE@BFCPD9                  90*
     C                     ENDDO
      *================================================================
     CSR         TZEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * DOC: 04/11/07 Change Log
      *================================================================
      * 04/10/07 Effective 04/23/07 representation of Age Code changes
      *          will be such that Age Code A will be 0 day for boxes
      *          and combos.  The labels on the cartons will not print
      *          a date that is offset by Sunday or Holiday.  Instead of
      *          Code Date, it will be the Pack Date.
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * DOC: 04/11/07 Change Log
      *================================================================
      * 04/10/07 Effective 04/23/07 representation of Age Code changes
      *          will be such that Age Code A will be 0 day for boxes
      *          and combos.  The labels on the cartons will not print
      *          a date that is offset by Sunday or Holiday.  Instead of
      *          Code Date, it will be the Pack Date.
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         UCSUBR    BEGSR
      *================================================================
      * DOC: 04/11/07 Change Log
      *================================================================
      * 04/10/07 Effective 04/23/07 representation of Age Code changes
      *          will be such that Age Code A will be 0 day for boxes
      *          and combos.  The labels on the cartons will not print
      *          a date that is offset by Sunday or Holiday.  Instead of
      *          Code Date, it will be the Pack Date.
      *================================================================
     CSR         UCEXIT    ENDSR
      /EJECT
     CSR         UDSUBR    BEGSR
      *================================================================
      * DOC: 04/11/07 Change Log
      *================================================================
      * 04/10/07 Effective 04/23/07 representation of Age Code changes
      *          will be such that Age Code A will be 0 day for boxes
      *          and combos.  The labels on the cartons will not print
      *          a date that is offset by Sunday or Holiday.  Instead of
      *          Code Date, it will be the Pack Date.
      *================================================================
     CSR         UDEXIT    ENDSR
      /EJECT
     CSR         UESUBR    BEGSR
      *================================================================
      * ***** Change Log and Comments
      *================================================================
      * *****
      * ** 09/20/2011 LJB P001251  Export Order Automation Upload
      * ** Cannot lock load if there are errors still pending in the
      * ** Order Detail record
      * *****
      * ** Auto lock if shipping today & no errors            E00495
      *================================================================
     CSR         UEEXIT    ENDSR
      /EJECT
     CSR         UFSUBR    BEGSR
      *================================================================
      * ***** Change Log and Comments
      *================================================================
      * ** The Date and Time being calculated are the latest date and tim
      * ** that the truck can leave the warehouse and still make the
      * ** delivery on time.
      * *****
      * ** E00495 LJB 09.23.2009
      * ** Carrier Appt Date and Time are in the parm Deadline Departure
      * ** date and time, if called from "UPD Ld Mi,Whse,DDD/T IF"
      * *****
      * ** E00207 LJB 08/11/2008
      * ** Override Total Load Miles has been added to the
      * ** Retrieve Total Load Miles function
      * *****
      * ** FP1251 LJB 12/26/2007
      * ** If no Miles To Next record, change SSD/T to zeros.
      * ** Scheduled Deliv Date has (should have) Requested Delivery Date
      *================================================================
     CSR         UFEXIT    ENDSR
      /EJECT
     CSR         UGSUBR    BEGSR
      *================================================================
      * Calc Load U/M           -- RMC 6/16/06
      *================================================================
      * ** All boxes=BX, All combos=CB, Any mix of the two=MX   E00239 11
      * RTV UM/Whs Code,BX Qty XF - Order Header TRG  * 
     C                     CALL 'PPYXXFR'              90  RTV UM/Whs Code
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #2RMNB    WQ0166  70       Load ID
     C           WN0507    PARM *BLANK    WQ0167  2        Load U/M
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PPYXXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      *================================================================
     CSR         UGEXIT    ENDSR
      /EJECT
     CSR         UHSUBR    BEGSR
      *================================================================
      * ***** Change Log and comments
      *================================================================
      * ** 07/15/16  RMC E4119 Dont recalc deadl depart,miles if MG Creat
      * ** 09/30/2009 LJB E00495
      * **   Use carrier date/time, if entered, to calc DDD/T
      * ** 11/16/2007 LJB FP1251 Deadline Depart Date and Time will be
      * ** zeros if there is no Miles Between Cities record
      *================================================================
     CSR         UHEXIT    ENDSR
      /EJECT
     CSR         UISUBR    BEGSR
      *================================================================
      * ***** Change Log and comments
      *================================================================
      * ** LJB 09/20/11 P001251 Don't auto lock if errors pending in Orde
      *    from the Export Order Automation Upload process
      * ** 10/01/2009 LJB E00495 Don't auto-lock if shipping later than t
      * ** 07/24/2009 RMC FP1054 Dont lock load if shipping later than to
      * ** 01/20/2009 RMC FP1054 For Sched as Ord: Chk User profile field
      *   Remove from screen:  10=Schedule As Ordered
      *   add to screen:  14=Release Line Itm,dsp sts in subfile
      * ** 09/01/2006 LJB L60831A Pass company# & whse to Product Availab
      * ** 02/27/2007 RMC When Sched as ordered, auto-lock load if it can
      *   at exit proc time if Process Post USR = Yes
      * ** 04/18/2007 LJB FT299
      * **   Pass blanks to the Print Acknowledgement program - it will
      * **   check to see if the user has multi-warehouse authority
      * ** 07/17/2007 RMC Load CTL field with Ship to cust when dtl
      *      line  not Cancelled - the cust may have changed on new line
      *================================================================
     CSR         UIEXIT    ENDSR
      /EJECT
     CSR         VACKRL    BEGSR
      *================================================================
      * Check restriction within
      *================================================================
      * Name search required?
     C                     MOVELV2AIC3    WK1X01  1
     C                     MOVELV2C4NB    WK1X02  1
     C           WK1X01    IFEQ '?'                        Company Number
     C           YPMTFD    OREQ '#2AIC3'
     C           WK1X02    OREQ '?'                        Order Number
     C           YPMTFD    OREQ '#2C4NB'
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(CTL) #2AIC3' defaulted for 'Company Number'.
      * Field '(CTL) #2C4NB' defaulted for 'Order Number'.
     C                     CALL 'PDPCSRR'              90  SEL Order
     C                     PARM *BLANK    W0RTN   7
     C           #2AIC3    PARM #2AIC3    WQ0152  30       Company Number
     C           #2C4NB    PARM #2C4NB    WQ0153  70       Order Number
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDPCSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     99    *
     C                     END
      *
     C           #2AIC3    IFNE *ZERO                      Company Number
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C           WK1X01    ANDNE'?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
     C           #2C4NB    IFNE *ZERO                      Order Number
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C           WK1X02    ANDNE'?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
      * No value selected, exit
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     GOTO VA999
     C                     END
     C                     END
      *................................................................
      *
     C           KLVABE    KLIST
     C                     KFLD           BEAIC3           Company Number
     C                     KFLD           BEC4NB           Order Number
      * Setup key
     C                     Z-ADD#2AIC3    BEAIC3
     C                     Z-ADD#2C4NB    BEC4NB
     C           KLVABE    CHAIN@BECPFK              9091  *
     C           *IN90     IFEQ '0'
      * Record found - move back any virtuals
     C                     MOVELBEXIST    #2XIST           Credit Hold
     C                     MOVELBEXJST    #2XJST           Production Hold
     C                     MOVELBEGWST    #2GWST           Header Status
     C                     MOVELBEJNCD    #2JNCD           Order Type - Sa
     C                     Z-ADDBERMNB    #2RMNB           Load ID
     C                     MOVELBEU2ST    #2U2ST           Export Status
     C                     MOVELBEHNNA    #2HNNA           Ship To City
     C                     MOVELBEDBCD    #2DBCD           Ship To State C
     C                     Z-ADDBEEIDT    #2EIDT           Requested Deliv
     C                     Z-ADDBEAFTM    #2AFTM           Requested Deliv
     C                     MOVELBEGJST    #2GJST           Order in Use
     C                     GOTO VAEXIT
     C                     END
     C           YPMTFD    IFNE *BLANK
     C                     SETOF                     9091
     C                     GOTO VAEXIT
     C                     END
     C           VA999     TAG
      * Restrictor relation not satisfied
      * Send message 'Order Header TRG       NF'
     C                     MOVEL'USR0176' ZAMSID
     C                     MOVEL'*PRV '   ZAPGRL           Rel queue
     C                     EXSR ZASNMS
     C                     MOVEL'USR0176' P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         VAEXIT    ENDSR
      /EJECT
     CSR         XCVFA     BEGSR
      *================================================================
      * Convert absolute day to date
      *================================================================
     C           XDAY1     IFGT 109267
     C                     ADD  2         XDAY1
     C                     ELSE
     C           XDAY1     IFGT 36218
     C                     ADD  1         XDAY1
     C                     END
     C                     END
      * Full years (up to the date)
     C           XDAY1     DIV  365.25    XDWK1   80
     C                     MVR            XDWK3   71
     C                     Z-ADDXDWK1     XDINYY
     C           XDWK3     IFEQ 0
      * The date is the end of a year
     C                     Z-ADD12        XDINMM
     C                     Z-ADD31        XDINDD
     C                     ELSE
      * Year days up to the date
     C           XDWK1     MULT 365.25    XDWK2   60
     C                     SUB  XDWK2     XDAY1
     C                     ADD  1         XDINYY
      * Leap year ?
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
      * March 1 (relative day of the year)
     C           XDWK1     IFEQ 0
     C                     Z-ADD60        XDWK1
     C                     ELSE
     C                     Z-ADD59        XDWK1
     C                     END
      * Define date base month and offset day -
     C           XDAY1     IFLE XDWK1
      *  - January (thru February)
     C                     Z-ADD1         XDINMM
     C                     ELSE
     C                     SUB  XDWK1     XDAY1
     C           XDAY1     IFLE 153
      *  - March (thru July)
     C                     Z-ADD3         XDINMM
     C                     ELSE
      *  - August (thru December)
     C                     Z-ADD8         XDINMM
     C                     SUB  153       XDAY1
     C                     END
      * Calculate 2 month base and offset day
     C           XDAY1     SUB  1         XDWK1
     C                     DIV  61        XDWK1
     C                     MVR            XDAY1
     C                     ADD  1         XDAY1
     C                     MULT 2         XDWK1
     C                     ADD  XDWK1     XDINMM
     C                     END
      * Calculate date increment,
     C           XDAY1     IFGT 31
     C                     ADD  1         XDINMM
     C                     SUB  31        XDAY1
     C                     END
     C                     Z-ADDXDAY1     XDINDD
     C                     END
      *================================================================
     CSR         XCVFAE    ENDSR
      /EJECT
     CSR         XCVTA     BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C           XDINYY    SUB  1         XDWK1   80
     C           XDWK1     MULT 365.25    XDAY1   60
     C           XDWK1     IFGE 300
     C                     SUB  2         XDAY1
     C                     ELSE
     C           XDWK1     IFGE 100
     C                     SUB  1         XDAY1
     C                     END
     C                     END
      * (from the beginning of the year to the beginning of the month:)
     C           XDINMM    SUB  1         XDWK1
     C           XDINMM    IFLT 3
      *     ...+31*(MM-1) (for January-February) ...
     C                     MULT 31        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                     MULT 30        XDWK1
     C                     ADD  XDWK1     XDAY1
      *         ...-2 (for preceding February) ...
     C                     SUB  2         XDAY1
     C           XDINYY    IFNE 100
     C           XDINYY    ANDNE300
      *         ...+1 (for preceding February, if leap year) ...
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     ADD  1         XDAY1
     C                     END
     C                     END
     C           XDINMM    IFLT 8
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C           XDINMM    MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C           XDINMM    ADD  1         XDWK1
     C                     MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     END
     C                     END
      * ...+DD (days in the month up to the ending date)
     C                     ADD  XDINDD    XDAY1
      *================================================================
     CSR         XCVTAE    ENDSR
      /EJECT
     CSR         XDADY     BEGSR
      *================================================================
      * Calculate date increment, *DAYS
      *================================================================
     C           XDURR     IFEQ 0
     C           XDWSL     OREQ 0
      * None days of week selected
     C                     Z-ADDXDAY2     XDAY1
     C           XDURR     IFNE *ZERO
      * Return Code: Unable to increment date.
     C                     MOVEL'Y2U0059' W0RTN   7
     C                     ENDIF
     C                     GOTO XDADYE
     C                     ENDIF
     C           XDWSL     IFEQ 7
      * All days of week selected
     C           XDAY2     ADD  XDURR     XDAY1
     C                     GOTO XDADYM
     C                     ENDIF
      * Some days of week selected
     C           XDURR     IFGE 0
     C                     Z-ADD1         XDSTP   10
     C                     ELSE
     C                     Z-ADD-1        XDSTP
     C                     ENDIF
      * Get number of full weeks in the duration
     C           XDURR     DIV  XDWSL     XDWNB   60
      * Isolate the last week
     C                     MVR            XDLSW   10
     C           XDLSW     IFEQ 0
     C           XDWSL     MULT XDSTP     XDLSW
     C                     SUB  XDSTP     XDWNB
     C                     ENDIF
      * Increment the date by the full weeks
     C           XDWNB     MULT 7         XDWK1   80
     C           XDAY2     ADD  XDWK1     XDAY1   60
      * Determine day of week of the beginning date
     C           XDAY2     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ENDIF
      * Loop: Increment the date by the last week
     C           XDLSW     DOWNE0
      * Increment the date
     C                     ADD  XDSTP     XDAY1
      * Increment the day of week
     C                     ADD  XDSTP     YY
      * Put day of week into the range 1-7
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ELSE
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     ELSE
     C           YY        IFEQ -1
     C                     Z-ADD6         YY
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
     C           YDOW,YY   IFEQ XDSEL
      * Selected day of the last week has been processed
     C                     SUB  XDSTP     XDLSW
     C                     ENDIF
      * End of loop
     C                     ENDDO
     C           XDADYM    TAG
     C           XDINDD    IFLT 1
     C                     Z-ADD1         XDINDD
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         XDADYE    ENDSR
      /EJECT
     CSR         XDOWS     BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                     MOVEAXDCDW     YDOW
     C                     Z-ADD0         XDWSL   10
     C                     Z-ADD1         YY
     C           YY        DOWLE7
     C           YDOW,YY   IFEQ XDSEL
     C                     ADD  1         XDWSL
     C                     END
     C                     ADD  1         YY
     C                     END
      *================================================================
     CSR         XDOWSE    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZDVPMT    BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                     MOVEL*BLANK    YPMTFD 10
     C                     Z-ADD*ZERO     YAFSCH  40
     C                     Z-ADD*ZERO     YPMRRN  40
      *
     C           *IN04     IFEQ '1'
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50
     C                     MVR            ZHCSCL  50
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      * Save sfl rrn at top of page
     C                     Z-ADD@#SFRC    Y#SFRC  40
      *
      * Initialise sfl workfields
     C                     Z-ADD16        ZHSTRW  40
     C                     Z-ADD21        ZHNDRW  40
     C                     Z-ADD2         ZHRLEN  40
     C                     Z-ADD*ZERO     ZHF4RW  40
     C                     Z-ADD*ZERO     ZHWK1#  40
      *
      * Resolve prompt row number on sfl
     C           ZHCSRW    IFGE ZHSTRW
     C           ZHCSRW    ANDLEZHNDRW
     C           ZHCSRW    SUB  ZHSTRW    ZHWK1#
     C           ZHWK1#    DIV  ZHRLEN    ZHWK1#
     C                     Z-ADDZHWK1#    YZSFDL  40
     C           ZHWK1#    MULT ZHRLEN    ZHWK1#
     C           ZHCSRW    SUB  ZHWK1#    ZHF4RW
     C                     END
      *
     C           YPMTFD    IFEQ *BLANK
      * Error if user defined prompting is not specified.
     C           W0PMT     IFEQ 'N'
     C                     MOVEL'*NONE'   YPMTFD
     C                     MOVEL'Y'       W0HLP   1
     C                     MOVEL'Y'       ZAFSMS
      * Send error message.
     C                     MOVEL'Y2U0101' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
      * Save first changed  rrn
     C           ZHCSRW    IFGE ZHSTRW
     C           ZHCSRW    ANDLEZHNDRW
     C           YPMTFD    ANDNE'*NONE'
      *
     C           ##RR      IFNE *ZERO
     C                     READC#SFLRCD                  92*
     C           *IN92     IFEQ '0'
     C                     Z-ADD##RR      YAFSCH
     C                     SETON                     84    *
     C                     UPDAT#SFLRCD
     C                     END
     C                     END
      *
      * Calculate rrn for prompt slf record
     C           ZHCSRW    SUB  ZHSTRW    ZHWK1#
     C           ZHWK1#    DIV  ZHRLEN    ZHWK1#
     C           ZHWK1#    ADD  Y#SFRC    YPMRRN
      *
      * Chain to sfl record
     C           YPMRRN    CHAIN#SFLRCD              9292  *
     C           *IN92     IFEQ '0'
     C                     SETON                     84    *
     C                     UPDAT#SFLRCD
     C                     ELSE
     C                     Z-ADD*ZERO     YPMRRN
     C                     END
      *
      * Test first changed rrn/prompt rrn
     C           YAFSCH    IFEQ *ZERO
     C                     Z-ADDYPMRRN    YAFSCH
     C                     END
      *
      * If prompt rrn < first changed rrn
     C           YPMRRN    IFNE *ZERO
     C           YPMRRN    ANDLTYAFSCH
     C                     Z-ADDYPMRRN    YAFSCH
     C                     END
      *
     C                     END
      *
     C                     END
      *================================================================
     CSR         ZDEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*START'  YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM *ZERO     YYLGCT  50       # of grps
     C                     PARM *BLANK    YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
      * USER: Exit program processing
      * CASE: WRK.Process Post USR is yes
     C           WUGHST    IFEQ 'Y'                        *IF
      * The new order post will not change the production hold if called
      * from a production scheduling program
      * EDT Post Open Orders   XF - Order Header TRG  * 
     C                     CALL 'PDHRXFR'              90  EDT Post Open O
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #2AIC3    WQ0154  30       Company Number
     C                     PARM #2C4NB    WQ0155  70       Order Number
     C                     PARM #2BKC7    WQ0156  70       Ship To Custome
     C           WUJZVA    PARM WUJZVA    WQ0157 112       Order Value Tot
     C           WUA1WG    PARM *ZERO     WQ0158 112       Order Weight To
     C                     PARM 'PS'      WQ0159  3        Pricing Event C
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDHRXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * ** If possible Lock Load when Prod Hold is released - RMC 02/26/0
     C                     MOVEL'N'       WUATUS           STATUS
      * ** Don't auto lock if errors pending in Order Dtl-LJB 09/20/11 P0
      * ** Don't auto lock if shipping later than today - LJB 10/03/09 E0
      * ** dont auto lock if shipping later than tomorrow   - RMC 07/24/0
      *
     C                     MOVEL*BLANK    WN0479  1        Load Status
     C                     Z-ADD*ZERO     WN0480  70       Total Load Orde
     C                     MOVEL*BLANK    WN0481  3        Carrier Code
     C                     MOVEL*BLANK    WN0482  7        Truck Size
     C                     MOVEL*BLANK    WN0483  2        Shipping Method
     C                     MOVEL*BLANK    WN0484  1        Load Acceptance
     C                     MOVEL*BLANK    WN0485  1        Block Order Fla
      *
      * EDT Lock Load Edit/INF IF
      * ** Chk for ord detail errors still pending  9.20.2011 P001251 LJB
      * ** Chg lock option override sts to *job date chk   8.23.09 E00495
      * ** Add lock option override sts for sched ship date chk  7.24.09
      * ** Add Override Total Load Miles - WRK context     E00207 8/13/08
      * RTV Load for Load Plan RT - Load Header  * 
     C                     EXSR TYRVGN
      * RTV Any Ord/Blk  on Ld RT - Order Header TRG  * 
     C                     EXSR TZRVGN
      *
     C                     Z-ADD*ZERO     WN0486  70       Maximum pounds
     C                     Z-ADD*ZERO     WN0487  70       Minimum pounds
     C                     MOVEL*BLANK    WN0488  1        USR Orders on L
     C                     MOVEL*BLANK    WN0489  1        Order in Use
     C                     MOVEL*BLANK    WN0490  1        Header Status
     C                     MOVEL*BLANK    WN0491  1        Access Denied (
      *
      * EDT Lock Load Edits-INFIF
      * assume will have error
     C                     MOVEL'Y'       WUECST           Error Status
      *
     C                     MOVEL*BLANK    WN0492 10        User Profile Na
      *
      * VAL Set Int.Acc No Hdg IF
     C                     MOVEL##USR     WN0492           User Profile Na
      *
     C                     MOVEL*BLANK    WN0493 10        User Code Model
      *
      * VAL User/Appl No Exit  IF
      * RMC 5/11/09 Rtv default company from user profile --
      *   Override user code model company if it exists
      * RTV Program Setup w/Co RT - User Profile Control  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0492    WL0373    P      User Profile Na
     C                     EXSR NARVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0374    WUG0TX    P      Allow Multi-Com
     C                     MOVELWL0375    WUG0TX    P      Default Printer
     C                     MOVELWL0376    WUG0TX    P      Salesperson Cod
     C                     Z-ADDWL0377    YL0015           Company Number
     C                     MOVELWL0378    WN0493    P      User Code Model
      * User Profile Record Not found
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ @CN,003                    *IF
     C                     MOVEL'Y'       WUWVST           Access Denied (
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUWVST           Access Denied (
     C                     END                             *FI
      * CASE: PAR.User Code Model is equal to blank
     C           WN0493    IFEQ *BLANK                     *IF
      * RTV Appl. Profile      RT - Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0492    WL0379    P      User Profile Na
     C                     MOVEL'LOCKLD'  WL0380    P      Application Cod
     C                     EXSR NBRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0381    WUAIC3           Company Number
     C                     MOVELWL0382    YL0016    P      Warehouse Code
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Appl. Profile      RT - Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0493    WL0379    P      User Profile Na
     C                     MOVEL'LOCKLD'  WL0380    P      Application Cod
     C                     EXSR NBRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0381    WUAIC3           Company Number
     C                     MOVELWL0382    YL0016    P      Warehouse Code
     C                     END                             *FI
     C                     MOVELYL0016    WUG0TX           Warehouse Code
      * Return code when not normal for Application Profile
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     MOVEL'N'       WUWVST           Access Denied (
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'Y'       WUWVST           Access Denied (
     C                     END                             *FI
      * CASE: LCL.Company Number is greater than zero
     C           YL0015    IFGT 0                          *IF
     C                     Z-ADDYL0015    WUAIC3           Company Number
      * CASE: LCL.Warehouse Code is Not Blanks
     C           YL0016    IFNE *BLANK                     *IF
      * RTV Prod Whse for Co  RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0017    WL0384           Shipping Compan
     C                     EXSR NCRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0383    WUG0TX    P      Warehouse Code
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADDWUAIC3    WUNFNN           Company Number
     C                     MOVELWUWVST    WN0491           Access Denied (
      * If access denied is no, rtv co. name
      * CASE: WRK.Access Denied (Y/N) is no
     C           WUWVST    IFEQ 'N'                        *IF
      * RTV Company Name       RT - Company Name and Address  * 
     C                     EXSR NDRVGN
     C                     END                             *FI
      * CASE: PAR.Access Denied (Y/N) is yes
     C           WN0491    IFEQ 'Y'                        *IF
      * Send message 'Usr Cant Lock/Unlk Ld-INF'
     C                     MOVEL'USR2543' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * VAL no Stop Entered    RT - Load Detail  * 
     C                     EXSR NERVGN
      * Validate lock request
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ @CN,003                    *IF
      * Setup message data for message
     C                     Z-ADD#2RMNB    ZA0003           Load ID
     C                     MOVELWUSEL     ZA0004           *SFLSEL
      * Send message 'No Orders Assinged - INF'
     C                     MOVEL'USR2544' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     ELSE
      * CASE: PAR.Block Order Flag is Block Order
     C           WN0485    IFEQ 'B'                        *IF
      * Setup message data for message
     C                     MOVELWUSEL     ZA0005           *SFLSEL
     C                     Z-ADD#2RMNB    ZA0006           Load ID
      * Send message 'Blck Ord on Ld-no UPD-INF'
     C                     MOVEL'USR2545' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     ELSE
      * CASE: PAR.Load Status is Locked thru Invoiced
     C           WN0479    IFEQ 'I'                        *IF
     C           WN0479    OREQ 'L'
     C           WN0479    OREQ 'S'
      * Setup message data for message
     C                     MOVELWUSEL     ZA0007           *SFLSEL
     C                     Z-ADD#2RMNB    ZA0008           Load ID
      * Send message 'Load Cant be Locked - INF'
     C                     MOVEL'USR2546' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     ELSE
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Carrier Code EQ WRK.BLANK
      *   |- c2    : PAR.STATUS is No
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0481    IFEQ WUGSTX                     *IF
     C           WUATUS    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Setup message data for message
     C                     MOVELWN0481    ZA0009           Carrier Code
     C                     Z-ADD#2RMNB    ZA0010           Load ID
      * Send message 'Carrier must be ent.- INF'
     C                     MOVEL'USR2547' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     ELSE
      * CASE: PAR.Truck Size EQ WRK.BLANK
     C           WN0482    IFEQ WUGSTX                     *IF
      * Setup message data for message
     C                     MOVELWN0482    ZA0011           Truck Size
     C                     Z-ADD#2RMNB    ZA0012           Load ID
      * Send message 'Truck size needed - INF'
     C                     MOVEL'USR2548' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     ELSE
      * CASE: PAR.Shipping Method EQ WRK.BLANK
     C           WN0483    IFEQ WUGSTX                     *IF
      * Setup message data for message
     C                     MOVELWN0483    ZA0013           Shipping Method
      * Send message 'Shipping Mthd req - INF'
     C                     MOVEL'USR2549' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     ELSE
      * CASE: PAR.USR Orders on Load is yes
     C           WN0488    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     Z-ADD#2RMNB    ZA0014           Load ID
      * Send message 'Load has ords w/o stp-INF'
     C                     MOVEL'USR2550' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     ELSE
      * CASE: PAR.Load Acceptance Flag is Load not Accepted
     C           WN0484    IFEQ 'U'                        *IF
      * Setup message data for message
     C                     Z-ADD#2RMNB    ZA0015           Load ID
      * Send message 'Load is not accepted- INF'
     C                     MOVEL'USR2551' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Hold, Use-by load  RT - PD Order Header  * 
     C                     EXSR NFRVGN
      * Error if held/cancelled/in use order(s) on load
      * CASE: PAR.Header Status is Hold
     C           WN0490    IFEQ 'H'                        *IF
      * Setup message data for message
     C                     Z-ADD#2RMNB    ZA0016           Load ID
     C                     MOVELWUSEL     ZA0017           *SFLSEL
      * Send message 'Load has Ords on Hold-INF'
     C                     MOVEL'USR2552' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     ELSE
      * CASE: PAR.Header Status is Cancelled
     C           WN0490    IFEQ 'X'                        *IF
      * Setup message data for message
     C                     Z-ADD#2RMNB    ZA0018           Load ID
     C                     MOVELWUSEL     ZA0019           *SFLSEL
      * Send message 'Load has Cncld Ords - INF'
     C                     MOVEL'USR2553' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     ELSE
      * CASE: PAR.Order in Use is yes
     C           WN0489    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVELWUSEL     ZA0020           *SFLSEL
     C                     Z-ADD#2RMNB    ZA0021           Load ID
      * Send message 'Load has Ords in Use-INF'
     C                     MOVEL'USR2554' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Ord Requires Revw RT - Order Header TRG  * 
     C                     EXSR NGRVGN
      * ** Check for errors in Export Order Automation Upload   P001251
      * CASE: LCL.Order Requires Review is Yes
     C           YL0018    IFEQ 'Y'                        *IF
      * ** Cannot lock load if errors in Order Detail         P001251
      * Setup message data for message
     C                     MOVELWUSEL     ZA0022           *SFLSEL
     C                     Z-ADD#2RMNB    ZA0023           Load ID
      * Send message 'Order detail needs review'
     C                     MOVEL'USR4464' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * Rtv Min & Max Pounds  RT - OM Truck Size  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0482    WL0034    P      Truck Size
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0035    WN0486           Maximum pounds
     C                     Z-ADDWL0036    WN0487           Minimum pounds
      * Do not want to lock the load if the Load Weight is not
      * within range.  -Purva 5/5/99 C0007042
      * Check minimum and maximum pounds
      * CASE: PAR.Total Weight LT PAR.Minimum pounds
     C           WN0480    IFLT WN0487                     *IF
      * Setup message data for message
     C                     Z-ADD#2RMNB    ZA0024           Load ID
      * Send message 'Load Weight LT Minimum'
     C                     MOVEL'USR1262' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'N'       WUECST           Error Status
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.Total Weight GT PAR.Maximum pounds
     C           WN0480    IFGT WN0486                     *IF
      * Send message 'Load weight exceeds Truck'
     C                     MOVEL'USR2231' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'N'       WUECST           Error Status
     C                     ELSE
      * CASE: *OTHERWISE
      * Check Sched ship date if not called from a LOCK option  FP1054 7/
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Lock option override sts is No
      *   |- c2    : PAR.Scheduled Ship Date GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           'N'       IFEQ 'N'                        *IF
     C           WUAODT    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       WUECST           Error Status
     C                     ELSE
      * CASE: *OTHERWISE
      * Send message 'Locking load pending'
     C                     MOVEL'USR1273' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'N'       WUECST           Error Status
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * ***** Change Log and Comments
     C                     EXSR UESUBR                     ***** Change Lo
      *  Lock Load if no errors
      * CASE: WRK.Error Status is no
     C           WUECST    IFEQ 'N'                        *IF
      * RTV Load Status        RT - Load Header  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2RMNB    WL0366           Load ID
     C                     EXSR TSRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0367    WUPKST    P      Load Status
      *
     C                     Z-ADD*ZERO     WN0494  70       Scheduled Ship
     C                     Z-ADD*ZERO     WN0495 112       Flat Amount
     C                     Z-ADD*ZERO     WN0496  50       Total Stops
     C                     Z-ADD*ZERO     WN0497  70       Total Load Mile
     C                     MOVEL*BLANK    WN0498  3        Ship From Wareh
     C                     MOVEL*BLANK    WN0499  2        Ship To State C
     C                     MOVEL*BLANK    WN0500  3        Carrier Broker
     C                     MOVEL*BLANK    WN0501  1        Export Status
     C                     MOVEL*BLANK    WN0502  3        Shipping Line
     C                     MOVEL*BLANK    WN0503 20        Port Delv Termi
     C                     Z-ADD*ZERO     WN0504  70       Deadline Depart
     C                     Z-ADD*ZERO     WN0505  60       Deadline Depart
     C                     MOVEL*BLANK    WN0506  1        MG Created Load
     C                     MOVEL*BLANK    WN0507  2        Load U/M
     C                     MOVEL*BLANK    WN0508  1        Trans Contol AS
     C                     MOVEL*BLANK    WN0509 20        Destination Cit
     C                     MOVEL*BLANK    WN0510  2        State Code
     C                     MOVEL*BLANK    WN0511  3        USR Warehouse C
     C                     MOVEL*BLANK    WN0512  3        USR CDE Parm 1
     C                     MOVEL*BLANK    WN0513  3        USR CDE Parm 2
     C                     MOVEL*BLANK    WN0514  3        USR CDE Parm 3
     C                     MOVEL*BLANK    WN0515  3        USR CDE Parm 4
     C                     MOVEL*BLANK    WN0516  3        USR CDE Parm 5
     C                     MOVEL*BLANK    WN0517  3        USR CDE Parm 6
     C                     MOVEL*BLANK    WN0518  3        USR CDE Parm 7
     C                     MOVEL*BLANK    WN0519  3        USR CDE Parm 8
     C                     MOVEL*BLANK    WN0520  3        USR CDE Parm 9
     C                     Z-ADD*ZERO     WN0521 155       Company Number
     C                     Z-ADD*ZERO     WN0522 155       Date 1
     C                     Z-ADD*ZERO     WN0523 155       Order Number 1
     C                     Z-ADD*ZERO     WN0524  40       Requested Deliv
     C                     MOVEL*BLANK    WN0525  7        Return Code Usr
      *
      * UPD Lock Load Update   IF
      * RTV Load Header All,Mg RT - Load Header  * 
     C                     EXSR NHRVGN
      * .** Use carr appt dt/tm, if entered, for DDD/T calcs   E00495
      * Fill in ship from whse deadline depart, if locking load and none
      * CASE: PAR.Ship From Warehouse EQ WRK.BLANK
     C           WN0498    IFEQ WUGSTX                     *IF
      * Rtv/Chg Whs,ld miles  RT - Load Header  * 
     C                     EXSR NIRVGN
      * CASE: PAR.MG Created Load is Not MG Created Load
     C           WN0506    IFEQ *BLANK                     *IF
      * ** RTV carrier appt date/time                         E00495
      * RTV 1st Carr Apt Dt/Tm RT - Load Detail  * 
     C                     EXSR NNRVGN
      * ** Use carr appt dt/tm, if entered, for DDD/T calcs   E00495
      * CASE: WRK.LD Carrier Appt Date is Entered
     C           WUN7DT    IFGT 0                          *IF
     C                     Z-ADDWUN7DT    WN0504           Deadline Depart
     C                     ELSE
      * CASE: *OTHERWISE
      * Rtv 1st Ord Delv Dt/Tm RT - Load Detail  * 
     C                     EXSR NORVGN
     C           WN0524    MULT 100       WN0505           Deadline Depart
     C                     END                             *FI
      *
     C                     Z-ADD*ZERO     WN0671  51       Hours Required
     C                     Z-ADD*ZERO     WN0672  50       Miles to next s
     C                     Z-ADD*ZERO     WN0673  50       USR Hours 5.0
     C                     Z-ADD*ZERO     WN0674  51       USR Hours to Mi
     C                     Z-ADD*ZERO     WN0675  50       @Days 5
     C                     Z-ADD*ZERO     WN0676  60       Estimated Arriv
     C                     Z-ADD*ZERO     WN0677  20       USR Period
     C                     Z-ADD*ZERO     WN0678  70       Requested Deliv
     C                     Z-ADD*ZERO     WN0679  40       Requested Deliv
      *
      * CLC Departure Date/TimeIF
      * ***** Change Log and Comments
     C                     EXSR UFSUBR                     ***** Change Lo
      * RTV Shipping Method    RT - Load Header  * 
     C                     EXSR NQRVGN
      * CASE:
      *  - c1 OR c2
      *   |- c1    : LCL.Shipping Method is Collect Truck
      *   |- c2    : LCL.Shipping Method is Collect Rail
      *   '-
     C           YL0019    IFEQ 'CT'                       *IF
     C           YL0019    OREQ 'CR'                       *OR
      * ** Treat CT & CR the same           FP1251 LJB 12/26/2007
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV 1st Stop Mileage   RT - Load Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2RMNB    WL0385           Load ID
     C                     Z-ADD0         WL0386           Stop/Drop
     C                     Z-ADD0         WL0387           Order Number
     C                     EXSR NRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0388    WN0672           Miles to next s
      * ** Calc miles between all stops then retrieve 1st stop miles
      * CASE: PAR.Miles to next stop is Not Entered
     C           WN0672    IFEQ 0                          *IF
      * ** Override miles will be returned, if entered
      * CLC Total Load Miles   XF - Load Detail  * 
     C                     CLEARPFRC
     C                     Z-ADD#2RMNB    PFRMNB           Load ID
      *
     C                     CALL 'PDW3XFR'              90  CLC Total Load
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PFRC             KEY: Load Detai
     C           WUTLMI    PARM WUTLMI    WQ0162  70       Total Load Mile
     C           WUK2DT    PARM WUK2DT    WQ0163  70       Override Total
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDW3XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * RTV 1st Stop Mileage   RT - Load Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2RMNB    WL0385           Load ID
     C                     Z-ADD0         WL0386           Stop/Drop
     C                     Z-ADD0         WL0387           Order Number
     C                     EXSR NRRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0388    WN0672           Miles to next s
     C                     END                             *FI
      * ** 11/16/2007 LJB FP1251 Error if no miles, set SDD/SDT to zeros
      * CASE: PAR.Miles to next stop is Not Entered
     C           WN0672    IFEQ 0                          *IF
     C                     Z-ADD0         WN0504           Scheduled Deliv
     C                     Z-ADD0         WN0505           Scheduled Deliv
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD0         WN0671           Hours Required
     C                     Z-ADD0         YL0020           Hours Required
      * RTV Legal Run Miles DscRT - Legal Run Mileage Hours  * 
     C                     EXSR NSRVGN
      * 09/09/11 PKD E1659 Additional Route Hours
      * Rtv Addtnl Route Hrs  XF - Order Header TRG  * 
     C                     CALL 'PMACXFR'              90  Rtv Addtnl Rout
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #2RMNB    WQ0164  70       Load ID
     C           YL0021    PARM YL0021    WQ0165  50       Additional Rout
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PMACXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C           YL0020    ADD  YL0021    WN0671           Hours Required
      * get number of whole days + remaining hours
      * CASE: PAR.Hours Required is Zero
     C           WN0671    IFEQ 0                          *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C           WN0671    DIV  24        WN0675           @Days 5
     C           WN0675    MULT 24        WU               USR Hours 5.0
     C           WN0671    SUB  WU        WN0673           USR Hours 5.0
     C           WN0673    MULT 10000     WUPINB           @Numeric 6,0
      * Subtract whole days
      * CASE: PAR.@Days 5 is greater than zero
     C           WN0675    IFGT 0                          *IF
     C                     MULT -1        WN0675           @Days 5
      * PAR.Scheduled Delivery Date = PAR.Scheduled Delivery Date + PAR.@
     C           WN0504    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDWN0675    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     WN0504
     C                     ELSE
     C           XDINDT    SUB  1000000   WN0504
     C                     END
     C                     END                             *FI
      * Calculate # whole days + hours left
      * CASE: WRK.@Numeric 6,0 GE PAR.Scheduled Delivery Time
     C           WUPINB    IFGE WN0505                     *IF
     C                     SUB  WN0505    WUPINB           @Numeric 6,0
     C                     Z-ADD-1        WN0675           @Days 5
      * PAR.Scheduled Delivery Date = PAR.Scheduled Delivery Date + PAR.@
     C           WN0504    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDWN0675    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     WN0504
     C                     ELSE
     C           XDINDT    SUB  1000000   WN0504
     C                     END
     C           240000    SUB  WUPINB    WN0505           Scheduled Deliv
     C                     ELSE
      * CASE: *OTHERWISE
     C                     SUB  WUPINB    WN0505           Scheduled Deliv
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * RTV Total Ld Mi/Sts    RT - Load Header  * 
     C                     EXSR NTRVGN
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * ---------------------------------------------------------------
      * RTV Last Stop Consign  RT - Load Detail  * 
     C                     EXSR NURVGN
      * ---------------------------------------------------------------
      * OMS132:  Fill in Flat Amount as required
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Total Stops is One Stop
      *   |- c2    : PAR.Flat Amount EQ WRK.ZERO
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0496    IFEQ 1                          *IF
     C           WN0495    IFEQ WUW0NB                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * get flat amount for destination city
      * RTV Ship To City/St-Ld RT - PD Order Header  * 
     C                     EXSR NWRVGN
      * CVT Str to Upper Alpha US - /UT User Source  * 
     C                     MOVEAWN0509    AR1              LOAD ARRAY
     C                     MOVEA*BLANK    AR2              LOAD ARRAY
     C                     Z-ADD1         X1      20       SET COUNTER
     C                     Z-ADD1         Y1      20       SET COUNTER
      * * * * * * * CHECK FOR ALPHABETIC CHARACTERS * * * * * * *
     C           X1        DOWLT31
     C           AR1,X1    IFEQ ' '
     C           AR1,X1    ORGE 'a'
     C           AR1,X1    ANDLE'Z'
     C           AR1,X1    ANDNE'~'
     C           AR1,X1    ANDNE'{'
     C           AR1,X1    ANDNE'}'
     C           AR1,X1    ANDNE'\'
     C                     MOVE AR1,X1    AR2,Y1
     C                     ADD  1         Y1
     C                     ADD  1         X1
     C                     ELSE
     C                     ADD  1         X1
     C                     END
     C                     END
     C                     Z-ADD1         Y1
     C           Y1        DOWLT31
     C           AR2,Y1    IFEQ 'a'
     C                     MOVEL'A'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'b'
     C                     MOVEL'B'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'c'
     C                     MOVEL'C'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'd'
     C                     MOVEL'D'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'e'
     C                     MOVEL'E'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'f'
     C                     MOVEL'F'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'g'
     C                     MOVEL'G'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'h'
     C                     MOVEL'H'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'i'
     C                     MOVEL'I'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'j'
     C                     MOVEL'J'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'k'
     C                     MOVEL'K'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'l'
     C                     MOVEL'L'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'm'
     C                     MOVEL'M'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'n'
     C                     MOVEL'N'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'o'
     C                     MOVEL'O'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'p'
     C                     MOVEL'P'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'q'
     C                     MOVEL'Q'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'r'
     C                     MOVEL'R'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 's'
     C                     MOVEL'S'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 't'
     C                     MOVEL'T'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'u'
     C                     MOVEL'U'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'v'
     C                     MOVEL'V'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'w'
     C                     MOVEL'W'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'x'
     C                     MOVEL'X'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'y'
     C                     MOVEL'Y'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'z'
     C                     MOVEL'Z'       AR2,Y1
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     ADD  1         Y1
     C                     END
     C                     MOVEAAR2       WUXECD           LOAD OUTPUT
     C                     MOVELWUXECD    WN0509           Destination Cit
      * RTV Destination Amount RT - Carrier Destination Rate  * 
     C                     EXSR NXRVGN
     C                     END                             *FI
      * Calc Load U/M           -- RMC 6/16/06
     C                     EXSR UGSUBR                     Calc Load U/M
      * CHG Lock Load Update   CH - Load Header  * 
     C                     EXSR NYCHRC
      * OMS261:  if sched to ship today, print prelim pick at all whses
      * Sched to ship today
      * CASE: PAR.Scheduled Ship Date EQ JOB.*Job date
     C           WN0494    IFEQ ##JDT                      *IF
      * RTV All Whses on Load  RT - Load Detail  * 
     C                     EXSR NZRVGN
     C                     Z-ADD#2AIC3    WN0521           Company Number
     C                     Z-ADD#2RMNB    WN0523           Order Number 1
      * PAR.Date 1          PASS  USR = PAR.Scheduled Ship Date
     C                     Z-ADDWN0494    WN0522           Date 1
     C                     MOVEL'S'       WUCYST           USR Select/Omit
     C                     MOVEL'D'       WUSTST           USR Detail or S
     C                     MOVEL'Y'       WUCLST           AUTO PRINT PREL
      * letting all the other parms default in the CL
      * If warehouse exists for load then print.
      * CASE: PAR.USR Warehouse Code is Warehouse Code not Blank
     C           WN0511    IFNE *BLANK                     *IF
      * Pass Pre Pick @LoadLockUP - /UT User Programs  * 
     C                     CALL 'PDBDUPC'              90  Pass Pre Pick @
     C           WN0525    PARM *BLANK    WQ0168  7        Return Code Usr
     C                     PARM 'OMS'     WQ0169  6        Application Cod
     C                     PARM @CN,004   WQ0170 10        Program name US
     C           WUSTST    PARM WUSTST    WQ0171  1        USR Detail or S
     C                     PARM @CN,005   WQ0172 25        PRT Description
     C           WUWRST    PARM WUWRST    WQ0173 10        PRT Printer Dev
     C           WUWSST    PARM WUWSST    WQ0174  4        PRT Hold Output
     C           WUWTST    PARM WUWTST    WQ0175  4        PRT Save Output
     C           WUWUST    PARM WUWUST    WQ0176  1        PRT Night Queue
     C           WUBVVN    PARM WUBVVN    WQ0177 10        PRT Night Queue
     C           WN0521    PARM WN0521    WQ0178 155       Company Number
     C           WN0522    PARM WN0522    WQ0179 155       Date 1
     C           WN0523    PARM WN0523    WQ0180 155       Order Number 1
     C           WUM8NB    PARM WUM8NB    WQ0181 155       System Value Nu
     C           WN0511    PARM WN0511    WQ0182  3        USR Warehouse C
     C           WN0512    PARM WN0512    WQ0183  3        USR CDE Parm 1
     C           WN0513    PARM WN0513    WQ0184  3        USR CDE Parm 2
     C           WN0514    PARM WN0514    WQ0185  3        USR CDE Parm 3
     C           WN0515    PARM WN0515    WQ0186  3        USR CDE Parm 4
     C           WN0516    PARM WN0516    WQ0187  3        USR CDE Parm 5
     C           WN0517    PARM WN0517    WQ0188  3        USR CDE Parm 6
     C           WN0518    PARM WN0518    WQ0189  3        USR CDE Parm 7
     C           WN0519    PARM WN0519    WQ0190  3        USR CDE Parm 8
     C           WN0520    PARM WN0520    WQ0191  3        USR CDE Parm 9
     C           WUCYST    PARM WUCYST    WQ0192  1        USR Select/Omit
     C           WUCLST    PARM WUCLST    WQ0193  1        AUTO PRINT PREL
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDBDUPC' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
     C                     END                             *FI
      *
     C                     MOVEL*BLANK    WN0817  1        Trans Contol AS
      *
      * EDT Lock Load          IF
      * *** Return Plant Code from first Order Header
      * zzV for Accusort Load  RT - Load Detail  * 
     C                     EXSR OBRVGN
      * Rtv Active Status     RT - PFS Interface  * 
     C                     EXSR OFRVGN
      * UPD:  AccuSort
      * CASE: LCL.PFS AccuSort Active is Yes
     C           YL0022    IFEQ 'Y'                        *IF
      * AccuSort:  Create Order Header and Order Detail
      * CASE: PAR.Trans Contol AS400/Plant is Plant
     C           WN0817    IFEQ 'P'                        *IF
      * UPD Lock/Unlock Box ID XF - AS Order Header  * 
     C                     CALL 'PDXFXFR'              90  UPD Lock/Unlock
     C                     PARM *BLANK    W0RTN   7
     C                     PARM 'L'       WQ0194  1        Lock/Unlock
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDXFXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CRT AS Order Hdr/Dtl   XF - AS Order Header  * 
     C                     CALL 'PDQPXFR'              90  CRT AS Order Hd
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #2RMNB    WQ0195  70       Load ID
     C                     PARM #2AIC3    WQ0196  30       Company Number
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDQPXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * UPD Lock/Unlock Box ID XF - AS Order Header  * 
     C                     CALL 'PDXFXFR'              90  UPD Lock/Unlock
     C                     PARM *BLANK    W0RTN   7
     C                     PARM 'U'       WQ0197  1        Lock/Unlock
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDXFXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
     C                     END                             *FI
      * UPD:  Carlisle
      * CASE: LCL.PFS Carlisle Active is Yes
     C           YL0023    IFEQ 'Y'                        *IF
      * PFS Lock Load/Order   XF - PFS Load Header  * 
     C                     CALL 'PPNLXFR'              90  PFS Lock Load/O
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #2RMNB    WQ0198  70       Load ID
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PPNLXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
      * ** 07/28/2017 RMC R131331 if load had a whs with edi wso intercha
      * Exc Create EDI f/Lock XF - EDI WHS Shipping Ord HDR  * 
     C                     CALL 'PUDNXFR'              90  Exc Create EDI
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #2RMNB    WQ0199  70       Load ID
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PUDNXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: JOB.*PROGRAM is PRT Audit Report
     C           ##PGM     IFEQ @CN,006                    *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Clr Program Message Q  US - /UT User Source  * 
      * CLEAR MESSAGES FROM PROGRAM MESSAGE QUEUE.
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ           ALREADY DEFINED
     C                     PARM '*SAME'   ZAPGRL           ALREADY DEFINED
      * RESET FIRST MESSAGE ONLY FLAG.
     C                     MOVEL'Y'       ZAFSMS  1        ALREADY DEFINED
      * Sched to ship today
      * CASE: PAR.Scheduled Ship Date EQ JOB.*Job date
     C           WN0494    IFEQ ##JDT                      *IF
      * CASE: PAR.USR Warehouse Code is Warehouse Code not Blank
     C           WN0511    IFNE *BLANK                     *IF
      * RTV Warehouse Dflt PrtrXF - Warehouse  * 
     C                     CALL 'PDCHXFR'              90  RTV Warehouse D
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WN0511    WQ0200  3        Warehouse Code
     C                     PARM *BLANK    WQ0201 10        Default Printer
     C           YL0024    PARM *BLANK    WQ0202  1        Include in Auto
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDCHXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * RMC DLY029 10/30/07 - sndmsg only if Warehouse is set up for auto
      * CASE: LCL.Include in Auto Pre Pick is Incl in Auto Prelim Pick
     C           YL0024    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     MOVELWN0511    ZA0025           USR Warehouse C
     C                     MOVELWN0512    ZA0026           USR CDE Parm 1
     C                     MOVELWN0513    ZA0027           USR CDE Parm 2
     C                     MOVELWN0514    ZA0028           USR CDE Parm 3
     C                     MOVELWN0515    ZA0029           USR CDE Parm 4
     C                     MOVELWN0516    ZA0030           USR CDE Parm 5
     C                     MOVELWN0517    ZA0031           USR CDE Parm 6
     C                     MOVELWN0518    ZA0032           USR CDE Parm 7
     C                     MOVELWN0519    ZA0033           USR CDE Parm 8
     C                     MOVELWN0520    ZA0034           USR CDE Parm 9
      * Send message 'Preliminary Pick Printing'
     C                     MOVEL'USR2565' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Send message 'Prelim Pick Not Printed'
     C                     MOVEL'USR2715' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * ***** Change Log and comments
     C                     EXSR UHSUBR                     ***** Change Lo
     C                     MOVEL*BLANK    WURVST           Load Change Typ
     C                     MOVEL'LOCK'    WURVST           Load Change Typ
     C                     MOVEL'TRF'     WUUJST           Department Cont
      * CRT Load/Order Chg Log XF - Load Order Change Log  * 
     C                     CLEARPERC
     C                     Z-ADD#2RMNB    PERMNB           Load ID
     C                     Z-ADD*ZERO     PERVNB           Stop/Drop
     C                     MOVELWURVST    PERVST    P      Load Change Typ
     C                     MOVELWUUJST    PEUJST    P      Department Cont
     C                     MOVELWUPKST    PEMNTX    P      Change Log Prio
     C                     MOVEL'L'       PEMOTX    P      Change Log New
     C                     MOVEL##USR     PEAYNA    P      User Id
     C                     MOVEL##PGM     PEA0NA    P      Job Name
     C                     MOVELWUBZNA    PEBZNA    P      Carrier Code
     C                     Z-ADD#2AIC3    PEAIC3           Company Number
     C                     Z-ADD*ZERO     PEC4NB           Order Number
      *
     C                     CALL 'PDADXFR'              90  CRT Load/Order
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PERC             RCD: Load Order
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDADXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * Setup message data for message
     C                     Z-ADD#2RMNB    ZA0035           Load ID
      * Send message 'Load Locked'
     C                     MOVEL'USR2559' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: LCL.Status - Y or N is yes
     C           YL0014    IFEQ 'Y'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    W0RTN            *Return code
     C                     MOVEL'NOUPD'   W0RTN            *Return code
     C                     END                             *FI
     C                     MOVELW0RTN     P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Reclaim resources of called programs
     C                     CALL 'Y2RCRSC'
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     MOVEL*BLANK    P4PKST           Load Status
     C                     MOVEL*BLANK    P5V5ST           Production Type
     C                     Z-ADD*ZERO     P5ELDT           Production Date
     C                     Z-ADD*ZERO     P5F8WG           PS Avg Piece Wg
     C                     Z-ADD*ZERO     P5E0WG           PS Weight Ship
     C                     Z-ADD*ZERO     P5D6NB           PS Pieces Ship
     C                     Z-ADD*ZERO     P6DXNB           Sequence Number
     C                     Z-ADD*ZERO     P6B0C7           Bill to Custome
     C                     Z-ADD*ZERO     P6AFTM           Requested Deliv
     C                     MOVEL*BLANK    P7ADCD           U/M - Primary
     C                     Z-ADD*ZERO     P7AIWG           Unit Weight
     C                     Z-ADD*ZERO     P7CHTM           Fresh Chilling
     C                     MOVEL*BLANK    P7PCCT           Piece Count Ite
     C                     Z-ADD*ZERO     P7BDNB           Pieces Per Bag
     C                     Z-ADD*ZERO     P7BJNB           Bags Per Unit
     C                     Z-ADD*ZERO     P8H6DT           Avail Ship Date
     C                     Z-ADD*ZERO     P8H7DT           Avail Ship Date
     C                     Z-ADD*ZERO     P8H8DT           Avail Ship Date
     C                     Z-ADD*ZERO     P8H9DT           Avail Ship Date
     C                     Z-ADD*ZERO     P8IADT           Avail Ship Date
     C                     Z-ADD*ZERO     P8IBDT           Avail Ship Date
     C                     Z-ADD*ZERO     P8INDT           Avail Ship Date
     C                     Z-ADD*ZERO     P8IODT           Avail Ship Date
     C                     Z-ADD*ZERO     P8IPDT           Avail Ship Date
     C                     Z-ADD*ZERO     P8IQDT           Avail Ship Date
     C                     Z-ADD*ZERO     P8IRDT           Avail Ship Date
     C                     Z-ADD*ZERO     P8ISDT           Avail Ship Date
     C                     Z-ADD*ZERO     P8ITDT           Avail Ship Date
     C                     Z-ADD*ZERO     P8IUDT           Avail Ship Date
     C                     Z-ADD*ZERO     P8IVDT           Avail Ship Date
     C                     Z-ADD*ZERO     P8IWDT           Avail Ship Date
     C                     Z-ADD*ZERO     P8IXDT           Avail Ship Date
     C                     Z-ADD*ZERO     P8IYDT           Avail Ship Date
     C                     Z-ADD*ZERO     P8IZDT           Avail Ship Date
     C                     Z-ADD*ZERO     P8I0DT           Avail Ship Date
     C                     Z-ADD*ZERO     P8I1DT           Avail Ship Date
     C                     Z-ADD*ZERO     P8D1AV           Day 1 Availabil
     C                     Z-ADD*ZERO     P8D2AV           Day 2 Availabil
     C                     Z-ADD*ZERO     P8D3AV           Day 3 Availabil
     C                     Z-ADD*ZERO     P8D4AV           Day 4 Availabil
     C                     Z-ADD*ZERO     P8D5AV           Day 5 Availabil
     C                     Z-ADD*ZERO     P8D6AV           Day 6 Availabil
     C                     Z-ADD*ZERO     P8D7AV           Day 7 Availabil
     C                     Z-ADD*ZERO     P8D8AV           Day 8 Availabil
     C                     Z-ADD*ZERO     P8D9AV           Day 9 Availabil
     C                     Z-ADD*ZERO     P8D1AB           Day 10 Availabi
     C                     Z-ADD*ZERO     P8D2AB           Day 11 Availabi
     C                     Z-ADD*ZERO     P8D3AB           Day 12 Availabi
     C                     Z-ADD*ZERO     P8D4AB           Day 13 Availabi
     C                     Z-ADD*ZERO     P8D5AB           Day 14 Availabi
     C                     Z-ADD*ZERO     P8D6AB           Day 15 Availabi
     C                     Z-ADD*ZERO     P8D7AB           Day 16 Availabi
     C                     Z-ADD*ZERO     P8D8AB           Day 17 Availabi
     C                     Z-ADD*ZERO     P8D9AB           Day 18 Availabi
     C                     Z-ADD*ZERO     P8D1AL           Day 19 Availabi
     C                     Z-ADD*ZERO     P8D2AL           Day 20 Availabi
     C                     Z-ADD*ZERO     P8D3AL           Day 21 Availabi
     C                     Z-ADD*ZERO     P8LDSZ           Load Size USR
     C                     Z-ADD*ZERO     P8WADJ           Quantity Adjust
     C                     MOVEL*BLANK    P8APTX           Company Name
     C                     Z-ADD*ZERO     P8EINB           Week Number
     C                     MOVEL*BLANK    P9F8NA           Warehouse Descr
     C                     MOVEL*BLANK    P9WPST           Warehouse Type
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field BLANK
     C                     MOVEL*BLANK    WUGSTX256
      * Define work field Accounting Year Code
     C                     Z-ADD*ZERO     WUESNB  40
      * Define work field Date Mon USR
     C                     Z-ADD*ZERO     WUJHDT  70
      * Define work field Date Tue USR
     C                     Z-ADD*ZERO     WUJIDT  70
      * Define work field Date Wed USR
     C                     Z-ADD*ZERO     WUJJDT  70
      * Define work field Date Thu USR
     C                     Z-ADD*ZERO     WUJKDT  70
      * Define work field Date Fri USR
     C                     Z-ADD*ZERO     WUJLDT  70
      * Define work field Date Sat USR
     C                     Z-ADD*ZERO     WUJMDT  70
      * Define work field Date Sun USR
     C                     Z-ADD*ZERO     WUJNDT  70
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAAIC3           Company Number
     C                     Z-ADD*ZERO     WABCDT           Post to G/L Dat
     C                     Z-ADD*ZERO     WACQNB           Julian Date
     C                     Z-ADD*ZERO     WAESNB           Accounting Year
     C                     Z-ADD*ZERO     WAETNB           Accounting Peri
     C                     Z-ADD*ZERO     WABZNB           OM Week
     C                     Z-ADD*ZERO     WAEINB           Week Number
     C                     Z-ADD*ZERO     WAAQNB           Billing Cycle
     C                     Z-ADD*ZERO     WAOJDT           HPS PIC Date
     C                     Z-ADD*ZERO     WANQNX           HPS Calendar Ye
     C                     Z-ADD*ZERO     WANRNX           HPS Calendar We
     C                     Z-ADD*ZERO     WAOKDT           Calendar Unused
     C                     Z-ADD*ZERO     WAOLDT           Calendar Unused
     C                     Z-ADD*ZERO     WAAATM           Job Time
     C                     Z-ADD*ZERO     WAAXDT           Job Date
      * Define work field ZERO
     C                     Z-ADD*ZERO     WUW0NB 305
      * Define work field Generic Heading 1
     C                     MOVEL*BLANK    WUMWTX  8
      * Define work field Generic Heading 2
     C                     MOVEL*BLANK    WUMXTX  8
      * Define work field Generic Heading 3
     C                     MOVEL*BLANK    WUMYTX  8
      * Define work field Generic Heading 4
     C                     MOVEL*BLANK    WUMZTX  8
      * Define work field Generic Heading 5
     C                     MOVEL*BLANK    WUM0TX  8
      * Define work field Generic Heading 6
     C                     MOVEL*BLANK    WUM1TX  8
      * Define work field Generic Heading 7
     C                     MOVEL*BLANK    WUM2TX  8
      * Define work field Generic Heading 8
     C                     MOVEL*BLANK    WUM3TX  8
      * Define work field Generic Heading 9
     C                     MOVEL*BLANK    WUM4TX  8
      * Define work field Generic Heading 10
     C                     MOVEL*BLANK    WUM5TX  8
      * Define work field Generic Heading 11
     C                     MOVEL*BLANK    WUM6TX  8
      * Define work field Generic Heading 12
     C                     MOVEL*BLANK    WUM7TX  8
      * Define work field Generic Heading 13
     C                     MOVEL*BLANK    WUM8TX  8
      * Define work field Generic Heading 14
     C                     MOVEL*BLANK    WUM9TX  8
      * Define work field Generic Heading 15
     C                     MOVEL*BLANK    WUY5TX  8
      * Define work field Generic Heading 16
     C                     MOVEL*BLANK    WUY6TX  8
      * Define work field Count USR
     C                     Z-ADD*ZERO     WUCNTU  50
      * Define work field @Calc 6,0
     C                     Z-ADD*ZERO     WUCLC6  60
      * Define work field Description Line One
     C                     MOVEL*BLANK    WUAVNA 30
      * Define work field Qty On-Hand USR
     C                     Z-ADD*ZERO     WULEQT  50
      * Define work field Qty Sched Prod 1 USR
     C                     Z-ADD*ZERO     WULIQT  50
      * Define work field Qty Produced USR
     C                     Z-ADD*ZERO     WULOQT  50
      * Define work field Qty Remaining Prod USR
     C                     Z-ADD*ZERO     WULFQT  50
      * Define work field Qty Sched Ord 1 USR
     C                     Z-ADD*ZERO     WULKQT  50
      * Define work field Qty EOD Inv 1 USR
     C                     Z-ADD*ZERO     WULGQT  50
      * Define work field Qty Sched Ord 2 USR
     C                     Z-ADD*ZERO     WULLQT  50
      * Define work field Qty EOD Inv 2 USR
     C                     Z-ADD*ZERO     WULHQT  50
      * Define work field Qty Prod Needed 2 USR
     C                     Z-ADD*ZERO     WULMQT  50
      * Define work field Qty Prod Adjusted 2 USR
     C                     Z-ADD*ZERO     WULNQT  50
      * Define work field Qty Sched Prod 2 USR
     C                     Z-ADD*ZERO     WULJQT  50
      * Define work field Qty Sched Ord 3 USR
     C                     Z-ADD*ZERO     WULVQT  50
      * Define work field Qty EOD Inv 3 USR
     C                     Z-ADD*ZERO     WULRQT  50
      * Define work field Qty Prod Needed 3 USR
     C                     Z-ADD*ZERO     WULUQT  50
      * Define work field Qty Prod Adjusted 3 USR
     C                     Z-ADD*ZERO     WULTQT  50
      * Define work field Qty Sched Prod 3 USR
     C                     Z-ADD*ZERO     WULWQT  50
      * Define work field Production Weight USR
     C                     Z-ADD*ZERO     WUFDWG  92
      * Define work field Weight Scheduled SUM
     C                     Z-ADD*ZERO     WUEEWG 112
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WBAIC3           Company Number
     C                     Z-ADD*ZERO     WBC4NB           Order Number
     C                     Z-ADD*ZERO     WBDPNB           Order Sequence
     C                     Z-ADD*ZERO     WBUENB           Order Secondary
     C                     Z-ADD*ZERO     WBHGCD           Item Code
     C                     Z-ADD*ZERO     WBBKC7           Ship To Custome
     C                     Z-ADD*ZERO     WBCFC7           Order Group Cod
     C                     Z-ADD*ZERO     WBMAVA           Billing Detail
     C                     Z-ADD*ZERO     WBKDVA           Billing Detail
     C                     Z-ADD*ZERO     WBL8VA           Billing Detail
     C                     Z-ADD*ZERO     WBL9VA           Quantity to Sub
     C                     Z-ADD*ZERO     WBAYVA           Extended Amount
     C                     Z-ADD*ZERO     WBEXDT           Market Pricing
     C                     Z-ADD*ZERO     WBBZPR           Price Overage O
     C                     Z-ADD*ZERO     WBL6NB           Contract Number
     C                     Z-ADD*ZERO     WBGIDT           Pricing Date Us
     C                     Z-ADD*ZERO     WBR1NB           Rated Freight
     C                     Z-ADD*ZERO     WBAVQT           Quantity Ordere
     C                     Z-ADD*ZERO     WBD0WG           Weight Ordered
     C                     Z-ADD*ZERO     WBCCQT           Quantity Schedu
     C                     Z-ADD*ZERO     WBAUWG           Weight Schedule
     C                     Z-ADD*ZERO     WBCBQT           Quantity Shippe
     C                     Z-ADD*ZERO     WBATWG           Weight Shipped
     C                     Z-ADD*ZERO     WBAQCS           Unit Cost Prici
     C                     Z-ADD*ZERO     WBAGCS           Unit Cost Per P
     C                     Z-ADD*ZERO     WBAKPR           Unit Price
     C                     Z-ADD*ZERO     WBALPR           Unit Price - Cr
     C                     Z-ADD*ZERO     WBAUPR           Unit Price Orde
     C                     Z-ADD*ZERO     WBAVWG           Unit Weight Ord
     C                     Z-ADD*ZERO     WBA4WG           Tare Weight Tot
     C                     Z-ADD*ZERO     WBA5DT           Requested Ship
     C                     Z-ADD*ZERO     WBAODT           Scheduled Ship
     C                     Z-ADD*ZERO     WBGNDT           Actual Shipped
     C                     Z-ADD*ZERO     WBRGNB           Item Structure
     C                     Z-ADD*ZERO     WBRHNB           Item Structure
     C                     Z-ADD*ZERO     WBRINB           Item Structure
     C                     Z-ADD*ZERO     WBCXDT           Date of Origina
     C                     Z-ADD*ZERO     WBDUPR           Invoice Unit Pr
     C                     Z-ADD*ZERO     WBB6VL           Invoice Extende
     C                     Z-ADD*ZERO     WBA1AA           Ham Group Numbe
     C                     Z-ADD*ZERO     WBNTDT           Warehouse Palle
     C                     Z-ADD*ZERO     WBNUDT           Consumed Item C
     C                     Z-ADD*ZERO     WBNVDT           Deadline Depart
     C                     Z-ADD*ZERO     WBNWDT           OD Price Type R
     C                     Z-ADD*ZERO     WBNXDT           OD Unused Date
     C                     Z-ADD*ZERO     WBBUTM           Deadline Depart
     C                     Z-ADD*ZERO     WBBVTM           Price Code
     C                     Z-ADD*ZERO     WBBWTM           Maximum Net Wei
     C                     Z-ADD*ZERO     WBBXTM           Substitution Li
     C                     Z-ADD*ZERO     WBBYTM           Max Qty to sche
     C                     Z-ADD*ZERO     WBH5NX           Warehouse Palle
     C                     Z-ADD*ZERO     WBH6NX           Warehouse Avg P
     C                     Z-ADD*ZERO     WBH7NX           OD Item Target
     C                     Z-ADD*ZERO     WBH8NX           OD Estimated Gr
     C                     Z-ADD*ZERO     WBH9NX           OD Maximum Unit
     C                     Z-ADD*ZERO     WBDVPR           Order Gate/Fina
     C                     Z-ADD*ZERO     WBDWPR           OD Ceiling Pric
     C                     Z-ADD*ZERO     WBDXPR           OD Gate/Final P
     C                     Z-ADD*ZERO     WBDYPR           OD Weighted Avg
     C                     Z-ADD*ZERO     WBDZPR           OD Unused Prc 5
     C                     Z-ADD*ZERO     WBGSPR           OD Unused Prc 6
     C                     Z-ADD*ZERO     WBGTPR           OD Unused Prc 7
     C                     Z-ADD*ZERO     WBGUPR           OD Unused Prc 8
     C                     Z-ADD*ZERO     WBPEWG           Weight Amount E
     C                     Z-ADD*ZERO     WBRINY           Item Age Days
     C                     Z-ADD*ZERO     WBTIDT           Production Ovr
     C                     Z-ADD*ZERO     WBTJDT           Production Ovr
     C                     Z-ADD*ZERO     WBTKDT           OD Market Begin
     C                     Z-ADD*ZERO     WBTLDT           OD Market Endin
     C                     Z-ADD*ZERO     WBTMDT           OD Atch to Ord
     C                     Z-ADD*ZERO     WBAATM           Job Time
     C                     Z-ADD*ZERO     WBAXDT           Job Date
      * Define work field Header Status
     C                     MOVEL*BLANK    WUGWST  1
      * Define work field Billing Activity Type
     C                     MOVEL*BLANK    WUOBST  1
      * Define work field Description Line Two
     C                     MOVEL*BLANK    WUAWNA 30
      * Define work field Conversion Factor 1
     C                     Z-ADD*ZERO     WUAWPC  94
      * Define work field Operation Factor 1
     C                     MOVEL*BLANK    WULXST  1
      * Define work field U/M - Second
     C                     MOVEL*BLANK    WUAECD  2
      * Define work field Conversion Factor 2
     C                     Z-ADD*ZERO     WUAXPC  94
      * Define work field Operation Factor 2
     C                     MOVEL*BLANK    WULYST  1
      * Define work field U/M - Third
     C                     MOVEL*BLANK    WUAFCD  2
      * Define work field U/M - Pricing
     C                     MOVEL*BLANK    WUAICD  2
      * Define work field Base/Conv/Loss Item
     C                     MOVEL*BLANK    WUQZCD  2
      * Define work field Record Status
     C                     MOVEL*BLANK    WUVSST  1
      * Define work field Lot Tracking Flag
     C                     MOVEL*BLANK    WUVHST  1
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WCDBNB           Warehouse Chill
     C                     Z-ADD*ZERO     WCBWC3           Shipping Compan
     C                     Z-ADD*ZERO     WCBTC3           Accounting Comp
     C                     Z-ADD*ZERO     WCBUC3           WHS Sched Prod
     C                     Z-ADD*ZERO     WCBVC3           WHS Inventory C
     C                     Z-ADD*ZERO     WCAATM           Job Time
     C                     Z-ADD*ZERO     WCAXDT           Job Date
      * Define work field Maximum pounds
     C                     Z-ADD*ZERO     WURSNB  70
      * Define work field Record Found USR
     C                     MOVEL*BLANK    WUWXST  1
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WDAIC3           Company Number
     C                     Z-ADD*ZERO     WDHGCD           Item Code
     C                     Z-ADD*ZERO     WDAGCS           Unit Cost Per P
     C                     Z-ADD*ZERO     WDAECS           Last Cost
     C                     Z-ADD*ZERO     WDBACS           Cost per Primar
     C                     Z-ADD*ZERO     WDBBCS           Cost per Pricin
     C                     Z-ADD*ZERO     WDCBPR           Revaluation Cos
     C                     Z-ADD*ZERO     WDGUDT           Revaluation Eff
     C                     Z-ADD*ZERO     WDCTPR           Last Revaluatio
     C                     Z-ADD*ZERO     WDG4DT           Last Revaluatio
     C                     Z-ADD*ZERO     WDBOWG           On Hand Weight
     C                     Z-ADD*ZERO     WDDDQT           On Hand U/M1 Su
     C                     Z-ADD*ZERO     WDDEQT           On Hand U/M2 Su
     C                     Z-ADD*ZERO     WDDFQT           On Hand U/M3 Su
     C                     Z-ADD*ZERO     WDHDQT           Quantity In Chi
     C                     Z-ADD*ZERO     WDHEQT           Weight In Chill
     C                     Z-ADD*ZERO     WDAJQT           Quantity Schedu
     C                     Z-ADD*ZERO     WDAQQT           Quantity on Sal
     C                     Z-ADD*ZERO     WDAUQT           Quantity on Pur
     C                     Z-ADD*ZERO     WDEMQT           Quantity on Tra
     C                     Z-ADD*ZERO     WDDOQT           Quantity Avail.
     C                     Z-ADD*ZERO     WDAKDT           Date of Last Or
     C                     Z-ADD*ZERO     WDANDT           Date of Last Sh
     C                     Z-ADD*ZERO     WDIDVA           Value of On Han
     C                     Z-ADD*ZERO     WDBZPC           Safety Allowanc
     C                     Z-ADD*ZERO     WDDGQT           Safety Allowanc
     C                     Z-ADD*ZERO     WDDIDT           Stock Out Date
     C                     Z-ADD*ZERO     WDBFDY           Lead Time - Las
     C                     Z-ADD*ZERO     WDDJDT           Lead Time - Dat
     C                     Z-ADD*ZERO     WDBGDY           Lead Time - Nex
     C                     Z-ADD*ZERO     WDDKDT           Lead Time - Dat
     C                     Z-ADD*ZERO     WDDJQT           Usage Qty per C
     C                     Z-ADD*ZERO     WDBNWG           Usage Weight pe
     C                     Z-ADD*ZERO     WDDLDT           Inventory Manag
     C                     Z-ADD*ZERO     WDDPQT           Minimum Quantit
     C                     Z-ADD*ZERO     WDDQQT           Maximum Quantit
     C                     Z-ADD*ZERO     WDDMDT           Last Physical C
     C                     Z-ADD*ZERO     WDAKC8           Vendor - Item/W
     C                     Z-ADD*ZERO     WDRINB           Item Structure
     C                     Z-ADD*ZERO     WDRHNB           Item Structure
     C                     Z-ADD*ZERO     WDRGNB           Item Structure
     C                     Z-ADD*ZERO     WDAATM           Job Time
     C                     Z-ADD*ZERO     WDAXDT           Job Date
      * Define work field USR Day 1
     C                     Z-ADD*ZERO     WUFFDT  70
      * Define work field USR Day 2
     C                     Z-ADD*ZERO     WUE1DT  70
      * Define work field USR Day 3
     C                     Z-ADD*ZERO     WUE2DT  70
      * Define work field USR Day 4
     C                     Z-ADD*ZERO     WUE3DT  70
      * Define work field USR Day 5
     C                     Z-ADD*ZERO     WUE4DT  70
      * Define work field USR Day 6
     C                     Z-ADD*ZERO     WUE5DT  70
      * Define work field USR Day 7
     C                     Z-ADD*ZERO     WUE6DT  70
      * Define work field USR Day 8
     C                     Z-ADD*ZERO     WUFKDT  70
      * Define work field USR Day 9
     C                     Z-ADD*ZERO     WUFLDT  70
      * Define work field USR Day 10
     C                     Z-ADD*ZERO     WUFGDT  70
      * Define work field USR Day 11
     C                     Z-ADD*ZERO     WUFHDT  70
      * Define work field USR Day 12
     C                     Z-ADD*ZERO     WUFIDT  70
      * Define work field USR Day 13
     C                     Z-ADD*ZERO     WUFJDT  70
      * Define work field USR Day 14
     C                     Z-ADD*ZERO     WUHPDT  70
      * Define work field USR Day 15
     C                     Z-ADD*ZERO     WUHQDT  70
      * Define work field USR Day 16
     C                     Z-ADD*ZERO     WUHRDT  70
      * Define work field USR Day 17
     C                     Z-ADD*ZERO     WUHSDT  70
      * Define work field USR Day 18
     C                     Z-ADD*ZERO     WUHTDT  70
      * Define work field USR Day 19
     C                     Z-ADD*ZERO     WUHUDT  70
      * Define work field USR Day 20
     C                     Z-ADD*ZERO     WUHVDT  70
      * Define work field USR Day 21
     C                     Z-ADD*ZERO     WUHWDT  70
      * Define work field Day 1 Rsrvd Other Whse Fl
     C                     MOVEL*BLANK    WUGHSX  1
      * Define work field Day 2 Rsrvd Other Whse Fl
     C                     MOVEL*BLANK    WUGISX  1
      * Define work field Day 3 Rsrvd Other Whse Fl
     C                     MOVEL*BLANK    WUGJSX  1
      * Define work field Day 4 Rsrvd Other Whse Fl
     C                     MOVEL*BLANK    WUGKSX  1
      * Define work field Day 5 Rsrvd Other Whse Fl
     C                     MOVEL*BLANK    WUGLSX  1
      * Define work field Day 6 Rsrvd Other Whse Fl
     C                     MOVEL*BLANK    WUGMSX  1
      * Define work field Day 7 Rsrvd Other Whse Fl
     C                     MOVEL*BLANK    WUGNSX  1
      * Define work field Day 8 Rsrvd Other Whse Fl
     C                     MOVEL*BLANK    WUGOSX  1
      * Define work field Day 9 Rsrvd Other Whse Fl
     C                     MOVEL*BLANK    WUGPSX  1
      * Define work field Day 10 Rsrv Other Whse Fl
     C                     MOVEL*BLANK    WUGQSX  1
      * Define work field Day 11 Rsrv Other Whse Fl
     C                     MOVEL*BLANK    WUGRSX  1
      * Define work field Day 12 Rsrv Other Whse Fl
     C                     MOVEL*BLANK    WUGSSX  1
      * Define work field Day 13 Rsrv Other Whse Fl
     C                     MOVEL*BLANK    WUGTSX  1
      * Define work field Day 14 Rsrv Other Whse Fl
     C                     MOVEL*BLANK    WUGUSX  1
      * Define work field Day 15 Rsrv Other Whse Fl
     C                     MOVEL*BLANK    WUGVSX  1
      * Define work field Day 16 Rsrv Other Whse Fl
     C                     MOVEL*BLANK    WUGWSX  1
      * Define work field Day 17 Rsrv Other Whse Fl
     C                     MOVEL*BLANK    WUGXSX  1
      * Define work field Day 18 Rsrv Other Whse Fl
     C                     MOVEL*BLANK    WUGYSX  1
      * Define work field Day 19 Rsrv Other Whse Fl
     C                     MOVEL*BLANK    WUGZSX  1
      * Define work field Day 20 Rsrv Other Whse Fl
     C                     MOVEL*BLANK    WUG0SX  1
      * Define work field Day 21 Rsrv Other Whse Fl
     C                     MOVEL*BLANK    WUG1SX  1
      * Define work field Order Hold Over  USR
     C                     Z-ADD*ZERO     WUOHLO  50
      * Define work field Order Hold Over Alloc USR
     C                     Z-ADD*ZERO     WUC8NX  50
      * Define work field Day 1 Inventory Total USR
     C                     Z-ADD*ZERO     WUFFNB  61
      * Define work field Day 2 Inventory Total USR
     C                     Z-ADD*ZERO     WUFGNB  61
      * Define work field Day 3 Inventory Total USR
     C                     Z-ADD*ZERO     WUGPNB  61
      * Define work field Day 4 Inventory Total USR
     C                     Z-ADD*ZERO     WUFHNB  61
      * Define work field Day 5 Inventory Total USR
     C                     Z-ADD*ZERO     WUFINB  61
      * Define work field Day 6 Inventory Total USR
     C                     Z-ADD*ZERO     WUFJNB  61
      * Define work field Day 7 Inventory Total USR
     C                     Z-ADD*ZERO     WUFLNB  61
      * Define work field Day 8 Inventory Total USR
     C                     Z-ADD*ZERO     WUGJNX  61
      * Define work field Day 9 Inventory Total USR
     C                     Z-ADD*ZERO     WUGKNX  61
      * Define work field Day 10 Inventory Totl USR
     C                     Z-ADD*ZERO     WUGLNX  61
      * Define work field Day 11 Inventory Totl USR
     C                     Z-ADD*ZERO     WUGMNX  61
      * Define work field Day 12 Inventory Totl USR
     C                     Z-ADD*ZERO     WUGNNX  61
      * Define work field Day 13 Inventory Totl USR
     C                     Z-ADD*ZERO     WUGONX  61
      * Define work field Day 14 Inventory Totl USR
     C                     Z-ADD*ZERO     WUGPNX  61
      * Define work field Day 1 Production TotalUSR
     C                     Z-ADD*ZERO     WUFMNB  61
      * Define work field Day 2 Production TotalUSR
     C                     Z-ADD*ZERO     WUFNNB  61
      * Define work field Day 3 Production TotalUSR
     C                     Z-ADD*ZERO     WUFONB  61
      * Define work field Day 4 Production TotalUSR
     C                     Z-ADD*ZERO     WUFPNB  61
      * Define work field Day 5 Production TotalUSR
     C                     Z-ADD*ZERO     WUFQNB  61
      * Define work field Day 6 Production TotalUSR
     C                     Z-ADD*ZERO     WUFRNB  61
      * Define work field Day 7 Production TotalUSR
     C                     Z-ADD*ZERO     WUFTNB  61
      * Define work field Day 8 Prod Total      USR
     C                     Z-ADD*ZERO     WUGQNB  61
      * Define work field Day 9 Prod Total      USR
     C                     Z-ADD*ZERO     WUGRNB  61
      * Define work field Day 10 Prod Total     USR
     C                     Z-ADD*ZERO     WUGSNB  61
      * Define work field Day 11 Prod Total     USR
     C                     Z-ADD*ZERO     WUGTNB  61
      * Define work field Day 12 Prod Total     USR
     C                     Z-ADD*ZERO     WUGUNB  61
      * Define work field Day 13 Prod Total     USR
     C                     Z-ADD*ZERO     WUGVNB  61
      * Define work field Day 14 Prod Total     USR
     C                     Z-ADD*ZERO     WUGWNB  61
      * Define work field Day 15 Prod Total     USR
     C                     Z-ADD*ZERO     WUGXNB  61
      * Define work field Day 16 Prod Total     USR
     C                     Z-ADD*ZERO     WUGYNB  61
      * Define work field Day 17 Prod Total     USR
     C                     Z-ADD*ZERO     WUGZNB  61
      * Define work field Day 18 Prod Total     USR
     C                     Z-ADD*ZERO     WUG0NB  61
      * Define work field Day 19 Prod Total     USR
     C                     Z-ADD*ZERO     WUG2NB  61
      * Define work field Day 20 Prod Total     USR
     C                     Z-ADD*ZERO     WUG3NB  61
      * Define work field Day 21 Prod Total     USR
     C                     Z-ADD*ZERO     WUG5NB  61
      * Define work field Day 1 Sales Total     USR
     C                     Z-ADD*ZERO     WUF4NB  61
      * Define work field Day 2 Sales Total     USR
     C                     Z-ADD*ZERO     WUF5NB  61
      * Define work field Day 3 Sales Total     USR
     C                     Z-ADD*ZERO     WUF6NB  61
      * Define work field Day 4 Sales Total     USR
     C                     Z-ADD*ZERO     WUF7NB  61
      * Define work field Day 5 Sales Total     USR
     C                     Z-ADD*ZERO     WUF8NB  61
      * Define work field Day 6 Sales Total     USR
     C                     Z-ADD*ZERO     WUF9NB  61
      * Define work field Day 7 Sales Total     USR
     C                     Z-ADD*ZERO     WUGANB  61
      * Define work field Day 8 Sales Total     USR
     C                     Z-ADD*ZERO     WUHSNB  61
      * Define work field Day 9 Sales Total     USR
     C                     Z-ADD*ZERO     WUHTNB  61
      * Define work field Day 10 Sales Total    USR
     C                     Z-ADD*ZERO     WUHUNB  61
      * Define work field Day 11 Sales Total    USR
     C                     Z-ADD*ZERO     WUHVNB  61
      * Define work field Day 12 Sales Total    USR
     C                     Z-ADD*ZERO     WUHWNB  61
      * Define work field Day 13 Sales Total    USR
     C                     Z-ADD*ZERO     WUHXNB  61
      * Define work field Day 14 Sales Total    USR
     C                     Z-ADD*ZERO     WUHYNB  61
      * Define work field Day 15 Sales Total    USR
     C                     Z-ADD*ZERO     WUHZNB  61
      * Define work field Day 16 Sales Total    USR
     C                     Z-ADD*ZERO     WUH2NB  61
      * Define work field Day 17 Sales Total    USR
     C                     Z-ADD*ZERO     WUH3NB  61
      * Define work field Day 18 Sales Total    USR
     C                     Z-ADD*ZERO     WUH4NB  61
      * Define work field Day 19 Sales Total    USR
     C                     Z-ADD*ZERO     WUH7NB  61
      * Define work field Day 20 Sales Total    USR
     C                     Z-ADD*ZERO     WUH8NB  61
      * Define work field Day 21 Sales Total    USR
     C                     Z-ADD*ZERO     WUH9NB  61
      * Define work field Day 1 Schd Ship Total USR
     C                     Z-ADD*ZERO     WUFUNB  61
      * Define work field Day 2 Schd Ship Total USR
     C                     Z-ADD*ZERO     WUFVNB  61
      * Define work field Day 3 Schd Ship Total USR
     C                     Z-ADD*ZERO     WUFWNB  61
      * Define work field Day 4 Schd Ship Total USR
     C                     Z-ADD*ZERO     WUFYNB  61
      * Define work field Day 5 Schd Ship Total USR
     C                     Z-ADD*ZERO     WUFZNB  61
      * Define work field Day 6 Schd Ship Total USR
     C                     Z-ADD*ZERO     WUF2NB  61
      * Define work field Day 7 Schd Ship Total USR
     C                     Z-ADD*ZERO     WUF3NB  61
      * Define work field Day 8 Schd Ship Total USR
     C                     Z-ADD*ZERO     WUISNB  61
      * Define work field Day 9 Schd Ship Total USR
     C                     Z-ADD*ZERO     WUITNB  61
      * Define work field Day 10 SchdShip Total USR
     C                     Z-ADD*ZERO     WUIUNB  61
      * Define work field Day 11 SchdShip Total USR
     C                     Z-ADD*ZERO     WUIVNB  61
      * Define work field Day 12 SchdShip Total USR
     C                     Z-ADD*ZERO     WUIWNB  61
      * Define work field Day 13 SchdShip Total USR
     C                     Z-ADD*ZERO     WUIYNB  61
      * Define work field Day 14 SchdShip Total USR
     C                     Z-ADD*ZERO     WUIZNB  61
      * Define work field Day 15 SchdShip Total USR
     C                     Z-ADD*ZERO     WUI0NB  61
      * Define work field Day 16 SchdShip Total USR
     C                     Z-ADD*ZERO     WUI2NB  61
      * Define work field Day 17 SchdShip Total USR
     C                     Z-ADD*ZERO     WUI3NB  61
      * Define work field Day 18 SchdShip Total USR
     C                     Z-ADD*ZERO     WUI5NB  61
      * Define work field Day 19 SchdShip Total USR
     C                     Z-ADD*ZERO     WUI8NB  61
      * Define work field Day 20 SchdShip Total USR
     C                     Z-ADD*ZERO     WUJANB  61
      * Define work field Day 21 SchdShip Total USR
     C                     Z-ADD*ZERO     WUJCNB  61
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WFAIC3           Company Number
     C                     Z-ADD*ZERO     WFELDT           Production Date
     C                     Z-ADD*ZERO     WFHGCD           Item Code
     C                     Z-ADD*ZERO     WFGPDT           PS Available Sh
     C                     Z-ADD*ZERO     WFWTSP           PS Weight Plann
     C                     Z-ADD*ZERO     WFQTSP           PS Pieces Plann
     C                     Z-ADD*ZERO     WFDJPC           PS % of Carcass
     C                     Z-ADD*ZERO     WFF8WG           PS Avg Piece Wg
     C                     Z-ADD*ZERO     WFWTIN           PS Weight Inv O
     C                     Z-ADD*ZERO     WFD5NB           PS Pieces Inv O
     C                     Z-ADD*ZERO     WFDXWG           PS Weight Stand
     C                     Z-ADD*ZERO     WFB2NB           PS Pieces Stand
     C                     Z-ADD*ZERO     WFWTCN           PS Weight Conve
     C                     Z-ADD*ZERO     WFPSCV           PS Pieces Conve
     C                     Z-ADD*ZERO     WFSAWT           PS Weight Shipp
     C                     Z-ADD*ZERO     WFB9NB           PS Pieces Shipp
     C                     Z-ADD*ZERO     WFD1WG           PS Weight Prod
     C                     Z-ADD*ZERO     WFCBNB           PS Pieces Prod
     C                     Z-ADD*ZERO     WFEZWG           PS Weight Inv A
     C                     Z-ADD*ZERO     WFCCNB           PS Pieces Inv A
     C                     Z-ADD*ZERO     WFE0WG           PS Weight Ship
     C                     Z-ADD*ZERO     WFD6NB           PS Pieces Ship
     C                     Z-ADD*ZERO     WFOAWT           PS Weight Prod
     C                     Z-ADD*ZERO     WFCDNB           PS Pieces Prod
     C                     Z-ADD*ZERO     WFUNW2           PS Weight Inv A
     C                     Z-ADD*ZERO     WFCENB           PS Pieces Inv A
     C                     Z-ADD*ZERO     WFF9WG           PS Unit Weight
     C                     Z-ADD*ZERO     WFBPNB           PS Pieces Whse
     C                     Z-ADD*ZERO     WFGAWG           PS Weight Whse
     C                     Z-ADD*ZERO     WFBQNB           PS Pieces Unuse
     C                     Z-ADD*ZERO     WFGBWG           PS Weight Unuse
     C                     Z-ADD*ZERO     WFBRNB           PS Pieces Unuse
     C                     Z-ADD*ZERO     WFGCWG           PS Weight Unuse
     C                     Z-ADD*ZERO     WFBSNB           PS Pieces Unuse
     C                     Z-ADD*ZERO     WFGDWG           PS Weight Unuse
     C                     Z-ADD*ZERO     WFBWNB           PS Pieces Unuse
     C                     Z-ADD*ZERO     WFGEWG           PS Weight Unuse
     C                     Z-ADD*ZERO     WFPS6U           PS Pieces Unuse
     C                     Z-ADD*ZERO     WFDVWG           PS Weight Order
     C                     Z-ADD*ZERO     WFD7NB           PS Pieces Order
     C                     Z-ADD*ZERO     WFFCAD           PS Weight FC Ad
     C                     Z-ADD*ZERO     WFD9NB           PS Pieces FC Ad
     C                     Z-ADD*ZERO     WFDWWG           PS Weight FX Ad
     C                     Z-ADD*ZERO     WFEANB           PS Pieces FX Ad
     C                     Z-ADD*ZERO     WFSHWT           PS Weight Sched
     C                     Z-ADD*ZERO     WFEBNB           PS Pieces Sched
     C                     Z-ADD*ZERO     WFAVWT           PS Weight Avail
     C                     Z-ADD*ZERO     WFECNB           PS Pieces Avail
     C                     Z-ADD*ZERO     WFWTON           PS Weight Produ
     C                     Z-ADD*ZERO     WFEDNB           PS Pieces Produ
     C                     Z-ADD*ZERO     WFFNWT           PS Weight Fab N
     C                     Z-ADD*ZERO     WFEENB           PS Pieces Fab N
     C                     Z-ADD*ZERO     WFQTAS           PS Weight Sched
     C                     Z-ADD*ZERO     WFEFNB           PS Pieces Sched
     C                     Z-ADD*ZERO     WFWAIO           PS Weight Sched
     C                     Z-ADD*ZERO     WFEGNB           PS Pieces Sched
     C                     Z-ADD*ZERO     WFRGNB           Item Structure
     C                     Z-ADD*ZERO     WFRHNB           Item Structure
     C                     Z-ADD*ZERO     WFRINB           Item Structure
     C                     Z-ADD*ZERO     WFAATM           Job Time
     C                     Z-ADD*ZERO     WFAXDT           Job Date
      *
     C           W0ICL     IFEQ 'Y'
      * Initialize array variables
     C                     MOVEA*LOVAL    YK01
      * Initialize last used element number
     C                     Z-ADD0         YL01    50
     C                     Z-ADD1         Y       50
     C                     ENDIF
      *
      * Define work field Quantity Inventory USR
     C                     Z-ADD*ZERO     WUQINV  61
      * Define work field Order Number
     C                     Z-ADD*ZERO     WUC4NB  70
      * Define work field Julian Date
     C                     Z-ADD*ZERO     WUCQNB  50
      * Define work field OM Week
     C                     Z-ADD*ZERO     WUBZNB  30
      * Define work field Day of Week
     C                     MOVEL*BLANK    WUA9ST  1
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WJAIC3           Company Number
     C                     Z-ADD*ZERO     WJC4NB           Order Number
     C                     Z-ADD*ZERO     WJDPNB           Order Sequence
     C                     Z-ADD*ZERO     WJUENB           Order Secondary
     C                     Z-ADD*ZERO     WJJGDT           OD Production D
     C                     Z-ADD*ZERO     WJAODT           Scheduled Ship
     C                     Z-ADD*ZERO     WJHGCD           Item Code
     C                     Z-ADD*ZERO     WJIGQT           OD Qty/Cnsmd Pi
     C                     Z-ADD*ZERO     WJFLWG           OD Weight Sched
     C                     Z-ADD*ZERO     WJIUQT           OD Quantity Inv
     C                     Z-ADD*ZERO     WJF3WG           OD Weight Inv S
     C                     Z-ADD*ZERO     WJIVQT           OD Quantity Unu
     C                     Z-ADD*ZERO     WJF4WG           OD Unused weigh
     C                     Z-ADD*ZERO     WJAATM           Job Time
     C                     Z-ADD*ZERO     WJAXDT           Job Date
      * Define work field Day 1 Available Loads
     C                     Z-ADD*ZERO     WUJ9NB  61
      * Define work field Day 2 Available Loads
     C                     Z-ADD*ZERO     WUKANB  61
      * Define work field Day 3 Available Loads
     C                     Z-ADD*ZERO     WUKBNB  61
      * Define work field Day 4 Available Loads
     C                     Z-ADD*ZERO     WUKDNB  61
      * Define work field Day 5 Available Loads
     C                     Z-ADD*ZERO     WUKENB  61
      * Define work field Day 6 Available Loads
     C                     Z-ADD*ZERO     WUKFNB  61
      * Define work field Day 1 Avail (Ld) Usr
     C                     Z-ADD*ZERO     WUD1LD  61
      * Define work field Day 8 Available Loads
     C                     Z-ADD*ZERO     WUL2NX  61
      * Define work field Day 9 Available Loads
     C                     Z-ADD*ZERO     WUL3NX  61
      * Define work field Day 10 Available Loads
     C                     Z-ADD*ZERO     WUL4NX  61
      * Define work field Day 11 Available Loads
     C                     Z-ADD*ZERO     WUL5NX  61
      * Define work field Day 12 Available Loads
     C                     Z-ADD*ZERO     WUL6NX  61
      * Define work field Day 13 Available Loads
     C                     Z-ADD*ZERO     WUL7NX  61
      * Define work field Day 14 Available Loads
     C                     Z-ADD*ZERO     WUL8NX  61
      * Define work field Day 15 Available Loads
     C                     Z-ADD*ZERO     WUL9NX  61
      * Define work field Day 16 Available Loads
     C                     Z-ADD*ZERO     WUMANX  61
      * Define work field Day 17 Available Loads
     C                     Z-ADD*ZERO     WUMBNX  61
      * Define work field Day 18 Available Loads
     C                     Z-ADD*ZERO     WUMCNX  61
      * Define work field Day 19 Available Loads
     C                     Z-ADD*ZERO     WUMDNX  61
      * Define work field Day 20 Available Loads
     C                     Z-ADD*ZERO     WUMENX  61
      * Define work field Day 21 Available Loads
     C                     Z-ADD*ZERO     WUMFNX  61
      * Define work field Override Age Dates StsUsr
     C                     MOVEL*BLANK    WUI0ST  1
      * Define work field USR First Position
     C                     MOVEL*BLANK    WUI3ST  1
      * Define work field CD7 Ext Numeric Key
     C                     MOVEL*BLANK    WUEOCD  7
      * Obtain default message file
     C           *NAMVAR   DEFN CAMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field Warehouse Code PASS   USR
     C                     MOVEL*BLANK    WUT3CD  3
      * Define work field USR Warehouse Code
     C                     MOVEL*BLANK    WUCPCD  3
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WLAIC3           Company Number
     C                     Z-ADD*ZERO     WLC4NB           Order Number
     C                     Z-ADD*ZERO     WLANC7           A/R Customer Nu
     C                     Z-ADD*ZERO     WLBKC7           Ship To Custome
     C                     Z-ADD*ZERO     WLB0C7           Bill to Custome
     C                     Z-ADD*ZERO     WLA0DT           Order Date
     C                     Z-ADD*ZERO     WLA5DT           Requested Ship
     C                     Z-ADD*ZERO     WLGNDT           Actual Shipped
     C                     Z-ADD*ZERO     WLACDT           Cancel Date
     C                     Z-ADD*ZERO     WLAODT           Scheduled Ship
     C                     Z-ADD*ZERO     WLCXDT           Date of Origina
     C                     Z-ADD*ZERO     WLJZVA           Order Value Tot
     C                     Z-ADD*ZERO     WLA1WG           Order Weight To
     C                     Z-ADD*ZERO     WLEIDT           Requested Deliv
     C                     Z-ADD*ZERO     WLAFTM           Requested Deliv
     C                     Z-ADD*ZERO     WLRMNB           Load ID
     C                     Z-ADD*ZERO     WLTBNB           Absorbed Freigh
     C                     Z-ADD*ZERO     WLR1NB           Rated Freight
     C                     Z-ADD*ZERO     WLRNNB           Reefer Temperat
     C                     Z-ADD*ZERO     WLATIN           Attach to Invoi
     C                     Z-ADD*ZERO     WLRSRN           Resell Referenc
     C                     Z-ADD*ZERO     WLT3NB           Attach to Order
     C                     Z-ADD*ZERO     WLCONB           Invoice Number
     C                     Z-ADD*ZERO     WLAWDT           Invoice Date
     C                     Z-ADD*ZERO     WLVRVA           A/R order Value
     C                     Z-ADD*ZERO     WLB7VL           Invoice Order V
     C                     Z-ADD*ZERO     WLNODT           OH Appt Confirm
     C                     Z-ADD*ZERO     WLNPDT           JPN Invoice Iss
     C                     Z-ADD*ZERO     WLNQDT           Load Actual Shi
     C                     Z-ADD*ZERO     WLNRDT           Load BOL Comple
     C                     Z-ADD*ZERO     WLNSDT           Load Truck Depa
     C                     Z-ADD*ZERO     WLBPTM           Maximum Gross W
     C                     Z-ADD*ZERO     WLBQTM           Time of Origina
     C                     Z-ADD*ZERO     WLBRTM           OH Appt Confirm
     C                     Z-ADD*ZERO     WLBSTM           Load BOL Comple
     C                     Z-ADD*ZERO     WLBTTM           Load Truck Depa
     C                     Z-ADD*ZERO     WLH0NX           Act Frt Referen
     C                     Z-ADD*ZERO     WLH1NX           Act Non-Ref Frt
     C                     Z-ADD*ZERO     WLH2NX           OH Fuel Surchar
     C                     Z-ADD*ZERO     WLH3NX           OH Total Non-Re
     C                     Z-ADD*ZERO     WLH4NX           OH Total Ref Fr
     C                     Z-ADD*ZERO     WLC0C7           Claim Number
     C                     Z-ADD*ZERO     WLAATM           Job Time
     C                     Z-ADD*ZERO     WLAXDT           Job Date
      * Define work field Item Code Txt
     C                     MOVEL*BLANK    WUFYTX  7
      * Define work field CD3 Ext Numeric Key
     C                     MOVEL*BLANK    WUDMCD  3
      * Define work field Process Post USR
     C                     MOVEL*BLANK    WUGHST  1
      * Define work field Order Value Total
     C                     Z-ADD*ZERO     WUJZVA 112
      * Define work field Order Weight Total
     C                     Z-ADD*ZERO     WUA1WG 112
      * Define work field STATUS
     C                     MOVEL*BLANK    WUATUS  1
      * Define work field *SFLSEL
     C                     MOVEL*BLANK    WUSEL   1
      * Define work field Error Status
     C                     MOVEL*BLANK    WUECST  1
      * Define work field Scheduled Ship Date
     C                     Z-ADD*ZERO     WUAODT  70
      * Define work field Reefer Temperature
     C                     Z-ADD*ZERO     WURNNB  52
      * Define work field Flat Amount
     C                     Z-ADD*ZERO     WUFLAM 112
      * Define work field Allocate Pounds/Miles
     C                     MOVEL*BLANK    WUXQST  1
      * Define work field Rated Freight
     C                     Z-ADD*ZERO     WUR1NB 112
      * Define work field Load Type
     C                     MOVEL*BLANK    WUVDST  1
      * Define work field Schedule Sequence Number
     C                     Z-ADD*ZERO     WUT4NB  50
      * Define work field Total Load Miles
     C                     Z-ADD*ZERO     WUTLMI  70
      * Define work field Ship From Warehouse
     C                     MOVEL*BLANK    WUVPCD  3
      * Define work field Ship To State Code
     C                     MOVEL*BLANK    WUDBCD  2
      * Define work field Carrier Broker
     C                     MOVEL*BLANK    WUXCCD  3
      * Define work field Override Total Load Miles
     C                     Z-ADD*ZERO     WUK2DT  70
      * Define work field Shipping Temp C/F txt
     C                     MOVEL*BLANK    WUWRTX 25
      * Define work field USR Check Y/N Status
     C                     MOVEL*BLANK    WUJDST  1
      * Define work field TXT field not needed
     C                     MOVEL*BLANK    WUG0TX 20
      * Define work field Numeric Field Not Needed
     C                     Z-ADD*ZERO     WUNFNN  70
      * Define work field Company Number
     C                     Z-ADD*ZERO     WUAIC3  30
      * Define work field Access Denied (Y/N)
     C                     MOVEL*BLANK    WUWVST  1
      * Define work field Load Status
     C                     MOVEL*BLANK    WUPKST  1
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WSRMNB           Load ID
     C                     Z-ADD*ZERO     WSAIC3           Company Number
     C                     Z-ADD*ZERO     WSAODT           Scheduled Ship
     C                     Z-ADD*ZERO     WSRNNB           Reefer Temperat
     C                     Z-ADD*ZERO     WSRPNB           Total Load Orde
     C                     Z-ADD*ZERO     WSFLAM           Flat Amount
     C                     Z-ADD*ZERO     WSRRNB           Total Stops
     C                     Z-ADD*ZERO     WSSBNB           BOL Time
     C                     Z-ADD*ZERO     WSSQNB           Ld Hdr/Ld Dtl U
     C                     Z-ADD*ZERO     WSR1NB           Rated Freight
     C                     Z-ADD*ZERO     WSSDNB           Number Pallets
     C                     Z-ADD*ZERO     WSPAOU           Number Pallets
     C                     Z-ADD*ZERO     WSDGWG           Load Carrier Pa
     C                     Z-ADD*ZERO     WSSXNB           Estimated Arriv
     C                     Z-ADD*ZERO     WSHADT           Actual Arrival
     C                     Z-ADD*ZERO     WSAART           Actual Arrival
     C                     Z-ADD*ZERO     WSDHWG           Trailer IN Weig
     C                     Z-ADD*ZERO     WSDIWG           Trailer OUT Wei
     C                     Z-ADD*ZERO     WSAQDT           Actual Departur
     C                     Z-ADD*ZERO     WSS6NB           Departure Time
     C                     Z-ADD*ZERO     WST4NB           Schedule Sequen
     C                     Z-ADD*ZERO     WSPRTM           Product Tempera
     C                     Z-ADD*ZERO     WSNPSV           Number Pallets
     C                     Z-ADD*ZERO     WSTLMI           Total Load Mile
     C                     Z-ADD*ZERO     WSGRWE           Gross Weight
     C                     Z-ADD*ZERO     WSF9DT           Actual Ship Dat
     C                     Z-ADD*ZERO     WSJ4DT           Truck Ready Dat
     C                     Z-ADD*ZERO     WSTRTM           Truck Ready Tim
     C                     Z-ADD*ZERO     WSJ5DT           Spotted Date
     C                     Z-ADD*ZERO     WSSPTM           Spotted Time
     C                     Z-ADD*ZERO     WSJ6DT           Load Finished D
     C                     Z-ADD*ZERO     WSLFTM           Load Finished T
     C                     Z-ADD*ZERO     WSJ7DT           BOL Complete Da
     C                     Z-ADD*ZERO     WSBOTM           BOL Complete Ti
     C                     Z-ADD*ZERO     WSJ8DT           BOL Received Da
     C                     Z-ADD*ZERO     WSBLTM           BOL Received Ti
     C                     Z-ADD*ZERO     WSKIDT           Truck Departure
     C                     Z-ADD*ZERO     WSASTM           Truck Departure
     C                     Z-ADD*ZERO     WSKADT           Adjusted Depart
     C                     Z-ADD*ZERO     WSAJCM           Adjusted Depart
     C                     Z-ADD*ZERO     WSVOAG           Voyage
     C                     Z-ADD*ZERO     WSKBDT           Sail Date
     C                     Z-ADD*ZERO     WSEFDT           Arrival Date
     C                     Z-ADD*ZERO     WSKCDT           Date In
     C                     Z-ADD*ZERO     WSTMIN           Time In
     C                     Z-ADD*ZERO     WSKDDT           Date Out
     C                     Z-ADD*ZERO     WSVMNB           Time Out
     C                     Z-ADD*ZERO     WSOCFR           Load Total Frei
     C                     Z-ADD*ZERO     WSKJDT           Scheduled Deliv
     C                     Z-ADD*ZERO     WSATTM           Scheduled Deliv
     C                     Z-ADD*ZERO     WSBRBK           Bring Back Mile
     C                     Z-ADD*ZERO     WSEIDT           Requested Deliv
     C                     Z-ADD*ZERO     WSKKDT           On Yard Date
     C                     Z-ADD*ZERO     WSAVTM           On Yard Time
     C                     Z-ADD*ZERO     WSKZDT           Deadline Depart
     C                     Z-ADD*ZERO     WSAXTM           Deadline Depart
     C                     Z-ADD*ZERO     WSLLDT           Express Mail Da
     C                     Z-ADD*ZERO     WSK0DT           Product Complet
     C                     Z-ADD*ZERO     WSAYTM           Product Complet
     C                     Z-ADD*ZERO     WSKNNX           Pallets Loaded
     C                     Z-ADD*ZERO     WSICWG           Avg Pallet Tare
     C                     Z-ADD*ZERO     WSIDWG           Tot Pallet Tare
     C                     Z-ADD*ZERO     WSK1DT           Load Confirmati
     C                     Z-ADD*ZERO     WSAZTM           Load Door 1
     C                     Z-ADD*ZERO     WSK2DT           Override Total
     C                     Z-ADD*ZERO     WSA0TM           Load Door 2
     C                     Z-ADD*ZERO     WSZBVA           Load Actual Fre
     C                     Z-ADD*ZERO     WSPYDT           LH Carrier Paid
     C                     Z-ADD*ZERO     WSCKTM           LH Carrier Paid
     C                     Z-ADD*ZERO     WSPZDT           LH Last Combo P
     C                     Z-ADD*ZERO     WSCLTM           LH Last Combo P
     C                     Z-ADD*ZERO     WSP0DT           LPT Load Plan S
     C                     Z-ADD*ZERO     WSCMTM           LPT Load Plan S
     C                     Z-ADD*ZERO     WSP1DT           TPM Planned Shi
     C                     Z-ADD*ZERO     WSCNTM           LH Unused Time
     C                     Z-ADD*ZERO     WSP2DT           LH Unused Date
     C                     Z-ADD*ZERO     WSCOTM           LH Unused Time
     C                     Z-ADD*ZERO     WSP3DT           LH Unused Date
     C                     Z-ADD*ZERO     WSCQTM           LH Unused Time
     C                     Z-ADD*ZERO     WSAATM           Job Time
     C                     Z-ADD*ZERO     WSAXDT           Job Date
      * Define work field LD Carrier Appt Date
     C                     Z-ADD*ZERO     WUN7DT  70
      * Define work field Ship To Name
     C                     MOVEL*BLANK    WUBRTX 30
      * Define work field Ship To City
     C                     MOVEL*BLANK    WUHNNA 20
      * Define work field USR Hours 5.0
     C                     Z-ADD*ZERO     WU      50
      * Define work field @Numeric 6,0
     C                     Z-ADD*ZERO     WUPINB  60
      * Define work field Ship To Customer
     C                     Z-ADD*ZERO     WUBKC7  70
      * Define work field Ship To Address Line 1
     C                     MOVEL*BLANK    WUHMNA 30
      * Define work field Ship To Address Line 2
     C                     MOVEL*BLANK    WUHONA 30
      * Define work field Ship To Address Line 3
     C                     MOVEL*BLANK    WUHPNA 30
      * Define work field Ship To Zip/Postal Code
     C                     MOVEL*BLANK    WUCKTX 11
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WTRMNB           Load ID
     C                     Z-ADD*ZERO     WTRUNB           Stop/Drop Seque
     C                     Z-ADD*ZERO     WTRVNB           Stop/Drop
     C                     Z-ADD*ZERO     WTRWNB           Miles to next s
     C                     Z-ADD*ZERO     WTRXNB           Freight Charge
     C                     Z-ADD*ZERO     WTSQNB           Ld Hdr/Ld Dtl U
     C                     Z-ADD*ZERO     WTT0NB           Freight Misc. C
     C                     Z-ADD*ZERO     WTT1NB           Freight Stop Ch
     C                     Z-ADD*ZERO     WTR1NB           Rated Freight
     C                     Z-ADD*ZERO     WTAIC3           Company Number
     C                     Z-ADD*ZERO     WTC4NB           Order Number
     C                     Z-ADD*ZERO     WTKEDT           Estimated Arriv
     C                     Z-ADD*ZERO     WTSXNB           Estimated Arriv
     C                     Z-ADD*ZERO     WTKFDT           Appointment Con
     C                     Z-ADD*ZERO     WTACTM           Appointment Con
     C                     Z-ADD*ZERO     WTEJDT           Actual Delivery
     C                     Z-ADD*ZERO     WTAGTM           Actual Delivery
     C                     Z-ADD*ZERO     WTKJDT           Scheduled Deliv
     C                     Z-ADD*ZERO     WTATTM           Scheduled Deliv
     C                     Z-ADD*ZERO     WTHDDT           Deadline Depart
     C                     Z-ADD*ZERO     WTAUTM           Deadline Depart
     C                     Z-ADD*ZERO     WTKKDT           On Yard Date
     C                     Z-ADD*ZERO     WTAVTM           On Yard Time
     C                     Z-ADD*ZERO     WTZ4NB           MPC Number
     C                     Z-ADD*ZERO     WTN7DT           LD Carrier Appt
     C                     Z-ADD*ZERO     WTN8DT           LD Unused Date
     C                     Z-ADD*ZERO     WTN9DT           LD Unused Date
     C                     Z-ADD*ZERO     WTB3TM           LD Carrier Appt
     C                     Z-ADD*ZERO     WTB4TM           LD Unused Time
     C                     Z-ADD*ZERO     WTB5TM           LD Unused Time
     C                     Z-ADD*ZERO     WTAATM           Job Time
     C                     Z-ADD*ZERO     WTAXDT           Job Date
      * Define work field Destination City
     C                     MOVEL*BLANK    WUXECD 20
      * Define work field USR Select/Omit Flag
     C                     MOVEL*BLANK    WUCYST  1
      * Define work field USR Detail or Summary
     C                     MOVEL*BLANK    WUSTST  1
      * Define work field AUTO PRINT PRELIM PICK
     C                     MOVEL*BLANK    WUCLST  1
      * Define work field PRT Printer Device
     C                     MOVEL*BLANK    WUWRST 10
      * Define work field PRT Hold Output Sts
     C                     MOVEL*BLANK    WUWSST  4
      * Define work field PRT Save Output Sts
     C                     MOVEL*BLANK    WUWTST  4
      * Define work field PRT Night Queue Run Sts
     C                     MOVEL*BLANK    WUWUST  1
      * Define work field PRT Night Queue
     C                     MOVEL*BLANK    WUBVVN 10
      * Define work field System Value Numeric
     C                     Z-ADD*ZERO     WUM8NB 155
      * Define work field Trans Contol AS400/Plant
     C                     MOVEL*BLANK    WUXUST  1
      * Define work field Warehouse Description
     C                     MOVEL*BLANK    WUF8NA 30
      * Define work field Load Change Type
     C                     MOVEL*BLANK    WURVST  6
      * Define work field Department Control Code
     C                     MOVEL*BLANK    WUUJST  3
      * Define work field Carrier Code
     C                     MOVEL*BLANK    WUBZNA  3
      * Define work field Warehouse Code
     C                     MOVEL*BLANK    WUAJCD  3
      * Define work field Salesperson Code
     C                     MOVEL*BLANK    WUBCCD  3
      * Define work field Allow Multi-Company
     C                     MOVEL*BLANK    WUI6ST  1
      * Define work field Default Printer
     C                     MOVEL*BLANK    WUMPNA 10
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    YRSW00  50       *Synon (5,0) wo
     C                     Z-ADD*ZEROS    YRSW01  50       *Synon (5,0) wo
     C                     Z-ADD*ZEROS    W0WA02 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WA01 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WD00 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WJ02 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WJ01 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WJ00 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WJ03 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WD02 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD01 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD03 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD04 177       *Synon (17,7) w
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'N'       W0PMT   1
      * Define local variables for subroutine SDRVGN.
     C                     Z-ADD*ZERO     WL0001  30
     C                     Z-ADD*ZERO     WL0002  70
     C                     Z-ADD*ZERO     WL0003  70
      * Define local variables for subroutine SFRVGN.
     C                     Z-ADD*ZERO     WL0004  30
     C                     Z-ADD*ZERO     WL0005  40
     C                     Z-ADD*ZERO     WL0006  20
     C                     Z-ADD*ZERO     WL0007  70
     C                     Z-ADD*ZERO     WL0008  70
     C                     Z-ADD*ZERO     WL0009  70
     C                     Z-ADD*ZERO     WL0010  70
     C                     Z-ADD*ZERO     WL0011  70
     C                     Z-ADD*ZERO     WL0012  70
     C                     Z-ADD*ZERO     WL0013  70
     C                     MOVEL*BLANK    WL0014  1
      * Define local variables for subroutine SNRVGN.
     C                     Z-ADD*ZERO     WL0015  30
     C                     MOVEL*BLANK    WL0016  1
     C                     Z-ADD*ZERO     WL0017  70
     C                     Z-ADD*ZERO     WL0018  70
     C                     MOVEL*BLANK    WL0019  3
     C                     Z-ADD*ZERO     WL0020  92
     C                     Z-ADD*ZERO     WL0021  70
     C                     MOVEL*BLANK    WL0022  3
      * Define local variables for subroutine SQRVGN.
     C                     Z-ADD*ZERO     WL0023  30
     C                     Z-ADD*ZERO     WL0024  70
     C                     MOVEL*BLANK    WL0025  1
     C                     MOVEL*BLANK    WL0026  1
      * Define local variables for subroutine SRRVGN.
     C                     Z-ADD*ZERO     WL0027  30
     C                     Z-ADD*ZERO     WL0028  70
     C                     MOVEL*BLANK    WL0029  3
     C                     Z-ADD*ZERO     WL0030  70
     C                     Z-ADD*ZERO     WL0031 112
     C                     Z-ADD*ZERO     WL0032 112
     C                     MOVEL*BLANK    WL0033  1
      * Define local variables for subroutine SURVGN.
     C                     MOVEL*BLANK    WL0034  7
     C                     Z-ADD*ZERO     WL0035  70
     C                     Z-ADD*ZERO     WL0036  70
      * Define local variables for subroutine SWRVGN.
     C                     MOVEL*BLANK    WL0037  2
     C                     MOVEL*BLANK    WL0038  3
     C                     Z-ADD*ZERO     WL0039  30
     C                     Z-ADD*ZERO     WL0040  70
     C                     Z-ADD*ZERO     WL0041  70
     C                     Z-ADD*ZERO     WL0042  70
     C                     Z-ADD*ZERO     WL0043  70
     C                     Z-ADD*ZERO     WL0044  70
     C                     Z-ADD*ZERO     WL0045  70
     C                     Z-ADD*ZERO     WL0046  70
     C                     Z-ADD*ZERO     WL0047  70
     C                     Z-ADD*ZERO     WL0048  70
     C                     Z-ADD*ZERO     WL0049  70
     C                     Z-ADD*ZERO     WL0050  70
     C                     Z-ADD*ZERO     WL0051  70
     C                     Z-ADD*ZERO     WL0052  70
     C                     Z-ADD*ZERO     WL0053  70
     C                     Z-ADD*ZERO     WL0054  70
     C                     Z-ADD*ZERO     WL0055  70
     C                     Z-ADD*ZERO     WL0056  70
     C                     Z-ADD*ZERO     WL0057  70
     C                     Z-ADD*ZERO     WL0058  70
     C                     Z-ADD*ZERO     WL0059  70
     C                     Z-ADD*ZERO     WL0060  70
     C                     Z-ADD*ZERO     WL0061  70
     C                     Z-ADD*ZERO     WL0062  70
     C                     Z-ADD*ZERO     WL0063  70
     C                     Z-ADD*ZERO     WL0064  70
     C                     Z-ADD*ZERO     WL0065  70
     C                     Z-ADD*ZERO     WL0066  70
     C                     Z-ADD*ZERO     WL0067  70
     C                     Z-ADD*ZERO     WL0068  70
     C                     Z-ADD*ZERO     WL0069  70
     C                     Z-ADD*ZERO     WL0070  70
     C                     Z-ADD*ZERO     WL0071  70
     C                     Z-ADD*ZERO     WL0072  70
     C                     Z-ADD*ZERO     WL0073  70
     C                     Z-ADD*ZERO     WL0074  70
     C                     Z-ADD*ZERO     WL0075  70
     C                     Z-ADD*ZERO     WL0076  70
     C                     Z-ADD*ZERO     WL0077  70
     C                     Z-ADD*ZERO     WL0078  70
     C                     Z-ADD*ZERO     WL0079  70
     C                     Z-ADD*ZERO     WL0080  70
     C                     Z-ADD*ZERO     WL0081  70
     C                     Z-ADD*ZERO     WL0082  70
     C                     Z-ADD*ZERO     WL0083  70
     C                     MOVEL*BLANK    WL0084  1
     C                     MOVEL*BLANK    WL0085  1
     C                     MOVEL*BLANK    WL0086  1
     C                     MOVEL*BLANK    WL0087  1
     C                     MOVEL*BLANK    WL0088  1
     C                     MOVEL*BLANK    WL0089  1
     C                     MOVEL*BLANK    WL0090  1
     C                     MOVEL*BLANK    WL0091  1
     C                     MOVEL*BLANK    WL0092  1
     C                     MOVEL*BLANK    WL0093  1
     C                     MOVEL*BLANK    WL0094  1
     C                     MOVEL*BLANK    WL0095  1
     C                     MOVEL*BLANK    WL0096  1
     C                     MOVEL*BLANK    WL0097  1
     C                     MOVEL*BLANK    WL0098  1
     C                     MOVEL*BLANK    WL0099  1
     C                     MOVEL*BLANK    WL0100  1
     C                     MOVEL*BLANK    WL0101  1
     C                     MOVEL*BLANK    WL0102  1
     C                     MOVEL*BLANK    WL0103  1
     C                     MOVEL*BLANK    WL0104  1
     C                     Z-ADD*ZERO     WL0105  50
     C                     Z-ADD*ZERO     WL0106  50
     C                     MOVEL*BLANK    WL0107  2
     C                     Z-ADD*ZERO     WL0108 112
     C                     Z-ADD*ZERO     WL0109  52
     C                     MOVEL*BLANK    WL0110  1
     C                     Z-ADD*ZERO     WL0111  70
     C                     Z-ADD*ZERO     WL0112  70
     C                     Z-ADD*ZERO     WL0113  61
     C                     Z-ADD*ZERO     WL0114  61
     C                     Z-ADD*ZERO     WL0115  61
     C                     Z-ADD*ZERO     WL0116  61
     C                     Z-ADD*ZERO     WL0117  61
     C                     Z-ADD*ZERO     WL0118  61
     C                     Z-ADD*ZERO     WL0119  61
     C                     Z-ADD*ZERO     WL0120  61
     C                     Z-ADD*ZERO     WL0121  61
     C                     Z-ADD*ZERO     WL0122  61
     C                     Z-ADD*ZERO     WL0123  61
     C                     Z-ADD*ZERO     WL0124  61
     C                     Z-ADD*ZERO     WL0125  61
     C                     Z-ADD*ZERO     WL0126  61
     C                     Z-ADD*ZERO     WL0127  61
     C                     Z-ADD*ZERO     WL0128  61
     C                     Z-ADD*ZERO     WL0129  61
     C                     Z-ADD*ZERO     WL0130  61
     C                     Z-ADD*ZERO     WL0131  61
     C                     Z-ADD*ZERO     WL0132  61
     C                     Z-ADD*ZERO     WL0133  61
     C                     Z-ADD*ZERO     WL0134  61
     C                     Z-ADD*ZERO     WL0135  61
     C                     Z-ADD*ZERO     WL0136  61
     C                     Z-ADD*ZERO     WL0137  61
     C                     Z-ADD*ZERO     WL0138  61
     C                     Z-ADD*ZERO     WL0139  61
     C                     Z-ADD*ZERO     WL0140  61
     C                     Z-ADD*ZERO     WL0141  61
     C                     Z-ADD*ZERO     WL0142  61
     C                     Z-ADD*ZERO     WL0143  61
     C                     Z-ADD*ZERO     WL0144  61
     C                     Z-ADD*ZERO     WL0145  61
     C                     Z-ADD*ZERO     WL0146  61
     C                     Z-ADD*ZERO     WL0147  61
     C                     Z-ADD*ZERO     WL0148  61
     C                     Z-ADD*ZERO     WL0149  61
     C                     Z-ADD*ZERO     WL0150  61
     C                     Z-ADD*ZERO     WL0151  61
     C                     Z-ADD*ZERO     WL0152  61
     C                     Z-ADD*ZERO     WL0153  61
     C                     Z-ADD*ZERO     WL0154  61
     C                     Z-ADD*ZERO     WL0155  61
     C                     Z-ADD*ZERO     WL0156  61
     C                     Z-ADD*ZERO     WL0157  61
     C                     Z-ADD*ZERO     WL0158  61
     C                     Z-ADD*ZERO     WL0159  61
     C                     Z-ADD*ZERO     WL0160  61
     C                     Z-ADD*ZERO     WL0161  61
     C                     Z-ADD*ZERO     WL0162  61
     C                     Z-ADD*ZERO     WL0163  61
     C                     Z-ADD*ZERO     WL0164  61
     C                     Z-ADD*ZERO     WL0165  61
     C                     Z-ADD*ZERO     WL0166  61
     C                     Z-ADD*ZERO     WL0167  61
     C                     Z-ADD*ZERO     WL0168  61
     C                     Z-ADD*ZERO     WL0169  61
     C                     Z-ADD*ZERO     WL0170  61
     C                     Z-ADD*ZERO     WL0171  61
     C                     Z-ADD*ZERO     WL0172  61
     C                     Z-ADD*ZERO     WL0173  61
     C                     Z-ADD*ZERO     WL0174  61
     C                     Z-ADD*ZERO     WL0175  61
     C                     Z-ADD*ZERO     WL0176  61
     C                     Z-ADD*ZERO     WL0177  61
     C                     Z-ADD*ZERO     WL0178  61
     C                     Z-ADD*ZERO     WL0179  61
     C                     Z-ADD*ZERO     WL0180  61
     C                     Z-ADD*ZERO     WL0181  61
     C                     Z-ADD*ZERO     WL0182  61
     C                     Z-ADD*ZERO     WL0183  61
     C                     Z-ADD*ZERO     WL0184  61
     C                     Z-ADD*ZERO     WL0185  61
     C                     Z-ADD*ZERO     WL0186  61
     C                     Z-ADD*ZERO     WL0187  61
     C                     Z-ADD*ZERO     WL0188  61
     C                     Z-ADD*ZERO     WL0189  61
     C                     Z-ADD*ZERO     WL0190  61
     C                     Z-ADD*ZERO     WL0191  61
     C                     Z-ADD*ZERO     WL0192  61
     C                     Z-ADD*ZERO     WL0193  61
     C                     Z-ADD*ZERO     WL0194  61
     C                     Z-ADD*ZERO     WL0195  61
     C                     Z-ADD*ZERO     WL0196  61
     C                     Z-ADD*ZERO     WL0197  61
     C                     Z-ADD*ZERO     WL0198  61
     C                     Z-ADD*ZERO     WL0199  61
     C                     Z-ADD*ZERO     WL0200  61
     C                     Z-ADD*ZERO     WL0201  61
     C                     Z-ADD*ZERO     WL0202  61
     C                     Z-ADD*ZERO     WL0203  61
     C                     Z-ADD*ZERO     WL0204  61
     C                     Z-ADD*ZERO     WL0205  61
     C                     Z-ADD*ZERO     WL0206  61
     C                     Z-ADD*ZERO     WL0207  61
     C                     Z-ADD*ZERO     WL0208  61
     C                     Z-ADD*ZERO     WL0209  61
     C                     Z-ADD*ZERO     WL0210  61
      * Define local variables for subroutine SXRVGN.
     C                     MOVEL*BLANK    WL0211  3
     C                     MOVEL*BLANK    WL0212  3
     C                     MOVEL*BLANK    WL0213  1
      * Define local variables for subroutine SYRVGN.
     C                     Z-ADD*ZERO     WL0214  30
     C                     Z-ADD*ZERO     WL0215  70
     C                     MOVEL*BLANK    WL0216  3
     C                     Z-ADD*ZERO     WL0217  70
     C                     Z-ADD*ZERO     WL0218  70
     C                     Z-ADD*ZERO     WL0219  70
     C                     Z-ADD*ZERO     WL0220  70
     C                     Z-ADD*ZERO     WL0221  70
     C                     Z-ADD*ZERO     WL0222  70
     C                     Z-ADD*ZERO     WL0223  70
     C                     Z-ADD*ZERO     WL0224  70
     C                     Z-ADD*ZERO     WL0225  70
     C                     Z-ADD*ZERO     WL0226  70
     C                     Z-ADD*ZERO     WL0227  70
     C                     Z-ADD*ZERO     WL0228  70
     C                     Z-ADD*ZERO     WL0229  70
     C                     Z-ADD*ZERO     WL0230  70
     C                     Z-ADD*ZERO     WL0231  70
     C                     Z-ADD*ZERO     WL0232  70
     C                     Z-ADD*ZERO     WL0233  70
     C                     Z-ADD*ZERO     WL0234  70
     C                     Z-ADD*ZERO     WL0235  70
     C                     Z-ADD*ZERO     WL0236  70
     C                     Z-ADD*ZERO     WL0237  70
     C                     Z-ADD*ZERO     WL0238  70
     C                     Z-ADD*ZERO     WL0239  70
     C                     Z-ADD*ZERO     WL0240  70
     C                     Z-ADD*ZERO     WL0241  70
     C                     Z-ADD*ZERO     WL0242  70
     C                     Z-ADD*ZERO     WL0243  70
     C                     Z-ADD*ZERO     WL0244  70
     C                     Z-ADD*ZERO     WL0245  70
     C                     Z-ADD*ZERO     WL0246  70
     C                     Z-ADD*ZERO     WL0247  70
     C                     Z-ADD*ZERO     WL0248  70
     C                     Z-ADD*ZERO     WL0249  70
     C                     Z-ADD*ZERO     WL0250  70
     C                     Z-ADD*ZERO     WL0251  70
     C                     Z-ADD*ZERO     WL0252  70
     C                     Z-ADD*ZERO     WL0253  70
     C                     Z-ADD*ZERO     WL0254  70
     C                     Z-ADD*ZERO     WL0255  70
     C                     Z-ADD*ZERO     WL0256  70
     C                     Z-ADD*ZERO     WL0257  70
     C                     Z-ADD*ZERO     WL0258  70
     C                     Z-ADD*ZERO     WL0259  70
     C                     Z-ADD*ZERO     WL0260  61
     C                     Z-ADD*ZERO     WL0261  61
     C                     Z-ADD*ZERO     WL0262  61
     C                     Z-ADD*ZERO     WL0263  61
     C                     Z-ADD*ZERO     WL0264  61
     C                     Z-ADD*ZERO     WL0265  61
     C                     Z-ADD*ZERO     WL0266  61
     C                     Z-ADD*ZERO     WL0267  61
     C                     Z-ADD*ZERO     WL0268  61
     C                     Z-ADD*ZERO     WL0269  61
     C                     Z-ADD*ZERO     WL0270  61
     C                     Z-ADD*ZERO     WL0271  61
     C                     Z-ADD*ZERO     WL0272  61
     C                     Z-ADD*ZERO     WL0273  61
     C                     Z-ADD*ZERO     WL0274  61
     C                     Z-ADD*ZERO     WL0275  61
     C                     Z-ADD*ZERO     WL0276  61
     C                     Z-ADD*ZERO     WL0277  61
     C                     Z-ADD*ZERO     WL0278  61
     C                     Z-ADD*ZERO     WL0279  61
     C                     Z-ADD*ZERO     WL0280  61
     C                     Z-ADD*ZERO     WL0281 112
     C                     Z-ADD*ZERO     WL0282  52
     C                     MOVEL*BLANK    WL0283  1
     C                     Z-ADD*ZERO     WL0284  70
     C                     Z-ADD*ZERO     WL0285  70
      * Define local variables for subroutine TBCRRC.
     C                     Z-ADD*ZERO     WL0286  70
     C                     Z-ADD*ZERO     WL0287  70
     C                     Z-ADD*ZERO     WL0288  61
     C                     Z-ADD*ZERO     WL0289  61
     C                     Z-ADD*ZERO     WL0290  61
     C                     Z-ADD*ZERO     WL0291  61
     C                     Z-ADD*ZERO     WL0292  61
     C                     MOVEL*BLANK    WL0293  1
      * Define local variables for subroutine TCRVGN.
     C                     Z-ADD*ZERO     WL0294  30
     C                     Z-ADD*ZERO     WL0295  70
     C                     Z-ADD*ZERO     WL0296  70
     C                     MOVEL*BLANK    WL0297  3
     C                     Z-ADD*ZERO     WL0298  70
     C                     Z-ADD*ZERO     WL0299  70
     C                     MOVEL*BLANK    WL0300  3
     C                     MOVEL*BLANK    WL0301  1
      * Define local variables for subroutine TDRVGN.
     C                     Z-ADD*ZERO     WL0302  30
     C                     MOVEL*BLANK    WL0303  1
     C                     Z-ADD*ZERO     WL0304  70
     C                     Z-ADD*ZERO     WL0305  70
     C                     MOVEL*BLANK    WL0306  3
     C                     Z-ADD*ZERO     WL0307  70
      * Define local variables for subroutine TERVGN.
     C                     Z-ADD*ZERO     WL0308  30
     C                     Z-ADD*ZERO     WL0309  70
     C                     Z-ADD*ZERO     WL0310  50
     C                     Z-ADD*ZERO     WL0311  40
     C                     Z-ADD*ZERO     WL0312  20
     C                     Z-ADD*ZERO     WL0313  30
     C                     MOVEL*BLANK    WL0314  1
     C                     Z-ADD*ZERO     WL0315  20
      * Define local variables for subroutine TFRVGN.
     C                     Z-ADD*ZERO     WL0316  30
     C                     Z-ADD*ZERO     WL0317  70
     C                     Z-ADD*ZERO     WL0318  40
     C                     Z-ADD*ZERO     WL0319  20
     C                     MOVEL*BLANK    WL0320  1
     C                     Z-ADD*ZERO     WL0321  20
      * Define local variables for subroutine TGRVGN.
     C                     Z-ADD*ZERO     WL0322  30
     C                     Z-ADD*ZERO     WL0323  70
     C                     Z-ADD*ZERO     WL0324  30
     C                     Z-ADD*ZERO     WL0325  30
     C                     Z-ADD*ZERO     WL0326 112
      * Define local variables for subroutine THRVGN.
     C                     Z-ADD*ZERO     WL0327  70
     C                     Z-ADD*ZERO     WL0328  50
     C                     Z-ADD*ZERO     WL0329  70
     C                     Z-ADD*ZERO     WL0330 112
     C                     Z-ADD*ZERO     WL0331 112
     C                     Z-ADD*ZERO     WL0332 112
     C                     Z-ADD*ZERO     WL0333  70
     C                     MOVEL*BLANK    WL0334  1
     C                     Z-ADD*ZERO     WL0335  70
     C                     MOVEL*BLANK    WL0336  1
      * Define local variables for subroutine TICHRC.
     C                     Z-ADD*ZERO     WL0337  70
     C                     Z-ADD*ZERO     WL0338  61
     C                     Z-ADD*ZERO     WL0339  61
      * Define local variables for subroutine TKCHRC.
     C                     Z-ADD*ZERO     WL0340  70
     C                     Z-ADD*ZERO     WL0341  61
     C                     Z-ADD*ZERO     WL0342  61
     C                     MOVEL*BLANK    WL0343  1
      * Define local variables for subroutine TLRVGN.
     C                     Z-ADD*ZERO     WL0344  70
     C                     Z-ADD*ZERO     WL0345  70
      * Define local variables for subroutine TMRVGN.
     C                     Z-ADD*ZERO     WL0346  70
     C                     Z-ADD*ZERO     WL0347  50
     C                     Z-ADD*ZERO     WL0348  70
     C                     Z-ADD*ZERO     WL0349 112
     C                     Z-ADD*ZERO     WL0350 112
     C                     Z-ADD*ZERO     WL0351 112
     C                     Z-ADD*ZERO     WL0352  70
     C                     MOVEL*BLANK    WL0353  1
      * Define local variables for subroutine TNRVGN.
     C                     Z-ADD*ZERO     WL0354  70
     C                     Z-ADD*ZERO     WL0355 112
      * Define local variables for subroutine TORVGN.
     C                     Z-ADD*ZERO     WL0356  30
     C                     Z-ADD*ZERO     WL0357  70
     C                     MOVEL*BLANK    WL0358  3
     C                     Z-ADD*ZERO     WL0359  70
     C                     Z-ADD*ZERO     WL0360  70
      * Define local variables for subroutine TRRVGN.
     C                     Z-ADD*ZERO     WL0361  70
     C                     Z-ADD*ZERO     WL0362  61
     C                     Z-ADD*ZERO     WL0363  61
     C                     Z-ADD*ZERO     WL0364  61
     C                     MOVEL*BLANK    WL0365  1
      * Define local variables for subroutine TSRVGN.
     C                     Z-ADD*ZERO     WL0366  70
     C                     MOVEL*BLANK    WL0367  1
      * Define local variables for subroutine TTRVGN.
     C                     Z-ADD*ZERO     WL0368  30
     C                     Z-ADD*ZERO     WL0369  70
     C                     MOVEL*BLANK    WL0370  1
     C                     MOVEL*BLANK    WL0371  1
     C                     Z-ADD*ZERO     WL0372  70
      * Define local variables for subroutine NARVGN.
     C                     MOVEL*BLANK    WL0373 10
     C                     MOVEL*BLANK    WL0374  1
     C                     MOVEL*BLANK    WL0375 10
     C                     MOVEL*BLANK    WL0376  3
     C                     Z-ADD*ZERO     WL0377  30
     C                     MOVEL*BLANK    WL0378 10
      * Define local variables for subroutine NBRVGN.
     C                     MOVEL*BLANK    WL0379 10
     C                     MOVEL*BLANK    WL0380  6
     C                     Z-ADD*ZERO     WL0381  30
     C                     MOVEL*BLANK    WL0382  3
      * Define local variables for subroutine NCRVGN.
     C                     MOVEL*BLANK    WL0383  3
     C                     Z-ADD*ZERO     WL0384  30
      * Define local variables for subroutine NRRVGN.
     C                     Z-ADD*ZERO     WL0385  70
     C                     Z-ADD*ZERO     WL0386  50
     C                     Z-ADD*ZERO     WL0387  70
     C                     Z-ADD*ZERO     WL0388  50
      * Define local variables for subroutine OGRVGN.
     C                     MOVEL*BLANK    WL0389  6
     C                     MOVEL*BLANK    WL0390 30
      * Define null work field Header Status Last
     C                     MOVEL*BLANK    YN0001  1
      * Define null work field New Customer Hold
     C                     MOVEL*BLANK    YN0002  1
      * Define local work field Warehouse Code
     C                     MOVEL*BLANK    YL0001  3
      * Define local work field PS Production Warehouse
     C                     MOVEL*BLANK    YL0002  3
      * Define local work field Lot Tracking Flag
     C                     MOVEL*BLANK    YL0003  1
      * Define local work field PS Production Warehouse
     C                     MOVEL*BLANK    YL0004  3
      * Define local work field Billing Activity Type
     C                     MOVEL*BLANK    YL0005  1
      * Define local work field Production Date
     C                     Z-ADD*ZERO     YL0006  70
      * Define local work field Order Scheduled Today USR
     C                     MOVEL*BLANK    YL0007  1
      * Define local work field Order in Use
     C                     MOVEL*BLANK    YL0008  1
      * Define local work field Header Status
     C                     MOVEL*BLANK    YL0009  1
      * Define local work field Load ID
     C                     Z-ADD*ZERO     YL0010  70
      * Define local work field USR Production
     C                     MOVEL*BLANK    YL0011  1
      * Define local work field Header Status Last
     C                     MOVEL*BLANK    YL0012  1
      * Define local work field Header Status
     C                     MOVEL*BLANK    YL0013  1
      * Define local work field Status - Y or N
     C                     MOVEL*BLANK    YL0014  1
      * Define local work field Company Number
     C                     Z-ADD*ZERO     YL0015  30
      * Define local work field Warehouse Code
     C                     MOVEL*BLANK    YL0016  3
      * Define local work field Shipping Company
     C                     Z-ADD*ZERO     YL0017  30
      * Define local work field Order Requires Review
     C                     MOVEL*BLANK    YL0018  2
      * Define null work field Ship To State Code
     C                     MOVEL*BLANK    YN0003  2
      * Define local work field Shipping Method
     C                     MOVEL*BLANK    YL0019  2
      * Define local work field Hours Required
     C                     Z-ADD*ZERO     YL0020  51
      * Define local work field Additional Route Hours
     C                     Z-ADD*ZERO     YL0021  50
      * Define local work field PFS AccuSort Active
     C                     MOVEL*BLANK    YL0022  1
      * Define local work field PFS Carlisle Active
     C                     MOVEL*BLANK    YL0023  1
      * Define null work field Default Printer
     C                     MOVEL*BLANK    YN0004 10
      * Define local work field Include in Auto Pre Pick
     C                     MOVEL*BLANK    YL0024  1
      * Define null work field Company Number
     C                     Z-ADD*ZERO     YN0005  30
      * Define local work field Company Number
     C                     Z-ADD*ZERO     YL0025  30
      * Define local work field Warehouse Code
     C                     MOVEL*BLANK    YL0026  3
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   ##CMP
     C                     IN   *NAMVAR
      *................................................................
     C                     Z-ADD03        ##SFPG  30       SFLPAG
     C                     Z-ADD1         ##SFRC
      * Maximum record number
     C                     Z-ADD*ZERO     ##RRMX
      * Scan limit
     C                     Z-ADD000000500 W0SLM   90
      * Subfile pages
     C                     Z-ADD1         W0SPG   30
      * Processed Subfile record
     C                     Z-ADD0         W0RR0   40
      *................................................................
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      * ***** PA PROCESS - USE REQUESTED SHIP DATE FOR Ship Date USR ****
      *
     C                     MOVEL*BLANK    WN0818 10        User Profile Na
      *
      * VAL Set Inter. Access  IF
     C                     MOVEL##USR     WN0818           User Profile Na
      *
     C                     MOVEL*BLANK    WN0819 10        User Code Model
      *
      * VAL User/Application   IF
      * RMC 5/11/09 Rtv default company from user profile --
      *   Override user code model company if it exists
      * RTV Program Setup w/Co RT - User Profile Control  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0818    WL0373    P      User Profile Na
     C                     EXSR NARVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0374    WUI6ST    P      Allow Multi-Com
     C                     MOVELWL0375    WUMPNA    P      Default Printer
     C                     MOVELWL0376    WUBCCD    P      Salesperson Cod
     C                     Z-ADDWL0377    YL0025           Company Number
     C                     MOVELWL0378    WN0819    P      User Code Model
      * User Profile Record Not found
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ @CN,003                    *IF
      * SET Message Queue Dest US - /UT User Source  * 
     C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
      * Setup message data for message
     C                     MOVELWN0818    ZA0036           User Profile Na
     C                     MOVEL'OMS'     ZA0037           Application Cod
      * Send message 'Application access denied'
     C                     MOVEL'USR0810' ZAMSID
     C                     MOVEL'*PRV '   ZAPGRL           Rel queue
     C                     MOVEL'*COMP  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y2U9999' P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
      * CASE: PAR.User Code Model is equal to blank
     C           WN0819    IFEQ *BLANK                     *IF
      * RTV Appl. Profile      RT - User Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0818    WL0379    P      User Profile Na
     C                     MOVEL'OMS'     WL0380    P      Application Cod
     C                     EXSR NBRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0381    YN0005           Company Number
     C                     MOVELWL0382    YL0026    P      Warehouse Code
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Appl. Profile      RT - User Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0819    WL0379    P      User Profile Na
     C                     MOVEL'OMS'     WL0380    P      Application Cod
     C                     EXSR NBRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0381    YN0005           Company Number
     C                     MOVELWL0382    YL0026    P      Warehouse Code
     C                     END                             *FI
     C                     MOVELYL0026    WUAJCD           Warehouse Code
      * Return code when not normal for Application Profile
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * SET Message Queue Dest US - /UT User Source  * 
     C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
      * Setup message data for message
     C                     MOVELWN0818    ZA0038           User Profile Na
     C                     MOVEL'OMS'     ZA0039           Application Cod
      * Send message 'Application access denied'
     C                     MOVEL'USR0810' ZAMSID
     C                     MOVEL'*PRV '   ZAPGRL           Rel queue
     C                     MOVEL'*COMP  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y2U9999' P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
      * Override company with User profile control's company if found
      * CASE: LCL.Company Number is not equal to zero
     C           YL0025    IFNE 0                          *IF
     C                     Z-ADDYL0025    YN0005           Company Number
      * Get prod warehouse, if the appl got a warehouse
      * CASE: LCL.Warehouse Code is Not Blanks
     C           YL0026    IFNE *BLANK                     *IF
      * RTV Prod Whse for Co  XF - Warehouse  * 
     C                     CALL 'PNKDXFR'              90  RTV Prod Whse f
     C                     PARM *BLANK    W0RTN   7
     C           WUAJCD    PARM *BLANK    WQ0203  3        Warehouse Code
     C                     PARM YL0025    WQ0204  30       Shipping Compan
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNKDXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
     C                     END                             *FI
      * SET Screen Headings    IF
      * RTV Applic. Group Desc RT - Application  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL'OMS'     WL0389    P      Application Cod
     C                     EXSR OGRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0390    WUAUNA    P      Description
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * CLC Center Txt Str 40  US - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc-Co Head  US - /UT User Source  * 
     C                     MOVE WUDE40    ##CMP  40
      * VAL Rtv and Center Hdg IF
      * SET Screen Headings    IF
      * RTV Applic. Group Desc RT - Application  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL'P/S'     WL0389    P      Application Cod
     C                     EXSR OGRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0390    WUAUNA    P      Description
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * CLC Center Txt Str 40  US - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc-Co Head  US - /UT User Source  * 
     C                     MOVE WUDE40    ##CMP  40
      * 11/02/09 PKD Allow Sched as Order -renamed to App WHS Restrict
     C                     MOVEL'N'       WUGHST           Process Post US
     C                     MOVEL'N'       YL0014           Status - Y or N
      * ***** Change Log and comments
     C                     EXSR UISUBR                     ***** Change Lo
      * Initialise subfile control
     C                     EXSR MEIZ#2
      *================================================================
     CSR         ZZEXIT    ENDSR
** @CN
00001 USR0752
00002 Released
00003 Y2U0005
00004 PDIZPCLP
00005 Auto Print Prelim. Pick
00006 PDSNPFR
