      *
      * ENVIRONMENT: Pork Division
      * SYSTEM:      OMS---Datamart Sales
      * PROGRAM:     SH201 - Datamart Sales: Build Item
      * PROGRAMMER:  Alice
      * CREATED:     03/24/00
      *
      * FUNCTION: This program consolidates a number of files
      *           in the OMS-Order Management System into an Item
      *           Master for Datamart.
      *
      *           This file in the Data Mart will be re-created with
      *           each load of the Data Mart.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * Date      Programmer
      * 7/16/02   Barb Gutierrez
      *           Added primal group code and item category 2 code descr to
      *           datamart file.
      *           scan:  bg020716
      *
      * 6/11/03   Barb Gutierrez
      *           The new item structure is being implemented so all or our
      *           hard coding of the primal group structure will go away.
      *           scan:  bg030611
      *
      * 04/16/04  Barb Gutierrez
      *           Recompile only.
      *
      * 04/30/04  Barb Gutierrez
      *           Populate the commissionable item flag.
      *
      * 01/25/05  Barb Gutierrez
      *           File PPAHREL1 was changed to remove the company number &
      *           add a field for export commissions. Had to remove the
      *           company number from the key (key04).
      *
      * 03/22/06  LeAnne Fedor
      *           Added 3 new fields to Datamart Item file:
      *             ITTFEXCD - TF Exempt Code
      *             ITTFCLCD - TF Classification Code
      *             ITTFCGCD - TF Class Group Code
      *
      * 09/19/06  LeAnne Ramsey
      *           Recompile only. Synon file PPAMREP was changed.
      *
      * 05/02/07  LeAnne Ramsey
      *           Recompile only. Synon file PPAMREP was changed.
      *
      * 07/31/07  LeAnne Ramsey
      *           Four fields/logic were removed:
      *            1) MTO Code
      *            2) MTO Type Code
      *            3) SBD Equivalent
      *            4) SBD Equivalent Description
      *
      * 07/31/07  LeAnne Ramsey
      *           Added logic to add the following fields
      *            1) Item Account Type
      *            2) Green Weight
      *
      * 09/04/07  LeAnne Ramsey
      *           Recompiled in Production.
      *
      * 09/04/07  LeAnne Ramsey
      *           Added "Company Organization" as an incoming parm.
      *           Added from the Item Default file:
      *                  Credit Item Status
      *                  Seconds Item
      *                  GL Sub Code
      *
      * 11/16/07  LeAnne Ramsey
      *           We are taking out the logic to change Company Organization to
      *           B=Both when both SBD and Dailys sells an Item. We are doing this
      *           because Items with the "same" Item Code are not the same Item for
      *           SBD and Dailys. So, we will write one record for each unique
      *           Item for SBD (disregard Company) and one record for each unique
      *           Item for Dailys (disregard Company).
      *
      * 12/31/07  LeAnne Ramsey
      *           Added new field 'Market Code' to Datamart Item file.
      *
      * 01/11/08  LeAnne Ramsey
      *           Added new fields:  Market Name
      *                              Market Salesperson Code
      *                              Market Salesperson Name
      *                              Market Broker Code
      *                              Market Broker Name
      *
      * 01/17/08  LeAnne Ramsey
      *           Changed doc/text only. File PMDDREP is now called "Sales Market"
      *           instead of "customer market".
      *
      * 10/21/08  LeAnne Ramsey
      *           Recompile only. New field "Commission Schedule" added to PMDDREP.
      *
      * 01/16/08  LeAnne Ramsey
      *           Two new fields were added to SHP201:
      *                1) Product Type Code
      *                2) Product Type Description
      *
      * 01/28/09  LeAnne Ramsey
      *           Two new fields were added to SHP201:
      *                1) View Sequence Number
      *                2) Focus Flag
      *
      * 02/28/12  LeAnne Ramsey (E1960)
      *           Recompile only. Purva added fields to PME3CPL1-Item Focus Group.
      *
      * 02/29/12  LeAnne Ramsey (E1960)
      *           Two new fields were added to SHP201:
      *                1) Report Group 1 Code
      *                2) Report Group 1 Description
      *           Note: These are the "Tom Blumhardt" grouping fields.
      *           (FYI: After we installed this, the users decided not to use it.
      *                 They had us do the SubClass change below instead.)
      *
      * 04/09/12  LeAnne Ramsey  (E1960)
      *           Two new fields were added to SHP201:
      *                1) Item Structure SubClass Code
      *                2) Item Structure SubClass Description
      *           SubClass is not required on an Item. So, when SubClass is
      *           blank, we will just plop Class into SubClass.
      *
      * 04/19/12  LeAnne Ramsey  (E1960)
      *           When SubClass is blank, we will now populate the description
      *           with: ClassCode + 'No Subclass'
      *
      * 09/18/13  LeAnne Ramsey  (E2782)
      *           Added field: Sold 100% Frozen Flag (ITSLFZFL).
      *
      * 10/29/13  LeAnne Ramsey  (E2848)
      *           Added 2 field: Sales Yield Rate (ITSYRT)
      *                          Production Yield Rate (ITPYRT)
      *
      * 11/25/13  LeAnne Ramsey  (E2899)
      *           Added 2 new fields to SHP201-Item:
      *               COMMODITY PRICE GROUP (ITLRCD)
      *               COMMODITY PRICE GRP DESC (ITCMPGDS)
      *
      * 01/02/14  LeAnne Ramsey  (E2964)
      *           Added a new field to SHP201-Item:
      *               MPR to USDA Flag (ITMPRFL)
      *
      * 04/07/17  Danny Nguyen   (R9970)
      *           Added Company Number (ITCONO) field to Item (SHP201) file.
      *           We will now write a SHP201 record for each Company/Item/Org.
      *
      * 06/27/17  Danny Nguyen   (R9970)
      *           Exclude Company Number=999 from Company/Item file.
      *
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fcaaprel1  if   e           k disk
      *  Salesperson
      *
      *
     Fcabzrela  if   e           k disk
      *  Company/Item  (logical selects only FG records)
      *
      *
     Fombyrel1  if   e           k disk
      *  Item default
      *
      *
     Fome8rel1  if   e           k disk
      *  Item structure type
      *
      *
     Fome9rel0  if   e           k disk
      *  Item structure group
      *
      *
     Fomfarel1  if   e           k disk
      *  Item structure class
      *
     Fomfzrel0  if   e           k disk
      *  Commodity group
      *
      *
     Fpbajrel1  if   e           k disk
      *  Item report group
      *
      *
     Fpdiorel4  if   e           k disk
      *  Bill of materials
      *  (LF selects only records where Active/Produced records)
      *
      *
     Fpdjirel3  if   e           k disk
      *    Item category
      *
      *
     Fpmddrel1  if   e           k disk
      *  Sales market
      *
      *
     Fpmdfrel1  if   e           k disk
      *  Sales product type
      *
      *
     Fpme3cpl1  if   e           k disk
      *  Item sales focus type
      *
      *
     Fpmfdrel2  if   e           k disk
      *  Company item extension
      *
      *
     Fpoazcpl1  if   e           k disk
      *  FG Item packaging BOM
      *
      *
     Fpoarrel1  if   e           k disk
      *  Packaging item master
      *
      *
     Fpoc5rel1  if   e           k disk
      *  Broker
      *
      *
     Fppahrel1  if   e           k disk
      *  Accrual code detail
      *
      *
     Fppamrel1  if   e           k disk
      *    TF Classification
      *
      *
     Fshp201    uf a e           k disk
      *    Datamart: Item
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  Named Constants
      *---------------------------------------------------------------
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *
      *---------------------------------------------------------------
      * Standalone fields
      *---------------------------------------------------------------
      *
      * Workfields
      *
     D wkgroup1        s              3  0 inz(1)
     D wkcode          s              3a
     D wkitcdalph      s              7a
     D wknonzero       s              7  0
     D wkojcd          s                   like(ahojcd)
      *
      *
      * Parms
      *
     D xxcorg          s                   like(itcorg)
      *
      ****************************************************************
      * Data Structures
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * Mainline
      ****************************************************************
      *
      * Read each record in the OMS Company/Item master file.
      *
     C     *loval        setll     cabzrela
      *
     C                   dou       *in90 = *on                                  Main do loop
     C                   read      cabzrela                               90
     C                   if        *in90 = *off                                 If not EOF
      *
R9970 ** Exclude Company Number = 999.
R9970C                   if        BZAIC3 <> 999                                Cmp not 999
      *
      * We want 1 record per Item per Company Organization.
      * So, if an Item already exists for Seaboard or an Item already
      * exists for Dailys, do not continue processing.
R9970 * Added Company Number to SHP201 file. Will now read by Company/Item/CmpOrg
      *
     C     key01         chain     shp201                             92
     C                   if        *in92 = *off                                 If already exists
     C                   else
      *
      * You will be writing a new record.
      *
     C                   clear                   itrec
      *
      * Populate: Company Organization
      *           Fields that are a direct map
      *           Item BAG info
      *           Commissionable Item flag
      *           Item related descriptions
      *           Item Default info
      *           BOM info
      *
     C                   move      xxcorg        itcorg
     C                   exsr      $directmap
     C                   exsr      $mpr
     C                   exsr      $bags
     C                   exsr      $commfl
     C                   exsr      $otherdesc
     C                   exsr      $item
     C                   exsr      $bom
      *
      * Write record
     C                   write     itrec
      *
     C                   endif                                                  If already exists
R9970C                   endif                                                  Cmp not 999
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do loop
      *
     C                   seton                                        lr
      /EJECT
      *-------------------------------------------------------------------
      * Populate fields that are a direct map from OMS Company/Item Master
      *-------------------------------------------------------------------
      *
     C     $directmap    begsr
      *
R9970 * Company Number
R9970C                   z-add     bzaic3        itcono
      * Item code
     C                   z-add     bzhgcd        ititcd
     C                   move      bzvsst        itstatus
      *
      * Unit weight
     C                   z-add     bzaiwg        ituwt
      *
      * UOM
     C                   move      bzadcd        ituom
      *
      * Market overage
     C                   z-add     bzblpr        itmkovrt
      *
      * Standard over/under
     C                   z-add     bzbmpr        itsdovrt
      *
      * Export/domestic
     C                   move      bzsust        itexdmfl
      *
      * Sales Realization Flag
      *
     C                   move      bzx6st        itrealfl
      *
      * Item Structure codes:
      *   1) type
      *   2) group
      *   3) class
      *   4) subclass (E1960)
     C                   move      bzrgnb        itsttycd
     C                   move      bzrhnb        itstgrcd
     C                   move      bzrinb        itstclcd
     C                   move      bzszcd        itstsbclcd
      *
      * Determine if the item is a value added item or not.....
      *
     C                   if        bzs6st = 'Y'
     C                   movel     'VA '         itcat4cd
     C                   else
     C                   move      *blank        itcat4cd
     C                   endif
      *
      * Concatenate item code and description together into a single field.
      * (Note: Remove leading zeros from item code).
      *
     C                   move(p)   ititcd        wkitcdalph
     C     '0'           check     wkitcdalph    wknonzero
     C                   eval      wkitcdalph = %subst(wkitcdalph:wknonzero)
      *
     C                   eval      ititds = %trimr(wkitcdalph) + '-' +
     C                                        %trim(bzavna)
      * Item Account Type
      * Green Weight
     C                   eval      ititmact = bzrbcd
     C                   z-add     bzcvnb        itgrnwt
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Retrieve the "mandatory price reporting to USDA flag" from the
      * Company/Item Extension file.
      *---------------------------------------------------------------
      *
     C     $mpr          begsr
      *
     C     key03         chain     pmfdrel2                           92
     C                   if        *in92 = *off
     C                   movel     fdeqst        itmprfl
     C                   endif
      *
      * If the field is blank, plop NO into the field.
      *
     C                   if        itmprfl = *blank
     C                   movel     'N'           itmprfl
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Determine if this is a "bagged" item using the Packaging BOM.
      * Then determine if the bag being used is "Preprinted" or "Plain".
      *---------------------------------------------------------------
      *
     C     $bags         begsr
     C                   move      'N'           itbgitfl                       Bagged Item
     C                   move      'N'           itbgppfl                       Preprinted Bag
      *
      * Look for any packaging code on the BOM that has a "200" Pkg Type Class
      *
     C     key03         setll     poazcpl1
     C                   dou       *in95 = *on                                  Do loop
     C     key03         reade     poazcpl1                               95
     C                   if        *in95 = *off                                 If not eof
      *
      * Check Packaging Item file and set values for:
      *    Bagged Item Flag
      *    Preprinted Bag Flag
      *
     C     key05         chain     poarrel1                           92
     C                   if        *in92 = *off and areaaa = '200'
     C                   move      'Y'           itbgitfl
     C                   move      arnhsx        itbgppfl
     C                   move      *on           *in95
     C                   endif
      *
     C                   endif                                                  If not eof
     C                   enddo                                                  Do loop
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Determine if this is a commissionable item or not.  The item
      * can be on both schedules.
      *---------------------------------------------------------------
      *
     C     $commfl       begsr
     C                   move      'N'           itcomfl
      *
      * Does the item exist as a schedule A item in the Accrual Code Detail file.
      *
     C                   move      'BK1'         wkojcd
     C     key04         chain     ppahrel1                           91
     C                   if        *in91 = *off                                 If hit
     C                   move      'Y'           itcomfl
     C                   else
      *
      * if the item does not exist as a schedule A item, does it exist as a
      * schedule B item?
      *
     C                   move      'BK2'         wkojcd
     C     key04         chain     ppahrel1                           93
     C                   if        *in93 = *off
     C                   move      'Y'           itcomfl
     C                   endif
     C                   endif                                                  If hit
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Retrieve all other item related descriptions
      *---------------------------------------------------------------
      *
     C     $otherdesc    begsr
      *
      *
      * Retrieve class description from OMS Item Structure Class file
      * and concatenate it with class code into a single description field.
      *
     C     itstclcd      chain     omfarel1                           92
     C                   if        *in92 = *off
     C                   move(p)   itstclcd      wkcode
     C                   eval      itstclds = %trim(wkcode) + '-' +
     C                                        %trim(fadetx)
      *
      * beg:  bg030611 - Still need to temporarily update category code & descr 3
      *                  in the datamart until all reports are converted to the
      *                  new item structure.
      *
     C                   movel(p)  fadetx        itcat3ds
     C                   movel     itstclcd      itcat3cd
      * end:  bg030611
     C                   endif
      *
      *
      * Retrieve SubClass Description from the Item Category master file
      * and concatenate it with subclass code into a single description field.
      * If SubClass is blank, use the Class Code and a hardcoded description.
      *
     C                   if        itstsbclcd = *blank                          If no subclass
     C                   move(p)   itstclcd      itstsbclcd
     C                   move(p)   itstsbclcd    wkcode
     C                   eval      itstsbclds = %trim(wkcode) + '-' +
     c                                          'No Subclass'
     C                   else
     C     itstsbclcd    chain     pdjirel3                           92
     C                   if        *in92 = *off
     C                   move(p)   itstsbclcd    wkcode
     C                   eval      itstsbclds = %trim(wkcode) + '-' +
     c                                          %trim(jiauna)
     C                   endif
     C                   endif                                                  If no subclass
      *
      * Retrieve group description from OMS Product Group file and
      * concatenate it with group code into a single description field.
      *
     C     itstgrcd      chain     ome9rel0                           92
     C                   if        *in92 = *off
     C                   move(p)   itstgrcd      wkcode
     C                   eval      itstgrds = %trim(wkcode) + '-' +
     C                                        %trim(e9ddtx)
      *
      * beg:  bg030611 - Still need to temporarily update category code & descr 2
      *                  in the datamart until all reports are converted to the
      *                  new item structure.
      *
     C                   movel(p)  e9ddtx        itcat2ds
     C                   movel     itstgrcd      itcat2cd
      * end:  bg030611
     C                   endif
      *
      * Retrieve type description from OMS Product Type file and
      * concatenate it with tupe code into a single description field.
      *
     C     itsttycd      chain     ome8rel1                           92
     C                   if        *in92 = *off
     C                   move(p)   itsttycd      wkcode
     C                   eval      itsttyds = %trim(wkcode) + '-' +
     C                                        %trim(e8dctx)
      *
      * beg:  bg030611 - Still need to temporarily update the primal group code
      *                  in the datamart until all reports are converted to the
      *                  new item structure.
      *
     C                   movel(p)  e8dctx        itprgpcd
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Retrieve values from Item Default file
      *---------------------------------------------------------------
      *
      *   1) Market code
      *   2) TF exempt code
      *   3) TF classification code
      *   4) Credit Item Status
      *   5) Seconds Item
      *   6) GL Sub Code
      *
     C     $item         begsr
      *
     C     ititcd        chain     ombyrel1                           92
     C                   if        *in92 = *off                                 If hit
     C                   move      bylmcd        itmkcd
     C                   move      bys9st        ittfexcd
     C                   move      bytcst        ittfclcd
     C                   move      byvmst        itcist
     C                   move      byx5st        itsist
     C                   move      bysycd        itglsub
     C                   move      bys4st        itslfzfl
     C                   move      bylrcd        itlrcd
      *
      * Retrieve the Commodity Price Group Description
      *
     C     bylrcd        chain     omfzrel0                           92
     C                   if        *in92 = *off
     C                   eval      itcmpgds = fzj4na
     C                   endif
      *
      * Retrieve TF Class Group Code
      *
     C     ittfclcd      chain     ppamrel1                           92
     C                   if        *in92 = *off
     C                   move      amsvsx        ittfcgcd
     C                   endif
      *
      * Retrieve info for this Market Code from Sales Market file.
      *   1) Market Description
      *   2) Market Salesperson Code
      *   3) Market Broker Code
      *
     C     itmkcd        chain     pmddrel1                           92
     C                   if        *in92 = *off
     C                   move      ddr3na        itmkds
     C                   move      ddbccd        itmkspcd
     C                   move      ddhhaa        itmkbkcd
     C                   endif
      *
      * Retrieve Market Salesperson Name from Salesperson file
      *
     C                   if        itmkspcd <> *blank
     C     itmkspcd      chain     caaprel1                           92
     C                   if        *in92 = *off
     C                   eval      itmkspnm = apaltx
     C                   endif
     C                   endif
      *
      * Retrieve Market Broker Name from Broker file
      *
     C                   if        itmkbkcd <> *blank
     C     itmkbkcd      chain     poc5rel1                           92
     C                   if        *in92 = *off
     C                   eval      itmkbknm = c5c4t1
     C                   endif
     C                   endif
      *
      * Retrieve from Item Sales Focus Type:
      *  1) Product Type Code
      *  2) Item Report Group 1 Code (aka: the Tom Blumhardt code!!)
      *
     C     ititcd        chain     pme3cpl1                           92
     C                   if        *in92 = *off                                 If type hit
     C                   eval      itptcd = e3iwaa
     C                   eval      itirg1cd = e3pcaa
      *
      * Retrieve Product Type Description from Sales Product Type
      *
     C     itptcd        chain     pmdfrel1                           92
     C                   if        *in92 = *off
     C                   eval      itptds = dfr7na
     C                   z-add     dfodny        itvseqno
     C                   move      dfc7st        itfocfl
     C                   endif
      *
      * Retrieve Item Report Group 1 Description from Item Report Group
      *
     C     key06         chain     pbajrel1                           92
     C                   if        *in92 = *off
     C                   eval      itirg1ds = ajuana
     C                   endif
     C                   endif                                                  If type hit
     C                   endif                                                  If hit
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Retrieve Sales Yield and Production Yield from the BOM file
      *---------------------------------------------------------------
      *
      * Retrieve the BOM Sales Yield % and Production Yield % from the BOM
      * record where the Item produces itself (the Item/Component Item are the same).
      * Store them in the Datamart file as "rates".
      *
     C     $bom          begsr
      *
     C     key07         chain     pdiorel4                           92
     C                   if        *in92 = *off
     C                   eval      itsyrt = iobopr / 100
     C                   eval      itpyrt = iobppr / 100
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
     C     *entry        plist
     C                   parm                    xxcorg
      *
      * Key Lists
      *
     C     key01         klist
R9970C                   kfld                    bzaic3                         Company
     C                   kfld                    bzhgcd                         Item Code
     C                   kfld                    xxcorg                         Comp Organization
      *
     C     key03         klist
     C                   kfld                    bzaic3                         Company
     C                   kfld                    bzhgcd                         Item Code
      *
     C     key04         klist
     C                   kfld                    wkojcd                         accrual code
     C                   kfld                    bzhgcd                         Item Code
      *
     C     key05         klist
     C                   kfld                    bzaic3                         Company
     C                   kfld                    azbraa                         PKG Item Code
      *
     C     key06         klist
     C                   kfld                    wkgroup1                       Hardcoded to 1
     C                   kfld                    itirg1cd                       Item rpt grp 1 code
      *
     C     key07         klist
     C                   kfld                    bzaic3                         Company
     C                   kfld                    ititcd                         Item Code
     C                   kfld                    ititcd                         Item Code
      *
     C                   endsr
      /EJECT
