// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PUQXXFR
// ?Date: 14.08.2025 Time: 03:51:07
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?RMC 4/17/20 R16455
//?Monitor to run for customers set up with SH-BOL, to email their BOLS
//?  1. Orders must be Shipped or Invoiced
//?  2. OHE BOL Sts must be "Y"
//?  3. Truck Departure Date/Time must be at least 4 hours ago
//?  4. If all TRUE: Email the BOL, and update the OHE STS with "S" sent
EXECUTE FUNCTION(RTV Eml Ords SH-BOL  RT) TYPE(RTVOBJ) FILE(PNF7REP)            AC2183994;
PARAMETER('SH-BOL');
{
 //?USER: Process Data record

 CASE;

 // IF DB1.Distribution Code is Shipping Bill of Lading
 IF DB1.Distribution_Code = 'SH-BOL';

 // AND DB1.Record Status is Active
 AND DB1.Record_Status = 'A';

 EXECUTE FUNCTION(RTV Cust Ord-BOL Email RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC2183995;
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(DB1.CDE_Destination_Type);
 PARAMETER(DB1.CDE_Destination);
 {
  //?USER: Initialize routine

  // PAR.Load Id 1 = CON.*ZERO
  PAR.Load_Id_1 = *ZERO;

  //?USER: Process Data record

  CASE;

  // IF DB1.Header Status is Confirmed & Complete
  IF DB1.Header_Status = 'C'/'R';

  // AND DB1.Load ID is Entered
  AND DB1.Load_ID <> *ZERO;

  // AND DB1.Order Type - Sales is Regular Order
  AND DB1.Order_Type_Sales = 'OR';

  //?Call Email job once for the load/cust
  CASE;

  // IF DB1.Load ID NE PAR.Load Id 1
  IF DB1.Load_ID <> PAR.Load_Id_1;

  EXECUTE FUNCTION(RTV EMAIL BOL Sts     RT) TYPE(RTVOBJ) FILE(PMAMREP)           AC2183962;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(LCL.OHE_Email_BOL_Sent);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

   QUIT;

  }

  //?Check delay time
  CASE;

  // IF LCL.OHE Email BOL/Sent is Need to Send
  IF LCL.OHE_Email_BOL_Sent = 'Y';

  // OR LCL.OHE Email BOL/Sent is Processing
  OR LCL.OHE_Email_BOL_Sent = 'P';

  EXECUTE FUNCTION(RTV Departure DT/TM   RT) TYPE(RTVOBJ) FILE(OMFJCPP)           AC2062272;
  PARAMETER(DB1.Load_ID);
  PARAMETER(LCL.Truck_Departure_Date);
  PARAMETER(LCL.Truck_Departure_Time);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   QUIT;

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

   QUIT;

  }

  CASE;

  // IF LCL.Truck Departure Date is GT Zero
  IF LCL.Truck_Departure_Date > *ZERO;

  // AND LCL.Truck Departure Time is Entered
  AND LCL.Truck_Departure_Time > *ZERO;

  // PAR.Hour 3 USR = CON.*ZERO
  PAR.Hour_3_USR = *ZERO;

  //?** Retrieve the appropriate delay time from Company Values file
  EXECUTE FUNCTION(RTV Numeric Value      RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1394480;
  PARAMETER(DB1.Company_Number);
  PARAMETER('INVDELAY');
  PARAMETER(PAR.System_Value_Numeric);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // PAR.Hour 2 usr = JOB.*Job time *HOURS
  PAR.Hour_2_usr = TIMEDTLS(JOB.*Job_time 'HR');

  // PAR.Hour 1 USR = LCL.Truck Departure Time *HOURS
  PAR.Hour_1_USR = TIMEDTLS(LCL.Truck_Departure_Time 'HR');

  CASE;

  // IF LCL.Truck Departure Date EQ JOB.*Job date
  IF LCL.Truck_Departure_Date = JOB.*Job_date;

  // PAR.Hour 3 USR = PAR.Hour 2 usr - PAR.Hour 1 USR
  PAR.Hour_3_USR = PAR.Hour_2_usr - PAR.Hour_1_USR;

  //?** If time is => than 4 hours - Then Email bol
  CASE;

  // IF PAR.Hour 3 USR GE PAR.System Value Numeric
  IF PAR.Hour_3_USR >= PAR.System_Value_Numeric;

  // LCL.Number Value - 7 = JOB.*Job number * CON.10 *
  LCL.Number_Value_7 = JOB.*Job_number * 10;

  // LCL.Number Value - 7 = LCL.Number Value - 7 + LCL.Count USR
  LCL.Number_Value_7 = LCL.Number_Value_7 + LCL.Count_USR;

  // LCL.Text USR 7 = CVTVAR(LCL.Number Value - 7)
  LCL.Text_USR_7 = CVTVAR(LCL.Number_Value_7);

  // LCL.Job Name CDE = CONCAT(CON.BOL,LCL.Text USR 7,CON.*ZERO)
  LCL.Job_Name_CDE = 'BOL' + LCL.Text_USR_7 (*ZERO);

  // LCL.Load ID Alpha USR = DB1.Load ID
  LCL.Load_ID_Alpha_USR = DB1.Load_ID;

  // LCL.Ship To Customer TXT = CVTVAR(DB1.Ship To Customer)
  LCL.Ship_To_Customer_TXT = CVTVAR(DB1.Ship_To_Customer);

  EXECUTE FUNCTION(RTV Whse Acct Co      RT) TYPE(RTVOBJ) FILE(OPBGWKP)           AC1809259;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(LCL.Accounting_Company);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   EXECUTE FUNCTION(Rtv Acct Co          RT) TYPE(RTVOBJ) FILE(CAADREP)            AC1802492;
   PARAMETER(DB1.Warehouse_Code);
   PARAMETER(PAR.Accounting_Company);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   QUIT;

  }

  //?EMAIL / FAX
  CASE;

  // IF PAR.CDE Destination Type is Email
  IF PAR.CDE_Destination_Type = 'E';

  //?submit job to email per jobname
  // LCL.CDD Type = CND.Bill of Lading - Email
  LCL.CDD_Type = 'BE';

  // LCL.CDD Department Code = CND.Traffic
  LCL.CDD_Department_Code = 'TRAFF';

  // Call program RTV CDD for Overlays   XF.
  CALL PROGRAM(RTV CDD for Overlays   XF) ('PMG9XFR');
  PARAMETER(LCL.Accounting_Company);
  PARAMETER(LCL.CDD_Type);
  PARAMETER(LCL.CDD_Department_Code);
  PARAMETER(LCL.Generic_Heading);
  PARAMETER(LCL.CDD_Program_Name);
  PARAMETER(LCL.CDD_Printer_File_Name);
  PARAMETER(LCL.CDD_Additional_Object);
  PARAMETER(LCL.CDD_Sender_Phone);
  PARAMETER(LCL.CDD_Sender_Fax);
  PARAMETER(LCL.Output_Queue);
  PARAMETER(LCL.Hold_File);
  PARAMETER(LCL.Save_File);
  PARAMETER(LCL.Source_Drawer);
  PARAMETER(LCL.Printer_Device_Type);
  PARAMETER(LCL.Page_Length_2);
  PARAMETER(LCL.Page_Width_2);
  PARAMETER(LCL.Page_LPI);
  PARAMETER(LCL.Page_CPI);
  PARAMETER(LCL.Page_Overflow);
  PARAMETER(LCL.Page_Rotation);
  PARAMETER(LCL.CDD_Comment_1);
  PARAMETER(LCL.CDD_Comment_2);
  PARAMETER(LCL.CDD_Comment_3);
  PARAMETER(LCL.CDD_Comment_4);
  PARAMETER(LCL.CDD_Comment_5);
  PARAMETER(LCL.Record_Status);

  // LCL.CDD Name of Overlay Back = CON.*BLANK
  LCL.CDD_Name_of_Overlay_Back = *BLANK;

  // Call program RTV CDD for Overlays   XF.
  CALL PROGRAM(RTV CDD for Overlays   XF) ('PMG9XFR');
  PARAMETER(LCL.Accounting_Company);
  PARAMETER('BK');
  PARAMETER('TRAFF');
  PARAMETER(LCL.CDD_Name_of_Overlay_Back);
  PARAMETER(NLL.CDD_Program_Name);
  PARAMETER(NLL.CDD_Printer_File_Name);
  PARAMETER(NLL.CDD_Additional_Object);
  PARAMETER(NLL.CDD_Sender_Phone);
  PARAMETER(NLL.CDD_Sender_Fax);
  PARAMETER(NLL.Output_Queue);
  PARAMETER(NLL.Hold_File);
  PARAMETER(NLL.Save_File);
  PARAMETER(NLL.Source_Drawer);
  PARAMETER(NLL.Printer_Device_Type);
  PARAMETER(NLL.Page_Length_2);
  PARAMETER(NLL.Page_Width_2);
  PARAMETER(NLL.Page_LPI);
  PARAMETER(NLL.Page_CPI);
  PARAMETER(NLL.Page_Overflow);
  PARAMETER(NLL.Page_Rotation);
  PARAMETER(NLL.CDD_Comment_1);
  PARAMETER(NLL.CDD_Comment_2);
  PARAMETER(NLL.CDD_Comment_3);
  PARAMETER(NLL.CDD_Comment_4);
  PARAMETER(NLL.CDD_Comment_5);
  PARAMETER(NLL.Record_Status);

  // LCL.Subject Line USR = CONCAT(CON.Bill of Lading for Load,LCL.Load ID Alpha USR,CON.2)
  LCL.Subject_Line_USR = 'Bill of Lading for Load' + LCL.Load_ID_Alpha_USR (2);

  // Call program CLP ESNDMAIL BOL-SBD  UP.
  CALL PROGRAM(CLP ESNDMAIL BOL-SBD  UP) ('PUQPUPC');
  PARAMETER(*BLANK);
  PARAMETER(PAR.CDE_Destination);
  PARAMETER(LCL.Subject_Line_USR);
  PARAMETER('Bill of Lading');
  PARAMETER(LCL.Job_Name_CDE);
  PARAMETER(LCL.Generic_Heading);
  PARAMETER(LCL.CDD_Name_of_Overlay_Back);
  PARAMETER(LCL.Load_ID_Alpha_USR);
  PARAMETER(LCL.Ship_To_Customer_TXT);

  //?EMAIL / FAX
  // IF PAR.CDE Destination Type is Fax
  IF PAR.CDE_Destination_Type = 'F';

  //?get fax bol cover sheet pgm
  // LCL.CDD Department Code = CND.TRAFFIC BOL Fax
  LCL.CDD_Department_Code = 'TRAFFX';

  // Call program RTV CDD for Overlays   XF.
  CALL PROGRAM(RTV CDD for Overlays   XF) ('PMG9XFR');
  PARAMETER(LCL.Accounting_Company);
  PARAMETER(LCL.CDD_Type);
  PARAMETER(LCL.CDD_Department_Code);
  PARAMETER(LCL.CDD_Name_of_Overlay);
  PARAMETER(LCL.CDD_Program_Name);
  PARAMETER(LCL.CDD_Printer_File_Name);
  PARAMETER(LCL.CDD_Additional_Object);
  PARAMETER(LCL.CDD_Sender_Phone);
  PARAMETER(LCL.CDD_Sender_Fax);
  PARAMETER(LCL.Output_Queue);
  PARAMETER(LCL.Hold_File);
  PARAMETER(LCL.Save_File);
  PARAMETER(LCL.Source_Drawer);
  PARAMETER(LCL.Printer_Device_Type);
  PARAMETER(LCL.Page_Length_2);
  PARAMETER(LCL.Page_Width_2);
  PARAMETER(LCL.Page_LPI);
  PARAMETER(LCL.Page_CPI);
  PARAMETER(LCL.Page_Overflow);
  PARAMETER(LCL.Page_Rotation);
  PARAMETER(LCL.CDD_Comment_1);
  PARAMETER(LCL.CDD_Comment_2);
  PARAMETER(LCL.CDD_Comment_3);
  PARAMETER(LCL.CDD_Comment_4);
  PARAMETER(LCL.CDD_Comment_5);
  PARAMETER(LCL.Record_Status);

  //?get fax bol overlay name
  // LCL.CDD Type = CND.Bill of Lading - Email
  LCL.CDD_Type = 'BE';

  // LCL.CDD Department Code = CND.TRAFFIC BOL Fax
  LCL.CDD_Department_Code = 'TRAFFX';

  // Call program RTV CDD for Overlays   XF.
  CALL PROGRAM(RTV CDD for Overlays   XF) ('PMG9XFR');
  PARAMETER(LCL.Accounting_Company);
  PARAMETER(LCL.CDD_Type);
  PARAMETER(LCL.CDD_Department_Code);
  PARAMETER(LCL.Generic_Heading);
  PARAMETER(LCL.CDD_Program_Name);
  PARAMETER(LCL.CDD_Printer_File_Name);
  PARAMETER(LCL.CDD_Additional_Object);
  PARAMETER(LCL.CDD_Sender_Phone);
  PARAMETER(LCL.CDD_Sender_Fax);
  PARAMETER(LCL.Output_Queue);
  PARAMETER(LCL.Hold_File);
  PARAMETER(LCL.Save_File);
  PARAMETER(LCL.Source_Drawer);
  PARAMETER(LCL.Printer_Device_Type);
  PARAMETER(LCL.Page_Length_2);
  PARAMETER(LCL.Page_Width_2);
  PARAMETER(LCL.Page_LPI);
  PARAMETER(LCL.Page_CPI);
  PARAMETER(LCL.Page_Overflow);
  PARAMETER(LCL.Page_Rotation);
  PARAMETER(LCL.CDD_Comment_1);
  PARAMETER(LCL.CDD_Comment_2);
  PARAMETER(LCL.CDD_Comment_3);
  PARAMETER(LCL.CDD_Comment_4);
  PARAMETER(LCL.CDD_Comment_5);
  PARAMETER(LCL.Record_Status);

  // LCL.CDD Name of Overlay Back = CON.*BLANK
  LCL.CDD_Name_of_Overlay_Back = *BLANK;

  // Call program RTV CDD for Overlays   XF.
  CALL PROGRAM(RTV CDD for Overlays   XF) ('PMG9XFR');
  PARAMETER(LCL.Accounting_Company);
  PARAMETER('BK');
  PARAMETER('TRAFF');
  PARAMETER(LCL.CDD_Name_of_Overlay_Back);
  PARAMETER(NLL.CDD_Program_Name);
  PARAMETER(NLL.CDD_Printer_File_Name);
  PARAMETER(NLL.CDD_Additional_Object);
  PARAMETER(NLL.CDD_Sender_Phone);
  PARAMETER(NLL.CDD_Sender_Fax);
  PARAMETER(NLL.Output_Queue);
  PARAMETER(NLL.Hold_File);
  PARAMETER(NLL.Save_File);
  PARAMETER(NLL.Source_Drawer);
  PARAMETER(NLL.Printer_Device_Type);
  PARAMETER(NLL.Page_Length_2);
  PARAMETER(NLL.Page_Width_2);
  PARAMETER(NLL.Page_LPI);
  PARAMETER(NLL.Page_CPI);
  PARAMETER(NLL.Page_Overflow);
  PARAMETER(NLL.Page_Rotation);
  PARAMETER(NLL.CDD_Comment_1);
  PARAMETER(NLL.CDD_Comment_2);
  PARAMETER(NLL.CDD_Comment_3);
  PARAMETER(NLL.CDD_Comment_4);
  PARAMETER(NLL.CDD_Comment_5);
  PARAMETER(NLL.Record_Status);

  //?submit job to fax bols per jobname
  // LCL.Company Number Pass   USR = LCL.Accounting Company
  LCL.Company_Number_Pass_USR = LCL.Accounting_Company;

  // LCL.Subject Line USR = CONCAT(CON.Bill of Lading for Load,LCL.Load ID Alpha USR,CON.2)
  LCL.Subject_Line_USR = 'Bill of Lading for Load' + LCL.Load_ID_Alpha_USR (2);

  // Call program CLP ESNDMAIL BOL-SBD  UP.
  CALL PROGRAM(CLP ESNDMAIL BOL-SBD  UP) ('PUQPUPC');
  PARAMETER(*BLANK);
  PARAMETER(PAR.CDE_Destination);
  PARAMETER(LCL.Subject_Line_USR);
  PARAMETER('Bill of Lading');
  PARAMETER(LCL.Job_Name_CDE);
  PARAMETER(LCL.Generic_Heading);
  PARAMETER(LCL.CDD_Name_of_Overlay_Back);
  PARAMETER(LCL.Load_ID_Alpha_USR);
  PARAMETER(LCL.Ship_To_Customer_TXT);

  ENDIF;

  // PAR.Load Id 1 = DB1.Load ID
  PAR.Load_Id_1 = DB1.Load_ID;

  ENDIF;

  ENDIF;

  CASE;

  // IF LCL.Truck Departure Date LT JOB.*Job date
  IF LCL.Truck_Departure_Date < JOB.*Job_date;

  // LCL.Days = JOB.*Job date - LCL.Truck Departure Date *DAYS
  LCL.Days = DURATION(JOB.*Job_date LCL.Truck_Departure_Date 'DY' 1111111 'NONE' 'N' 1);

  CASE;

  // IF LCL.Days is gt 1 day
  IF LCL.Days > 1;

  // PAR.Hour 3 USR = PAR.System Value Numeric
  PAR.Hour_3_USR = PAR.System_Value_Numeric;

  // IF *OTHERWISE
  IF *OTHERWISE;

  //?** If curr time is => 4am, Then Email bol
  CASE;

  // IF PAR.Hour 2 usr GE PAR.System Value Numeric
  IF PAR.Hour_2_usr >= PAR.System_Value_Numeric;

  // PAR.Hour 3 USR = PAR.System Value Numeric
  PAR.Hour_3_USR = PAR.System_Value_Numeric;

  ENDIF;

  //?** If curr time is <  4am, Then check against depart time
  CASE;

  // IF NOT PAR.Hour 2 usr GE PAR.System Value Numeric
  IF ! PAR.Hour_2_usr >= PAR.System_Value_Numeric;

  CASE;

  // IF PAR.Hour 1 USR GT PAR.Hour 2 usr
  IF PAR.Hour_1_USR > PAR.Hour_2_usr;

  // PAR.Hour 3 USR = PAR.Hour 1 USR - PAR.Hour 2 usr
  PAR.Hour_3_USR = PAR.Hour_1_USR - PAR.Hour_2_usr;

  // PAR.Hour 3 USR = CON.24 - PAR.Hour 3 USR
  PAR.Hour_3_USR = 24 - PAR.Hour_3_USR;

  // IF *OTHERWISE
  IF *OTHERWISE;

  //?more than 24 hours has passed
  // PAR.Hour 3 USR = PAR.System Value Numeric
  PAR.Hour_3_USR = PAR.System_Value_Numeric;

  ENDIF;

  ENDIF;

  ENDIF;

  //?Hour 3 IFGE the delay then Email the BOL
  CASE;

  // IF PAR.Hour 3 USR GE PAR.System Value Numeric
  IF PAR.Hour_3_USR >= PAR.System_Value_Numeric;

  // LCL.Number Value - 7 = JOB.*Job number * CON.10 *
  LCL.Number_Value_7 = JOB.*Job_number * 10;

  // LCL.Number Value - 7 = LCL.Number Value - 7 + LCL.Count USR
  LCL.Number_Value_7 = LCL.Number_Value_7 + LCL.Count_USR;

  // LCL.Text USR 7 = CVTVAR(LCL.Number Value - 7)
  LCL.Text_USR_7 = CVTVAR(LCL.Number_Value_7);

  // LCL.Job Name CDE = CONCAT(CON.BOL,LCL.Text USR 7,CON.*ZERO)
  LCL.Job_Name_CDE = 'BOL' + LCL.Text_USR_7 (*ZERO);

  // LCL.Load ID Alpha USR = DB1.Load ID
  LCL.Load_ID_Alpha_USR = DB1.Load_ID;

  // LCL.Ship To Customer TXT = CVTVAR(DB1.Ship To Customer)
  LCL.Ship_To_Customer_TXT = CVTVAR(DB1.Ship_To_Customer);

  EXECUTE FUNCTION(RTV Whse Acct Co      RT) TYPE(RTVOBJ) FILE(OPBGWKP)           AC1809259;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(LCL.Accounting_Company);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   EXECUTE FUNCTION(Rtv Acct Co          RT) TYPE(RTVOBJ) FILE(CAADREP)            AC1802492;
   PARAMETER(DB1.Warehouse_Code);
   PARAMETER(PAR.Accounting_Company);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   QUIT;

  }

  //?EMAIL / FAX
  CASE;

  // IF PAR.CDE Destination Type is Email
  IF PAR.CDE_Destination_Type = 'E';

  //?submit job to email per jobname
  // LCL.CDD Type = CND.Bill of Lading - Email
  LCL.CDD_Type = 'BE';

  // LCL.CDD Department Code = CND.Traffic
  LCL.CDD_Department_Code = 'TRAFF';

  // Call program RTV CDD for Overlays   XF.
  CALL PROGRAM(RTV CDD for Overlays   XF) ('PMG9XFR');
  PARAMETER(LCL.Accounting_Company);
  PARAMETER(LCL.CDD_Type);
  PARAMETER(LCL.CDD_Department_Code);
  PARAMETER(LCL.Generic_Heading);
  PARAMETER(LCL.CDD_Program_Name);
  PARAMETER(LCL.CDD_Printer_File_Name);
  PARAMETER(LCL.CDD_Additional_Object);
  PARAMETER(LCL.CDD_Sender_Phone);
  PARAMETER(LCL.CDD_Sender_Fax);
  PARAMETER(LCL.Output_Queue);
  PARAMETER(LCL.Hold_File);
  PARAMETER(LCL.Save_File);
  PARAMETER(LCL.Source_Drawer);
  PARAMETER(LCL.Printer_Device_Type);
  PARAMETER(LCL.Page_Length_2);
  PARAMETER(LCL.Page_Width_2);
  PARAMETER(LCL.Page_LPI);
  PARAMETER(LCL.Page_CPI);
  PARAMETER(LCL.Page_Overflow);
  PARAMETER(LCL.Page_Rotation);
  PARAMETER(LCL.CDD_Comment_1);
  PARAMETER(LCL.CDD_Comment_2);
  PARAMETER(LCL.CDD_Comment_3);
  PARAMETER(LCL.CDD_Comment_4);
  PARAMETER(LCL.CDD_Comment_5);
  PARAMETER(LCL.Record_Status);

  // LCL.CDD Name of Overlay Back = CON.*BLANK
  LCL.CDD_Name_of_Overlay_Back = *BLANK;

  // Call program RTV CDD for Overlays   XF.
  CALL PROGRAM(RTV CDD for Overlays   XF) ('PMG9XFR');
  PARAMETER(LCL.Accounting_Company);
  PARAMETER('BK');
  PARAMETER('TRAFF');
  PARAMETER(LCL.CDD_Name_of_Overlay_Back);
  PARAMETER(NLL.CDD_Program_Name);
  PARAMETER(NLL.CDD_Printer_File_Name);
  PARAMETER(NLL.CDD_Additional_Object);
  PARAMETER(NLL.CDD_Sender_Phone);
  PARAMETER(NLL.CDD_Sender_Fax);
  PARAMETER(NLL.Output_Queue);
  PARAMETER(NLL.Hold_File);
  PARAMETER(NLL.Save_File);
  PARAMETER(NLL.Source_Drawer);
  PARAMETER(NLL.Printer_Device_Type);
  PARAMETER(NLL.Page_Length_2);
  PARAMETER(NLL.Page_Width_2);
  PARAMETER(NLL.Page_LPI);
  PARAMETER(NLL.Page_CPI);
  PARAMETER(NLL.Page_Overflow);
  PARAMETER(NLL.Page_Rotation);
  PARAMETER(NLL.CDD_Comment_1);
  PARAMETER(NLL.CDD_Comment_2);
  PARAMETER(NLL.CDD_Comment_3);
  PARAMETER(NLL.CDD_Comment_4);
  PARAMETER(NLL.CDD_Comment_5);
  PARAMETER(NLL.Record_Status);

  // LCL.Subject Line USR = CONCAT(CON.Bill of Lading for Load,LCL.Load ID Alpha USR,CON.2)
  LCL.Subject_Line_USR = 'Bill of Lading for Load' + LCL.Load_ID_Alpha_USR (2);

  // Call program CLP ESNDMAIL BOL-SBD  UP.
  CALL PROGRAM(CLP ESNDMAIL BOL-SBD  UP) ('PUQPUPC');
  PARAMETER(*BLANK);
  PARAMETER(PAR.CDE_Destination);
  PARAMETER(LCL.Subject_Line_USR);
  PARAMETER('Bill of Lading');
  PARAMETER(LCL.Job_Name_CDE);
  PARAMETER(LCL.Generic_Heading);
  PARAMETER(LCL.CDD_Name_of_Overlay_Back);
  PARAMETER(LCL.Load_ID_Alpha_USR);
  PARAMETER(LCL.Ship_To_Customer_TXT);

  //?EMAIL / FAX
  // IF PAR.CDE Destination Type is Fax
  IF PAR.CDE_Destination_Type = 'F';

  //?get fax bol cover sheet pgm
  // LCL.CDD Department Code = CND.TRAFFIC BOL Fax
  LCL.CDD_Department_Code = 'TRAFFX';

  // Call program RTV CDD for Overlays   XF.
  CALL PROGRAM(RTV CDD for Overlays   XF) ('PMG9XFR');
  PARAMETER(LCL.Accounting_Company);
  PARAMETER(LCL.CDD_Type);
  PARAMETER(LCL.CDD_Department_Code);
  PARAMETER(LCL.CDD_Name_of_Overlay);
  PARAMETER(LCL.CDD_Program_Name);
  PARAMETER(LCL.CDD_Printer_File_Name);
  PARAMETER(LCL.CDD_Additional_Object);
  PARAMETER(LCL.CDD_Sender_Phone);
  PARAMETER(LCL.CDD_Sender_Fax);
  PARAMETER(LCL.Output_Queue);
  PARAMETER(LCL.Hold_File);
  PARAMETER(LCL.Save_File);
  PARAMETER(LCL.Source_Drawer);
  PARAMETER(LCL.Printer_Device_Type);
  PARAMETER(LCL.Page_Length_2);
  PARAMETER(LCL.Page_Width_2);
  PARAMETER(LCL.Page_LPI);
  PARAMETER(LCL.Page_CPI);
  PARAMETER(LCL.Page_Overflow);
  PARAMETER(LCL.Page_Rotation);
  PARAMETER(LCL.CDD_Comment_1);
  PARAMETER(LCL.CDD_Comment_2);
  PARAMETER(LCL.CDD_Comment_3);
  PARAMETER(LCL.CDD_Comment_4);
  PARAMETER(LCL.CDD_Comment_5);
  PARAMETER(LCL.Record_Status);

  //?get fax bol overlay name
  // LCL.CDD Type = CND.Bill of Lading - Email
  LCL.CDD_Type = 'BE';

  // LCL.CDD Department Code = CND.TRAFFIC BOL Fax
  LCL.CDD_Department_Code = 'TRAFFX';

  // Call program RTV CDD for Overlays   XF.
  CALL PROGRAM(RTV CDD for Overlays   XF) ('PMG9XFR');
  PARAMETER(LCL.Accounting_Company);
  PARAMETER(LCL.CDD_Type);
  PARAMETER(LCL.CDD_Department_Code);
  PARAMETER(LCL.Generic_Heading);
  PARAMETER(LCL.CDD_Program_Name);
  PARAMETER(LCL.CDD_Printer_File_Name);
  PARAMETER(LCL.CDD_Additional_Object);
  PARAMETER(LCL.CDD_Sender_Phone);
  PARAMETER(LCL.CDD_Sender_Fax);
  PARAMETER(LCL.Output_Queue);
  PARAMETER(LCL.Hold_File);
  PARAMETER(LCL.Save_File);
  PARAMETER(LCL.Source_Drawer);
  PARAMETER(LCL.Printer_Device_Type);
  PARAMETER(LCL.Page_Length_2);
  PARAMETER(LCL.Page_Width_2);
  PARAMETER(LCL.Page_LPI);
  PARAMETER(LCL.Page_CPI);
  PARAMETER(LCL.Page_Overflow);
  PARAMETER(LCL.Page_Rotation);
  PARAMETER(LCL.CDD_Comment_1);
  PARAMETER(LCL.CDD_Comment_2);
  PARAMETER(LCL.CDD_Comment_3);
  PARAMETER(LCL.CDD_Comment_4);
  PARAMETER(LCL.CDD_Comment_5);
  PARAMETER(LCL.Record_Status);

  // LCL.CDD Name of Overlay Back = CON.*BLANK
  LCL.CDD_Name_of_Overlay_Back = *BLANK;

  // Call program RTV CDD for Overlays   XF.
  CALL PROGRAM(RTV CDD for Overlays   XF) ('PMG9XFR');
  PARAMETER(LCL.Accounting_Company);
  PARAMETER('BK');
  PARAMETER('TRAFF');
  PARAMETER(LCL.CDD_Name_of_Overlay_Back);
  PARAMETER(NLL.CDD_Program_Name);
  PARAMETER(NLL.CDD_Printer_File_Name);
  PARAMETER(NLL.CDD_Additional_Object);
  PARAMETER(NLL.CDD_Sender_Phone);
  PARAMETER(NLL.CDD_Sender_Fax);
  PARAMETER(NLL.Output_Queue);
  PARAMETER(NLL.Hold_File);
  PARAMETER(NLL.Save_File);
  PARAMETER(NLL.Source_Drawer);
  PARAMETER(NLL.Printer_Device_Type);
  PARAMETER(NLL.Page_Length_2);
  PARAMETER(NLL.Page_Width_2);
  PARAMETER(NLL.Page_LPI);
  PARAMETER(NLL.Page_CPI);
  PARAMETER(NLL.Page_Overflow);
  PARAMETER(NLL.Page_Rotation);
  PARAMETER(NLL.CDD_Comment_1);
  PARAMETER(NLL.CDD_Comment_2);
  PARAMETER(NLL.CDD_Comment_3);
  PARAMETER(NLL.CDD_Comment_4);
  PARAMETER(NLL.CDD_Comment_5);
  PARAMETER(NLL.Record_Status);

  //?submit job to fax bols per jobname
  // LCL.Company Number Pass   USR = LCL.Accounting Company
  LCL.Company_Number_Pass_USR = LCL.Accounting_Company;

  // LCL.Subject Line USR = CONCAT(CON.Bill of Lading for Load,LCL.Load ID Alpha USR,CON.2)
  LCL.Subject_Line_USR = 'Bill of Lading for Load' + LCL.Load_ID_Alpha_USR (2);

  // Call program CLP ESNDMAIL BOL-SBD  UP.
  CALL PROGRAM(CLP ESNDMAIL BOL-SBD  UP) ('PUQPUPC');
  PARAMETER(*BLANK);
  PARAMETER(PAR.CDE_Destination);
  PARAMETER(LCL.Subject_Line_USR);
  PARAMETER('Bill of Lading');
  PARAMETER(LCL.Job_Name_CDE);
  PARAMETER(LCL.Generic_Heading);
  PARAMETER(LCL.CDD_Name_of_Overlay_Back);
  PARAMETER(LCL.Load_ID_Alpha_USR);
  PARAMETER(LCL.Ship_To_Customer_TXT);

  ENDIF;

  // PAR.Load Id 1 = DB1.Load ID
  PAR.Load_Id_1 = DB1.Load_ID;

  ENDIF;

  ENDIF;

  ENDIF;

  ENDIF;

  ENDIF;

  ENDIF;

 }

 ENDIF;

}


//?Mark all orders with Processing Sts to SENT
EXECUTE FUNCTION(RTV Chg for Eml to snt RT) TYPE(RTVOBJ) FILE(PMAMREP)          AC2184224;
PARAMETER('P');
{
 //?USER: Process Data record

 CASE;

 // IF PAR.OHE Email BOL/Sent is Processing
 IF PAR.OHE_Email_BOL_Sent = 'P';

 EXECUTE FUNCTION(CHG OHE Email BOL      CH) TYPE(CHGOBJ) FILE(PMAMREP)          AC2183955;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER('S');
 {
  //?USER: Processing before Data update

  // DB1.Job Time = JOB.*Job time
  DB1.Job_Time = JOB.*Job_time;

  // DB1.Job Date = JOB.*Job date
  DB1.Job_Date = JOB.*Job_date;

  // DB1.Job Name = JOB.*PROGRAM
  DB1.Job_Name = JOB.*PROGRAM;

  // DB1.User Id = JOB.*USER
  DB1.User_Id = JOB.*USER;

 }

 ENDIF;

}


