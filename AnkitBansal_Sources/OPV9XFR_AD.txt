// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for OPV9XFR
// ?Date: 14.08.2025 Time: 03:26:36
// ?------------------------------------------------------------------------------------------------

//?Execute user function

EXECUTE FUNCTION(RTV Post/Update Cond   RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC1280364;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Order_Type_Sales);
PARAMETER(WRK.Numeric_Field_Not_Needed);
PARAMETER(NLL.Requested_Ship_Date);
PARAMETER(PAR.Reason_Code);
PARAMETER(PAR.Header_Status);
PARAMETER(PAR.Header_Status_Last);
PARAMETER(PAR.Order_Type_Print_Status);
PARAMETER(PAR.Scheduled_Ship_Date);
PARAMETER(PAR.Order_Value_Total);
PARAMETER(PAR.Order_Weight_Total);
PARAMETER(WRK.Credit_Hold);
PARAMETER(WRK.Production_Hold);
PARAMETER(PAR.Load_ID);
PARAMETER(WRK.Export_Status);
PARAMETER(NLL.Palletize);
PARAMETER(PAR.Load_Plan_Order);
PARAMETER(NLL.Sales_Route_Code);
PARAMETER(WRK.Modified_Flag);
PARAMETER(PAR.A_R_order_Value_Total);
PARAMETER(WRK.Block_Order_Flag);
PARAMETER(PAR.Claim_Number);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV OD Whs/ShpCo/AccCo RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1801010;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(NLL.Warehouse_Code);
PARAMETER(LCL.Shipping_Company);
PARAMETER(LCL.Accounting_Company);
{
 //?USER: Process Data record

 CASE;

 // IF DB1.Detail Line Status is Not cancelled
 IF DB1.Detail_Line_Status = 'L'/'A'/'C'/'R'/'E'/'H'/'I';

 EXECUTE FUNCTION(RTV OD Whs/ShpCo/AccCo RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1801011;
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(PAR.Shipping_Company);
 PARAMETER(PAR.Accounting_Company);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 // PAR.Warehouse Code = DB1.Warehouse Code
 PAR.Warehouse_Code = DB1.Warehouse_Code;

 QUIT;

 ENDIF;

}


// PAR.USR number = CON.1
PAR.USR_number = 1;

//?Process two cycles for cancel, first cycle edit, second cancel
// DOW PAR.USR number is Less than or equal 2
DOW PAR.USR_number <= 2;

EXECUTE FUNCTION(EDT Cancel Dtl Lines   RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1426545;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(PAR.USR_number);
PARAMETER(PAR.Header_Status);
PARAMETER(PAR.Scheduled_Ship_Date);
{
 //?USER: Process Data record

 //?Process first pass edit or second pass update routines
 CASE;

 // IF PAR.USR number is Equal to 1
 IF PAR.USR_number = 1;

 //?Error if confirmed or held and previously confirmed.
 CASE;

 // IF DB1.Detail Line Status is Confirmed
 IF DB1.Detail_Line_Status = 'R';

 // PAR.USR number = CND.Equal to 3
 PAR.USR_number = 3;

 QUIT;

 //?Error if confirmed or held and previously confirmed.
 // IF DB1.Detail Line Status is Hold
 IF DB1.Detail_Line_Status = 'H';

 CASE;

 // IF DB1.Detail Line Status Last is Confirmed
 IF DB1.Detail_Line_Status_Last = 'R';

 // PAR.USR number = CND.Equal to 3
 PAR.USR_number = 3;

 QUIT;

 ENDIF;

 ENDIF;

 //?Process first pass edit or second pass update routines
 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Process only those line types for cancel
 CASE;

 // IF DB1.Detail Line Status is Cancel Status Types
 IF DB1.Detail_Line_Status = 'L'/'A'/'E'/'H';

 //?'WRK' field context on value/weight not used in this function
 // Call program CHG Del Line Complete  XF.
 CALL PROGRAM(CHG Del Line Complete  XF) ('PDPKXFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 PARAMETER(PAR.Header_Status);
 PARAMETER(PAR.Scheduled_Ship_Date);
 PARAMETER(WRK.Order_Value_Total);
 PARAMETER(WRK.Order_Weight_Total);

 ENDIF;

 ENDIF;

}


// PAR.USR number = PAR.USR number + CON.1
PAR.USR_number = PAR.USR_number + 1;

ENDDO;

//?Update header if successful process on details
CASE;

// IF PAR.USR number is Equal to 3
IF PAR.USR_number = 3;

// WRK.A/R order Value Total = CON.*ZERO - PAR.A/R order Value Total
WRK.A_R_order_Value_Total = *ZERO - PAR.A_R_order_Value_Total;

//?12/07/06 PKD PK0040 Use Accounting Company.
CASE;

// IF LCL.Accounting Company is Equal to zero
IF LCL.Accounting_Company = *ZERO;

EXECUTE FUNCTION(UPD Chg Val Open Ord   RT) TYPE(RTVOBJ) FILE(ARBCREP)          AC1349778;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.AR_Customer_Number);
PARAMETER(WRK.A_R_order_Value_Total);
{
 //?USER: Processing if Data record not found

 //?This shouldn't be used here--A/R Summary is created when an order
 //?is created
 EXECUTE FUNCTION(CRT A/R Summary        CR) TYPE(CRTOBJ) FILE(ARBCREP)          AC1109013;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.AR_Customer_Number);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(PAR.A_R_order_Value_Total);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(1);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 //?USER: Process Data record

 // PAR.Value of Open Orders = DB1.Value of Open Orders + PAR.A/R order Value Total
 PAR.Value_of_Open_Orders = DB1.Value_of_Open_Orders + PAR.A_R_order_Value_Total;

 EXECUTE FUNCTION(CHG Value Open Orders  CH) TYPE(CHGOBJ) FILE(ARBCREP)          AC1351678;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.AR_Customer_Number);
 PARAMETER(PAR.Value_of_Open_Orders);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

}


// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(UPD Chg Val Open Ord   RT) TYPE(RTVOBJ) FILE(ARBCREP)          AC1349778;
PARAMETER(LCL.Accounting_Company);
PARAMETER(PAR.AR_Customer_Number);
PARAMETER(WRK.A_R_order_Value_Total);
{
 //?USER: Processing if Data record not found

 //?This shouldn't be used here--A/R Summary is created when an order
 //?is created
 EXECUTE FUNCTION(CRT A/R Summary        CR) TYPE(CRTOBJ) FILE(ARBCREP)          AC1109013;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.AR_Customer_Number);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(PAR.A_R_order_Value_Total);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(1);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 //?USER: Process Data record

 // PAR.Value of Open Orders = DB1.Value of Open Orders + PAR.A/R order Value Total
 PAR.Value_of_Open_Orders = DB1.Value_of_Open_Orders + PAR.A_R_order_Value_Total;

 EXECUTE FUNCTION(CHG Value Open Orders  CH) TYPE(CHGOBJ) FILE(ARBCREP)          AC1351678;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.AR_Customer_Number);
 PARAMETER(PAR.Value_of_Open_Orders);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

}


ENDIF;

// PAR.Header Status Last = PAR.Header Status
PAR.Header_Status_Last = PAR.Header_Status;

// PAR.Header Status = CND.Cancelled
PAR.Header_Status = 'X';

EXECUTE FUNCTION(Chg Order Status/Value CH) TYPE(CHGOBJ) FILE(OPBFCPP)          AC1132282;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(JOB.*Job_date);
PARAMETER(PAR.Header_Status);
PARAMETER(PAR.Header_Status_Last);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER('N');
PARAMETER('N');
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(WRK.Affect_Auto_Accruals);
PARAMETER(*BLANK);
PARAMETER(*ZERO);
PARAMETER(*BLANK);
PARAMETER(*ZERO);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Date/Time Stamp.PgmIF) TYPE(EXCINTFUN)                     AC1425284;
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*PROGRAM
  PAR.Job_Name = JOB.*PROGRAM;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

 // Call program TRG Order Hdr CHG Trig XT.
 CALL PROGRAM(TRG Order Hdr CHG Trig XT) ('PDW9XFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Type_Sales);
 PARAMETER(DB1.AR_Customer_Number);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(DB1.Ship_To_Name);
 PARAMETER(DB1.Ship_To_Address_Line_1);
 PARAMETER(DB1.Ship_To_Address_Line_2);
 PARAMETER(DB1.Ship_To_Address_Line_3);
 PARAMETER(DB1.Ship_To_City);
 PARAMETER(DB1.Ship_To_State_Code);
 PARAMETER(DB1.Ship_To_Zip_Postal_Code);
 PARAMETER(DB1.Bill_to_Customer);
 PARAMETER(DB1.Bill_to_Name);
 PARAMETER(DB1.Bill_to_Address_Line_1);
 PARAMETER(DB1.Bill_to_Address_Line_2);
 PARAMETER(DB1.Bill_to_Address_Line_3);
 PARAMETER(DB1.Bill_to_City);
 PARAMETER(DB1.Bill_to_State_Code);
 PARAMETER(DB1.Bill_to_Zip_Postal_Code);
 PARAMETER(DB1.Customer_Purchase_Order_#);
 PARAMETER(DB1.Order_Date);
 PARAMETER(DB1.Requested_Ship_Date);
 PARAMETER(DB1.Actual_Shipped_Date);
 PARAMETER(DB1.Cancel_Date);
 PARAMETER(DB1.Terms_Code);
 PARAMETER(DB1.Special_Instructions);
 PARAMETER(DB1.Special_Instructions_2);
 PARAMETER(DB1.Carrier_Code);
 PARAMETER(DB1.Comment_Print_Acknowledge);
 PARAMETER(DB1.Comment_Print_Inv_Cr_Memo);
 PARAMETER(DB1.Comment_Print_Pick_Slip);
 PARAMETER(DB1.Comment_Print_Ship_Doc);
 PARAMETER(DB1.Reason_Code);
 PARAMETER(DB1.Order_in_Use);
 PARAMETER(DB1.Header_Status);
 PARAMETER(DB1.Header_Status_Last);
 PARAMETER(DB1.Order_Type_Print_Status);
 PARAMETER(DB1.Scheduled_Ship_Date);
 PARAMETER(DB1.User_Original_Entry);
 PARAMETER(DB1.Date_of_Original_Entry);
 PARAMETER(DB1.Order_Value_Total);
 PARAMETER(DB1.Order_Weight_Total);
 PARAMETER(DB1.Credit_Hold);
 PARAMETER(DB1.Production_Hold);
 PARAMETER(DB1.New_Customer_Hold);
 PARAMETER(DB1.Requested_Delivery_Date);
 PARAMETER(DB1.Requested_Delivery_Time);
 PARAMETER(DB1.Accounts_Receiv_Ent_1);
 PARAMETER(DB1.Accounts_Receiv_Ent_2);
 PARAMETER(DB1.Load_ID);
 PARAMETER(DB1.Absorbed_Freight_Rate_CWT);
 PARAMETER(DB1.Rated_Freight);
 PARAMETER(DB1.LTL_Flag);
 PARAMETER(DB1.Price_Audit);
 PARAMETER(DB1.Price_Status);
 PARAMETER(DB1.Shipping_Method);
 PARAMETER(DB1.Export_Status);
 PARAMETER(DB1.Palletize);
 PARAMETER(DB1.Shrink_Wrap);
 PARAMETER(DB1.Slip_Sheet);
 PARAMETER(DB1.Age_Code);
 PARAMETER(DB1.Reefer_Temperature);
 PARAMETER(DB1.Load_Type);
 PARAMETER(DB1.Attach_to_Invoice_Number);
 PARAMETER(DB1.Load_Plan_Order);
 PARAMETER(DB1.Print_Pick_Slip);
 PARAMETER(DB1.Resell_Reference_Number);
 PARAMETER(DB1.Special_Comment_1);
 PARAMETER(DB1.Special_Comment_2);
 PARAMETER(DB1.Affect_Auto_Accruals);
 PARAMETER(DB1.Sales_Route_Code);
 PARAMETER(DB1.Manager_Level_Code);
 PARAMETER(DB1.VP_Level_Code);
 PARAMETER(DB1.Attach_to_Order_Number);
 PARAMETER(DB1.Reason_for_Price_Audit);
 PARAMETER(DB1.Invoice_Number);
 PARAMETER(DB1.Invoice_Suffix);
 PARAMETER(DB1.Invoice_Date);
 PARAMETER(DB1.Event_Code);
 PARAMETER(DB1.Trans_Contol_AS400_Plant);
 PARAMETER(DB1.Modified_Flag);
 PARAMETER(DB1.A_R_order_Value_Total);
 PARAMETER(DB1.Billing_Activity_Type);
 PARAMETER(DB1.Block_Order_Flag);
 PARAMETER(DB1.Order_Certification_Flag);
 PARAMETER(DB1.Invoice_Order_Value_Tot);
 PARAMETER(DB1.Process_Sts_for_3C);
 PARAMETER(DB1.Order_Conf_Fax_Sts);
 PARAMETER(DB1.Manifest_Fax_Sts);
 PARAMETER(DB1.Invoice_Fax_Sts);
 PARAMETER(DB1.Transfer_in_Storage_Ind);
 PARAMETER(DB1.Email_Cust_On_Order_Ship);
 PARAMETER(DB1.Order_Emailed);
 PARAMETER(DB1.Export_Docs_Go_w_Driver);
 PARAMETER(DB1.Shipping_Temp_Code_C_F);
 PARAMETER(DB1.Broker_Order_Status);
 PARAMETER(DB1.Air_Freight_Order);
 PARAMETER(DB1.Order_Requires_Review);
 PARAMETER(DB1.OH_Load_Plan_Ready);
 PARAMETER(DB1.Export_USDA_Approved);
 PARAMETER(DB1.HPB_Ship_to_Warehouse);
 PARAMETER(DB1.OH_TF_Exempt_Code);
 PARAMETER(DB1.OH_Appt_Confirmation_Dt);
 PARAMETER(DB1.JPN_Invoice_Issuance_Date);
 PARAMETER(DB1.Load_Actual_Shipped_Date);
 PARAMETER(DB1.Load_BOL_Complete_Date);
 PARAMETER(DB1.Load_Truck_Departure_Date);
 PARAMETER(DB1.Maximum_Gross_Weight);
 PARAMETER(DB1.Time_of_Original_Entry);
 PARAMETER(DB1.OH_Appt_Confirmation_Tm);
 PARAMETER(DB1.Load_BOL_Complete_Time);
 PARAMETER(DB1.Load_Truck_Departure_Time);
 PARAMETER(DB1.Act_Frt_Reference_Amount);
 PARAMETER(DB1.Act_Non_Ref_Frt_Amount);
 PARAMETER(DB1.OH_Fuel_Surcharge_Amount);
 PARAMETER(DB1.OH_Total_Non_Ref_Frt_Amt);
 PARAMETER(DB1.OH_Total_Ref_Frt_Amt);
 PARAMETER(DB1.Claim_Number);
 PARAMETER(DB1.EDI_Status_1);
 PARAMETER(DB1.EDI_Status_2);
 PARAMETER(DB1.EDI_Status_3);
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);

}


//?Update load weight
CASE;

// IF PAR.Load ID NE WRK.ZERO
IF PAR.Load_ID <> WRK.ZERO;

// Call program RTV UPD Ld Abs.Frt/Wgt XF.
CALL PROGRAM(RTV UPD Ld Abs.Frt/Wgt XF) ('PDE0XFR');
PARAMETER(PAR.Load_ID);
PARAMETER(WRK.Total_Load_Order_Weight);
PARAMETER(WRK.Total_Freight);

ENDIF;

//?If Credit or Debit Memo, update associated claim.
DO;

CASE;

// IF PAR.Claim Number is Not Zero
IF PAR.Claim_Number <> *ZERO;

// AND PAR.Billing Activity Type is Credit Memo
AND ( PAR.Billing_Activity_Type = '2';

// OR PAR.Billing Activity Type is Debit Memo
OR PAR.Billing_Activity_Type = '3' );

EXECUTE FUNCTION(CHG Status only        CH) TYPE(CHGOBJ) FILE(PDMKCPP)          AC1573743;
PARAMETER(PAR.Claim_Number);
PARAMETER('R');
{
 //?USER: Processing after Data read

 CASE;

 // IF PAR.Claim Status is Completed
 IF PAR.Claim_Status = 'C';

 // AND PAR.Claim Status NE DB1.Claim Status
 AND PAR.Claim_Status <> DB1.Claim_Status;

 // DB1.Memo Post Date = JOB.*Job date
 DB1.Memo_Post_Date = JOB.*Job_date;

 // DB1.Memo Post Time = JOB.*Job time
 DB1.Memo_Post_Time = JOB.*Job_time;

 // IF PAR.Claim Status is Memo Processing
 IF PAR.Claim_Status = 'M';

 // AND PAR.Claim Status NE DB1.Claim Status
 AND PAR.Claim_Status <> DB1.Claim_Status;

 // DB1.Memo Created = CND.Yes
 DB1.Memo_Created = 'Y';

 // DB1.Memo Created Date = JOB.*Job date
 DB1.Memo_Created_Date = JOB.*Job_date;

 // DB1.Memo Created Time = JOB.*Job time
 DB1.Memo_Created_Time = JOB.*Job_time;

 // DB1.Memo Created User = JOB.*USER
 DB1.Memo_Created_User = JOB.*USER;

 ENDIF;

 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Chg Date/Time      IF) TYPE(EXCINTFUN)                     AC1523476;
 PARAMETER(DB1.Change_Date);
 PARAMETER(DB1.Change_Time);
 PARAMETER(DB1.Change_User);
 PARAMETER(DB1.Change_Program);
 {
  //?Execute internal function

  // PAR.Change Date = JOB.*Job date
  PAR.Change_Date = JOB.*Job_date;

  // PAR.Change Time = JOB.*Job time
  PAR.Change_Time = JOB.*Job_time;

  // PAR.Change User = JOB.*USER
  PAR.Change_User = JOB.*USER;

  // PAR.Change Program = JOB.*PROGRAM
  PAR.Change_Program = JOB.*PROGRAM;

 }

}


ENDIF;

ENDDO;

//?If Export, delete Export Doc Header
CASE;

// IF WRK.Export Status is yes
IF WRK.Export_Status = 'Y';

EXECUTE FUNCTION(Rtv & Dlt for Cancel  RT) TYPE(RTVOBJ) FILE(PDMRREP)           AC1612160;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(DLT Exp Doc Ordr H PRG DL) TYPE(DLTOBJ) FILE(PDMRREP)          AC1595074;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.ED_Export_Document_Type);
 PARAMETER(DB1.Country_Code);
 {
  //?USER: Processing after Data update

  EXECUTE FUNCTION(Rtv & Dlt for Purge   RT) TYPE(RTVOBJ) FILE(PDMSREP)           AC1595077;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.ED_Export_Document_Type);
  PARAMETER(DB1.Country_Code);
  {
   //?USER: Process Data record

   EXECUTE FUNCTION(Crt Exp Doc Ordr D PRG CR) TYPE(CRTOBJ) FILE(PDMSREP)          AC1595078;
   PARAMETER(DB1.Company_Number);
   PARAMETER(DB1.Order_Number);
   PARAMETER(DB1.ED_Export_Document_Type);
   PARAMETER(DB1.Country_Code);
   PARAMETER(DB1.Order_Sequence_Number);
   PARAMETER(DB1.Order_Secondary_Line_Seq);
   PARAMETER(DB1.ED_Item_Code);
   PARAMETER(DB1.ED_Item_Label_Line_1);
   PARAMETER(DB1.ED_Item_Label_Line_2);
   PARAMETER(DB1.ED_Chilled_Frozen_Text);
   PARAMETER(DB1.ED_Unmarked_Txt);
   PARAMETER(DB1.ED_Product_Net_Weight_lbs);
   PARAMETER(DB1.ED_Product_Net_Weight_MT);
   PARAMETER(DB1.ED_Product_UOM);
   PARAMETER(DB1.ED_Product_Nbr_of_Pkgs);
   PARAMETER(DB1.ED_Product_Pkg_Type);
   PARAMETER(DB1.ED_Shipping_Marks_Txt);
   PARAMETER(DB1.ED_Pieces_per_Bag);
   PARAMETER(DB1.ED_Bags_per_Unit);
   PARAMETER(DB1.ED_Total_Nbr_of_Pieces);
   PARAMETER(DB1.ED_Product_Unit_Price);
   PARAMETER(DB1.ED_Producet_Extended_Amt);
   PARAMETER(DB1.ED_Print_Status);
   PARAMETER(DB1.ED_Plant_Number_Dtl);
   PARAMETER(DB1.ED_Language_Xlate_Desc_2);
   PARAMETER(DB1.ED_Consignee_Address_Nbr);
   PARAMETER(DB1.ED_Date_of_Slaughter_Dtl);
   PARAMETER(DB1.ED_HACCP_Category);
   PARAMETER(DB1.ED_Slaughter_Date_Range);
   PARAMETER(DB1.ED_Production_Date_Range);
   PARAMETER(DB1.ED_Product_UID);
   PARAMETER(DB1.ED_Language_Xlate_Desc);
   PARAMETER(DB1.ED_Unused_Status_1);
   PARAMETER(DB1.ED_Unused_Status_2);
   PARAMETER(DB1.ED_Harmonized_Tariff_Cde);
   PARAMETER(DB1.ED_Nbr_of_Packing_Units);
   PARAMETER(DB1.EDI_Status_1);
   PARAMETER(DB1.EDI_Status_2);
   PARAMETER(DB1.EDI_Status_3);
   PARAMETER(DB1.Record_Status);
   PARAMETER(DB1.Job_Time);
   PARAMETER(DB1.User_Id);
   PARAMETER(DB1.Job_Name);
   PARAMETER(DB1.Job_Date);
   EXECUTE FUNCTION(Del Exp Doc Order Dtl  DL) TYPE(DLTOBJ) FILE(PDMSREP)          AC1524037;
   PARAMETER(DB1.Company_Number);
   PARAMETER(DB1.Order_Number);
   PARAMETER(DB1.ED_Export_Document_Type);
   PARAMETER(DB1.Country_Code);
   PARAMETER(DB1.Order_Sequence_Number);
   PARAMETER(DB1.Order_Secondary_Line_Seq);
  }

 }

 EXECUTE FUNCTION(Rtv/DelExpDocOrdComm  RT) TYPE(RTVOBJ) FILE(PNGTCPP)           AC2010983;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Dlt Export DocOrderC  DO) TYPE(DLTOBJ) FILE(PNGTCPP)           AC2009165;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.ED_Export_Document_Type);
  PARAMETER(DB1.Country_Code);
  PARAMETER(DB1.EDO_Comment_Line_No);
  PARAMETER(DB1.EDO_Comment_Line_Seq);
 }

}


ENDIF;

EXECUTE FUNCTION(Rtv Active Status     RT) TYPE(RTVOBJ) FILE(PPBUREP)           AC1740339;
PARAMETER(PAR.Company_Number);
PARAMETER('ORDONL');
PARAMETER(LCL.PFS_AccuSort_Active);
PARAMETER(LCL.PFS_Carlisle_Active);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?P00196 RMC 8/22/12 Dailys CAT2 - send delete to PFS
CASE;

// IF LCL.PFS Carlisle Active is Yes
IF LCL.PFS_Carlisle_Active = 'Y';

// LCL.Load Status = CND.Unlock
LCL.Load_Status = 'U';

// Call program Zzz Order Header      XF.
CALL PROGRAM(Zzz Order Header      XF) ('PBEYXFR');
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(*BLANK);
PARAMETER(PAR.Load_ID);
PARAMETER(LCL.Load_Status);

ENDIF;

CASE;

// IF PAR.Order Type - Sales is Regular Order
IF PAR.Order_Type_Sales = 'OR';

// OR PAR.Order Type - Sales is Transfer Order
OR PAR.Order_Type_Sales = 'TR';

EXECUTE FUNCTION(Rtv LastLoad f/Ord    RT) TYPE(RTVOBJ) FILE(ECP050)            AC2158009;
PARAMETER(LCL.EDI_SURROGATE_NUMBER);
PARAMETER(PAR.Order_Number);
PARAMETER(LCL.W0505_Shipment_Num_BOL);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?R11331 RMC 8/15/18 EDI 940 - send delete to 3PL if they were sent LOCK
CASE;

// IF LCL.W0505 Shipment Num/BOL is entered
IF LCL.W0505_Shipment_Num_BOL <> *ZERO;

EXECUTE FUNCTION(Rtv/Crt Del f/OrdCncl RT) TYPE(RTVOBJ) FILE(ECP050)            AC2158012;
PARAMETER(LCL.EDI_SURROGATE_NUMBER);
{
 //?USER: Process Data record

 //?Create EDI 940 Records with same data sent the last time but with
 //?  unprocessed sts and with Delete order sts
 //?Get next surrogate number
 // LCL.Surrogate Number USR = CON.9999999
 LCL.Surrogate_Number_USR = 9999999;

 EXECUTE FUNCTION(Rtv Last Surrogate    RT) TYPE(RTVOBJ) FILE(ECP050)            AC2140104;
 PARAMETER(LCL.Surrogate_Number_USR);
 {
  //?USER: Processing if Data record not found

  // PAR.EDI SURROGATE NUMBER = CON.999
  PAR.EDI_SURROGATE_NUMBER = 999;

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 // LCL.Surrogate Number USR = LCL.Surrogate Number USR + CON.1
 LCL.Surrogate_Number_USR = LCL.Surrogate_Number_USR + 1;

 //?Create Trans set with new surrogate number
 EXECUTE FUNCTION(Rtv/Crt for CancelOrd RT) TYPE(RTVOBJ) FILE(ECP053)            AC2158013;
 PARAMETER(DB1.EDI_SURROGATE_NUMBER);
 PARAMETER(LCL.Surrogate_Number_USR);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Crt EDI WHS Ship Ord  CR) TYPE(CRTOBJ) FILE(ECP053)            AC2023130;
  PARAMETER(PAR.Surrogate_Number_USR);
  PARAMETER(DB1.NTE01_Note_Line_Number);
  PARAMETER(DB1.NTE01_Note_Reference_Code);
  PARAMETER(DB1.NTE02_Note);
 }

 EXECUTE FUNCTION(Rtv/Crt for CancelOrd RT) TYPE(RTVOBJ) FILE(ECP052)            AC2158014;
 PARAMETER(DB1.EDI_SURROGATE_NUMBER);
 PARAMETER(LCL.Surrogate_Number_USR);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Crt EDI WHS Ship Ord  CR) TYPE(CRTOBJ) FILE(ECP052)            AC2023127;
  PARAMETER(PAR.Surrogate_Number_USR);
  PARAMETER(DB1.N101_NAME_TYPE_CODE);
  PARAMETER(DB1.N102_NAME);
  PARAMETER(DB1.N103_ID_CODE_QUALIFIER);
  PARAMETER(DB1.N104_ID_CODE);
  PARAMETER(DB1.N301_ADD);
  PARAMETER(DB1.N302_ADDRESS);
  PARAMETER(DB1.N401_CITY);
  PARAMETER(DB1.N402_STATE);
  PARAMETER(DB1.N403_POSTAL_CODE);
  PARAMETER(DB1.N404_COUNTRY_CODE);
  PARAMETER(DB1.N102_NAME_63);
  PARAMETER(DB1.N301_ADD_63A);
  PARAMETER(DB1.N302_ADDRESS_63A);
  PARAMETER(DB1.N303_ADDRESS_3);
  PARAMETER(DB1.N304_ADDRESS_4);
  PARAMETER(DB1.N403_POSTAL_CODE_20A);
 }

 EXECUTE FUNCTION(Rtv/Crt for CancelOrd RT) TYPE(RTVOBJ) FILE(ECP051)            AC2158015;
 PARAMETER(DB1.EDI_SURROGATE_NUMBER);
 PARAMETER(LCL.Surrogate_Number_USR);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Crt EDI WHS Ship Ord  CR) TYPE(CRTOBJ) FILE(ECP051)            AC2023124;
  PARAMETER(PAR.Surrogate_Number_USR);
  PARAMETER(DB1.LX01_Sequence_Number);
  PARAMETER(DB1.W0101_Quantity_Ordered);
  PARAMETER(DB1.W0102_Unit_of_Measure);
  PARAMETER(DB1.W0403_UPC_Case_Code);
  PARAMETER(DB1.W0404_Prod_ID_Qlfr);
  PARAMETER(DB1.W0405_Prod_ID_Code);
  PARAMETER(DB1.W0106_Ord_Line_Num_Qlfr);
  PARAMETER(DB1.W0107_Ord_Line_Num);
  PARAMETER(DB1.N901_Oldest_Age_Date_Qlfr);
  PARAMETER(DB1.N902_Oldest_Age_Date);
  PARAMETER(DB1.N901_Pallet_Size_Qlfr);
  PARAMETER(DB1.N902_Pallet_Size);
  PARAMETER(DB1.NTE01_Note_Reference_Code);
  PARAMETER(DB1.NTE02_Note);
  PARAMETER(DB1.N901_Newest_Age_Date_Qlfr);
  PARAMETER(DB1.N902_Newest_Age_Date);
  PARAMETER(DB1.G6901_Item_Description);
 }

 EXECUTE FUNCTION(Crt EDI WHS Ship Ord  CR) TYPE(CRTOBJ) FILE(ECP050)            AC2022911;
 PARAMETER(LCL.Surrogate_Number_USR);
 PARAMETER(DB1.G6202_DELIVERY_DATE_WSO);
 PARAMETER(DB1.TRADE_PARTNER_CODE);
 PARAMETER('N');
 PARAMETER('F');
 PARAMETER(DB1.W0502_Order_Number);
 PARAMETER(DB1.W0503_Customer_PO);
 PARAMETER(DB1.W0504_Load_Position);
 PARAMETER(DB1.W0505_Shipment_Num_BOL);
 PARAMETER(DB1.W6601_Shipment_Method);
 PARAMETER(DB1.W6602_Transportation_Type);
 PARAMETER(DB1.W6604_Unit_Load_Option);
 PARAMETER(DB1.W7601_Tot_Cases_Ordered);
 PARAMETER(DB1.G6202_Ship_Date_WSO);
 PARAMETER(DB1.N0902_Palletize);
 PARAMETER(DB1.N0902_Pallet_Type);
 PARAMETER(DB1.N0902_Shrink_Wrap);
 PARAMETER(DB1.N0902_Slip_Sheet);
}


ENDIF;

ENDIF;

CASE;

// IF PAR.Order Type - Sales is Transfer Order
IF PAR.Order_Type_Sales = 'TR';

EXECUTE FUNCTION(Rtv Order Surrogate   RT) TYPE(RTVOBJ) FILE(ECP060)            AC2158135;
PARAMETER(PAR.Order_Number);
PARAMETER(LCL.EDI_SURROGATE_NUMBER);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?T11041 RMC 8/21/18 EDI 943 - send delete to 3PL if they were sent 943
CASE;

// IF LCL.EDI SURROGATE NUMBER is Entered
IF LCL.EDI_SURROGATE_NUMBER <> 0;

EXECUTE FUNCTION(Rtv/Crt for CancelOrd  RT) TYPE(RTVOBJ) FILE(ECP060)           AC2158136;
PARAMETER(LCL.EDI_SURROGATE_NUMBER);
{
 //?USER: Process Data record

 //?Create EDI 943 Records with same data sent the last time but with
 //?  unprocessed sts and with Delete action sts
 //?Get next surrogate number
 // LCL.Surrogate Number USR = CON.9999999
 LCL.Surrogate_Number_USR = 9999999;

 EXECUTE FUNCTION(Rtv Next Surrogate #   RT) TYPE(RTVOBJ) FILE(ECP060)           AC2139228;
 PARAMETER(LCL.Surrogate_Number_USR);
 {
  //?USER: Processing if Data record not found

  // PAR.EDI SURROGATE NUMBER = CON.100
  PAR.EDI_SURROGATE_NUMBER = 100;

  //?USER: Process Data record

  // PAR.EDI SURROGATE NUMBER = DB1.EDI SURROGATE NUMBER + CON.1
  PAR.EDI_SURROGATE_NUMBER = DB1.EDI_SURROGATE_NUMBER + 1;

  QUIT;

 }

 // LCL.Surrogate Number USR = LCL.Surrogate Number USR + CON.1
 LCL.Surrogate_Number_USR = LCL.Surrogate_Number_USR + 1;

 //?Create Trans set with new surrogate number
 EXECUTE FUNCTION(Rtv/Crt for CancelOrd  RT) TYPE(RTVOBJ) FILE(ECP064)           AC2158137;
 PARAMETER(DB1.EDI_SURROGATE_NUMBER);
 PARAMETER(LCL.Surrogate_Number_USR);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Crt WHS Stock Txfr REF CR) TYPE(CRTOBJ) FILE(ECP064)           AC2139132;
  PARAMETER(PAR.Surrogate_Number_USR);
  PARAMETER(DB1.LX01_Sequence_Number);
  PARAMETER(DB1.EDI_Ref_Sequence_Nbr);
  PARAMETER(DB1.N901_Reference_ID_Qlfr);
  PARAMETER(DB1.N902_Reference_ID_Nbr);
  PARAMETER(DB1.N903_Reference_ID_Wgt);
  PARAMETER(DB1.N904_Production_Date);
 }

 EXECUTE FUNCTION(Rtv/Crt for CancelOrd) TYPE(RTVOBJ) FILE(ECP061)               AC2158138;
 PARAMETER(DB1.EDI_SURROGATE_NUMBER);
 PARAMETER(LCL.Surrogate_Number_USR);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Crt WHS for Cancel     CR) TYPE(CRTOBJ) FILE(ECP061)           AC2158139;
  PARAMETER(PAR.Surrogate_Number_USR);
  PARAMETER(DB1.LX01_Sequence_Number);
  PARAMETER(DB1.W0401_Quantity_Shipped);
  PARAMETER(DB1.W0402_Unit_of_Measure);
  PARAMETER(DB1.W0403_UPC_Case_Code);
  PARAMETER(DB1.W0404_Prod_ID_Qlfr);
  PARAMETER(DB1.W0405_Prod_ID_Code);
  PARAMETER(DB1.W0406_Pallet_Number_Qlfr);
  PARAMETER(DB1.W0407_Pallet_Number);
  PARAMETER(DB1.W2004_Weight_Shipped);
  PARAMETER(DB1.W2005_Weight_Qualifier);
  PARAMETER(DB1.W2006_Weight_UOM);
  PARAMETER(DB1.G6901_Item_Description);
  PARAMETER(DB1.N904_Production_Date);
 }

 EXECUTE FUNCTION(Rtv/Crt for CancelOrd) TYPE(RTVOBJ) FILE(ECP063)               AC2158140;
 PARAMETER(DB1.EDI_SURROGATE_NUMBER);
 PARAMETER(LCL.Surrogate_Number_USR);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Crt WHS Stock Txfr NME CR) TYPE(CRTOBJ) FILE(ECP063)           AC2138762;
  PARAMETER(PAR.Surrogate_Number_USR);
  PARAMETER(DB1.N101_NAME_TYPE_CODE);
  PARAMETER(DB1.N102_NAME);
  PARAMETER(DB1.N103_ID_CODE_QUALIFIER);
  PARAMETER(DB1.N104_ID_CODE);
  PARAMETER(DB1.N201_NAME);
  PARAMETER(DB1.N202_NAME);
  PARAMETER(DB1.N301_ADD);
  PARAMETER(DB1.N302_ADDRESS);
  PARAMETER(DB1.N401_CITY);
  PARAMETER(DB1.N402_STATE);
  PARAMETER(DB1.N403_POSTAL_CODE);
 }

 EXECUTE FUNCTION(Crt WHS Stock Txfr HDR CR) TYPE(CRTOBJ) FILE(ECP060)           AC2138756;
 PARAMETER(LCL.Surrogate_Number_USR);
 PARAMETER(DB1.TRADE_PARTNER_CODE);
 PARAMETER('N');
 PARAMETER(DB1.W0601_Reporting_Code);
 PARAMETER(DB1.W0602_Depositor_Order_Nbr);
 PARAMETER(DB1.W0603_Shipment_Date);
 PARAMETER(DB1.W0604_Shipment_Num_BOL);
 PARAMETER(DB1.W0606_Customer_PO);
 PARAMETER(DB1.W0611_Transaction_Type);
 PARAMETER('3');
 PARAMETER(DB1.W0301_Quantity_Shipped);
 PARAMETER(DB1.W0302_Weight_Shipped);
 PARAMETER(DB1.W0303_Unit_of_Measure);
 PARAMETER(DB1.G6201_Date_Qualifier);
 PARAMETER(DB1.G6202_Req_Delivery_Date);
 PARAMETER(DB1.W2701_Transportation_Type);
 PARAMETER(DB1.W2702_SCAC_Carrier_Code);
 PARAMETER(DB1.W0304_Number_of_Pallets);
 PARAMETER(DB1.W0305_Unit_of_Measurement);
 PARAMETER(DB1.W0306_Number_of_Spacers);
 PARAMETER(DB1.W0307_Unit_of_Measurement);
 PARAMETER(DB1.W2703_Carrier_Name);
 PARAMETER(DB1.W2704_Shipment_Method);
}


ENDIF;

ENDIF;

//?Update header if successful process on details
// IF *OTHERWISE
IF *OTHERWISE;

PGM.*Return_code = 'CANERR';

RETURN;

ENDIF;

