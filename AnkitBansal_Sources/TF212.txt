      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Triumph Foods
      * PROGRAM:     TF212 - Weekly Revenue: Update Revenue Detail with Claim Data
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     03/30/05
      *
      * Function:    This program reads the Claim Adjustment file for the week and
      *              updates the Revenue Detail records for that week.
      *
      *              This program runs when:
      *                1) there are no errors from the edit
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 03/13/06  LeAnne Fedor
      *           Recompile only. "Floor" produced pounds and amount were added
      *           to file TFP010.
      *
      * 04/27/06  LeAnne Ramsey
      *           Fixed program bug. The "record exempt flag" field was not being
      *           populated on the write of records to TFP010.
      *
      * 08/39/06  LeAnne Ramsey
      *           Recompile only. New fields were added to TFP022-Claim Adjustments.
      *
      * 09/29/06  LeAnne Fedor
      *           Removed logic to retrieve 'Pump %'.
      *
      * 10/13/06  LeAnne Ramsey
      *           Removed Item Bill of Material file. We only used it for Pump %---and
      *           we removed that logic.
      *
      * 02/14/07  LeAnne Ramsey
      *           Recompile only. New field "STD Other Cost/LB" was added to
      *           Weekly Product Revenue Detail file.
      *
      * 03/26/07  LeAnne Ramsey
      *           Added logic to retrieve the Capability Flag and populate this
      *           new field in the Weekly Product Revenue Detail file.
      *
      * 04/05/07  LeAnne Ramsey
      *           We just added the Exclude from Mix and Exclude from Volume Flags to the
      *           Weekly Product Revenue Detail file. So, I expanded the logic that
      *           retrieves the new Capablity Flag to retrieve these two "exclude" flags.
      *
      * 04/16/07  LeAnne Ramsey
      *           On the call to TF809:
      *           Added parms: Meat Cost Group Code
      *           Changed parms: Exclude from Mix Flag     to  Mix Flag
      *                          Exclude from Volume Flag  to  Volume Flag
      *                          Capability Flag           to  Inventory Flag
      *
      * 05/14/07  LeAnne Ramsey
      *           Added new parms for Prime Pork stuff to generic programs:
      *                TF Percent Owned  (TF809)
      *                Co-owned Flag     (TF813)
      *                Producing Company (TF813)
      *
      * 05/29/07  LeAnne Ramsey
      *           Added 3 fields to the Weekly Product Revenue file:
      *              Co-owned Flag
      *              Producing Company
      *              TF Percent Owned
      *           Added logic to calc the 'co-own' splits for the Claim Expenses.
      *
      * 07/03/07  Alice Brownfield
      *           Removed logic to calc the 'co-own' splits for the Claim Expenses.
      *           They decided that we would only split the net.
      *
      * 08/13/07  LeAnne Ramsey
      *           Added new parm on call to generic program:
      *                 Item Type Code (TF813)
      *
      * 08/15/08  LeAnne Ramsey
      *           On the call to TF809:
      *           Added parm: Producing Company (3A)
      *
      * 09/11/08  LeAnne Ramsey
      *           Added parm to the call to TF813:
      *               Export/Domestic Flag
      *
      * 01/05/11  LeAnne Ramsey (E1245)
      *           Recompile only. One new field was added to TFP022-Claim Adjustments:
      *              1) customer type
      *
      * 11/14/17  Danny Nguyen  (R12011A-Weekly Product Revenue)
      *           Added 25 STF fields to TFP010 file.
      *           Added 2 STF fields to TFP022 file:
      *             CLXRPPC  - STF RESPONSIBILITY %
      *             CLXNCLAM - STF NET CLAIM AMT
      *           Populate the STF fields in TFP010 file.
      *           TF410CL was changed to select Company 440 in Open Query Logic.
      *           STF (Company 440) data will now be populated into it's own STF fields in
      *           TFP010 file in order to create new STF reports like the ones used in Fees
      *           & Payments system.
      *
      * 08/10/18  Rose Centonze (S13578A-Cash Distribution out of balance due to STF Claims
      *           in the TFP010 Aggregate buckets)
      *       !!  If claim is 440 then do not add its gross,net,lbs to aggregate buckets in tfp010
      *
      * 05/17/22  Danny Nguyen  (DO2484 - WI 479 STF Variance Reporting)
      *           Recompile only. Added 2 STF fields to TFP010 file.
      *           PRXYPC   - STF STD YIELD %
      *           PRXPMPPC - STF PUMP %
      *
      * 10/10/22  R Centonze   W105621 - Increase price fields to handle > 999.99
      *                        CHANGE @@ANPRPR TO SIZE 10.6  --> pranprpr tfp010
      *                        CHANGE @@anprpr TO SIZE 10.6  --> clanprpr tfp022
      *                        CHANGE @@nclpr  TO SIZE 10.6  --> clnclpr  tfp022
      *
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Ftfl010a   uf   e           k disk    rename(prrec:prreca) prefix(p1)
      *  Weekly product revenue detail
      *
      *
     Ftfp010    o    e           k disk
      *  Weekly product revenue detail
      *
      *
     Ftfl022d   if   e           k disk
      *  Claim adjustments
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Control fields
      *
     D first           s              1    inz('Y')
     D svprcd          s                   like(prprcd)
     D svrcexfl        s                   like(prrcexfl)
     D svprexfl        s                   like(prprexfl)
      *
      *
      * Workfields
      *
     D wkagclam        s                   like(pragclam)
     D wkanclam        s                   like(pranclam)
     D wkacllb         s                   like(pracllb)
     D wksnclam        s                   like(prsnclam)
     D wktnclam        s                   like(prtnclam)
     D wkscllb         s                   like(prscllb)
     D wktcllb         s                   like(prtcllb)
      *
     D wksclafam       s                   like(prsclafam)
     D wksclbcam       s                   like(prsclbcam)
     D wkscloxam       s                   like(prscloxam)
     D wksclsxam       s                   like(prsclsxam)
      *
     D wktclafam       s                   like(prtclafam)
     D wktclbcam       s                   like(prtclbcam)
     D wktcloxam       s                   like(prtcloxam)
     D wktclsxam       s                   like(prtclsxam)
      *
12011D wkxcllb         s                   like(prxcllb)
  |  D wkxnclam        s                   like(prxnclam)
  |  D wkxclafam       s                   like(prxclafam)
  |  D wkxclbcam       s                   like(prxclbcam)
  |  D wkxcloxam       s                   like(prxcloxam)
12011D wkxclsxam       s                   like(prxclsxam)
      *
      *
      * Parm fields
      *
     D xxprcd          s                   like(prprcd)
     D xxistycd        s                   like(pristycd)
     D xxisgrcd        s                   like(prisgrcd)
     D xxisclcd        s                   like(prisclcd)
     D xxtfclcd        s                   like(prtfclcd)
     D xxtfcgcd        s                   like(prtfcgcd)
     D xxglsub         s                   like(prglsub)
     D xxitycd         s                   like(pritycd)
     D xxinvfl         s                   like(prinvfl)
     D xxmixfl         s                   like(prmixfl)
     D xxvolfl         s                   like(prvolfl)
     D xxcgcd          s                   like(prcgcd)
     D xxcoownfl       s                   like(prcoownfl)
     D xxprdcmp        s                   like(prprdcmp)
     D xxtownpc        s                   like(prtownpc)
     D xxedfl          s                   like(predfl)
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Local data area
      *---------------------------------------------------------------
      *
     d lda            uds                  dtaara(*lda)
     D  ldyr                   1      4  0
     D  ldwk                   5      6  0
     D  ldwbdt                 7     14  0
     D  ldsynwbdt             15     21  0
     D  ldwedt                22     29  0
     D  ldsynwedt             30     36  0
     D  ldpfcd                37     37
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * Mainline
      ****************************************************************
      *
      * Read all Claim Adjustment records for the week-ending date.
      *
     C     ldwedt        setll     tfl022d
      *
     C                   dou       *in90 = *on                                  Main do
     C     ldwedt        reade     tfl022d                                90
     C                   if        *in90 = *off                                 If not EOF
      *
      * Control break
     C                   select
     C                   when      first = yes
     C                   move      no            first
     C                   z-add     clprcd        svprcd
     C                   move      clrcexfl      svrcexfl
     C                   move      clprexfl      svprexfl
      *
     C                   when      clprcd <> svprcd or
     C                             clrcexfl <> svrcexfl or
     C                             clprexfl <> svprexfl
     C                   exsr      $upd010
     C                   z-add     clprcd        svprcd
     C                   move      clrcexfl      svrcexfl
     C                   move      clprexfl      svprexfl
     C                   endsl
      *
      * Detail processing:
      *   Accumulate values
      *
     C                   exsr      $accum010
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do
      *
      * EOF processing
     C                   if        first = no
     C                   exsr      $upd010
     C                   endif
      *
     C                   seton                                        lr
      /eject
      *---------------------------------------------------------------
      * Accumulate Claims Data for the Product
      *---------------------------------------------------------------
      *
     C     $accum010     begsr
      *
      * Aggregate   - S13578 8.10.18 RMC add to if 360/960 - so moved below to company SELEC
      *  1) claim pounds
      *  2) gross claim amount
      *
     C*****              add       clacllb       wkacllb                             agg lbs
     C*****              add       clagclam      wkagclam                            agg gross amt
      *
      * Net Claim amounts:
      *   1) Aggregate   - S13578 8.10.18 RMC add to if 360/960 - so moved below to company SELEC
      *   2) Seaboard
      *   3) Triumph
12011 *   4) Seaboard Triumph Foods
     C*****              add       clanclam      wkanclam                             agg net amt
     C                   add       clsnclam      wksnclam
     C                   add       cltnclam      wktnclam
12011C                   add       clxnclam      wkxnclam
      *
      * Seaboard
     C                   select
     C                   when      clcono = 360
     C                   add       clacllb       wkacllb                             agg lbs
     C                   add       clagclam      wkagclam                            agg gross amt
     C                   add       clanclam      wkanclam                            agg net amt
     C                   add       clacllb       wkscllb
     C                   add       clclafam      wksclafam
     C                   add       clclbcam      wksclbcam
     C                   add       clcloxam      wkscloxam
     C                   add       clclsxam      wksclsxam
      * Triumph
     C                   when      clcono = 960
     C                   add       clacllb       wkacllb                             agg lbs
     C                   add       clagclam      wkagclam                            agg gross amt
     C                   add       clanclam      wkanclam                            agg net amt
     C                   add       clacllb       wktcllb
     C                   add       clclafam      wktclafam
     C                   add       clclbcam      wktclbcam
     C                   add       clcloxam      wktcloxam
     C                   add       clclsxam      wktclsxam
      *
12011 * Seaboard Triumph Foods
  |  C                   when      clcono = 440
  |  C                   add       clacllb       wkxcllb
  |  C                   add       clclafam      wkxclafam
  |  C                   add       clclbcam      wkxclbcam
  |  C                   add       clcloxam      wkxcloxam
12011C                   add       clclsxam      wkxclsxam
      *
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Update/write a Weekly Product Revenue Detail record
      *---------------------------------------------------------------
      *
     C     $upd010       begsr
      *
      * Retrieve/update the Revenue Detail record for this date/product.
      * If no Revenue Detail records exists, write a record.
      *
     C     key01         chain     tfl010a                            92
     C                   if        *in92 = *off                                 If hit
     C                   z-add     wkagclam      p1pragclam
     C                   z-add     wkanclam      p1pranclam
     C                   z-add     wkacllb       p1pracllb
      *
     C                   z-add     wksnclam      p1prsnclam
     C                   z-add     wktnclam      p1prtnclam
12011C                   z-add     wkxnclam      p1prxnclam
      *
     C                   z-add     wkscllb       p1prscllb
     C                   z-add     wksclafam     p1prsclafam
     C                   z-add     wksclbcam     p1prsclbcam
     C                   z-add     wkscloxam     p1prscloxam
     C                   z-add     wksclsxam     p1prsclsxam
      *
     C                   z-add     wktcllb       p1prtcllb
     C                   z-add     wktclafam     p1prtclafam
     C                   z-add     wktclbcam     p1prtclbcam
     C                   z-add     wktcloxam     p1prtcloxam
     C                   z-add     wktclsxam     p1prtclsxam
      *
12011C                   z-add     wkxcllb       p1prxcllb
  |  C                   z-add     wkxclafam     p1prxclafam
  |  C                   z-add     wkxclbcam     p1prxclbcam
  |  C                   z-add     wkxcloxam     p1prxcloxam
12011C                   z-add     wkxclsxam     p1prxclsxam
      *
     C     p1prsclafam   add       p1prtclafam   p1praclafam
     C     p1prsclbcam   add       p1prtclbcam   p1praclbcam
     C     p1prscloxam   add       p1prtcloxam   p1pracloxam
     C     p1prsclsxam   add       p1prtclsxam   p1praclsxam
      *
     C                   update    prreca
     C                   else
      *
     C                   exsr      $wrt010
     C                   endif
      *
      * Clear accumulators
     C                   z-add     0             wkagclam
     C                   z-add     0             wkanclam
     C                   z-add     0             wkacllb
      *
     C                   z-add     0             wkscllb
     C                   z-add     0             wksnclam
     C                   z-add     0             wksclafam
     C                   z-add     0             wksclbcam
     C                   z-add     0             wkscloxam
     C                   z-add     0             wksclsxam
      *
     C                   z-add     0             wktnclam
     C                   z-add     0             wktcllb
     C                   z-add     0             wktclafam
     C                   z-add     0             wktclbcam
     C                   z-add     0             wktcloxam
     C                   z-add     0             wktclsxam
      *
12011C                   z-add     0             wkxcllb
  |  C                   z-add     0             wkxnclam
  |  C                   z-add     0             wkxclafam
  |  C                   z-add     0             wkxclbcam
  |  C                   z-add     0             wkxcloxam
12011C                   z-add     0             wkxclsxam
      *
     C                   endsr
      /eject
      *-------------------------------------------------------------------
      * Write a Revenue Detail records
      *-------------------------------------------------------------------
      *
     C     $wrt010       begsr
      *
     C                   clear                   prrec
      *
     C                   z-add     ldyr          pryr
     C                   z-add     ldwk          prwk
     C                   z-add     ldwbdt        prwbdt
     C                   z-add     ldwedt        prwedt
     C                   move      ldpfcd        prpfcd
     C                   z-add     svprcd        prprcd
     C                   move      svprexfl      prprexfl
     C                   move      svrcexfl      prrcexfl
      *
      * Retrieve TF Classification and Item Structure stuff
      *
     C                   call      'TF813'
     C                   parm      svprcd        xxprcd
     C     pristycd      parm      0             xxistycd
     C     prisgrcd      parm      0             xxisgrcd
     C     prisclcd      parm      0             xxisclcd
     C     prtfclcd      parm      *blank        xxtfclcd
     C     prtfcgcd      parm      *blank        xxtfcgcd
     C     prglsub       parm      *blank        xxglsub
     C     pritycd       parm      *blank        xxitycd
     C     prcoownfl     parm      *blank        xxcoownfl
     C     prprdcmp      parm      *blank        xxprdcmp
     C     predfl        parm      *blank        xxedfl
      *
      *
      * Retrieve Item Structure values
      *
     C                   call      'TF809'
     C                   parm      prtfclcd      xxtfclcd
     C                   parm      pristycd      xxistycd
     C                   parm      prisgrcd      xxisgrcd
     C                   parm      prisclcd      xxisclcd
     C     prinvfl       parm      *blank        xxinvfl
     C     prmixfl       parm      *blank        xxmixfl
     C     prvolfl       parm      *blank        xxvolfl
     C     prcgcd        parm      *blank        xxcgcd
     C     prtownpc      parm      0             xxtownpc
     C                   parm      *blank        xxprdcmp
      *
      *
      * Populate Claims fields
      *
     C                   z-add     wkagclam      pragclam
     C                   z-add     wkanclam      pranclam
     C                   z-add     wkacllb       pracllb
      *
     C                   z-add     wksnclam      prsnclam
     C                   z-add     wktnclam      prtnclam
12011C                   z-add     wkxnclam      prxnclam
      *
     C                   z-add     wkscllb       prscllb
     C                   z-add     wksclafam     prsclafam
     C                   z-add     wksclbcam     prsclbcam
     C                   z-add     wkscloxam     prscloxam
     C                   z-add     wksclsxam     prsclsxam
      *
     C                   z-add     wktcllb       prtcllb
     C                   z-add     wktclafam     prtclafam
     C                   z-add     wktclbcam     prtclbcam
     C                   z-add     wktcloxam     prtcloxam
     C                   z-add     wktclsxam     prtclsxam
      *
12011C                   z-add     wkxcllb       prxcllb
  |  C                   z-add     wkxclafam     prxclafam
  |  C                   z-add     wkxclbcam     prxclbcam
  |  C                   z-add     wkxcloxam     prxcloxam
12011C                   z-add     wkxclsxam     prxclsxam
      *
     C     prsclafam     add       prtclafam     praclafam
     C     prsclbcam     add       prtclbcam     praclbcam
     C     prscloxam     add       prtcloxam     pracloxam
     C     prsclsxam     add       prtclsxam     praclsxam
      *
     C                   write     prrec
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
     C     key01         klist
     C                   kfld                    clwedt
     C                   kfld                    svprcd
     C                   kfld                    svrcexfl
     C                   kfld                    svprexfl
      *
     C                   endsr
      /eject
