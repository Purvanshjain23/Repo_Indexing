// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMY3XFR
// ?Date: 14.08.2025 Time: 03:44:35
// ?------------------------------------------------------------------------------------------------

//?Execute user function

EXECUTE FUNCTION(Prc Crdt Check Audit  RT) TYPE(RTVOBJ) FILE(ARBECPP)           AC1901923;
PARAMETER(PAR.Bank_Code);
PARAMETER(PAR.Deposit_Date);
PARAMETER(PAR.Deposit_Time);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Number_of_Copies);
PARAMETER(PAR.PRT_Night_Queue);
{
 //?USER: Initialize routine

 EXECUTE FUNCTION(Del Crd Chk Post AR DepRT) TYPE(RTVOBJ) ARRAY(ARR_Crd_Chk_Post_AC1901937;
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Del Crd Chk Post AR Dep) TYPE(DLTOBJ) ARRAY(ARR_Crd_Chk_Post_ARAC1901934;
  PARAMETER(DB1.Parent_Customer);
 }

 // LCL.Parent Customer = CON.*ZERO
 LCL.Parent_Customer = *ZERO;

 //?USER: Process Data record

 CASE;

 // IF DB1.Adjustment Type Code is Regular Pay
 IF DB1.Adjustment_Type_Code = 'PAY';

 EXECUTE FUNCTION(Rtv Parent Customer   RT) TYPE(RTVOBJ) FILE(OMHSTPP)           AC1901938;
 PARAMETER(DB1.Invoice_Number);
 PARAMETER(DB1.Company_Number);
 PARAMETER(PAR.Parent_Customer);
 PARAMETER(PAR.AR_Customer_Number);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 EXECUTE FUNCTION(Rtv Open Order Value  RT) TYPE(RTVOBJ) FILE(ARBCREP)           AC1901957;
 PARAMETER(PAR.AR_Customer_Number);
 PARAMETER(LCL.Value_of_Open_Orders);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  // PAR.Value of Open Orders = PAR.Value of Open Orders + DB1.Value of Open Orders
  PAR.Value_of_Open_Orders = PAR.Value_of_Open_Orders + DB1.Value_of_Open_Orders;

 }

 CASE;

 // IF LCL.Value of Open Orders is greater than zero
 IF LCL.Value_of_Open_Orders > *ZERO;

 CASE;

 // IF LCL.Parent Customer NE PAR.Parent Customer
 IF LCL.Parent_Customer <> PAR.Parent_Customer;

 // AND PAR.Parent Customer is not equal to zero
 AND PAR.Parent_Customer <> *ZERO;

 EXECUTE FUNCTION(Crt Crd Chk Post AR DepRT) TYPE(RTVOBJ) ARRAY(ARR_Crd_Chk_Post_AC1901936;
 PARAMETER(PAR.Parent_Customer);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Crd Chk Post AR Dep) TYPE(CRTOBJ) ARRAY(ARR_Crd_Chk_Post_ARAC1901935;
  PARAMETER(PAR.Parent_Customer);
 }

 // LCL.Parent Customer = PAR.Parent Customer
 LCL.Parent_Customer = PAR.Parent_Customer;

 ENDIF;

 ENDIF;

 ENDIF;

 //?USER: Exit processing

 EXECUTE FUNCTION(Prc Crd Chk Post AR DepRT) TYPE(RTVOBJ) ARRAY(ARR_Crd_Chk_Post_AC1901939;
 PARAMETER(PAR.PRT_Printer_Device);
 PARAMETER(PAR.PRT_Hold_Output_Sts);
 PARAMETER(PAR.PRT_Save_Output_Sts);
 PARAMETER(PAR.PRT_Number_of_Copies);
 PARAMETER(PAR.PRT_Night_Queue);
 {
  //?USER: Process Data record

  // LCL.Customer Number Pass  USR = DB1.Parent Customer
  LCL.Customer_Number_Pass_USR = DB1.Parent_Customer;

  // LCL.Copies 15.5           USR = PAR.PRT Number of Copies
  LCL.Copies_15_5_USR = PAR.PRT_Number_of_Copies;

  // Call program PRT Audit Report CL Dy CL.
  SBMJOB;
  CALL PROGRAM(PRT Audit Report CL Dy CL) ('POY4UPR');
  PARAMETER('N');
  PARAMETER(LCL.Customer_Number_Pass_USR);
  PARAMETER(PAR.PRT_Printer_Device);
  PARAMETER(PAR.PRT_Hold_Output_Sts);
  PARAMETER(*YES);
  PARAMETER(LCL.Copies_15_5_USR);
  SBMJOBOVR JOB(CRCHECK);
  SBMJOBOVR JOBD(*USRPRF);
  SBMJOBEND;

 }

}


