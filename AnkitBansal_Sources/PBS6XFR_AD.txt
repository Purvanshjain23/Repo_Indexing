// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PBS6XFR
// ?Date: 14.08.2025 Time: 03:49:19
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Modifications and Comments
DO;

//?E3787 JJH 10/01/15
//?- If a Batch is NOT sent on the Date in which the Batch was
//?  created, the Batch's PFS Processed Status is automatically set
//?  to Not Sent-Voided.
//?- If a Batch is Not Sent with a Batch Date and Batch Time that is
//?  prior to a Batch that has a PFS Baseline Schedule of B=Baseline,
//?  the Batch is automatically voided, and PFS Process Status is
//?  set to Not Sent-Voided.
ENDDO;

//?Void Batches that were not sent on previous days.
EXECUTE FUNCTION(Rtv Void Unsent Bt Hd1RT) TYPE(RTVOBJ) FILE(PBB2CPP)           AC2111995;
{
 //?USER: Initialize routine

 EXECUTE FUNCTION(Rtv System Date *CYMD IF) TYPE(EXCINTFUN)                      AC1952751;
 PARAMETER(LCL.System_Date_USR);
 {
  //?Execute internal function

  // LCL.*System timestamp = JOB.*System timestamp
  LCL.*System_timestamp = JOB.*System_timestamp;

  // LCL.Year USR = SUBSTRING(LCL.*System timestamp,CON.1,CON.4)
  LCL.Year_USR = SUBSTRING(LCL.*System_timestamp:1:4);

  // LCL.Month USR = SUBSTRING(LCL.*System timestamp,CON.6,CON.2)
  LCL.Month_USR = SUBSTRING(LCL.*System_timestamp:6:2);

  // LCL.Day USR = SUBSTRING(LCL.*System timestamp,CON.9,CON.2)
  LCL.Day_USR = SUBSTRING(LCL.*System_timestamp:9:2);

  // LCL.Date (Char-8) USR = CONCAT(LCL.Year USR,LCL.Month USR,CON.*ZERO)
  LCL.Date_Char_8_USR = LCL.Year_USR + LCL.Month_USR (*ZERO);

  // LCL.Date (Char-8) USR = CONCAT(LCL.Date (Char-8) USR,LCL.Day USR,CON.*ZERO)
  LCL.Date_Char_8_USR = LCL.Date_Char_8_USR + LCL.Day_USR (*ZERO);

  // LCL.DATE = CVTVAR(LCL.Date (Char-8) USR)
  LCL.DATE = CVTVAR(LCL.Date_Char_8_USR);

  EXECUTE FUNCTION(CVT *YYMD to *CYMD    IF) TYPE(EXCINTFUN)                      AC1929228;
  PARAMETER(PAR.System_Date_USR);
  PARAMETER(LCL.DATE);
  {
   //?Execute internal function

   //?** YEAR **
   // PAR.Year Code = PAR.DATE / CON.10000 *
   PAR.Year_Code = PAR.DATE / 10000;

   // PAR.Year  NBR USR = PAR.Year Code
   PAR.Year_NBR_USR = PAR.Year_Code;

   // PAR.Year  (Char) USR = CVTVAR(PAR.Year  NBR USR)
   PAR.Year_Char_USR = CVTVAR(PAR.Year_NBR_USR);

   //?** MONTH **
   // PAR.Month                 USR = PAR.DATE / CON.100 *
   PAR.Month_USR = PAR.DATE / 100;

   // PAR.Month (Char) USR = CVTVAR(PAR.Month                 USR)
   PAR.Month_Char_USR = CVTVAR(PAR.Month_USR);

   //?** DAY **
   // PAR.Day of Month USR = PAR.DATE
   PAR.Day_of_Month_USR = PAR.DATE;

   // PAR.Day   (Char) USR = CVTVAR(PAR.Day of Month USR)
   PAR.Day_Char_USR = CVTVAR(PAR.Day_of_Month_USR);

   //?CENTURY+YEAR
   CASE;

   // IF PAR.Year Code is Twentieth Century
   IF PAR.Year_Code <= 1999;

   // PAR.Date (Alpha) USR = CONCAT(CON.0,PAR.Year  (Char) USR,CON.*ZERO)
   PAR.Date_Alpha_USR = '0' + PAR.Year_Char_USR (*ZERO);

   //?CENTURY+YEAR
   // IF *OTHERWISE
   IF *OTHERWISE;

   // PAR.Date (Alpha) USR = CONCAT(CON.1,PAR.Year  (Char) USR,CON.*ZERO)
   PAR.Date_Alpha_USR = '1' + PAR.Year_Char_USR (*ZERO);

   ENDIF;

   // PAR.Date (Alpha) USR = CONCAT(PAR.Date (Alpha) USR,PAR.Month (Char) USR,CON.*ZERO)
   PAR.Date_Alpha_USR = PAR.Date_Alpha_USR + PAR.Month_Char_USR (*ZERO);

   // PAR.Date (Alpha) USR = CONCAT(PAR.Date (Alpha) USR,PAR.Day   (Char) USR,CON.*ZERO)
   PAR.Date_Alpha_USR = PAR.Date_Alpha_USR + PAR.Day_Char_USR (*ZERO);

   // PAR.Date                  USR = CVTVAR(PAR.Date (Alpha) USR)
   PAR.Date_USR = CVTVAR(PAR.Date_Alpha_USR);

  }

 }

 EXECUTE FUNCTION(CNV cyymmdd to yyyymmdd) TYPE(EXCINTFUN)                       AC1732965;
 PARAMETER(LCL.System_Date_USR);
 PARAMETER(LCL.PFS_Batch_Date);
 {
  //?Execute internal function

  // LCL.Year Code = PAR.Date In  (7,0) USR *YEAR
  LCL.Year_Code = DATEDTLS(PAR.Date_In_70_USR 'YR' 1111111 'NONE' 'N' 1);

  // LCL.Month NBR USR = PAR.Date In  (7,0) USR *MONTH
  LCL.Month_NBR_USR = DATEDTLS(PAR.Date_In_70_USR 'MO' 1111111 'NONE' 'N' 1);

  // LCL.Day of Month USR = PAR.Date In  (7,0) USR *DAY OF MONTH
  LCL.Day_of_Month_USR = DATEDTLS(PAR.Date_In_70_USR 'DM' 1111111 'NONE' 'N' 1);

  // PAR.Year Alpha (YYYY) USR = CVTVAR(LCL.Year Code)
  PAR.Year_Alpha_YYYY_USR = CVTVAR(LCL.Year_Code);

  // PAR.Month (Char) USR = CVTVAR(LCL.Month NBR USR)
  PAR.Month_Char_USR = CVTVAR(LCL.Month_NBR_USR);

  // PAR.Day   (Char) USR = CVTVAR(LCL.Day of Month USR)
  PAR.Day_Char_USR = CVTVAR(LCL.Day_of_Month_USR);

  // PAR.Date (Char-8) USR = CONCAT(PAR.Year Alpha (YYYY) USR,PAR.Month (Char) USR,CON.*ZERO)
  PAR.Date_Char_8_USR = PAR.Year_Alpha_YYYY_USR + PAR.Month_Char_USR (*ZERO);

  // PAR.Date (Char-8) USR = CONCAT(PAR.Date (Char-8) USR,PAR.Day   (Char) USR,CON.*ZERO)
  PAR.Date_Char_8_USR = PAR.Date_Char_8_USR + PAR.Day_Char_USR (*ZERO);

  // PAR.Date Out (8,0) USR = CVTVAR(PAR.Date (Char-8) USR)
  PAR.Date_Out_80_USR = CVTVAR(PAR.Date_Char_8_USR);

 }

 //?USER: Process Data record

 CASE;

 // IF DB1.PFS Process Status is Sent
 IF DB1.PFS_Process_Status = 9;

 //?PFS Batch has been Sent, so no need to void
 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF DB1.PFS Batch Date LT LCL.PFS Batch Date
 IF DB1.PFS_Batch_Date < LCL.PFS_Batch_Date;

 //?Set PFS Process Status to Not Sent-Voided
 EXECUTE FUNCTION(Chg PFS Process Sts   RT) TYPE(CHGOBJ) FILE(PBB2CPP)           AC2110677;
 PARAMETER(DB1.PFS_Company_Number);
 PARAMETER(DB1.PFS_Batch_Date);
 PARAMETER(DB1.PFS_Batch_Time);
 PARAMETER(DB1.PFS_User_ID);
 PARAMETER(5);
 PARAMETER(DB1.PFS_Change_Date);
 PARAMETER(DB1.PFS_Change_Time);
 ENDIF;

 ENDIF;

}


