// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKPIEFR
// ?Date: 14.08.2025 Time: 02:50:37
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?H16853 ISE 01/23/2021 - Increased the length from 5 to 7 and corrected the
//?                        alignment of Buy Order Number field.
// Execute function Mov ApplN to Company  US.
EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
PARAMETER(PAR.Oms_System_Value_Alpha);
{
 C***   MOVE USER SOURCE                      ***
 C                     MOVEL#IEVTX    ##CMP
}


//?USER: Validate subfile record fields

// RCD.LTN Company Number = CTL.LTN Company Number
RCD.LTN_Company_Number = CTL.LTN_Company_Number;

// RCD.BOH Company Number = CTL.LTN Company Number
RCD.BOH_Company_Number = CTL.LTN_Company_Number;

// RCD.TH Tattoo Number = RCD.LTN Tattoo Number
RCD.TH_Tattoo_Number = RCD.LTN_Tattoo_Number;

// RCD.LTN Kill Date = CTL.LTN Kill Date
RCD.LTN_Kill_Date = CTL.LTN_Kill_Date;

// RCD.TH Kill Date = CTL.LTN Kill Date
RCD.TH_Kill_Date = CTL.LTN_Kill_Date;

// WRK.Return Code USR = CND.*Normal
WRK.Return_Code_USR = *BLANK;

EXECUTE FUNCTION(Rtv Tatts/Bo Load     RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1135414;
PARAMETER(RCD.BOH_Company_Number);
PARAMETER(RCD.BOH_Buy_Order_Number);
PARAMETER(RCD.BOL_Load_Number);
PARAMETER(RCD.TH_Tattoo_Number);
PARAMETER(RCD.TH_Kill_Date);
PARAMETER(WRK.TH_Sex);
PARAMETER(RCD.LTN_Source_Type);
PARAMETER(WRK.TH_Hog_Class_Type);
PARAMETER(WRK.THP_Process_Code);
PARAMETER(WRK.HC_Class_Code);
PARAMETER(WRK.Return_Code_USR);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PAR.Return Code USR = CND.*Record does not exist
 PAR.Return_Code_USR = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


CASE;

// IF WRK.Return Code USR is *Normal
IF WRK.Return_Code_USR = *BLANK;

//?Process code validated
CASE;

// IF WRK.THP Process Code is Receiving
IF WRK.THP_Process_Code = 'RECV';

//?Process code validated
// IF WRK.THP Process Code is Slaughter
IF WRK.THP_Process_Code = 'SLG';

//?Process code validated
// IF *OTHERWISE
IF *OTHERWISE;

//?Tattoo Process code is not Receiving or Slaughter
//?Can not enter data until that time
// Send error message - 'Tattoo is not Ready for Slaughter.'
ERROR(PRK0373);
MSGPARM(RCD.LTN_Tattoo_Number);
MSGPARM(WRK.THP_Process_Code);

QUIT;

ENDIF;

CASE;

// IF WRK.TH Hog Class Type is Resale
IF WRK.TH_Hog_Class_Type = 'R';

// Send error message - 'Tattoo is resale'
ERROR(PRK0468);
MSGPARM(RCD.LTN_Tattoo_Number);

// IF *OTHERWISE
IF *OTHERWISE;

ENDIF;

// IF *OTHERWISE
IF *OTHERWISE;

//?Invalid Tattoo Number
// Send error message - 'Tattoo Number Not Found'
ERROR(PRK0368);
MSGPARM(RCD.LTN_Tattoo_Number);

ENDIF;

CASE;

// IF RCD.LT Type Code is Viscera Loss
IF RCD.LT_Type_Code = 04;

CASE;

// IF RCD.LTN Extent is Viscera List
IF RCD.LTN_Extent = '01'/'02';

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Loss Extent is required, or invalid'
ERROR(PRK0363);
MSGPARM(RCD.LTN_Extent);

ENDIF;

// IF *OTHERWISE
IF *OTHERWISE;

CASE;

// IF RCD.LTN Trim Location is List of Trim
IF RCD.LTN_Trim_Location = '11'/'13'/'12'/'14'/'10'/'15'/'00';

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Trim Location is required, invalid'
ERROR(PRK0508);
MSGPARM(RCD.LTN_Trim_Location);

ENDIF;

ENDIF;

//?USER: Create DBF record

EXECUTE FUNCTION(Crt Loss Transaction  IF) TYPE(EXCINTFUN) FILE(PKBSCPP)        AB1136499;
PARAMETER(RCD.LTN_Company_Number);
PARAMETER(RCD.LTN_Kill_Date);
PARAMETER(RCD.LTN_Record_Number);
PARAMETER(RCD.LTN_Tattoo_Number);
PARAMETER(CTL.LTN_Shift);
PARAMETER(RCD.LTN_Wgt);
PARAMETER(RCD.LTN_Extent);
PARAMETER(RCD.LTN_Trim_Location);
PARAMETER(RCD.LTN_Error_Sts);
PARAMETER('M');
PARAMETER(RCD.LTN_User_Error_Override);
PARAMETER(RCD.LTN_Source_Type);
PARAMETER(RCD.LT_Type_Code);
PARAMETER(RCD.LR_Reason_Code);
PARAMETER(RCD.BOH_Company_Number);
PARAMETER(RCD.BOH_Buy_Order_Number);
PARAMETER(RCD.BOL_Load_Number);
PARAMETER(RCD.TH_Tattoo_Number);
PARAMETER(RCD.TH_Kill_Date);
PARAMETER(JOB.*Job_date);
PARAMETER(JOB.*Job_time);
{
 //?Execute internal function

 EXECUTE FUNCTION(Rtv Loss Trans Next   RT) TYPE(RTVOBJ) FILE(PKBSCPP)           AB1135836;
 PARAMETER(PAR.LTN_Company_Number);
 PARAMETER(PAR.LTN_Kill_Date);
 PARAMETER(PAR.LTN_Record_Number);
 {
  //?USER: Processing if Data record not found

  // PAR.LTN Record Number = CON.1
  PAR.LTN_Record_Number = 1;

  QUIT;

  //?USER: Process Data record

  CASE;

  // IF DB1.LTN Record Number is Entry Allowed
  IF DB1.LTN_Record_Number >= 000001;
  AND DB1.LTN_Record_Number <= 699999;

  // PAR.LTN Record Number = DB1.LTN Record Number + CON.1
  PAR.LTN_Record_Number = DB1.LTN_Record_Number + 1;

  QUIT;

  ENDIF;

 }

 EXECUTE FUNCTION(Crt Loss Transaction  CR) TYPE(CRTOBJ) FILE(PKBSCPP)           AB1102905;
 PARAMETER(PAR.LTN_Company_Number);
 PARAMETER(PAR.LTN_Kill_Date);
 PARAMETER(PAR.LTN_Record_Number);
 PARAMETER(PAR.LTN_Tattoo_Number);
 PARAMETER(PAR.LTN_Shift);
 PARAMETER(PAR.LTN_Wgt);
 PARAMETER(PAR.LTN_Extent);
 PARAMETER(PAR.LTN_Trim_Location);
 PARAMETER(PAR.LTN_Error_Sts);
 PARAMETER(PAR.LTN_Record_Created_Status);
 PARAMETER(PAR.LTN_User_Error_Override);
 PARAMETER(PAR.LTN_Source_Type);
 PARAMETER(PAR.LT_Type_Code);
 PARAMETER(PAR.LR_Reason_Code);
 PARAMETER(PAR.BOH_Company_Number);
 PARAMETER(PAR.BOH_Buy_Order_Number);
 PARAMETER(PAR.BOL_Load_Number);
 PARAMETER(PAR.TH_Tattoo_Number);
 PARAMETER(PAR.TH_Kill_Date);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(PAR.RU_Date);
 PARAMETER(PAR.RU_Time);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Add Stamp-Sys Dt  IF) TYPE(EXCINTFUN)                      AB1237005;
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?Execute internal function

   // PAR.RS Record Status = CND.Active
   PAR.RS_Record_Status = 'A';

   // PAR.RS User Added = JOB.*USER
   PAR.RS_User_Added = JOB.*USER;

   // Call program Rtv System Date & Tim UP.
   CALL PROGRAM(Rtv System Date & Tim UP) ('PKWDUPC');
   PARAMETER(PAR.RS_Date_Added);
   PARAMETER(PAR.RS_Time_Added);

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

  }

 }

 EXECUTE FUNCTION(Upd Head Condemn      RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1227599;
 PARAMETER(PAR.BOH_Company_Number);
 PARAMETER(PAR.BOH_Buy_Order_Number);
 PARAMETER(PAR.BOL_Load_Number);
 PARAMETER(PAR.TH_Tattoo_Number);
 PARAMETER(PAR.TH_Kill_Date);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Rtv Head Condemned    RT) TYPE(RTVOBJ) FILE(PKBSCPP)           AB1227600;
  PARAMETER(02);
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(PAR.TH_Head_Condemned);
  {
   //?USER: Initialize routine

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   // PAR.TH Head Condemned = PAR.TH Head Condemned + CON.1
   PAR.TH_Head_Condemned = PAR.TH_Head_Condemned + 1;

  }

  EXECUTE FUNCTION(Chg Head Condemned    CH) TYPE(CHGOBJ) FILE(PKA1CPP)           AB1227604;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(PAR.TH_Head_Condemned);
  PARAMETER('E');
  {
   //?USER: Processing after Data update

   EXECUTE FUNCTION(Upd Head Condemned    RT) TYPE(RTVOBJ) FILE(PKA2CPP)           AB1227617;
   PARAMETER(DB1.BOH_Company_Number);
   PARAMETER(DB1.BOH_Buy_Order_Number);
   PARAMETER(DB1.BOL_Load_Number);
   PARAMETER(DB1.TH_Tattoo_Number);
   PARAMETER(DB1.TH_Kill_Date);
   PARAMETER(DB1.TH_Head_Condemned);
   {
    //?USER: Process Data record

    // LCL.Net Head Usr = DB1.TD Pen Head - DB1.TD Yard Dead
    LCL.Net_Head_Usr = DB1.TD_Pen_Head - DB1.TD_Yard_Dead;

    // Call program Rtv Stress Pens Only  XF.
    CALL PROGRAM(Rtv Stress Pens Only  XF) ('PLPJXFR');
    PARAMETER(DB1.Pen_Company_Number);
    PARAMETER(DB1.Pen_Number);
    PARAMETER(LCL.Stress_Market_Type);

    //?Stress pen is now defined at the pen ext instead of ST1
    CASE;

    // IF LCL.Stress/Market Type is Stress
    IF LCL.Stress_Market_Type = 'S';

    // IF LCL.Net Head Usr is *Zeros
    IF LCL.Net_Head_Usr = *ZERO;

    // IF *OTHERWISE
    IF *OTHERWISE;

    EXECUTE FUNCTION(Upd Head Condemned    RT) TYPE(RTVOBJ) FILE(PKDYCPP)           AB1227618;
    PARAMETER(DB1.BOH_Company_Number);
    PARAMETER(DB1.BOH_Buy_Order_Number);
    PARAMETER(DB1.BOL_Load_Number);
    PARAMETER(DB1.TH_Tattoo_Number);
    PARAMETER(DB1.TH_Kill_Date);
    PARAMETER(DB1.TD_Sequence_Number);
    PARAMETER(PAR.TH_Head_Condemned);
    {
     //?USER: Processing if Data record not found

     EXECUTE FUNCTION(Crt Tattoo Detail Ext  CR) TYPE(CRTOBJ) FILE(PKDYCPP)          AB1196901;
     PARAMETER(PAR.BOH_Company_Number);
     PARAMETER(PAR.BOH_Buy_Order_Number);
     PARAMETER(PAR.BOL_Load_Number);
     PARAMETER(PAR.TH_Tattoo_Number);
     PARAMETER(PAR.TH_Kill_Date);
     PARAMETER(PAR.TD_Sequence_Number);
     PARAMETER('N');
     PARAMETER(*ZERO);
     PARAMETER(PAR.TDE_Head_Condemned);
     PARAMETER(*ZERO);
     PARAMETER('N');
     PARAMETER('N');
     PARAMETER(PAR.RS_User_Changed);
     PARAMETER(PAR.RS_Date_Changed);
     PARAMETER(PAR.RS_Time_Changed);
     PARAMETER(PAR.RS_Record_Status);
     PARAMETER(PAR.RS_Job);
     PARAMETER(PAR.RS_Program);
     PARAMETER(PAR.RS_User_Added);
     PARAMETER(PAR.RS_Date_Added);
     PARAMETER(PAR.RS_Time_Added);
     {
      //?USER: Processing before Data update

      EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
      PARAMETER(DB1.RS_Record_Status);
      PARAMETER(DB1.RS_Job);
      PARAMETER(DB1.RS_Program);
      PARAMETER(DB1.RS_User_Added);
      PARAMETER(DB1.RS_Date_Added);
      PARAMETER(DB1.RS_Time_Added);
      {
       //?Execute internal function

       // PAR.RS Record Status = CND.Active
       PAR.RS_Record_Status = 'A';

       // PAR.RS User Added = JOB.*USER
       PAR.RS_User_Added = JOB.*USER;

       // PAR.RS Date Added = JOB.*Job date
       PAR.RS_Date_Added = JOB.*Job_date;

       // PAR.RS Time Added = JOB.*Job time
       PAR.RS_Time_Added = JOB.*Job_time;

       // PAR.RS Program = JOB.*PROGRAM
       PAR.RS_Program = JOB.*PROGRAM;

       // PAR.RS Job = JOB.*JOB
       PAR.RS_Job = JOB.*JOB;

      }

     }

     //?USER: Process Data record

     EXECUTE FUNCTION(Chg Head Condemned    CH) TYPE(CHGOBJ) FILE(PKDYCPP)           AB1227625;
     PARAMETER(DB1.BOH_Company_Number);
     PARAMETER(DB1.BOH_Buy_Order_Number);
     PARAMETER(DB1.BOL_Load_Number);
     PARAMETER(DB1.TH_Tattoo_Number);
     PARAMETER(DB1.TH_Kill_Date);
     PARAMETER(DB1.TD_Sequence_Number);
     PARAMETER(PAR.TDE_Head_Condemned);
    }

    QUIT;

    ENDIF;

   }

  }

 }

}


//?USER: Delete DBF record

EXECUTE FUNCTION(Dlt Loss Trans/UPD TH IF) TYPE(EXCINTFUN) FILE(PKBSCPP)        AB1227694;
PARAMETER(RCD.LTN_Company_Number);
PARAMETER(RCD.LTN_Kill_Date);
PARAMETER(RCD.LTN_Record_Number);
PARAMETER(RCD.BOH_Company_Number);
PARAMETER(RCD.BOH_Buy_Order_Number);
PARAMETER(RCD.BOL_Load_Number);
PARAMETER(RCD.TH_Tattoo_Number);
PARAMETER(RCD.TH_Kill_Date);
{
 //?Execute internal function

 EXECUTE FUNCTION(Dlt Loss Transaction  DO) TYPE(DLTOBJ) FILE(PKBSCPP)           AB1102907;
 PARAMETER(PAR.LTN_Company_Number);
 PARAMETER(PAR.LTN_Kill_Date);
 PARAMETER(PAR.LTN_Record_Number);
 EXECUTE FUNCTION(Upd Head Condemn      RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1227599;
 PARAMETER(PAR.BOH_Company_Number);
 PARAMETER(PAR.BOH_Buy_Order_Number);
 PARAMETER(PAR.BOL_Load_Number);
 PARAMETER(PAR.TH_Tattoo_Number);
 PARAMETER(PAR.TH_Kill_Date);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Rtv Head Condemned    RT) TYPE(RTVOBJ) FILE(PKBSCPP)           AB1227600;
  PARAMETER(02);
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(PAR.TH_Head_Condemned);
  {
   //?USER: Initialize routine

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   // PAR.TH Head Condemned = PAR.TH Head Condemned + CON.1
   PAR.TH_Head_Condemned = PAR.TH_Head_Condemned + 1;

  }

  EXECUTE FUNCTION(Chg Head Condemned    CH) TYPE(CHGOBJ) FILE(PKA1CPP)           AB1227604;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(PAR.TH_Head_Condemned);
  PARAMETER('E');
  {
   //?USER: Processing after Data update

   EXECUTE FUNCTION(Upd Head Condemned    RT) TYPE(RTVOBJ) FILE(PKA2CPP)           AB1227617;
   PARAMETER(DB1.BOH_Company_Number);
   PARAMETER(DB1.BOH_Buy_Order_Number);
   PARAMETER(DB1.BOL_Load_Number);
   PARAMETER(DB1.TH_Tattoo_Number);
   PARAMETER(DB1.TH_Kill_Date);
   PARAMETER(DB1.TH_Head_Condemned);
   {
    //?USER: Process Data record

    // LCL.Net Head Usr = DB1.TD Pen Head - DB1.TD Yard Dead
    LCL.Net_Head_Usr = DB1.TD_Pen_Head - DB1.TD_Yard_Dead;

    // Call program Rtv Stress Pens Only  XF.
    CALL PROGRAM(Rtv Stress Pens Only  XF) ('PLPJXFR');
    PARAMETER(DB1.Pen_Company_Number);
    PARAMETER(DB1.Pen_Number);
    PARAMETER(LCL.Stress_Market_Type);

    //?Stress pen is now defined at the pen ext instead of ST1
    CASE;

    // IF LCL.Stress/Market Type is Stress
    IF LCL.Stress_Market_Type = 'S';

    // IF LCL.Net Head Usr is *Zeros
    IF LCL.Net_Head_Usr = *ZERO;

    // IF *OTHERWISE
    IF *OTHERWISE;

    EXECUTE FUNCTION(Upd Head Condemned    RT) TYPE(RTVOBJ) FILE(PKDYCPP)           AB1227618;
    PARAMETER(DB1.BOH_Company_Number);
    PARAMETER(DB1.BOH_Buy_Order_Number);
    PARAMETER(DB1.BOL_Load_Number);
    PARAMETER(DB1.TH_Tattoo_Number);
    PARAMETER(DB1.TH_Kill_Date);
    PARAMETER(DB1.TD_Sequence_Number);
    PARAMETER(PAR.TH_Head_Condemned);
    {
     //?USER: Processing if Data record not found

     EXECUTE FUNCTION(Crt Tattoo Detail Ext  CR) TYPE(CRTOBJ) FILE(PKDYCPP)          AB1196901;
     PARAMETER(PAR.BOH_Company_Number);
     PARAMETER(PAR.BOH_Buy_Order_Number);
     PARAMETER(PAR.BOL_Load_Number);
     PARAMETER(PAR.TH_Tattoo_Number);
     PARAMETER(PAR.TH_Kill_Date);
     PARAMETER(PAR.TD_Sequence_Number);
     PARAMETER('N');
     PARAMETER(*ZERO);
     PARAMETER(PAR.TDE_Head_Condemned);
     PARAMETER(*ZERO);
     PARAMETER('N');
     PARAMETER('N');
     PARAMETER(PAR.RS_User_Changed);
     PARAMETER(PAR.RS_Date_Changed);
     PARAMETER(PAR.RS_Time_Changed);
     PARAMETER(PAR.RS_Record_Status);
     PARAMETER(PAR.RS_Job);
     PARAMETER(PAR.RS_Program);
     PARAMETER(PAR.RS_User_Added);
     PARAMETER(PAR.RS_Date_Added);
     PARAMETER(PAR.RS_Time_Added);
     {
      //?USER: Processing before Data update

      EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
      PARAMETER(DB1.RS_Record_Status);
      PARAMETER(DB1.RS_Job);
      PARAMETER(DB1.RS_Program);
      PARAMETER(DB1.RS_User_Added);
      PARAMETER(DB1.RS_Date_Added);
      PARAMETER(DB1.RS_Time_Added);
      {
       //?Execute internal function

       // PAR.RS Record Status = CND.Active
       PAR.RS_Record_Status = 'A';

       // PAR.RS User Added = JOB.*USER
       PAR.RS_User_Added = JOB.*USER;

       // PAR.RS Date Added = JOB.*Job date
       PAR.RS_Date_Added = JOB.*Job_date;

       // PAR.RS Time Added = JOB.*Job time
       PAR.RS_Time_Added = JOB.*Job_time;

       // PAR.RS Program = JOB.*PROGRAM
       PAR.RS_Program = JOB.*PROGRAM;

       // PAR.RS Job = JOB.*JOB
       PAR.RS_Job = JOB.*JOB;

      }

     }

     //?USER: Process Data record

     EXECUTE FUNCTION(Chg Head Condemned    CH) TYPE(CHGOBJ) FILE(PKDYCPP)           AB1227625;
     PARAMETER(DB1.BOH_Company_Number);
     PARAMETER(DB1.BOH_Buy_Order_Number);
     PARAMETER(DB1.BOL_Load_Number);
     PARAMETER(DB1.TH_Tattoo_Number);
     PARAMETER(DB1.TH_Kill_Date);
     PARAMETER(DB1.TD_Sequence_Number);
     PARAMETER(PAR.TDE_Head_Condemned);
    }

    QUIT;

    ENDIF;

   }

  }

 }

}


//?USER: Change DBF record

EXECUTE FUNCTION(Chg Loss Transaction  CH) TYPE(CHGOBJ) FILE(PKBSCPP)           AB1102906;
PARAMETER(RCD.LTN_Company_Number);
PARAMETER(RCD.LTN_Kill_Date);
PARAMETER(RCD.LTN_Record_Number);
PARAMETER(RCD.LTN_Tattoo_Number);
PARAMETER(RCD.LTN_Shift);
PARAMETER(RCD.LTN_Wgt);
PARAMETER(RCD.LTN_Extent);
PARAMETER(RCD.LTN_Trim_Location);
PARAMETER(RCD.LTN_Error_Sts);
PARAMETER(RCD.LTN_Record_Created_Status);
PARAMETER(RCD.LTN_User_Error_Override);
PARAMETER(RCD.LTN_Source_Type);
PARAMETER(RCD.LT_Type_Code);
PARAMETER(RCD.LR_Reason_Code);
PARAMETER(RCD.BOH_Company_Number);
PARAMETER(RCD.BOH_Buy_Order_Number);
PARAMETER(RCD.BOL_Load_Number);
PARAMETER(RCD.TH_Tattoo_Number);
PARAMETER(RCD.TH_Kill_Date);
PARAMETER(JOB.*USER);
PARAMETER(JOB.*Job_date);
PARAMETER(JOB.*Job_time);
PARAMETER(RCD.RS_Record_Status);
PARAMETER(JOB.*JOB);
PARAMETER(JOB.*PROGRAM);
PARAMETER(RCD.RS_User_Added);
PARAMETER(RCD.RS_Date_Added);
PARAMETER(RCD.RS_Time_Added);
PARAMETER(RCD.RU_Date);
PARAMETER(RCD.RU_Time);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 {
  //?Execute internal function

  // PAR.RS User Changed = JOB.*USER
  PAR.RS_User_Changed = JOB.*USER;

  // PAR.RS Date Changed = JOB.*Job date
  PAR.RS_Date_Changed = JOB.*Job_date;

  // PAR.RS Time Changed = JOB.*Job time
  PAR.RS_Time_Changed = JOB.*Job_time;

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

 }

 //?USER: Processing after Data update

 EXECUTE FUNCTION(Upd Head Condemn      RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1227599;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Rtv Head Condemned    RT) TYPE(RTVOBJ) FILE(PKBSCPP)           AB1227600;
  PARAMETER(02);
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(PAR.TH_Head_Condemned);
  {
   //?USER: Initialize routine

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   // PAR.TH Head Condemned = PAR.TH Head Condemned + CON.1
   PAR.TH_Head_Condemned = PAR.TH_Head_Condemned + 1;

  }

  EXECUTE FUNCTION(Chg Head Condemned    CH) TYPE(CHGOBJ) FILE(PKA1CPP)           AB1227604;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(PAR.TH_Head_Condemned);
  PARAMETER('E');
  {
   //?USER: Processing after Data update

   EXECUTE FUNCTION(Upd Head Condemned    RT) TYPE(RTVOBJ) FILE(PKA2CPP)           AB1227617;
   PARAMETER(DB1.BOH_Company_Number);
   PARAMETER(DB1.BOH_Buy_Order_Number);
   PARAMETER(DB1.BOL_Load_Number);
   PARAMETER(DB1.TH_Tattoo_Number);
   PARAMETER(DB1.TH_Kill_Date);
   PARAMETER(DB1.TH_Head_Condemned);
   {
    //?USER: Process Data record

    // LCL.Net Head Usr = DB1.TD Pen Head - DB1.TD Yard Dead
    LCL.Net_Head_Usr = DB1.TD_Pen_Head - DB1.TD_Yard_Dead;

    // Call program Rtv Stress Pens Only  XF.
    CALL PROGRAM(Rtv Stress Pens Only  XF) ('PLPJXFR');
    PARAMETER(DB1.Pen_Company_Number);
    PARAMETER(DB1.Pen_Number);
    PARAMETER(LCL.Stress_Market_Type);

    //?Stress pen is now defined at the pen ext instead of ST1
    CASE;

    // IF LCL.Stress/Market Type is Stress
    IF LCL.Stress_Market_Type = 'S';

    // IF LCL.Net Head Usr is *Zeros
    IF LCL.Net_Head_Usr = *ZERO;

    // IF *OTHERWISE
    IF *OTHERWISE;

    EXECUTE FUNCTION(Upd Head Condemned    RT) TYPE(RTVOBJ) FILE(PKDYCPP)           AB1227618;
    PARAMETER(DB1.BOH_Company_Number);
    PARAMETER(DB1.BOH_Buy_Order_Number);
    PARAMETER(DB1.BOL_Load_Number);
    PARAMETER(DB1.TH_Tattoo_Number);
    PARAMETER(DB1.TH_Kill_Date);
    PARAMETER(DB1.TD_Sequence_Number);
    PARAMETER(PAR.TH_Head_Condemned);
    {
     //?USER: Processing if Data record not found

     EXECUTE FUNCTION(Crt Tattoo Detail Ext  CR) TYPE(CRTOBJ) FILE(PKDYCPP)          AB1196901;
     PARAMETER(PAR.BOH_Company_Number);
     PARAMETER(PAR.BOH_Buy_Order_Number);
     PARAMETER(PAR.BOL_Load_Number);
     PARAMETER(PAR.TH_Tattoo_Number);
     PARAMETER(PAR.TH_Kill_Date);
     PARAMETER(PAR.TD_Sequence_Number);
     PARAMETER('N');
     PARAMETER(*ZERO);
     PARAMETER(PAR.TDE_Head_Condemned);
     PARAMETER(*ZERO);
     PARAMETER('N');
     PARAMETER('N');
     PARAMETER(PAR.RS_User_Changed);
     PARAMETER(PAR.RS_Date_Changed);
     PARAMETER(PAR.RS_Time_Changed);
     PARAMETER(PAR.RS_Record_Status);
     PARAMETER(PAR.RS_Job);
     PARAMETER(PAR.RS_Program);
     PARAMETER(PAR.RS_User_Added);
     PARAMETER(PAR.RS_Date_Added);
     PARAMETER(PAR.RS_Time_Added);
     {
      //?USER: Processing before Data update

      EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
      PARAMETER(DB1.RS_Record_Status);
      PARAMETER(DB1.RS_Job);
      PARAMETER(DB1.RS_Program);
      PARAMETER(DB1.RS_User_Added);
      PARAMETER(DB1.RS_Date_Added);
      PARAMETER(DB1.RS_Time_Added);
      {
       //?Execute internal function

       // PAR.RS Record Status = CND.Active
       PAR.RS_Record_Status = 'A';

       // PAR.RS User Added = JOB.*USER
       PAR.RS_User_Added = JOB.*USER;

       // PAR.RS Date Added = JOB.*Job date
       PAR.RS_Date_Added = JOB.*Job_date;

       // PAR.RS Time Added = JOB.*Job time
       PAR.RS_Time_Added = JOB.*Job_time;

       // PAR.RS Program = JOB.*PROGRAM
       PAR.RS_Program = JOB.*PROGRAM;

       // PAR.RS Job = JOB.*JOB
       PAR.RS_Job = JOB.*JOB;

      }

     }

     //?USER: Process Data record

     EXECUTE FUNCTION(Chg Head Condemned    CH) TYPE(CHGOBJ) FILE(PKDYCPP)           AB1227625;
     PARAMETER(DB1.BOH_Company_Number);
     PARAMETER(DB1.BOH_Buy_Order_Number);
     PARAMETER(DB1.BOL_Load_Number);
     PARAMETER(DB1.TH_Tattoo_Number);
     PARAMETER(DB1.TH_Kill_Date);
     PARAMETER(DB1.TD_Sequence_Number);
     PARAMETER(PAR.TDE_Head_Condemned);
    }

    QUIT;

    ENDIF;

   }

  }

 }

}


