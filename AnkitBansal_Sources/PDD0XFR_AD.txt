// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDD0XFR
// ?Date: 14.08.2025 Time: 03:34:16
// ?------------------------------------------------------------------------------------------------

//?Execute user function

EXECUTE FUNCTION(UPD Deallocate FC Adj RT) TYPE(RTVOBJ) FILE(PDI9CPP)           AC1488373;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Production_Date);
PARAMETER(PAR.Item_Code);
PARAMETER(PAR.Warehouse_Code);
{
 //?USER: Process Data record

 CASE;

 // IF DB1.PS Adjustment Type is Forecast
 IF DB1.PS_Adjustment_Type = 'FC';

 //?Determine Production Type
 CASE;

 // IF DB1.Production Date EQ JOB.*Job date
 IF DB1.Production_Date = JOB.*Job_date;

 // PAR.Production Type = CND.Schedule
 PAR.Production_Type = 'S';

 EXECUTE FUNCTION(Val Sched Existance   RT) TYPE(RTVOBJ) FILE(PDJCCPP)           AC1372033;
 PARAMETER(DB1.Company_Number);
 PARAMETER(PAR.Production_Type);
 PARAMETER(DB1.Production_Date);
 PARAMETER(WRK.Record_Found_USR);
 {
  //?USER: Processing if Data record not found

  // PAR.Record Found USR = CND.Record Not Found
  PAR.Record_Found_USR = 'N';

  //?USER: Process Data record

  // PAR.Record Found USR = CND.Record Found
  PAR.Record_Found_USR = 'Y';

 }

 //?Set to Plan if record not found
 CASE;

 // IF WRK.Record Found USR is Record Not Found
 IF WRK.Record_Found_USR = 'N';

 // PAR.Production Type = CND.Plan
 PAR.Production_Type = 'P';

 ENDIF;

 //?Determine Production Type
 // IF DB1.Production Date GT JOB.*Job date
 IF DB1.Production_Date > JOB.*Job_date;

 // PAR.Production Type = CND.Plan
 PAR.Production_Type = 'P';

 ENDIF;

 EXECUTE FUNCTION(RTV Scheduled for Date RT) TYPE(RTVOBJ) FILE(PDKNCPP)          AC1488318;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Production_Date);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(DB1.Item_Code);
 PARAMETER(PAR.Quantity_Scheduled_SUM);
 PARAMETER(WRK.OD_Weight_Scheduled);
 {
  //?USER: Initialize routine

  // PAR.OD Quantity Scheduled = CON.*ZERO
  PAR.OD_Qty_Cnsmd_Pieces_Sched = *ZERO;

  // PAR.OD Weight Scheduled = CON.*ZERO
  PAR.OD_Weight_Scheduled = *ZERO;

  //?USER: Process Data record

  // PAR.OD Quantity Scheduled = PAR.OD Quantity Scheduled + DB1.OD Quantity Schedule
  PAR.OD_Qty_Cnsmd_Pieces_Sched = PAR.OD_Qty_Cnsmd_Pieces_Sched
  + DB1.OD_Qty_Cnsmd_Pieces_Sched;

  // PAR.OD Weight Scheduled = PAR.OD Weight Scheduled + DB1.OD Weight Scheduled
  PAR.OD_Weight_Scheduled = PAR.OD_Weight_Scheduled + DB1.OD_Weight_Scheduled;

 }

 // WRK.PS Adjustment Quantity = DB1.PS Adjustment Quantity - PAR.Quantity Scheduled
 WRK.PS_Adjustment_Quantity = DB1.PS_Adjustment_Quantity - PAR.Quantity_Scheduled_SUM;

 //?If adjustment quantity is greater than ordered delete difference
 CASE;

 // IF WRK.PS Adjustment Quantity is GT Zero
 IF WRK.PS_Adjustment_Quantity > *ZERO;

 // WRK.PS Adjustment Quantity = WRK.PS Adjustment Quantity * CON.-1 *
 WRK.PS_Adjustment_Quantity = WRK.PS_Adjustment_Quantity * -1;

 // Call program UPD Avail-To-Sell  SCH XF.
 CALL PROGRAM(UPD Avail-To-Sell  SCH XF) ('PDTRXFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Production_Date);
 PARAMETER(DB1.Item_Code);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(WRK.PS_Adjustment_Quantity);
 PARAMETER('SF');
 PARAMETER(PAR.Production_Type);
 PARAMETER(WRK.Return_Code_ATS_USR);
 PARAMETER(DB1.PS_Adjustment_Number);

 ENDIF;

 ENDIF;

}


