// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PLSGXFR
// ?Date: 14.08.2025 Time: 02:55:19
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Modification history
DO;

//?Program recompiled.  Verified parameters passed into this program,
//?as there was a parameters mismatch when called from program
//?PLSFXFR.
ENDDO;

//?Default output parameters
// PAR.DSU Process Status = CND.Not  Processed
PAR.DSU_Process_Status = *ZERO;

// PAR.DSU Error Reason = CND.No Error
PAR.DSU_Error_Reason = *BLANK;

//?Perform Producer Location Validation
CASE;

// IF PAR.Validate Prod/Loc is Yes
IF PAR.Validate_Prod_Loc = 'Y';

//?Verify Producer/location
DO;

//?Validataion Rules on the Producer Location
DO;

//?This will use the producer location as the validation
//?there must be a producer location setup for every producer
//?and this routine is only to perform validation
//?There is a CLP that will perform which enviorment to get
//?the producer/loc from --- if called without this clp
//?then the producer location enviorment will be based on the
//?library list.
ENDDO;

EXECUTE FUNCTION(Val Producer Location RT) TYPE(RTVOBJ) FILE(PKAFREP)           AB1233183;
PARAMETER(PAR.PD_Producer_Code);
PARAMETER(PAR.PL_Location_Code);
PARAMETER(WRK.Record_Found_USR);
{
 //?USER: Processing if Data record not found

 // PAR.Record Found USR = CND.Record Not Found
 PAR.Record_Found_USR = 'N';

 //?USER: Process Data record

 // PAR.Record Found USR = CND.Record Found
 PAR.Record_Found_USR = 'Y';

}


CASE;

// IF WRK.Record Found USR is Record Found
IF WRK.Record_Found_USR = 'Y';

// IF *OTHERWISE
IF *OTHERWISE;

// PAR.DSU Process Status = CND.Error
PAR.DSU_Process_Status = 2;

// PAR.DSU Error Reason = CND.Invalid Prd/Loc
PAR.DSU_Error_Reason = 'PRDLOC';

//?Only if this is Batch upl write a record to the error file
CASE;

// IF PAR.Process Upload Inf is Delv Sch Batch
IF PAR.Process_Upload_Inf = 'B';

CASE;

// IF PAR.DSU Process Status is Error
IF PAR.DSU_Process_Status = 2;

// Call program Zzz DlvSchDtlUpl ErrorXP.
CALL PROGRAM(Zzz DlvSchDtlUpl ErrorXP) ('PLSHXFR');
PARAMETER(PAR.DSU_Company_Number);
PARAMETER(PAR.DSU_Transaction_Date);
PARAMETER(PAR.DSU_Transaction_Time);
PARAMETER(PAR.DSU_Transaction_Seq);
PARAMETER(PAR.DSU_Error_Reason);
PARAMETER('Delivery Date > Kill date');
PARAMETER(JOB.*JOB);
PARAMETER(JOB.*PROGRAM);

ENDIF;

ENDIF;

ENDIF;

ENDDO;

ENDIF;

//?Perform Delivery Date Validation
CASE;

// IF PAR.Validate Delv Date is Yes
IF PAR.Validate_Delv_Date = 'Y';

//?Delivery Date
DO;

// WRK.Company Number USR = CVTVAR(PAR.DSU Company Number)
WRK.Company_Number_USR = CVTVAR(PAR.DSU_Company_Number);

CASE;

// IF PAR.DSU Delivery Date LE PAR.DSU Kill Date
IF PAR.DSU_Delivery_Date <= PAR.DSU_Kill_Date;

//?ok, if delivery date le to kill date then ok
// IF *OTHERWISE
IF *OTHERWISE;

// PAR.DSU Process Status = CND.Error
PAR.DSU_Process_Status = 2;

// PAR.DSU Error Reason = CND.Invalid Delivery Date
PAR.DSU_Error_Reason = 'INVDEL';

//?If batch then write out error record
CASE;

// IF PAR.Process Upload Inf is Delv Sch Batch
IF PAR.Process_Upload_Inf = 'B';

CASE;

// IF PAR.DSU Error Reason is Invalid Delivery Date
IF PAR.DSU_Error_Reason = 'INVDEL';

// Call program Zzz DlvSchDtlUpl ErrorXP.
CALL PROGRAM(Zzz DlvSchDtlUpl ErrorXP) ('PLSHXFR');
PARAMETER(PAR.DSU_Company_Number);
PARAMETER(PAR.DSU_Transaction_Date);
PARAMETER(PAR.DSU_Transaction_Time);
PARAMETER(PAR.DSU_Transaction_Seq);
PARAMETER(PAR.DSU_Error_Reason);
PARAMETER('Delivery Date > Kill date');
PARAMETER(JOB.*JOB);
PARAMETER(JOB.*PROGRAM);

ENDIF;

ENDIF;

ENDIF;

ENDDO;

ENDIF;

//?Perform Kill Date Validation
CASE;

// IF PAR.Validate Kill Date is Yes
IF PAR.Validate_Kill_Date = 'Y';

//?Kill Date
DO;

// Call program VAL Kill Day    2 OMS XF.
CALL PROGRAM(VAL Kill Day    2 OMS XF) ('PDWBXFR');
PARAMETER(PAR.DSU_Company_Number);
PARAMETER(PAR.DSU_Kill_Date);
PARAMETER(WRK.Invalid_Y_N_USR);

CASE;

// IF WRK.Invalid Y/N USR is Yes
IF WRK.Invalid_Y_N_USR = 'Y';

// PAR.DSU Process Status = CND.Error
PAR.DSU_Process_Status = 2;

// PAR.DSU Error Reason = CND.Invalid Kill Date
PAR.DSU_Error_Reason = 'INVKIL';

// Call program Zzz DlvSchDtlUpl ErrorXP.
CALL PROGRAM(Zzz DlvSchDtlUpl ErrorXP) ('PLSHXFR');
PARAMETER(PAR.DSU_Company_Number);
PARAMETER(PAR.DSU_Transaction_Date);
PARAMETER(PAR.DSU_Transaction_Time);
PARAMETER(PAR.DSU_Transaction_Seq);
PARAMETER(WRK.DSU_Error_Reason);
PARAMETER('Invalid Kill Date');
PARAMETER(JOB.*JOB);
PARAMETER(JOB.*PROGRAM);

ENDIF;

ENDDO;

ENDIF;

//?If called from a Batch process, verify the Record Status = Add
CASE;

// IF PAR.Process Upload Inf is Delv Sch Batch
IF PAR.Process_Upload_Inf = 'B';

//?Validate on Add Only  Verify the Record Status
CASE;

// IF PAR.DSU Record Status is Add
IF PAR.DSU_Record_Status = 'A';

//?Validate on Add Only  Verify the Record Status
// IF *OTHERWISE
IF *OTHERWISE;

// PAR.DSU Process Status = CND.Error
PAR.DSU_Process_Status = 2;

// PAR.DSU Error Reason = CND.Only Add Trans Alllowed
PAR.DSU_Error_Reason = 'ADDOLY';

// Call program Zzz DlvSchDtlUpl ErrorXP.
CALL PROGRAM(Zzz DlvSchDtlUpl ErrorXP) ('PLSHXFR');
PARAMETER(PAR.DSU_Company_Number);
PARAMETER(PAR.DSU_Transaction_Date);
PARAMETER(PAR.DSU_Transaction_Time);
PARAMETER(PAR.DSU_Transaction_Seq);
PARAMETER(PAR.DSU_Error_Reason);
PARAMETER('Chg/Del Not Allowed');
PARAMETER(JOB.*JOB);
PARAMETER(JOB.*PROGRAM);

ENDIF;

ENDIF;

