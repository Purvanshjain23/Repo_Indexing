      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     HP138 - Sync Sales Movement/Check Detail
      * PROGRAMMER:  LeAnne Ramsey
      * CREATED:     09/05/08
      *
      * This program is called as part of the Check Function and also as part of
      * 'unlocking' a locked check.
      *
      * We were having rare instances where the Head/Pounds on the Sales Movement Detail
      * did not match the Check Detail.  This happened very, very rarely (or at least the
      * users caught/found it) rarely. From mid 2007 to September 2008 we had 9 reportings
      * of this; we DBU'd the records. There were probably over 40,000 check detail
      * records in this time frame.
      *
      * We could NEVER make this error happen. We think it may have occurred when the
      * commit/rollback hiccupped....we just don't know.
      *
      * So, we have written this new program to read the Check Detail records for the
      * check and, for each movement on the check, retrieve/update all sales movement
      * detail records. Hopefully, this new program will allow us to:
      * 1) stop DBUing the occasional record and 2) stop apologizing to the users!
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 07/06/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Continuous Flow Flag' to Hog Group file.
      /eject
      **********************************************************************************
      * FILE SPECIFICATIONS
      **********************************************************************************
      *
     Fhsl034d   if   e           k disk
      *  Hog group
      *
      *
     Fhsp053    if   e           k disk
      *  Movement status codes
      *
      *
     Fhsp064    if   e           k disk
      *  Check detail
      *
      *
     Fhsl064b   if   e           k disk    rename(cdrec:cdrecb)
      *  Check detail
      *
      *
     Fhsp084    uf   e           k disk
      *  Sales movement header
      *
      *
     Fhsp085    uf   e           k disk
      *  Sales movement detail
      *
      *
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *------------------------------------------------------------------
      * CONSTANTS
      *------------------------------------------------------------------
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *------------------------------------------------------------------
      * ARRAYS AND TABLES
      *------------------------------------------------------------------
      *
      * Define array for movement numbers on check detail lines.
      *
     D move            s              7  0 dim(200)
      *
      *------------------------------------------------------------------
      * STANDALONE FIELDS
      *------------------------------------------------------------------
      *
      * Workfields
      *
     D wkshhd          s                   like(sgshhd)
     D wkarhd          s                   like(sgshhd)
      *
      *
      * Parm fields
      *
     D xxchno          s                   like(cdchno)
     D xxcvno          s                   like(cdcvno)
     D xxchdt          s                   like(cdchdt)
      *
      *
      * Array indexes
      *
     D x               s              3  0
     D y               s              3  0
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /eject
      ****************************************************************
      * Mainline
      ****************************************************************
      *
      * Read all check detail records for the check filling an array with
      * the unique movements on the check.
      *
     C                   exsr      $check
      *
      * For each unique sales movement that you processed (ie: placed in the
      * movement array), recalc the head/pounds on the detail lines and
      * update the movement status.
      *
     C                   exsr      $movements
      *
     C                   seton                                        lr
      *
      /eject
      *---------------------------------------------------------------------------------------
      * Check detail
      *---------------------------------------------------------------------------------------
      *
      * Read all check detail records for the check filling an array with
      * the unique movements on the check.
      *
     C     $check        begsr
      *
     C     key01         setll     hsp064
      *
     C                   dou       *in91 = *on                                  Do check
     C     key01         reade     hsp064                                 91
     C                   if        *in91 = *off                                 If not eof
      *
      * If the corresponding sales movement is not posted.
      *
     C     cdmvsn        chain(n)  hsp084                             92
     C                   if        *in92 = *off                                 If header
     C     shmscd        chain     hsp053                             92
     C                   if        *in92 = *off and mspofl = no                 If not posted
      *
      * Look up movement in array. If not found, move the movement
      * number to the next element in array.
      *
     C                   z-add     1             x
     C     cdmvsn        lookup    move(x)                                98
     C                   if        *in98 = *off
     C                   add       1             y
     C                   z-add     cdmvsn        move(y)
     C                   endif
      *
     C                   endif                                                  If not posted
     C                   endif                                                  If header
      *
     C                   endif                                                  If not eof
     C                   enddo                                                  Do check
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------------------------------
      * Update the sales movements
      *---------------------------------------------------------------------------------------
      *
      * For each movement in the array (ie: on the check), recalc the head/pounds
      * on the Sales Movement Detail lines.
      *
      * For setting the movement status:
      *   Sum the 'live and DOA' head into a field for 'arrived' head
      *   Sum the shipped head.
      * Reset the status based on the comparison of 'shipped' and 'arrived' head.
      *
     C     $movements    begsr
      *
     C                   if        y <> 0                                       If elements
     C                   do        y             x                              Do all entry
     C                   if        move(x) <> 0                                 If entry
      *
     C                   z-add     0             wkshhd
     C                   z-add     0             wkarhd
      *
     C     move(x)       chain     hsp084                             92
     C                   if        *in92 = *off                                 If header
     C     shmscd        chain     hsp053                             92
     C                   if        *in92 = *off and                             If not posted
     C                             mspofl = no
      *
      * Update Sales Movement Detail lines for this Movement.
      *
     C                   exsr      $upd085
      *
      * Set up movement status and update Sales Movement Header.
      *
     C                   select
     C                   when      wkarhd = 0
     C                   eval      shmscd = 'SH'
      *
     C                   when      wkarhd >= wkshhd
     C                   eval      shmscd = 'FP'
     C                   other
      *
     C                   eval      shmscd = 'NC'
     C                   endsl
      *
     C                   update    shrec
      *
     C                   endif                                                  If not posted
     C                   endif                                                  If header
      *
     C                   endif                                                  If entry
     C                   enddo                                                  Do all entry
     C                   endif                                                  If elements
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------------------------------
      * Update Sales Movement Detail records for a Movement
      *---------------------------------------------------------------------------------------
      *
     C     $upd085       begsr
      *
     C     move(x)       setll     hsp085
      *
     C                   dou       *in91 = *on                                  Do detail
     C     move(x)       reade     hsp085                                 91
     C                   if        *in91 = *off                                 If not EOF
      *
      * Do not update a record when/if the Group is Closed/Voided (but
      * do accumulate head for later determination of the Movement Status).
      *
     C     sghgsn        chain     hsl034d                            92
     C                   if        *in92 = *on or hggscd = 'CL' or              If group
     C                                     hggscd = 'VD'
     C                   exsr      $accum
     C                   else
      *
      * Clear fields you will be synching to Check Detail values
      *
     C                   z-add     0             sglvhd
     C                   z-add     0             sglvlb
     C                   z-add     0             sgdohd
     C                   z-add     0             sgdolb
     C                   z-add     0             sgcdhd
     C                   z-add     0             sgcdlb
     C                   z-add     0             sgydhd
     C                   z-add     0             sgydlb
      *
      * For this Movement/Group:
      *  1) Retrieve all Check Detail lines from all checks
      *  2) Update head/pounds on movement detail
      *
     C     key02         setll     hsl064b
     C                   dou       *in93 = *on                                  Do check
     C     key02         reade     hsl064b                                93
     C                   if        *in93 = *off
     C                   add       cdlvhd        sglvhd
     C                   add       cdlvlb        sglvlb
     C                   add       cddohd        sgdohd
     C                   add       cddolb        sgdolb
     C                   add       cdcdhd        sgcdhd
     C                   add       cdcdlb        sgcdlb
     C                   add       cdydhd        sgydhd
     C                   add       cdydlb        sgydlb
     C                   endif
     C                   enddo                                                  Do check
      *
      * Accumulate head for later determination of Movement Status
      *
     C                   exsr      $accum
      *
      * Update Sales Movement Detail record
      *
     C                   update    sgrec
     C                   endif                                                  If group
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do detail
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------------------------------
      * Accumulate head for later determination of Movement Status
      *---------------------------------------------------------------------------------------
      *
     C     $accum        begsr
      *
      *
     C                   add       sgshhd        wkshhd
     C                   add       sglvhd        wkarhd
     C                   add       sgdohd        wkarhd
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm lists
      *
     C     *entry        plist
     C                   parm                    xxchdt
     C                   parm                    xxchno
     C                   parm                    xxcvno
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    xxchdt
     C                   kfld                    xxcvno
     C                   kfld                    xxchno
      *
     C     key02         klist
     C                   kfld                    sgmvsn
     C                   kfld                    sghgsn
      *
     C                   endsr
      /eject
