// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for POYOPFR
// ?Date: 14.08.2025 Time: 12:06:26
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('I/C');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


// WRK.Label Date = JOB.*Job date + CON.-3 *DAYS
WRK.Label_Date = DATEINCR(JOB.*Job_date '-3' 'DY' 1111111 'NONE' 'N' 1);

// WRK.Year Code = WRK.Label Date *YEAR
WRK.Year_Code = DATEDTLS(WRK.Label_Date 'YR' 1111111 'NONE' 'N' 1);

// LCL.Year Alpha (YYYY) USR = WRK.Year Code
LCL.Year_Alpha_YYYY_USR = WRK.Year_Code;

// LCL.Month/Year NBR        USR = WRK.Label Date
LCL.Month_Year_NBR_USR = WRK.Label_Date;

// LCL.Text USR 4 = LCL.Month/Year NBR        USR
LCL.Text_USR_4 = LCL.Month_Year_NBR_USR;

// LCL.AS Label Date YYYYMMDD = CONCAT(LCL.Year Alpha (YYYY) USR,LCL.Text USR 4,CON.*ZERO)
LCL.AS_Label_Date_YYYYMMDD = LCL.Year_Alpha_YYYY_USR + LCL.Text_USR_4 (*ZERO);

// LCL.PT Prod Date YYYYMMDD = CVTVAR(LCL.AS Label Date YYYYMMDD)
LCL.PT_Prod_Date_YYYYMMDD = CVTVAR(LCL.AS_Label_Date_YYYYMMDD);

//?USER: Record selection processing

//?Prod date if over 3 days old and no dumped data and not used
CASE;

// IF DB1.PT Prod Date YYYYMMDD LT LCL.PT Prod Date YYYYMMDD
IF DB1.PT_Prod_Date_YYYYMMDD < LCL.PT_Prod_Date_YYYYMMDD;

// AND DB1.PT WIP Dump/Production Dt is Not Entered
AND DB1.PT_WIP_Dump_Production_Dt = *ZERO;

// AND DB1.PT WIP Used/Not Used Sts is Not Used
AND DB1.PT_WIP_Used_Not_Used_Sts = 'N';

// PGM.*Record selected = CND.*YES
PGM.*Record_selected = 'Y';

//?Prod date if over 3 days old and no dumped data and not used
// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?USER: On print of first page format

MOVE *ALL (To: 1PG From: PAR);

//?USER: Print required level headings

CASE;

IF NEW Company_Number;
// SUPPRESSED PRINT Company Number header format

ENDIF;

// SUPPRESSED PRINT PT Product Code header format

// SUPPRESSED PRINT PT Prod Date YYYYMMDD header format

// SUPPRESSED PRINT PT Production Time header format

// SUPPRESSED PRINT PT Shift Number header format

// SUPPRESSED PRINT PT Serial Number header format

//?USER: Print required level totals

// SUPPRESSED PRINT PT Serial Number totals format

// SUPPRESSED PRINT PT Shift Number totals format

// SUPPRESSED PRINT PT Production Time totals format

// SUPPRESSED PRINT PT Prod Date YYYYMMDD totals format

// SUPPRESSED PRINT PT Product Code totals format

CASE;

IF NEW Company_Number;
// SUPPRESSED PRINT Company Number totals format

ENDIF;

