// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PNTUPFR
// ?Date: 14.08.2025 Time: 12:05:59
// ?------------------------------------------------------------------------------------------------

//?USER: Record selection processing

// PGM.*Record selected = CND.*YES
PGM.*Record_selected = 'Y';

//?rmc 7/07/09 added comp to bill act type
EXECUTE FUNCTION(RTV Hdr Sts,BillActTy RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC1946282;
PARAMETER(DB1.Company_Number);
PARAMETER(DB1.Order_Number);
PARAMETER(LCL.Header_Status);
PARAMETER(LCL.Billing_Activity_Type);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF LCL.Billing Activity Type is Invoice or Transfer
IF LCL.Billing_Activity_Type = '1'/'4';

//?8/4/2010 slm FP1309 Inventory Age --- Calculate the Label date
//?We believe that this is calculating the From Date
// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?USER: Print required level headings

// SUPPRESSED PRINT Company Number header format

// SUPPRESSED PRINT Item Code header format

// SUPPRESSED PRINT Warehouse Code header format

// SUPPRESSED PRINT Scheduled Ship Date header format

// SUPPRESSED PRINT Order Number header format

//?USER: On print of detail format

EXECUTE FUNCTION(RTV Req Delv/Hdr Sts  RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC1598298;
PARAMETER(DB1.Company_Number);
PARAMETER(DB1.Order_Number);
PARAMETER(NLL.Header_Status);
PARAMETER(LCL.Requested_Delivery_Date);
PARAMETER(NLL.Requested_Delivery_Time);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Val Age Information   IF) TYPE(EXCINTFUN)                      AC1984951;
PARAMETER(DB1.Item_Code);
PARAMETER(DB1.Warehouse_Code);
PARAMETER(DB1.Company_Number);
PARAMETER(DB1.Scheduled_Ship_Date);
PARAMETER(LCL.Requested_Delivery_Date);
PARAMETER(DB1.Item_Age_Days);
PARAMETER(DB1.Production_Ovr_AgeDte_Fr);
PARAMETER(DB1.Production_Ovr_AgeDte_To);
PARAMETER(LCL.Production_AgeDte_Fr);
PARAMETER(LCL.Production_AgeDte_To);
PARAMETER(LCL.Error_Status);
PARAMETER('S');
PARAMETER('C');
{
 //?Execute internal function

 // WRK.Error Flag            USR = CND.Blank
 WRK.Error_Flag_USR = *BLANK;

 // PAR.Error Status = CND.blank
 PAR.Error_Status = *BLANK;

 // WRK.Error Reason Descript 1 = CON.*BLANK
 WRK.Error_Reason_Descript_1 = *BLANK;

 // WRK.Error Reason Descript 2 = CON.*BLANK
 WRK.Error_Reason_Descript_2 = *BLANK;

 // WRK.Error Reason Descript 3 = CON.*BLANK
 WRK.Error_Reason_Descript_3 = *BLANK;

 // WRK.Error Reason Descript 4 = CON.*BLANK
 WRK.Error_Reason_Descript_4 = *BLANK;

 // WRK.Error Reason Descript 5 = CON.*BLANK
 WRK.Error_Reason_Descript_5 = *BLANK;

 CASE;

 // IF PAR.Company Organization is Seaboard
 IF PAR.Company_Organization = 'S';

 CASE;

 // IF PAR.Requested Delivery Date is not entered
 IF PAR.Requested_Delivery_Date = *ZERO;

 // Send error message - 'Requested Delv Date is required'
 ERROR(USR4329);
 MSGPARM(PAR.Requested_Delivery_Date);

 // IF PAR.Scheduled Ship Date is not entered
 IF PAR.Scheduled_Ship_Date = *ZERO;

 // Send error message - 'Scheduled Ship Date is required when orders are assigned to load.'
 ERROR(USR2230);
 MSGPARM(PAR.Scheduled_Ship_Date);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Call program Val Age information   XF.
 CALL PROGRAM(Val Age information   XF) ('PNQNXFR');
 PARAMETER(PAR.Item_Code);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(WRK.Error_Flag_USR);
 PARAMETER(WRK.Error_Reason_Descript_1);
 PARAMETER(WRK.Error_Reason_Descript_2);
 PARAMETER(WRK.Error_Reason_Descript_3);
 PARAMETER(WRK.Error_Reason_Descript_4);
 PARAMETER(WRK.Error_Reason_Descript_5);
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Scheduled_Ship_Date);
 PARAMETER(PAR.Requested_Delivery_Date);
 PARAMETER(PAR.Item_Age_Days);
 PARAMETER(PAR.Production_Ovr_AgeDte_Fr);
 PARAMETER(PAR.Production_Ovr_AgeDte_To);
 PARAMETER(PAR.Production_AgeDte_Fr);
 PARAMETER(PAR.Production_AgeDte_To);

 //?Verify if message should be sent if validation is required
 CASE;

 // IF WRK.Error Flag            USR is Yes
 IF WRK.Error_Flag_USR = 'Y';

 // AND PAR.Production Dates Sts Usr is Validation routine
 AND PAR.Production_Dates_Sts_Usr = 'V';

 //?message 1 Product is shipped before product is made
 CASE;

 // IF WRK.Error Reason Descript 1 NE WRK.Blank for 30          USR
 IF WRK.Error_Reason_Descript_1 <> WRK.Blank_for_30_USR;

 // Send error message - 'Prd Date is invalid for requested delivery date'
 ERROR(USR4307);
 MSGPARM(PAR.Production_AgeDte_Fr);

 ENDIF;

 //?message 2 Either Days or override date but not both
 CASE;

 // IF WRK.Error Reason Descript 2 NE WRK.Blank for 30          USR
 IF WRK.Error_Reason_Descript_2 <> WRK.Blank_for_30_USR;

 // Send error message - 'Enter Age Days or Dates'
 ERROR(USR4304);
 MSGPARM(PAR.Item_Age_Days);
 MSGPARM(PAR.Production_Ovr_AgeDte_Fr);
 MSGPARM(PAR.Production_Ovr_AgeDte_To);

 ENDIF;

 //?message 3 With Chill Days Either Days or Override Dates required
 CASE;

 // IF WRK.Error Reason Descript 3 NE WRK.Blank for 30          USR
 IF WRK.Error_Reason_Descript_3 <> WRK.Blank_for_30_USR;

 // Send error message - 'Override Dates is after shipped date'
 ERROR(USR4305);
 MSGPARM(PAR.Item_Age_Days);
 MSGPARM(PAR.Production_Ovr_AgeDte_Fr);
 MSGPARM(PAR.Production_Ovr_AgeDte_To);

 ENDIF;

 //?message 4 From date is > then SHIP DATE
 CASE;

 // IF WRK.Error Reason Descript 4 NE WRK.Blank for 30          USR
 IF WRK.Error_Reason_Descript_4 <> WRK.Blank_for_30_USR;

 // Send error message - 'Override Dates is after shipped date'
 ERROR(USR4305);
 MSGPARM(PAR.Item_Age_Days);
 MSGPARM(PAR.Production_Ovr_AgeDte_Fr);
 MSGPARM(PAR.Production_Ovr_AgeDte_To);

 ENDIF;

 //?message 5 To date is > then SHIP DATE
 CASE;

 // IF WRK.Error Reason Descript 5 NE WRK.Blank for 30          USR
 IF WRK.Error_Reason_Descript_5 <> WRK.Blank_for_30_USR;

 // Send error message - 'Override Dates is after shipped date'
 ERROR(USR4305);
 MSGPARM(PAR.Item_Age_Days);
 MSGPARM(PAR.Production_Ovr_AgeDte_Fr);
 MSGPARM(PAR.Production_Ovr_AgeDte_To);

 ENDIF;

 CASE;

 // IF PAR.Production Ovr AgeDte Fr is not entered
 IF PAR.Production_Ovr_AgeDte_Fr = *ZERO;

 // Send error message - 'Invalid Item Age Days'
 ERROR(USR4309);
 MSGPARM(PAR.Item_Age_Days);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Send error message - 'Invalid Production Override Age Frm/To Dates'
 ERROR(USR4310);
 MSGPARM(PAR.Production_AgeDte_Fr);
 MSGPARM(PAR.Production_AgeDte_To);

 ENDIF;

 // PAR.Error Status = CND.yes
 PAR.Error_Status = 'Y';

 ENDIF;

 ENDIF;

 ENDIF;

}


// LCL.Label Date  USR = LCL.Production AgeDte Fr
LCL.Label_Date_USR = LCL.Production_AgeDte_Fr;

// CUR.Requested Delivery DateUs = LCL.Requested Delivery Date
CUR.Requested_Delivery_DateUs = LCL.Requested_Delivery_Date;

// CUR.Label Date  USR = LCL.Label Date  USR
CUR.Label_Date_USR = LCL.Label_Date_USR;

CASE;

// IF LCL.Label Date  USR LE DB1.Scheduled Ship Date
IF LCL.Label_Date_USR <= DB1.Scheduled_Ship_Date;

// CUR.Quantity Ordered PriorUsr = DB1.Quantity Scheduled
CUR.Quantity_Ordered_PriorUsr = DB1.Quantity_Scheduled;

ENDIF;

//?USER: Print required level totals

// SUPPRESSED PRINT Order Number totals format

// SUPPRESSED PRINT Scheduled Ship Date totals format

// SUPPRESSED PRINT Warehouse Code totals format

// SUPPRESSED PRINT Item Code totals format

// SUPPRESSED PRINT Company Number totals format

