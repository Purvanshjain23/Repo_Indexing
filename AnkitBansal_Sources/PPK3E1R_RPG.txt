     H/TITLE Edt Claim Detail       E1 Edit record(1 screen)
     H DATFMT(*YMD) DATEDIT(*YMD) DEBUG(*YES)
     Z* CRTBNDRPG
     Z* DFTACTGRP(*NO) BNDDIR(YBNDDIR) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
      *
     H* SYNOPSIS :
     H* - Maintain DBF file records, one at a time
     H* - Existing records may be updated or deleted
     H* - New records may be added
     H* - Key changes are not allowed
      *
     H* Generated by CA 2E release 8.7.1 (1635)
     H* Function type : Edit record(1 screen)
     H* Object type   : *PGM
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISABANS
     H* Date          : 08/12/24  Time  : 03:09:55
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPPK3E1R#  CF   E             WORKSTN
     F                                     INFDS(INFDS#)
      * DSP: Edt Claim Detail       E1 Edit record(1 screen)
      *
     FPDMKCPL1  IF   E           K DISK
     F                                     INFDS(INFDS1)
      * RTV : AR Claim Header           Retrieval index
      *
     FOMHSTPL1  IF   E           K DISK
      * RTV : Sales History             Retrieval index
      *
     FPDJEREL2  IF   E           K DISK
      * RTV : Sales Route               Active Records
      *
     FOPBFCPL1  IF   E           K DISK
      * RTV : Order Header TRG          Retrieval index       NV
      *
     FOPBGWKL1  IF   E           K DISK
      * RTV : Order Detail              Retrieval index
      *
     FCAAPREL2  IF   E           K DISK
      * RTV : Salesperson               Retrieval index       V
      *
     FPBB4REL0  IF   E           K DISK
      * RTV : Sales Channel             Retrieval index
      *
     FPVAIREL1  IF   E           K DISK
      * RTV : CCM Disposition           Retrieval index
      *
     FPVBUREL1  IF   E           K DISK
      * RTV : CCM Location              Retrieval index
      *
     FPDMKCPL2  IF   E           K DISK
      * RSQ : AR Claim Header           claim number (d)
      *
     FCADRREL1  IF   E           K DISK
      * RTV : User Profile Control      Retrieval index       NV
      *
     FCADTREL1  IF   E           K DISK
      * RTV : User Application Profile  Retrieval index       NV
      *
     FCADNREL2  IF   E           K DISK
      * RSQ : Application               RSQ Application Code
      *
     FPDMKCPL0  UF A E           K DISK
      * UPD : AR Claim Header           Update index
      *
      * Days in month for date validation
     D @XD             S              2  0 DIM(12)CTDATA PERRCD(12)
      * KEY Screen: Field position and name array
     D W0BEG           S              5  0 DIM(001)CTDATA PERRCD(1)ASCEND
     D W0END           S              5  0 DIM(001)CTDATA PERRCD(1)ASCEND
     D W0NAM           S             10    DIM(001)CTDATA PERRCD(1)
      * DETAIL Screen: Field position and name array
     D W1BEG           S              5  0 DIM(028)CTDATA PERRCD(7)ASCEND
     D W1END           S              5  0 DIM(028)CTDATA PERRCD(7)ASCEND
     D W1NAM           S             10    DIM(028)CTDATA PERRCD(7)
      * Long constants
     D @CN#            S              6    DIM(06)CTDATA PERRCD(1)
     D @CN             S             25    DIM(06) ALT(@CN#)
     D YDOW            S              1     DIM(7)
      /EJECT
      * Data structures:
     D PGMDS         ESDS                  EXTNAME(Y2PGDSP)
      * Modified Program data structure
     D JBDTTM          DS
      * Job date/time
     D  ##JDT                  1      7  0
     D  ##JCC                  1      1  0
     D  ##JYY                  2      3  0
     D  ##JMM                  4      5  0
     D  ##JDD                  6      7  0
     D  ##JTM                  8     13  0
     D  ##JHH                  8      9  0
     D  ##JNN                 10     11  0
     D  ##JSS                 12     13  0
      * ABO DEFINE LARGE STRING FOR CL CMD
     D YARTCM          DS           512
     D  DUMMY1                 1      1
     D INFDS#        E DS                  EXTNAME(Y2I#DSP)
      * Display file information data structure
      *
     D INFDS1        E DS                  EXTNAME(Y2I1DSP)
      * File information data structure
      *
     D @1DBRC        E DS                  EXTNAME(PDMKCPL0)
      * UPD : AR Claim Header           Update index
      * Current/previous master file format fields for change control
      *
     D #1DBRC          DS          4974
      * Stored master file format fields
     D  #1DB1                  1      1
      *
      /EJECT
     D XDINT           DS
      * Internal date
     D  XDINDT                 1      7  0
     D  XDINYY                 1      3  0
     D  XDINMM                 4      5  0
     D  XDINDD                 6      7  0
      /EJECT
     D XD2T            DS
      * Internal date
     D  XDINT2                 1      7  0
     D  XDINY2                 1      3  0
     D  XDINM2                 4      5  0
     D  XDIND2                 6      7  0
      /EJECT
     D XDEX            DS
      * External date
     D  XDEXDT                 1      8  0
     D  XDEY01                 1      4  0
     D  XDEX01                 1      2  0
     D  XDEX02                 3      4  0
     D  XDEY02                 5      8  0
     D  XDEX03                 5      6  0
     D  XDEX04                 7      8  0
      /EJECT
     D XTCK            DS
      * Time: hours, minutes, seconds
     D  XTTIM                  1      6  0
     D  XTHH                   1      2  0
     D  XTNN                   3      4  0
     D  XTSS                   5      6  0
      /EJECT
     D XDOFF           DS
      * Cut-off year
     D  XOFF                   1      4  0
     D  XOFFYY                 3      4  0
     D WN0074          DS          2000
     D WN0075          DS          2000
     D YARDCS          DS          4974
      * Message data for message Y2U0009.
     D MD0009          DS
     D  MDPGM                  1     10
     D  MDACP                 11     20
     D  MDFMT                 21     30
     D  MDACT                 31     34
     D  MDLBL                 35     40
     D WN0100          DS          2000
     D WN0101          DS          2000
     D WN0121          DS          2000
     D WN0122          DS          2000
     D YBRDCS          DS          4974
      *
      * Declared stand-alone variables
     D  P0RTN          S              7
     D  WP0001         S              7  0
     D  WP0002         S              3  0
     D  WP0003         S              7  0
     D  WP0004         S              7  0
     D  WP0005         S              7  0
     D  WP0006         S             30
     D  WP0007         S              2
     D  WP0008         S              5
     D  WP0009         S              3
     D  WP0010         S              1
     D  WP0011         S             10
     D  WP0012         S             50
     D  W0ICL          S              1
     D  W0RTN          S              7
     D  W0RSL          S              1
     D  W0RSF          S              1
     D  W0RTW          S              9  0
     D  W0ENV          S              3
     D  ##TME          S              6  0
     D  W0BYP          S              1
     D  W0TRN          S              1
     D  W0HLP          S              1
     D  YPMT04         S              1
     D  HELP25         S              1
     D  ##OFF          S             30
     D  W0GRP          S              1
     D  ZHCSRW         S              5  0
     D  ZHCSCL         S              5  0
     D  ZZCSRW         S              3  0
     D  ZZCSCL         S              3  0
     D  W0HPMB         S             10
     D  YYHPFL         S             10
     D  YYHPLB         S             10
     D  YYHLVN         S             10
     D  YYUSOP         S             10
     D  YYRW           S              5  0
     D  YYCL           S              5  0
     D  YYLGCT         S              5  0
     D  YYLGVN         S             10
     D  ZAPGMQ         S             10
     D  ZAPGRL         S              5
     D  ZAFSMS         S              1
     D  W0PMD          S              3
     D  XDWK1          S              8  0
     D  XDAY1          S              6  0
     D  XDAY2          S              6  0
     D  XDURR          S              8  0
     D  XDSEL          S              1
     D  XDCDW          S              7
     D  XDWSL          S              1  0
     D  XDSTP          S              1  0
     D  XDWNB          S              6  0
     D  XDLSW          S              1  0
     D  YY             S              6  0
     D  XDWK3          S              7  1
     D  XDWK2          S              6  0
     D  WUOSTX         S             25
     D  WUMTDT         S              7  0
     D  WL0001         S              3  0
     D  WL0002         S              7  0
     D  WL0003         S              7  0
     D  WL0004         S             30
     D  WL0005         S             15
     D  WL0006         S              3
     D  WL0007         S              3
     D  WL0008         S              7  0
     D  WL0009         S              7  0
     D  WL0010         S              2
     D  WL0011         S              7  0
     D  WL0012         S              7  0
     D  WL0013         S              3
     D  WQSA01         S                   LIKE(F4AIC3)
     D  WQSA02         S                   LIKE(F4C4NB)
     D  WL0014         S              3
     D  WL0015         S              3
     D  WL0016         S              3  0
     D  WL0017         S              7  0
     D  WL0018         S              7  0
     D  WL0019         S             30
     D  WL0020         S             15
     D  WL0021         S              7  0
     D  WL0022         S              3
     D  WL0023         S              7  0
     D  WL0024         S              7  0
     D  WL0025         S              2
     D  WL0026         S              7  0
     D  WL0027         S              3
     D  WL0028         S              3
     D  WQSD01         S                   LIKE(OMAIC3)
     D  WQSD02         S                   LIKE(OMC4NB)
     D  ZQ             S              5  0
     D  WUOVST         S              1
     D  WL0029         S              3  0
     D  WL0030         S              7  0
     D  WL0031         S              2
     D  Y2LSNO         S              7  0
     D  W0INVL         S             25
     D  W0VLMP         S              1
     D  W0CNNM         S             25
     D  Y0CX01         S              1
     D  WUDVC7         S              7  0
     D  WL0032         S              3  0
     D  WL0033         S              7  0
     D  WL0034         S              7  0
     D  WL0035         S              4  0
     D  WUDMCD         S              3
     D  WUEOCD         S              7
     D  ZADFMF         S             10
     D  WL0036         S              3
     D  WL0037         S             30
     D  WUI3ST         S              1
     D  WK1X01         S              1
     D  WQ0001         S              7  0
     D  WQ0002         S              3  0
     D  WQ0003         S              7  0
     D  W0CLPG         S             10
     D  W0DCF          S              1
     D  XDDTFM         S              3
     D  W0NSRQ         S              1
     D  W0EXVL         S             25
     D  WUN1ST         S              1
     D  WQ0004         S              3  0
     D  WQ0005         S              7  0
     D  WQ0006         S             15
     D  WQ0007         S              7  0
     D  WQ0008         S              2
     D  WQ0009         S              7  0
     D  YN0001         S              2
     D  YL0001         S              1
     D  WUBIC3         S              3  0
     D  WUALNX         S              7  0
     D  YL0002         S              1
     D  WQ0010         S              7  0
     D  WQ0011         S              3  0
     D  WQ0012         S              7  0
     D  WQ0013         S              1
     D  WQ0014         S              7
     D  WL0038         S              3  0
     D  WL0039         S              7  0
     D  WL0040         S              7  0
     D  WL0041         S              4  0
     D  WUY4CD         S              7  0
     D  YL0003         S              3
     D  WUGSTX         S            256
     D  WQ0015         S              7  0
     D  WQ0016         S              3
     D  WQ0017         S              2
     D  WQ0018         S              3
     D  WQ0019         S              3
     D  WN0001         S              3
     D  WN0002         S              3  0
     D  WN0003         S              7  0
     D  WN0004         S              7  0
     D  WN0005         S              7  0
     D  WN0006         S             30
     D  WN0007         S              2
     D  WN0008         S              1
     D  WN0009         S             11  2
     D  WN0010         S             11  2
     D  WN0011         S             11  2
     D  WN0012         S             30
     D  WN0013         S              1
     D  WN0014         S             25
     D  WN0015         S              1
     D  WN0016         S             25
     D  WN0017         S              1
     D  WN0018         S             11  2
     D  WN0019         S             25
     D  WN0020         S             25
     D  WN0021         S              7  0
     D  WN0022         S              7  0
     D  WN0023         S              1
     D  WN0024         S             25
     D  WN0025         S              7  0
     D  WN0026         S              7  0
     D  WN0027         S              6  0
     D  WN0028         S             10
     D  WN0029         S              7  0
     D  WN0030         S             15
     D  WN0031         S              7  0
     D  WN0032         S              6  0
     D  WN0033         S             10
     D  WN0034         S              7  0
     D  WN0035         S              6  0
     D  WN0036         S             10
     D  WN0037         S              1
     D  WN0038         S              7  0
     D  WN0039         S              6  0
     D  WN0040         S             10
     D  WN0041         S             40
     D  WN0042         S             11  2
     D  WN0043         S             11  2
     D  WN0044         S              7  0
     D  WN0045         S              6  0
     D  WN0046         S              7  0
     D  WN0047         S              1
     D  WN0048         S              7  4
     D  WN0049         S              7  4
     D  WN0050         S              7  4
     D  WN0051         S              9  2
     D  WN0052         S              9  2
     D  WN0053         S              9  2
     D  WN0054         S              9  2
     D  WN0055         S              1
     D  WN0056         S              1
     D  WN0057         S              1
     D  WN0058         S              2
     D  WN0059         S              7  4
     D  WN0060         S              7  4
     D  WN0061         S              1
     D  WN0062         S              7  0
     D  WN0063         S              6  0
     D  WN0064         S             10
     D  WN0065         S             10
     D  WN0066         S              7  0
     D  WN0067         S              6  0
     D  WN0068         S             10
     D  WN0069         S             10
     D  WN0070         S              2
     D  WN0071         S              3
     D  WN0072         S              3
     D  WN0073         S              4
     D  WN0076         S            100
     D  XDTSDL         S             26
     D  WN0077         S             26
     D  WN0078         S            100
     D  WN0079         S            100
     D  WN0080         S             26
     D  WN0081         S            100
     D  YARDC          S              1
     D  WN0082         S              7  0
     D  WN0083         S              7  0
     D  WN0084         S              7  0
     D  WN0085         S              5  0
     D  WN0086         S              1
     D  WUDLN          S             10
     D  XABEG          S              6  0
     D  XAEND          S              6  0
     D  WN0087         S              1
     D  WN0088         S              7  0
     D  WN0089         S              6  0
     D  WN0090         S             10
     D  WN0091         S             10
     D  WN0092         S              7  0
     D  WN0093         S              6  0
     D  WN0094         S             10
     D  WN0095         S             10
     D  WN0096         S              2
     D  WN0097         S              3
     D  WN0098         S              3
     D  WN0099         S              4
     D  WN0102         S            100
     D  WN0103         S             26
     D  WN0104         S            100
     D  WN0105         S            100
     D  WN0106         S             26
     D  WN0107         S            100
     D  WUBRNY         S              8  0
     D  WN0108         S              1
     D  WN0109         S              7  0
     D  WN0110         S              6  0
     D  WN0111         S             10
     D  WN0112         S             10
     D  WN0113         S              7  0
     D  WN0114         S              6  0
     D  WN0115         S             10
     D  WN0116         S             10
     D  WN0117         S              2
     D  WN0118         S              3
     D  WN0119         S              3
     D  WN0120         S              4
     D  WN0123         S            100
     D  WN0124         S             26
     D  WN0125         S            100
     D  WN0126         S            100
     D  WN0127         S             26
     D  WN0128         S            100
     D  YBRDC          S              1
     D  W0RPT          S              1
     D  YPMTFD         S             10
     D  YAFSCH         S              4  0
     D  YPMRRN         S              4  0
     D  WN0129         S             10
     D  WN0130         S             10
     D  YL0004         S              3  0
     D  YL0005         S              3
     D  WL0042         S             10
     D  WL0043         S              6
     D  WL0044         S              3  0
     D  WL0045         S              3
     D  WQ0020         S              3
     D  WQ0021         S              3  0
     D  WUAUNA         S             30
     D  WQSP01         S                   LIKE(DNDNCD)
     D  WQSQ01         S                   LIKE(DNDNCD)
     D  WUDSC4         S             40
     D  WUDE40         S             40
     D  YL0006         S              1
     D  YSETCS         S              1
     D  WCSRLC         S              3
     D  ZINPOS         S              5  0
     D  F              S              3  0
     D  ZAMSID         S              7
     D  ZAMSGF         S             10
     D  ZAMSTP         S              7
     D  YILE           S              1
     D  W0CFL          S             10
     D  W0CRW          S              5  0
     D  W0CCL          S              5  0
     D  ZZFFL          S             10
     D  ZZFLB          S             10
     D  ZZFMB          S             10
     D  ZZFQL          S             21
     D  W0PMT          S              1
     D #L3             S              1    DIM(3)
     D #L7             S              1    DIM(7)
     D J7              S              1    DIM(7)
     D K7              S              1    DIM(7)
     D J3              S              1    DIM(3)
     D K3              S              1    DIM(3)
     D UCT             S              1    DIM(40)                              CENTER TABLE
      /EJECT
      * Parameter declarations
     D P1PARM          DS
      * FLD: AR Claim Header
      * B : MAP Claim Number
     D  P1C0C7                 1      4P 0
      * B : MAP Claim Company Number
     D  P1BIC3                 5      6P 0
      * B : MAP Claim Order Number
     D  P1ALNX                 7     10P 0
      * B : MAP Load ID
     D  P1RMNB                11     14P 0
      * B : MAP Claim Ship to Customer
     D  P1C3C7                15     18P 0
      * B : MAP Claim Customer Name
     D  P1RFTX                19     48
      * B : MAP AC Shipping Method
     D  P1UASX                49     50
     D P2PARM          DS
      * FLD: *Arrays
      * O :  Return Command USR
     D  P2DESX                 1      5
     D P3PARM          DS
      * FLD: *Arrays
      * N :  Warehouse Code
     D  P3AJCD                 1      3
      * N :  Company Number
     D  P3AIC3                 4      5P 0
      * N :  Application Code
     D  P3DNCD                 6     11
      * N :  Salesperson Code
     D  P3BCCD                12     14
      * N :  Allow Multi_Company
     D  P3I6ST                15     15
      * N :  Default Printer
     D  P3MPNA                16     25
     D P4PARM          DS
      * B :  Clm Program USR
     D  P4T6SX                 1      3
     D P5PARM          DS
      * FLD: *Arrays
      * I :  Claim Audit Selection Usr
     D  P5L9TX                 1      1
      * I :  Claim Audit Co Value Usr
     D  P5JDAA                 2     11
      * I :  Approval Claim Audit Eml
     D  P5N9T1                12     61
     D                 DS
     D  ZAMSDA                 1    132
      * Message data for 'Order is not Found'
      * Company Number
     D  ZA0001                 1      3
      * Order Number
     D  ZA0002                 4     10
      * Message data for 'Salesperson            NF'
      * Message data for 'CD7 Non numeric data'
      * Message data for 'CD3 Non numeric data'
      * Message data for 'CD7 Non numeric data'
      * Message data for 'Clm Billing Activity Type'
      * Claim Order Number
     D  ZA0003                 1      7
      * Message data for 'Order is not Found'
      * Company Number
     D  ZA0004                 1      3
      * Order Number
     D  ZA0005                 4     10
      * Message data for 'Clm Called in by Required'
      * Claim Called in by
     D  ZA0006                 1      1
      * Message data for 'Claim Called in by DesReq'
      * Claim Called in by
     D  ZA0007                 1      1
      * Message data for 'Salesperson            NF'
      * Message data for 'Description is Required'
      * @Text 25
     D  ZA0008                 1     25
      * Message data for 'Description is Required'
      * @Text 25
     D  ZA0009                 1     25
      * Message data for 'Application access denied'
      * User Profile Name
     D  ZA0010                 1     10
      * Application Code
     D  ZA0011                11     16
      * Message data for 'Application access denied'
      * User Profile Name
     D  ZA0012                 1     10
      * Application Code
     D  ZA0013                11     16
     I@MKCPW7
      * AR Claim Header           claim number (d)
      * Renamed input format fields
     I              MKC0C7                      WAC0C7
     I              MKZLCD                      WAZLCD
     I              MKBIC3                      WABIC3
     I              MKALNX                      WAALNX
     I              MKRMNB                      WARMNB
     I              MKC3C7                      WAC3C7
     I              MKRFTX                      WARFTX
     I              MKCHSX                      WACHSX
     I              MKCJSX                      WACJSX
     I              MKAYVL                      WAAYVL
     I              MKAZVL                      WAAZVL
     I              MKA0VL                      WAA0VL
     I              MKPQTX                      WAPQTX
     I              MKCNSX                      WACNSX
     I              MKPLTX                      WAPLTX
     I              MKCOSX                      WACOSX
     I              MKPMTX                      WAPMTX
     I              MKCPSX                      WACPSX
     I              MKA1VL                      WAA1VL
     I              MKPNTX                      WAPNTX
     I              MKPOTX                      WAPOTX
     I              MKMLDT                      WAMLDT
     I              MKEJDT                      WAEJDT
     I              MKCQSX                      WACQSX
     I              MKPPTX                      WAPPTX
     I              MKMMDT                      WAMMDT
     I              MKMNDT                      WAMNDT
     I              MKBGTM                      WABGTM
     I              MKCGVN                      WACGVN
     I              MKC4C7                      WAC4C7
     I              MKO2NA                      WAO2NA
     I              MKNFDT                      WANFDT
     I              MKBJTM                      WABJTM
     I              MKCQVN                      WACQVN
     I              MKMODT                      WAMODT
     I              MKBHTM                      WABHTM
     I              MKCHVN                      WACHVN
     I              MKCRSX                      WACRSX
     I              MKMPDT                      WAMPDT
     I              MKBITM                      WABITM
     I              MKCIVN                      WACIVN
     I              MKTBTX                      WATBTX
     I              MKEOVL                      WAEOVL
     I              MKEPVL                      WAEPVL
     I              MKP6DT                      WAP6DT
     I              MKCRTM                      WACRTM
     I              MKYSNX                      WAYSNX
     I              MKT5SX                      WAT5SX
     I              MKF7PC                      WAF7PC
     I              MKF8PC                      WAF8PC
     I              MKF9PC                      WAF9PC
     I              MKEQVL                      WAEQVL
     I              MKERVL                      WAERVL
     I              MKESVL                      WAESVL
     I              MKETVL                      WAETVL
     I              MKT7SX                      WAT7SX
     I              MKT8SX                      WAT8SX
     I              MKT9SX                      WAT9SX
     I              MKUASX                      WAUASX
     I              MKUBSX                      WAUBSX
     I              MKGAPC                      WAGAPC
     I              MKGBPC                      WAGBPC
     I              MKVSST                      WAVSST
     I              MKMJDT                      WAMJDT
     I              MKBETM                      WABETM
     I              MKCCVN                      WACCVN
     I              MKCDVN                      WACDVN
     I              MKMKDT                      WAMKDT
     I              MKBFTM                      WABFTM
     I              MKCEVN                      WACEVN
     I              MKCFVN                      WACFVN
     I              MKTXAA                      WATXAA
     I              MKC8AB                      WAC8AB
     I              MKEJAB                      WAEJAB
     I              MKDMAB                      WADMAB
     I              MKWUU1                      WAWUU1
     I              MKXPU1                      WAXPU1
     I              MKFAVN                      WAFAVN
     I              MKBVTS                      WABVTS
     I              MKWAU1                      WAWAU1
     I              MKFBVN                      WAFBVN
     I              MKBWTS                      WABWTS
     I              MKWBU1                      WAWBU1
      *
      /EJECT
      *****************************************************************
      * Entry parameters
     C     *ENTRY        PLIST
     C                   PARM                    P0RTN
     C     P1C0C7        PARM      P1C0C7        WP0001                         Claim Number
     C     P1BIC3        PARM      P1BIC3        WP0002                         Claim Company N
     C     P1ALNX        PARM      P1ALNX        WP0003                         Claim Order Num
     C     P1RMNB        PARM      P1RMNB        WP0004                         Load ID
     C     P1C3C7        PARM      P1C3C7        WP0005                         Claim Ship to C
     C     P1RFTX        PARM      P1RFTX        WP0006                         Claim Customer
     C     P1UASX        PARM      P1UASX        WP0007                         AC Shipping Met
     C                   PARM      P2DESX        WP0008                         Return Command
     C     P4T6SX        PARM      P4T6SX        WP0009                         Clm Program USR
     C     P5L9TX        PARM                    WP0010                         Claim Audit Sel
     C     P5JDAA        PARM                    WP0011                         Claim Audit Co
     C     P5N9T1        PARM                    WP0012                         Approval Claim
      *****************************************************************
      * Initialize
     C                   EXSR      ZZINIT
      *
      * Check passed parameters
     C                   EXSR      FACKPM
      * Perform once if all passed, else repeat
      * Display and process key screen
     C                   DOU       W0RPT = 'N'
     C                   EXSR      BADSKY
     C                   END
      * Terminate program
     C                   EXSR      ZXEXPG
      *****************************************************************
      /EJECT
     CSR   BADSKY        BEGSR
      *================================================================
      * Display and process key screen
      *================================================================
      * Bypass first display of key screen is possible
     C                   MOVEL     'Y'           W0BYP
      * Initialize key screen
     C                   EXSR      MDIZ#K
      * Signal start of transaction
     C                   MOVEL     'Y'           W0TRN
      * Ensure transaction continues (if reset)
     C                   DOW       W0TRN = 'Y' OR
     C                             W0TRN = 'K'
     C                   MOVEL     'Y'           W0TRN
      * Conduct screen conversation
      * Convert internal to external form
     C                   DOW       W0TRN = 'Y'
     C  N09              EXSR      MNCV#K
      * Is bypass key screen still viable?
     C                   IF        W0BYP = 'Y'
      * One or more key fields is blank
      * HOME: Reset screen fields
     C                   IF        #1C0C7 = *ZERO OR
     C                             *IN30
     C                   MOVEL     'N'           W0BYP
     C                   END
     C                   END
      * Bypass key screen
      * Display key screen
     C                   IF        W0BYP = 'N'
     C                   EXSR      BBEXFM
     C                   END
      * Cancel key screen bypass
     C                   MOVEL     'N'           W0BYP
      * Process response to key screen
      * Cancel & exit program
     C   03              CAS                     ZXEXPG
      * Switch between *ADD/*CHANGE modes
     C   09              CAS                     BCCHMD
      * HOME: Reset screen fields
     C   30              CAS                     BDHMKY
      * Process key screen input
     C                   CAS                     BEPRKY
     C                   END
     C                   DOW       W0TRN = 'R'
     C                   MOVEL     'Y'           W0TRN
     C                   EXSR      BEPRKY
     C                   END
      *
     C                   END
     C                   END
      *================================================================
     CSR   BAEXIT        ENDSR
      /EJECT
     CSR   BBEXFM        BEGSR
      *================================================================
      * Display key screen and process HELP requests
      *================================================================
      * Set screen conditioning indicators
     C                   EXSR      GADSAK
      * Update screen time
     C                   TIME                    ##TME
     C                   DOU       W0HLP = 'N'
     C                   MOVEL     'N'           W0HLP
     C                   MOVE      *IN04         YPMT04
     C                   MOVE      *IN25         HELP25
     C                   MOVE      *ALL'0'       ##OFF
     C                   MOVEA     ##OFF         *IN(1)
     C                   MOVE      YPMT04        *IN04
     C                   MOVE      HELP25        *IN25
     C                   MOVEL     'K'           W0GRP
      * Set cursor by *SET CURSOR data
     C                   IF        YSETCS = 'Y'
     C                   EXSR      Y0SET
     C                   END
     C                   WRITE     #MSGCTL
     C                   WRITE     #CMDTXT1
     C                   EXFMT     #RCDKEY
      * Test cursor
     C                   EXSR      Y8TST
      * Check if prompt requested
     C                   EXSR      ZDVPMT
      * Clear set cursor DDS indicator
     C                   IF        WCSRLC = 'OFF'
     C                   SETOFF                                       94        *
     C                   END
     C                   EVALR     WCSRLC = ' '
      * If help requested, display help text
     C   25              EXSR      ZHHPKY
     C                   END
      * Update job time
     C                   TIME                    ##JTM
      * Clear messages from program message queue
     C                   CALL      'Y2CLMSC'
     C                   PARM      ##PGM         ZAPGMQ
     C                   PARM      '*SAME'       ZAPGRL
      * Reset first message only flag
     C                   MOVEL     'Y'           ZAFSMS
      * Reset global error indicator
     C                   SETOFF                                           99    *
     C                   IF        YSETCS = 'Y'
     C                   EXSR      Y9CLR
     C                   END
      *================================================================
     CSR   BBEXIT        ENDSR
      /EJECT
     CSR   BCCHMD        BEGSR
      *================================================================
      * Switch between *ADD/*CHANGE modes
      *================================================================
     C                   IF        W0PMD = 'ADD'
     C                   MOVEL     'CHG'         W0PMD
     C                   ELSE
     C                   MOVEL     'ADD'         W0PMD
     C                   END
      *================================================================
     CSR   BCEXIT        ENDSR
      /EJECT
     CSR   BDHMKY        BEGSR
      *================================================================
      * Process HOME key
      *================================================================
     C                   MOVEL     'N'           W0TRN
      *================================================================
     CSR   BDEXIT        ENDSR
      /EJECT
     CSR   BEPRKY        BEGSR
      *================================================================
      * Process key screen input
      *================================================================
      * Initialise detail screen
     C                   EXSR      MAIZ#1
      * Validate key fields
     C                   EXSR      BFVLKY
     C     *IN99         CABEQ     '1'           BEEXIT
     C     YPMTFD        CABNE     *BLANKS       BEEXIT
      * Check for existing record
     C     KRTV          KLIST
     C                   KFLD                    MKC0C7                         Claim Number
      * Setup key
     C                   Z-ADD     #1C0C7        MKC0C7
     C     KRTV          CHAIN     @MKCPWB                            9091      *
      * Record locked
     C                   IF        *IN91
     C                   SETON                                        9931      *
     C                   GOTO      BEEXIT
     C                   END                                                    FI 91
      *
      * If record does not exist, flip to add mode
     C                   IF        *IN90
     C                   MOVEL     'ADD'         W0PMD
      * USER: Initialize detail screen (new record)
     C                   MOVEL     'N'           #1CNSX                         Product Inspect
     C                   MOVEL     'N'           #1COSX                         Rep Inspection
      * DTL.Resolve Claim by Date = JOB.*Job date + CON.10 *DAYS
     C     ##JDT         ADD       1000000       XDINDT
     C                   EXSR      XCVTA
     C                   Z-ADD     XDAY1         XDAY2
     C                   Z-ADD     10            XDURR
     C                   MOVEL     '1'           XDSEL
     C                   MOVEL     '1111111'     XDCDW
     C                   EXSR      XDOWS
     C                   EXSR      XDADY
     C                   EXSR      XCVFA
     C                   IF        XDINDT < 010101 OR
     C                             XDINDT > 4000000
     C                   Z-ADD     *ZERO         #1MLDT
     C                   ELSE
     C     XDINDT        SUB       1000000       #1MLDT
     C                   END
     C                   Z-ADD     ##JDT         #1MNDT                         Claim Entry Dat
     C                   Z-ADD     ##JDT         #1MMDT                         Claim Called in
     C                   Z-ADD     ##JTM         #1BGTM                         Claim Entry Tim
     C                   MOVEL     ##USR         #1CGVN                         Claim Entry Use
     C                   MOVEL     'N'           #1CJSX                         Claim Status
      * ** If multi-co# = No, fill in dtl co# & protect   2/22/2006 LJB
      * CASE: PAR.Allow Multi-Company is no
     C                   IF        P3I6ST = 'N'
     C                   Z-ADD     P3AIC3        #1BIC3                         Claim Company N
     C                   END                                                    *FI
      * Get Load ID.
     C                   EXSR      UASUBR                                       Get Load ID.
     C                   Z-ADD     0             ZQ
     C     @CN(001)      CAT(P)    @CN(002):ZQ   #DQ0TX                         @text 30
     C                   MOVEL     'Y'           WUOVST                         One Time Select
      * E3387 JJH 09/08/14 - Add ACR Shipping Method
      * Rtv Shipping Method   RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     #1BIC3        WL0029                         Company Number
     C                   Z-ADD     #1ALNX        WL0030                         Order Number
     C                   EXSR      SERVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0031        #1UASX                         Shipping Method
     C                   EVAL      #DDGU1 = ' '                                 ACR Shipping Me
      * ACR Shipping Method DRV
      * PAR.ACR Shipping Method DRV = Condition name of PAR.ACR Shipping
     C                   CALL      'CARVC2R'                            90      *
     C                   PARM                    W0RTN
     C                   PARM      1252129       Y2LSNO                         List number
     C                   PARM      #1UASX        W0INVL                         ACR Shipping Me
     C                   PARM      ' '           W0VLMP                         Value mapped
     C     #DDGU1        PARM                    W0CNNM                         ACR Shipping Me
      *
     C                   ELSE
      * If record does exist, flip to change mode
     C                   MOVEL     'CHG'         W0PMD
      * Load screen fields from DBF
     C                   EXSR      MBFL#1
      * CALC: Detail screen function fields
      * CASE: Claim called in by customer
      *  - c1 AND c2
      *   |- c1    : DTL.Claim Called in by is Customer
      *   |- c2    : DTL.Claim Called in by Desc is Blank
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        #1CQSX = 'C'
     C                   IF        #1PPTX = ' '
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   IF        Y0CX01 = '1'
     C                   MOVEL     #1PQTX        #1PPTX                         Claim Called in
     C                   ELSE
      * CASE: Claim called in by plant
      *  - c1 AND c2
      *   |- c1    : DTL.Claim Called in by is Plant
      *   |- c2    : DTL.Claim Called in by Desc is Blank
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        #1CQSX = 'P'
     C                   IF        #1PPTX = ' '
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   IF        Y0CX01 = '1'
     C                   MOVEL     @CN(003)      #1PPTX                         Claim Called in
     C                   END                                                    *FI
     C                   END                                                    *FI
      * E3387 JJH 09/08/14 - Add ACR Shipping Method
     C                   EVAL      #DDGU1 = ' '                                 ACR Shipping Me
      * ACR Shipping Method DRV
      * PAR.ACR Shipping Method DRV = Condition name of PAR.ACR Shipping
     C                   CALL      'CARVC2R'                            90      *
     C                   PARM                    W0RTN
     C                   PARM      1252129       Y2LSNO                         List number
     C                   PARM      #1UASX        W0INVL                         ACR Shipping Me
     C                   PARM      ' '           W0VLMP                         Value mapped
     C     #DDGU1        PARM                    W0CNNM                         ACR Shipping Me
      *
      * USER: Initialize detail screen (existing record)
      * DTL.Claim Status Desc     USR = Condition name of DTL.Claim Statu
     C                   CALL      'CARVC2R'                            90      *
     C                   PARM                    W0RTN
     C                   PARM      1523237       Y2LSNO                         List number
     C                   PARM      #1CJSX        W0INVL                         Claim Status
     C                   PARM      ' '           W0VLMP                         Value mapped
     C     #DRQTX        PARM                    W0CNNM                         Claim Status De
      *
     C                   Z-ADD     0             ZQ
     C     @CN(001)      CAT(P)    @CN(002):ZQ   #DQ0TX                         @text 30
      * Get Load ID.
     C                   EXSR      UBSUBR                                       Get Load ID.
      * CASE: DB1.Actual Delivery Date is Zero
      * Get Actual Delivery Date and validate that the order is valid
     C                   IF        MKEJDT = 0
     C                   EXSR      UCSUBR                                       Get Actual Deli
     C                   ELSE
      * CASE: *OTHERWISE
      * Use work fields on Act Del Date and validate that the order is go
     C                   EXSR      UDSUBR                                       Use work fields
     C                   END                                                    *FI
      * CASE: PGM.*Return code is *Record does not exist
      * Setup message data for message
      * Convert Claim Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C                   IF        W0RTN = @CN(004)
     C                   IF        #1BIC3 <> 0
     C                   EVAL      WUDMCD = ' '                                 CD3 Ext Numeric
     C                   MOVEL     #1BIC3        WUDMCD                         CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                   MOVEA     WUDMCD        #L3                            EDIT ARRAY
     C                   Z-ADD     1             #E                3 0
     C                   MOVE      *IN61         UUIN61            1
     C                   SETOFF                                       61
     C                   DO        3
     C     #L3(#E)       IFEQ      '0'                                          ZERO VALUE
     C     *IN61         IFEQ      '0'
     C                   MOVE      ' '           #L3(#E)
     C                   ADD       1             #E
     C                   END
     C                   ELSE
     C                   SETON                                        61
     C                   END
     C                   END
     C                   MOVEA     #L3           WUDMCD
     C                   MOVE      UUIN61        *IN61
     C                   MOVEL     WUDMCD        ZA0001                         CD3 Ext Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      ZA0001 = ' '                                 CD3 Ext Numeric
     C                   END                                                    *FI
      * Convert Claim Order Number to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C                   IF        #1ALNX <> 0
     C                   EVAL      WUEOCD = ' '                                 CD7 Ext Numeric
     C                   MOVEL     #1ALNX        WUEOCD                         CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                   MOVEA     WUEOCD        #L7                            EDIT ARRAY
     C                   Z-ADD     1             #E                3 0
     C                   MOVE      *IN61         UUIN61            1
     C                   SETOFF                                       61
     C                   DO        7
     C     #L7(#E)       IFEQ      '0'                                          ZERO VALUE
     C     *IN61         IFEQ      '0'
     C                   MOVE      ' '           #L7(#E)
     C                   ADD       1             #E
     C                   END
     C                   ELSE
     C                   SETON                                        61
     C                   END
     C                   END
     C                   MOVEA     #L7           WUEOCD
     C                   MOVE      UUIN61        *IN61
     C                   MOVEL     WUEOCD        ZA0002                         CD7 Ext Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      ZA0002 = ' '                                 CD7 Ext Numeric
     C                   END                                                    *FI
      * Send message 'Order is not Found'
     C                   MOVEL     'USR3458'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        993132    *
      *
     C                   END                                                    *FI
      * RTV Salesperson NmeOnlyRT - Salesperson  * 
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  #1ZLCD        WL0036                         Salesperson Cod
     C                   EXSR      SGRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0037        #DP9NA                         Salesperson Nam
      * CASE: PGM.*Return code is *Record does not exist
      * Setup message data for message
      * Send message 'Salesperson            NF'
     C                   IF        W0RTN = @CN(004)
     C                   MOVEL     'USR0039'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
      *
     C                   END                                                    *FI
      * E3387 JJH 09/08/14 - Add ACR Shipping Method
      * Rtv Shipping Method   RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     #1BIC3        WL0029                         Company Number
     C                   Z-ADD     #1ALNX        WL0030                         Order Number
     C                   EXSR      SERVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0031        #1UASX                         Shipping Method
     C                   EVAL      #DDGU1 = ' '                                 ACR Shipping Me
      * ACR Shipping Method DRV
      * PAR.ACR Shipping Method DRV = Condition name of PAR.ACR Shipping
     C                   CALL      'CARVC2R'                            90      *
     C                   PARM                    W0RTN
     C                   PARM      1252129       Y2LSNO                         List number
     C                   PARM      #1UASX        W0INVL                         ACR Shipping Me
     C                   PARM      ' '           W0VLMP                         Value mapped
     C     #DDGU1        PARM                    W0CNNM                         ACR Shipping Me
      *
      * T10560 DN 05/18/17-Added FPR ID.
     C                   Z-ADD     MKEQVL        #DAHNZ                         FPR ID USR
     C                   END
      *..................................................
     C   99              GOTO      BEEXIT
      *
      * No error: Display and process details
     C                   IF        YPMTFD = ' '
     C                   EXSR      CADSDA
     C                   END
      *
      *================================================================
     CSR   BEEXIT        ENDSR
      /EJECT
     CSR   BFVLKY        BEGSR
      *================================================================
      * Validate key fields
      *================================================================
      * Validate Claim Number and convert to internal.
      * CD7 Ext/Int
     C                   MOVEL     V1C0C7        WUI3ST                         USR First Posit
     C                   EVAL      W0RTN = ' '                                  *Return code
      * CASE: WRK.USR First Position is Search request
     C                   IF        WUI3ST = '?'
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     V1C0C7        WUEOCD                         CD7 Ext Numeric
      * CD7 Ext/Int EXCUSRSRC - *Field attribute types  * 
      * RIGHT JUSTIFY INPUT FIELD
     C                   MOVE      *BLANKS       JUSTC7            7
     C                   MOVEA     *BLANKS       K7
     C                   Z-ADD     7             C                 3 0
     C                   Z-ADD     7             D                 3 0
      * FIELD LOADED TO WRK CONTEXT BY INTERNAL FUNCTION
     C                   MOVEA     WUEOCD        J7
     C                   MOVE      *BLANKS       W0RTN
     C                   DO        7
     C     J7(C)         IFNE      ' '
     C                   MOVEA     J7(C)         K7(D)
     C                   SUB       1             D
     C                   END
     C                   SUB       1             C
     C                   END
     C                   MOVEA     K7            JUSTC7
      * TEST FOR INVALID DATA IN FIELD
     C                   MOVE      JUSTC7        TEST7             1
     C     TEST7         IFGT      '?'
     C     TEST7         ANDLT     '0'
     C                   MOVE      'USR0752'     W0RTN
     C                   ELSE
     C                   MOVE      *IN60         HLDIN             1
     C                   TESTN                   JUSTC7               606060
     C     *IN60         IFEQ      '0'
     C                   MOVE      'USR0752'     W0RTN
     C                   END
     C                   END
     C                   MOVE      JUSTC7        WUEOCD
     C                   MOVE      HLDIN         *IN60
      * CASE: PGM.*Return code is CD3 Non numeric data
      * Setup message data for message
      * Send message 'CD7 Non numeric data'
     C                   IF        W0RTN = @CN(005)
     C                   MOVEL     'USR0802'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
      *
     C                   Z-ADD     *ZERO         #1C0C7                         CD7 Int Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVE      WUEOCD        #1C0C7                         CD7 Int Numeric
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Select existing record
     C                   IF        W0PMD <> 'ADD' OR
     C                             YPMTFD <> ' '
     C                   EXSR      VACKRL
     C                   END
      * Claim Number required
     C                   IF        #1C0C7 = *ZERO AND
     C                             YPMTFD = ' '
     C                   SETON                                        9931      *
      * Send message '*Value required'
     C                   MOVEL     'Y2U0001'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END                                                    FI
      *================================================================
     CSR   BFEXIT        ENDSR
      /EJECT
     CSR   CADSDA        BEGSR
      *================================================================
      * Display and process detail screen
      *================================================================
      * Conduct detail screen conversation
      * - repeat until screen control flag is reset:
      * Convert internal to external form
     C                   DOW       W0TRN = 'Y'
     C                   EXSR      MOCV#D
      * Display detail screen
     C                   EXSR      CBEXFM
      * Process response to detail screen
      * Cancel & exit program
     C   03              CAS                     ZXEXPG
      * Redisplay previous screen
     C   12              CAS                     CCDSPV
      * HOME: Reset screen fields
     C   30              CAS                     CCDSPV
      * Process detail screen input
     C                   CAS                     CFPRSC
     C                   END
     C                   IF        W0TRN = 'R'
     C                   IF        W0PMD = 'ADD'
     C                   EXSR      MAIZ#1
     C                   END
     C                   END
      *
     C                   END
      *================================================================
     CSR   CAEXIT        ENDSR
      /EJECT
     CSR   CBEXFM        BEGSR
      *================================================================
      * Display screen and process HELP requests
      *================================================================
      * Set screen conditioning indicators
     C                   EXSR      GBDSAD
      * Update screen time
     C                   TIME                    ##TME
     C                   DOU       W0HLP = 'N'
     C                   MOVEL     'N'           W0HLP
     C                   MOVE      *IN04         YPMT04
     C                   MOVE      *IN25         HELP25
     C                   MOVE      *ALL'0'       ##OFF
     C                   MOVEA     ##OFF         *IN(1)
     C                   MOVE      YPMT04        *IN04
     C                   MOVE      HELP25        *IN25
     C                   MOVEL     '1'           W0GRP
      * Set cursor by *SET CURSOR data
     C                   IF        YSETCS = 'Y'
     C                   EXSR      Y1SET
     C                   END
     C                   WRITE     #MSGCTL
     C                   WRITE     #CMDTXT2
     C                   EXFMT     #RCDDTL1
      * Test cursor
     C                   EXSR      Y8TST
      * Check if prompt requested
     C                   EXSR      ZDVPMT
      * Clear set cursor DDS indicator
     C                   IF        WCSRLC = 'OFF'
     C                   SETOFF                                       94        *
     C                   END
     C                   EVALR     WCSRLC = ' '
      * If help requested, display help text
     C   25              EXSR      ZHHPKY
     C                   END
      * Update job time
     C                   TIME                    ##JTM
      * Clear messages from program message queue
     C                   CALL      'Y2CLMSC'
     C                   PARM      ##PGM         ZAPGMQ
     C                   PARM      '*SAME'       ZAPGRL
      * Reset first message only flag
     C                   MOVEL     'Y'           ZAFSMS
      * Reset global error indicator
     C                   SETOFF                                           99    *
     C                   IF        YSETCS = 'Y'
     C                   EXSR      Y9CLR
     C                   END
      *================================================================
     CSR   CBEXIT        ENDSR
      /EJECT
     CSR   CCDSPV        BEGSR
      *================================================================
      * Redisplay previous screen
      *================================================================
      * USER: Process key screen request
     C                   MOVEL     W0RTN         P0RTN                          *Return code
     C                   EXSR      ZYEXPG
     C   30              MOVEL     'R'           W0TRN
     C   12              MOVEL     'K'           W0TRN
      *================================================================
     CSR   CCEXIT        ENDSR
      /EJECT
     CSR   CFPRSC        BEGSR
      *================================================================
      * Validate record
      *================================================================
      * Confirm/update is not deferred
     C                   MOVEL     'N'           W0DCF
      * Validate details
     C                   EXSR      DCVLDL
      * QUIT if error:
     C   99              GOTO      CFEXIT
      * Defer confirm/update requested
     C     W0DCF         CABEQ     'Y'           CFEXIT
      * No error: update record
     C                   EXSR      EBPR##
      *================================================================
     CSR   CFEXIT        ENDSR
      /EJECT
     CSR   DCVLDL        BEGSR
      *================================================================
      * Validate details
      *================================================================
      * Set screen conditioning indicators
     C                   EXSR      GBDSAD
      * Initialise derived fields
     C                   IF        YPMTFD = ' '
     C                   EXSR      MFIZ#2
     C                   END
      * Validate Claim Company Number and convert to internal.
      * CD3 Ext/Int
     C                   MOVEL     V1BIC3        WUI3ST                         USR First Posit
     C                   EVAL      W0RTN = ' '                                  *Return code
      * CASE: WRK.USR First Position is Search request
     C                   IF        WUI3ST = '?'
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     V1BIC3        WUDMCD                         CD3 Ext Numeric
      * CD3 Ext/Int EXCUSRSRC - *Field attribute types  * 
      * RIGHT JUSTIFY INPUT FIELD
     C                   MOVE      *BLANKS       JUSTC3            3
     C                   MOVEA     *BLANKS       K3
     C                   Z-ADD     3             C                 3 0
     C                   Z-ADD     3             D                 3 0
      * FIELD LOADED TO WRK CONTEXT BY INTERNAL FUNCTION
     C                   MOVEA     WUDMCD        J3
     C                   MOVE      *BLANKS       W0RTN
     C                   DO        3
     C     J3(C)         IFNE      ' '
     C                   MOVEA     J3(C)         K3(D)
     C                   SUB       1             D
     C                   END
     C                   SUB       1             C
     C                   END
     C                   MOVEA     K3            JUSTC3
      * TEST FOR INVALID DATA IN FIELD
     C                   MOVE      JUSTC3        TESTC             1
     C     TESTC         IFGT      '?'
     C     TESTC         ANDLT     '0'
     C                   MOVE      'USR0752'     W0RTN
     C                   ELSE
     C                   MOVE      *IN60         HLDIN             1
     C                   TESTN                   JUSTC3               606060
     C     *IN60         IFEQ      '0'
     C                   MOVE      'USR0752'     W0RTN
     C                   END
     C                   END
     C                   MOVE      JUSTC3        WUDMCD
     C                   MOVE      HLDIN         *IN60
      * CASE: PGM.*Return code is CD3 Non numeric data
      * Setup message data for message
      * Send message 'CD3 Non numeric data'
     C                   IF        W0RTN = @CN(005)
     C                   MOVEL     'USR0752'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
      *
     C                   Z-ADD     *ZERO         #1BIC3                         CD3 Int Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVE      WUDMCD        #1BIC3                         CD3 Int Numeric
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Validate Claim Order Number and convert to internal.
      * CD7 Ext/Int
     C                   MOVEL     V1ALNX        WUI3ST                         USR First Posit
     C                   EVAL      W0RTN = ' '                                  *Return code
      * CASE: WRK.USR First Position is Search request
     C                   IF        WUI3ST = '?'
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     V1ALNX        WUEOCD                         CD7 Ext Numeric
      * CD7 Ext/Int EXCUSRSRC - *Field attribute types  * 
     C                   MOVE      *BLANKS       JUSTC7            7
     C                   MOVEA     *BLANKS       K7
     C                   Z-ADD     7             C                 3 0
     C                   Z-ADD     7             D                 3 0
     C                   MOVEA     WUEOCD        J7
     C                   MOVE      *BLANKS       W0RTN
     C                   DO        7
     C     J7(C)         IFNE      ' '
     C                   MOVEA     J7(C)         K7(D)
     C                   SUB       1             D
     C                   END
     C                   SUB       1             C
     C                   END
     C                   MOVEA     K7            JUSTC7
     C                   MOVE      JUSTC7        TEST7             1
     C     TEST7         IFGT      '?'
     C     TEST7         ANDLT     '0'
     C                   MOVE      'USR0752'     W0RTN
     C                   ELSE
     C                   MOVE      *IN60         HLDIN             1
     C                   TESTN                   JUSTC7               606060
     C     *IN60         IFEQ      '0'
     C                   MOVE      'USR0752'     W0RTN
     C                   END
     C                   END
     C                   MOVE      JUSTC7        WUEOCD
     C                   MOVE      HLDIN         *IN60
      * CASE: PGM.*Return code is CD3 Non numeric data
      * Setup message data for message
      * Send message 'CD7 Non numeric data'
     C                   IF        W0RTN = @CN(005)
     C                   MOVEL     'USR0802'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
      *
     C                   Z-ADD     *ZERO         #1ALNX                         CD7 Int Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVE      WUEOCD        #1ALNX                         CD7 Int Numeric
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Validate Claim Called in by
     C                   EVAL      W0RTN = ' '
      * Name search required?
      * Claim Called in by
     C                   IF        '#1CQSX' = YPMTFD
     C                   MOVEL     #1CQSX        W0INVL
      * Set current value in drop down list.
     C                   MOVEL     *ZEROS        ZHCQSX
     C                   SELECT
     C                   WHEN      W0INVL = 'X'                                 X
     C                   Z-ADD     1             ZHCQSX
     C                   WHEN      W0INVL = 'C'                                 C
     C                   Z-ADD     2             ZHCQSX
     C                   WHEN      W0INVL = 'O'                                 O
     C                   Z-ADD     3             ZHCQSX
     C                   WHEN      W0INVL = *BLANK                              *BLANK
     C                   Z-ADD     4             ZHCQSX
     C                   WHEN      W0INVL = 'P'                                 P
     C                   Z-ADD     5             ZHCQSX
     C                   WHEN      W0INVL = 'B'                                 B
     C                   Z-ADD     6             ZHCQSX
     C                   ENDSL
     C                   EXFMT     ZGCQSX
      * Set selected value from drop down list.
     C                   EVAL      W0INVL = ' '
     C                   SELECT
     C                   WHEN      ZHCQSX = 1
     C                   MOVEL     'X'           W0INVL                         X
     C                   WHEN      ZHCQSX = 2
     C                   MOVEL     'C'           W0INVL                         C
     C                   WHEN      ZHCQSX = 3
     C                   MOVEL     'O'           W0INVL                         O
     C                   WHEN      ZHCQSX = 4
     C                   EVAL      W0INVL = ' '                                 *BLANK
     C                   WHEN      ZHCQSX = 5
     C                   MOVEL     'P'           W0INVL                         P
     C                   WHEN      ZHCQSX = 6
     C                   MOVEL     'B'           W0INVL                         B
     C                   ENDSL
     C                   SETOFF                                       90        *
     C                   MOVEL     W0INVL        #1CQSX
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
      *
      * Validate Claim Called in by Date
      * External date
     C                   Z-ADD     V1MMDT        XDEXDT
      * Check date
     C                   EXSR      XDCK2
     C                   IF        W0RTN <> ' '
     C                   SETON                                        9936      *
     C                   END
     C                   Z-ADD     XDINDT        #1MMDT
      * Validate Actual Delivery Date
      * External date
     C                   Z-ADD     V1EJDT        XDEXDT
      * Check date
     C                   EXSR      XDCK2
     C                   IF        W0RTN <> ' '
     C                   SETON                                        9938      *
     C                   END
     C                   Z-ADD     XDINDT        #1EJDT
      * Validate Product Inspection Avail
     C                   EVAL      W0RTN = ' '
      * Name search required?
      * Product Inspection Avail
     C                   IF        '#1CNSX' = YPMTFD
     C                   MOVEL     #1CNSX        W0INVL
      * Set current value in drop down list.
     C                   MOVEL     *ZEROS        ZHCNSX
     C                   SELECT
     C                   WHEN      W0INVL = 'N'                                 N
     C                   Z-ADD     1             ZHCNSX
     C                   WHEN      W0INVL = 'Y'                                 Y
     C                   Z-ADD     2             ZHCNSX
     C                   ENDSL
     C                   EXFMT     ZGCNSX
      * Set selected value from drop down list.
     C                   EVAL      W0INVL = ' '
     C                   SELECT
     C                   WHEN      ZHCNSX = 1
     C                   MOVEL     'N'           W0INVL                         N
     C                   WHEN      ZHCNSX = 2
     C                   MOVEL     'Y'           W0INVL                         Y
     C                   ENDSL
     C                   SETOFF                                       90        *
     C                   MOVEL     W0INVL        #1CNSX
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
      *
      * Validate Rep Inspection Required
     C                   EVAL      W0RTN = ' '
      * Name search required?
      * Rep Inspection Required
     C                   IF        '#1COSX' = YPMTFD
     C                   MOVEL     #1COSX        W0INVL
      * Set current value in drop down list.
     C                   MOVEL     *ZEROS        ZHCOSX
     C                   SELECT
     C                   WHEN      W0INVL = 'N'                                 N
     C                   Z-ADD     1             ZHCOSX
     C                   WHEN      W0INVL = 'Y'                                 Y
     C                   Z-ADD     2             ZHCOSX
     C                   ENDSL
     C                   EXFMT     ZGCOSX
      * Set selected value from drop down list.
     C                   EVAL      W0INVL = ' '
     C                   SELECT
     C                   WHEN      ZHCOSX = 1
     C                   MOVEL     'N'           W0INVL                         N
     C                   WHEN      ZHCOSX = 2
     C                   MOVEL     'Y'           W0INVL                         Y
     C                   ENDSL
     C                   SETOFF                                       90        *
     C                   MOVEL     W0INVL        #1COSX
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
      *
      * Validate AC Full Return to Plant
     C                   EVAL      W0RTN = ' '
     C                   MOVEL     #1UBSX        W0NSRQ                         AC Full Return
      * Name search required?
     C                   IF        W0NSRQ = '?' OR
     C                             '#1UBSX' = YPMTFD
     C                   CALL      'CAVLLSR'                            90      *
     C                   PARM                    W0RTN
     C                   PARM      2104685       Y2LSNO
     C     #1UBSX        PARM      #1UBSX        W0EXVL                         AC Full Return
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
     C                   IF        W0NSRQ <> '?'
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
     C                   END
      *
      * USER: Validate detail screen fields
      * if no then we could be in add mode or changed mode
      * when the user selects the enter key and the create is performed
      * this status field will be updated with Y and later on usage
     C                   IF        YPMTFD = ' '
     C                   EVAL      WUN1ST = ' '                                 Record was Adde
      * F4=Select the order
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DTL.*CMD key is CF04
      *   |- c2    : PGM.*Cursor field <IS> DTL.Claim Order Number
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        *IN04
     C                   IF        W0CFL = 'V1ALNX'
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
      * SEL Order/Load Id/Invo SR - Order Header TRG  * 
     C                   IF        Y0CX01 = '1'
     C                   CALL      'PBBHSRR'                            90      SEL Order/Load
     C                   PARM      *BLANK        W0RTN
     C     #1BIC3        PARM      #1BIC3        WQ0004                         Company Number
     C     #1ALNX        PARM      #1ALNX        WQ0005                         Order Number
     C     #DBCNA        PARM      #DBCNA        WQ0006                         Customer Purcha
     C     #1RMNB        PARM      #1RMNB        WQ0007                         Load ID
     C     #1UASX        PARM      #1UASX        WQ0008                         Shipping Method
     C     #DCONB        PARM      #DCONB        WQ0009                         Invoice Number
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PBBHSRR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        993132    *
     C                   END
     C                   END                                                    *FI
      * *****************************************************************
      * E4453 JJH 12/10/15 - Use Billing Activity Type 1=Invoice & 3=DM
      * RTV Bill Type, Event   RT - Order Header TRG  * 
     C                   EXSR      SHRVGN
      * CASE: LCL.Billing Activity Type is Invoice or Debit Memo
      * Allow Claim to be assigned to Order
     C                   IF        YL0001 = '3' OR
     C                             YL0001 = '1'
     C                   ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
      * Convert Claim Order Number to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C                   IF        #1ALNX <> 0
     C                   EVAL      WUEOCD = ' '                                 CD7 Ext Numeric
     C                   MOVEL     #1ALNX        WUEOCD                         CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                   MOVEA     WUEOCD        #L7                            EDIT ARRAY
     C                   Z-ADD     1             #E                3 0
     C                   MOVE      *IN61         UUIN61            1
     C                   SETOFF                                       61
     C                   DO        7
     C     #L7(#E)       IFEQ      '0'                                          ZERO VALUE
     C     *IN61         IFEQ      '0'
     C                   MOVE      ' '           #L7(#E)
     C                   ADD       1             #E
     C                   END
     C                   ELSE
     C                   SETON                                        61
     C                   END
     C                   END
     C                   MOVEA     #L7           WUEOCD
     C                   MOVE      UUIN61        *IN61
     C                   MOVEL     WUEOCD        ZA0003                         CD7 Ext Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      ZA0003 = ' '                                 CD7 Ext Numeric
     C                   END                                                    *FI
      * Send message 'Clm Billing Activity Type'
     C                   MOVEL     'USR4890'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        9932      *
      *
     C                   END                                                    *FI
      * *****************************************************************
      * Verify the Order No and Co is on another claim ..One Time only
     C                   EXSR      UESUBR                                       Verify the Orde
      * CASE: DTL.Actual Delivery Date is Zero
      * Get Actual Delivery Date and validate that the order is valid
     C                   IF        #1EJDT = 0
     C                   EXSR      UFSUBR                                       Get Actual Deli
     C                   ELSE
      * CASE: *OTHERWISE
      * validate order number only.
     C                   EXSR      UGSUBR                                       validate order
     C                   END                                                    *FI
      * CASE: PGM.*Return code is *Record does not exist
      * Setup message data for message
      * Convert Claim Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C                   IF        W0RTN = @CN(004)
     C                   IF        #1BIC3 <> 0
     C                   EVAL      WUDMCD = ' '                                 CD3 Ext Numeric
     C                   MOVEL     #1BIC3        WUDMCD                         CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                   MOVEA     WUDMCD        #L3                            EDIT ARRAY
     C                   Z-ADD     1             #E                3 0
     C                   MOVE      *IN61         UUIN61            1
     C                   SETOFF                                       61
     C                   DO        3
     C     #L3(#E)       IFEQ      '0'                                          ZERO VALUE
     C     *IN61         IFEQ      '0'
     C                   MOVE      ' '           #L3(#E)
     C                   ADD       1             #E
     C                   END
     C                   ELSE
     C                   SETON                                        61
     C                   END
     C                   END
     C                   MOVEA     #L3           WUDMCD
     C                   MOVE      UUIN61        *IN61
     C                   MOVEL     WUDMCD        ZA0004                         CD3 Ext Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      ZA0004 = ' '                                 CD3 Ext Numeric
     C                   END                                                    *FI
      * Convert Claim Order Number to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C                   IF        #1ALNX <> 0
     C                   EVAL      WUEOCD = ' '                                 CD7 Ext Numeric
     C                   MOVEL     #1ALNX        WUEOCD                         CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                   MOVEA     WUEOCD        #L7                            EDIT ARRAY
     C                   Z-ADD     1             #E                3 0
     C                   MOVE      *IN61         UUIN61            1
     C                   SETOFF                                       61
     C                   DO        7
     C     #L7(#E)       IFEQ      '0'                                          ZERO VALUE
     C     *IN61         IFEQ      '0'
     C                   MOVE      ' '           #L7(#E)
     C                   ADD       1             #E
     C                   END
     C                   ELSE
     C                   SETON                                        61
     C                   END
     C                   END
     C                   MOVEA     #L7           WUEOCD
     C                   MOVE      UUIN61        *IN61
     C                   MOVEL     WUEOCD        ZA0005                         CD7 Ext Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      ZA0005 = ' '                                 CD7 Ext Numeric
     C                   END                                                    *FI
      * Send message 'Order is not Found'
     C                   MOVEL     'USR3458'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        993132    *
      *
     C                   END                                                    *FI
      * CASE:
      *  - c1ANDc2
      *   |- c1    : DTL.Claim Company Number EQ PAR.Claim Company Number
      *   |- c2    : DTL.Claim Order Number EQ PAR.Claim Order Number
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        #1BIC3 = P1BIC3
     C                   IF        #1ALNX = P1ALNX
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   IF        Y0CX01 = '1'
     C                   ELSE
      * CASE: *OTHERWISE
     C                   Z-ADD     #1BIC3        P1BIC3                         Claim Company N
     C                   Z-ADD     #1ALNX        P1ALNX                         Claim Order Num
      * Get Actual Delivery Date.
     C                   EXSR      UHSUBR                                       Get Actual Deli
     C                   END                                                    *FI
      * CASE: DTL.Claim Called in by is Customer
     C                   IF        #1CQSX = 'C'
     C                   ELSE
      * CASE: DTL.Claim Called in by is Plant
     C                   IF        #1CQSX = 'P'
     C                   ELSE
      * CASE: *OTHERWISE
      * CASE: DTL.Claim Called in by is *Blank
      * Setup message data for message
     C                   IF        #1CQSX = ' '
     C                   MOVEL     #1CQSX        ZA0006                         Claim Called in
      * Send message 'Clm Called in by Required'
     C                   MOVEL     'USR4482'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        9934      *
      *
     C                   END                                                    *FI
      * CASE: DTL.Claim Called in by Desc is Blank
      * Setup message data for message
     C                   IF        #1PPTX = ' '
     C                   MOVEL     #1CQSX        ZA0007                         Claim Called in
      * Send message 'Claim Called in by DesReq'
     C                   MOVEL     'USR3527'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        9934      *
      *
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Get SALESPERSON AND LOAD ID
     C                   EXSR      UISUBR                                       Get SALESPERSON
      * F14=Display Dispatch/Tracer
      * CASE: DTL.*CMD key is CF14
      * DSP Dispatch/Tracer    DF - Load Detail  * 
     C                   IF        *IN14
     C                   CALL      'PDT3DFR'                            90      DSP Dispatch/Tr
     C                   PARM      *BLANK        W0RTN
     C                   PARM      P1RMNB        WQ0015                         Load ID
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PDT3DFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        99        *
     C                   END
     C                   MOVEL     'Y'           W0DCF                          *Defer confirm
     C                   END                                                    *FI
      * Validate "Product Avail Inspect" & "Desc".
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DTL.Product Inspection Avail is Yes
      *   |- c2    : DTL.Product Inspection Desc is Blank
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        #1CNSX = 'Y'
     C                   IF        #1PLTX = ' '
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Setup message data for message
     C                   IF        Y0CX01 = '1'
     C                   MOVEL     #1PLTX        ZA0008                         Product Inspect
      * Send message 'Description is Required'
     C                   MOVEL     'USR2753'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        9941      *
      *
     C                   END                                                    *FI
      * Validate "Rep Req for Inspection" & "Desc".
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DTL.Rep Inspection Required is Yes
      *   |- c2    : DTL.Rep Inspection Req Desc is Blank
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        #1COSX = 'Y'
     C                   IF        #1PMTX = ' '
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Setup message data for message
     C                   IF        Y0CX01 = '1'
     C                   MOVEL     #1PMTX        ZA0009                         Rep Inspection
      * Send message 'Description is Required'
     C                   MOVEL     'USR2753'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        9943      *
      *
     C                   END                                                    *FI
     C                   END
      * Check relations
      * Check reference to Salesperson
     C                   EXSR      VBCKRL
     C                   IF        W0RTN <> ' ' AND
     C                             YPMTFD = ' '
     C                   SETON                                        9939      *
     C                   END
      * Check reference to Sales Channel
     C                   EXSR      VCCKRL
     C                   IF        W0RTN <> ' ' AND
     C                             YPMTFD = ' '
     C                   SETON                                        99        *
     C                   END
      * Check reference to CCM Disposition
     C                   EXSR      VDCKRL
     C                   IF        W0RTN <> ' ' AND
     C                             YPMTFD = ' '
     C                   SETON                                        99        *
     C                   END
      * Check reference to CCM Location
     C                   EXSR      VECKRL
     C                   IF        W0RTN <> ' ' AND
     C                             YPMTFD = ' '
     C                   SETON                                        99        *
     C                   END
      * CALC: Detail screen function fields
      * CASE: Claim called in by customer
      *  - c1 AND c2
      *   |- c1    : DTL.Claim Called in by is Customer
      *   |- c2    : DTL.Claim Called in by Desc is Blank
      *   '-
     C                   IF        YPMTFD = ' '
     C                   MOVEL     '0'           Y0CX01
     C                   IF        #1CQSX = 'C'
     C                   IF        #1PPTX = ' '
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   IF        Y0CX01 = '1'
     C                   MOVEL     #1PQTX        #1PPTX                         Claim Called in
     C                   ELSE
      * CASE: Claim called in by plant
      *  - c1 AND c2
      *   |- c1    : DTL.Claim Called in by is Plant
      *   |- c2    : DTL.Claim Called in by Desc is Blank
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        #1CQSX = 'P'
     C                   IF        #1PPTX = ' '
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   IF        Y0CX01 = '1'
     C                   MOVEL     @CN(003)      #1PPTX                         Claim Called in
     C                   END                                                    *FI
     C                   END                                                    *FI
      * E3387 JJH 09/08/14 - Add ACR Shipping Method
     C                   EVAL      #DDGU1 = ' '                                 ACR Shipping Me
      * ACR Shipping Method DRV
      * PAR.ACR Shipping Method DRV = Condition name of PAR.ACR Shipping
     C                   CALL      'CARVC2R'                            90      *
     C                   PARM                    W0RTN
     C                   PARM      1252129       Y2LSNO                         List number
     C                   PARM      #1UASX        W0INVL                         ACR Shipping Me
     C                   PARM      ' '           W0VLMP                         Value mapped
     C     #DDGU1        PARM                    W0CNNM                         ACR Shipping Me
      *
     C                   END
      * USER: Validate detail screen relations
      * T10560 DN 05/18/17-Update FPR ID.
     C                   IF        YPMTFD = ' '
     C                   Z-ADD     #DAHNZ        #1EQVL                         FPR ID
     C                   END
      * Set screen conditioning indicators
     C                   EXSR      GBDSAD
      * Claim Called in by Date required
     C                   IF        #1MMDT = *ZERO AND
     C                             YPMTFD = ' '
     C                   SETON                                        9936      *
      * Send message '*Value required'
     C                   MOVEL     'Y2U0001'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END                                                    FI
      * Actual Delivery Date required
     C                   IF        #1EJDT = *ZERO AND
     C                             YPMTFD = ' '
     C                   SETON                                        9938      *
      * Send message '*Value required'
     C                   MOVEL     'Y2U0001'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END                                                    FI
      * Salesperson to Rvw Claim required
     C                   IF        #1ZLCD = ' ' AND
     C                             YPMTFD = ' '
     C                   SETON                                        9939      *
      * Send message '*Value required'
     C                   MOVEL     'Y2U0001'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END                                                    FI
      * Product Inspection Avail required
     C                   IF        #1CNSX = ' ' AND
     C                             YPMTFD = ' '
     C                   SETON                                        9940      *
      * Send message '*Value required'
     C                   MOVEL     'Y2U0001'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END                                                    FI
      * Rep Inspection Required required
     C                   IF        #1COSX = ' ' AND
     C                             YPMTFD = ' '
     C                   SETON                                        9942      *
      * Send message '*Value required'
     C                   MOVEL     'Y2U0001'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END                                                    FI
      * AC Full Return to Plant required
     C                   IF        #1UBSX = ' ' AND
     C                             YPMTFD = ' '
     C                   SETON                                        9944      *
      * Send message '*Value required'
     C                   MOVEL     'Y2U0001'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END                                                    FI
      *================================================================
     CSR   DCEXIT        ENDSR
      /EJECT
     CSR   EBPR##        BEGSR
      *================================================================
      * Process record:
      *================================================================
      * Process add request
     C     W0PMD         CASEQ     'ADD'         ECADRQ
      * Process update request
     C     W0PMD         CASNE     'ADD'         EECHRQ
     C                   END
      * USER: Process command keys
      * F8=NEXT
      * CASE: DTL.*CMD key is SUBMIT/NEXT
     C                   IF        W0RTN = ' '
      * E3387 JJH 09/10/14 - Update Shipping Method in A/R Claim
      * CHG Shipping Method   CH - AR Claim Header  * 
     C                   IF        *IN08
     C                   EXSR      SJCHRC
      * CASE: PAR.Clm Program USR is Create Resale Only
     C                   IF        P4T6SX = 'CRO'
     C                   MOVEL     'WWR'         P4T6SX                         Clm Program USR
     C                   ELSE
      * CASE: PAR.Clm Program USR is Create Claim
     C                   IF        P4T6SX = 'CCL'
     C                   MOVEL     'GOP'         P4T6SX                         Clm Program USR
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     'ECP'         P4T6SX                         Clm Program USR
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   MOVEL     W0RTN         P0RTN                          *Return code
     C                   EXSR      ZYEXPG
     C                   ELSE
      * CASE: DTL.*CMD key is BACK
     C                   IF        *IN07
     C                   MOVEL     'EXT'         P4T6SX                         Clm Program USR
     C                   MOVEL     W0RTN         P0RTN                          *Return code
     C                   EXSR      ZYEXPG
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Exit after successful add
     C                   IF        W0PMD = 'ADD'
     C                   MOVEL     'N'           W0RPT
     C                   END
      * Restart program for next record
     C                   MOVEL     'N'           W0TRN
     C                   END
      *================================================================
     CSR   EBEXIT        ENDSR
      /EJECT
     CSR   ECADRQ        BEGSR
      *================================================================
      * Process add request
      *================================================================
      * USER: Create DBF record
      * CRT A/R Claim         IF
      * RTV Next A/R Claim #   RT - A/R Claim  * 
     C                   EXSR      SKRVGN
      * CRT A/R Claim          CR - AR Claim Header  * 
     C                   EXSR      SLCRRC
     C                   Z-ADD     90000000      WUBRNY                         Claim Reference
     C     WUBRNY        ADD       P1C0C7        #DBRNY                         Claim Reference
      * Send message '*Record added'
     C                   IF        W0RTN = ' '
     C                   MOVEL     'Y2U0011'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END
      *================================================================
     CSR   ECEXIT        ENDSR
      /EJECT
     CSR   EECHRQ        BEGSR
      *================================================================
      * Process update request
      *================================================================
      * USER: Change DBF record
      * CHG A/R Claim          CH - AR Claim Header  * 
     C                   EXSR      SMCHRC
      * Data update error
      * Reset screen fields if changed record
     C                   IF        W0RTN <> ' '
     C     W0RTN         CASEQ     'Y2U0007'     MBFL#1
     C                   END
     C                   ELSE
      * Send message '*Record changed'
     C                   IF        YBRDC = 'Y'
     C                   MOVEL     'Y2U0012'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END
     C                   END
      *================================================================
     CSR   EEEXIT        ENDSR
      /EJECT
     CSR   FACKPM        BEGSR
      *================================================================
      * Check passed parameters
      *================================================================
      * Is full key present?
      * Not every key field passed - loop program
     C                   IF        P1C0C7 = *ZERO
     C                   MOVEL     'Y'           W0RPT
     C                   ELSE
      * Full key passed, so single shot program
     C                   MOVEL     'N'           W0RPT
     C                   END
      *================================================================
     CSR   FAEXIT        ENDSR
      /EJECT
     CSR   GADSAK        BEGSR
      *================================================================
      * Set key screen conditioning indicators
      *================================================================
     C     W0PMD         COMP      'ADD'                                  89    *
      *================================================================
     CSR   GAEXIT        ENDSR
      /EJECT
     CSR   GBDSAD        BEGSR
      *================================================================
      * Set detail screen conditioning indicators
      *================================================================
     C     W0PMD         COMP      'ADD'                                  89    *
      * Protect key fields on detail screen
     C                   SETON                                        88        *
     C                   MOVEL     '0'           *IN79
     C                   IF        #1C0C7 = 1000
     C                   MOVEL     '1'           *IN79
     C                   END                                                    *FI
     C                   MOVEL     '0'           *IN78
     C                   IF        P3I6ST = 'N'
     C                   MOVEL     '1'           *IN78
     C                   END                                                    *FI
      * Enable key screen
     C                   SETON                                        87        *
      *================================================================
     CSR   GBEXIT        ENDSR
      /EJECT
     CSR   MAIZ#1        BEGSR
      *================================================================
      * Initialise record - except for key fields and "neither" paramete
      *================================================================
     C                   Z-ADD     *ZERO         #DBRNY                         Claim Reference
     C                   EVAL      #DPFTX = ' '                                 Text 1 Length U
     C                   Z-ADD     *ZERO         #1EQVL                         FPR ID
     C                   EVAL      #1CJSX = ' '                                 Claim Status
     C                   Z-ADD     *ZERO         #1A0VL                         Claim Approved
     C                   EVAL      #1CPSX = ' '                                 Lab Fee Involve
     C                   EVAL      #1CHSX = ' '                                 Claim Type
     C                   Z-ADD     *ZERO         #1A1VL                         Lab Fee
     C                   EVAL      #1PNTX = ' '                                 Driver Name
     C                   EVAL      #1POTX = ' '                                 Lab Name
     C                   Z-ADD     *ZERO         #1MNDT                         Claim Entry Dat
     C                   Z-ADD     *ZERO         #1BGTM                         Claim Entry Tim
     C                   EVAL      #1CGVN = ' '                                 Claim Entry Use
     C                   Z-ADD     *ZERO         #1C4C7                         Resale Ship to
     C                   EVAL      #1O2NA = ' '                                 Resale Purchase
     C                   Z-ADD     *ZERO         #1NFDT                         Sales Approved
     C                   Z-ADD     *ZERO         #1BJTM                         Sales Approved
     C                   EVAL      #1CQVN = ' '                                 Sales Approved
     C                   Z-ADD     *ZERO         #1MODT                         Approved_Denied
     C                   Z-ADD     *ZERO         #1BHTM                         Approved_Denied
     C                   EVAL      #1CHVN = ' '                                 Approved_Denied
     C                   EVAL      #1CRSX = ' '                                 Memo Created
     C                   Z-ADD     *ZERO         #1MPDT                         Memo Created Da
     C                   Z-ADD     *ZERO         #1BITM                         Memo Created Ti
     C                   EVAL      #1CIVN = ' '                                 Memo Created Us
     C                   EVAL      #1TBTX = ' '                                 Claim Resolutio
     C                   Z-ADD     *ZERO         #1EOVL                         Approved Net Lo
     C                   Z-ADD     *ZERO         #1EPVL                         Total Expense A
     C                   Z-ADD     *ZERO         #1P6DT                         Memo Post Date
     C                   Z-ADD     *ZERO         #1CRTM                         Memo Post Time
     C                   Z-ADD     *ZERO         #1YSNX                         TFS Batch Numbe
     C                   EVAL      #1T5SX = ' '                                 TFS Process Sta
     C                   Z-ADD     *ZERO         #1F7PC                         Avg TF Responsi
     C                   Z-ADD     *ZERO         #1F8PC                         Avg SBF Respons
     C                   Z-ADD     *ZERO         #1F9PC                         STF Responsibil
     C                   Z-ADD     *ZERO         #1ERVL                         AC Unused Value
     C                   Z-ADD     *ZERO         #1ESVL                         AC Unused Value
     C                   Z-ADD     *ZERO         #1ETVL                         AC Unused Value
     C                   EVAL      #1T7SX = ' '                                 Claim Prod Affe
     C                   EVAL      #DGYT1 = ' '                                 On Doc Descript
     C                   EVAL      #1T8SX = ' '                                 ARC Unused Stat
     C                   EVAL      #DGZT1 = ' '                                 Description 21a
     C                   EVAL      #1T9SX = ' '                                 ARC Unused Stat
     C                   EVAL      #DG1T1 = ' '                                 Description 21a
     C                   Z-ADD     *ZERO         #1GAPC                         AC Unused Pct 1
     C                   Z-ADD     *ZERO         #1GBPC                         AC Unused Pct 2
     C                   EVAL      #1VSST = ' '                                 Record Status
     C                   Z-ADD     *ZERO         #1MJDT                         Create Date
     C                   Z-ADD     *ZERO         #1BETM                         Create Time
     C                   EVAL      #1CCVN = ' '                                 Create User
     C                   EVAL      #1CDVN = ' '                                 Create Program
     C                   Z-ADD     *ZERO         #1MKDT                         Change Date
     C                   Z-ADD     *ZERO         #1BFTM                         Change Time
     C                   EVAL      #1CEVN = ' '                                 Change User
     C                   EVAL      #1CFVN = ' '                                 Change Program
     C                   EVAL      #1TXAA = ' '                                 Sales Channel C
     C                   EVAL      #1C8AB = ' '                                 CCM Disposition
     C                   EVAL      #1EJAB = ' '                                 Claim Location
     C                   EVAL      #1DMAB = ' '                                 Carrier SCAC
     C                   EVAL      #1WUU1 = ' '                                 Salesperson Com
     C                   EVAL      #1XPU1 = ' '                                 Disposition Not
     C                   EVAL      #1FAVN = ' '                                 Created By
     C                   MOVEL     XDTSDL        #1BVTS                         Created Dt Tm
     C                   EVAL      #1WAU1 = ' '                                 Created Program
     C                   EVAL      #1FBVN = ' '                                 Updated By
     C                   MOVEL     XDTSDL        #1BWTS                         Updated Dt Tm
     C                   EVAL      #1WBU1 = ' '                                 Updated Program
     C                   EVAL      #DRQTX = ' '                                 Claim Status De
     C                   Z-ADD     P1BIC3        #1BIC3                         Claim Company N
      * Clear external version also
     C                   EVAL      V1BIC3 = ' '
     C                   Z-ADD     *ZERO         #1AYVL                         Claim Amount
     C                   EVAL      #DQ0TX = ' '                                 @text 30
     C                   Z-ADD     *ZERO         #DCONB                         Invoice Number
     C                   Z-ADD     *ZERO         #1AZVL                         Claim Net Loss
     C                   Z-ADD     P1ALNX        #1ALNX                         Claim Order Num
      * Clear external version also
     C                   EVAL      V1ALNX = ' '
     C                   Z-ADD     P1RMNB        #1RMNB                         Load ID
     C                   Z-ADD     P1C3C7        #1C3C7                         Claim Ship to C
      * Clear external version also
     C                   EVAL      V1C3C7 = ' '
     C                   MOVEL     P1RFTX        #1RFTX                         Claim Customer
     C                   EVAL      #DBCNA = ' '                                 Customer Purcha
     C                   Z-ADD     *ZERO         #DAHNZ                         FPR ID USR
     C                   EVAL      #1CQSX = ' '                                 Claim Called in
     C                   EVAL      #1PPTX = ' '                                 Claim Called in
     C                   Z-ADD     *ZERO         #1MMDT                         Claim Called in
      * Clear external version also
     C                   Z-ADD     *ZERO         V1MMDT
     C                   EVAL      #1PQTX = ' '                                 Claim Contact N
     C                   Z-ADD     *ZERO         #1EJDT                         Actual Delivery
      * Clear external version also
     C                   Z-ADD     *ZERO         V1EJDT
     C                   EVAL      #1ZLCD = ' '                                 Salesperson to
     C                   EVAL      #DP9NA = ' '                                 Description USR
     C                   Z-ADD     *ZERO         #1MLDT                         Resolve Claim b
      * Clear external version also
     C                   Z-ADD     *ZERO         V1MLDT
     C                   EVAL      #1CNSX = ' '                                 Product Inspect
     C                   EVAL      #1PLTX = ' '                                 Product Inspect
     C                   EVAL      #1COSX = ' '                                 Rep Inspection
     C                   EVAL      #1PMTX = ' '                                 Rep Inspection
     C                   EVAL      #1UBSX = ' '                                 AC Full Return
     C                   MOVEL     P1UASX        #1UASX                         AC Shipping Met
     C                   EVAL      #DDGU1 = ' '                                 ACR Shipping Me
      *================================================================
     CSR   MAEXIT        ENDSR
      /EJECT
     CSR   MBFL#1        BEGSR
      *================================================================
      * Move @MKCPWB fields to screen
      *================================================================
     C                   Z-ADD     MKEQVL        #1EQVL                         FPR ID
     C                   MOVEL     MKCJSX        #1CJSX                         Claim Status
     C                   Z-ADD     MKA0VL        #1A0VL                         Claim Approved
     C                   MOVEL     MKCPSX        #1CPSX                         Lab Fee Involve
     C                   MOVEL     MKCHSX        #1CHSX                         Claim Type
     C                   Z-ADD     MKA1VL        #1A1VL                         Lab Fee
     C                   MOVEL     MKPNTX        #1PNTX                         Driver Name
     C                   MOVEL     MKPOTX        #1POTX                         Lab Name
     C                   Z-ADD     MKMNDT        #1MNDT                         Claim Entry Dat
     C                   Z-ADD     MKBGTM        #1BGTM                         Claim Entry Tim
     C                   MOVEL     MKCGVN        #1CGVN                         Claim Entry Use
     C                   Z-ADD     MKC4C7        #1C4C7                         Resale Ship to
     C                   MOVEL     MKO2NA        #1O2NA                         Resale Purchase
     C                   Z-ADD     MKNFDT        #1NFDT                         Sales Approved
     C                   Z-ADD     MKBJTM        #1BJTM                         Sales Approved
     C                   MOVEL     MKCQVN        #1CQVN                         Sales Approved
     C                   Z-ADD     MKMODT        #1MODT                         Approved_Denied
     C                   Z-ADD     MKBHTM        #1BHTM                         Approved_Denied
     C                   MOVEL     MKCHVN        #1CHVN                         Approved_Denied
     C                   MOVEL     MKCRSX        #1CRSX                         Memo Created
     C                   Z-ADD     MKMPDT        #1MPDT                         Memo Created Da
     C                   Z-ADD     MKBITM        #1BITM                         Memo Created Ti
     C                   MOVEL     MKCIVN        #1CIVN                         Memo Created Us
     C                   MOVEL     MKTBTX        #1TBTX                         Claim Resolutio
     C                   Z-ADD     MKEOVL        #1EOVL                         Approved Net Lo
     C                   Z-ADD     MKEPVL        #1EPVL                         Total Expense A
     C                   Z-ADD     MKP6DT        #1P6DT                         Memo Post Date
     C                   Z-ADD     MKCRTM        #1CRTM                         Memo Post Time
     C                   Z-ADD     MKYSNX        #1YSNX                         TFS Batch Numbe
     C                   MOVEL     MKT5SX        #1T5SX                         TFS Process Sta
     C                   Z-ADD     MKF7PC        #1F7PC                         Avg TF Responsi
     C                   Z-ADD     MKF8PC        #1F8PC                         Avg SBF Respons
     C                   Z-ADD     MKF9PC        #1F9PC                         STF Responsibil
     C                   Z-ADD     MKERVL        #1ERVL                         AC Unused Value
     C                   Z-ADD     MKESVL        #1ESVL                         AC Unused Value
     C                   Z-ADD     MKETVL        #1ETVL                         AC Unused Value
     C                   MOVEL     MKT7SX        #1T7SX                         Claim Prod Affe
     C                   MOVEL     MKT8SX        #1T8SX                         ARC Unused Stat
     C                   MOVEL     MKT9SX        #1T9SX                         ARC Unused Stat
     C                   Z-ADD     MKGAPC        #1GAPC                         AC Unused Pct 1
     C                   Z-ADD     MKGBPC        #1GBPC                         AC Unused Pct 2
     C                   MOVEL     MKVSST        #1VSST                         Record Status
     C                   Z-ADD     MKMJDT        #1MJDT                         Create Date
     C                   Z-ADD     MKBETM        #1BETM                         Create Time
     C                   MOVEL     MKCCVN        #1CCVN                         Create User
     C                   MOVEL     MKCDVN        #1CDVN                         Create Program
     C                   Z-ADD     MKMKDT        #1MKDT                         Change Date
     C                   Z-ADD     MKBFTM        #1BFTM                         Change Time
     C                   MOVEL     MKCEVN        #1CEVN                         Change User
     C                   MOVEL     MKCFVN        #1CFVN                         Change Program
     C                   MOVEL     MKTXAA        #1TXAA                         Sales Channel C
     C                   MOVEL     MKC8AB        #1C8AB                         CCM Disposition
     C                   MOVEL     MKEJAB        #1EJAB                         Claim Location
     C                   MOVEL     MKDMAB        #1DMAB                         Carrier SCAC
     C                   MOVEL     MKWUU1        #1WUU1                         Salesperson Com
     C                   MOVEL     MKXPU1        #1XPU1                         Disposition Not
     C                   MOVEL     MKFAVN        #1FAVN                         Created By
     C                   MOVEL     MKBVTS        #1BVTS                         Created Dt Tm
     C                   MOVEL     MKWAU1        #1WAU1                         Created Program
     C                   MOVEL     MKFBVN        #1FBVN                         Updated By
     C                   MOVEL     MKBWTS        #1BWTS                         Updated Dt Tm
     C                   MOVEL     MKWBU1        #1WBU1                         Updated Program
     C                   Z-ADD     MKC0C7        #1C0C7                         Claim Number
     C                   Z-ADD     MKBIC3        #1BIC3                         Claim Company N
     C                   Z-ADD     MKAYVL        #1AYVL                         Claim Amount
     C                   Z-ADD     MKAZVL        #1AZVL                         Claim Net Loss
     C                   Z-ADD     MKALNX        #1ALNX                         Claim Order Num
     C                   Z-ADD     MKRMNB        #1RMNB                         Load ID
     C                   Z-ADD     MKC3C7        #1C3C7                         Claim Ship to C
     C                   MOVEL     MKRFTX        #1RFTX                         Claim Customer
     C                   MOVEL     MKCQSX        #1CQSX                         Claim Called in
     C                   MOVEL     MKPPTX        #1PPTX                         Claim Called in
     C                   Z-ADD     MKMMDT        #1MMDT                         Claim Called in
     C                   MOVEL     MKPQTX        #1PQTX                         Claim Contact N
     C                   Z-ADD     MKEJDT        #1EJDT                         Actual Delivery
     C                   MOVEL     MKZLCD        #1ZLCD                         Salesperson to
     C                   Z-ADD     MKMLDT        #1MLDT                         Resolve Claim b
     C                   MOVEL     MKCNSX        #1CNSX                         Product Inspect
     C                   MOVEL     MKPLTX        #1PLTX                         Product Inspect
     C                   MOVEL     MKCOSX        #1COSX                         Rep Inspection
     C                   MOVEL     MKPMTX        #1PMTX                         Rep Inspection
     C                   MOVEL     MKUBSX        #1UBSX                         AC Full Return
     C                   MOVEL     MKUASX        #1UASX                         AC Shipping Met
      * Hold existing record image
     C                   MOVEL     @1DBRC        #1DBRC
      *================================================================
     CSR   MBEXIT        ENDSR
      /EJECT
     CSR   MDIZ#K        BEGSR
      *================================================================
      * Initialize key screen
      *================================================================
     C                   Z-ADD     P1C0C7        #1C0C7                         Claim Number
      * Clear external version also
     C                   EVAL      V1C0C7 = ' '
      * USER: Initialize key screen
      * CASE: PAR.Claim Number is Zero
     C                   IF        P1C0C7 = 0
     C                   Z-ADD     1000          #1C0C7                         Claim Number
     C                   END                                                    *FI
      *================================================================
     CSR   MDEXIT        ENDSR
      /EJECT
     CSR   MFIZ#2        BEGSR
      *================================================================
      * Initialise derived fields
      *================================================================
     C                   EVAL      #DDGU1 = ' '                                 ACR Shipping Me
      *================================================================
     CSR   MFEXIT        ENDSR
      /EJECT
     CSR   MNCV#K        BEGSR
      *================================================================
      * Convert fields into external form
      *================================================================
      * Convert Claim Number to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C                   IF        #1C0C7 <> 0
     C                   EVAL      WUEOCD = ' '                                 CD7 Ext Numeric
     C                   MOVEL     #1C0C7        WUEOCD                         CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                   MOVEA     WUEOCD        #L7                            EDIT ARRAY
     C                   Z-ADD     1             #E                3 0
     C                   MOVE      *IN61         UUIN61            1
     C                   SETOFF                                       61
     C                   DO        7
     C     #L7(#E)       IFEQ      '0'                                          ZERO VALUE
     C     *IN61         IFEQ      '0'
     C                   MOVE      ' '           #L7(#E)
     C                   ADD       1             #E
     C                   END
     C                   ELSE
     C                   SETON                                        61
     C                   END
     C                   END
     C                   MOVEA     #L7           WUEOCD
     C                   MOVE      UUIN61        *IN61
     C                   MOVEL     WUEOCD        V1C0C7                         CD7 Ext Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      V1C0C7 = ' '                                 CD7 Ext Numeric
     C                   END                                                    *FI
      *================================================================
     CSR   MNEXIT        ENDSR
      /EJECT
     CSR   MOCV#D        BEGSR
      *================================================================
      * Convert fields into external form
      *================================================================
      * Convert Claim Number to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C                   IF        #1C0C7 <> 0
     C                   EVAL      WUEOCD = ' '                                 CD7 Ext Numeric
     C                   MOVEL     #1C0C7        WUEOCD                         CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                   MOVEA     WUEOCD        #L7                            EDIT ARRAY
     C                   Z-ADD     1             #E                3 0
     C                   MOVE      *IN61         UUIN61            1
     C                   SETOFF                                       61
     C                   DO        7
     C     #L7(#E)       IFEQ      '0'                                          ZERO VALUE
     C     *IN61         IFEQ      '0'
     C                   MOVE      ' '           #L7(#E)
     C                   ADD       1             #E
     C                   END
     C                   ELSE
     C                   SETON                                        61
     C                   END
     C                   END
     C                   MOVEA     #L7           WUEOCD
     C                   MOVE      UUIN61        *IN61
     C                   MOVEL     WUEOCD        V1C0C7                         CD7 Ext Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      V1C0C7 = ' '                                 CD7 Ext Numeric
     C                   END                                                    *FI
      * Convert Claim Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C                   IF        #1BIC3 <> 0
     C                   EVAL      WUDMCD = ' '                                 CD3 Ext Numeric
     C                   MOVEL     #1BIC3        WUDMCD                         CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                   MOVEA     WUDMCD        #L3                            EDIT ARRAY
     C                   Z-ADD     1             #E                3 0
     C                   MOVE      *IN61         UUIN61            1
     C                   SETOFF                                       61
     C                   DO        3
     C     #L3(#E)       IFEQ      '0'                                          ZERO VALUE
     C     *IN61         IFEQ      '0'
     C                   MOVE      ' '           #L3(#E)
     C                   ADD       1             #E
     C                   END
     C                   ELSE
     C                   SETON                                        61
     C                   END
     C                   END
     C                   MOVEA     #L3           WUDMCD
     C                   MOVE      UUIN61        *IN61
     C                   MOVEL     WUDMCD        V1BIC3                         CD3 Ext Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      V1BIC3 = ' '                                 CD3 Ext Numeric
     C                   END                                                    *FI
      * Convert Claim Order Number to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C                   IF        #1ALNX <> 0
     C                   EVAL      WUEOCD = ' '                                 CD7 Ext Numeric
     C                   MOVEL     #1ALNX        WUEOCD                         CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                   MOVEA     WUEOCD        #L7                            EDIT ARRAY
     C                   Z-ADD     1             #E                3 0
     C                   MOVE      *IN61         UUIN61            1
     C                   SETOFF                                       61
     C                   DO        7
     C     #L7(#E)       IFEQ      '0'                                          ZERO VALUE
     C     *IN61         IFEQ      '0'
     C                   MOVE      ' '           #L7(#E)
     C                   ADD       1             #E
     C                   END
     C                   ELSE
     C                   SETON                                        61
     C                   END
     C                   END
     C                   MOVEA     #L7           WUEOCD
     C                   MOVE      UUIN61        *IN61
     C                   MOVEL     WUEOCD        V1ALNX                         CD7 Ext Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      V1ALNX = ' '                                 CD7 Ext Numeric
     C                   END                                                    *FI
      * Convert Claim Ship to Customer to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C                   IF        #1C3C7 <> 0
     C                   EVAL      WUEOCD = ' '                                 CD7 Ext Numeric
     C                   MOVEL     #1C3C7        WUEOCD                         CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                   MOVEA     WUEOCD        #L7                            EDIT ARRAY
     C                   Z-ADD     1             #E                3 0
     C                   MOVE      *IN61         UUIN61            1
     C                   SETOFF                                       61
     C                   DO        7
     C     #L7(#E)       IFEQ      '0'                                          ZERO VALUE
     C     *IN61         IFEQ      '0'
     C                   MOVE      ' '           #L7(#E)
     C                   ADD       1             #E
     C                   END
     C                   ELSE
     C                   SETON                                        61
     C                   END
     C                   END
     C                   MOVEA     #L7           WUEOCD
     C                   MOVE      UUIN61        *IN61
     C                   MOVEL     WUEOCD        V1C3C7                         CD7 Ext Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      V1C3C7 = ' '                                 CD7 Ext Numeric
     C                   END                                                    *FI
      * Convert Claim Called in by Date to display format
      * Convert date
     C     1000000       ADD       #1MMDT        XDINDT
     C                   EXSR      XDVC2T
     C                   Z-ADD     XDEXDT        V1MMDT
      * Convert Actual Delivery Date to display format
      * Convert date
     C     1000000       ADD       #1EJDT        XDINDT
     C                   EXSR      XDVC2T
     C                   Z-ADD     XDEXDT        V1EJDT
      * Convert Resolve Claim by Date to display format
      * Convert date
     C     1000000       ADD       #1MLDT        XDINDT
     C                   EXSR      XDVC2T
     C                   Z-ADD     XDEXDT        V1MLDT
      *================================================================
     CSR   MOEXIT        ENDSR
      /EJECT
     CSR   SARVGN        BEGSR
      *================================================================
      * RTV Claim Order Info   RT - Sales History  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSA         KLIST
     C                   KFLD                    WQSA01                         Company Number
     C                   KFLD                    WQSA02                         Order Number
      * Setup key
     C                   Z-ADD     WL0001        WQSA01                         Company Number
     C                   Z-ADD     WL0002        WQSA02                         Order Number
      * Establish starting position
     C     KRSSA         SETLL     @FHSTD3                                      *
     C     KRSSA         READE     @FHSTD3                                90    *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR1241'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   Z-ADD     *ZERO         WL0003                         Ship To Custome
     C                   EVAL      WL0004 = ' '                                 Ship To Name
     C                   EVAL      WL0005 = ' '                                 Customer Purcha
     C                   EVAL      WL0006 = ' '                                 Carrier Code
     C                   EVAL      WL0007 = ' '                                 Warehouse Code
     C                   Z-ADD     *ZERO         WL0008                         Invoice Date
     C                   Z-ADD     *ZERO         WL0009                         Invoice Number
     C                   EVAL      WL0010 = ' '                                 Invoice Suffix
     C                   Z-ADD     *ZERO         WL0011                         Actual Shipped
     C                   Z-ADD     *ZERO         WL0012                         Load ID
     C                   EVAL      WL0013 = ' '                                 Salesperson to
     C                   GOTO      SAEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   DOW       NOT *IN90
     C                   Z-ADD     F4BKC7        WL0003                         Ship To Custome
     C                   MOVEL     F4BRTX        WL0004                         Ship To Name
     C                   MOVEL     F4BCNA        WL0005                         Customer Purcha
     C                   MOVEL     F4BZNA        WL0006                         Carrier Code
     C                   MOVEL     F4AJCD        WL0007                         Warehouse Code
     C                   Z-ADD     F4AWDT        WL0008                         Invoice Date
     C                   Z-ADD     F4CONB        WL0009                         Invoice Number
     C                   MOVEL     F4CEST        WL0010                         Invoice Suffix
     C                   Z-ADD     F4GNDT        WL0011                         Actual Shipped
     C                   Z-ADD     F4RMNB        WL0012                         Load ID
      * RTV Salesman Code      RT - Sales Route  * 
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  F4R4CD        WL0014                         Sales Route Cod
     C                   EXSR      SBRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0015        WL0013                         Salesperson Cod
     C                   GOTO      SAEXIT                                       *QUIT
     C     KRSSA         READE     @FHSTD3                                90    *
     C                   ENDDO
      *================================================================
     CSR   SAEXIT        ENDSR
      /EJECT
     CSR   SBRVGN        BEGSR
      *================================================================
      * RTV Salesman Code      RT - Sales Route  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSB         KLIST
     C                   KFLD                    JER4CD                         Sales Route Cod
      * Setup key
     C                   MOVEL     WL0014        JER4CD                         Sales Route Cod
      * Establish starting position
     C     KRSSB         CHAIN     @JEREWS                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR1800'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   EVAL      WL0015 = ' '                                 Salesperson Cod
     C                   GOTO      SBEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     JEBCCD        WL0015                         Salesperson Cod
     C                   ENDIF
      *================================================================
     CSR   SBEXIT        ENDSR
      /EJECT
     CSR   SCRVGN        BEGSR
      *================================================================
      * RTV Claim Order Info   RT - Order Header TRG  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSC         KLIST
     C                   KFLD                    BEAIC3                         Company Number
     C                   KFLD                    BEC4NB                         Order Number
      * Setup key
     C                   Z-ADD     WL0016        BEAIC3                         Company Number
     C                   Z-ADD     WL0017        BEC4NB                         Order Number
      * Establish starting position
     C     KRSSC         CHAIN     @BECPFK                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0176'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   Z-ADD     *ZERO         WL0018                         Ship To Custome
     C                   EVAL      WL0019 = ' '                                 Ship To Name
     C                   EVAL      WL0020 = ' '                                 Customer Purcha
     C                   Z-ADD     *ZERO         WL0021                         Actual Shipped
     C                   EVAL      WL0022 = ' '                                 Carrier Code
     C                   Z-ADD     *ZERO         WL0023                         Load ID
     C                   Z-ADD     *ZERO         WL0024                         Invoice Number
     C                   EVAL      WL0025 = ' '                                 Invoice Suffix
     C                   Z-ADD     *ZERO         WL0026                         Invoice Date
     C                   EVAL      WL0027 = ' '                                 Salesperson to
     C                   EVAL      WL0028 = ' '                                 Warehouse Code
     C                   GOTO      SCEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   Z-ADD     BEBKC7        WL0018                         Ship To Custome
     C                   MOVEL     BEBRTX        WL0019                         Ship To Name
     C                   MOVEL     BEBCNA        WL0020                         Customer Purcha
     C                   Z-ADD     BEGNDT        WL0021                         Actual Shipped
     C                   MOVEL     BEBZNA        WL0022                         Carrier Code
     C                   Z-ADD     BERMNB        WL0023                         Load ID
     C                   Z-ADD     BECONB        WL0024                         Invoice Number
     C                   MOVEL     BECEST        WL0025                         Invoice Suffix
     C                   Z-ADD     BEAWDT        WL0026                         Invoice Date
      * RTV Whse/Non Cancelled RT - Order Detail  * 
     C                   EXSR      SDRVGN
      * RTV Salesman Code      RT - PD Sales Route  * 
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  BER4CD        WL0014                         Sales Route Cod
     C                   EXSR      SBRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0015        WL0027                         Salesperson Cod
     C                   ENDIF
      *================================================================
     CSR   SCEXIT        ENDSR
      /EJECT
     CSR   SDRVGN        BEGSR
      *================================================================
      * RTV Whse/Non Cancelled RT - Order Detail  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Declare restrictor key work fields
      * Define keylist
     C     KPSSD         KLIST
     C                   KFLD                    WQSD01                         Company Number
     C                   KFLD                    WQSD02                         Order Number
     C                   KFLD                    OMDPNB                         Order Sequence
     C                   KFLD                    OMUENB                         Order Secondary
      * Define keylist
     C     KRSSD         KLIST
     C                   KFLD                    WQSD01                         Company Number
     C                   KFLD                    WQSD02                         Order Number
      * Setup key
     C                   Z-ADD     BEAIC3        WQSD01                         Company Number
     C                   Z-ADD     BEC4NB        WQSD02                         Order Number
     C                   Z-ADD     *ZERO         OMDPNB                         Order Sequence
     C                   Z-ADD     *ZERO         OMUENB                         Order Secondary
      * Establish starting position
     C     KPSSD         SETLL     @BGWKL1                                      *
     C     KRSSD         READE     @BGWKL1                                90    *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR1309'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   EVAL      WL0028 = ' '                                 Warehouse Code
     C                   GOTO      SDEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * C2748:  Changed RTV Warehouse Code RT to exclude Cancelled lines.
      * CASE: DB1.Detail Line Status is Cancelled
     C                   DOW       NOT *IN90
     C                   IF        OMGMST = 'X'
     C                   ELSE
      * CASE: *OTHERWISE
      * PAR = DB1 By name
     C                   MOVEL     OMAJCD        WL0028                         Warehouse Code
     C                   GOTO      SDEXIT                                       *QUIT
     C                   END                                                    *FI
     C     KRSSD         READE     @BGWKL1                                90    *
     C                   ENDDO
      *================================================================
     CSR   SDEXIT        ENDSR
      /EJECT
     CSR   SERVGN        BEGSR
      *================================================================
      * Rtv Shipping Method   RT - Order Header TRG  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSE         KLIST
     C                   KFLD                    BEAIC3                         Company Number
     C                   KFLD                    BEC4NB                         Order Number
      * Setup key
     C                   Z-ADD     WL0029        BEAIC3                         Company Number
     C                   Z-ADD     WL0030        BEC4NB                         Order Number
      * Establish starting position
     C     KRSSE         CHAIN     @BECPFK                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0176'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   EVAL      WL0031 = ' '                                 Shipping Method
     C                   GOTO      SEEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     BEQ2CD        WL0031                         Shipping Method
     C                   ENDIF
      *================================================================
     CSR   SEEXIT        ENDSR
      /EJECT
     CSR   SFRVGN        BEGSR
      *================================================================
      * RTV Req Dlvry Dt/ValOrRT - Order Header TRG  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSF         KLIST
     C                   KFLD                    BEAIC3                         Company Number
     C                   KFLD                    BEC4NB                         Order Number
      * Setup key
     C                   Z-ADD     WL0032        BEAIC3                         Company Number
     C                   Z-ADD     WL0033        BEC4NB                         Order Number
      * Establish starting position
     C     KRSSF         CHAIN     @BECPFK                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0176'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CND By name
     C                   MOVEL     'Y2U0005'     W0RTN                          *Return code
     C                   GOTO      SFEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   Z-ADD     BEEIDT        WL0034                         Requested Deliv
     C                   Z-ADD     BEAFTM        WL0035                         Requested Deliv
     C                   MOVEL     'Y2U0003'     W0RTN                          *Return code
     C                   ENDIF
      *================================================================
     CSR   SFEXIT        ENDSR
      /EJECT
     CSR   SGRVGN        BEGSR
      *================================================================
      * RTV Salesperson NmeOnlyRT - Salesperson  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSG         KLIST
     C                   KFLD                    APBCCD                         Salesperson Cod
      * Setup key
     C                   MOVEL     WL0036        APBCCD                         Salesperson Cod
      * Establish starting position
     C     KRSSG         CHAIN     @APREBU                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0039'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   EVAL      WL0037 = ' '                                 Salesperson Nam
     C                   MOVEL     'Y2U0005'     W0RTN                          *Return code
     C                   GOTO      SGEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     APALTX        WL0037                         Salesperson Nam
     C                   ENDIF
      *================================================================
     CSR   SGEXIT        ENDSR
      /EJECT
     CSR   SHRVGN        BEGSR
      *================================================================
      * RTV Bill Type, Event   RT - Order Header TRG  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSH         KLIST
     C                   KFLD                    BEAIC3                         Company Number
     C                   KFLD                    BEC4NB                         Order Number
      * Setup key
     C                   Z-ADD     #1BIC3        BEAIC3                         Company Number
     C                   Z-ADD     #1ALNX        BEC4NB                         Order Number
      * Establish starting position
     C     KRSSH         CHAIN     @BECPFK                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0176'     W0RTN
      * USER: Processing if Data record not found
     C                   MOVEL     'Y2U0005'     W0RTN                          *Return code
     C                   GOTO      SHEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     BEOBST        YL0001                         Billing Activit
     C                   ENDIF
      *================================================================
     CSR   SHEXIT        ENDSR
      /EJECT
     CSR   SIRVGN        BEGSR
      *================================================================
      * RTV Requested Dlvry dt RT - Order Header TRG  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSI         KLIST
     C                   KFLD                    BEAIC3                         Company Number
     C                   KFLD                    BEC4NB                         Order Number
      * Setup key
     C                   Z-ADD     WL0038        BEAIC3                         Company Number
     C                   Z-ADD     WL0039        BEC4NB                         Order Number
      * Establish starting position
     C     KRSSI         CHAIN     @BECPFK                            90        *
      * Data record not found
     C   90              MOVEL     'USR0176'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   Z-ADD     BEEIDT        WL0040                         Requested Deliv
     C                   Z-ADD     BEAFTM        WL0041                         Requested Deliv
     C                   ENDIF
      *================================================================
     CSR   SIEXIT        ENDSR
      /EJECT
     CSR   SJCHRC        BEGSR
      *================================================================
      * CHG Shipping Method   CH - AR Claim Header  * 
      *================================================================
      *
     C                   EVAL      WN0001 = ' '                                 Salesperson to
     C                   Z-ADD     *ZERO         WN0002                         Claim Company N
     C                   Z-ADD     *ZERO         WN0003                         Claim Order Num
     C                   Z-ADD     *ZERO         WN0004                         Load ID
     C                   Z-ADD     *ZERO         WN0005                         Claim Ship to C
     C                   EVAL      WN0006 = ' '                                 Claim Customer
     C                   EVAL      WN0007 = ' '                                 Claim Type
     C                   EVAL      WN0008 = ' '                                 Claim Status
     C                   Z-ADD     *ZERO         WN0009                         Claim Amount
     C                   Z-ADD     *ZERO         WN0010                         Claim Net Loss
     C                   Z-ADD     *ZERO         WN0011                         Claim Approved
     C                   EVAL      WN0012 = ' '                                 Claim Contact N
     C                   EVAL      WN0013 = ' '                                 Product Inspect
     C                   EVAL      WN0014 = ' '                                 Product Inspect
     C                   EVAL      WN0015 = ' '                                 Rep Inspection
     C                   EVAL      WN0016 = ' '                                 Rep Inspection
     C                   EVAL      WN0017 = ' '                                 Lab Fee Involve
     C                   Z-ADD     *ZERO         WN0018                         Lab Fee
     C                   EVAL      WN0019 = ' '                                 Driver Name
     C                   EVAL      WN0020 = ' '                                 Lab Name
     C                   Z-ADD     *ZERO         WN0021                         Resolve Claim b
     C                   Z-ADD     *ZERO         WN0022                         Actual Delivery
     C                   EVAL      WN0023 = ' '                                 Claim Called in
     C                   EVAL      WN0024 = ' '                                 Claim Called in
     C                   Z-ADD     *ZERO         WN0025                         Claim Called in
     C                   Z-ADD     *ZERO         WN0026                         Claim Entry Dat
     C                   Z-ADD     *ZERO         WN0027                         Claim Entry Tim
     C                   EVAL      WN0028 = ' '                                 Claim Entry Use
     C                   Z-ADD     *ZERO         WN0029                         Resale Ship to
     C                   EVAL      WN0030 = ' '                                 Resale Purchase
     C                   Z-ADD     *ZERO         WN0031                         Sales Approved
     C                   Z-ADD     *ZERO         WN0032                         Sales Approved
     C                   EVAL      WN0033 = ' '                                 Sales Approved
     C                   Z-ADD     *ZERO         WN0034                         Approved_Denied
     C                   Z-ADD     *ZERO         WN0035                         Approved_Denied
     C                   EVAL      WN0036 = ' '                                 Approved_Denied
     C                   EVAL      WN0037 = ' '                                 Memo Created
     C                   Z-ADD     *ZERO         WN0038                         Memo Created Da
     C                   Z-ADD     *ZERO         WN0039                         Memo Created Ti
     C                   EVAL      WN0040 = ' '                                 Memo Created Us
     C                   EVAL      WN0041 = ' '                                 Claim Resolutio
     C                   Z-ADD     *ZERO         WN0042                         Approved Net Lo
     C                   Z-ADD     *ZERO         WN0043                         Total Expense A
     C                   Z-ADD     *ZERO         WN0044                         Memo Post Date
     C                   Z-ADD     *ZERO         WN0045                         Memo Post Time
     C                   Z-ADD     *ZERO         WN0046                         TFS Batch Numbe
     C                   EVAL      WN0047 = ' '                                 TFS Process Sta
     C                   Z-ADD     *ZERO         WN0048                         Avg TF Responsi
     C                   Z-ADD     *ZERO         WN0049                         Avg SBF Respons
     C                   Z-ADD     *ZERO         WN0050                         STF Responsibil
     C                   Z-ADD     *ZERO         WN0051                         FPR ID
     C                   Z-ADD     *ZERO         WN0052                         AC Unused Value
     C                   Z-ADD     *ZERO         WN0053                         AC Unused Value
     C                   Z-ADD     *ZERO         WN0054                         AC Unused Value
     C                   EVAL      WN0055 = ' '                                 Claim Prod Affe
     C                   EVAL      WN0056 = ' '                                 ARC Unused Stat
     C                   EVAL      WN0057 = ' '                                 ARC Unused Stat
     C                   EVAL      WN0058 = ' '                                 AC Full Return
     C                   Z-ADD     *ZERO         WN0059                         AC Unused Pct 1
     C                   Z-ADD     *ZERO         WN0060                         AC Unused Pct 2
     C                   EVAL      WN0061 = ' '                                 Record Status
     C                   Z-ADD     *ZERO         WN0062                         Create Date
     C                   Z-ADD     *ZERO         WN0063                         Create Time
     C                   EVAL      WN0064 = ' '                                 Create User
     C                   EVAL      WN0065 = ' '                                 Create Program
     C                   Z-ADD     *ZERO         WN0066                         Change Date
     C                   Z-ADD     *ZERO         WN0067                         Change Time
     C                   EVAL      WN0068 = ' '                                 Change User
     C                   EVAL      WN0069 = ' '                                 Change Program
     C                   EVAL      WN0070 = ' '                                 Sales Channel C
     C                   EVAL      WN0071 = ' '                                 CCM Disposition
     C                   EVAL      WN0072 = ' '                                 Claim Location
     C                   EVAL      WN0073 = ' '                                 Carrier SCAC
     C                   EVAL      WN0074 = ' '                                 Salesperson Com
     C                   EVAL      WN0075 = ' '                                 Disposition Not
     C                   EVAL      WN0076 = ' '                                 Created By
     C                   MOVEL     XDTSDL        WN0077                         Created Dt Tm
     C                   EVAL      WN0078 = ' '                                 Created Program
     C                   EVAL      WN0079 = ' '                                 Updated By
     C                   MOVEL     XDTSDL        WN0080                         Updated Dt Tm
     C                   EVAL      WN0081 = ' '                                 Updated Program
      *
     C                   EVAL      W0RTN = ' '
      * Set PGM.*Record Data Changed flag
     C                   EVALR     YARDC = ' '
      *
      * Move key fields to @MKCPWA
     C                   Z-ADD     #1C0C7        MKC0C7                         Claim Number
      *
     C     KLCHSJ        KLIST
     C                   KFLD                    MKC0C7                         Claim Number
     C     KLCHSJ        CHAIN     @MKCPWA                            9091      *
      *
      * Record not found
     C                   IF        *IN90
     C                   MOVEL     'Y2U0009'     W0RTN
     C                   MOVEL     ##PGM         MDPGM
     C                   MOVEL     'PDMKCPL0'    MDACP
     C                   MOVEL     '@MKCPWA'     MDFMT
     C                   MOVEL     '*CHG'        MDACT
      * Record not found label: LBL001.
     C                   MOVEL     'LBL001'      MDLBL
      * Send message '*Record no longer on file'
     C                   MOVEL     'Y2U0009'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     MD0009        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   EVAL      MD0009 = ' '
     C                   GOTO      SJEXIT
     C                   ENDIF
      *
      * Record locked
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
      * Send message '*Database operation error'
     C                   MOVEL     'Y2U0004'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   GOTO      SJEXIT
     C                   ENDIF
      *
      * Store record data for null update check
     C                   MOVE      @1DBRC        YARDCS
      * Move non-key fields to @MKCPWA
     C                   MOVEL(P)  #1UASX        MKUASX                         AC Shipping Met
      *
      * Set PGM.*Record Data Changed flag
     C                   IF        @1DBRC <> YARDCS AND
     C                             YARDC <> 'N'
     C                   MOVE      'Y'           YARDC
     C                   ENDIF
      * USER: Processing before Data update
      * Set Chg Date/Time      IF
     C                   Z-ADD     ##JDT         MKMKDT                         Change Date
     C                   Z-ADD     ##JTM         MKBFTM                         Change Time
     C                   MOVEL     ##USR         MKCEVN                         Change User
     C                   MOVEL     ##PGM         MKCFVN                         Change Program
      * Set PGM.*Record Data Changed flag
     C                   IF        @1DBRC <> YARDCS AND
     C                             YARDC <> 'N'
     C                   MOVE      'Y'           YARDC
     C                   ENDIF
      * If changed update record otherwise release record
     C                   IF        YARDC = 'Y'
     C                   UPDATE    @MKCPWA                              91      *
     C                   ELSE
      * Release record lock
     C                   UNLOCK    PDMKCPL0                             91      *
     C                   ENDIF
      * Change error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
      *
      * DBF change successful
     C                   ENDIF
      *================================================================
     CSR   SJEXIT        ENDSR
      /EJECT
     CSR   SKRVGN        BEGSR
      *================================================================
      * RTV Next A/R Claim #   RT - A/R Claim  * 
      *================================================================
      *
     C                   Z-ADD     *ZERO         WN0082                         Claim Number Sa
     C                   Z-ADD     *ZERO         WN0083                         Claim Number Pr
     C                   Z-ADD     *ZERO         WN0084                         Claim Number Ne
     C                   Z-ADD     *ZERO         WN0085                         Number of Days
     C                   EVAL      WN0086 = ' '                                 Stop
      *
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * *** Initialize all Parameters. ***
     C                   Z-ADD     *ZERO         P1C0C7                         Claim Number
     C                   Z-ADD     *ZERO         WN0082                         Claim Number Sa
     C                   Z-ADD     *ZERO         WN0083                         Claim Number Pr
     C                   Z-ADD     *ZERO         WN0084                         Claim Number Ne
     C                   Z-ADD     *ZERO         WN0085                         Number of Days
     C                   MOVEL     'N'           WN0086                         Stop
      * Establish starting position
     C     *HIVAL        SETLL     @MKCPW7                                      *
     C                   READ      @MKCPW7                                90    *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR2729'     W0RTN
      * USER: Processing if Data record not found
     C                   Z-ADD     8000          P1C0C7                         Claim Number
     C                   GOTO      SKEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * Save Last Claim Number in file.
     C                   DOW       NOT *IN90
     C                   EXSR      UJSUBR                                       Save Last Claim
      * Reset output claim number by adding 1 to last used claim number.
     C                   EXSR      UKSUBR                                       Reset output cl
      * PAR.Number of Days = JOB.*Job date - DB1.Claim Entry Date *DAYS
     C                   MOVEL     '1'           XDSEL
     C                   MOVEL     '1111111'     XDCDW
     C                   EXSR      XDOWS
     C     WAMNDT        ADD       1000000       XDINDT
     C                   EXSR      XCVTA
     C                   Z-ADD     XDAY1         XDAY2
     C     ##JDT         ADD       1000000       XDINDT
     C                   EXSR      XCVTA
     C                   MOVEL     'NONE'        WUDLN
     C                   EXSR      XDUDY
      * Negative duration, when date1<date2
     C                   IF        XDAY1 >= XDAY2
     C                   Z-ADD     XDURR         WN0085
     C                   ELSE
     C     XDURR         MULT      -1            WN0085
     C                   END
      * CASE: PAR.Number of Days is > 14
      * Stop the search.
     C                   IF        WN0085 > 14
     C                   EXSR      ULSUBR                                       Stop the search
     C                   ELSE
      * CASE: *OTHERWISE
      * Look for missing claim numbers.
     C                   EXSR      UMSUBR                                       Look for missin
     C                   END                                                    *FI
      * Stop RTVOBJ if Stop Flag is set to Yes.
      * CASE: PAR.Stop is Yes
     C                   IF        WN0086 = 'Y'
     C                   GOTO      SKEXIT                                       *QUIT
     C                   END                                                    *FI
     C                   READ      @MKCPW7                                90    *
     C                   ENDDO
      *================================================================
     CSR   SKEXIT        ENDSR
      /EJECT
     CSR   SLCRRC        BEGSR
      *================================================================
      * CRT A/R Claim          CR - AR Claim Header  * 
      *================================================================
      *
     C                   EVAL      WN0087 = ' '                                 Record Status
     C                   Z-ADD     *ZERO         WN0088                         Create Date
     C                   Z-ADD     *ZERO         WN0089                         Create Time
     C                   EVAL      WN0090 = ' '                                 Create User
     C                   EVAL      WN0091 = ' '                                 Create Program
     C                   Z-ADD     *ZERO         WN0092                         Change Date
     C                   Z-ADD     *ZERO         WN0093                         Change Time
     C                   EVAL      WN0094 = ' '                                 Change User
     C                   EVAL      WN0095 = ' '                                 Change Program
     C                   EVAL      WN0096 = ' '                                 Sales Channel C
     C                   EVAL      WN0097 = ' '                                 CCM Disposition
     C                   EVAL      WN0098 = ' '                                 Claim Location
     C                   EVAL      WN0099 = ' '                                 Carrier SCAC
     C                   EVAL      WN0100 = ' '                                 Salesperson Com
     C                   EVAL      WN0101 = ' '                                 Disposition Not
     C                   EVAL      WN0102 = ' '                                 Created By
     C                   MOVEL     XDTSDL        WN0103                         Created Dt Tm
     C                   EVAL      WN0104 = ' '                                 Created Program
     C                   EVAL      WN0105 = ' '                                 Updated By
     C                   MOVEL     XDTSDL        WN0106                         Updated Dt Tm
     C                   EVAL      WN0107 = ' '                                 Updated Program
      *
     C                   EVAL      W0RTN = ' '
      * Move all fields to @MKCPWA
     C                   Z-ADD     P1C0C7        MKC0C7                         Claim Number
     C                   MOVEL     #1ZLCD        MKZLCD                         Salesperson to
     C                   Z-ADD     #1BIC3        MKBIC3                         Claim Company N
     C                   Z-ADD     #1ALNX        MKALNX                         Claim Order Num
     C                   Z-ADD     #1RMNB        MKRMNB                         Load ID
     C                   Z-ADD     #1C3C7        MKC3C7                         Claim Ship to C
     C                   MOVEL     #1RFTX        MKRFTX                         Claim Customer
     C                   MOVEL     #1CHSX        MKCHSX                         Claim Type
     C                   MOVEL     #1CJSX        MKCJSX                         Claim Status
     C                   Z-ADD     #1AYVL        MKAYVL                         Claim Amount
     C                   Z-ADD     #1AZVL        MKAZVL                         Claim Net Loss
     C                   Z-ADD     #1A0VL        MKA0VL                         Claim Approved
     C                   MOVEL     #1PQTX        MKPQTX                         Claim Contact N
     C                   MOVEL     #1CNSX        MKCNSX                         Product Inspect
     C                   MOVEL     #1PLTX        MKPLTX                         Product Inspect
     C                   MOVEL     #1COSX        MKCOSX                         Rep Inspection
     C                   MOVEL     #1PMTX        MKPMTX                         Rep Inspection
     C                   MOVEL     #1CPSX        MKCPSX                         Lab Fee Involve
     C                   Z-ADD     #1A1VL        MKA1VL                         Lab Fee
     C                   MOVEL     #1PNTX        MKPNTX                         Driver Name
     C                   MOVEL     #1POTX        MKPOTX                         Lab Name
     C                   Z-ADD     #1MLDT        MKMLDT                         Resolve Claim b
     C                   Z-ADD     #1EJDT        MKEJDT                         Actual Delivery
     C                   MOVEL     #1CQSX        MKCQSX                         Claim Called in
     C                   MOVEL     #1PPTX        MKPPTX                         Claim Called in
     C                   Z-ADD     #1MMDT        MKMMDT                         Claim Called in
     C                   Z-ADD     ##JDT         MKMNDT                         Claim Entry Dat
     C                   Z-ADD     ##JTM         MKBGTM                         Claim Entry Tim
     C                   MOVEL     ##USR         MKCGVN                         Claim Entry Use
     C                   Z-ADD     #1C4C7        MKC4C7                         Resale Ship to
     C                   MOVEL     #1O2NA        MKO2NA                         Resale Purchase
     C                   Z-ADD     #1NFDT        MKNFDT                         Sales Approved
     C                   Z-ADD     #1BJTM        MKBJTM                         Sales Approved
     C                   MOVEL     #1CQVN        MKCQVN                         Sales Approved
     C                   Z-ADD     #1MODT        MKMODT                         Approved_Denied
     C                   Z-ADD     #1BHTM        MKBHTM                         Approved_Denied
     C                   MOVEL     #1CHVN        MKCHVN                         Approved_Denied
     C                   MOVEL     #1CRSX        MKCRSX                         Memo Created
     C                   Z-ADD     #1MPDT        MKMPDT                         Memo Created Da
     C                   Z-ADD     #1BITM        MKBITM                         Memo Created Ti
     C                   MOVEL     #1CIVN        MKCIVN                         Memo Created Us
     C                   MOVEL     #1TBTX        MKTBTX                         Claim Resolutio
     C                   Z-ADD     #1EOVL        MKEOVL                         Approved Net Lo
     C                   Z-ADD     #1EPVL        MKEPVL                         Total Expense A
     C                   Z-ADD     #1P6DT        MKP6DT                         Memo Post Date
     C                   Z-ADD     #1CRTM        MKCRTM                         Memo Post Time
     C                   Z-ADD     #1YSNX        MKYSNX                         TFS Batch Numbe
     C                   MOVEL     'O'           MKT5SX                         TFS Process Sta
     C                   Z-ADD     #1F7PC        MKF7PC                         Avg TF Responsi
     C                   Z-ADD     #1F8PC        MKF8PC                         Avg SBF Respons
     C                   Z-ADD     #1F9PC        MKF9PC                         STF Responsibil
     C                   Z-ADD     #1EQVL        MKEQVL                         FPR ID
     C                   Z-ADD     #1ERVL        MKERVL                         AC Unused Value
     C                   Z-ADD     #1ESVL        MKESVL                         AC Unused Value
     C                   Z-ADD     #1ETVL        MKETVL                         AC Unused Value
     C                   MOVEL     #1T7SX        MKT7SX                         Claim Prod Affe
     C                   MOVEL     #1T8SX        MKT8SX                         ARC Unused Stat
     C                   MOVEL     #1T9SX        MKT9SX                         ARC Unused Stat
     C                   MOVEL     #1UASX        MKUASX                         AC Shipping Met
     C                   MOVEL     #1UBSX        MKUBSX                         AC Full Return
     C                   Z-ADD     #1GAPC        MKGAPC                         AC Unused Pct 1
     C                   Z-ADD     #1GBPC        MKGBPC                         AC Unused Pct 2
      *
      * USER: Processing before Data update
     C                   MOVEL     'O'           MKT5SX                         TFS Process Sta
      * Set Crt Date/Time      IF
      * *** Set RECORD STATUS field. ***
     C                   MOVEL     'A'           MKVSST                         Record Status
      * *** Set CREATE fields. ***
     C                   Z-ADD     ##JDT         MKMJDT                         Create Date
     C                   Z-ADD     ##JTM         MKBETM                         Create Time
     C                   MOVEL     ##USR         MKCCVN                         Create User
     C                   MOVEL     ##PGM         MKCDVN                         Create Program
      * *** Set CHANGE fields. ***
     C                   Z-ADD     *ZERO         MKMKDT                         Change Date
     C                   Z-ADD     *ZERO         MKBFTM                         Change Time
     C                   EVAL      MKCEVN = ' '                                 Change User
     C                   EVAL      MKCFVN = ' '                                 Change Program
     C     KLCRSL        KLIST
     C                   KFLD                    MKC0C7                         Claim Number
      * Check for duplicate primary key
     C     KLCRSL        SETLL     @MKCPWA                                90    *
     C                   IF        *IN90
     C                   MOVEL     'USR2730'     W0RTN
      * Send message 'AR Claim Header        EX'
     C                   MOVEL     'USR2730'     ZAMSID
     C                   EXSR      ZASNMS
     C                   GOTO      SLEXIT
     C                   ENDIF
      *
     C                   WRITE     @MKCPWA                              91      *
      *
      * Write error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
     C                   ENDIF
      *================================================================
     CSR   SLEXIT        ENDSR
      /EJECT
     CSR   SMCHRC        BEGSR
      *================================================================
      * CHG A/R Claim          CH - AR Claim Header  * 
      *================================================================
      *
     C                   EVAL      WN0108 = ' '                                 Record Status
     C                   Z-ADD     *ZERO         WN0109                         Create Date
     C                   Z-ADD     *ZERO         WN0110                         Create Time
     C                   EVAL      WN0111 = ' '                                 Create User
     C                   EVAL      WN0112 = ' '                                 Create Program
     C                   Z-ADD     *ZERO         WN0113                         Change Date
     C                   Z-ADD     *ZERO         WN0114                         Change Time
     C                   EVAL      WN0115 = ' '                                 Change User
     C                   EVAL      WN0116 = ' '                                 Change Program
     C                   EVAL      WN0117 = ' '                                 Sales Channel C
     C                   EVAL      WN0118 = ' '                                 CCM Disposition
     C                   EVAL      WN0119 = ' '                                 Claim Location
     C                   EVAL      WN0120 = ' '                                 Carrier SCAC
     C                   EVAL      WN0121 = ' '                                 Salesperson Com
     C                   EVAL      WN0122 = ' '                                 Disposition Not
     C                   EVAL      WN0123 = ' '                                 Created By
     C                   MOVEL     XDTSDL        WN0124                         Created Dt Tm
     C                   EVAL      WN0125 = ' '                                 Created Program
     C                   EVAL      WN0126 = ' '                                 Updated By
     C                   MOVEL     XDTSDL        WN0127                         Updated Dt Tm
     C                   EVAL      WN0128 = ' '                                 Updated Program
      *
     C                   EVAL      W0RTN = ' '
      * Set PGM.*Record Data Changed flag
     C                   EVALR     YBRDC = ' '
      *
      * Move key fields to @MKCPWA
     C                   Z-ADD     #1C0C7        MKC0C7                         Claim Number
      *
     C     KLCHSM        KLIST
     C                   KFLD                    MKC0C7                         Claim Number
     C     KLCHSM        CHAIN     @MKCPWA                            9091      *
      *
      * Record not found
     C                   IF        *IN90
     C                   MOVEL     'Y2U0009'     W0RTN
     C                   MOVEL     ##PGM         MDPGM
     C                   MOVEL     'PDMKCPL0'    MDACP
     C                   MOVEL     '@MKCPWA'     MDFMT
     C                   MOVEL     '*CHG'        MDACT
      * Record not found label: LBL002.
     C                   MOVEL     'LBL002'      MDLBL
      * Send message '*Record no longer on file'
     C                   MOVEL     'Y2U0009'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     MD0009        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   EVAL      MD0009 = ' '
     C                   GOTO      SMEXIT
     C                   ENDIF
      *
      * Record locked
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
      * Send message '*Database operation error'
     C                   MOVEL     'Y2U0004'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   GOTO      SMEXIT
     C                   ENDIF
      *
      * Check for changed record
     C                   IF        #1DBRC <> @1DBRC
     C                   MOVEL     'Y2U0007'     W0RTN
      * Send message '*Update not accepted'
     C                   MOVEL     'Y2U0007'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
      * Release record lock
     C                   UNLOCK    PDMKCPL0                             91      *
     C                   GOTO      SMEXIT
     C                   ENDIF                                                  FI #1DBRC
      * Store record data for null update check
     C                   MOVE      @1DBRC        YBRDCS
      * Move non-key fields to @MKCPWA
     C                   MOVEL(P)  #1ZLCD        MKZLCD                         Salesperson to
     C                   Z-ADD     #1BIC3        MKBIC3                         Claim Company N
     C                   Z-ADD     #1ALNX        MKALNX                         Claim Order Num
     C                   Z-ADD     #1RMNB        MKRMNB                         Load ID
     C                   Z-ADD     #1C3C7        MKC3C7                         Claim Ship to C
     C                   MOVEL(P)  #1RFTX        MKRFTX                         Claim Customer
     C                   MOVEL(P)  #1CHSX        MKCHSX                         Claim Type
     C                   MOVEL(P)  #1CJSX        MKCJSX                         Claim Status
     C                   Z-ADD     #1AYVL        MKAYVL                         Claim Amount
     C                   Z-ADD     #1AZVL        MKAZVL                         Claim Net Loss
     C                   Z-ADD     #1A0VL        MKA0VL                         Claim Approved
     C                   MOVEL(P)  #1PQTX        MKPQTX                         Claim Contact N
     C                   MOVEL(P)  #1CNSX        MKCNSX                         Product Inspect
     C                   MOVEL(P)  #1PLTX        MKPLTX                         Product Inspect
     C                   MOVEL(P)  #1COSX        MKCOSX                         Rep Inspection
     C                   MOVEL(P)  #1PMTX        MKPMTX                         Rep Inspection
     C                   MOVEL(P)  #1CPSX        MKCPSX                         Lab Fee Involve
     C                   Z-ADD     #1A1VL        MKA1VL                         Lab Fee
     C                   MOVEL(P)  #1PNTX        MKPNTX                         Driver Name
     C                   MOVEL(P)  #1POTX        MKPOTX                         Lab Name
     C                   Z-ADD     #1MLDT        MKMLDT                         Resolve Claim b
     C                   Z-ADD     #1EJDT        MKEJDT                         Actual Delivery
     C                   MOVEL(P)  #1CQSX        MKCQSX                         Claim Called in
     C                   MOVEL(P)  #1PPTX        MKPPTX                         Claim Called in
     C                   Z-ADD     #1MMDT        MKMMDT                         Claim Called in
     C                   Z-ADD     #1MNDT        MKMNDT                         Claim Entry Dat
     C                   Z-ADD     #1BGTM        MKBGTM                         Claim Entry Tim
     C                   MOVEL(P)  #1CGVN        MKCGVN                         Claim Entry Use
     C                   Z-ADD     #1C4C7        MKC4C7                         Resale Ship to
     C                   MOVEL(P)  #1O2NA        MKO2NA                         Resale Purchase
     C                   Z-ADD     #1NFDT        MKNFDT                         Sales Approved
     C                   Z-ADD     #1BJTM        MKBJTM                         Sales Approved
     C                   MOVEL(P)  #1CQVN        MKCQVN                         Sales Approved
     C                   Z-ADD     #1MODT        MKMODT                         Approved_Denied
     C                   Z-ADD     #1BHTM        MKBHTM                         Approved_Denied
     C                   MOVEL(P)  #1CHVN        MKCHVN                         Approved_Denied
     C                   MOVEL(P)  #1CRSX        MKCRSX                         Memo Created
     C                   Z-ADD     #1MPDT        MKMPDT                         Memo Created Da
     C                   Z-ADD     #1BITM        MKBITM                         Memo Created Ti
     C                   MOVEL(P)  #1CIVN        MKCIVN                         Memo Created Us
     C                   MOVEL(P)  #1TBTX        MKTBTX                         Claim Resolutio
     C                   Z-ADD     #1EOVL        MKEOVL                         Approved Net Lo
     C                   Z-ADD     #1EPVL        MKEPVL                         Total Expense A
     C                   Z-ADD     #1P6DT        MKP6DT                         Memo Post Date
     C                   Z-ADD     #1CRTM        MKCRTM                         Memo Post Time
     C                   Z-ADD     #1YSNX        MKYSNX                         TFS Batch Numbe
     C                   MOVEL(P)  #1T5SX        MKT5SX                         TFS Process Sta
     C                   Z-ADD     #1F7PC        MKF7PC                         Avg TF Responsi
     C                   Z-ADD     #1F8PC        MKF8PC                         Avg SBF Respons
     C                   Z-ADD     #1F9PC        MKF9PC                         STF Responsibil
     C                   Z-ADD     #1EQVL        MKEQVL                         FPR ID
     C                   Z-ADD     #1ERVL        MKERVL                         AC Unused Value
     C                   Z-ADD     #1ESVL        MKESVL                         AC Unused Value
     C                   Z-ADD     #1ETVL        MKETVL                         AC Unused Value
     C                   MOVEL(P)  #1T7SX        MKT7SX                         Claim Prod Affe
     C                   MOVEL(P)  #1T8SX        MKT8SX                         ARC Unused Stat
     C                   MOVEL(P)  #1T9SX        MKT9SX                         ARC Unused Stat
     C                   MOVEL(P)  #1UASX        MKUASX                         AC Shipping Met
     C                   MOVEL(P)  #1UBSX        MKUBSX                         AC Full Return
     C                   Z-ADD     #1GAPC        MKGAPC                         AC Unused Pct 1
     C                   Z-ADD     #1GBPC        MKGBPC                         AC Unused Pct 2
      *
      * Set PGM.*Record Data Changed flag
     C                   IF        @1DBRC <> YBRDCS AND
     C                             YBRDC <> 'N'
     C                   MOVE      'Y'           YBRDC
     C                   ENDIF
      * USER: Processing before Data update
      * CASE: PAR.Claim Amount is less than zero
     C                   IF        #1AYVL < 0
     C                   MOVEL     'CM'          MKCHSX                         Claim Type
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     'DM'          MKCHSX                         Claim Type
     C                   END                                                    *FI
      * Set Chg Date/Time      IF
     C                   Z-ADD     ##JDT         MKMKDT                         Change Date
     C                   Z-ADD     ##JTM         MKBFTM                         Change Time
     C                   MOVEL     ##USR         MKCEVN                         Change User
     C                   MOVEL     ##PGM         MKCFVN                         Change Program
      * Set PGM.*Record Data Changed flag
     C                   IF        @1DBRC <> YBRDCS AND
     C                             YBRDC <> 'N'
     C                   MOVE      'Y'           YBRDC
     C                   ENDIF
      * If changed update record otherwise release record
     C                   IF        YBRDC = 'Y'
     C                   UPDATE    @MKCPWA                              91      *
     C                   ELSE
      * Release record lock
     C                   UNLOCK    PDMKCPL0                             91      *
     C                   ENDIF
      * Change error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
      *
      * Update saved record image
     C                   MOVEL     @1DBRC        #1DBRC
      * DBF change successful
     C                   ENDIF
      *================================================================
     CSR   SMEXIT        ENDSR
      /EJECT
     CSR   SNRVGN        BEGSR
      *================================================================
      * RTV Program Setup w/Co RT - User Profile Control  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSN         KLIST
     C                   KFLD                    DRAJVN                         User Profile Na
      * Setup key
     C                   MOVEL     WN0129        DRAJVN                         User Profile Na
      * Establish starting position
     C     KRSSN         CHAIN     @DRRETH                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0763'     W0RTN
      * USER: Processing if Data record not found
     C                   MOVEL     'Y2U0005'     W0RTN                          *Return code
     C                   GOTO      SNEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     DRI6ST        P3I6ST                         Allow Multi_Com
     C                   MOVEL     DRMPNA        P3MPNA                         Default Printer
     C                   MOVEL     DRBCCD        P3BCCD                         Salesperson Cod
     C                   Z-ADD     DRAIC3        YL0004                         Company Number
     C                   MOVEL     DRBUVN        WN0130                         User Code Model
     C                   ENDIF
      *================================================================
     CSR   SNEXIT        ENDSR
      /EJECT
     CSR   SORVGN        BEGSR
      *================================================================
      * RTV Appl. Profile      RT - User Application Profile  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSO         KLIST
     C                   KFLD                    DTAJVN                         User Profile Na
     C                   KFLD                    DTDNCD                         Application Cod
      * Setup key
     C                   MOVEL     WL0042        DTAJVN                         User Profile Na
     C                   MOVEL     WL0043        DTDNCD                         Application Cod
      * Establish starting position
     C     KRSSO         CHAIN     @DTRETE                            90        *
      * Data record not found
     C   90              MOVEL     'USR0767'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   Z-ADD     DTAIC3        WL0044                         Company Number
     C                   MOVEL     DTAJCD        WL0045                         Warehouse Code
     C                   ENDIF
      *================================================================
     CSR   SOEXIT        ENDSR
      /EJECT
     CSR   SPRVGN        BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSP         KLIST
     C                   KFLD                    WQSP01                         Application Cod
      * Setup key
     C                   MOVEL     P3DNCD        WQSP01                         Application Cod
      * Establish starting position
     C     KRSSP         SETLL     @DNRESF                                      *
     C     KRSSP         READE     @DNRESF                                90    *
      * Data record not found
     C   90              MOVEL     'USR0755'     W0RTN
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C                   DOW       NOT *IN90
      * PAR = DB1 By name
     C                   IF        DNRSCD = ' '
     C                   MOVEL     DNAUNA        WUAUNA                         Description
     C                   ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                   EXSR      SQRVGN
     C                   END                                                    *FI
     C     KRSSP         READE     @DNRESF                                90    *
     C                   ENDDO
      *================================================================
     CSR   SPEXIT        ENDSR
      /EJECT
     CSR   SQRVGN        BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSQ         KLIST
     C                   KFLD                    WQSQ01                         Application Cod
      * Setup key
     C                   MOVEL     DNRSCD        WQSQ01                         Application Cod
      * Establish starting position
     C     KRSSQ         SETLL     @DNRESF                                      *
     C     KRSSQ         READE     @DNRESF                                90    *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0755'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   EVAL      WUAUNA = ' '                                 Description
     C                   MOVEL     'Y2U0005'     W0RTN                          *Return code
     C                   GOTO      SQEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   DOW       NOT *IN90
     C                   MOVEL     DNAUNA        WUAUNA                         Description
     C     KRSSQ         READE     @DNRESF                                90    *
     C                   ENDDO
      *================================================================
     CSR   SQEXIT        ENDSR
      /EJECT
     CSR   UASUBR        BEGSR
      *================================================================
      * Get Load ID.
      *================================================================
      * RTV Claim Order Info   RT - Sales History  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     #1BIC3        WL0001                         Company Number
     C                   Z-ADD     #1ALNX        WL0002                         Order Number
     C                   EXSR      SARVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0003        #1C3C7                         Ship To Custome
     C                   MOVEL(P)  WL0004        #1RFTX                         Ship To Name
     C                   MOVEL(P)  WL0005        #DBCNA                         Customer Purcha
     C                   MOVEL(P)  WL0006        WUOSTX                         Carrier Code
     C                   MOVEL(P)  WL0007        WUOSTX                         Warehouse Code
     C                   Z-ADD     WL0008        WUMTDT                         Invoice Date
     C                   Z-ADD     WL0009        #DCONB                         Invoice Number
     C                   MOVEL(P)  WL0010        WUOSTX                         Invoice Suffix
     C                   Z-ADD     WL0011        WUMTDT                         Actual Shipped
     C                   Z-ADD     WL0012        #1RMNB                         Load ID
     C                   MOVEL(P)  WL0013        WUOSTX                         Salesperson to
      * CASE: PGM.*Return code is *Normal
     C                   IF        W0RTN = ' '
     C                   Z-ADD     P1RMNB        #1RMNB                         Load ID
     C                   ELSE
      * CASE: *OTHERWISE
      * RTV Claim Order Info   RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     #1BIC3        WL0016                         Company Number
     C                   Z-ADD     #1ALNX        WL0017                         Order Number
     C                   EXSR      SCRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0018        #1C3C7                         Ship To Custome
     C                   MOVEL(P)  WL0019        #1RFTX                         Ship To Name
     C                   MOVEL(P)  WL0020        #DBCNA                         Customer Purcha
     C                   Z-ADD     WL0021        WUMTDT                         Actual Shipped
     C                   MOVEL(P)  WL0022        WUOSTX                         Carrier Code
     C                   Z-ADD     WL0023        #1RMNB                         Load ID
     C                   Z-ADD     WL0024        #DCONB                         Invoice Number
     C                   MOVEL(P)  WL0025        WUOSTX                         Invoice Suffix
     C                   Z-ADD     WL0026        WUMTDT                         Invoice Date
     C                   MOVEL(P)  WL0027        WUOSTX                         Salesperson to
     C                   MOVEL(P)  WL0028        WUOSTX                         Warehouse Code
     C                   Z-ADD     P1RMNB        #1RMNB                         Load ID
     C                   END                                                    *FI
      *================================================================
     CSR   UAEXIT        ENDSR
      /EJECT
     CSR   UBSUBR        BEGSR
      *================================================================
      * Get Load ID.
      *================================================================
      * RTV Claim Order Info   RT - Sales History  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     #1BIC3        WL0001                         Company Number
     C                   Z-ADD     #1ALNX        WL0002                         Order Number
     C                   EXSR      SARVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0003        #1C3C7                         Ship To Custome
     C                   MOVEL(P)  WL0004        #1RFTX                         Ship To Name
     C                   MOVEL(P)  WL0005        #DBCNA                         Customer Purcha
     C                   MOVEL(P)  WL0006        WUOSTX                         Carrier Code
     C                   MOVEL(P)  WL0007        WUOSTX                         Warehouse Code
     C                   Z-ADD     WL0008        WUMTDT                         Invoice Date
     C                   Z-ADD     WL0009        #DCONB                         Invoice Number
     C                   MOVEL(P)  WL0010        WUOSTX                         Invoice Suffix
     C                   Z-ADD     WL0011        WUMTDT                         Actual Shipped
     C                   Z-ADD     WL0012        #1RMNB                         Load ID
     C                   MOVEL(P)  WL0013        WUOSTX                         Salesperson to
      * CASE: PGM.*Return code is *Normal
     C                   IF        W0RTN = ' '
     C                   Z-ADD     P1RMNB        #1RMNB                         Load ID
     C                   ELSE
      * CASE: *OTHERWISE
      * RTV Claim Order Info   RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     #1BIC3        WL0016                         Company Number
     C                   Z-ADD     #1ALNX        WL0017                         Order Number
     C                   EXSR      SCRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0018        #1C3C7                         Ship To Custome
     C                   MOVEL(P)  WL0019        #1RFTX                         Ship To Name
     C                   MOVEL(P)  WL0020        #DBCNA                         Customer Purcha
     C                   Z-ADD     WL0021        WUMTDT                         Actual Shipped
     C                   MOVEL(P)  WL0022        WUOSTX                         Carrier Code
     C                   Z-ADD     WL0023        #1RMNB                         Load ID
     C                   Z-ADD     WL0024        #DCONB                         Invoice Number
     C                   MOVEL(P)  WL0025        WUOSTX                         Invoice Suffix
     C                   Z-ADD     WL0026        WUMTDT                         Invoice Date
     C                   MOVEL(P)  WL0027        WUOSTX                         Salesperson to
     C                   MOVEL(P)  WL0028        WUOSTX                         Warehouse Code
     C                   Z-ADD     P1RMNB        #1RMNB                         Load ID
     C                   END                                                    *FI
      *================================================================
     CSR   UBEXIT        ENDSR
      /EJECT
     CSR   UCSUBR        BEGSR
      *================================================================
      * Get Actual Delivery Date and validate that the order is valid
      *================================================================
      * RTV Req Dlvry Dt/ValOrRT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     #1BIC3        WL0032                         Company Number
     C                   Z-ADD     #1ALNX        WL0033                         Order Number
     C                   EXSR      SFRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0034        #1EJDT                         Requested Deliv
     C                   Z-ADD     WL0035        WUDVC7                         Requested Deliv
      *================================================================
     CSR   UCEXIT        ENDSR
      /EJECT
     CSR   UDSUBR        BEGSR
      *================================================================
      * Use work fields on Act Del Date and validate that the order is g
      *================================================================
      * RTV Req Dlvry Dt/ValOrRT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     #1BIC3        WL0032                         Company Number
     C                   Z-ADD     #1ALNX        WL0033                         Order Number
     C                   EXSR      SFRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0034        WUMTDT                         Requested Deliv
     C                   Z-ADD     WL0035        WUDVC7                         Requested Deliv
      *================================================================
     CSR   UDEXIT        ENDSR
      /EJECT
     CSR   UESUBR        BEGSR
      *================================================================
      * Verify the Order No and Co is on another claim ..One Time only
      *================================================================
      * CASE:
      *  - c1ORc2 ORc3
      *   |- c1    : DTL.Claim Company Number NE WRK.Claim Company Number
      *   |- c2    : DTL.Claim Order Number NE WRK.Claim Order Number
      *   |- c3    : WRK.One Time Selection is Yes
      *   '-
     C                   IF        #1BIC3 <> WUBIC3 OR
     C                             #1ALNX <> WUALNX OR
     C                             WUOVST = 'Y'
     C                   MOVEL     'N'           WUOVST                         One Time Select
     C                   EVAL      YL0002 = ' '                                 Claim is Warnin
     C                   EVAL      W0RTN = ' '                                  *Return code
      * VAL Order# Not Found  XF - A/R Claim  * 
     C                   CALL      'PPOBXFR'                            90      VAL Order# Not
     C                   PARM      *BLANK        W0RTN
     C                   PARM      #1C0C7        WQ0010                         Claim Number
     C                   PARM      #1BIC3        WQ0011                         Claim Company N
     C                   PARM      #1ALNX        WQ0012                         Claim Order Num
     C     YL0002        PARM      YL0002        WQ0013                         Claim is Warnin
     C     W0RTN         PARM      W0RTN         WQ0014                         *Return code
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PPOBXFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        993132    *
     C                   END
      * CASE: LCL.Claim is Warning Err Usr is yes
      * Send message 'Order is on another claim'
     C                   IF        YL0002 = 'Y'
     C                   MOVEL     'USR3459'     ZAMSID
     C                   MOVEL     '*INFO  '     ZAMSTP                         Message type
     C                   EXSR      ZASNMS
      *
     C                   END                                                    *FI
     C                   Z-ADD     #1BIC3        WUBIC3                         Claim Company N
     C                   Z-ADD     #1ALNX        WUALNX                         Claim Order Num
     C                   END                                                    *FI
      *================================================================
     CSR   UEEXIT        ENDSR
      /EJECT
     CSR   UFSUBR        BEGSR
      *================================================================
      * Get Actual Delivery Date and validate that the order is valid
      *================================================================
      * RTV Req Dlvry Dt/ValOrRT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     #1BIC3        WL0032                         Company Number
     C                   Z-ADD     #1ALNX        WL0033                         Order Number
     C                   EXSR      SFRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0034        #1EJDT                         Requested Deliv
     C                   Z-ADD     WL0035        WUDVC7                         Requested Deliv
      *================================================================
     CSR   UFEXIT        ENDSR
      /EJECT
     CSR   UGSUBR        BEGSR
      *================================================================
      * validate order number only.
      *================================================================
      * RTV Req Dlvry Dt/ValOrRT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     #1BIC3        WL0032                         Company Number
     C                   Z-ADD     #1ALNX        WL0033                         Order Number
     C                   EXSR      SFRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0034        WUMTDT                         Requested Deliv
     C                   Z-ADD     WL0035        WUDVC7                         Requested Deliv
      *================================================================
     CSR   UGEXIT        ENDSR
      /EJECT
     CSR   UHSUBR        BEGSR
      *================================================================
      * Get Actual Delivery Date.
      *================================================================
      * RTV Requested Dlvry dt RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     #1BIC3        WL0038                         Company Number
     C                   Z-ADD     #1ALNX        WL0039                         Order Number
     C                   EXSR      SIRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0040        #1EJDT                         Requested Deliv
     C                   Z-ADD     WL0041        WUDVC7                         Requested Deliv
      *================================================================
     CSR   UHEXIT        ENDSR
      /EJECT
     CSR   UISUBR        BEGSR
      *================================================================
      * Get SALESPERSON AND LOAD ID
      *================================================================
      * RTV Claim Order Info   RT - Sales History  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     #1BIC3        WL0001                         Company Number
     C                   Z-ADD     #1ALNX        WL0002                         Order Number
     C                   EXSR      SARVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0003        #1C3C7                         Ship To Custome
     C                   MOVEL(P)  WL0004        #1RFTX                         Ship To Name
     C                   MOVEL(P)  WL0005        #DBCNA                         Customer Purcha
     C                   MOVEL(P)  WL0006        WUOSTX                         Carrier Code
     C                   MOVEL(P)  WL0007        WUOSTX                         Warehouse Code
     C                   Z-ADD     WL0008        WUMTDT                         Invoice Date
     C                   Z-ADD     WL0009        WUY4CD                         Invoice Number
     C                   MOVEL(P)  WL0010        WUOSTX                         Invoice Suffix
     C                   Z-ADD     WL0011        WUMTDT                         Actual Shipped
     C                   Z-ADD     WL0012        #1RMNB                         Load ID
     C                   MOVEL(P)  WL0013        YL0003                         Salesperson to
      * CASE: LCL.Salesperson to Rvw Claim NE WRK.BLANK
     C                   IF        YL0003 <> WUGSTX
     C                   Z-ADD     #1RMNB        P1RMNB                         Load ID
     C                   ELSE
      * CASE: *OTHERWISE
      * RTV Claim Order Info   RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     #1BIC3        WL0016                         Company Number
     C                   Z-ADD     #1ALNX        WL0017                         Order Number
     C                   EXSR      SCRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0018        #1C3C7                         Ship To Custome
     C                   MOVEL(P)  WL0019        #1RFTX                         Ship To Name
     C                   MOVEL(P)  WL0020        #DBCNA                         Customer Purcha
     C                   Z-ADD     WL0021        WUMTDT                         Actual Shipped
     C                   MOVEL(P)  WL0022        WUOSTX                         Carrier Code
     C                   Z-ADD     WL0023        #1RMNB                         Load ID
     C                   Z-ADD     WL0024        WUY4CD                         Invoice Number
     C                   MOVEL(P)  WL0025        WUOSTX                         Invoice Suffix
     C                   Z-ADD     WL0026        WUMTDT                         Invoice Date
     C                   MOVEL(P)  WL0027        YL0003                         Salesperson to
     C                   MOVEL(P)  WL0028        WUOSTX                         Warehouse Code
     C                   Z-ADD     #1RMNB        P1RMNB                         Load ID
     C                   END                                                    *FI
      * CASE: DTL.Salesperson to Rvw Claim is not entered
     C                   IF        #1ZLCD = ' '
     C                   MOVEL     YL0003        #1ZLCD                         Salesperson to
     C                   END                                                    *FI
      * RTV Salesperson NmeOnlyRT - Salesperson  * 
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  #1ZLCD        WL0036                         Salesperson Cod
     C                   EXSR      SGRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0037        #DP9NA                         Salesperson Nam
      * CASE: PGM.*Return code is *Record does not exist
      * Setup message data for message
      * Send message 'Salesperson            NF'
     C                   IF        W0RTN = @CN(004)
     C                   MOVEL     'USR0039'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
      *
     C                   END                                                    *FI
      *================================================================
     CSR   UIEXIT        ENDSR
      /EJECT
     CSR   UJSUBR        BEGSR
      *================================================================
      * Save Last Claim Number in file.
      *================================================================
      * CASE: PAR.Claim Number Saved USR is Zero
     C                   IF        WN0082 = 0
     C                   Z-ADD     WAC0C7        WN0082                         Claim Number Sa
     C                   END                                                    *FI
      *================================================================
     CSR   UJEXIT        ENDSR
      /EJECT
     CSR   UKSUBR        BEGSR
      *================================================================
      * Reset output claim number by adding 1 to last used claim number.
      *================================================================
     C     WN0082        ADD       1             P1C0C7                         Claim Number
      *================================================================
     CSR   UKEXIT        ENDSR
      /EJECT
     CSR   ULSUBR        BEGSR
      *================================================================
      * Stop the search.
      *================================================================
     C                   MOVEL     'Y'           WN0086                         Stop
      *================================================================
     CSR   ULEXIT        ENDSR
      /EJECT
     CSR   UMSUBR        BEGSR
      *================================================================
      * Look for missing claim numbers.
      *================================================================
      * CASE: PAR.Claim Number Previous USR is Not Zero
     C                   IF        WN0083 <> 0
     C     WN0083        SUB       1             WN0084                         Claim Number Ne
      * CASE: PAR.Claim Number Next USR NE DB1.Claim Number
     C                   IF        WN0084 <> WAC0C7
     C                   Z-ADD     WN0084        P1C0C7                         Claim Number
     C                   MOVEL     'Y'           WN0086                         Stop
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   Z-ADD     WAC0C7        WN0083                         Claim Number Pr
      *================================================================
     CSR   UMEXIT        ENDSR
      /EJECT
     CSR   VACKRL        BEGSR
      *================================================================
      * Select existing record
      *================================================================
      * Name search required?
     C                   MOVEL     V1C0C7        WK1X01
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(KEY) #1C0C7' defaulted for 'Claim Number'.
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(PAR) P1BIC3' defaulted for 'Claim Company Number'.
      * Field '(PAR) P1C3C7' defaulted for 'Claim Ship to Customer'.
     C                   IF        WK1X01 = '?' OR
     C                             YPMTFD = '#1C0C7'
     C                   CALL      'PMCSSRR'                            90      Sel A/R Claim
     C                   PARM      *BLANK        W0RTN
     C     #1C0C7        PARM      #1C0C7        WQ0001                         Claim Number
     C     P1BIC3        PARM      P1BIC3        WQ0002                         Claim Company N
     C     P1C3C7        PARM      P1C3C7        WQ0003                         Claim Ship to C
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PMCSSRR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' ' AND
     C                             W0RTN <> 'Y2U0016'
     C                   SETON                                        9931      *
     C                   END
      *
     C                   IF        #1C0C7 <> *ZERO AND
     C                             YPMTFD <> ' ' AND
     C                             W0RTN = ' ' AND
     C                             WK1X01 <> '?'
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
     C                   END
      *================================================================
     CSR   VAEXIT        ENDSR
      /EJECT
     CSR   VBCKRL        BEGSR
      *================================================================
      * Check reference to Salesperson
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Name search required?
     C                   MOVEL     #1ZLCD        WK1X01
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DTL) #1ZLCD' defaulted for 'Salesperson to Rvw Claim'.
     C                   IF        WK1X01 = '?' OR
     C                             YPMTFD = '#1ZLCD'
     C                   CALL      'CABYSRR'                            90      SEL Active Sale
     C                   PARM      *BLANK        W0RTN
     C     #1ZLCD        PARM      #1ZLCD        WQ0016                         Salesperson Cod
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'CABYSRR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' ' AND
     C                             W0RTN <> 'Y2U0016'
     C                   SETON                                        9939      *
     C                   END
      *
     C                   IF        #1ZLCD <> ' ' AND
     C                             YPMTFD <> ' ' AND
     C                             W0RTN = ' ' AND
     C                             WK1X01 <> '?'
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
      * No value selected, exit
     C                   IF        W0RTN <> ' ' AND
     C                             YPMTFD = ' '
     C                   GOTO      VBEXIT
     C                   END
     C                   END
      *................................................................
      * If all low order keys not entered, exit
     C                   IF        #1ZLCD = ' '
     C                   GOTO      VBEXIT
     C                   END
      *
     C     KLVBAP        KLIST
     C                   KFLD                    APBCCD                         Salesperson Cod
      * Setup key
     C                   MOVEL     #1ZLCD        APBCCD
     C     KLVBAP        CHAIN     @APREBU                            9091      *
      * Record found - move back any virtuals
     C                   IF        NOT *IN90
     C                   GOTO      VBEXIT
     C                   END
     C                   IF        YPMTFD <> ' '
     C                   SETOFF                                       9091
     C                   GOTO      VBEXIT
     C                   END
      * Send message 'Salesperson            NF'
     C                   MOVEL     'USR0039'     ZAMSID
     C                   EXSR      ZASNMS
     C                   MOVEL     'USR0039'     W0RTN
      *================================================================
     CSR   VBEXIT        ENDSR
      /EJECT
     CSR   VCCKRL        BEGSR
      *================================================================
      * Check reference to Sales Channel
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Name search required?
     C                   MOVEL     #1TXAA        WK1X01
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DTL) #1TXAA' defaulted for 'Sales Channel Code'.
     C                   IF        WK1X01 = '?' OR
     C                             YPMTFD = '#1TXAA'
     C                   CALL      'PBTOSRR'                            90      Sel Sales Chann
     C                   PARM      *BLANK        W0RTN
     C     #1TXAA        PARM      #1TXAA        WQ0017                         Sales Channel C
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PBTOSRR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' ' AND
     C                             W0RTN <> 'Y2U0016'
     C                   SETON                                        99        *
     C                   END
      *
     C                   IF        #1TXAA <> ' ' AND
     C                             YPMTFD <> ' ' AND
     C                             W0RTN = ' ' AND
     C                             WK1X01 <> '?'
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
      * No value selected, exit
     C                   IF        W0RTN <> ' ' AND
     C                             YPMTFD = ' '
     C                   GOTO      VCEXIT
     C                   END
     C                   END
      *................................................................
      * If all low order keys not entered, exit
     C                   IF        #1TXAA = ' '
     C                   GOTO      VCEXIT
     C                   END
      *
     C     KLVCB4        KLIST
     C                   KFLD                    B4TXAA                         Sales Channel C
      * Setup key
     C                   MOVEL     #1TXAA        B4TXAA
     C     KLVCB4        CHAIN     @B4REU4                            9091      *
      * Record found - move back any virtuals
     C                   IF        NOT *IN90
     C                   GOTO      VCEXIT
     C                   END
     C                   IF        YPMTFD <> ' '
     C                   SETOFF                                       9091
     C                   GOTO      VCEXIT
     C                   END
      * Send message 'Sales Channel          NF'
     C                   MOVEL     'USR4832'     ZAMSID
     C                   EXSR      ZASNMS
     C                   MOVEL     'USR4832'     W0RTN
      *================================================================
     CSR   VCEXIT        ENDSR
      /EJECT
     CSR   VDCKRL        BEGSR
      *================================================================
      * Check reference to CCM Disposition
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Name search required?
     C                   MOVEL     #1C8AB        WK1X01
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DTL) #1C8AB' defaulted for 'CCM Disposition Code'.
     C                   IF        WK1X01 = '?' OR
     C                             YPMTFD = '#1C8AB'
     C                   CALL      'PVETSRR'                            90      Select CCM Disp
     C                   PARM      *BLANK        W0RTN
     C     #1C8AB        PARM      #1C8AB        WQ0018                         CCM Disposition
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PVETSRR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' ' AND
     C                             W0RTN <> 'Y2U0016'
     C                   SETON                                        99        *
     C                   END
      *
     C                   IF        #1C8AB <> ' ' AND
     C                             YPMTFD <> ' ' AND
     C                             W0RTN = ' ' AND
     C                             WK1X01 <> '?'
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
      * No value selected, exit
     C                   IF        W0RTN <> ' ' AND
     C                             YPMTFD = ' '
     C                   GOTO      VDEXIT
     C                   END
     C                   END
      *................................................................
      * If all low order keys not entered, exit
     C                   IF        #1C8AB = ' '
     C                   GOTO      VDEXIT
     C                   END
      *
     C     KLVDAI        KLIST
     C                   KFLD                    AIC8AB                         CCM Disposition
      * Setup key
     C                   MOVEL     #1C8AB        AIC8AB
     C     KLVDAI        CHAIN     @AIREN8                            9091      *
      * Record found - move back any virtuals
     C                   IF        NOT *IN90
     C                   GOTO      VDEXIT
     C                   END
     C                   IF        YPMTFD <> ' '
     C                   SETOFF                                       9091
     C                   GOTO      VDEXIT
     C                   END
      * Send message 'CCM Disposition        NF'
     C                   MOVEL     'USR5337'     ZAMSID
     C                   EXSR      ZASNMS
     C                   MOVEL     'USR5337'     W0RTN
      *================================================================
     CSR   VDEXIT        ENDSR
      /EJECT
     CSR   VECKRL        BEGSR
      *================================================================
      * Check reference to CCM Location
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Name search required?
     C                   MOVEL     #1EJAB        WK1X01
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DTL) #1EJAB' defaulted for 'Claim Location'.
     C                   IF        WK1X01 = '?' OR
     C                             YPMTFD = '#1EJAB'
     C                   CALL      'PVCUSRR'                            90      Select CCM Loca
     C                   PARM      *BLANK        W0RTN
     C     #1EJAB        PARM      #1EJAB        WQ0019                         Claim Location
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PVCUSRR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' ' AND
     C                             W0RTN <> 'Y2U0016'
     C                   SETON                                        99        *
     C                   END
      *
     C                   IF        #1EJAB <> ' ' AND
     C                             YPMTFD <> ' ' AND
     C                             W0RTN = ' ' AND
     C                             WK1X01 <> '?'
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
      * No value selected, exit
     C                   IF        W0RTN <> ' ' AND
     C                             YPMTFD = ' '
     C                   GOTO      VEEXIT
     C                   END
     C                   END
      *................................................................
      * If all low order keys not entered, exit
     C                   IF        #1EJAB = ' '
     C                   GOTO      VEEXIT
     C                   END
      *
     C     KLVEBU        KLIST
     C                   KFLD                    BUEJAB                         Claim Location
      * Setup key
     C                   MOVEL     #1EJAB        BUEJAB
     C     KLVEBU        CHAIN     @BURESJ                            9091      *
      * Record found - move back any virtuals
     C                   IF        NOT *IN90
     C                   GOTO      VEEXIT
     C                   END
     C                   IF        YPMTFD <> ' '
     C                   SETOFF                                       9091
     C                   GOTO      VEEXIT
     C                   END
      * Send message 'CCM Location           NF'
     C                   MOVEL     'USR5437'     ZAMSID
     C                   EXSR      ZASNMS
     C                   MOVEL     'USR5437'     W0RTN
      *================================================================
     CSR   VEEXIT        ENDSR
      /EJECT
     CSR   XCVFA         BEGSR
      *================================================================
      * Convert absolute day to date
      *================================================================
     C                   IF        XDAY1 > 109267
     C                   ADD       2             XDAY1
     C                   ELSE
     C                   IF        XDAY1 > 36218
     C                   ADD       1             XDAY1
     C                   END
     C                   END
      * Full years (up to the date)
     C     XDAY1         DIV       365.25        XDWK1
     C                   MVR                     XDWK3
     C                   Z-ADD     XDWK1         XDINYY
      * The date is the end of a year
     C                   IF        XDWK3 = 0
     C                   Z-ADD     12            XDINMM
     C                   Z-ADD     31            XDINDD
     C                   ELSE
      * Year days up to the date
     C     XDWK1         MULT      365.25        XDWK2
     C                   SUB       XDWK2         XDAY1
     C                   ADD       1             XDINYY
      * Leap year ?
     C     XDINYY        DIV       4             XDWK1
     C                   MVR                     XDWK1
      * March 1 (relative day of the year)
     C                   IF        XDWK1 = 0
     C                   Z-ADD     60            XDWK1
     C                   ELSE
     C                   Z-ADD     59            XDWK1
     C                   END
      * Define date base month and offset day -
      *  - January (thru February)
     C                   IF        XDAY1 <= XDWK1
     C                   Z-ADD     1             XDINMM
     C                   ELSE
     C                   SUB       XDWK1         XDAY1
      *  - March (thru July)
     C                   IF        XDAY1 <= 153
     C                   Z-ADD     3             XDINMM
     C                   ELSE
      *  - August (thru December)
     C                   Z-ADD     8             XDINMM
     C                   SUB       153           XDAY1
     C                   END
      * Calculate 2 month base and offset day
     C     XDAY1         SUB       1             XDWK1
     C                   DIV       61            XDWK1
     C                   MVR                     XDAY1
     C                   ADD       1             XDAY1
     C                   MULT      2             XDWK1
     C                   ADD       XDWK1         XDINMM
     C                   END
      * Calculate date increment,
     C                   IF        XDAY1 > 31
     C                   ADD       1             XDINMM
     C                   SUB       31            XDAY1
     C                   END
     C                   Z-ADD     XDAY1         XDINDD
     C                   END
      *================================================================
     CSR   XCVFAE        ENDSR
      /EJECT
     CSR   XCVTA         BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C     XDINYY        SUB       1             XDWK1
     C     XDWK1         MULT      365.25        XDAY1
     C                   IF        XDWK1 >= 300
     C                   SUB       2             XDAY1
     C                   ELSE
     C                   IF        XDWK1 >= 100
     C                   SUB       1             XDAY1
     C                   END
     C                   END
      * (from the beginning of the year to the beginning of the month:)
     C     XDINMM        SUB       1             XDWK1
      *     ...+31*(MM-1) (for January-February) ...
     C                   IF        XDINMM < 3
     C                   MULT      31            XDWK1
     C                   ADD       XDWK1         XDAY1
     C                   ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                   MULT      30            XDWK1
     C                   ADD       XDWK1         XDAY1
      *         ...-2 (for preceding February) ...
     C                   SUB       2             XDAY1
      *         ...+1 (for preceding February, if leap year) ...
     C                   IF        XDINYY <> 100 AND
     C                             XDINYY <> 300
     C     XDINYY        DIV       4             XDWK1
     C                   MVR                     XDWK1
     C                   IF        XDWK1 = 0
     C                   ADD       1             XDAY1
     C                   END
     C                   END
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C                   IF        XDINMM < 8
     C     XDINMM        MULT      .5            XDWK1
     C                   ADD       XDWK1         XDAY1
     C                   ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C     XDINMM        ADD       1             XDWK1
     C                   MULT      .5            XDWK1
     C                   ADD       XDWK1         XDAY1
     C                   END
     C                   END
      * ...+DD (days in the month up to the ending date)
     C                   ADD       XDINDD        XDAY1
      *================================================================
     CSR   XCVTAE        ENDSR
      /EJECT
     CSR   XDADY         BEGSR
      *================================================================
      * Calculate date increment, *DAYS
      *================================================================
      * None days of week selected
     C                   IF        XDURR = 0 OR
     C                             XDWSL = 0
     C                   Z-ADD     XDAY2         XDAY1
      * Return Code: Unable to increment date.
     C                   IF        XDURR <> *ZERO
     C                   MOVEL     'Y2U0059'     W0RTN
     C                   ENDIF
     C                   GOTO      XDADYE
     C                   ENDIF
      * All days of week selected
     C                   IF        XDWSL = 7
     C     XDAY2         ADD       XDURR         XDAY1
     C                   GOTO      XDADYM
     C                   ENDIF
      * Some days of week selected
     C                   IF        XDURR >= 0
     C                   Z-ADD     1             XDSTP
     C                   ELSE
     C                   Z-ADD     -1            XDSTP
     C                   ENDIF
      * Get number of full weeks in the duration
     C     XDURR         DIV       XDWSL         XDWNB
      * Isolate the last week
     C                   MVR                     XDLSW
     C                   IF        XDLSW = 0
     C     XDWSL         MULT      XDSTP         XDLSW
     C                   SUB       XDSTP         XDWNB
     C                   ENDIF
      * Increment the date by the full weeks
     C     XDWNB         MULT      7             XDWK1
     C     XDAY2         ADD       XDWK1         XDAY1
      * Determine day of week of the beginning date
     C     XDAY2         ADD       3             YY
     C                   DIV       7             YY
     C                   MVR                     YY
     C                   IF        YY = 0
     C                   Z-ADD     7             YY
     C                   ENDIF
      * Loop: Increment the date by the last week
      * Increment the date
     C                   DOW       XDLSW <> 0
     C                   ADD       XDSTP         XDAY1
      * Increment the day of week
     C                   ADD       XDSTP         YY
      * Put day of week into the range 1-7
     C                   IF        YY = 0
     C                   Z-ADD     7             YY
     C                   ELSE
     C                   IF        YY = 8
     C                   Z-ADD     1             YY
     C                   ELSE
     C                   IF        YY = -1
     C                   Z-ADD     6             YY
     C                   ENDIF
     C                   ENDIF
     C                   ENDIF
      * Selected day of the last week has been processed
     C                   IF        YDOW(YY) = XDSEL
     C                   SUB       XDSTP         XDLSW
     C                   ENDIF
      * End of loop
     C                   ENDDO
     C     XDADYM        TAG
     C                   IF        XDINDD < 1
     C                   Z-ADD     1             XDINDD
     C                   MOVEL     'Y2U0006'     W0RTN
     C                   ENDIF
      *================================================================
     CSR   XDADYE        ENDSR
      /EJECT
     CSR   XDCK2         BEGSR
      *================================================================
      * Validate external date format
      *================================================================
     C                   MOVEL     *BLANK        W0RTN
     C                   Z-ADD     *ZERO         XDINDT
      * If external date is zero, do not check
     C     XDEXDT        CABEQ     *ZERO         XDCK2E
      *................................................................
      * Map external to internal according to date format
     C                   IF        XDDTFM = 'DMY'
     C                   Z-ADD     XDEX02        XDINDD                         DD
     C                   Z-ADD     XDEX03        XDINMM                         MM
     C                   Z-ADD     XDEX04        XDINYY                         YY
     C                   ELSE
     C                   IF        XDDTFM = 'MDY'
     C                   Z-ADD     XDEX02        XDINMM                         MM
     C                   Z-ADD     XDEX03        XDINDD                         DD
     C                   Z-ADD     XDEX04        XDINYY                         YY
     C                   ELSE
      * YMD format
     C                   Z-ADD     XDEX02        XDINYY                         YY
     C                   Z-ADD     XDEX03        XDINMM                         MM
     C                   Z-ADD     XDEX04        XDINDD                         DD
     C                   END
     C                   END
      * If YY prior to the 'cut-off' year treat as 20YY.
     C                   IF        XDINYY < XOFFYY
     C                   ADD       100           XDINYY
     C                   END
     C     YPMTFD        CABNE     *BLANK        XDCK2E
      *................................................................
      * Check months in range 1 to 12
     C     XDINMM        CABLT     1             XDCK2M
     C     XDINMM        CABGT     12            XDCK2M
      *................................................................
      * Check days in range 1 to maximum for month
     C     XDINDD        CABLT     1             XDCK2M
     C     XDINDD        CABGT     @XD(XDINMM)   XDCK2M
      *................................................................
      * Special case: leap year
     C                   IF        XDINMM = 2
     C                   IF        XDINYY <> *ZERO AND
     C                             XDINYY <> 200
     C     XDINYY        DIV       4             XDWK1
     C                   MVR                     XDWK1
     C                   ELSE
     C                   Z-ADD     1             XDWK1
     C                   END
      * Year is not leap
     C                   IF        XDWK1 <> *ZERO
     C     XDINDD        CABGT     28            XDCK2M
     C                   END
     C                   END
     C                   GOTO      XDCK2E
      *................................................................
      * Send error message
     C     XDCK2M        TAG
      * Send message '*Invalid date'
     C                   MOVEL     'Y2U0006'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   MOVEL     'Y2U0006'     W0RTN
      * Disable time portion if timestamp is validated
     C                   Z-ADD     *ZERO         XTTIM
      *================================================================
     CSR   XDCK2E        ENDSR
      /EJECT
     CSR   XDOWS         BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                   MOVEA     XDCDW         YDOW
     C                   Z-ADD     0             XDWSL
     C                   Z-ADD     1             YY
     C                   DOW       YY <= 7
     C                   IF        YDOW(YY) = XDSEL
     C                   ADD       1             XDWSL
     C                   END
     C                   ADD       1             YY
     C                   END
      *================================================================
     CSR   XDOWSE        ENDSR
      /EJECT
     CSR   XDUDY         BEGSR
      *================================================================
      * Calculate duration, *DAYS
      *================================================================
     C                   IF        XDAY1 < 1 OR
     C                             XDAY2 < 1
     C                   Z-ADD     0             XDURR
     C                   MOVEL     'Y2U0006'     W0RTN
     C                   GOTO      XDUDYE
     C                   END
      * From date2 to date1
     C                   IF        XDAY1 >= XDAY2
     C                   Z-ADD     XDAY2         XABEG
     C                   Z-ADD     XDAY1         XAEND
     C                   ELSE
      * From date1 to date2
     C                   Z-ADD     XDAY1         XABEG
     C                   Z-ADD     XDAY2         XAEND
     C                   END
      * None days of week selected
     C                   IF        XDWSL = 0
     C                   Z-ADD     0             XDURR
     C                   GOTO      XDUDYC
     C                   END
     C     XAEND         SUB       XABEG         XDURR
      * All days of week selected
     C                   IF        XDWSL = 7
     C                   GOTO      XDUDYC
     C                   END
      * Some days of week selected
     C                   DIV       7             XDURR
     C                   MVR                     XDLSW
     C                   MULT      XDWSL         XDURR
      * Determine day of week of the beginning date
     C                   IF        XDLSW <> 0
     C     XABEG         ADD       3             YY
     C                   DIV       7             YY
     C                   MVR                     YY
      * Loop: Increment the date by the last week
      * Increment the day of week
     C                   DOW       XDLSW > 0
     C                   ADD       1             YY
     C                   SUB       1             XDLSW
      * Put day of week into the range 1-7
     C                   IF        YY = 8
     C                   Z-ADD     1             YY
     C                   END
      * Selected day of the last week has been processed
      * Increment duration
     C                   IF        YDOW(YY) = XDSEL
     C                   ADD       1             XDURR
     C                   END
      * End of loop
     C                   END
     C                   END
     C     XDUDYC        TAG
      * Return Code: Unable to calculate duration
     C                   IF        XDURR = 0
     C                   MOVEL     'Y2U0060'     W0RTN
     C                   ELSE
     C                   EVAL      W0RTN = ' '
     C                   END
      *================================================================
     CSR   XDUDYE        ENDSR
      /EJECT
     CSR   XDVC2T        BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                   Z-ADD     0             XDEX01                         CC
     C                   IF        XDDTFM = 'DMY'
     C                   Z-ADD     XDINDD        XDEX02                         DD
     C                   Z-ADD     XDINMM        XDEX03                         MM
     C                   Z-ADD     XDINYY        XDEX04                         YY
     C                   ELSE
     C                   IF        XDDTFM = 'MDY'
     C                   Z-ADD     XDINMM        XDEX02                         MM
     C                   Z-ADD     XDINDD        XDEX03                         DD
     C                   Z-ADD     XDINYY        XDEX04                         YY
     C                   ELSE
      * YMD format
     C                   Z-ADD     XDINYY        XDEX02                         YY
     C                   Z-ADD     XDINMM        XDEX03                         MM
     C                   Z-ADD     XDINDD        XDEX04                         DD
     C                   END
     C                   END
      *================================================================
     CSR   XDVC2E        ENDSR
      /EJECT
     CSR   Y0SET         BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR   Y0EXIT        ENDSR
      /EJECT
     CSR   Y1SET         BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR   Y1EXIT        ENDSR
      /EJECT
     CSR   Y8TST         BEGSR
      *================================================================
      * Test cursor
      *================================================================
      * KEY Screen
     C                   IF        @#DFMT = '#RCDKEY'
     C                   Z-ADD     @#RWCL        ZINPOS
     C     ZINPOS        DIV       256           W0CRW
     C                   MVR                     W0CCL
     C                   EVALR     W0CFL = ' '
     C                   Z-ADD     1             F
     C     ZINPOS        LOOKUP    W0END(F)                           96  96    LE
     C                   IF        *IN96 AND
     C                             ZINPOS >= W0BEG(F)
     C                   MOVEL     W0NAM(F)      W0CFL
     C                   ENDIF
     C                   ENDIF
      * DETAIL Screen
     C                   IF        @#DFMT = '#RCDDTL1'
     C                   Z-ADD     @#RWCL        ZINPOS
     C     ZINPOS        DIV       256           W0CRW
     C                   MVR                     W0CCL
     C                   EVALR     W0CFL = ' '
     C                   Z-ADD     1             F
     C     ZINPOS        LOOKUP    W1END(F)                           96  96    LE
     C                   IF        *IN96 AND
     C                             ZINPOS >= W1BEG(F)
     C                   MOVEL     W1NAM(F)      W0CFL
     C                   ENDIF
     C                   ENDIF
      *================================================================
     CSR   Y8EXIT        ENDSR
      /EJECT
     CSR   Y9CLR         BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR   Y9EXIT        ENDSR
      /EJECT
     CSR   ZASNMS        BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C                   IF        ZAPGMQ = ' '
     C                   MOVEL     ##PGM         ZAPGMQ
     C                   END
      * If no message file specified, use default
     C                   IF        ZAMSGF = ' '
     C                   MOVEL     ZADFMF        ZAMSGF
     C                   END
     C                   CALL      'Y2SNMGC'
     C                   PARM                    ZAPGMQ                         Program queue
     C                   PARM                    ZAPGRL                         Rel queue
     C                   PARM                    ZAMSID                         Message ID
     C                   PARM                    ZAMSGF                         Message file
     C                   PARM                    ZAMSDA                         Message data
     C                   PARM                    ZAMSTP                         Message type
     C                   PARM      'Y'           YILE
      * Clear all fields for default mechanism next time
     C                   EVAL      ZAPGMQ = ' '
     C                   EVAL      ZAPGRL = ' '
     C                   EVAL      ZAMSID = ' '
     C                   EVAL      ZAMSGF = ' '
     C                   EVAL      ZAMSDA = ' '
     C                   EVAL      ZAMSTP = ' '
      *================================================================
     CSR   ZAEXIT        ENDSR
      /EJECT
     CSR   ZDVPMT        BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                   EVAL      YPMTFD = ' '
     C                   Z-ADD     *ZERO         YAFSCH
     C                   Z-ADD     *ZERO         YPMRRN
      *
      *
      * Extract cursor row and column
     C                   IF        *IN04
     C     @#RWCL        DIV       256           ZHCSRW
     C                   MVR                     ZHCSCL
      *
      * Save cursor position for redisplay
     C                   Z-ADD     ZHCSRW        ZZCSRW                         Row
     C                   Z-ADD     ZHCSCL        ZZCSCL                         Column
      *
     C                   IF        ZHCSRW = 004 AND
     C                             ZHCSCL >= 019 AND
     C                             ZHCSCL <= 025 AND
     C                             @#DFMT = '#RCDKEY'
     C                   MOVEL     '#1C0C7'      YPMTFD                         Claim Number
     C                   END
      *
     C                   IF        ZHCSRW = 012 AND
     C                             ZHCSCL = 035 AND
     C                             @#DFMT = '#RCDDTL1'
     C                   MOVEL     '#1CQSX'      YPMTFD                         Claim Called in
     C                   END
      *
     C                   IF        ZHCSRW = 016 AND
     C                             ZHCSCL >= 035 AND
     C                             ZHCSCL <= 037 AND
     C                             @#DFMT = '#RCDDTL1'
     C                   MOVEL     '#1ZLCD'      YPMTFD                         Salesperson to
     C                   END
      *
     C                   IF        ZHCSRW = 018 AND
     C                             ZHCSCL = 035 AND
     C                             @#DFMT = '#RCDDTL1'
     C                   MOVEL     '#1CNSX'      YPMTFD                         Product Inspect
     C                   END
      *
     C                   IF        ZHCSRW = 019 AND
     C                             ZHCSCL = 035 AND
     C                             @#DFMT = '#RCDDTL1'
     C                   MOVEL     '#1COSX'      YPMTFD                         Rep Inspection
     C                   END
      *
     C                   IF        ZHCSRW = 020 AND
     C                             ZHCSCL >= 035 AND
     C                             ZHCSCL <= 036 AND
     C                             @#DFMT = '#RCDDTL1'
     C                   MOVEL     '#1UBSX'      YPMTFD                         AC Full Return
     C                   END
      *
      * Error if user defined prompting is not specified.
     C                   IF        YPMTFD = ' '
     C                   IF        W0PMT = 'N'
     C                   MOVEL     '*NONE'       YPMTFD
     C                   MOVEL     'Y'           W0HLP
     C                   MOVEL     'Y'           ZAFSMS
      * Send error message.
     C                   MOVEL     'Y2U0101'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END
     C                   END
      *
     C                   END
      *================================================================
     CSR   ZDEXIT        ENDSR
      /EJECT
     CSR   ZHHPKY        BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                   MOVEL     'Y'           W0HLP
      *
      * Extract cursor row and column
     C     @#RWCL        DIV       256           ZHCSRW                         Row
     C                   MVR                     ZHCSCL                         Column
      *
      * Save cursor position for redisplay
     C                   Z-ADD     ZHCSRW        ZZCSRW                         Row
     C                   Z-ADD     ZHCSCL        ZZCSCL                         Column
      *
      *
     C                   CALL      'YDDSHPR'
     C                   PARM      ##PGM         W0HPMB                         Help text sourc
     C                   PARM      *BLANK        YYHPFL                         Help text file
     C                   PARM      *BLANK        YYHPLB                         Help text libra
     C                   PARM                    W0RTN
     C                   PARM      '*CSRLOC'     YYHLVN                         Help label
     C                   PARM      '*NORMAL'     YYUSOP                         Options
     C                   PARM      ZHCSRW        YYRW                           Row
     C                   PARM      ZHCSCL        YYCL                           Column
     C                   PARM      1             YYLGCT                         # of grps
     C                   PARM      W0GRP         YYLGVN                         Label grps
      *
      * Clear set cursor DDS indicator
     C  N94              MOVEL     'OFF'         WCSRLC
     C  N94              SETON                                        94        *
      *================================================================
     CSR   ZHEXIT        ENDSR
      /EJECT
     CSR   ZXEXPG        BEGSR
      *================================================================
      * Cancel and exit from key screen
      *================================================================
      * USER: Exit program processing
      * CASE: KEY.*CMD key is CF03
     C                   IF        *IN03
     C                   MOVEL     'EXT'         P4T6SX                         Clm Program USR
     C                   MOVEL     W0RTN         P0RTN                          *Return code
     C                   EXSR      ZYEXPG
     C                   END                                                    *FI
     C                   EVAL      P0RTN = ' '
     C                   EXSR      ZYEXPG
      *================================================================
     CSR   ZXEXIT        ENDSR
      /EJECT
     CSR   ZYEXPG        BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                   SETON                                        LR
      *
      * Exit program
     C                   RETURN
      *
      *================================================================
     CSR   ZYEXIT        ENDSR
      /EJECT
     CSR   ZZINIT        BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C                   IF        W0ICL = ' '
     C                   MOVEL     'Y'           W0ICL                          *Initial call
     C                   ELSE
     C                   MOVEL     'N'           W0ICL
     C                   END
     C                   EVALR     P0RTN = ' '
     C                   EVALR     W0RTN = ' '
     C                   EVAL      W0RSL = ' '
     C                   EVAL      W0RSF = ' '
     C                   MOVEL     *ZEROS        W0RTW
     C                   MOVEL     '400'         W0ENV
      *
      * Clear all neither parameters
     C                   EVAL      P3AJCD = ' '                                 Warehouse Code
     C                   Z-ADD     *ZERO         P3AIC3                         Company Number
     C                   EVAL      P3DNCD = ' '                                 Application Cod
     C                   EVAL      P3BCCD = ' '                                 Salesperson Cod
     C                   EVAL      P3I6ST = ' '                                 Allow Multi_Com
     C                   EVAL      P3MPNA = ' '                                 Default Printer
      *
      * Retrieve job attributes
     C                   CALL      'Y2RTJCR'
     C                   PARM                    PGMDS
      * Setup job date/time
     C                   Z-ADD     ##SD7         ##JDT
     C                   TIME                    ##JTM
      * Update screen time
     C                   TIME                    ##TME
      * Define work field Unused Parm - Text    USR
     C                   EVAL      WUOSTX = ' '
      * Define work field Unused Parm - Date    USR
     C                   Z-ADD     *ZERO         WUMTDT
      * Define work field One Time Selection
     C                   EVAL      WUOVST = ' '
      * Define work field Unused Parm - CD7,0   USR
     C                   Z-ADD     *ZERO         WUDVC7
      * Define work field CD3 Ext Numeric Key
     C                   EVAL      WUDMCD = ' '
      * Define work field CD7 Ext Numeric Key
     C                   EVAL      WUEOCD = ' '
      * Obtain default message file
     C     *DTAARA       DEFINE    CAMGFLA       ZADFMF
     C                   IN        ZADFMF
      * Define work field USR First Position
     C                   EVAL      WUI3ST = ' '
      * Define work field Record was Added
     C                   EVAL      WUN1ST = ' '
      * Define work field Claim Company Number
     C                   Z-ADD     *ZERO         WUBIC3
      * Define work field Claim Order Number
     C                   Z-ADD     *ZERO         WUALNX
      * Define work field Unused Parm - CD7     USR
     C                   Z-ADD     *ZERO         WUY4CD
      * Define work field BLANK
     C                   EVAL      WUGSTX = ' '
     C                   MOVE(P)   '0'           XDTSDL
     C                   MOVEL     @CN(006)      XDTSDL
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WAC0C7                         Claim Number
     C                   Z-ADD     *ZERO         WABIC3                         Claim Company N
     C                   Z-ADD     *ZERO         WAALNX                         Claim Order Num
     C                   Z-ADD     *ZERO         WARMNB                         Load ID
     C                   Z-ADD     *ZERO         WAC3C7                         Claim Ship to C
     C                   Z-ADD     *ZERO         WAAYVL                         Claim Amount
     C                   Z-ADD     *ZERO         WAAZVL                         Claim Net Loss
     C                   Z-ADD     *ZERO         WAA0VL                         Claim Approved
     C                   Z-ADD     *ZERO         WAA1VL                         Lab Fee
     C                   Z-ADD     *ZERO         WAMLDT                         Resolve Claim b
     C                   Z-ADD     *ZERO         WAEJDT                         Actual Delivery
     C                   Z-ADD     *ZERO         WAMMDT                         Claim Called in
     C                   Z-ADD     *ZERO         WAMNDT                         Claim Entry Dat
     C                   Z-ADD     *ZERO         WABGTM                         Claim Entry Tim
     C                   Z-ADD     *ZERO         WAC4C7                         Resale Ship to
     C                   Z-ADD     *ZERO         WANFDT                         Sales Approved
     C                   Z-ADD     *ZERO         WABJTM                         Sales Approved
     C                   Z-ADD     *ZERO         WAMODT                         Approved_Denied
     C                   Z-ADD     *ZERO         WABHTM                         Approved_Denied
     C                   Z-ADD     *ZERO         WAMPDT                         Memo Created Da
     C                   Z-ADD     *ZERO         WABITM                         Memo Created Ti
     C                   Z-ADD     *ZERO         WAEOVL                         Approved Net Lo
     C                   Z-ADD     *ZERO         WAEPVL                         Total Expense A
     C                   Z-ADD     *ZERO         WAP6DT                         Memo Post Date
     C                   Z-ADD     *ZERO         WACRTM                         Memo Post Time
     C                   Z-ADD     *ZERO         WAYSNX                         TFS Batch Numbe
     C                   Z-ADD     *ZERO         WAF7PC                         Avg TF Responsi
     C                   Z-ADD     *ZERO         WAF8PC                         Avg SBF Respons
     C                   Z-ADD     *ZERO         WAF9PC                         STF Responsibil
     C                   Z-ADD     *ZERO         WAEQVL                         FPR ID
     C                   Z-ADD     *ZERO         WAERVL                         AC Unused Value
     C                   Z-ADD     *ZERO         WAESVL                         AC Unused Value
     C                   Z-ADD     *ZERO         WAETVL                         AC Unused Value
     C                   Z-ADD     *ZERO         WAGAPC                         AC Unused Pct 1
     C                   Z-ADD     *ZERO         WAGBPC                         AC Unused Pct 2
     C                   Z-ADD     *ZERO         WAMJDT                         Create Date
     C                   Z-ADD     *ZERO         WABETM                         Create Time
     C                   Z-ADD     *ZERO         WAMKDT                         Change Date
     C                   Z-ADD     *ZERO         WABFTM                         Change Time
     C                   MOVEL     XDTSDL        WABVTS                         Created Dt Tm
     C                   MOVEL     XDTSDL        WABWTS                         Updated Dt Tm
      * Clear all neither parameters
      * CRT A/R Claim          CR - AR Claim Header  * 
     C                   Z-ADD     *ZERO         MKMJDT                         Create Date
     C                   Z-ADD     *ZERO         MKBETM                         Create Time
     C                   Z-ADD     *ZERO         MKMKDT                         Change Date
     C                   Z-ADD     *ZERO         MKBFTM                         Change Time
     C                   MOVEL     XDTSDL        MKBVTS                         Created Dt Tm
     C                   MOVEL     XDTSDL        MKBWTS                         Updated Dt Tm
      * Define work field Claim Reference # USR
     C                   Z-ADD     *ZERO         WUBRNY
      * Define work field Description
     C                   EVAL      WUAUNA = ' '
      * Define work field USR Description 40
     C                   EVAL      WUDSC4 = ' '
      * Define work field USR Description 40   2
     C                   EVAL      WUDE40 = ' '
      * Flag no *SET CURSOR in the program
     C                   MOVE      'N'           YSETCS
     C                   EVALR     WCSRLC = ' '
      * Define *Synon program work fields
     C                   EVAL      W0CFL = ' '                                  *Cursor field
     C                   Z-ADD     *ZEROS        W0CRW                          *Cursor row
     C                   Z-ADD     *ZEROS        W0CCL                          *Cursor column
      * Move main file information to JOB context
     C                   MOVE      @1FFL         ZZFFL                          Main file name
     C                   MOVE      @1FLB         ZZFLB                          Main file lib
     C                   MOVE      @1FMB         ZZFMB                          Main file mbr
     C                   CALL      'Y2QLVNR'
     C                   PARM                    ZZFFL
     C                   PARM                    ZZFLB
     C                   PARM                    ZZFQL                          LIBRARY/FILE
      * Dummy move for compiler
     C                   MOVE      '0'           @CN#(1)
     C                   MOVEL     @CN(1)        @CN(1)
     C                   MOVEL     'Y'           W0PMT
      * Define local variables for subroutine SARVGN.
     C                   Z-ADD     *ZERO         WL0001
     C                   Z-ADD     *ZERO         WL0002
     C                   Z-ADD     *ZERO         WL0003
     C                   EVAL      WL0004 = ' '
     C                   EVAL      WL0005 = ' '
     C                   EVAL      WL0006 = ' '
     C                   EVAL      WL0007 = ' '
     C                   Z-ADD     *ZERO         WL0008
     C                   Z-ADD     *ZERO         WL0009
     C                   EVAL      WL0010 = ' '
     C                   Z-ADD     *ZERO         WL0011
     C                   Z-ADD     *ZERO         WL0012
     C                   EVAL      WL0013 = ' '
      * Define local variables for subroutine SBRVGN.
     C                   EVAL      WL0014 = ' '
     C                   EVAL      WL0015 = ' '
      * Define local variables for subroutine SCRVGN.
     C                   Z-ADD     *ZERO         WL0016
     C                   Z-ADD     *ZERO         WL0017
     C                   Z-ADD     *ZERO         WL0018
     C                   EVAL      WL0019 = ' '
     C                   EVAL      WL0020 = ' '
     C                   Z-ADD     *ZERO         WL0021
     C                   EVAL      WL0022 = ' '
     C                   Z-ADD     *ZERO         WL0023
     C                   Z-ADD     *ZERO         WL0024
     C                   EVAL      WL0025 = ' '
     C                   Z-ADD     *ZERO         WL0026
     C                   EVAL      WL0027 = ' '
     C                   EVAL      WL0028 = ' '
      * Define local variables for subroutine SERVGN.
     C                   Z-ADD     *ZERO         WL0029
     C                   Z-ADD     *ZERO         WL0030
     C                   EVAL      WL0031 = ' '
      * Define local variables for subroutine SFRVGN.
     C                   Z-ADD     *ZERO         WL0032
     C                   Z-ADD     *ZERO         WL0033
     C                   Z-ADD     *ZERO         WL0034
     C                   Z-ADD     *ZERO         WL0035
      * Define local variables for subroutine SGRVGN.
     C                   EVAL      WL0036 = ' '
     C                   EVAL      WL0037 = ' '
      * Define local variables for subroutine SIRVGN.
     C                   Z-ADD     *ZERO         WL0038
     C                   Z-ADD     *ZERO         WL0039
     C                   Z-ADD     *ZERO         WL0040
     C                   Z-ADD     *ZERO         WL0041
      * Define local variables for subroutine SORVGN.
     C                   EVAL      WL0042 = ' '
     C                   EVAL      WL0043 = ' '
     C                   Z-ADD     *ZERO         WL0044
     C                   EVAL      WL0045 = ' '
      * Define null work field Event Code
     C                   EVAL      YN0001 = ' '
      * Define local work field Billing Activity Type
     C                   EVAL      YL0001 = ' '
      * Define local work field Claim is Warning Err Usr
     C                   EVAL      YL0002 = ' '
      * Define local work field Salesperson to Rvw Claim
     C                   EVAL      YL0003 = ' '
      * Define local work field Company Number
     C                   Z-ADD     *ZERO         YL0004
      * Define local work field Warehouse Code
     C                   EVAL      YL0005 = ' '
      * Define local work field First Time Flag
     C                   EVAL      YL0006 = ' '
      * Obtain system date format
     C     *DTAARA       DEFINE    Y2DTFMA       XDDTFM
     C                   IN        XDDTFM
      * Retrieve the 'cut-off' year YY: 19YY-1999,2000-20(YY-1).
     C     *DTAARA       DEFINE    Y2CTOFF       XOFF
     C                   IN        XOFF
      * *DTAARA = *COMPANY N
     C     *DTAARA       DEFINE    YYCOTXA       ##CMP
     C                   IN        *DTAARA
      *................................................................
      * Select initial mode
      * Add mode
     C                   IF        @1NROP = *ZERO
     C                   MOVEL     'ADD'         W0PMD
     C                   ELSE
      * Change mode
     C                   MOVEL     'CHG'         W0PMD
     C                   END
     C                   EVAL      W0GRP = ' '
      * USER: Initialize program
      * *** Setup Security & Company Title ***
     C                   EVAL      P3DNCD = ' '                                 Application Cod
     C                   MOVEL     'OMS'         P3DNCD                         Application Cod
      *
     C                   EVAL      WN0129 = ' '                                 User Profile Na
      *
      * VAL Set Inter. Access  IF
     C                   MOVEL     ##USR         WN0129                         User Profile Na
      *
     C                   EVAL      WN0130 = ' '                                 User Code Model
      *
      * VAL User/Application   IF
      * RMC 5/11/09 Rtv default company from user profile --
      *   Override user code model company if it exists
      * RTV Program Setup w/Co RT - User Profile Control  * 
     C                   EXSR      SNRVGN
      * User Profile Record Not found
      * CASE: PGM.*Return code is *Record does not exist
      * SET Message Queue Dest US - /UT User Source  * 
     C                   IF        W0RTN = @CN(004)
     C                   MOVEL     '*PRV '       ZAPGRL                         PREVIOUS
      * Setup message data for message
     C                   MOVEL     WN0129        ZA0010                         User Profile Na
     C                   MOVEL     P3DNCD        ZA0011                         Application Cod
      * Send message 'Application access denied'
     C                   MOVEL     'USR0810'     ZAMSID
     C                   MOVEL     '*PRV '       ZAPGRL                         Rel queue
     C                   MOVEL     '*COMP  '     ZAMSTP                         Message type
     C                   EXSR      ZASNMS
      *
     C                   MOVEL     'Y2U9999'     P0RTN                          *Return code
     C                   EXSR      ZYEXPG
     C                   END                                                    *FI
      * CASE: PAR.User Code Model is equal to blank
      * RTV Appl. Profile      RT - User Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                   IF        WN0130 = ' '
     C                   MOVEL(P)  WN0129        WL0042                         User Profile Na
     C                   MOVEL(P)  P3DNCD        WL0043                         Application Cod
     C                   EXSR      SORVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0044        P3AIC3                         Company Number
     C                   MOVEL(P)  WL0045        YL0005                         Warehouse Code
     C                   ELSE
      * CASE: *OTHERWISE
      * RTV Appl. Profile      RT - User Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  WN0130        WL0042                         User Profile Na
     C                   MOVEL(P)  P3DNCD        WL0043                         Application Cod
     C                   EXSR      SORVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0044        P3AIC3                         Company Number
     C                   MOVEL(P)  WL0045        YL0005                         Warehouse Code
     C                   END                                                    *FI
     C                   MOVEL     YL0005        P3AJCD                         Warehouse Code
      * Return code when not normal for Application Profile
      * CASE: PGM.*Return code is *Normal
     C                   IF        W0RTN = ' '
     C                   ELSE
      * CASE: *OTHERWISE
      * SET Message Queue Dest US - /UT User Source  * 
     C                   MOVEL     '*PRV '       ZAPGRL                         PREVIOUS
      * Setup message data for message
     C                   MOVEL     WN0129        ZA0012                         User Profile Na
     C                   MOVEL     P3DNCD        ZA0013                         Application Cod
      * Send message 'Application access denied'
     C                   MOVEL     'USR0810'     ZAMSID
     C                   MOVEL     '*PRV '       ZAPGRL                         Rel queue
     C                   MOVEL     '*COMP  '     ZAMSTP                         Message type
     C                   EXSR      ZASNMS
      *
     C                   MOVEL     'Y2U9999'     P0RTN                          *Return code
     C                   EXSR      ZYEXPG
     C                   END                                                    *FI
      * Override company with User profile control's company if found
      * CASE: LCL.Company Number is not equal to zero
     C                   IF        YL0004 <> 0
     C                   Z-ADD     YL0004        P3AIC3                         Company Number
      * Get prod warehouse, if the appl got a warehouse
      * CASE: LCL.Warehouse Code is Not Blanks
      * RTV Prod Whse for Co  XF - Warehouse  * 
     C                   IF        YL0005 <> ' '
     C                   CALL      'PNKDXFR'                            90      RTV Prod Whse f
     C                   PARM      *BLANK        W0RTN
     C     P3AJCD        PARM      *BLANK        WQ0020                         Warehouse Code
     C                   PARM      YL0004        WQ0021                         Shipping Compan
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PNKDXFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        99        *
     C                   END
     C                   END                                                    *FI
     C                   END                                                    *FI
      * SET Screen Headings    IF
      * RTV Applic. Group Desc RT - Application  * 
     C                   EXSR      SPRVGN
     C                   EVAL      WUDSC4 = ' '                                 USR Description
     C                   MOVEL     WUAUNA        WUDSC4                         USR Description
      * CLC Center Txt Str 40  US - /UT User Source  * 
     C                   MOVEA     WUDSC4        UCT                            LOAD ARRAY
     C                   Z-ADD     40            UX                2 0          SET COUNTER
     C     UX            DOWGT     0
     C     UCT(UX)       IFEQ      ' '
     C                   SUB       1             UX
     C                   ELSE
     C                   Z-ADD     UX            UXH               2 0
     C                   Z-ADD     0             UX
     C                   END
     C                   END
     C     40            SUB       UXH           UX
     C     UX            DIV       2             UX
     C     UX            IFGT      0
     C                   MOVE      *BLANKS       UCT
     C                   MOVEA     WUDSC4        UCT(UX)
     C                   END
     C                   MOVEA     UCT           WUDE40                         LOAD OUTPUT
      * MOV Appl Desc-Co Head  US - /UT User Source  * 
     C                   MOVE      WUDE40        ##CMP            40
     C                   MOVEL     'Y'           YL0006                         First Time Flag
      * CASE: PGM.*Program mode is *ADD
     C                   IF        W0PMD = 'ADD'
     C                   Z-ADD     *ZERO         P1RMNB                         Load ID
      * ** Default Claim Co# to security Co# if multi-co = No   2/22/06 L
      * CASE: PAR.Allow Multi-Company is no
     C                   IF        P3I6ST = 'N'
     C                   Z-ADD     P3AIC3        P1BIC3                         Claim Company N
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   Z-ADD     P1BIC3        WUBIC3                         Claim Company N
     C                   Z-ADD     P1ALNX        WUALNX                         Claim Order Num
     C                   MOVEL     'N'           WUOVST                         One Time Select
      *================================================================
     CSR   ZZEXIT        ENDSR
** @XD
312931303130313130313031
** KEY Screen: Field position and name array
01043
** W0END
01049
** W0NAM
V1C0C7
** W1BEG
00801010590157101603017940182701859
02083023390259502606028510288303107
03118033630361903875041310414204387
04643046540489904910051550541105422
** W1END
00812010650157301615018230183301871
02089023450260102630028650288803107
03142033700364803882041330416904394
04643046780489904934051560541205434
** W1NAM
#DRQTX    V1C0C7    V1BIC3    #1AYVL    #DQ0TX    #DCONB    #1AZVL
V1ALNX    #1RMNB    V1C3C7    #1RFTX    #DBCNA    #DAHNZ    #1CQSX
#1PPTX    V1MMDT    #1PQTX    V1EJDT    #1ZLCD    #DP9NA    V1MLDT
#1CNSX    #1PLTX    #1COSX    #1PMTX    #1UBSX    #1UASX    #DDGU1
** @CN
00001 Invoice . . . . . . . . .
00002  . . . . .
00003 Accounting
00004 Y2U0005
00005 USR0752
00006 0001-01-01-00.00.00.00000
