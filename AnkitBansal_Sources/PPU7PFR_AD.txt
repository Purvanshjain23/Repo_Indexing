// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PPU7PFR
// ?Date: 14.08.2025 Time: 12:06:41
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

// PAR.System Value Numeric = PAR.PRT Number of Copies
PAR.System_Value_Numeric = PAR.PRT_Number_of_Copies;

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('C/S');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


// PAR.PRT Night Queue Run Sts = CND.no
PAR.PRT_Night_Queue_Run_Sts = 'N';

// PAR.PRT Printer Device = CND.Not entered
PAR.PRT_Printer_Device = *BLANK;

//?USER: Record selection processing

CASE;

// IF PAR.Company Number is not equal to zero
IF PAR.Company_Number <> *ZERO;

CASE;

// IF DB1.Company Number NE PAR.Company Number
IF DB1.Company_Number <> PAR.Company_Number;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

CASE;

// IF DB1.Item Category Number NE PAR.Item Category Number
IF DB1.Item_Category_Number <> PAR.Item_Category_Number;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?USER: Process top of page

// TOP.Item Category Number = PAR.Item Category Number
TOP_Item_Category_Number = PAR.Item_Category_Number;

// WRK.Item Category Number Usr = CON.05
WRK.Item_Category_Number_Usr = 05;

// WRK.Item Category Number Txt = PAR.Item Category Number
WRK.Item_Category_Number_Txt = PAR.Item_Category_Number;

CASE;

// IF PAR.Item Category Number is G/L Sub Code
IF PAR.Item_Category_Number = 4;

// TOP.Description 1 usr = CON.G/L Sub Codes
TOP_Description_1_usr = 'G/L Sub Codes';

// IF PAR.Item Category Number is EQ Six
IF PAR.Item_Category_Number = 6;

// TOP.Description 1 usr = CON.Primal Group Report
TOP_Description_1_usr = 'Primal Group Report';

// IF WRK.Item Category Number Usr EQ PAR.Item Category Number
IF WRK.Item_Category_Number_Usr = PAR.Item_Category_Number;

// TOP.Description 1 usr = CON.Item Structure Sub Class
TOP_Description_1_usr = 'Item Structure Sub Class';

// IF *OTHERWISE
IF *OTHERWISE;

// TOP.Description 1 usr = CONCAT(CON.Item Category,WRK.Item Category Number Txt,CON.1)
TOP_Description_1_usr = 'Item Category' + WRK.Item_Category_Number_Txt (1);

ENDIF;

//?USER: Print required level headings

CASE;

IF NEW Company_Number;
EXECUTE FUNCTION(Company Name DRV) TYPE(DRVFLD)                                 AC1532476;
PARAMETER(CUR.Company_Name_DRV);
PARAMETER(CUR.Company_Number);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Company_Name_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


// Print Company Number header format
PRINT Company Number header format;

ENDIF;

// SUPPRESSED PRINT Item Category Number header format

//?USER: Print required level totals

// SUPPRESSED PRINT Item Category Number totals format

// SUPPRESSED PRINT Company Number totals format

