// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PWIJDFR
// ?Date: 14.08.2025 Time: 02:56:34
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modification history
DO;

//? 4/15/2019 JBB E14855 - Repayment Error: Payment Date = 0
//?                        Function modified to pass back the highest
//?                        Kill Date selected and count.
//? 1/31/2019 JBB E14234 - Repayment Enhancements Phase 2
//?                        Function created.  This function allows
//?                        the user to select 1 or more Tattoo
//?                        Header records for repayment.
//?11/02/2020 ISE H16853 - CHANGE BUY ORDER NUMBER FIELD LENGTH FROM 5 TO 7
ENDDO;

// PGM.*Scan limit = CND.No Max
PGM.*Scan_limit = 999999;

// PAR.Count USR 2 = CON.*ZERO
PAR.Count_USR_2 = *ZERO;

// LCL.TH Hog Class Type = CND.Market
LCL.TH_Hog_Class_Type = 'M';

// LCL.TH Kill Date = CON.*ZERO
LCL.TH_Kill_Date = *ZERO;

//?USER: Initialize subfile control

//?Set Toggle description
CASE;

// IF LCL.TH Hog Class Type is Market
IF LCL.TH_Hog_Class_Type = 'M';

// CTL.Text 6 USR = CON.Market
CTL.Text_6_USR = 'Market';

//?Set Toggle description
// IF *OTHERWISE
IF *OTHERWISE;

// CTL.Text 6 USR = CON.Resale
CTL.Text_6_USR = 'Resale';

ENDIF;

// CTL.TH Hog Class Type = LCL.TH Hog Class Type
CTL.TH_Hog_Class_Type = LCL.TH_Hog_Class_Type;

//?USER: Initialize subfile record from DBF record

//?Record selection
CASE;

// IF RCD.TH Hog Class Type NE LCL.TH Hog Class Type
IF RCD.TH_Hog_Class_Type <> LCL.TH_Hog_Class_Type;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

//?Record selection
// IF RCD.TH Payment Sts is Unpaid Producer
IF RCD.TH_Payment_Sts = 'ML'/'SL'/'SC'/'IC'/'IL'/*BLANK;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

//?Record selection
// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(Chk Exists            RT) TYPE(RTVOBJ) FILE(PKDOREP)           AB1347884;
PARAMETER('REPAY');
PARAMETER(RCD.BOH_Company_Number);
PARAMETER(RCD.BOH_Buy_Order_Number);
PARAMETER(RCD.BOL_Load_Number);
PARAMETER(RCD.TH_Tattoo_Number);
PARAMETER(RCD.TH_Kill_Date);
PARAMETER(PGM.*Return_code);
{
 //?USER: Processing if Data record not found

 // PAR.*Return code = CND.*Record does not exist
 PAR.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 // PAR.*Return code = CND.*Record already exists
 PAR.*Return_code = 'Y2U0003';

}


//?If record already exists, do not select it
CASE;

// IF PGM.*Return code is *Record already exists
IF PGM.*Return_code = 'Y2U0003';

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?USER: Process subfile control (Pre-confirm)

// LCL.Count USR 2 = CON.*ZERO
LCL.Count_USR_2 = *ZERO;

//?If F10 pressed for Toggle
CASE;

// IF CTL.*CMD key is Toggle
IF CTL.*CMD_key = '10';

//?Toggle Hog Class Type
CASE;

// IF LCL.TH Hog Class Type is Market
IF LCL.TH_Hog_Class_Type = 'M';

// LCL.TH Hog Class Type = CND.Resale
LCL.TH_Hog_Class_Type = 'R';

//?Toggle Hog Class Type
// IF *OTHERWISE
IF *OTHERWISE;

// LCL.TH Hog Class Type = CND.Market
LCL.TH_Hog_Class_Type = 'M';

ENDIF;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?USER: Process subfile record (Pre-confirm)

// LCL.Count USR 2 = LCL.Count USR 2 + CON.1
LCL.Count_USR_2 = LCL.Count_USR_2 + 1;

//?USER: Final processing (Pre-confirm)

//?If selection counter = 0, defer confirmation screen
CASE;

// IF LCL.Count USR 2 is Not Entered
IF LCL.Count_USR_2 = *ZERO;

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

//?USER: Process subfile record (Post-confirm)

//?If record selected, create a Tattoo Header Job Sel record
CASE;

// IF RCD.*SFLSEL is *Select
IF RCD.*SFLSEL = '1'/'1';

//?Processing based on Hog Class Type
CASE;

// IF RCD.TH Hog Class Type is Market
IF RCD.TH_Hog_Class_Type = 'M';

EXECUTE FUNCTION(Rtv for BO/Tto for Repay) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1349872;
PARAMETER(RCD.BOH_Company_Number);
PARAMETER(RCD.BOH_Buy_Order_Number);
PARAMETER(RCD.BOL_Load_Number);
PARAMETER(RCD.TH_Kill_Date);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Chk Exists            RT) TYPE(RTVOBJ) FILE(PKDOREP)           AB1347884;
 PARAMETER('REPAY');
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(PGM.*Return_code);
 {
  //?USER: Processing if Data record not found

  // PAR.*Return code = CND.*Record does not exist
  PAR.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  // PAR.*Return code = CND.*Record already exists
  PAR.*Return_code = 'Y2U0003';

 }

 //?If record does not exist in Tattoo Repayment Detail file
 CASE;

 // IF PGM.*Return code is *Record does not exist
 IF PGM.*Return_code = 'Y2U0005';

 //?Only create records for Market Hogs
 CASE;

 // IF DB1.TH Hog Class Type is Market
 IF DB1.TH_Hog_Class_Type = 'M';

 // LCL.Kill Date Usr = PAR.TH Kill Date + CON.-5 *DAYS
 LCL.Kill_Date_Usr = DATEINCR(PAR.TH_Kill_Date '-5' 'DY' 1111111 'NONE' 'N' 1);

 //?If Kill Date is within the last 5 days, create record
 CASE;

 // IF DB1.TH Kill Date GE LCL.Kill Date Usr
 IF DB1.TH_Kill_Date >= LCL.Kill_Date_Usr;

 EXECUTE FUNCTION(Crt Tattoo Header Job CO) TYPE(CRTOBJ) FILE(PKDOREP)           AB1177567;
 PARAMETER('REPAY');
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(DB1.PL_Location_Code);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?Execute internal function

   // PAR.RS Record Status = CND.Active
   PAR.RS_Record_Status = 'A';

   // PAR.RS User Added = JOB.*USER
   PAR.RS_User_Added = JOB.*USER;

   // PAR.RS Date Added = JOB.*Job date
   PAR.RS_Date_Added = JOB.*Job_date;

   // PAR.RS Time Added = JOB.*Job time
   PAR.RS_Time_Added = JOB.*Job_time;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

  }

 }

 ENDIF;

 ENDIF;

 ENDIF;

}


// PAR.Count USR 2 = PAR.Count USR 2 + CON.1
PAR.Count_USR_2 = PAR.Count_USR_2 + 1;

//?If RCD Kill Date > LCL Kill Date, set PAR Kill Date = RCD value
CASE;

// IF RCD.TH Kill Date GT LCL.TH Kill Date
IF RCD.TH_Kill_Date > LCL.TH_Kill_Date;

// PAR.TH Kill Date = RCD.TH Kill Date
PAR.TH_Kill_Date = RCD.TH_Kill_Date;

// LCL.TH Kill Date = PAR.TH Kill Date
LCL.TH_Kill_Date = PAR.TH_Kill_Date;

ENDIF;

//?Processing based on Hog Class Type
// IF RCD.TH Hog Class Type is Resale
IF RCD.TH_Hog_Class_Type = 'R';

EXECUTE FUNCTION(Chk Exists            RT) TYPE(RTVOBJ) FILE(PKDOREP)           AB1347884;
PARAMETER('REPAY');
PARAMETER(RCD.BOH_Company_Number);
PARAMETER(RCD.BOH_Buy_Order_Number);
PARAMETER(RCD.BOL_Load_Number);
PARAMETER(RCD.TH_Tattoo_Number);
PARAMETER(RCD.TH_Kill_Date);
PARAMETER(PGM.*Return_code);
{
 //?USER: Processing if Data record not found

 // PAR.*Return code = CND.*Record does not exist
 PAR.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 // PAR.*Return code = CND.*Record already exists
 PAR.*Return_code = 'Y2U0003';

}


//?If record does not exist in Tattoo Header Job Sel file
CASE;

// IF PGM.*Return code is *Record does not exist
IF PGM.*Return_code = 'Y2U0005';

EXECUTE FUNCTION(Crt Tattoo Header Job CO) TYPE(CRTOBJ) FILE(PKDOREP)           AB1177567;
PARAMETER('REPAY');
PARAMETER(RCD.BOH_Company_Number);
PARAMETER(RCD.BOH_Buy_Order_Number);
PARAMETER(RCD.BOL_Load_Number);
PARAMETER(RCD.TH_Tattoo_Number);
PARAMETER(RCD.TH_Kill_Date);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(RCD.PL_Location_Code);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?Execute internal function

  // PAR.RS Record Status = CND.Active
  PAR.RS_Record_Status = 'A';

  // PAR.RS User Added = JOB.*USER
  PAR.RS_User_Added = JOB.*USER;

  // PAR.RS Date Added = JOB.*Job date
  PAR.RS_Date_Added = JOB.*Job_date;

  // PAR.RS Time Added = JOB.*Job time
  PAR.RS_Time_Added = JOB.*Job_time;

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

 }

}


// PAR.Count USR 2 = PAR.Count USR 2 + CON.1
PAR.Count_USR_2 = PAR.Count_USR_2 + 1;

//?If RCD Kill Date > LCL Kill Date, set PAR Kill Date = RCD value
CASE;

// IF RCD.TH Kill Date GT LCL.TH Kill Date
IF RCD.TH_Kill_Date > LCL.TH_Kill_Date;

// PAR.TH Kill Date = RCD.TH Kill Date
PAR.TH_Kill_Date = RCD.TH_Kill_Date;

ENDIF;

ENDIF;

ENDIF;

ENDIF;

//?USER: Exit program processing

// PAR.Count USR 2 = LCL.Count USR 2
PAR.Count_USR_2 = LCL.Count_USR_2;

