     H/TITLE WW Ending Inventory    DF Display file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Displays the records from DBF as a subfile
     H* - Loads the SFL from the DBF a page at a time
     H* - The DBF record at which the SFL display starts may be
     H*   controlled by positioning fields on the SFL header
     H* - Any key fields on the SFL header will be used as
     H*   positioning values
     H* - Any non-key fields on the SFL header will be used as
     H*   selection values: a maximum of W0SLM records will be
     H*   read from the DBF before giving up
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Display file
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISRCENT
     H* Date          : 01/16/20  Time  : 16:47:55
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPOAADFR#CF  E                    WORKSTN
     F                                        ##RR  KSFILE #SFLRCD
     F                                              KINFDS INFDS#
      * DSP: WW Ending Inventory    DF Display file
      *
     FPDKLREL2IF  E           K        DISK
     F                                              KINFDS INFDS1
      * RSQ : Company Item Avail Group  Co/Group/Item
      *
     FCAABREL3IF  E           K        DISK
      * RTV : Company Name and Address  Retrieval index       NV
      *
     FPDKKREL1IF  E           K        DISK
      * RTV : Availability Group        Retrieval index
      *
     FCAADREL3IF  E           K        DISK
      * RTV : Warehouse                 Active records only
      *
     FCAB0RELJIF  E           K        DISK
      * RTV : Item Balance              Acitve records only
      *
     FCABZREL1IF  E           K        DISK
      * RTV : Company Item              Retrieval index       NV
      *
     FCAB1RELAIF  E           K        DISK
      * RSQ : Item Balance Detail       Co/Item/Whse/Prod Date(D
      *
     FPDL5CPL1IF  E           K        DISK
      * RTV : Item Lot Location         Retrieval index
      *
     FCAAFREL1IF  E           K        DISK
      * RTV : Calendar                  Retrieval index       NV
      *
     FPDI8CPL1IF  E           K        DISK
      * RTV : PS Prod Item Schedule     Retrieval index
      *
     FOPBGWKLFIF  E           K        DISK
      * RSQ : Order Detail              Co/Itm/Whs/SSD(d)/Od Omt
      *
     FOPBFCPL1IF  E           K        DISK
      * RTV : Order Header TRG          Retrieval index       NV
      *
     FOPBGWKLNIF  E           K        DISK
      * RSQ : Order Detail              Co/Item/Whs/SSD/Ord NCRX
      *
     FCAADREL9IF  E           K        DISK
      * RSQ : Warehouse                 ShipCo/Warehouse
      *
     FCADRREL1IF  E           K        DISK
      * RTV : User Profile Control      Retrieval index       NV
      *
     FCADTREL1IF  E           K        DISK
      * RTV : User Application Profile  Retrieval index       NV
      *
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
     E                    J3          3  1
     E                    K3          3  1
      * RIGHT JUSTIFY INPUT FIELD
     E                    J7          7  1
     E                    K7          7  1
      * RIGHT JUSTIFY INPUT FIELD
     E                    #L3         3  1
     E                    #L7         7  1
     E                    UCT        40  1               CENTER TABLE
      * Screen: Field position and name array
     E                    W0BEG   7 040  5 0A
     E                    W0END   7 040  5 0A
     E                    W0NAM   7 040 10
      * Long constants
     E                    @CN#    1  02  6   @CN    25
     E                    YDOW        7  1               *Days of week
     E                    YK01      100  8  A            PAR Item Storag
      *
     I@BGWKLI
      * Order Detail              Co/Item/Whs/SSD/Ord NCRX
      * Renamed input format fields
     I              OMAIC3                          WBAIC3
     I              OMC4NB                          WBC4NB
     I              OMDPNB                          WBDPNB
     I              OMUENB                          WBUENB
     I              OMHGCD                          WBHGCD
     I              OMAJCD                          WBAJCD
     I              OMBKC7                          WBBKC7
     I              OMCFC7                          WBCFC7
     I              OMGMST                          WBGMST
     I              OMGNST                          WBGNST
     I              OMMAVA                          WBMAVA
     I              OMKDVA                          WBKDVA
     I              OML8VA                          WBL8VA
     I              OML9VA                          WBL9VA
     I              OMGTST                          WBGTST
     I              OMGVST                          WBGVST
     I              OMGUST                          WBGUST
     I              OMQFST                          WBQFST
     I              OMAYVA                          WBAYVA
     I              OMEXDT                          WBEXDT
     I              OMLQCD                          WBLQCD
     I              OMRDCD                          WBRDCD
     I              OMQ7CD                          WBQ7CD
     I              OMBZPR                          WBBZPR
     I              OML6NB                          WBL6NB
     I              OMU1ST                          WBU1ST
     I              OMGIDT                          WBGIDT
     I              OMCRCD                          WBCRCD
     I              OMAGCD                          WBAGCD
     I              OMRZST                          WBRZST
     I              OMR0ST                          WBR0ST
     I              OMR1ST                          WBR1ST
     I              OMG7NA                          WBG7NA
     I              OMG8NA                          WBG8NA
     I              OMRPCD                          WBRPCD
     I              OMVEST                          WBVEST
     I              OMVGST                          WBVGST
     I              OMAVST                          WBAVST
     I              OMU0ST                          WBU0ST
     I              OMRFCD                          WBRFCD
     I              OMFZST                          WBFZST
     I              OMR1NB                          WBR1NB
     I              OMAVQT                          WBAVQT
     I              OMD0WG                          WBD0WG
     I              OMCCQT                          WBCCQT
     I              OMAUWG                          WBAUWG
     I              OMCBQT                          WBCBQT
     I              OMATWG                          WBATWG
     I              OMAQCS                          WBAQCS
     I              OMAGCS                          WBAGCS
     I              OMAKPR                          WBAKPR
     I              OMALPR                          WBALPR
     I              OMAUPR                          WBAUPR
     I              OMAVWG                          WBAVWG
     I              OMA4WG                          WBA4WG
     I              OMA5DT                          WBA5DT
     I              OMAODT                          WBAODT
     I              OMGNDT                          WBGNDT
     I              OMAMST                          WBAMST
     I              OMANST                          WBANST
     I              OMVAST                          WBVAST
     I              OMRGNB                          WBRGNB
     I              OMRHNB                          WBRHNB
     I              OMRINB                          WBRINB
     I              OMRBCD                          WBRBCD
     I              OMHICD                          WBHICD
     I              OMRNCD                          WBRNCD
     I              OMROCD                          WBROCD
     I              OMCXDT                          WBCXDT
     I              OMAJVN                          WBAJVN
     I              OMKXCD                          WBKXCD
     I              OMJPCD                          WBJPCD
     I              OMCQCD                          WBCQCD
     I              OMR4CD                          WBR4CD
     I              OMZ1ST                          WBZ1ST
     I              OMZ3ST                          WBZ3ST
     I              OMZ4ST                          WBZ4ST
     I              OMDUPR                          WBDUPR
     I              OMB6VL                          WBB6VL
     I              OMA1AA                          WBA1AA
     I              OMFZSX                          WBFZSX
     I              OMF0SX                          WBF0SX
     I              OMF1SX                          WBF1SX
     I              OMF2SX                          WBF2SX
     I              OMF3SX                          WBF3SX
     I              OMF4SX                          WBF4SX
     I              OMF5SX                          WBF5SX
     I              OMF6SX                          WBF6SX
     I              OMF7SX                          WBF7SX
     I              OMNTDT                          WBNTDT
     I              OMNUDT                          WBNUDT
     I              OMNVDT                          WBNVDT
     I              OMNWDT                          WBNWDT
     I              OMNXDT                          WBNXDT
     I              OMBUTM                          WBBUTM
     I              OMBVTM                          WBBVTM
     I              OMBWTM                          WBBWTM
     I              OMBXTM                          WBBXTM
     I              OMBYTM                          WBBYTM
     I              OMH5NX                          WBH5NX
     I              OMH6NX                          WBH6NX
     I              OMH7NX                          WBH7NX
     I              OMH8NX                          WBH8NX
     I              OMH9NX                          WBH9NX
     I              OMDVPR                          WBDVPR
     I              OMDWPR                          WBDWPR
     I              OMDXPR                          WBDXPR
     I              OMDYPR                          WBDYPR
     I              OMDZPR                          WBDZPR
     I              OMGSPR                          WBGSPR
     I              OMGTPR                          WBGTPR
     I              OMGUPR                          WBGUPR
     I              OMHOST                          WBHOST
     I              OMHPST                          WBHPST
     I              OMIOST                          WBIOST
     I              OMPEWG                          WBPEWG
     I              OMRINY                          WBRINY
     I              OMTIDT                          WBTIDT
     I              OMTJDT                          WBTJDT
     I              OMH2ST                          WBH2ST
     I              OMH0ST                          WBH0ST
     I              OMH1ST                          WBH1ST
     I              OMTKDT                          WBTKDT
     I              OMTLDT                          WBTLDT
     I              OMTMDT                          WBTMDT
     I              OMUVST                          WBUVST
     I              OMUWST                          WBUWST
     I              OMUXST                          WBUXST
     I              OMAATM                          WBAATM
     I              OMAYNA                          WBAYNA
     I              OMA0NA                          WBA0NA
     I              OMAXDT                          WBAXDT
      *
     I@ADREWA
      * Warehouse                 ShipCo/Warehouse
      * Renamed input format fields
     I              ADAJCD                          WCAJCD
     I              ADF8NA                          WCF8NA
     I              ADACNA                          WCACNA
     I              ADADNA                          WCADNA
     I              ADAENA                          WCAENA
     I              ADAJNA                          WCAJNA
     I              ADBTTX                          WCBTTX
     I              ADAOCD                          WCAOCD
     I              ADBGCD                          WCBGCD
     I              ADVHST                          WCVHST
     I              ADMPNA                          WCMPNA
     I              ADWPST                          WCWPST
     I              ADXUST                          WCXUST
     I              ADT0ST                          WCT0ST
     I              ADT1ST                          WCT1ST
     I              ADDBNB                          WCDBNB
     I              ADT2ST                          WCT2ST
     I              ADT3ST                          WCT3ST
     I              ADT4ST                          WCT4ST
     I              ADT6ST                          WCT6ST
     I              ADBWC3                          WCBWC3
     I              ADBTC3                          WCBTC3
     I              ADBUC3                          WCBUC3
     I              ADBVC3                          WCBVC3
     I              ADFCAA                          WCFCAA
     I              ADRQSX                          WCRQSX
     I              ADRRSX                          WCRRSX
     I              ADRSSX                          WCRSSX
     I              ADRTSX                          WCRTSX
     I              ADT7ST                          WCT7ST
     I              ADT8ST                          WCT8ST
     I              ADRNSX                          WCRNSX
     I              ADROSX                          WCROSX
     I              ADRPSX                          WCRPSX
     I              ADUVST                          WCUVST
     I              ADUWST                          WCUWST
     I              ADUXST                          WCUXST
     I              ADVSST                          WCVSST
     I              ADAATM                          WCAATM
     I              ADAYNA                          WCAYNA
     I              ADA0NA                          WCA0NA
     I              ADAXDT                          WCAXDT
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IINFDS1    E DSY2I1DSP
      * File information data structure
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXD2T        DS
      * Internal date
     I                                        1   70XDINT2
     I                                        1   30XDINY2
     I                                        4   50XDINM2
     I                                        6   70XDIND2
     IYD01        DS
     I                                        1   30YI0101
     I                                        4   80YI01
      *
     IYM01        DS                        100
     I                                        1   30WACNT
     I                                        4  100WAHGCD
      *
     IYW01        DS
     I                                        1   30XACNT
     I                                        4  100XAHGCD
      *
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Company Item Avail Group
      * N : RST Company Number
     I                                    P   1   20P1AIC3
      * N :  Item Code
     I                                    P   3   60P1HGCD
      * N : RST Availability Group Code
     I                                        7   9 P1V4CD
      * N :  Item Display Sequence
     I                                    P  10  110P1IDSQ
     IP2PARM      DS
      * N :  ATS Weight Available USR
     I                                    P   1   62P2EOWG
     IP3PARM      DS
      * N :  ATS Pieces Available USR
     I                                    P   1   40P3EWNB
     IP4PARM      DS
      * N :  Piece Count Item
     I                                        1   1 P4PCCT
     IP5PARM      DS
      * N :  Pieces Per Bag
     I                                    P   1   40P5BDNB
     IP6PARM      DS
      * N :  Bags Per Unit
     I                                    P   1   40P6BJNB
     IP7PARM      DS
      * N :  Warehouse Code
     I                                        1   3 P7AJCD
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'CD3 Non numeric data'
      * Message data for 'CD7 Non numeric data'
      * Message data for 'Company Number Req'
      * Company Number
     I                                        1   3 ZA0001
      * Message data for 'Warehouse Invalid for Co'
      * Warehouse Code
     I                                        1   3 ZA0002
      * Company Number
     I                                        4   6 ZA0003
      * Message data for 'Warehouse not found'
      * Message data for 'Warehouse Code Required'
      * Warehouse Code
     I                                        1   3 ZA0004
      * Message data for 'Application access denied'
      * User Profile Name
     I                                        1  10 ZA0005
      * Application Code
     I                                       11  16 ZA0006
      * Message data for 'Application access denied'
      * User Profile Name
     I                                        1  10 ZA0007
      * Application Code
     I                                       11  16 ZA0008
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
     C                     DO   *HIVAL
      * Initialise & load subfile page
     C                     EXSR BAIZSF
     C                     MOVEL'N'       W0RSF   1
      * Display screen until reload requested
     C           W0RSF     DOWEQ'N'
      * Display screen
     C                     EXSR CAEXFM
      * Process response
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Request subfile reload
     C   30                CAS            FBRQRL
      * Display next SFL page
     C   27                CAS            BBLDSF
      * Process screen input
     C                     CAS            DAPR##
     C                     END
      *
     C                     END                             OD W0RSF
     C                     END                             OD *HIVAL
      *****************************************************************
      /EJECT
     CSR         BAIZSF    BEGSR
      *================================================================
      * Initialise and load subfile page
      *================================================================
      * Clear subfile
     C                     SETON                     80
     C                     WRITE#SFLCTL
     C                     SETOF                     80
      * Reset no of records in subfile
     C                     Z-ADD*ZERO     ##RRMX  50 81     SETOF 81
      * USER: Initialize subfile control
      * First Time Processing
      * CASE: LCL.First Time Flag is Yes
     C           YL0001    IFEQ 'Y'                        *IF
     C                     Z-ADDP1AIC3    #2AIC3           Company Number
     C                     MOVEL'N'       YL0001           First Time Flag
     C                     MOVEL'ALL'     P1V4CD           Availability Gr
     C                     MOVEL'Y'       YL0002           Display Flag
     C                     MOVELYL0003    #CAJCD           Warehouse Code
     C                     MOVEL#CAJCD    P7AJCD           Warehouse Code
     C                     MOVEL'FR'      #CWPST           Warehouse Type
     C                     Z-ADDP1HGCD    #2HGCD           Item Code
     C                     MOVEL*BLANK    #CN0CD           Item Type Code
     C                     MOVEL'FG'      #CN0CD           Item Type Code
     C                     Z-ADD-1        YL0004           Ageing Days Usr
     C                     END                             *FI
      * CASE: LCL.First Time Flag is NO
     C           YL0001    IFEQ 'N'                        *IF
     C                     MOVELP7AJCD    #CAJCD           Warehouse Code
     C                     END                             *FI
      * INIT:  Availability Group
      * CASE: CTL.Availability Group Code is Blank
     C           #2V4CD    IFEQ *BLANK                     *IF
     C                     MOVEL'ALL'     #2V4CD           Availability Gr
     C                     END                             *FI
      * RTV Company Name       RT - Company Name and Address  * 
     C                     EXSR SARVGN
      * Rtv Group Description RT - Availability Group  * 
     C                     EXSR SBRVGN
      * Warehouse Description   and type
      * CASE: CTL.Warehouse Code is Warehouse Code not Blank
     C           #CAJCD    IFNE *BLANK                     *IF
      * RTV Desc/Type/LotTrk  RT - Warehouse  * 
     C                     EXSR SCRVGN
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    #CF8NA           Warehouse Descr
     C                     MOVEL'*ALL'    #CF8NA           Warehouse Descr
     C                     END                             *FI
      * CTL.Warehouse Type Desc = Condition name of CTL.Warehouse Type
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1275008   Y2LSNO  70       List number
     C                     PARM #CWPST    W0INVL 25        Warehouse Type
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #CNENA    PARM           W0CNNM 25        Warehouse Type
      *
     C                     MOVEL#CWPST    WUR6ST           Warehouse Type
      * ***************   PK0119 starts here   ******************
     C                     Z-ADDP1AIC3    #2AIC3           Company Number
     C                     Z-ADD##JDT     YL0005           USR Day 1
      * LCL.USR Day 2 = LCL.USR Day 1 + LCL.Ageing Days Usr *DAYS
     C           YL0005    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDYL0004    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0006
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0006
     C                     END
      * LCL.USR Day 3 = LCL.USR Day 2 + LCL.Ageing Days Usr *DAYS
     C           YL0006    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDYL0004    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0007
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0007
     C                     END
      * LCL.USR Day 4 = LCL.USR Day 3 + LCL.Ageing Days Usr *DAYS
     C           YL0007    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDYL0004    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0008
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0008
     C                     END
      * LCL.USR Day 5 = LCL.USR Day 4 + LCL.Ageing Days Usr *DAYS
     C           YL0008    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDYL0004    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0009
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0009
     C                     END
      * LCL.USR Day 6 = LCL.USR Day 5 + LCL.Ageing Days Usr *DAYS
     C           YL0009    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDYL0004    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0010
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0010
     C                     END
      * LCL.USR Day 7 = LCL.USR Day 6 + LCL.Ageing Days Usr *DAYS
     C           YL0010    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDYL0004    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0011
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0011
     C                     END
      * LCL.USR Day 8 = LCL.USR Day 7 + LCL.Ageing Days Usr *DAYS
     C           YL0011    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDYL0004    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0012
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0012
     C                     END
      * CTL.Avail Ship Date 1 USR = JOB.*Job date + CON.1 *DAYS
     C           ##JDT     ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     #CH6DT
     C                     ELSE
     C           XDINDT    SUB  1000000   #CH6DT
     C                     END
      * CTL.Avail Ship Date 2 USR = CTL.Avail Ship Date 1 USR + CON.1 *DA
     C           #CH6DT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     #CH7DT
     C                     ELSE
     C           XDINDT    SUB  1000000   #CH7DT
     C                     END
      * CTL.Avail Ship Date 3 USR = CTL.Avail Ship Date 2 USR + CON.1 *DA
     C           #CH7DT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     #CH8DT
     C                     ELSE
     C           XDINDT    SUB  1000000   #CH8DT
     C                     END
      * CTL.Avail Ship Date 4 USR = CTL.Avail Ship Date 3 USR + CON.1 *DA
     C           #CH8DT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     #CH9DT
     C                     ELSE
     C           XDINDT    SUB  1000000   #CH9DT
     C                     END
      * CTL.Avail Ship Date 5 USR = CTL.Avail Ship Date 4 USR + CON.1 *DA
     C           #CH9DT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     #CIADT
     C                     ELSE
     C           XDINDT    SUB  1000000   #CIADT
     C                     END
      * CTL.Avail Ship Date 6 USR = CTL.Avail Ship Date 5 USR + CON.1 *DA
     C           #CIADT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     #CIBDT
     C                     ELSE
     C           XDINDT    SUB  1000000   #CIBDT
     C                     END
      * Position DBF file
     C           KPOS      KLIST
     C                     KFLD           KLAIC3           Company Number
     C                     KFLD           KLV4CD           Availability Gr
     C                     KFLD           KLIDSQ           Item Display Se
     C                     KFLD           KLHGCD           Item Code
      * Setup key
     C                     Z-ADD#2AIC3    KLAIC3
     C                     MOVEL#2V4CD    KLV4CD
     C                     Z-ADD#2IDSQ    KLIDSQ
     C                     Z-ADD#2HGCD    KLHGCD
     C           KPOS      SETLL@KLREHI
     C           KRST      KLIST
     C                     KFLD           KLAIC3           Company Number
     C                     KFLD           KLV4CD           Availability Gr
      * Setup key
     C                     Z-ADD#2AIC3    KLAIC3
     C                     MOVEL#2V4CD    KLV4CD
     C           KRST      READE@KLREHI                8782*82=EOF
      * Save previous selector values
     C           *LIKE     DEFN #2IDSQ    WZIDSQ
     C                     MOVEL#2IDSQ    WZIDSQ           Item Display Se
     C           *LIKE     DEFN #2AIC3    WZAIC3
     C                     MOVEL#2AIC3    WZAIC3           Company Number
     C           *LIKE     DEFN #2V4CD    WZV4CD
     C                     MOVEL#2V4CD    WZV4CD           Availability Gr
     C           *LIKE     DEFN #2HGCD    WZHGCD
     C                     MOVEL#2HGCD    WZHGCD           Item Code
      * Load subfile page
     C                     Z-ADD0         ##RROK  50
     C                     EXSR BBLDSF
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         BBLDSF    BEGSR
      *================================================================
      * Load subfile page
      *================================================================
      * Re-establish fields in read-ahead record
     C   27                DO
     C  N82                READP@KLREHI                  90*
     C  N82                READ @KLREHI                  90*
     C                     END
      *
      * Setof record error indicators
     C                     MOVEL*ALL'0'   WKIND0  1
     C                     MOVEAWKIND0    *IN,36
      * Start at previous highest record in SFL
     C                     Z-ADD##RRMX    ##RR    50
      * Reset count of DBF records read
     C                     Z-ADD0         ##RRRD  90
      * Set required pages based on *Set Cursor or *Subfile Pages
     C           W0RR0     IFGT 0
     C           W0RR0     DIV  ##SFPG    ##SPG   30
     C                     MVR            ##SLIN  30
     C           ##SLIN    IFGT 0
     C                     ADD  1         ##SPG
     C                     END
     C           W0SPG     IFGT ##SPG
     C                     Z-ADDW0SPG     ##SPG
     C                     END
     C                     ELSE
     C                     Z-ADDW0SPG     ##SPG
     C                     END
      * Compute lines required based on pages
     C           ##SPG     MULT ##SFPG    ##SFLN  90
     C           ##SFLN    IFGT 999
     C                     Z-ADD999       ##SFLN
     C                     END
      *................................................................
      * Load next SFL page until SFL page full, or
      * Scan limit reached
     C           *IN82     DOWEQ'0'                        DO
     C           ##RROK    ANDLT##SFLN
     C           ##RRRD    ANDLTW0SLM
      * Check selection fields - if fail, read next record
     C           #2IDSQ    IFEQ *ZERO                      Item Display Se
     C           #2HGCD    IFNE *ZERO                      Item Code
     C           KLHGCD    CABLT#2HGCD    BB020            Item Code
     C                     END
     C                     END
      * Load SFL fields
     C                     EXSR MBFL#1
     C                     MOVEL'Y'       W0RSL   1
      * Allow for possible *Set Cursor processing
     C                     ADD  1         ##RR
      * USER: Initialize subfile record from DBF record
      * RST:  Company Number
      * CASE:
      *  - c1 AND c2
      *   |- c1    : CTL.Company Number is not equal to zero
      *   |- c2    : CTL.Company Number NE DB1.Company Number
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #2AIC3    IFNE *ZERO                      *IF
     C           #2AIC3    IFNE KLAIC3                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * RST: Warehouse code if entered
      * CASE: CTL.Warehouse Code is Warehouse Code not Blank
     C           #CAJCD    IFNE *BLANK                     *IF
      * Val Item Bal Exist    RT - IC Item Balance  * 
     C                     EXSR SDRVGN
     C                     END                             *FI
      * Rtv Item Type Code     RT - Company/Item  * 
     C                     EXSR SERVGN
      * RST:  Item type code  PK0318
      * CASE:
      *  - c1 AND c2
      *   |- c1    : CTL.Item Type Code is Entered
      *   |- c2    : CTL.Item Type Code NE RCD.Item Type Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #CN0CD    IFNE *BLANK                     *IF
     C           #CN0CD    IFNE #RN0CD                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * ***************   PK0119 starts here   ******************
      * Rtv Age Quantities     RT - IC Item Balance Detail  * 
     C                     EXSR SFRVGN
      * CALC:  Value A
      * RCD.Day 1 Available Qty   USR =
      *    *COMPUTE (x1 + x2 + x3 + x4 + x5)
      * x1    : LCL.Quantity Age Day 4   USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : LCL.Quantity Age Day 5   USR
      * +     : PGM.*Synon (17,7) work field
      * x3    : LCL.Quantity Age Day 6   USR
      * +     : PGM.*Synon (17,7) work field
      * x4    : LCL.Quantity Age Day 7   USR
      * +     : PGM.*Synon (17,7) work field
      * x5    : LCL.Quantity Age Day 8   USR
     C           YL0017    ADD  YL0018    W0WD03           *Synon (17,7) w
     C           W0WD03    ADD  YL0019    W0WD02           *Synon (17,7) w
     C           W0WD02    ADD  YL0020    W0WD01           *Synon (17,7) w
     C           W0WD01    ADD  YL0021    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    #RJ2NB           Day 1 Available
     C                     Z-ADDYL0016    #RJ3NB           Day 2 Available
     C                     Z-ADDYL0015    #RJ4NB           Day 3 Available
     C                     Z-ADDYL0014    #RJ5NB           Day 4 Available
      * Calc:  Total Inventory
      * RCD.Inv Total             USR =
      *    *COMPUTE (x1 + x2 + x3 + x4)
      * x1    : RCD.Day 1 Available Qty   USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : RCD.Day 2 Available Qty   USR
      * +     : PGM.*Synon (17,7) work field
      * x3    : RCD.Day 3 Available Qty   USR
      * +     : PGM.*Synon (17,7) work field
      * x4    : RCD.Day 4 Available Qty   USR
     C           #RJ2NB    ADD  #RJ3NB    W0WD02           *Synon (17,7) w
     C           W0WD02    ADD  #RJ4NB    W0WD01           *Synon (17,7) w
     C           W0WD01    ADD  #RJ5NB    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    #RKGNX           Inv Total
      * CALC:  Production Amount
     C                     EXSR UASUBR                     CALC:  Producti
     C                     Z-ADD#RCHTM    #RCSHD           Chill Time USR
      * CASE:
      *  - c1 AND c2
      *   |- c1    : RCD.Chill Time USR is equal to zero
      *   |- c2    : RCD.Production            USR is *Not Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #RCSHD    IFEQ *ZERO                      *IF
     C           #RJ8NX    IFNE *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       YL0051           USR Display 1
     C                     END                             *FI
      * If item is a base mark with a "*".
      * CASE: LCL.Base/Conv/Loss Item is Base
     C           YL0053    IFEQ 'B'                        *IF
     C                     MOVEL'*'       #RYLCD           Item Code is Ba
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    #RYLCD           Item Code is Ba
     C                     END                             *FI
      * Rtv Schd Shipmnt<today RT - PD Order Detail  * 
     C                     EXSR SNRVGN
      * LOAD:  Paging Array
     C                     EXSR UBSUBR                     LOAD:  Paging A
      * CALC:  Ending Inventory
     C                     EXSR UCSUBR                     CALC:  Ending I
      * RTV Sched Shipments    RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0005           Company Number
     C                     Z-ADD#1HGCD    WL0006           Item Code
     C                     MOVEL#CAJCD    WL0007    P      Warehouse Code
     C                     Z-ADD#CH6DT    WL0008           Scheduled Ship
     C                     Z-ADD#RQS01    WL0009           Day 7 Sched Shi
     C                     EXSR SSRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0009    #RQS01           Day 7 Sched Shi
      * RTV Sched Shipments    RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0005           Company Number
     C                     Z-ADD#1HGCD    WL0006           Item Code
     C                     MOVEL#CAJCD    WL0007    P      Warehouse Code
     C                     Z-ADD#CH7DT    WL0008           Scheduled Ship
     C                     Z-ADD#RQS02    WL0009           Day 7 Sched Shi
     C                     EXSR SSRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0009    #RQS02           Day 7 Sched Shi
      * RTV Sched Shipments    RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0005           Company Number
     C                     Z-ADD#1HGCD    WL0006           Item Code
     C                     MOVEL#CAJCD    WL0007    P      Warehouse Code
     C                     Z-ADD#CH8DT    WL0008           Scheduled Ship
     C                     Z-ADD#RQS03    WL0009           Day 7 Sched Shi
     C                     EXSR SSRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0009    #RQS03           Day 7 Sched Shi
      * RTV Sched Shipments    RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0005           Company Number
     C                     Z-ADD#1HGCD    WL0006           Item Code
     C                     MOVEL#CAJCD    WL0007    P      Warehouse Code
     C                     Z-ADD#CH9DT    WL0008           Scheduled Ship
     C                     Z-ADD#RQS04    WL0009           Day 7 Sched Shi
     C                     EXSR SSRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0009    #RQS04           Day 7 Sched Shi
      * RTV Sched Shipments    RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0005           Company Number
     C                     Z-ADD#1HGCD    WL0006           Item Code
     C                     MOVEL#CAJCD    WL0007    P      Warehouse Code
     C                     Z-ADD#CIADT    WL0008           Scheduled Ship
     C                     Z-ADD#RQS05    WL0009           Day 7 Sched Shi
     C                     EXSR SSRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0009    #RQS05           Day 7 Sched Shi
      * RTV Sched Shipments    RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0005           Company Number
     C                     Z-ADD#1HGCD    WL0006           Item Code
     C                     MOVEL#CAJCD    WL0007    P      Warehouse Code
     C                     Z-ADD#CIBDT    WL0008           Scheduled Ship
     C                     Z-ADD#RN3NX    WL0009           Day 7 Sched Shi
     C                     EXSR SSRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0009    #RN3NX           Day 7 Sched Shi
     C                     SUB  1         ##RR
      * DBF record not selected
     C           W0RSL     CABNE'Y'       BB020
      * Convert fields to external form
     C                     EXSR MNCV#1
      * Output to subfile
     C                     ADD  1         ##RR
     C                     ADD  1         ##RROK     81    *
      * If SFLRCD invalid, note that errors present
     C   98N99             SETON                     99    *
      * Set screen conditioning indicators
     C                     EXSR GADSA1
     C                     WRITE#SFLRCD
     C           BB020     TAG
      * Increment scan check count
     C                     ADD  1         ##RRRD
     C           KRST      READE@KLREHI                  82*82=EOF
     C                     END                             OD 1 - ##SFPG
      *................................................................
     C           BB900     TAG
      *................................................................
      * If no DBF records found, display error message
     C           ##RR      IFEQ *ZERO
     C           *IN82     ANDEQ'1'
      * Send message '*No data to display'
     C                     MOVEL'Y2U0008' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI ##RR = *ZERO
      *
      *................................................................
      * Save highest SFL record load can continue at end point
     C           ##RR      IFGT ##RRMX
      * Calculate top line
     C           ##RROK    DIV  ##SFPG    ##SPG
     C                     MVR            ##SLIN
     C           ##SLIN    IFGT 0
     C           ##RR      SUB  ##SLIN    ##SFRC
     C                     ELSE
     C           ##RR      SUB  ##SFPG    ##SFRC
     C                     END
     C                     ADD  1         ##SFRC
     C                     Z-ADD##RR      ##RRMX
     C                     END
      * If scan limit reached, display error message
     C           ##RRRD    IFGE W0SLM
      * Send message '*Scan limit reached'
     C                     MOVEL'Y2U0017' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     ELSE
     C                     Z-ADD0         ##RROK
     C                     END
      *================================================================
     CSR         BBEXIT    ENDSR
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen
      *================================================================
      * Convert fields to external form
     C  N30N27             EXSR MOCV#2
      * Set screen conditioning indicators
     C                     EXSR GBDSA2
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
      * Update screen time
     C                     TIME           ##TME
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
      * Set SFLFOLD/SFLDROP from JOB.*Subfile mode
     C                     MOVE ZZSFM     *IN02
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#SFLCTL
      * Maintain subfile position where possible
     C           @#SFRC    IFGT *ZERO
     C                     Z-ADD@#SFRC    ##SFRC
     C                     END
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C                     SETOF                       8392*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPR##    BEGSR
      *================================================================
      * Process screen input
      *================================================================
      *
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * Validate Company Number and convert to internal.
      * CD3 Ext/Int
     C                     MOVELV2AIC3    WUI3ST           USR First Posit
     C                     MOVEL*BLANK    W0RTN            *Return code
      * CASE: WRK.USR First Position is Search request
     C           WUI3ST    IFEQ '?'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVELV2AIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Ext/Int EXCUSRSRC - *Field attribute types  * 
     C                     MOVE *BLANKS   JUSTC3  3
     C                     MOVEA*BLANKS   K3
     C                     Z-ADD3         C       30
     C                     Z-ADD3         D       30
      * FIELD LOADED TO WRK CONTEXT BY INTERNAL FUNCTION
     C                     MOVEAWUDMCD    J3
     C                     MOVE *BLANKS   W0RTN
     C                     DO   3
     C           J3,C      IFNE ' '
     C                     MOVEAJ3,C      K3,D
     C                     SUB  1         D
     C                     END
     C                     SUB  1         C
     C                     END
     C                     MOVEAK3        JUSTC3
      * TEST FOR INVALID DATA IN FIELD
     C                     MOVE JUSTC3    TESTC   1
     C           TESTC     IFGT '?'
     C           TESTC     ANDLT'0'
     C                     MOVE 'USR0752' W0RTN
     C                     ELSE
     C                     MOVE *IN60     HLDIN   1
     C                     TESTN          JUSTC3     606060
     C           *IN60     IFEQ '0'
     C                     MOVE 'USR0752' W0RTN
     C                     END
     C                     END
     C                     MOVE JUSTC3    WUDMCD
     C                     MOVE HLDIN     *IN60
      * CASE: PGM.*Return code is CD3 Non numeric data
     C           W0RTN     IFEQ @CN,001                    *IF
      * Setup message data for message
      * Send message 'CD3 Non numeric data'
     C                     MOVEL'USR0752' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     Z-ADD0         #2AIC3           CD3 Int Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVE WUDMCD    #2AIC3           CD3 Int Numeric
     C                     END                             *FI
     C                     END                             *FI
      * Validate Warehouse Type
     C                     MOVEL*BLANK    W0RTN
      * Name search required?
     C           '#CWPST'  IFEQ YPMTFD
      * Warehouse Type
     C                     MOVEL#CWPST    W0INVL 25
      * Set current value in drop down list.
     C                     MOVEL*ZEROS    ZFWPST
     C                     SELEC
     C           W0INVL    WHEQ 'FR'                       FR
     C                     Z-ADD1         ZFWPST
     C           W0INVL    WHEQ 'FZ'                       FZ
     C                     Z-ADD2         ZFWPST
     C                     ENDSL
     C                     EXFMTZEWPST
      * Set selected value from drop down list.
     C                     MOVEL*BLANKS   W0INVL
     C                     SELEC
     C           ZFWPST    WHEQ 1
     C                     MOVEL'FR'      W0INVL           FR
     C           ZFWPST    WHEQ 2
     C                     MOVEL'FZ'      W0INVL           FZ
     C                     ENDSL
     C                     SETOF                     90    *
     C                     MOVELW0INVL    #CWPST
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
      * Validate Item Code and convert to internal.
      * CD7 Ext/Int
     C                     MOVELV2HGCD    WUI3ST           USR First Posit
     C                     MOVEL*BLANK    W0RTN            *Return code
      * CASE: WRK.USR First Position is Search request
     C           WUI3ST    IFEQ '?'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVELV2HGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Ext/Int EXCUSRSRC - *Field attribute types  * 
     C                     MOVE *BLANKS   JUSTC7  7
     C                     MOVEA*BLANKS   K7
     C                     Z-ADD7         C       30
     C                     Z-ADD7         D       30
      * FIELD LOADED TO WRK CONTEXT BY INTERNAL FUNCTION
     C                     MOVEAWUEOCD    J7
     C                     MOVE *BLANKS   W0RTN
     C                     DO   7
     C           J7,C      IFNE ' '
     C                     MOVEAJ7,C      K7,D
     C                     SUB  1         D
     C                     END
     C                     SUB  1         C
     C                     END
     C                     MOVEAK7        JUSTC7
      * TEST FOR INVALID DATA IN FIELD
     C                     MOVE JUSTC7    TEST7   1
     C           TEST7     IFGT '?'
     C           TEST7     ANDLT'0'
     C                     MOVE 'USR0752' W0RTN
     C                     ELSE
     C                     MOVE *IN60     HLDIN   1
     C                     TESTN          JUSTC7     606060
     C           *IN60     IFEQ '0'
     C                     MOVE 'USR0752' W0RTN
     C                     END
     C                     END
     C                     MOVE JUSTC7    WUEOCD
     C                     MOVE HLDIN     *IN60
      * CASE: PGM.*Return code is CD3 Non numeric data
     C           W0RTN     IFEQ @CN,001                    *IF
      * Setup message data for message
      * Send message 'CD7 Non numeric data'
     C                     MOVEL'USR0802' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     Z-ADD0         #2HGCD           CD7 Int Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVE WUEOCD    #2HGCD           CD7 Int Numeric
     C                     END                             *FI
     C                     END                             *FI
      * If error, exit
     C           *IN99     CABEQ'1'       DAEXIT
      *................................................................
      * Check reference to Availability Group
     C                     EXSR VACKRL
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     SETON                     99    *
     C                     SETON                     32    *
     C                     END
      * Reset any input restrictor parameters
     C                     Z-ADD#2AIC3    P1AIC3           Company Number
     C                     MOVEL#2V4CD    P1V4CD           Availability Gr
      *
     C           YPMTFD    IFNE *BLANKS
     C           YPMRRN    ANDEQ*ZERO
     C                     GOTO DAEXIT
     C                     END
     C           YPMTFD    IFEQ *BLANKS
      * CALC: Subfile control function fields
      * CASE: CTL.Availability Group Code NE PAR.Availability Group Code
     C           #2V4CD    IFNE P1V4CD                     *IF
     C                     MOVEL#2V4CD    P1V4CD           Availability Gr
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
      * CASE: CTL.Warehouse Code NE PAR.Warehouse Code
     C           #CAJCD    IFNE P7AJCD                     *IF
     C                     MOVEL#CAJCD    P7AJCD           Warehouse Code
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
     C                     END
     C           YPMTFD    CABNE*BLANKS   DATAG1
      * Change of position specified
     C           WZAIC3    CASNE#2AIC3    FBRQRL
     C           WZV4CD    CASNE#2V4CD    FBRQRL
     C           WZHGCD    CASNE#2HGCD    FBRQRL
     C                     END
     C           DATAG1    TAG
     C           YPMTFD    IFEQ *BLANKS
      * USER: Process subfile control (Pre-confirm)
      * F4=Prompt  (Company/Warehouse/PA Group)
      * CASE: CTL.*CMD key is *Prompt
     C           *IN04     IFEQ '1'                        *IF
      * CASE: PGM.*Cursor field <IS> CTL.Company Number
     C           W0CFL     IFEQ 'V2AIC3'                   *IF
      * SEL Company - plants   SR - Company Name and Address  * 
     C                     CALL 'PPF2SRR'              90  SEL Company - p
     C                     PARM *BLANK    W0RTN   7
     C           #2AIC3    PARM #2AIC3    WQ0002  30       Company Number
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PPF2SRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9931  *
     C                     END
     C                     ELSE
      * CASE: PGM.*Cursor field <IS> CTL.Warehouse Code
     C           W0CFL     IFEQ '#CAJCD'                   *IF
      * SEL ShipCo/Warehouse   SR - Warehouse  * 
     C                     CALL 'PPHQSRR'              90  SEL ShipCo/Ware
     C                     PARM *BLANK    W0RTN   7
     C           #CAJCD    PARM #CAJCD    WQ0003  3        Warehouse Code
     C                     PARM #2AIC3    WQ0004  30       Shipping Compan
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PPHQSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     993331*
     C                     END
     C                     ELSE
      * CASE: PGM.*Cursor field <IS> CTL.Availability Group Code
     C           W0CFL     IFEQ '#2V4CD'                   *IF
      * SEL Avail Group        SR - Availability Group  * 
     C                     CALL 'PDDVSRR'              90  SEL Avail Group
     C                     PARM *BLANK    W0RTN   7
     C           #2V4CD    PARM #2V4CD    WQ0005  3        Availability Gr
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDDVSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9932  *
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Val:  Company Number
      * CASE: CTL.Company Number is Equal to zero
     C           #2AIC3    IFEQ *ZERO                      *IF
      * Setup message data for message
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           #2AIC3    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL#2AIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    ZA0001           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    ZA0001           CD3 Ext Numeric
     C                     END                             *FI
      * Send message 'Company Number Req'
     C                     MOVEL'USR2183' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
      *
     C                     END                             *FI
      * Val:  Warehouse Code
      * CASE: CTL.Warehouse Code is Warehouse Code Blank
     C           #CAJCD    IFEQ *BLANK                     *IF
     C                     MOVEL*BLANK    #CF8NA           Warehouse Descr
     C                     MOVEL'*ALL'    #CF8NA           Warehouse Descr
     C                     ELSE
      * CASE: *OTHERWISE
      * VAL Shipping Co WHS   RT - Warehouse  * 
     C                     EXSR STRVGN
      * CASE: WRK.Warehouse Description is equal to blank
     C           WUF8NA    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#CAJCD    ZA0002           Warehouse Code
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           #2AIC3    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL#2AIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    ZA0003           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    ZA0003           CD3 Ext Numeric
     C                     END                             *FI
      * Send message 'Warehouse Invalid for Co'
     C                     MOVEL'USR3404' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     993331*
      *
     C                     END                             *FI
      * Rtv Warehouse/type Val RT - Warehouse  * 
     C                     EXSR SURVGN
      * CASE: LCL.Record Found USR is Record Not Found
     C           YL0013    IFEQ 'N'                        *IF
      * Setup message data for message
      * Send message 'Warehouse not found'
     C                     MOVEL'USR0372' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9933  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Val:  Warehouse type
      * CASE: CTL.Warehouse Type NE WRK.BLANK 1               USR
     C           #CWPST    IFNE WUJ1TX                     *IF
      * CTL.Warehouse Type Desc = Condition name of CTL.Warehouse Type
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1275008   Y2LSNO  70       List number
     C                     PARM #CWPST    W0INVL 25        Warehouse Type
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #CNENA    PARM           W0CNNM 25        Warehouse Type
      *
     C                     END                             *FI
     C                     END
     C           YPMTFD    IFEQ *BLANKS
      * Reload subfile requested
     C           W0RSF     CABEQ'Y'       DAEXIT
     C                     END
     C           *IN81     IFEQ '1'
      * Process subfile records
     C                     EXSR DBPRSF
     C                     END
     C           YPMTFD    CABNE*BLANKS   DAEXIT
      * If error, quit processing
     C           *IN99     CABEQ'1'       DAEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       DAEXIT
      * USER: Process command keys
      * F5=Refresh
      * CASE: CTL.*CMD key is *Refresh
     C           *IN05     IFEQ '1'                        *IF
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
      * CMD Key = 11
      * CASE: CTL.*CMD key is CF11
     C           *IN11     IFEQ '1'                        *IF
      * RTV Storage Item       RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD1         WL0010           USR Count
     C                     EXSR SVRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0011    P1HGCD           Item Code
     C                     MOVEL#CAJCD    P7AJCD           Warehouse Code
      * WW Scheduled Ordrs Inv DF - Company Item Avail Group  * 
     C                     CALL 'POABDFR'              90  WW Scheduled Or
     C                     PARM *BLANK    W0RTN   7
     C           #2HGCD    PARM #2HGCD    WQ0006  70       Item Code
     C           #2V4CD    PARM #2V4CD    WQ0007  3        Availability Gr
     C           #CAJCD    PARM #CAJCD    WQ0008  3        Warehouse Code
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'POABDFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     993532*
     C                     SETON                     33    *
     C                     END
      * CASE: CTL.Warehouse Code EQ PAR.Warehouse Code
     C           #CAJCD    IFEQ P7AJCD                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
     C                     Z-ADD6         YL0060           USR Count
     C                     END                             *FI
     C                     MOVEL'Y'       W0RSF            *Reload subfile
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         DBPRSF    BEGSR
      *================================================================
      * Process modified subfile record
      *================================================================
      * Read first changed slf record
     C           YAFSCH    IFNE *ZERO
     C           YAFSCH    CHAIN#SFLRCD              92    *
     C                     ELSE
     C                     READC#SFLRCD                  92*
     C                     END
     C           *IN92     DOWEQ'0'
      * Process subfile record
     C                     EXSR DCPRSR
      * Convert fields to external form
     C                     EXSR MNCV#1
      * Set screen conditioning indicators
     C                     EXSR GADSA1
     C                     UPDAT#SFLRCD
     C                     READC#SFLRCD                  92*
     C                     END
      *================================================================
     CSR         DBEXIT    ENDSR
      /EJECT
     CSR         DCPRSR    BEGSR
      *================================================================
      * Process subfile record
      *================================================================
      * Setof error indicators and SFLNXTCHG
     C                     MOVEAWKIND0    *IN,36
     C                     SETOF                     98    *
     C           YPMTFD    CABNE*BLANKS   DCEXIT
      * USER: Process subfile record (Pre-confirm)
      * Dsp:  Item Orders        opt 8
      * CASE: RCD.*SFLSEL is *8
     C           #1SEL     IFEQ '8'                        *IF
     C                     MOVEL'Y'       YL0063           *Initial call
      * Dsp Item Orders       DF - Order Detail  * 
     C                     CALL 'PDO7DFR'              90  Dsp Item Orders
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1AIC3    WQ0009  30       Company Number
     C                     PARM #1HGCD    WQ0010  70       Item Code
     C                     PARM ##JDT     WQ0011  70       Scheduled Ship
     C                     PARM #CAPTX    WQ0012 30        Name
     C                     PARM #CAJCD    WQ0013  3        Warehouse Code
     C           YL0063    PARM YL0063    WQ0014  1        *Initial call
     C                     PARM #CWPST    WQ0015  2        Warehouse Type
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDO7DFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     983334*
     C                     END
     C                     Z-ADD#1HGCD    #2HGCD           Item Code
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
      * Dsp:  Item Warehouse Inquiry Detail
      * CASE: RCD.*SFLSEL is 9
     C           #1SEL     IFEQ '9'                        *IF
      * CASE: CTL.Warehouse Code is Warehouse Code Blank
     C           #CAJCD    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#CAJCD    ZA0004           Warehouse Code
      * Send message 'Warehouse Code Required'
     C                     MOVEL'USR2015' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9833  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'Y'       YL0063           *Initial call
      * CASE: CTL.Lot Tracking Flag is yes
     C           #CVHST    IFEQ 'Y'                        *IF
      * Dsp Item Lot Locs     DF - Item Lot Location  * 
     C                     CALL 'PDH2DFR'              90  Dsp Item Lot Lo
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1AIC3    WQ0016  30       Company Number
     C                     PARM #1HGCD    WQ0017  70       Item Code
     C                     PARM #CAJCD    WQ0018  3        Warehouse Code
     C                     PARM *ZERO     WQ0019  70       Production Date
     C           YL0063    PARM YL0063    WQ0020  1        *Initial call
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDH2DFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9833  *
     C                     END
     C                     ELSE
      * CASE: *OTHERWISE
      * Dsp Item/Whse Inqy Dtl DF - Item Balance Detail  * 
     C                     CALL 'ICQ9DFR'              90  Dsp Item/Whse I
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1AIC3    WQ0021  30       Company Number
     C                     PARM #1HGCD    WQ0022  70       Item Code
     C                     PARM WUGENA    WQ0023 30        Description Lin
     C                     PARM #RADCD    WQ0024  2        U/M - Primary
     C                     PARM #RAWPC    WQ0025  94       Conversion Fact
     C                     PARM #RLXST    WQ0026  1        Operation Facto
     C                     PARM #RAECD    WQ0027  2        U/M - Second
     C                     PARM #RAXPC    WQ0028  94       Conversion Fact
     C                     PARM #RLYST    WQ0029  1        Operation Facto
     C                     PARM #RAFCD    WQ0030  2        U/M - Third
     C                     PARM #RAIWG    WQ0031 112       Unit Weight
     C                     PARM #RFZST    WQ0032  1        Production Date
     C                     PARM #RAVST    WQ0033  1        Catch Weight St
     C                     PARM #CAJCD    WQ0034  3        Warehouse Code
     C                     PARM #CF8NA    WQ0035 30        Warehouse Descr
     C                     PARM #CAPTX    WQ0036 30        Name
     C           YL0063    PARM YL0063    WQ0037  1        *Initial call
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ICQ9DFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9833  *
     C                     END
     C                     END                             *FI
     C                     Z-ADD#1HGCD    #2HGCD           Item Code
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
     C                     END                             *FI
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C           *IN98     IFEQ '1'
      * SFLRCD invalid
     C  N99                Z-ADD##RR      ##SFRC     99    *
      * SFLNXTCHG
     C                     SETON                     84
     C                     ELSE
      * SFLRCD valid
      * SFLNXTCHG
     C                     SETOF                     84
     C                     MOVEL*BLANK    #1SEL
     C                     END                             FI *IN98
      *================================================================
     CSR         DCEXIT    ENDSR
      /EJECT
     CSR         FBRQRL    BEGSR
      *================================================================
      * Request subfile reload
      *================================================================
     C                     MOVEL'Y'       W0RSF
      *================================================================
     CSR         FBEXIT    ENDSR
      /EJECT
     CSR         GADSA1    BEGSR
      *================================================================
      * Set display attributes for Subfile record
      *================================================================
     C                     MOVEL'0'       *IN78
     C           YL0051    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       *IN78
     C                     END                             *FI
      *================================================================
     CSR         GAEXIT    ENDSR
      /EJECT
     CSR         GBDSA2    BEGSR
      *================================================================
      * Set display attributes for Subfile control
      *================================================================
     C                     MOVEL'0'       *IN79
     C           YL0064    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
      *================================================================
     CSR         GBEXIT    ENDSR
      /EJECT
     CSR         MBFL#1    BEGSR
      *================================================================
      * Move @KLREHI fields to subfile
      *================================================================
     C                     MOVEL*BLANK    #1SEL
     C                     Z-ADDKLAIC3    #1AIC3           Company Number
     C                     MOVELKLV4CD    #1V4CD           Availability Gr
     C                     Z-ADDKLIDSQ    #1IDSQ           Item Display Se
     C                     MOVELKLUVST    #1UVST           EDI Status 1
     C                     MOVELKLUWST    #1UWST           EDI Status 2
     C                     MOVELKLUXST    #1UXST           EDI Status 3
     C                     MOVELKLVSST    #1VSST           Record Status
     C                     Z-ADDKLAATM    #1AATM           Job Time
     C                     MOVELKLAYNA    #1AYNA           User Id
     C                     MOVELKLA0NA    #1A0NA           Job Name
     C                     Z-ADDKLAXDT    #1AXDT           Job Date
     C                     Z-ADDKLHGCD    #1HGCD           Item Code
      * Clear external version also
     C                     MOVEL*BLANK    V1HGCD
     C                     MOVEL*BLANK    #RN0CD           Item Type Code
     C                     Z-ADD*ZERO     #RCSHD           Chill Time USR
     C                     MOVEL*BLANK    #RADCD           U/M - Primary
     C                     Z-ADD*ZERO     #RCHTM           Fresh Chilling
     C                     Z-ADD*ZERO     #RAWPC           Conversion Fact
     C                     MOVEL*BLANK    #RLXST           Operation Facto
     C                     MOVEL*BLANK    #RAECD           U/M - Second
     C                     Z-ADD*ZERO     #RAXPC           Conversion Fact
     C                     MOVEL*BLANK    #RLYST           Operation Facto
     C                     MOVEL*BLANK    #RAFCD           U/M - Third
     C                     Z-ADD*ZERO     #RAIWG           Unit Weight
     C                     MOVEL*BLANK    #RFZST           Production Date
     C                     MOVEL*BLANK    #RAVST           Catch Weight St
     C                     MOVEL*BLANK    #1SEL            *SFLSEL
     C                     MOVEL*BLANK    #RHHCD           U/M - Primary D
     C                     MOVEL*BLANK    #RYLCD           Item Code is Ba
     C                     Z-ADD*ZERO     #RJ2NB           Day 1 Available
     C                     Z-ADD*ZERO     #RJ3NB           Day 2 Available
     C                     Z-ADD*ZERO     #RJ4NB           Day 3 Available
     C                     Z-ADD*ZERO     #RJ5NB           Day 4 Available
     C                     Z-ADD*ZERO     #RKGNX           Inv Total
     C                     Z-ADD*ZERO     #RJ7NX           Current Shipmen
     C                     Z-ADD*ZERO     #RJ9NX           Ending Inventor
     C                     Z-ADD*ZERO     #RJ8NX           Production
     C                     Z-ADD*ZERO     #RQS01           Quantity Schedu
     C                     Z-ADD*ZERO     #RQS02           Quantity Schedu
     C                     Z-ADD*ZERO     #RQS03           Quantity Schedu
     C                     Z-ADD*ZERO     #RQS04           Quantity Schedu
     C                     Z-ADD*ZERO     #RQS05           Quantity Schedu
     C                     Z-ADD*ZERO     #RN3NX           Quantity Schedu
     C                     MOVEL*BLANK    #RGENA           Item Descriptio
      *================================================================
     CSR         MBEXIT    ENDSR
      /EJECT
     CSR         MEIZ#2    BEGSR
      *================================================================
      * Initialise subfile control
      *================================================================
     C                     MOVEL*BLANK    #CVHST           Lot Tracking Fl
     C                     Z-ADD*ZERO     #2IDSQ           Item Display Se
     C                     MOVEL*BLANK    #CN0CD           Item Type Code
     C                     Z-ADD*ZERO     #CCSHD           Chill Time USR
     C                     Z-ADDP1AIC3    #2AIC3           Company Number
      * Clear external version also
     C                     MOVEL*BLANK    V2AIC3
     C                     MOVEL*BLANK    #CAPTX           Company Name
     C                     MOVELP1V4CD    #2V4CD           Availability Gr
     C                     MOVEL*BLANK    #CNVNA           Availability Gr
     C                     MOVEL*BLANK    #CAJCD           Warehouse Code
     C                     MOVEL*BLANK    #CF8NA           Warehouse Descr
     C                     MOVEL*BLANK    #CWPST           Warehouse Type
     C                     MOVEL*BLANK    #CNENA           Warehouse Type
     C                     Z-ADD*ZERO     #2HGCD           Item Code
      * Clear external version also
     C                     MOVEL*BLANK    V2HGCD
     C                     MOVEL*BLANK    #CHHCD           U/M - Primary D
     C                     Z-ADD*ZERO     #CKGNX           Inv Total
     C                     Z-ADD*ZERO     #CJ7NX           Current Shipmen
     C                     Z-ADD*ZERO     #CJ9NX           Ending Inventor
     C                     Z-ADD*ZERO     #CJ8NX           Production
     C                     Z-ADD*ZERO     #CH6DT           Avail Ship Date
      * Clear external version also
     C                     Z-ADD*ZERO     VCH6DT
     C                     Z-ADD*ZERO     #CH7DT           Avail Ship Date
      * Clear external version also
     C                     Z-ADD*ZERO     VCH7DT
     C                     Z-ADD*ZERO     #CH8DT           Avail Ship Date
      * Clear external version also
     C                     Z-ADD*ZERO     VCH8DT
     C                     Z-ADD*ZERO     #CH9DT           Avail Ship Date
      * Clear external version also
     C                     Z-ADD*ZERO     VCH9DT
     C                     Z-ADD*ZERO     #CIADT           Avail Ship Date
      * Clear external version also
     C                     Z-ADD*ZERO     VCIADT
     C                     Z-ADD*ZERO     #CIBDT           Avail Ship Date
      * Clear external version also
     C                     Z-ADD*ZERO     VCIBDT
      *================================================================
     CSR         MEEXIT    ENDSR
      /EJECT
     CSR         MNCV#1    BEGSR
      *================================================================
      * Convert subfile fields into external form
      *================================================================
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           #1HGCD    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL#1HGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    V1HGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V1HGCD           CD7 Ext Numeric
     C                     END                             *FI
      *================================================================
     CSR         MNEXIT    ENDSR
      /EJECT
     CSR         MOCV#2    BEGSR
      *================================================================
      * Convert control fields into external form
      *================================================================
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           #2AIC3    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL#2AIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    V2AIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V2AIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           #2HGCD    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL#2HGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    V2HGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V2HGCD           CD7 Ext Numeric
     C                     END                             *FI
      * Convert Avail Ship Date 1 USR to display format
      * Convert date
     C           1000000   ADD  #CH6DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCH6DT
      * Convert Avail Ship Date 2 USR to display format
      * Convert date
     C           1000000   ADD  #CH7DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCH7DT
      * Convert Avail Ship Date 3 USR to display format
      * Convert date
     C           1000000   ADD  #CH8DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCH8DT
      * Convert Avail Ship Date 4 USR to display format
      * Convert date
     C           1000000   ADD  #CH9DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCH9DT
      * Convert Avail Ship Date 5 USR to display format
      * Convert date
     C           1000000   ADD  #CIADT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCIADT
      * Convert Avail Ship Date 6 USR to display format
      * Convert date
     C           1000000   ADD  #CIBDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCIBDT
      *================================================================
     CSR         MOEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV Company Name       RT - Company Name and Address  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           ABAIC3           Company Number
      * Setup key
     C                     Z-ADD#2AIC3    ABAIC3           Company Number
      * Establish starting position
     C           KRSSA     CHAIN@ABREG3              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0003' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    #CAPTX           Name
     C                     GOTO SAEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELABADTX    #CAPTX           Name
     C                     ENDIF
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * Rtv Group Description RT - Availability Group  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           KKV4CD           Availability Gr
      * Setup key
     C                     MOVEL#2V4CD    KKV4CD           Availability Gr
      * Establish starting position
     C           KRSSB     CHAIN@KKREG7              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2215' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    #CNVNA           Availability Gr
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELKKNVNA    #CNVNA           Availability Gr
     C                     MOVEL*BLANK    W0RTN            *Return code
     C                     ENDIF
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * RTV Desc/Type/LotTrk  RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           ADAJCD           Warehouse Code
      * Setup key
     C                     MOVEL#CAJCD    ADAJCD           Warehouse Code
      * Establish starting position
     C           KRSSC     CHAIN@ADRET1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     MOVEL*BLANK    #CF8NA           Warehouse Descr
     C                     MOVEL*BLANK    #CVHST           Lot Tracking Fl
     C                     MOVEL*BLANK    #CWPST           Warehouse Type
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELADF8NA    #CF8NA           Warehouse Descr
     C                     MOVELADVHST    #CVHST           Lot Tracking Fl
     C                     MOVELADWPST    #CWPST           Warehouse Type
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * Val Item Bal Exist    RT - IC Item Balance  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           B0AIC3           Company Number
     C                     KFLD           B0HGCD           Item Code
     C                     KFLD           B0AJCD           Warehouse Code
      * Setup key
     C                     Z-ADD#1AIC3    B0AIC3           Company Number
     C                     Z-ADD#1HGCD    B0HGCD           Item Code
     C                     MOVEL#CAJCD    B0AJCD           Warehouse Code
      * Establish starting position
     C           KRSSD     CHAIN@B0REYY              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0328' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'N'       YL0013           Record Found US
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL'Y'       YL0013           Record Found US
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * Rtv Item Type Code     RT - Company/Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           BZAIC3           Company Number
     C                     KFLD           BZHGCD           Item Code
      * Setup key
     C                     Z-ADD#1AIC3    BZAIC3           Company Number
     C                     Z-ADD#1HGCD    BZHGCD           Item Code
      * Establish starting position
     C           KRSSE     CHAIN@BZREJU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    #RN0CD           Item Type Code
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBZN0CD    #RN0CD           Item Type Code
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * Rtv Age Quantities     RT - IC Item Balance Detail  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0001  70       Production Date
     C                     Z-ADD*ZERO     WN0002  70       Chill Date  USR
     C                     Z-ADD*ZERO     WN0003  52       Fresh Chilling
     C                     MOVEL*BLANK    WN0004  1        Record Selected
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     WN0001           Production Date
     C                     Z-ADD*ZERO     YL0014           Quantity Age Da
     C                     Z-ADD*ZERO     YL0015           Quantity Age Da
     C                     Z-ADD*ZERO     YL0016           Quantity Age Da
     C                     Z-ADD*ZERO     YL0017           Quantity Age Da
     C                     Z-ADD*ZERO     YL0018           Quantity Age Da
     C                     Z-ADD*ZERO     YL0019           Quantity Age Da
     C                     Z-ADD*ZERO     YL0020           Quantity Age Da
     C                     Z-ADD*ZERO     YL0021           Quantity Age Da
     C                     Z-ADD*ZERO     YL0022           Quantity On Han
     C                     Z-ADD*ZERO     YL0023           Quantity on Hol
     C                     Z-ADD*ZERO     YL0024           Quantity on Han
     C                     Z-ADD*ZERO     WN0002           Chill Date  USR
     C                     Z-ADD*ZERO     WN0003           Fresh Chilling
     C                     MOVEL*BLANK    WN0004           Record Selected
     C                     Z-ADD*ZERO     YL0038           Day 2 Inventory
     C                     Z-ADD*ZERO     YL0039           Day 3 Inventory
     C                     Z-ADD*ZERO     YL0040           Day 4 Inventory
     C                     Z-ADD*ZERO     YL0041           Day 5 Inventory
     C                     Z-ADD*ZERO     YL0042           Day 6 Inventory
     C                     Z-ADD*ZERO     YL0043           Day 7 Inventory
     C                     Z-ADD*ZERO     YL0044           Day 8 Inventory
     C                     Z-ADD*ZERO     YL0045           Day 9 Inventory
     C                     Z-ADD*ZERO     YL0046           Day 10 Inventor
     C                     Z-ADD*ZERO     YL0047           Day 11 Inventor
     C                     Z-ADD*ZERO     YL0048           Day 12 Inventor
     C                     Z-ADD*ZERO     YL0049           Day 13 Inventor
     C                     Z-ADD*ZERO     YL0050           Day 14 Inventor
      * Rtv Chill Time        RT - Company/Item  * 
     C                     EXSR SGRVGN
      * Declare restrictor key work fields
     C           *LIKE     DEFN B1AIC3    WQSF01           Company Number
     C           *LIKE     DEFN B1HGCD    WQSF02           Item Code
     C           *LIKE     DEFN B1AJCD    WQSF03           Warehouse Code
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           WQSF01           Company Number
     C                     KFLD           WQSF02           Item Code
     C                     KFLD           WQSF03           Warehouse Code
      * Setup key
     C                     Z-ADD#1AIC3    WQSF01           Company Number
     C                     Z-ADD#1HGCD    WQSF02           Item Code
     C                     MOVEL#CAJCD    WQSF03           Warehouse Code
      * Establish starting position
     C           KRSSF     SETLL@B1REIW                    *
     C           KRSSF     READE@B1REIW                  90*
      * Data record not found
     C   90                MOVEL'USR0330' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: PAR.Lot Tracking Flag is yes
     C           #CVHST    IFEQ 'Y'                        *IF
      * Retrieve inventory for Aged Inventory Rpt else for PA Screens
      * CASE: PAR.PA or Aged Inv Usage USR is Aged Inventory
     C           'P'       IFEQ 'A'                        *IF
      * Rtv Age Quantities    RT - Item Lot Location  * 
     C                     EXSR SHRVGN
     C                     ELSE
      * CASE: PAR.PA or Aged Inv Usage USR is Aged Inventory-CoPack
     C           'P'       IFEQ 'C'                        *IF
      * Rtv Age Qtys - Lot    RT - Item Lot Location  * 
     C                     EXSR SIRVGN
     C                     ELSE
      * CASE: *OTHERWISE
      * Rtv PA Age Qty's      RT - Item Lot Location  * 
     C                     EXSR SJRVGN
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Check record selection for include todays transactions
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Include Todays Trans is no
      *   |- c2    : PAR.USR Day 1 EQ DB1.Production Date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           'Y'       IFEQ 'N'                        *IF
     C           YL0005    IFEQ B1ELDT                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       WN0004           Record Selected
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'Y'       WN0004           Record Selected
     C                     END                             *FI
      * If record selected is yes then process
      * CASE: PAR.Record Selected       USR is yes
     C           WN0004    IFEQ 'Y'                        *IF
      * Put Qtys in correct bucket
      * CASE: DB1.Label Date GT PAR.USR Day 1
     C           B1K7DT    IFGT YL0005                     *IF
     C                     ADD  B1ARQT    YL0024           Quantity on Han
     C                     ADD  B1ARQT    YL0022           Quantity On Han
     C                     ELSE
      * CASE: DB1.Label Date EQ PAR.USR Day 1
     C           B1K7DT    IFEQ YL0005                     *IF
     C                     ADD  B1ARQT    YL0014           Quantity Age Da
     C                     ADD  B1ARQT    YL0022           Quantity On Han
     C                     ELSE
      * CASE: DB1.Label Date EQ PAR.USR Day 2
     C           B1K7DT    IFEQ YL0006                     *IF
     C                     ADD  B1ARQT    YL0015           Quantity Age Da
     C                     ADD  B1ARQT    YL0022           Quantity On Han
     C                     ELSE
      * CASE: DB1.Label Date EQ PAR.USR Day 3
     C           B1K7DT    IFEQ YL0007                     *IF
     C                     ADD  B1ARQT    YL0016           Quantity Age Da
     C                     ADD  B1ARQT    YL0022           Quantity On Han
     C                     ELSE
      * CASE: DB1.Label Date EQ PAR.USR Day 4
     C           B1K7DT    IFEQ YL0008                     *IF
     C                     ADD  B1ARQT    YL0017           Quantity Age Da
     C                     ADD  B1ARQT    YL0022           Quantity On Han
     C                     ELSE
      * CASE: DB1.Label Date EQ PAR.USR Day 5
     C           B1K7DT    IFEQ YL0009                     *IF
     C                     ADD  B1ARQT    YL0018           Quantity Age Da
     C                     ADD  B1ARQT    YL0022           Quantity On Han
     C                     ELSE
      * CASE: DB1.Label Date EQ PAR.USR Day 6
     C           B1K7DT    IFEQ YL0010                     *IF
     C                     ADD  B1ARQT    YL0019           Quantity Age Da
     C                     ADD  B1ARQT    YL0022           Quantity On Han
     C                     ELSE
      * CASE: DB1.Label Date EQ PAR.USR Day 7
     C           B1K7DT    IFEQ YL0011                     *IF
     C                     ADD  B1ARQT    YL0020           Quantity Age Da
     C                     ADD  B1ARQT    YL0022           Quantity On Han
     C                     ELSE
      * CASE: DB1.Label Date LT PAR.USR Day 8
     C           B1K7DT    IFLT YL0012                     *IF
     C                     ADD  B1ARQT    YL0021           Quantity Age Da
     C                     ADD  B1ARQT    YL0022           Quantity On Han
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSF     READE@B1REIW                  90*
     C                     ENDDO
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * Rtv Chill Time        RT - Company/Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           BZAIC3           Company Number
     C                     KFLD           BZHGCD           Item Code
      * Setup key
     C                     Z-ADD#1AIC3    BZAIC3           Company Number
     C                     Z-ADD#1HGCD    BZHGCD           Item Code
      * Establish starting position
     C           KRSSG     CHAIN@BZREJU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WN0003           Fresh Chilling
     C                     GOTO SGEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDBZCHTM    WN0003           Fresh Chilling
     C                     ENDIF
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHRVGN    BEGSR
      *================================================================
      * Rtv Age Quantities    RT - Item Lot Location  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN L5AIC3    WQSH01           Company Number
     C           *LIKE     DEFN L5HGCD    WQSH02           Item Code
     C           *LIKE     DEFN L5AJCD    WQSH03           Warehouse Code
     C           *LIKE     DEFN L5ELDT    WQSH04           Production Date
      * Define keylist
     C           KRSSH     KLIST
     C                     KFLD           WQSH01           Company Number
     C                     KFLD           WQSH02           Item Code
     C                     KFLD           WQSH03           Warehouse Code
     C                     KFLD           WQSH04           Production Date
      * Setup key
     C                     Z-ADDB1AIC3    WQSH01           Company Number
     C                     Z-ADDB1HGCD    WQSH02           Item Code
     C                     MOVELB1AJCD    WQSH03           Warehouse Code
     C                     Z-ADDB1ELDT    WQSH04           Production Date
      * Establish starting position
     C           KRSSH     SETLL@L5CPSV                    *
     C           KRSSH     READE@L5CPSV                  90*
      * Data record not found
     C   90                MOVEL'USR2634' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.ILL Status is Available
     C           L5AMSX    IFEQ 'A'                        *IF
      * Put Qtys in correct bucket
      * CASE: DB1.ILL Avail Ship Date GT PAR.USR Day 1
     C           L5LODT    IFGT YL0005                     *IF
     C                     ADD  L5J2QT    YL0024           Quantity on Han
     C                     ADD  L5J2QT    YL0022           Quantity On Han
     C                     ELSE
      * CASE: DB1.ILL Avail Ship Date EQ PAR.USR Day 1
     C           L5LODT    IFEQ YL0005                     *IF
     C                     ADD  L5J2QT    YL0014           Quantity Age Da
     C                     ADD  L5J2QT    YL0022           Quantity On Han
     C                     ELSE
      * CASE: DB1.ILL Avail Ship Date EQ PAR.USR Day 2
     C           L5LODT    IFEQ YL0006                     *IF
     C                     ADD  L5J2QT    YL0015           Quantity Age Da
     C                     ADD  L5J2QT    YL0022           Quantity On Han
     C                     ELSE
      * CASE: DB1.ILL Avail Ship Date EQ PAR.USR Day 3
     C           L5LODT    IFEQ YL0007                     *IF
     C                     ADD  L5J2QT    YL0016           Quantity Age Da
     C                     ADD  L5J2QT    YL0022           Quantity On Han
     C                     ELSE
      * CASE: DB1.ILL Avail Ship Date EQ PAR.USR Day 4
     C           L5LODT    IFEQ YL0008                     *IF
     C                     ADD  L5J2QT    YL0017           Quantity Age Da
     C                     ADD  L5J2QT    YL0022           Quantity On Han
     C                     ELSE
      * CASE: DB1.ILL Avail Ship Date EQ PAR.USR Day 5
     C           L5LODT    IFEQ YL0009                     *IF
     C                     ADD  L5J2QT    YL0018           Quantity Age Da
     C                     ADD  L5J2QT    YL0022           Quantity On Han
     C                     ELSE
      * CASE: DB1.ILL Avail Ship Date EQ PAR.USR Day 6
     C           L5LODT    IFEQ YL0010                     *IF
     C                     ADD  L5J2QT    YL0019           Quantity Age Da
     C                     ADD  L5J2QT    YL0022           Quantity On Han
     C                     ELSE
      * CASE: DB1.ILL Avail Ship Date EQ PAR.USR Day 7
     C           L5LODT    IFEQ YL0011                     *IF
     C                     ADD  L5J2QT    YL0020           Quantity Age Da
     C                     ADD  L5J2QT    YL0022           Quantity On Han
     C                     ELSE
      * CASE: DB1.ILL Avail Ship Date LT PAR.USR Day 8
     C           L5LODT    IFLT YL0012                     *IF
     C                     ADD  L5J2QT    YL0021           Quantity Age Da
     C                     ADD  L5J2QT    YL0022           Quantity On Han
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  L5J2QT    YL0023           Quantity on Hol
     C                     END                             *FI
     C           KRSSH     READE@L5CPSV                  90*
     C                     ENDDO
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * Rtv Age Qtys - Lot    RT - Item Lot Location  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN L5AIC3    WQSI01           Company Number
     C           *LIKE     DEFN L5HGCD    WQSI02           Item Code
     C           *LIKE     DEFN L5AJCD    WQSI03           Warehouse Code
     C           *LIKE     DEFN L5ELDT    WQSI04           Production Date
      * Define keylist
     C           KRSSI     KLIST
     C                     KFLD           WQSI01           Company Number
     C                     KFLD           WQSI02           Item Code
     C                     KFLD           WQSI03           Warehouse Code
     C                     KFLD           WQSI04           Production Date
      * Setup key
     C                     Z-ADDB1AIC3    WQSI01           Company Number
     C                     Z-ADDB1HGCD    WQSI02           Item Code
     C                     MOVELB1AJCD    WQSI03           Warehouse Code
     C                     Z-ADDB1ELDT    WQSI04           Production Date
      * Establish starting position
     C           KRSSI     SETLL@L5CPSV                    *
     C           KRSSI     READE@L5CPSV                  90*
      * Data record not found
     C   90                MOVEL'USR2634' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.ILL Status is Available
     C           L5AMSX    IFEQ 'A'                        *IF
      * Put Qtys in correct bucket
      * CASE: DB1.ILL Avail Ship Date GT JOB.*Job date
     C           L5LODT    IFGT ##JDT                      *IF
     C                     ADD  L5J2QT    YL0024           Quantity on Han
     C                     ADD  L5J2QT    YL0022           Quantity On Han
     C                     ELSE
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.ILL Avail Ship Date LE JOB.*Job date
      *   |- c2    : DB1.ILL Avail Ship Date GE PAR.USR Day 1
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           L5LODT    IFLE ##JDT                      *IF
     C           L5LODT    IFGE YL0005                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  L5J2QT    YL0014           Quantity Age Da
     C                     ADD  L5J2QT    YL0022           Quantity On Han
     C                     ELSE
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.ILL Avail Ship Date LT PAR.USR Day 1
      *   |- c2    : DB1.ILL Avail Ship Date GE PAR.USR Day 2
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           L5LODT    IFLT YL0005                     *IF
     C           L5LODT    IFGE YL0006                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  L5J2QT    YL0015           Quantity Age Da
     C                     ADD  L5J2QT    YL0022           Quantity On Han
     C                     ELSE
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.ILL Avail Ship Date LT PAR.USR Day 2
      *   |- c2    : DB1.ILL Avail Ship Date GE PAR.USR Day 3
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           L5LODT    IFLT YL0006                     *IF
     C           L5LODT    IFGE YL0007                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  L5J2QT    YL0016           Quantity Age Da
     C                     ADD  L5J2QT    YL0022           Quantity On Han
     C                     ELSE
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.ILL Avail Ship Date LT PAR.USR Day 3
      *   |- c2    : DB1.ILL Avail Ship Date GE PAR.USR Day 4
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           L5LODT    IFLT YL0007                     *IF
     C           L5LODT    IFGE YL0008                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  L5J2QT    YL0017           Quantity Age Da
     C                     ADD  L5J2QT    YL0022           Quantity On Han
     C                     ELSE
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.ILL Avail Ship Date LT PAR.USR Day 4
      *   |- c2    : DB1.ILL Avail Ship Date GE PAR.USR Day 5
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           L5LODT    IFLT YL0008                     *IF
     C           L5LODT    IFGE YL0009                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  L5J2QT    YL0018           Quantity Age Da
     C                     ADD  L5J2QT    YL0022           Quantity On Han
     C                     ELSE
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.ILL Avail Ship Date LT PAR.USR Day 5
      *   |- c2    : DB1.ILL Avail Ship Date GE PAR.USR Day 6
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           L5LODT    IFLT YL0009                     *IF
     C           L5LODT    IFGE YL0010                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  L5J2QT    YL0019           Quantity Age Da
     C                     ADD  L5J2QT    YL0022           Quantity On Han
     C                     ELSE
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.ILL Avail Ship Date LT PAR.USR Day 6
      *   |- c2    : DB1.ILL Avail Ship Date GE PAR.USR Day 7
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           L5LODT    IFLT YL0010                     *IF
     C           L5LODT    IFGE YL0011                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  L5J2QT    YL0020           Quantity Age Da
     C                     ADD  L5J2QT    YL0022           Quantity On Han
     C                     ELSE
      * CASE: DB1.ILL Avail Ship Date LE PAR.USR Day 8
     C           L5LODT    IFLE YL0012                     *IF
     C                     ADD  L5J2QT    YL0021           Quantity Age Da
     C                     ADD  L5J2QT    YL0022           Quantity On Han
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  L5J2QT    YL0023           Quantity on Hol
     C                     END                             *FI
     C           KRSSI     READE@L5CPSV                  90*
     C                     ENDDO
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * Rtv PA Age Qty's      RT - Item Lot Location  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0005  70       ILL Avail Ship
     C                     MOVEL*BLANK    WN0006  1        Day of Week
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN L5AIC3    WQSJ01           Company Number
     C           *LIKE     DEFN L5HGCD    WQSJ02           Item Code
     C           *LIKE     DEFN L5AJCD    WQSJ03           Warehouse Code
     C           *LIKE     DEFN L5ELDT    WQSJ04           Production Date
      * Define keylist
     C           KRSSJ     KLIST
     C                     KFLD           WQSJ01           Company Number
     C                     KFLD           WQSJ02           Item Code
     C                     KFLD           WQSJ03           Warehouse Code
     C                     KFLD           WQSJ04           Production Date
      * Setup key
     C                     Z-ADDB1AIC3    WQSJ01           Company Number
     C                     Z-ADDB1HGCD    WQSJ02           Item Code
     C                     MOVELB1AJCD    WQSJ03           Warehouse Code
     C                     Z-ADDB1ELDT    WQSJ04           Production Date
      * Establish starting position
     C           KRSSJ     SETLL@L5CPSV                    *
     C           KRSSJ     READE@L5CPSV                  90*
      * Data record not found
     C   90                MOVEL'USR2634' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * RTV Day/Wk/Prd/Yr      RT - Calendar  * 
     C                     EXSR SKRVGN
      * If day is Sunday then move to monday
      * CASE: PAR.Day of Week is Sunday
     C           WN0006    IFEQ '1'                        *IF
      * PAR.ILL Avail Ship Date = DB1.ILL Avail Ship Date + CON.1 *DAYS
     C           L5LODT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     WN0005
     C                     ELSE
     C           XDINDT    SUB  1000000   WN0005
     C                     END
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDL5LODT    WN0005           ILL Avail Ship
     C                     END                             *FI
      * Move Quantity to correct Day Bucket
      * CASE: DB1.ILL Avail Ship Date LE JOB.*Job date
     C           L5LODT    IFLE ##JDT                      *IF
     C                     ADD  L5J2QT    YL0022           Quantity On Han
     C                     ELSE
      * CASE: PAR.ILL Avail Ship Date EQ PAR.Avail Ship Date 2 USR
     C           WN0005    IFEQ YL0025                     *IF
     C                     ADD  L5J2QT    YL0038           Day 2 Inventory
     C                     ELSE
      * CASE: PAR.ILL Avail Ship Date EQ PAR.Avail Ship Date 3 USR
     C           WN0005    IFEQ YL0026                     *IF
     C                     ADD  L5J2QT    YL0039           Day 3 Inventory
     C                     ELSE
      * CASE: PAR.ILL Avail Ship Date EQ PAR.Avail Ship Date 4 USR
     C           WN0005    IFEQ YL0027                     *IF
     C                     ADD  L5J2QT    YL0040           Day 4 Inventory
     C                     ELSE
      * CASE: PAR.ILL Avail Ship Date EQ PAR.Avail Ship Date 5 USR
     C           WN0005    IFEQ YL0028                     *IF
     C                     ADD  L5J2QT    YL0041           Day 5 Inventory
     C                     ELSE
      * CASE: PAR.ILL Avail Ship Date EQ PAR.Avail Ship Date 6 USR
     C           WN0005    IFEQ YL0029                     *IF
     C                     ADD  L5J2QT    YL0042           Day 6 Inventory
     C                     ELSE
      * CASE: PAR.ILL Avail Ship Date EQ PAR.Avail Ship Date 7 USR
     C           WN0005    IFEQ YL0030                     *IF
     C                     ADD  L5J2QT    YL0043           Day 7 Inventory
     C                     ELSE
      * CASE: PAR.ILL Avail Ship Date EQ PAR.Avail Ship Date 8 USR
     C           WN0005    IFEQ YL0031                     *IF
     C                     ADD  L5J2QT    YL0044           Day 8 Inventory
     C                     ELSE
      * CASE: PAR.ILL Avail Ship Date EQ PAR.Avail Ship Date 9 USR
     C           WN0005    IFEQ YL0032                     *IF
     C                     ADD  L5J2QT    YL0045           Day 9 Inventory
     C                     ELSE
      * CASE: PAR.ILL Avail Ship Date EQ PAR.Avail Ship Date 10 USR
     C           WN0005    IFEQ YL0033                     *IF
     C                     ADD  L5J2QT    YL0046           Day 10 Inventor
     C                     ELSE
      * CASE: PAR.ILL Avail Ship Date EQ PAR.Avail Ship Date 11 USR
     C           WN0005    IFEQ YL0034                     *IF
     C                     ADD  L5J2QT    YL0047           Day 11 Inventor
     C                     ELSE
      * CASE: PAR.ILL Avail Ship Date EQ PAR.Avail Ship Date 12 USR
     C           WN0005    IFEQ YL0035                     *IF
     C                     ADD  L5J2QT    YL0048           Day 12 Inventor
     C                     ELSE
      * CASE: PAR.ILL Avail Ship Date EQ PAR.Avail Ship Date 13 USR
     C           WN0005    IFEQ YL0036                     *IF
     C                     ADD  L5J2QT    YL0049           Day 13 Inventor
     C                     ELSE
      * CASE: PAR.ILL Avail Ship Date EQ PAR.Avail Ship Date 14 USR
     C           WN0005    IFEQ YL0037                     *IF
     C                     ADD  L5J2QT    YL0050           Day 14 Inventor
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSJ     READE@L5CPSV                  90*
     C                     ENDDO
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         SKRVGN    BEGSR
      *================================================================
      * RTV Day/Wk/Prd/Yr      RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSK     KLIST
     C                     KFLD           AFAIC3           Company Number
     C                     KFLD           AFBCDT           Post to G/L Dat
      * Setup key
     C                     Z-ADDL5AIC3    AFAIC3           Company Number
     C                     Z-ADDL5LODT    AFBCDT           Post to G/L Dat
      * Establish starting position
     C           KRSSK     CHAIN@AFREBE              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0018' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WUCQNB           Julian Date
     C                     Z-ADD*ZERO     WUESNB           Accounting Year
     C                     Z-ADD*ZERO     WUETNB           Accounting Peri
     C                     Z-ADD*ZERO     WUBZNB           OM Week
     C                     MOVEL*BLANK    WN0006           Day of Week
     C                     Z-ADD*ZERO     WUEINB           Week Number
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SKEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDAFCQNB    WUCQNB           Julian Date
     C                     Z-ADDAFESNB    WUESNB           Accounting Year
     C                     Z-ADDAFETNB    WUETNB           Accounting Peri
     C                     Z-ADDAFBZNB    WUBZNB           OM Week
     C                     MOVELAFA9ST    WN0006           Day of Week
     C                     Z-ADDAFEINB    WUEINB           Week Number
     C                     MOVEL*BLANK    W0RTN            *Return code
     C                     ENDIF
      *================================================================
     CSR         SKEXIT    ENDSR
      /EJECT
     CSR         SLRVGN    BEGSR
      *================================================================
      * Rtv Avail Prod wo/Ord RT - PS Prod Item Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0007  92       PS Weight Ship
     C                     Z-ADD*ZERO     WN0008  70       PS Pieces Ship
     C                     MOVEL*BLANK    WN0009  1        Piece Count Ite
     C                     Z-ADD*ZERO     WN0010  70       Pieces Per Bag
     C                     Z-ADD*ZERO     WN0011  70       Bags Per Unit
     C                     Z-ADD*ZERO     WN0012  92       Weight Producti
     C                     Z-ADD*ZERO     WN0013  70       Pieces Producti
     C                     Z-ADD*ZERO     WN0014 112       OD Qty/Cnsmd Pi
     C                     Z-ADD*ZERO     WN0015 112       OD Weight Sched
     C                     Z-ADD*ZERO     WN0016  70       Pieces Allocate
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     WN0007           PS Weight Ship
     C                     Z-ADD*ZERO     WN0008           PS Pieces Ship
     C                     Z-ADD*ZERO     P2EOWG           ATS Weight Avai
     C                     Z-ADD*ZERO     P3EWNB           ATS Pieces Avai
     C                     MOVEL*BLANK    WN0009           Piece Count Ite
     C                     Z-ADD*ZERO     WN0010           Pieces Per Bag
     C                     Z-ADD*ZERO     WN0011           Bags Per Unit
     C                     Z-ADD*ZERO     WN0012           Weight Producti
     C                     Z-ADD*ZERO     WN0013           Pieces Producti
     C                     Z-ADD*ZERO     WN0014           OD Qty/Cnsmd Pi
     C                     Z-ADD*ZERO     WN0015           OD Weight Sched
     C                     Z-ADD*ZERO     WN0016           Pieces Allocate
      * Define keylist
     C           KRSSL     KLIST
     C                     KFLD           I8AIC3           Company Number
     C                     KFLD           I8V5ST           Production Type
     C                     KFLD           I8ELDT           Production Date
     C                     KFLD           I8HGCD           Item Code
     C                     KFLD           I8AJCD           Warehouse Code
      * Setup key
     C                     Z-ADD#1AIC3    I8AIC3           Company Number
     C                     MOVEL'S'       I8V5ST           Production Type
     C                     Z-ADD##JDT     I8ELDT           Production Date
     C                     Z-ADD#1HGCD    I8HGCD           Item Code
     C                     MOVEL#CAJCD    I8AJCD           Warehouse Code
      * Establish starting position
     C           KRSSL     CHAIN@I8CPUS              90    *
      * Data record not found
     C   90                MOVEL'USR1763' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * Production = Standard + Prod Adj - Converted
      * CASE: DB1.PS Lock Status is NOT LOCKED
     C           I8B5ST    IFEQ 'N'                        *IF
      * Weight Available Prod
      * PAR.ATS Weight Available USR =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.PS Weight Standard
      * +     : PGM.*Synon (15,2) work field
      * x2    : DB1.PS Weight Prod Adj
      * -     : PGM.*Synon (15,2) work field
      * x3    : DB1.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x4    : DB1.PS Weight Whse Tfr Adj
     C           I8DXWG    ADD  I8D1WG    W0WA02           *Synon (15,2) w
     C           W0WA02    SUB  I8WTCN    W0WA01           *Synon (15,2) w
     C           W0WA01    SUB  I8GAWG    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    P2EOWG           ATS Weight Avai
      * Pieces Available Prod
      * PAR.ATS Pieces Available USR =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x2    : DB1.PS Pieces Prod Adj
      * -     : PGM.*Synon (15,0) work field
      * x3    : DB1.PS Pieces Converted
      * -     : PGM.*Synon (17,7) work field
      * x4    : DB1.PS Pieces Whse Tfr Adj
     C           I8B2NB    ADD  I8CBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  I8PSCV    W0WJ01           *Synon (15,0) w
     C           W0WJ01    SUB  I8BPNB    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    P3EWNB           ATS Pieces Avai
      * Weight Avail
      * CASE: PAR.ATS Weight Available USR is Less than zero
     C           P2EOWG    IFLT 0                          *IF
     C                     Z-ADD0         P2EOWG           ATS Weight Avai
     C                     Z-ADD0         P3EWNB           ATS Pieces Avai
     C                     END                             *FI
     C                     Z-ADDI8F8WG    YN0001           PS Avg Piece Wg
     C                     END                             *FI
     C                     ENDIF
      *================================================================
     CSR         SLEXIT    ENDSR
      /EJECT
     CSR         SMRVGN    BEGSR
      *================================================================
      * Rtv Base Values PA    RT - Company Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSM     KLIST
     C                     KFLD           BZAIC3           Company Number
     C                     KFLD           BZHGCD           Item Code
      * Setup key
     C                     Z-ADD#1AIC3    BZAIC3           Company Number
     C                     Z-ADD#1HGCD    BZHGCD           Item Code
      * Establish starting position
     C           KRSSM     CHAIN@BZREJU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    #RGENA           Description Lin
     C                     MOVEL*BLANK    #RHHCD           U/M - Primary
     C                     Z-ADD*ZERO     #RAIWG           Unit Weight
     C                     MOVEL*BLANK    #RFZST           Production Date
     C                     MOVEL*BLANK    #RAVST           Catch Weight St
     C                     Z-ADD*ZERO     #RCHTM           Fresh Chilling
     C                     MOVEL*BLANK    YL0053           Base/Conv/Loss
     C                     MOVEL*BLANK    P4PCCT           Piece Count Ite
     C                     Z-ADD*ZERO     YL0054           Pieces Per Bag
     C                     Z-ADD*ZERO     YL0055           Bags Per Unit
     C                     MOVEL*BLANK    YL0056           Record Status
     C                     GOTO SMEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBZAVNA    #RGENA           Description Lin
     C                     MOVELBZADCD    #RHHCD           U/M - Primary
     C                     Z-ADDBZAIWG    #RAIWG           Unit Weight
     C                     MOVELBZFZST    #RFZST           Production Date
     C                     MOVELBZAVST    #RAVST           Catch Weight St
     C                     Z-ADDBZCHTM    #RCHTM           Fresh Chilling
     C                     MOVELBZQZCD    YL0053           Base/Conv/Loss
     C                     MOVELBZPCCT    P4PCCT           Piece Count Ite
     C                     Z-ADDBZBDNB    YL0054           Pieces Per Bag
     C                     Z-ADDBZBJNB    YL0055           Bags Per Unit
     C                     MOVELBZVSST    YL0056           Record Status
     C                     ENDIF
      *================================================================
     CSR         SMEXIT    ENDSR
      /EJECT
     CSR         SNRVGN    BEGSR
      *================================================================
      * Rtv Schd Shipmnt<today RT - PD Order Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD0         #RJ7NX           Quantity Schedu
      * Declare restrictor key work fields
     C           *LIKE     DEFN OMAIC3    WQSN01           Company Number
     C           *LIKE     DEFN OMHGCD    WQSN02           Item Code
     C           *LIKE     DEFN OMAJCD    WQSN03           Warehouse Code
      * Define keylist
     C           KRSSN     KLIST
     C                     KFLD           WQSN01           Company Number
     C                     KFLD           WQSN02           Item Code
     C                     KFLD           WQSN03           Warehouse Code
      * Setup key
     C                     Z-ADD#1AIC3    WQSN01           Company Number
     C                     Z-ADD#1HGCD    WQSN02           Item Code
     C                     MOVEL#CAJCD    WQSN03           Warehouse Code
      * Establish starting position
     C           KRSSN     SETLL@BGWKKG                    *
     C           KRSSN     READE@BGWKKG                  90*
      * Data record not found
     C   90                MOVEL'USR1309' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Scheduled Ship Date LE JOB.*Job date
     C           OMAODT    IFLE ##JDT                      *IF
      * RTV Hdr Sts,BillActTy RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDOMAIC3    WL0001           Company Number
     C                     Z-ADDOMC4NB    WL0002           Order Number
     C                     EXSR SORVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    YL0057    P      Header Status
     C                     MOVELWL0004    YL0058    P      Billing Activit
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Header Status is Not Comp/Canc/Conf
      *   |- c2    : LCL.Billing Activity Type is Invoice or Transfer
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0057    IFEQ 'L'                        *IF
     C           YL0057    OREQ 'A'
     C           YL0057    OREQ 'E'
     C           YL0057    OREQ 'H'
     C           YL0058    IFEQ '1'                        *IF
     C           YL0058    OREQ '4'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  OMCCQT    #RJ7NX           Quantity Schedu
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSN     READE@BGWKKG                  90*
     C                     ENDDO
      *================================================================
     CSR         SNEXIT    ENDSR
      /EJECT
     CSR         SORVGN    BEGSR
      *================================================================
      * RTV Hdr Sts,BillActTy RT - Order Header TRG  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSO     KLIST
     C                     KFLD           BEAIC3           Company Number
     C                     KFLD           BEC4NB           Order Number
      * Setup key
     C                     Z-ADDWL0001    BEAIC3           Company Number
     C                     Z-ADDWL0002    BEC4NB           Order Number
      * Establish starting position
     C           KRSSO     CHAIN@BECPFK              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0176' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SOEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBEGWST    WL0003           Header Status
     C                     MOVELBEOBST    WL0004           Billing Activit
     C                     ENDIF
      *================================================================
     CSR         SOEXIT    ENDSR
      /EJECT
     CSR         SPRVGN    BEGSR
      *================================================================
      * VAL Item Storage       RT - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
     C           YL01      IFGT 0
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * Initialize internal index
     C                     MOVEL*LOVAL    YD01
      * Move key fields to PAR Item Storage
     C                     Z-ADDYL0060    YI0101           USR Count
      *
      * Only search if key is not beyond range of current elements
     C           YK01,YL01 IFGT YD01
     C           YD01      LOKUPYK01,Y               90    Look for >
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFNE YL0060
      *
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Array element not found
     C                     MOVEL'Y2U0005' W0RTN   7
      * USER: Processing if Data record not found
      * CRT Item Storage       CR - *Arrays  * 
     C                     EXSR SQCRRC
     C                     GOTO SPEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '1'
     C           YI01      OCUR YM01
      * USER: Process Data record
      * CHG Item Storage       CH - *Arrays  * 
     C                     EXSR SRCHRC
     C                     ENDIF
      *================================================================
     CSR         SPEXIT    ENDSR
      /EJECT
     CSR         SQCRRC    BEGSR
      *================================================================
      * CRT Item Storage       CR - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Array full, cannot add any more elements
     C           YL01      IFEQ 100
     C                     MOVEL'Y2U0036' W0RTN   7
     C                     GOTO SQEXIT
     C                     ENDIF
      *
     C                     Z-ADD*ZERO     XACNT            USR Count
     C                     Z-ADD*ZERO     XAHGCD           Item Code
      * Move all fields to PAR Item Storage
     C                     Z-ADDYL0060    XACNT            USR Count
     C                     Z-ADD#1HGCD    XAHGCD           Item Code
      *
      * Move key fields to PAR Item Storage
     C                     Z-ADDXACNT     YI0101           USR Count
      *
      * Check for duplicate primary key
      * Initialize internal index
     C                     Z-ADD*ZERO     YI01
      * Only search if key is not beyond range of current elements
     C           YL01      IFGT 0
     C           YK01,YL01 ANDGTYD01
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C           YD01      LOKUPYK01,Y               90    Look for >
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFEQ XACNT
      * Array element already exists
     C                     MOVEL'Y2U0003' W0RTN   7
     C                     GOTO SQEXIT
     C                     ENDIF
      *
     C                     ENDIF
      *
      * Insert after last used element
     C           YL01      ADD  1         Y       50
      * Check if element was a previously deleted element
     C           YK01,Y    IFNE *HIVAL
      * If so, reuse MODS index
     C                     MOVELYK01,Y    YD01
     C                     ELSE
      * If not, use element number as MODS index
     C                     Z-ADDY         YI01
     C                     ENDIF
      *
      * Create(insert) new element
      * Move key fields to PAR Item Storage
     C                     Z-ADDXACNT     YI0101           USR Count
      *
     C                     MOVELYD01      YK01,Y
     C           YI01      OCUR YM01
      * Update MODS fields
     C                     Z-ADDXACNT     WACNT            USR Count
     C                     Z-ADDXAHGCD    WAHGCD           Item Code
      * Only sort if element is out of position
     C           YL01      IFGT 0
     C           YK01,YL01 ANDGTYD01
      * Adjust RTVOBJ index to reflect position of added/removed element
     C           YR01      IFGT 0
     C           YR01      ANDLE100
     C           YK01,YR01 ANDGTYD01
     C                     ADD  1         YR01    50
     C                     ENDIF
      * Sort array to place element in correct position
     C                     SORTAYK01
     C                     ENDIF
      * Adjust number of elements currently in array
     C                     ADD  1         YL01
      *================================================================
     CSR         SQEXIT    ENDSR
      /EJECT
     CSR         SRCHRC    BEGSR
      *================================================================
      * CHG Item Storage       CH - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move key fields to PAR Item Storage
     C                     Z-ADDWACNT     YI0101           USR Count
      *
      * Reset global index if not within range of current elements
     C           Y         IFGT YL01
     C                     Z-ADD1         Y
     C                     ENDIF
      * Only search if not already pointing to correct element
     C           Y         IFGT 0
     C           YD01      ANDNEYK01,Y
      * Initialize internal index
     C                     Z-ADD*ZERO     YI01
      * Only search if key is not beyond range of current elements
     C           YL01      IFGT 0
     C           YK01,YL01 ANDGTYD01
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C           YD01      LOKUPYK01,Y               90    Look for >
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFNE WACNT
      *
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Element not found in array
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     GOTO SREXIT
     C                     ENDIF
      *
     C                     ENDIF
     C           YI01      OCUR YM01
      *
      * Move all fields to PAR Item Storage
     C                     Z-ADD#1HGCD    WAHGCD           Item Code
      *
      *
      *================================================================
     CSR         SREXIT    ENDSR
      /EJECT
     CSR         SSRVGN    BEGSR
      *================================================================
      * RTV Sched Shipments    RT - Order Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD0         WL0009           Day 7 Sched Shi
      * Declare restrictor key work fields
     C           *LIKE     DEFN WBAIC3    WQSS01           Company Number
     C           *LIKE     DEFN WBHGCD    WQSS02           Item Code
     C           *LIKE     DEFN WBAJCD    WQSS03           Warehouse Code
     C           *LIKE     DEFN WBAODT    WQSS04           Scheduled Ship
      * Define keylist
     C           KRSSS     KLIST
     C                     KFLD           WQSS01           Company Number
     C                     KFLD           WQSS02           Item Code
     C                     KFLD           WQSS03           Warehouse Code
     C                     KFLD           WQSS04           Scheduled Ship
      * Setup key
     C                     Z-ADDWL0005    WQSS01           Company Number
     C                     Z-ADDWL0006    WQSS02           Item Code
     C                     MOVELWL0007    WQSS03           Warehouse Code
     C                     Z-ADDWL0008    WQSS04           Scheduled Ship
      * Establish starting position
     C           KRSSS     SETLL@BGWKLI                    *
     C           KRSSS     READE@BGWKLI                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1309' W0RTN   7
      * USER: Processing if Data record not found
     C                     GOTO SSEXIT                     *QUIT
     C                     GOTO SSEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * RTV Hdr Sts,BillActTy RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWBAIC3    WL0001           Company Number
     C                     Z-ADDWBC4NB    WL0002           Order Number
     C                     EXSR SORVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    YL0061    P      Header Status
     C                     MOVELWL0004    YL0062    P      Billing Activit
      * CASE: LCL.Billing Activity Type is Invoice or Transfer
     C           YL0062    IFEQ '1'                        *IF
     C           YL0062    OREQ '4'
     C                     ADD  WBCCQT    WL0009           Day 7 Sched Shi
     C                     END                             *FI
     C           KRSSS     READE@BGWKLI                  90*
     C                     ENDDO
      *================================================================
     CSR         SSEXIT    ENDSR
      /EJECT
     CSR         STRVGN    BEGSR
      *================================================================
      * VAL Shipping Co WHS   RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WCBWC3    WQST01           Shipping Compan
     C           *LIKE     DEFN WCAJCD    WQST02           Warehouse Code
      * Define keylist
     C           KRSST     KLIST
     C                     KFLD           WQST01           Shipping Compan
     C                     KFLD           WQST02           Warehouse Code
      * Setup key
     C                     Z-ADD#2AIC3    WQST01           Shipping Compan
     C                     MOVEL#CAJCD    WQST02           Warehouse Code
      * Establish starting position
     C           KRSST     SETLL@ADREWA                    *
     C           KRSST     READE@ADREWA                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUF8NA           Warehouse Descr
     C                     GOTO STEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWCF8NA    WUF8NA           Warehouse Descr
     C           KRSST     READE@ADREWA                  90*
     C                     ENDDO
      *================================================================
     CSR         STEXIT    ENDSR
      /EJECT
     CSR         SURVGN    BEGSR
      *================================================================
      * Rtv Warehouse/type Val RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSU     KLIST
     C                     KFLD           ADAJCD           Warehouse Code
      * Setup key
     C                     MOVEL#CAJCD    ADAJCD           Warehouse Code
      * Establish starting position
     C           KRSSU     CHAIN@ADRET1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'N'       YL0013           Record Found US
     C                     GOTO SUEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL'Y'       YL0013           Record Found US
     C                     MOVELADWPST    #CWPST           Warehouse Type
     C                     GOTO SUEXIT                     *QUIT
     C                     ENDIF
      *================================================================
     CSR         SUEXIT    ENDSR
      /EJECT
     CSR         SVRVGN    BEGSR
      *================================================================
      * RTV Storage Item       RT - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
     C           YL01      IFGT 0
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * Initialize internal index
     C                     MOVEL*LOVAL    YD01
      * Move key fields to PAR Item Storage
     C                     Z-ADDWL0010    YI0101           USR Count
      *
      * Only search if key is not beyond range of current elements
     C           YK01,YL01 IFGT YD01
     C           YD01      LOKUPYK01,Y               90    Look for >
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFNE WL0010
      *
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Array element not found
     C                     MOVEL'Y2U0005' W0RTN   7
     C                     ENDIF
      *
     C           *IN90     IFEQ '1'
     C           YI01      OCUR YM01
      * USER: Process Data record
     C                     Z-ADDWAHGCD    WL0011           Item Code
     C                     GOTO SVEXIT                     *QUIT
     C                     ENDIF
      *================================================================
     CSR         SVEXIT    ENDSR
      /EJECT
     CSR         SWRVGN    BEGSR
      *================================================================
      * RTV Program Setup w/Co RT - User Profile Control  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSW     KLIST
     C                     KFLD           DRAJVN           User Profile Na
      * Setup key
     C                     MOVELWN0017    DRAJVN           User Profile Na
      * Establish starting position
     C           KRSSW     CHAIN@DRRETH              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0763' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SWEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDRI6ST    YL0064           Allow Multi-Com
     C                     MOVELDRMPNA    YL0066           Default Printer
     C                     MOVELDRBCCD    YL0065           Salesperson Cod
     C                     Z-ADDDRAIC3    YL0067           Company Number
     C                     MOVELDRBUVN    WN0018           User Code Model
     C                     ENDIF
      *================================================================
     CSR         SWEXIT    ENDSR
      /EJECT
     CSR         SXRVGN    BEGSR
      *================================================================
      * RTV Appl. Profile      RT - User Application Profile  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSX     KLIST
     C                     KFLD           DTAJVN           User Profile Na
     C                     KFLD           DTDNCD           Application Cod
      * Setup key
     C                     MOVELWL0012    DTAJVN           User Profile Na
     C                     MOVELWL0013    DTDNCD           Application Cod
      * Establish starting position
     C           KRSSX     CHAIN@DTRETE              90    *
      * Data record not found
     C   90                MOVEL'USR0767' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDDTAIC3    WL0014           Company Number
     C                     MOVELDTAJCD    WL0015           Warehouse Code
     C                     ENDIF
      *================================================================
     CSR         SXEXIT    ENDSR
      /EJECT
     CSR         SYRVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSY01           Application Cod
      * Define keylist
     C           KRSSY     KLIST
     C                     KFLD           WQSY01           Application Cod
      * Setup key
     C                     MOVE *BLANK    WQSY01           Application Cod
     C                     MOVEL'OMS'     WQSY01           Application Cod
      * Establish starting position
     C           KRSSY     SETLL@DNRESF                    *
     C           KRSSY     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           DNRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR SZRVGN
     C                     END                             *FI
     C           KRSSY     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SYEXIT    ENDSR
      /EJECT
     CSR         SZRVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSZ01           Application Cod
      * Define keylist
     C           KRSSZ     KLIST
     C                     KFLD           WQSZ01           Application Cod
      * Setup key
     C                     MOVELDNRSCD    WQSZ01           Application Cod
      * Establish starting position
     C           KRSSZ     SETLL@DNRESF                    *
     C           KRSSZ     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAUNA           Description
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SZEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C           KRSSZ     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SZEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * CALC:  Production Amount
      *================================================================
     C                     MOVEL'N'       YL0051           USR Display 1
      * Rtv Avail Prod wo/Ord RT - PS Prod Item Schedule  * 
     C                     EXSR SLRVGN
      * Rtv Base Values PA    RT - Company Item  * 
     C                     EXSR SMRVGN
      * CASE:
      *  - c1 OR c2
      *   |- c1    : LCL.Pieces Per Bag is EQ Zero
      *   |- c2    : LCL.Bags Per Unit is EQ Zero
      *   '-
     C           YL0054    IFEQ *ZERO                      *IF
     C           YL0055    OREQ *ZERO                      *OR
     C                     ELSE
      * CASE: *OTHERWISE
      * CALC:  Production Amount
      * CASE: PAR.Piece Count Item is yes
     C           P4PCCT    IFEQ 'Y'                        *IF
      * CASE:
      *  - c1 AND c2
      *   |- c1    : LCL.Pieces Per Bag is EQ Zero
      *   |- c2    : LCL.Bags Per Unit is EQ Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0054    IFEQ *ZERO                      *IF
     C           YL0055    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Production Amount
      * RCD.Production            USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (17,7) work field *
      * x2    : LCL.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x3    : LCL.Bags Per Unit
     C           YL0054    MULT YL0055    W0WD01           *Synon (17,7) w
     C           P3EWNB    DIV  W0WD01    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    #RJ8NX           Production
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: RCD.Unit Weight is Equal to zero
     C           #RAIWG    IFEQ *ZERO                      *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C           P2EOWG    DIV  #RAIWG    #RJ8NX           Production
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * LOAD:  Paging Array
      *================================================================
     C                     Z-ADD5         YL0059           Calc 3
      * CASE: LCL.USR Count GE LCL.Calc 3
     C           YL0060    IFGE YL0059                     *IF
     C                     Z-ADD1         YL0060           USR Count
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  1         YL0060           USR Count
     C                     END                             *FI
      * VAL Item Storage       RT - *Arrays  * 
     C                     EXSR SPRVGN
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         UCSUBR    BEGSR
      *================================================================
      * CALC:  Ending Inventory
      *================================================================
      * CALC:  Ending Inventory
      * CASE: RCD.Chill Time USR is equal to zero
     C           #RCSHD    IFEQ *ZERO                      *IF
      * CALC:  Ending Inventory
      * RCD.Ending Inventory      USR =
      *    *COMPUTE ((x1 + x2) - x3)
      * x1    : RCD.Inv Total             USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : RCD.Production            USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : RCD.Current Shipments     USR
     C           #RKGNX    ADD  #RJ8NX    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  #RJ7NX    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    #RJ9NX           Ending Inventor
     C                     ELSE
      * CASE: *OTHERWISE
     C           #RKGNX    SUB  #RJ7NX    #RJ9NX           Ending Inventor
     C                     END                             *FI
      *================================================================
     CSR         UCEXIT    ENDSR
      /EJECT
     CSR         VACKRL    BEGSR
      *================================================================
      * Check reference to Availability Group
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Name search required?
     C                     MOVEL#2V4CD    WK1X01  1
     C           WK1X01    IFEQ '?'                        Availability Gr
     C           YPMTFD    OREQ '#2V4CD'
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(CTL) #2V4CD' defaulted for 'Availability Group Code'.
     C                     CALL 'PDDVSRR'              90  SEL Avail Group
     C                     PARM *BLANK    W0RTN   7
     C           #2V4CD    PARM #2V4CD    WQ0001  3        Availability Gr
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDDVSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     9932  *
     C                     END
      *
     C           #2V4CD    IFNE *BLANK                     Availability Gr
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C           WK1X01    ANDNE'?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
      * No value selected, exit
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     GOTO VAEXIT
     C                     END
     C                     END
      *................................................................
      * If all low order keys not entered, exit
     C           #2V4CD    IFEQ *BLANK                     Availability Gr
     C                     GOTO VAEXIT
     C                     END
      *
     C           KLVAKK    KLIST
     C                     KFLD           KKV4CD           Availability Gr
      * Setup key
     C                     MOVEL#2V4CD    KKV4CD
     C           KLVAKK    CHAIN@KKREG7              9091  *
     C           *IN90     IFEQ '0'
      * Record found - move back any virtuals
     C                     GOTO VAEXIT
     C                     END
     C           YPMTFD    IFNE *BLANK
     C                     SETOF                     9091
     C                     GOTO VAEXIT
     C                     END
      * Send message 'Availability Group     NF'
     C                     MOVEL'USR2215' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVEL'USR2215' W0RTN
      *================================================================
     CSR         VAEXIT    ENDSR
      /EJECT
     CSR         XCVFA     BEGSR
      *================================================================
      * Convert absolute day to date
      *================================================================
     C           XDAY1     IFGT 109267
     C                     ADD  2         XDAY1
     C                     ELSE
     C           XDAY1     IFGT 36218
     C                     ADD  1         XDAY1
     C                     END
     C                     END
      * Full years (up to the date)
     C           XDAY1     DIV  365.25    XDWK1   80
     C                     MVR            XDWK3   71
     C                     Z-ADDXDWK1     XDINYY
     C           XDWK3     IFEQ 0
      * The date is the end of a year
     C                     Z-ADD12        XDINMM
     C                     Z-ADD31        XDINDD
     C                     ELSE
      * Year days up to the date
     C           XDWK1     MULT 365.25    XDWK2   60
     C                     SUB  XDWK2     XDAY1
     C                     ADD  1         XDINYY
      * Leap year ?
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
      * March 1 (relative day of the year)
     C           XDWK1     IFEQ 0
     C                     Z-ADD60        XDWK1
     C                     ELSE
     C                     Z-ADD59        XDWK1
     C                     END
      * Define date base month and offset day -
     C           XDAY1     IFLE XDWK1
      *  - January (thru February)
     C                     Z-ADD1         XDINMM
     C                     ELSE
     C                     SUB  XDWK1     XDAY1
     C           XDAY1     IFLE 153
      *  - March (thru July)
     C                     Z-ADD3         XDINMM
     C                     ELSE
      *  - August (thru December)
     C                     Z-ADD8         XDINMM
     C                     SUB  153       XDAY1
     C                     END
      * Calculate 2 month base and offset day
     C           XDAY1     SUB  1         XDWK1
     C                     DIV  61        XDWK1
     C                     MVR            XDAY1
     C                     ADD  1         XDAY1
     C                     MULT 2         XDWK1
     C                     ADD  XDWK1     XDINMM
     C                     END
      * Calculate date increment,
     C           XDAY1     IFGT 31
     C                     ADD  1         XDINMM
     C                     SUB  31        XDAY1
     C                     END
     C                     Z-ADDXDAY1     XDINDD
     C                     END
      *================================================================
     CSR         XCVFAE    ENDSR
      /EJECT
     CSR         XCVTA     BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C           XDINYY    SUB  1         XDWK1   80
     C           XDWK1     MULT 365.25    XDAY1   60
     C           XDWK1     IFGE 300
     C                     SUB  2         XDAY1
     C                     ELSE
     C           XDWK1     IFGE 100
     C                     SUB  1         XDAY1
     C                     END
     C                     END
      * (from the beginning of the year to the beginning of the month:)
     C           XDINMM    SUB  1         XDWK1
     C           XDINMM    IFLT 3
      *     ...+31*(MM-1) (for January-February) ...
     C                     MULT 31        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                     MULT 30        XDWK1
     C                     ADD  XDWK1     XDAY1
      *         ...-2 (for preceding February) ...
     C                     SUB  2         XDAY1
     C           XDINYY    IFNE 100
     C           XDINYY    ANDNE300
      *         ...+1 (for preceding February, if leap year) ...
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     ADD  1         XDAY1
     C                     END
     C                     END
     C           XDINMM    IFLT 8
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C           XDINMM    MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C           XDINMM    ADD  1         XDWK1
     C                     MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     END
     C                     END
      * ...+DD (days in the month up to the ending date)
     C                     ADD  XDINDD    XDAY1
      *================================================================
     CSR         XCVTAE    ENDSR
      /EJECT
     CSR         XDADY     BEGSR
      *================================================================
      * Calculate date increment, *DAYS
      *================================================================
     C           XDURR     IFEQ 0
     C           XDWSL     OREQ 0
      * None days of week selected
     C                     Z-ADDXDAY2     XDAY1
     C           XDURR     IFNE *ZERO
      * Return Code: Unable to increment date.
     C                     MOVEL'Y2U0059' W0RTN   7
     C                     ENDIF
     C                     GOTO XDADYE
     C                     ENDIF
     C           XDWSL     IFEQ 7
      * All days of week selected
     C           XDAY2     ADD  XDURR     XDAY1
     C                     GOTO XDADYM
     C                     ENDIF
      * Some days of week selected
     C           XDURR     IFGE 0
     C                     Z-ADD1         XDSTP   10
     C                     ELSE
     C                     Z-ADD-1        XDSTP
     C                     ENDIF
      * Get number of full weeks in the duration
     C           XDURR     DIV  XDWSL     XDWNB   60
      * Isolate the last week
     C                     MVR            XDLSW   10
     C           XDLSW     IFEQ 0
     C           XDWSL     MULT XDSTP     XDLSW
     C                     SUB  XDSTP     XDWNB
     C                     ENDIF
      * Increment the date by the full weeks
     C           XDWNB     MULT 7         XDWK1   80
     C           XDAY2     ADD  XDWK1     XDAY1   60
      * Determine day of week of the beginning date
     C           XDAY2     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ENDIF
      * Loop: Increment the date by the last week
     C           XDLSW     DOWNE0
      * Increment the date
     C                     ADD  XDSTP     XDAY1
      * Increment the day of week
     C                     ADD  XDSTP     YY
      * Put day of week into the range 1-7
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ELSE
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     ELSE
     C           YY        IFEQ -1
     C                     Z-ADD6         YY
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
     C           YDOW,YY   IFEQ XDSEL
      * Selected day of the last week has been processed
     C                     SUB  XDSTP     XDLSW
     C                     ENDIF
      * End of loop
     C                     ENDDO
     C           XDADYM    TAG
     C           XDINDD    IFLT 1
     C                     Z-ADD1         XDINDD
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         XDADYE    ENDSR
      /EJECT
     CSR         XDOWS     BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                     MOVEAXDCDW     YDOW
     C                     Z-ADD0         XDWSL   10
     C                     Z-ADD1         YY
     C           YY        DOWLE7
     C           YDOW,YY   IFEQ XDSEL
     C                     ADD  1         XDWSL
     C                     END
     C                     ADD  1         YY
     C                     END
      *================================================================
     CSR         XDOWSE    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
     C           ZINPOS    IFGE 03072
     C           ZINPOS    ANDLE06144
      * Cursor in the subfile record area
      * Reset cursor position to the basic (first) record for lookup
     C           W0CRW     SUB  12        W0CSRR  50
     C           ZZSFM     IFEQ '0'
     C                     DIV  02        W0CSRR
     C                     MVR            ZINPOS
     C                     ELSE
     C                     Z-ADD0         ZINPOS
     C                     ENDIF
     C                     ADD  12        ZINPOS
     C                     MULT 256       ZINPOS
     C                     ADD  W0CCL     ZINPOS
      * Calculate rrn of the cursor position
     C                     ADD  ##SFRC    W0CSRR
     C                     ENDIF
     C                     MOVE *BLANK    W0CFL
     C                     Z-ADD1         F       30
     C           ZINPOS    LOKUPW0END,F              96  96LE
     C           *IN96     IFEQ '1'
     C           ZINPOS    ANDGEW0BEG,F
     C                     MOVELW0NAM,F   W0CFL
     C                     ENDIF
     C           W0CFL     IFEQ *BLANK
     C                     Z-ADD0         W0CSRR
     C                     ENDIF
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZDVPMT    BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                     MOVEL*BLANK    YPMTFD 10
     C                     Z-ADD*ZERO     YAFSCH  40
     C                     Z-ADD*ZERO     YPMRRN  40
      *
     C           *IN04     IFEQ '1'
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50
     C                     MVR            ZHCSCL  50
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      * Save sfl rrn at top of page
     C                     Z-ADD@#SFRC    Y#SFRC  40
      *
      * Initialise sfl workfields
     C                     Z-ADD12        ZHSTRW  40
     C                     Z-ADD23        ZHNDRW  40
     C           ZZSFM     IFEQ '0'
     C                     Z-ADD2         ZHRLEN  40
     C                     ELSE
     C                     Z-ADD1         ZHRLEN
     C                     ENDIF
     C                     Z-ADD*ZERO     ZHF4RW  40
     C                     Z-ADD*ZERO     ZHWK1#  40
      *
      * Resolve prompt row number on sfl
     C           ZHCSRW    IFGE ZHSTRW
     C           ZHCSRW    ANDLEZHNDRW
     C           ZHCSRW    SUB  ZHSTRW    ZHWK1#
     C           ZHWK1#    DIV  ZHRLEN    ZHWK1#
     C                     Z-ADDZHWK1#    YZSFDL  40
     C           ZHWK1#    MULT ZHRLEN    ZHWK1#
     C           ZHCSRW    SUB  ZHWK1#    ZHF4RW
     C                     END
      *
     C           ZHCSRW    IFEQ 006
     C           ZHCSCL    ANDGE019
     C           ZHCSCL    ANDLE020
     C           @#DFMT    ANDEQ'#SFLCTL'
     C                     MOVEL'#CWPST'  YPMTFD           Warehouse Type
     C                     END
      *
     C           YPMTFD    IFEQ *BLANK
      * Error if user defined prompting is not specified.
     C           W0PMT     IFEQ 'N'
     C                     MOVEL'*NONE'   YPMTFD
     C                     MOVEL'Y'       W0HLP   1
     C                     MOVEL'Y'       ZAFSMS
      * Send error message.
     C                     MOVEL'Y2U0101' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
      * Save first changed  rrn
     C           ZHCSRW    IFGE ZHSTRW
     C           ZHCSRW    ANDLEZHNDRW
     C           YPMTFD    ANDNE'*NONE'
      *
     C           ##RR      IFNE *ZERO
     C                     READC#SFLRCD                  92*
     C           *IN92     IFEQ '0'
     C                     Z-ADD##RR      YAFSCH
     C                     SETON                     84    *
     C                     UPDAT#SFLRCD
     C                     END
     C                     END
      *
      * Calculate rrn for prompt slf record
     C           ZHCSRW    SUB  ZHSTRW    ZHWK1#
     C           ZHWK1#    DIV  ZHRLEN    ZHWK1#
     C           ZHWK1#    ADD  Y#SFRC    YPMRRN
      *
      * Chain to sfl record
     C           YPMRRN    CHAIN#SFLRCD              9292  *
     C           *IN92     IFEQ '0'
     C                     SETON                     84    *
     C                     UPDAT#SFLRCD
     C                     ELSE
     C                     Z-ADD*ZERO     YPMRRN
     C                     END
      *
      * Test first changed rrn/prompt rrn
     C           YAFSCH    IFEQ *ZERO
     C                     Z-ADDYPMRRN    YAFSCH
     C                     END
      *
      * If prompt rrn < first changed rrn
     C           YPMRRN    IFNE *ZERO
     C           YPMRRN    ANDLTYAFSCH
     C                     Z-ADDYPMRRN    YAFSCH
     C                     END
      *
     C                     END
      *
     C                     END
      *================================================================
     CSR         ZDEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*START'  YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM *ZERO     YYLGCT  50       # of grps
     C                     PARM *BLANK    YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     Z-ADD*ZERO     P1AIC3           Company Number
     C                     Z-ADD*ZERO     P1HGCD           Item Code
     C                     MOVEL*BLANK    P1V4CD           Availability Gr
     C                     Z-ADD*ZERO     P1IDSQ           Item Display Se
     C                     Z-ADD*ZERO     P2EOWG           ATS Weight Avai
     C                     Z-ADD*ZERO     P3EWNB           ATS Pieces Avai
     C                     MOVEL*BLANK    P4PCCT           Piece Count Ite
     C                     Z-ADD*ZERO     P5BDNB           Pieces Per Bag
     C                     Z-ADD*ZERO     P6BJNB           Bags Per Unit
     C                     MOVEL*BLANK    P7AJCD           Warehouse Code
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field Warehouse Type USR
     C                     MOVEL*BLANK    WUR6ST  2
      * Define work field Julian Date
     C                     Z-ADD*ZERO     WUCQNB  50
      * Define work field Accounting Year Code
     C                     Z-ADD*ZERO     WUESNB  40
      * Define work field Accounting Period Code
     C                     Z-ADD*ZERO     WUETNB  20
      * Define work field OM Week
     C                     Z-ADD*ZERO     WUBZNB  30
      * Define work field Week Number
     C                     Z-ADD*ZERO     WUEINB  20
      *
     C           W0ICL     IFEQ 'Y'
      * Initialize array variables
     C                     MOVEA*HIVAL    YK01
      * Initialize last used element number
     C                     Z-ADD0         YL01    50
     C                     Z-ADD1         Y       50
     C                     ENDIF
      *
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WBAIC3           Company Number
     C                     Z-ADD*ZERO     WBC4NB           Order Number
     C                     Z-ADD*ZERO     WBDPNB           Order Sequence
     C                     Z-ADD*ZERO     WBUENB           Order Secondary
     C                     Z-ADD*ZERO     WBHGCD           Item Code
     C                     Z-ADD*ZERO     WBBKC7           Ship To Custome
     C                     Z-ADD*ZERO     WBCFC7           Order Group Cod
     C                     Z-ADD*ZERO     WBMAVA           Billing Detail
     C                     Z-ADD*ZERO     WBKDVA           Billing Detail
     C                     Z-ADD*ZERO     WBL8VA           Billing Detail
     C                     Z-ADD*ZERO     WBL9VA           Quantity to Sub
     C                     Z-ADD*ZERO     WBAYVA           Extended Amount
     C                     Z-ADD*ZERO     WBEXDT           Market Pricing
     C                     Z-ADD*ZERO     WBBZPR           Price Overage O
     C                     Z-ADD*ZERO     WBL6NB           Contract Number
     C                     Z-ADD*ZERO     WBGIDT           Pricing Date Us
     C                     Z-ADD*ZERO     WBR1NB           Rated Freight
     C                     Z-ADD*ZERO     WBAVQT           Quantity Ordere
     C                     Z-ADD*ZERO     WBD0WG           Weight Ordered
     C                     Z-ADD*ZERO     WBCCQT           Quantity Schedu
     C                     Z-ADD*ZERO     WBAUWG           Weight Schedule
     C                     Z-ADD*ZERO     WBCBQT           Quantity Shippe
     C                     Z-ADD*ZERO     WBATWG           Weight Shipped
     C                     Z-ADD*ZERO     WBAQCS           Unit Cost Prici
     C                     Z-ADD*ZERO     WBAGCS           Unit Cost Per P
     C                     Z-ADD*ZERO     WBAKPR           Unit Price
     C                     Z-ADD*ZERO     WBALPR           Unit Price - Cr
     C                     Z-ADD*ZERO     WBAUPR           Unit Price Orde
     C                     Z-ADD*ZERO     WBAVWG           Unit Weight Ord
     C                     Z-ADD*ZERO     WBA4WG           Tare Weight Tot
     C                     Z-ADD*ZERO     WBA5DT           Requested Ship
     C                     Z-ADD*ZERO     WBAODT           Scheduled Ship
     C                     Z-ADD*ZERO     WBGNDT           Actual Shipped
     C                     Z-ADD*ZERO     WBRGNB           Item Structure
     C                     Z-ADD*ZERO     WBRHNB           Item Structure
     C                     Z-ADD*ZERO     WBRINB           Item Structure
     C                     Z-ADD*ZERO     WBCXDT           Date of Origina
     C                     Z-ADD*ZERO     WBDUPR           Invoice Unit Pr
     C                     Z-ADD*ZERO     WBB6VL           Invoice Extende
     C                     Z-ADD*ZERO     WBA1AA           Ham Group Numbe
     C                     Z-ADD*ZERO     WBNTDT           Warehouse Palle
     C                     Z-ADD*ZERO     WBNUDT           Consumed Item C
     C                     Z-ADD*ZERO     WBNVDT           Deadline Depart
     C                     Z-ADD*ZERO     WBNWDT           OD Price Type R
     C                     Z-ADD*ZERO     WBNXDT           OD Firm Date
     C                     Z-ADD*ZERO     WBBUTM           Deadline Depart
     C                     Z-ADD*ZERO     WBBVTM           Price Code
     C                     Z-ADD*ZERO     WBBWTM           Maximum Net Wei
     C                     Z-ADD*ZERO     WBBXTM           Substitution Li
     C                     Z-ADD*ZERO     WBBYTM           Max Qty to sche
     C                     Z-ADD*ZERO     WBH5NX           Warehouse Palle
     C                     Z-ADD*ZERO     WBH6NX           Warehouse Avg P
     C                     Z-ADD*ZERO     WBH7NX           OD Item Target
     C                     Z-ADD*ZERO     WBH8NX           OD Estimated Gr
     C                     Z-ADD*ZERO     WBH9NX           OD Maximum Unit
     C                     Z-ADD*ZERO     WBDVPR           Order Gate/Fina
     C                     Z-ADD*ZERO     WBDWPR           OD Ceiling Pric
     C                     Z-ADD*ZERO     WBDXPR           OD Gate/Final P
     C                     Z-ADD*ZERO     WBDYPR           OD Weighted Avg
     C                     Z-ADD*ZERO     WBDZPR           OD Original Ord
     C                     Z-ADD*ZERO     WBGSPR           OD Cancel Date
     C                     Z-ADD*ZERO     WBGTPR           OD Unused Prc 7
     C                     Z-ADD*ZERO     WBGUPR           OD Unused Prc 8
     C                     Z-ADD*ZERO     WBPEWG           Weight Amount E
     C                     Z-ADD*ZERO     WBRINY           Item Age Days
     C                     Z-ADD*ZERO     WBTIDT           Production Ovr
     C                     Z-ADD*ZERO     WBTJDT           Production Ovr
     C                     Z-ADD*ZERO     WBTKDT           OD Market Begin
     C                     Z-ADD*ZERO     WBTLDT           OD Market Endin
     C                     Z-ADD*ZERO     WBTMDT           OD Atch to Ord
     C                     Z-ADD*ZERO     WBAATM           Job Time
     C                     Z-ADD*ZERO     WBAXDT           Job Date
      * Define work field USR First Position
     C                     MOVEL*BLANK    WUI3ST  1
      * Define work field CD3 Ext Numeric Key
     C                     MOVEL*BLANK    WUDMCD  3
      * Obtain default message file
     C           *NAMVAR   DEFN CAMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field CD7 Ext Numeric Key
     C                     MOVEL*BLANK    WUEOCD  7
      * Define work field Warehouse Description
     C                     MOVEL*BLANK    WUF8NA 30
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WCDBNB           Warehouse Chill
     C                     Z-ADD*ZERO     WCBWC3           Shipping Compan
     C                     Z-ADD*ZERO     WCBTC3           Accounting Comp
     C                     Z-ADD*ZERO     WCBUC3           WHS Sched Prod
     C                     Z-ADD*ZERO     WCBVC3           WHS Inventory C
     C                     Z-ADD*ZERO     WCAATM           Job Time
     C                     Z-ADD*ZERO     WCAXDT           Job Date
      * Define work field BLANK 1               USR
     C                     MOVEL*BLANK    WUJ1TX 25
      * Define work field Item Description
     C                     MOVEL*BLANK    WUGENA 30
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    W0WD03 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD02 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD01 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD00 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WA02 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WA01 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WJ02 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WJ01 150       *Synon (15,0) w
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'Y'       W0PMT   1
      * Define local variables for subroutine SORVGN.
     C                     Z-ADD*ZERO     WL0001  30
     C                     Z-ADD*ZERO     WL0002  70
     C                     MOVEL*BLANK    WL0003  1
     C                     MOVEL*BLANK    WL0004  1
      * Define local variables for subroutine SSRVGN.
     C                     Z-ADD*ZERO     WL0005  30
     C                     Z-ADD*ZERO     WL0006  70
     C                     MOVEL*BLANK    WL0007  3
     C                     Z-ADD*ZERO     WL0008  70
     C                     Z-ADD*ZERO     WL0009  50
      * Define local variables for subroutine SVRVGN.
     C                     Z-ADD*ZERO     WL0010  30
     C                     Z-ADD*ZERO     WL0011  70
      * Define local variables for subroutine SXRVGN.
     C                     MOVEL*BLANK    WL0012 10
     C                     MOVEL*BLANK    WL0013  6
     C                     Z-ADD*ZERO     WL0014  30
     C                     MOVEL*BLANK    WL0015  3
      * Define local work field First Time Flag
     C                     MOVEL*BLANK    YL0001  1
      * Define local work field Display Flag
     C                     MOVEL*BLANK    YL0002  1
      * Define local work field Warehouse Code
     C                     MOVEL*BLANK    YL0003  3
      * Define local work field Ageing Days Usr
     C                     Z-ADD*ZERO     YL0004  50
      * Define local work field USR Day 1
     C                     Z-ADD*ZERO     YL0005  70
      * Define local work field USR Day 2
     C                     Z-ADD*ZERO     YL0006  70
      * Define local work field USR Day 3
     C                     Z-ADD*ZERO     YL0007  70
      * Define local work field USR Day 4
     C                     Z-ADD*ZERO     YL0008  70
      * Define local work field USR Day 5
     C                     Z-ADD*ZERO     YL0009  70
      * Define local work field USR Day 6
     C                     Z-ADD*ZERO     YL0010  70
      * Define local work field USR Day 7
     C                     Z-ADD*ZERO     YL0011  70
      * Define local work field USR Day 8
     C                     Z-ADD*ZERO     YL0012  70
      * Define local work field Record Found USR
     C                     MOVEL*BLANK    YL0013  1
      * Define local work field Quantity Age Day 1   USR
     C                     Z-ADD*ZERO     YL0014 112
      * Define local work field Quantity Age Day 2   USR
     C                     Z-ADD*ZERO     YL0015 112
      * Define local work field Quantity Age Day 3   USR
     C                     Z-ADD*ZERO     YL0016 112
      * Define local work field Quantity Age Day 4   USR
     C                     Z-ADD*ZERO     YL0017 112
      * Define local work field Quantity Age Day 5   USR
     C                     Z-ADD*ZERO     YL0018 112
      * Define local work field Quantity Age Day 6   USR
     C                     Z-ADD*ZERO     YL0019 112
      * Define local work field Quantity Age Day 7   USR
     C                     Z-ADD*ZERO     YL0020 112
      * Define local work field Quantity Age Day 8   USR
     C                     Z-ADD*ZERO     YL0021 112
      * Define local work field Quantity On Hand   USR
     C                     Z-ADD*ZERO     YL0022 132
      * Define local work field Quantity on Hold     USR
     C                     Z-ADD*ZERO     YL0023 112
      * Define local work field Quantity on Hand - U/M1
     C                     Z-ADD*ZERO     YL0024 112
      * Define local work field Avail Ship Date 2 USR
     C                     Z-ADD*ZERO     YL0025  70
      * Define local work field Avail Ship Date 3 USR
     C                     Z-ADD*ZERO     YL0026  70
      * Define local work field Avail Ship Date 4 USR
     C                     Z-ADD*ZERO     YL0027  70
      * Define local work field Avail Ship Date 5 USR
     C                     Z-ADD*ZERO     YL0028  70
      * Define local work field Avail Ship Date 6 USR
     C                     Z-ADD*ZERO     YL0029  70
      * Define local work field Avail Ship Date 7 USR
     C                     Z-ADD*ZERO     YL0030  70
      * Define local work field Avail Ship Date 8 USR
     C                     Z-ADD*ZERO     YL0031  70
      * Define local work field Avail Ship Date 9 USR
     C                     Z-ADD*ZERO     YL0032  70
      * Define local work field Avail Ship Date 10 USR
     C                     Z-ADD*ZERO     YL0033  70
      * Define local work field Avail Ship Date 11 USR
     C                     Z-ADD*ZERO     YL0034  70
      * Define local work field Avail Ship Date 12 USR
     C                     Z-ADD*ZERO     YL0035  70
      * Define local work field Avail Ship Date 13 USR
     C                     Z-ADD*ZERO     YL0036  70
      * Define local work field Avail Ship Date 14 USR
     C                     Z-ADD*ZERO     YL0037  70
      * Define local work field Day 2 Inventory USR
     C                     Z-ADD*ZERO     YL0038  61
      * Define local work field Day 3 Inventory USR
     C                     Z-ADD*ZERO     YL0039  61
      * Define local work field Day 4 Inventory USR
     C                     Z-ADD*ZERO     YL0040  61
      * Define local work field Day 5 Inventory USR
     C                     Z-ADD*ZERO     YL0041  61
      * Define local work field Day 6 Inventory USR
     C                     Z-ADD*ZERO     YL0042  61
      * Define local work field Day 7 Inventory USR
     C                     Z-ADD*ZERO     YL0043  61
      * Define local work field Day 8 Inventory USR
     C                     Z-ADD*ZERO     YL0044  61
      * Define local work field Day 9 Inventory USR
     C                     Z-ADD*ZERO     YL0045  61
      * Define local work field Day 10 Inventory USR
     C                     Z-ADD*ZERO     YL0046  61
      * Define local work field Day 11 Inventory USR
     C                     Z-ADD*ZERO     YL0047  61
      * Define local work field Day 12 Inventory USR
     C                     Z-ADD*ZERO     YL0048  61
      * Define local work field Day 13 Inventory USR
     C                     Z-ADD*ZERO     YL0049  61
      * Define local work field Day 14 Inventory USR
     C                     Z-ADD*ZERO     YL0050  61
      * Define local work field USR Display 1
     C                     MOVEL*BLANK    YL0051  1
      * Define null work field PS Avg Piece Wgt
     C                     Z-ADD*ZERO     YN0001  92
      * Define local work field Chilling Time USR
     C                     Z-ADD*ZERO     YL0052  52
      * Define null work field Description Line Two
     C                     MOVEL*BLANK    YN0002 30
      * Define null work field Conversion Factor 1
     C                     Z-ADD*ZERO     YN0003  94
      * Define null work field Operation Factor 1
     C                     MOVEL*BLANK    YN0004  1
      * Define null work field U/M - Second
     C                     MOVEL*BLANK    YN0005  2
      * Define null work field Conversion Factor 2
     C                     Z-ADD*ZERO     YN0006  94
      * Define null work field Operation Factor 2
     C                     MOVEL*BLANK    YN0007  1
      * Define null work field U/M - Third
     C                     MOVEL*BLANK    YN0008  2
      * Define null work field U/M - Pricing
     C                     MOVEL*BLANK    YN0009  2
      * Define local work field Base/Conv/Loss Item
     C                     MOVEL*BLANK    YL0053  2
      * Define local work field Pieces Per Bag
     C                     Z-ADD*ZERO     YL0054  70
      * Define local work field Bags Per Unit
     C                     Z-ADD*ZERO     YL0055  70
      * Define local work field Record Status
     C                     MOVEL*BLANK    YL0056  1
      * Define local work field Header Status
     C                     MOVEL*BLANK    YL0057  1
      * Define local work field Billing Activity Type
     C                     MOVEL*BLANK    YL0058  1
      * Define local work field Calc 3
     C                     Z-ADD*ZERO     YL0059  30
      * Define local work field USR Count
     C                     Z-ADD*ZERO     YL0060  30
      * Define local work field Header Status
     C                     MOVEL*BLANK    YL0061  1
      * Define local work field Billing Activity Type
     C                     MOVEL*BLANK    YL0062  1
      * Define local work field *Initial call
     C                     MOVEL*BLANK    YL0063  1
      * Define local work field Allow Multi-Company
     C                     MOVEL*BLANK    YL0064  1
      * Define local work field Salesperson Code
     C                     MOVEL*BLANK    YL0065  3
      * Define local work field Default Printer
     C                     MOVEL*BLANK    YL0066 10
      * Define local work field Company Number
     C                     Z-ADD*ZERO     YL0067  30
      * Define local work field Warehouse Code
     C                     MOVEL*BLANK    YL0068  3
      * Define local work field Application Code
     C                     MOVEL*BLANK    YL0069  6
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   ##CMP
     C                     IN   *NAMVAR
      *................................................................
     C                     Z-ADD12        ##SFPG  30       SFLPAG
     C                     Z-ADD1         ##SFRC
      * Maximum record number
     C                     Z-ADD*ZERO     ##RRMX
      * Scan limit
     C                     Z-ADD000000500 W0SLM   90
      * Subfile pages
     C                     Z-ADD1         W0SPG   30
      * Processed Subfile record
     C                     Z-ADD0         W0RR0   40
      *................................................................
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      *
     C                     MOVEL*BLANK    WN0017 10        User Profile Na
      *
      * VAL Set Inter. Access  IF
     C                     MOVEL##USR     WN0017           User Profile Na
      *
     C                     MOVEL*BLANK    WN0018 10        User Code Model
      *
      * VAL User/Application   IF
      * RMC 5/11/09 Rtv default company from user profile --
      *   Override user code model company if it exists
      * RTV Program Setup w/Co RT - User Profile Control  * 
     C                     EXSR SWRVGN
      * User Profile Record Not found
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ @CN,002                    *IF
      * SET Message Queue Dest US - /UT User Source  * 
     C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
      * Setup message data for message
     C                     MOVELWN0017    ZA0005           User Profile Na
     C                     MOVEL'OMS'     ZA0006           Application Cod
      * Send message 'Application access denied'
     C                     MOVEL'USR0810' ZAMSID
     C                     MOVEL'*PRV '   ZAPGRL           Rel queue
     C                     MOVEL'*COMP  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y2U9999' P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
      * CASE: PAR.User Code Model is equal to blank
     C           WN0018    IFEQ *BLANK                     *IF
      * RTV Appl. Profile      RT - User Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0017    WL0012    P      User Profile Na
     C                     MOVEL'OMS'     WL0013    P      Application Cod
     C                     EXSR SXRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0014    P1AIC3           Company Number
     C                     MOVELWL0015    YL0068    P      Warehouse Code
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Appl. Profile      RT - User Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0018    WL0012    P      User Profile Na
     C                     MOVEL'OMS'     WL0013    P      Application Cod
     C                     EXSR SXRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0014    P1AIC3           Company Number
     C                     MOVELWL0015    YL0068    P      Warehouse Code
     C                     END                             *FI
     C                     MOVELYL0068    YL0003           Warehouse Code
      * Return code when not normal for Application Profile
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * SET Message Queue Dest US - /UT User Source  * 
     C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
      * Setup message data for message
     C                     MOVELWN0017    ZA0007           User Profile Na
     C                     MOVEL'OMS'     ZA0008           Application Cod
      * Send message 'Application access denied'
     C                     MOVEL'USR0810' ZAMSID
     C                     MOVEL'*PRV '   ZAPGRL           Rel queue
     C                     MOVEL'*COMP  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y2U9999' P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
      * Override company with User profile control's company if found
      * CASE: LCL.Company Number is not equal to zero
     C           YL0067    IFNE 0                          *IF
     C                     Z-ADDYL0067    P1AIC3           Company Number
      * Get prod warehouse, if the appl got a warehouse
      * CASE: LCL.Warehouse Code is Not Blanks
     C           YL0068    IFNE *BLANK                     *IF
      * RTV Prod Whse for Co  XF - Warehouse  * 
     C                     CALL 'PNKDXFR'              90  RTV Prod Whse f
     C                     PARM *BLANK    W0RTN   7
     C           YL0003    PARM *BLANK    WQ0038  3        Warehouse Code
     C                     PARM YL0067    WQ0039  30       Shipping Compan
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNKDXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
     C                     END                             *FI
      * SET Screen Headings    IF
      * RTV Applic. Group Desc RT - Application  * 
     C                     EXSR SYRVGN
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * CLC Center Txt Str 40  US - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc-Co Head  US - /UT User Source  * 
     C                     MOVE WUDE40    ##CMP  40
     C                     MOVEL'Y'       YL0001           First Time Flag
     C                     MOVEL*BLANK    YL0069           Application Cod
     C                     MOVEL'OMS'     YL0069           Application Cod
     C                     MOVEL'1'       ZZSFM            *Subfile mode
      * Initialise subfile control
     C                     EXSR MEIZ#2
      *================================================================
     CSR         ZZEXIT    ENDSR
** W0BEG
00787007930104301049012990130501555
01561020500282102829028580286502871
02879028860289502904029130292202931
03074030770308503088030900309603102
03108031140312103127031350314303152
0316103170031790318803333
** W0END
00789008220104501078013010133401556
01590021790282702830028620286902875
02883028930290202911029200292902938
03075030830308603088030940310003106
03112031180312503132031390314903158
0316703176031850319403362
** W0NAM
V2AIC3    #CAPTX    #2V4CD    #CNVNA    #CAJCD    #CF8NA    #CWPST
#CNENA    **SPT     V2HGCD    #CHHCD    #CKGNX    #CJ7NX    #CJ9NX
#CJ8NX    VCH6DT    VCH7DT    VCH8DT    VCH9DT    VCIADT    VCIBDT
#1SEL     V1HGCD    #RHHCD    #RYLCD    #RJ2NB    #RJ3NB    #RJ4NB
#RJ5NB    #RKGNX    #RJ7NX    #RJ9NX    #RJ8NX    #RQS01    #RQS02
#RQS03    #RQS04    #RQS05    #RN3NX    #RGENA
** @CN
00001 USR0752
00002 Y2U0005
