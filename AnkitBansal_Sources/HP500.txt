      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:   HOG PRODUCTION
      * PROGRAM:  HP500
      * TITLE:    SELECT SCHEDULED TRANSFER MOVEMENT
      * AUTHOR:   LEANNE FEDOR
      * CREATED:  02/12/96
      *
      * FUNCTION: THIS IS A SELECT FUNCTION WINDOW DISPLAY OF SCHEDULED
      *           TRANSFER MOVEMENTS.
      *
      *         RESTRICTORS:  NONE
      *         POSITIONERS:  SCHEDULED SHIP DATE
      *         SELECTORS:    ORIGIN BUSINESS OFFICE
      *                       ORIGIN PRODUCTION TYPE
      *                       ORIGIN PRODUCTION PHASE
      *                       ORIGIN FARM SITE
      *                       DESTINATION BUSINESS OFFICE
      *                       DESTINATION PRODUCTION TYPE
      *                       DESTINATION PRODUCTION PHASE
      *                       DESTINATION FARM SITE
      *
      *         IT LOADS THE WINDOW SUBFILE A PAGE AT A TIME.
      *         IT DOES NOT USE THE STANDARD MESSAGE HANDLING PROGRAM.
      *         A RECORD IS SELECTED BY POSITIONING THE CURSOR
      *         ON THE LINE AND PRESSING ENTER.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      * 08/30/00  LeAnne Fedor
      *           Added 'times BOL printed' to screen.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHPD500    CF   E             WORKSTN
     F                                     SFILE(HP500S1:HDRRN1)
     F                                     INFDS(IOFEED)
      *
     FHSL074G   IF   E           K DISK
     F                                     INFDS(DBFEED)
      * TRANSFER MOVEMENT HEADER     (KEY: MHSCDT MHFSCD)
      * (SELECT: MHMSCD = SC)
      /EJECT
      ****************************************************************
      * TABLE AND ARRAY SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  STANDARD MESSAGE ARRAYS
      *---------------------------------------------------------------
      *
      *
      ****************************************************************
      * INPUT SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      * STANDARD ERROR MESSAGE HANDLING DATA STRUCTURES
      *---------------------------------------------------------------
      *
      * FOR ERROR MESSAGE HANDLING, A PACKED INDEX (E) IS REQUIRED.
      * FOR PROGRAM READABILITY, DEFINE A CORRESPONDING ERROR COUNT
      * FIELD CALLED 'ERROR'. ALSO DEFINE CURSOR LOCATION FIELDS.
      *
     D                 DS                  INZ
     D  ERROR                  1      2P 0
     D  E                      1      2P 0
      *
      * THIS DATA STRUCTURE SUPPLIES THE NAME OF THE MESSAGE FILE TO
      * THE MESSAGE HANDLING CL PROGRAM.  THE FIELD NAME MSGFIL MUST BE
      * CONSTANT. THE VALUE IN QUOTES IS THE NAME OF THE SPECIFIC
      * MESSAGE FILE CONTAINING THE USER DEFINED MESSAGES.
      *
     D                 DS                  INZ
     D  MSGFIL                 1     10    INZ('HSMSGF    ')
      *
      * THE FOLLOWING 3 DATA STRUCTURES ARE USED TO SPEED MESSAGE
      * HANDLING SINCE IT IS FASTER TO CLEAR DATA STRUCTURES THAN
      * ARRAYS.  EACH IS ASSOCIATED WITH A STANDARD MESSAGE ARRAY.
      *
     D MGI             DS           140    INZ
     D  MGID                   1    140
     D                                     DIM(20)                              MSG ID ARRAY
      *
     D MGD             DS          1000    INZ
     D  MGDT                   1   1000
     D                                     DIM(20)                              MSG PARMS
      *
     D MGWK            DS            50    INZ
     D  MGW                    1     50
     D                                     DIM(50)                              MSG WORK PARMS
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      * STANDARD WORKSTATION INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTWSFR (RECORD FORMAT: UTIDFRR)
     D IOFEED        E DS                  EXTNAME(UTWSFR)
      *
      *---------------------------------------------------------------
      * STANDARD DATABASE FILE INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTDBFR (RECORD FORMAT: FDBCKD)
     D DBFEED        E DS                  EXTNAME(UTDBFR)
      *
      *---------------------------------------------------------------
      *  DATE FORMATS
      *---------------------------------------------------------------
      *
      * DATE IN MMDDYY FORMAT
      *
     D                 DS
     D  WKMDY                  1      6  0
     D  WKMM                   1      2  0
     D  WKDD                   3      4  0
     D  WKYY                   5      6  0
      * DATE IN CCYYMMDD FORMAT
      *
     D                 DS
     D  WKCYMD                 1      8  0
     D  WKCEN                  1      2  0
     D  WKYER                  3      4  0
     D  WKMON                  5      6  0
     D  WKDAY                  7      8  0
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D CREATE          C                   CONST('CREATE')
     D REVISE          C                   CONST('REVISE')
     D DELETE          C                   CONST('DELETE')
     D VIEW            C                   CONST('VIEW  ')
     D SELECT          C                   CONST('SELECT')
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
     D SET1            C                   CONST('SET1  ')
     D EDIT1           C                   CONST('EDIT1 ')
     D SCRN1           C                   CONST('SCRN1 ')
     D EXIT            C                   CONST('EXIT  ')
     D UPDATE          C                   CONST('UPDATE')
      *
     D                 DS
     D  DUMMYD                 1      1
      *  THE PRECEDING DUMMY DATA STRUCTURE IS ONLY TO KEEP THE I-SPEC
      *  INFO FROM RUNNING OVER INTO THE 'CALC SPECS' ON THE COMPILE
      *  LISTING.  IT SERVES NO OTHER PURPOSE AND CAN BE DELETED
      *  AT ANY TIME!!!
      *
      /EJECT
      ****************************************************************
      * MAIN LINE
      ****************************************************************
      *
     C                   MOVEL     SET1          ROUTNE
      *
     C     *INLR         DOWEQ     *OFF                                         MAIN DO LOOP
      *
     C     ROUTNE        CASEQ     SET1          $SET1
     C     ROUTNE        CASEQ     SCRN1         $SCRN1
     C     ROUTNE        CASEQ     EDIT1         $EDIT1
      *
     C     ROUTNE        CASEQ     EXIT          $EXIT
     C                   ENDCS
     C                   ENDDO                                                  MAIN DO LOOP
      /EJECT
      *----------------------------------------------------------------
      * $SET1 - SUBROUTINE TO SET ENVIRONMENT FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SET1         BEGSR
      *
      *  CLEAR/FILL THE SUBFILE
      *
     C                   EXSR      $CLR1
     C                   EXSR      $FRSH1
      *
      *  SET ROUTINE TO DISPLAY SCREEN
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $SCRN1 - SUBROUTINE TO PERFORM OPERATOR I/O FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SCRN1        BEGSR
      *
     C                   WRITE     HP500K1
     C                   EXFMT     HP500C1
      *
      * SAVE THE VALUE FOR THE LOWEST SLF RRN ON THE SCREEN FOR
      * REPOSITIONING THE SUBFILE
      *
     C                   Z-ADD     IDFLOW        WKFLOW
      * RESET ERROR FLAG
     C                   Z-ADD     0             ERROR
      *
      * GET USER'S ENTRY AND RESET STANDARD RESPONSE
      *
     C                   SELECT
      *
     C     *IN12         WHENEQ    *ON                                          F12=PREVIOUS
     C                   MOVEL     EXIT          ROUTNE
      *
      * REPOSITION THE SUBFILE IF THE USER HAS CHANGED ANY OF THE
      * POSITIONERS OR THE SELECTORS THE CONTROL RECORD.
      *
     C     SVSMDY        WHENNE    C1SMDY                                       IF POSITION
     C     SVORBO        ORNE      C1ORBO
     C     SVORPT        ORNE      C1ORPT
     C     SVORPP        ORNE      C1ORPP
     C     SVORFS        ORNE      C1ORFS
     C     SVDNBO        ORNE      C1DNBO
     C     SVDNPT        ORNE      C1DNPT
     C     SVDNPP        ORNE      C1DNPP
     C     SVDNFS        ORNE      C1DNFS
     C                   MOVEL     NO            RESET
     C                   MOVEL     SET1          ROUTNE
     C                   Z-ADD     C1SMDY        SVSMDY
     C                   MOVEL     C1ORBO        SVORBO
     C                   MOVEL     C1ORPT        SVORPT
     C                   MOVEL     C1ORPP        SVORPP
     C                   Z-ADD     C1ORFS        SVORFS
     C                   MOVEL     C1DNBO        SVDNBO
     C                   MOVEL     C1DNPT        SVDNPT
     C                   MOVEL     C1DNPP        SVDNPP
     C                   Z-ADD     C1DNFS        SVDNFS
      *
     C     *IN25         WHENEQ    *ON                                          F25-ROLLUP
     C                   EXSR      $LOAD1
     C                   MOVEL     SCRN1         ROUTNE
     C                   OTHER
      *
      * USER HAS PRESSED ENTER
      *
     C     NORECS        IFEQ      YES                                          IF EMPTY SFL
     C                   MOVEL     SET1          ROUTNE
     C                   ELSE
     C                   MOVEL     EDIT1         ROUTNE
     C                   ENDIF                                                  IF EMPTY SFL
      *
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $EDIT1 - SUBROUTINE TO EDIT INPUT FIELDS FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $EDIT1        BEGSR
      *
      * IF THERE ARE NO ERRORS, PROCESS THE SUBFILE
      *
     C     ERROR         IFEQ      0                                            IF NO ERROR
     C                   EXSR      $PROC1
      *
      * IF THE USER SELECTED A RECORD, THEN SET THE ROUTINE TO EXIT
      * THIS SELECTION PROGRAM.  IF NO RECORD WAS SELECTED, THEN
      * SET TO REDISPLAY THE SCREEN.
      *
     C     RSMVSN        IFNE      0
     C                   MOVEL     EXIT          ROUTNE
     C                   ELSE
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
      * ELSE THERE WERE ERRORS, SO SET TO REDISPLAY SCREEN
      *
     C                   ELSE
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDIF                                                  IF NO ERROR
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $CLR1  - SUBROUTINE TO CLEAR THE SUBFILE FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $CLR1         BEGSR
      *
     C                   CLEAR                   HP500R1
     C                   WRITE     HP500R1
      *
     C                   CLEAR                   HP500S1
     C                   SETON                                        83        SFLCLR
     C                   WRITE     HP500C1
     C                   SETOFF                                       818283
      *                                                    81=SFLDSP
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $FRSH1 - SUBROUTINE TO REFRESH/FILL THE SUBFILE FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $FRSH1        BEGSR
      *
      * SET POSITION IN TRANSFER MOVEMENT FILE ON SCHEDULED DATE
      *
     C                   Z-ADD     0             WKSYMD
     C     C1SMDY        IFNE      0
     C                   Z-ADD     C1SMDY        PFRM8
     C                   Z-ADD     0             PTO8
     C                   EXSR      $DATE
     C     PRTRN         IFEQ      *BLANK
     C                   Z-ADD     PTO8          WKSYMD
     C                   ENDIF
     C                   ENDIF
      *
     C     WKSYMD        SETLL     HSL074G
      *
      * THE LOWEST SUBFILE RRN ON THE SCREEN FROM THE DSPF
      * FEEDBACK AREA (IDFLOW) WAS RETRIEVED EARLIER AND PUT IN WKFLOW.
      * ADD TO WKFLOW THE NUMBER OF LINES ON YOUR SUBFILE PAGE OR THE
      * NUMBER LESS 1 TO DETERMINE A SUBFILE RRN TO REPOSITION TO.
      * RESET IS A FLAG FIELD TO INDICATE WHETHER YOU ARE ATTEMPTING
      * TO REPOSITION THE USER CLOSE TO WHERE HE WAS IN THE SUBFILE.
      * IF RESET IS 'NO' DON'T REPOSITION THE USER--JUST START OVER.
      *
     C     RESET         IFEQ      YES
     C     WKFLOW        ADD       WKRLIN        MAXRRN
     C                   ELSE
     C                   Z-ADD     WKPLIN        MAXRRN
     C                   ENDIF
      *
      * LOAD THE SUBFILE UNTIL YOU HAVE THE REQUIRED NUMBER OF RECORDS.
      * THE NUMBER WILL DEPEND ON WHETHER YOU ARE REPOSITIONING THE
      * SUBFILE OR NOT. STOP IF YOU GET TO THE END OF THE SUBFILE.
      *
     C     HDRRN1        DOUGE     MAXRRN
     C     *IN82         OREQ      *ON
     C                   EXSR      $LOAD1
     C                   ENDDO
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $DATE -  MANIPULATE DATES WITH DATE UTILITY
      *----------------------------------------------------------------
      *
     C     $DATE         BEGSR
      *
     C                   MOVEL     'MDY '        PFRFMT
     C                   MOVEL     'CYMD'        PTOFMT
     C                   Z-ADD     0             PDAYS
     C                   MOVE      *BLANK        PCODE
     C                   MOVE      *BLANK        PRTRN
      *
     C                   CALL      'UT80060R'
     C                   PARM                    PFRM8             8 0
     C                   PARM                    PTO8              8 0
     C                   PARM                    PFRFMT            4
     C                   PARM                    PTOFMT            4
     C                   PARM                    PDAYS             4 0
     C                   PARM                    PCODE             1
     C                   PARM                    PRTRN             1
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $LOAD1 - SUBROUTINE TO LOAD THE SUBFILE FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $LOAD1        BEGSR
      *
      * SET THE COUNT OF RECORDS ON THE SUBFILE PAGE TO ZERO.
      *
     C                   Z-ADD     0             COUNT
      *
      * FILL THE SUBFILE UNTIL THE END OF THE DATABASE FILE OR YOU
      * HAVE FILLED ALL THE LINES ON THE SUBFILE PAGE
      *
     C                   SETOFF                                       82
     C     *IN82         DOUEQ     *ON                                          DO FILL LOOP
     C     COUNT         ORGE      WKPLIN
      *
      *  READ SCHEDULED TRANSFER MOVEMENTS
      *
     C                   READ      HSL074G                                82
     C     *IN82         IFEQ      *OFF                                          IF READ
      *
      *  ONLY INCLUDE RECORDS THAT MATCH THE USER'S SELECTORS
      *
     C     C1ORBO        IFNE      *BLANK                                        IF OR B/O
     C     MHORBO        ANDNE     C1ORBO
     C                   ELSE
      *
     C     C1ORPT        IFNE      *BLANK                                        IF OR TYPE
     C     MHORPT        ANDNE     C1ORPT
     C                   ELSE
      *
     C     C1ORPP        IFNE      *BLANK                                        IF OR PHASE
     C     MHORPP        ANDNE     C1ORPP
     C                   ELSE
      *
     C     C1ORFS        IFNE      0                                             IF OR FARM
     C     MHORFS        ANDNE     C1ORFS
     C                   ELSE
      *
     C     C1DNBO        IFNE      *BLANK                                        IF DN B/O
     C     MHDNBO        ANDNE     C1DNBO
     C                   ELSE
      *
     C     C1DNPT        IFNE      *BLANK                                        IF DN TYPE
     C     MHDNPT        ANDNE     C1DNPT
     C                   ELSE
      *
     C     C1DNPP        IFNE      *BLANK                                        IF DN PHASE
     C     MHDNPP        ANDNE     C1DNPP
     C                   ELSE
      *
     C     C1DNFS        IFNE      0                                             IF DN FARM
     C     MHDNFS        ANDNE     C1DNFS
     C                   ELSE
      *
      * FLIP SCHEDULED SHIP DATE TO MDY FOR DISPLAY
      *
     C                   Z-ADD     MHSCDT        WKCYMD
     C                   EXSR      $TOMDY
     C                   Z-ADD     WKMDY         DFSMDY
      *
     C                   ADD       1             COUNT
     C                   ADD       1             HDRRN1
     C                   Z-ADD     MHMVSN        DFMVSN
     C                   MOVEL     MHORBO        DFORBO
     C                   MOVEL     MHORPT        DFORPT
     C                   MOVEL     MHORPP        DFORPP
     C                   Z-ADD     MHORFS        DFORFS
     C                   MOVEL     MHDNBO        DFDNBO
     C                   MOVEL     MHDNPT        DFDNPT
     C                   MOVEL     MHDNPP        DFDNPP
     C                   Z-ADD     MHDNFS        DFDNFS
     C                   Z-ADD     MHPTCT        DFPTCT
     C                   WRITE     HP500S1
     C                   SETON                                        81
      *
      * FOR POSITIONING, PLACE THE SUBFILE RELATIVE RECORD NUMBER INTO
      * THE SFLRCDNBR FIELD (HDPAG1)
      *
     C                   Z-ADD     HDRRN1        HDPAG1
      *
     C                   ENDIF                                                  IF DN FARM
     C                   ENDIF                                                  IF DN PHASE
     C                   ENDIF                                                  IF DN TYPE
     C                   ENDIF                                                  IF DN B/O
     C                   ENDIF                                                  IF OR FARM
     C                   ENDIF                                                  IF OR PHASE
     C                   ENDIF                                                  IF OR TYPE
     C                   ENDIF                                                  IF OR B/O
     C                   ENDIF                                                  IF READ
     C                   ENDDO                                                  DO FILL LOOP
      *
      * IF NO RECORDS WERE WRITTEN TO THE SUBFILE, THEN ISSUE
      * THE STANDARD MESSAGE 'NO DATA TO DISPLAY'.
      *
     C     HDRRN1        IFEQ      0
     C                   Z-ADD     1             ERROR
     C                   MOVEL     YES           NORECS
     C                   ELSE
     C                   MOVEL     NO            NORECS
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $TOMDY - FLIP DATE FROM CCYYMMDD TO MMDDYY
      *---------------------------------------------------------------
      *
     C     $TOMDY        BEGSR
      *
     C                   Z-ADD     WKMON         WKMM
     C                   Z-ADD     WKDAY         WKDD
     C                   Z-ADD     WKYER         WKYY
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $PROC1 - SUBROUTINE TO READ SUBFILE RECORDS AND PROCESS
      *          USER SELECTIONS FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $PROC1        BEGSR
      *
     C                   Z-ADD     0             ERROR
      *
      * IF CURSOR LOCATION RETURNED IS THE RRN OF A RCD IN THE SUBFILE,
      * CHAIN THE SUBFILE FOR THAT RECORD AND LOAD THE DATA INTO THE
      * PARM TO RETURN TO THE CALLING PROGRAM.
      *
     C                   SETOFF                                       82
     C     HDRRN         IFNE      0
     C                   Z-ADD     HDRRN         HDRRN1
     C     HDRRN1        CHAIN     HP500S1                            82
     C                   Z-ADD     DFMVSN        RSMVSN
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $EXIT - SUBROUTINE TO SET ON LR AND END JOB
      *---------------------------------------------------------------
      *
     C     $EXIT         BEGSR
     C                   SETON                                        LR
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * *INZSR - INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      * PARM LISTS
      *
     C     *ENTRY        PLIST
     C                   PARM                    RSMVSN
     C     SVSMDY        PARM                    C1SMDY
     C     SVORBO        PARM                    C1ORBO
     C     SVORPT        PARM                    C1ORPT
     C     SVORPP        PARM                    C1ORPP
     C     SVORFS        PARM                    C1ORFS
     C     SVDNBO        PARM                    C1DNBO
     C     SVDNPT        PARM                    C1DNPT
     C     SVDNPP        PARM                    C1DNPP
     C     SVDNFS        PARM                    C1DNFS
      *
     C     *LIKE         DEFINE    C1SMDY        SVSMDY
     C     *LIKE         DEFINE    MHSCDT        WKSYMD
     C     *LIKE         DEFINE    MHMVSN        RSMVSN
     C     *LIKE         DEFINE    C1ORBO        SVORBO
     C     *LIKE         DEFINE    C1ORPT        SVORPT
     C     *LIKE         DEFINE    C1ORPP        SVORPP
     C     *LIKE         DEFINE    C1ORFS        SVORFS
     C     *LIKE         DEFINE    C1DNBO        SVDNBO
     C     *LIKE         DEFINE    C1DNPT        SVDNPT
     C     *LIKE         DEFINE    C1DNPP        SVDNPP
     C     *LIKE         DEFINE    C1DNFS        SVDNFS
      *
      * GLOBAL DEFINES
      *
     C                   MOVE      *BLANK        MODE              6            PARM
     C                   MOVE      *BLANK        PGM              10            USED IN MSG
     C                   MOVE      *BLANK        MSGFL            10            USED IN MSG
     C                   MOVE      *BLANK        ROUTNE            6            ROUTINE
     C                   Z-ADD     0             MAXRRN            4 0          REPOSITION
     C                   MOVEL     NO            RESET             1            REPOSITION
     C                   MOVEL     NO            NORECS            1            NO RECORDS
     C     *LIKE         DEFINE    IDFLOW        WKFLOW
     C                   Z-ADD     0             COUNT             2 0
     C                   Z-ADD     0             ERROR             3 0
      *
      * TO SUPPORT F5-REFRESH, LOGIC REQUIRES THE NUMBER OF LINES ON
      * THE SUBFILE PAGE AND ALSO THE NUMBER OF LINES LESS 1.  BY
      * SETTING THESE VALUES UP AS CONSTANT WORK FIELDS, THE PROCESSING
      * LOGIC CAN BE STANDARDIZED BETWEEN PROGRAMS.
      *
     C                   Z-ADD     8             WKPLIN            2 0          SFLPAG(0008)
     C     WKPLIN        SUB       1             WKRLIN            2 0          SFLPAG - 1
      *
      *  DO ONE TIME ONLY:  MAKE SURE CALLING PROGRAM SCREEN IS NOT
      *  CLEARED AND WRITE THE WINDOW DEFINITION RCDFMT
      *
     C                   WRITE     HP500R2                                      DUMMY FMT
     C                   WRITE     HP500R1                                      REF WINDOW
     C                   ENDSR
      /EJECT
