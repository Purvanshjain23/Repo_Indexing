// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKTAXFR
// ?Date: 14.08.2025 Time: 02:50:25
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Modifications and Comments
DO;

//?H16853 ISE 11/09/2020 - Recompiled due to change in Buy Order Number
ENDDO;

EXECUTE FUNCTION(Rtv/Crt TH Driver     RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1148308;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.TH_Tattoo_Number);
PARAMETER(PAR.TH_Voucher_Payment_Date);
PARAMETER(PAR.TH_Source_Type);
PARAMETER(PAR.TH_Payment_Type);
PARAMETER(PAR.PD_Producer_Code);
PARAMETER(PAR.@Status_Detail_Summary);
{
 //?USER: Initialize routine

 // *MO.VE             1183529*Bu = ilt. in functions
 WRK.Tattoo_Sequence_Number = *ZERO;

 //?USER: Process Data record

 // WRK.@Status (Yes/No) = CND.Yes
 WRK.@Status_Yes_No = 'Y';

 //?Do not process held over tattoo headers
 CASE;

 // IF DB1.TH Held Over Record is Yes
 IF DB1.TH_Held_Over_Record = 'Y';

 // WRK.@Status (Yes/No) = CND.No
 WRK.@Status_Yes_No = 'N';

 //?Do not process held over tattoo headers
 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF DB1.TH Hog Class Type is Resale
 IF DB1.TH_Hog_Class_Type = 'R';

 //?Do select resale per Kar 04/17/95
 // WRK.@Status (Yes/No) = CND.No
 WRK.@Status_Yes_No = 'N';

 // IF *OTHERWISE
 IF *OTHERWISE;

 //?If Source Type selected
 CASE;

 // IF PAR.TH Source Type EQ WRK.Blank Usr 1 fld Usr
 IF PAR.TH_Source_Type = WRK.Blank_Usr_1_fld_Usr;

 //?If Source Type selected
 // IF PAR.TH Source Type EQ DB1.TH Source Type
 IF PAR.TH_Source_Type = DB1.TH_Source_Type;

 //?If Source Type selected
 // IF *OTHERWISE
 IF *OTHERWISE;

 // WRK.@Status (Yes/No) = CND.No
 WRK.@Status_Yes_No = 'N';

 ENDIF;

 //?If Tattoo number selected...
 CASE;

 // IF PAR.TH Tattoo Number is Zero
 IF PAR.TH_Tattoo_Number = *ZERO;

 //?If Tattoo number selected...
 // IF PAR.TH Tattoo Number EQ DB1.TH Tattoo Number
 IF PAR.TH_Tattoo_Number = DB1.TH_Tattoo_Number;

 //?If Tattoo number selected...
 // IF *OTHERWISE
 IF *OTHERWISE;

 // WRK.@Status (Yes/No) = CND.No
 WRK.@Status_Yes_No = 'N';

 ENDIF;

 //?If Producer selected...
 CASE;

 // IF PAR.PD Producer Code is Blank
 IF PAR.PD_Producer_Code = *BLANK;

 //?If Producer selected...
 // IF PAR.PD Producer Code EQ DB1.PD Producer Code
 IF PAR.PD_Producer_Code = DB1.PD_Producer_Code;

 //?If Producer selected...
 // IF *OTHERWISE
 IF *OTHERWISE;

 // WRK.@Status (Yes/No) = CND.No
 WRK.@Status_Yes_No = 'N';

 ENDIF;

 //?If Payment Type selected
 CASE;

 // IF PAR.TH Payment Type EQ WRK.Blank Usr 1 fld Usr
 IF PAR.TH_Payment_Type = WRK.Blank_Usr_1_fld_Usr;

 //?If Payment Type selected
 // IF PAR.TH Payment Type EQ DB1.TH Payment Type
 IF PAR.TH_Payment_Type = DB1.TH_Payment_Type;

 //?If Payment Type selected
 // IF *OTHERWISE
 IF *OTHERWISE;

 // WRK.@Status (Yes/No) = CND.No
 WRK.@Status_Yes_No = 'N';

 ENDIF;

 ENDIF;

 ENDIF;

 //?Write TH Driver: 1 rcd if summary selected, another rcd if dtl selected
 CASE;

 // IF WRK.@Status (Yes/No) is Yes
 IF WRK.@Status_Yes_No = 'Y';

 CASE;

 // IF PAR.@Status Detail/Summary is Summary or both
 IF PAR.@Status_Detail_Summary = 'B'/'S';

 // WRK.Tattoo Sequence Number = WRK.Tattoo Sequence Number + CON.1
 WRK.Tattoo_Sequence_Number = WRK.Tattoo_Sequence_Number + 1;

 EXECUTE FUNCTION(Create Tattoo Header Driv) TYPE(CRTOBJ) FILE(PKC6CPP)          AB1148318;
 PARAMETER(WRK.Tattoo_Sequence_Number);
 PARAMETER('Carc Sum');
 PARAMETER(DB1.TH_AP_Voucher_Document#);
 PARAMETER(DB1.TH_Voucher_Payment_Date);
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?Execute internal function

   // PAR.RS Record Status = CND.Active
   PAR.RS_Record_Status = 'A';

   // PAR.RS User Added = JOB.*USER
   PAR.RS_User_Added = JOB.*USER;

   // PAR.RS Date Added = JOB.*Job date
   PAR.RS_Date_Added = JOB.*Job_date;

   // PAR.RS Time Added = JOB.*Job time
   PAR.RS_Time_Added = JOB.*Job_time;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

  }

 }

 ENDIF;

 CASE;

 // IF PAR.@Status Detail/Summary is Detail or both
 IF PAR.@Status_Detail_Summary = 'B'/'D';

 CASE;

 // IF DB1.HC Class Code is Resale
 IF DB1.HC_Class_Code = 'RSL';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // WRK.Tattoo Sequence Number = WRK.Tattoo Sequence Number + CON.1
 WRK.Tattoo_Sequence_Number = WRK.Tattoo_Sequence_Number + 1;

 EXECUTE FUNCTION(Create Tattoo Header Driv) TYPE(CRTOBJ) FILE(PKC6CPP)          AB1148318;
 PARAMETER(WRK.Tattoo_Sequence_Number);
 PARAMETER('Prt CrcDtl');
 PARAMETER(DB1.TH_AP_Voucher_Document#);
 PARAMETER(DB1.TH_Voucher_Payment_Date);
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?Execute internal function

   // PAR.RS Record Status = CND.Active
   PAR.RS_Record_Status = 'A';

   // PAR.RS User Added = JOB.*USER
   PAR.RS_User_Added = JOB.*USER;

   // PAR.RS Date Added = JOB.*Job date
   PAR.RS_Date_Added = JOB.*Job_date;

   // PAR.RS Time Added = JOB.*Job time
   PAR.RS_Time_Added = JOB.*Job_time;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

  }

 }

 ENDIF;

 ENDIF;

 ENDIF;

}


