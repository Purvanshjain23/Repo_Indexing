      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     HP1096-Change Group
      * PROGRAMMER:  Alice
      * CREATED:     11/10/03
      *
      * This program is called from HP4096.
      *
      * It is used to change Production Phase, Production Type, Group Type, Stocking Density,
      * Stayed/Moved codes when a group is coded incorrectly.
      * The option is available to the users
      *
      * The new values are passed into this program as parms.
      * This program updates that information in ALL appropriate files and
      * writes a before/after image of the Hog Group to the Group Change file.
      *
      * Note: We decided not to change data in:
      *       HSP080-Deleted Movements
      *       HSP352, HSP357, HSP358, HSP359, HSP360--Permanent Workfiles for Costing
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 11/03/04  LeAnne Fedor
      *           The users are now entering/controlling the Stocking Density for WTF
      *           Nursery groups. So, we removed the hardcoding for these groups.
      *
      * 12/13/04  LeAnne Fedor
      *           Some of the support files used in EOP costing are now 'workfiles'. So,
      *           we removed the logic for these files.
      *
      * 09/08/05  LeAnne Fedor
      *           Added: HPPF034-Datamart FIN: Group Header
      *                  HPPA034-Datamart ALL: Group Header
      *
      * 01/16/06  LeAnne Fedor
      *           Added a "Before/After" tracking file for the Hog Group so that we
      *           can tell which groups have been changed and when.
      *
      * 05/31/06  LeAnne Fedor
      *           Recompile only. A new field was added to HSP240-Group Header for
      *           Interface to FOS.
      *
      * 08/02/06  LeAnne Fedor
      *           Recompile only. Two new fields (ration 8 feed pounds, ration paylean flag)
      *           added to Datamart Group Header file.
      *
      * 08/10/07  LeAnne Ramsey
      *           Recompile only. New "target" fields renamed in the Datamart Group
      *           Header file.
      *
      * 08/23/07  LeAnne Ramsey
      *           Lisa McBride needs "stocking density" changed on her Nursery WTF groups.
      *           So, added logic to pass a stocking density value into this program.
      *           We only allow a "stocking density" change entry for Nursery WTF groups.
      *
      * 09/21/07  LeAnne Ramsey
      *           Recompile only. New "target" fields added/removed in the Datamart Group
      *           Header file.
      *
      * 02/06/08  LeAnne Ramsey
      *           Sami Wilson needs "production type" changed for a group. So, added this
      *           field/logic.
      *
      * 07/02/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Continuous Flow Flag' to Hog Group file.
      *
      * 08/13/09  LeAnne Ramsey
      *           Stayed/Moved and Stocking Density will now be passed in from HP4096...instead
      *           of coding "rules" in this program.
      *           Also, added Group Status to the Group Change file so that we can tell when the
      *           users have asked us to change Closed groups.
      *
      * 10/14/10  LeAnne Ramsey  (E1079)
      *           Recompile only. Sire Line Company is now 2-characters instead
      *           of one.
      *
      * 08/05/16  Barb Gutierrez (E5752)
      *           Recompile only. Added company number to hppa034.
      *
      * 10/14/16  Barb Gutierrez
      *           Recompile only. Added fields sold days in phase, avg sold days in phase,
      *           wgt open date and company number to HPPF034. Added sold days in phase,
      *           avg sold days in phase and wgt open date to HPPA034.  E6136
      *
      * 03/25/20  Danny Nguyen - P405 - Farm Number Increase
      *           Recompile only. Increased Bin Code (@@BNCD) in HSPREF file from 5A to 6A.
      *
      * 01/12/23  Eric Louchez - 111690 - Increment HGCD from 7 A to 9A.
      *           The group code in is being incremented due to the business utilizing 5
      *           digits for a BGF farm number.  Nursery and Grow Finisher group don't change
      /eject
      **********************************************************************************
      * FILE SPECIFICATIONS
      **********************************************************************************
      *
     Fhsp034    uf   e           k disk
      *    Group Header
      *
      *
     Fhplf034c  uf   e           k disk    rename(hgrec:hgrecc) prefix(p1)
      *    Datamart FIN: Group Header
      *
      *
     Fhppa034   uf   e           k disk    rename(hgrec:hgreca) prefix(p2)
      *    Datamart ALL: Group Header
      *
      *
     Fhsl118b   uf   e           k disk
      *    Costed Movements by Origin Group
      *
      *
     Fhsl118c   uf   e           k disk    rename(cmrec:cmrecc)
      *    Costed Movements by Destination Group
      *
      *
     Fhsl120b   uf   e           k disk
      *    Costed Movements Expense Codes by Origin Group
      *
      *
     Fhsl120c   uf   e           k disk    rename(cxrec:cxrecc)
      *    Costed Movements Expense Codes by Destination Group
      *
      *
     Fhsp055    uf   e           k disk
      *    Period Costs for Hogs Moved Out
      *
      *
     Fhsp074    uf   e           k disk
      *    Transfer movement header
      *
      *
     Fhsl075c   if   e           k disk
      *    Transfer Movement Detail by Origin Group
      *
      *
     Fhsl075e   if   e           k disk    rename(mdrec:mdrece)
      *    Transfer Movement Detail by Destination Group
      *
      *
     Fhsp240    uf   e           k disk
      *    FOS system Group Header Interface file
      *
      *
     Fhsp114    o    e           k disk
      *    Group Change
      *
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Parm fields
      *
     D xxhgcd          s                   like(hghgcd)
     D xxppcd          s                   like(hgppcd)
     D xxgtcd          s                   like(hggtcd)
     D xxptcd          s                   like(hgptcd)
     D xxsdcd          s                   like(hgsdcd)
     D xxsmcd          s                   like(hgsmcd)
      *
      * Save fields
      *
     D svhgsn          s                   like(hghgsn)
     D kyhgcd          s              9A
      *
      *
      * Workfields for date manipulation
      *
     D wkisodate       s               D   datfmt(*iso)
     D wkcrdt          s              8  0
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /eject
      **********************************************************************************************
      * Mainline
      **********************************************************************************************
      *
      * Retrieve the Hog Group record and save the System Hog Group Number to key
      * to other files.
      *
     C     xxhgcd        chain     hsp034                             92
     C                   if        *in92 = *off                                 If found
     C                   z-add     hghgsn        svhgsn
      * Hog Group files"
      *   1) HPS
      *   2) Datamart FIN
      *   3) Datamart All
     C                   exsr      $hsp034
     C                   exsr      $hppf034
     C                   exsr      $hppa034
      *
      * Costed movements
     C                   exsr      $hsp118
      * Detail costs
     C                   exsr      $hsp120
      * Period costs
     C                   exsr      $hsp055
      * FOS Group Header
     C                   exsr      $hsp240
      * Transfer Movements
     C                   exsr      $hsp074
     C                   endif                                                  If found
      *
      * EOF processing
     C                   seton                                        lr
      /eject
      *---------------------------------------------------------------
      * Update the HPS group header file
      *---------------------------------------------------------------
      *
     C     $hsp034       begsr
      *
      * Set up "old/before" fields for the tracking record for the group.
      *
     C                   z-add     hghgsn        gchgsn
     C                   move      hggscd        gcgscd
      *
     C                   move      hgppcd        gcoppcd
     C                   move      hgptcd        gcoptcd
     C                   move      hggtcd        gcogtcd
     C                   move      hgsmcd        gcosmcd
     C                   move      hgsdcd        gcosdcd
      *
      * Change the Hog Group record
      *
     C                   move      xxppcd        hgppcd
     C                   move      xxptcd        hgptcd
     C                   move      xxgtcd        hggtcd
     C                   move      xxsdcd        hgsdcd
     C                   move      xxsmcd        hgsmcd
      *
     C                   update    hgrec
      *
      * Set up the "after" fields for the tracking record for the group and
      * write record.
     C                   move      hgppcd        gcnppcd
     C                   move      hgptcd        gcnptcd
     C                   move      hggtcd        gcngtcd
     C                   move      hgsmcd        gcnsmcd
     C                   move      hgsdcd        gcnsdcd
     C                   z-add     wkcrdt        gccrdt
     C                   time                    gccrtm
     C                   move      sdusr         gccrusr
      *
     C                   write     gcrec
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Update Datamart FIN: Group Header
      *---------------------------------------------------------------
      *
     C     $hppf034      begsr
      *
     C     svhgsn        chain     hplf034c                           92
     C                   if        *in92 = *off                                 If found
      *
     C                   move      xxppcd        p1hgppcd
     C                   move      xxptcd        p1hgptcd
     C                   move      xxgtcd        p1hggtcd
     C                   move      xxsdcd        p1hgsdcd
     C                   move      xxsmcd        p1hgsmcd
      *
     C                   update    hgrecc
     C                   endif                                                  If found
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Update Datamart ALL: Group Header
      *---------------------------------------------------------------
      *
     C     $hppa034      begsr
      *
     C                   movel     xxhgcd        kyhgcd
      **** xxhgcd        chain     hppa034                            92
     C     kyhgcd        chain     hppa034                            92
     C                   if        *in92 = *off                                 If found
      *
     C                   move      xxppcd        p2hgppcd
     C                   move      xxptcd        p2hgptcd
     C                   move      xxgtcd        p2hggtcd
     C                   move      xxsdcd        p2hgsdcd
     C                   move      xxsmcd        p2hgsmcd
      *
     C                   update    hgreca
     C                   endif                                                  If found
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Update the costed movement file
      *---------------------------------------------------------------
      *
     C     $hsp118       begsr
      *
      * Read all records by ORIGIN group
      *
     C     svhgsn        setll     hsl118b
     C                   dou       *in90 = *on                                  Do loop
     C     svhgsn        reade     hsl118b                                90
     C                   if        *in90 = *off                                 If not EOF
     C                   move      xxppcd        cmorppcd
     C                   update    cmrec
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do loop
      *
      * Read all records by DESTINATION group
      *
     C     svhgsn        setll     hsl118c
     C                   dou       *in90 = *on                                  Do loop
     C     svhgsn        reade     hsl118c                                90
     C                   if        *in90 = *off                                 If not EOF
     C                   move      xxppcd        cmdnppcd
     C                   update    cmrecc
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do loop
      *
     C                   endsr
      *
      *---------------------------------------------------------------
      * Update Costed Movements Expense Codes
      *---------------------------------------------------------------
      *
     C     $hsp120       begsr
      *
      * Read Costed Movements Expense Codes by Origin Group
      *
     C     svhgsn        setll     hsl120b
     C                   dou       *in90 = *on                                  Do loop
     C     svhgsn        reade     hsl120b                                90
     C                   if        *in90 = *off                                 If not EOF
     C                   move      xxppcd        cxorppcd
     C                   update    cxrec
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do loop
      *
      * Read Costed Movements Expense Codes by Destination Group
      *
     C     svhgsn        setll     hsl120c
     C                   dou       *in90 = *on                                  Do loop
     C     svhgsn        reade     hsl120c                                90
     C                   if        *in90 = *off                                 If not EOF
     C                   move      xxppcd        cxdnppcd
     C                   update    cxrecc
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do loop
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Update Period Costs for Hogs Moved OUT
      *---------------------------------------------------------------
      *
     C     $hsp055       begsr
      *
      * Read all records for the group
      *
     C     svhgsn        setll     hsp055
     C                   dou       *in90 = *on                                  Do loop
     C     svhgsn        reade     hsp055                                 90
     C                   if        *in90 = *off                                 If not EOF
      *
     C                   move      xxppcd        pcppcd
     C                   move      xxgtcd        pcgtcd
     C                   update    pcrec
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do loop
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Update FOS group header
      *---------------------------------------------------------------
      *
     C     $hsp240       begsr
      *
      * Read all records for the group
      *
     C     xxhgcd        setll     hsp240
      *
     C                   dou       *in90 = *on                                  Do loop
     C     xxhgcd        reade     hsp240                                 90
     C                   if        *in90 = *off                                 If not EOF
      *
     C                   move      xxppcd        ohppcd
     C                   move      xxgtcd        ohgtcd
      *
      * Reset the single/double stock code and the stayed/moved code
      *
     C                   move      hgsdcd        ohsdcd
     C                   move      hgsmcd        ohsmcd
      *
     C                   update    ohrec
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do loop
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Update Transfer Movement Header file
      *---------------------------------------------------------------
      *
     C     $hsp074       begsr
      *
      * Read the transfer movement detail for all records by ORIGIN group
      *   then get the transfer movement header to update it
      *
     C     svhgsn        setll     hsl075c
      *
     C                   dou       *in90 = *on                                  Do loop
     C     svhgsn        reade     hsl075c                                90
     C                   if        *in90 = *off                                 If not EOF
      *
     C     mdmvsn        chain     hsp074                             92
     C                   if        *in92 = *off
     C                   move      xxppcd        mhorpp
     C                   move      xxptcd        mhorpt
     C                   update    mhrec
     C                   endif
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do loop
      *
      * Read the transfer movement detail for all records by DESTINATION group
      *   then get the transfer movement header to update it
      *
     C     svhgsn        setll     hsl075e
      *
     C                   dou       *in90 = *on                                  Do loop
     C     svhgsn        reade     hsl075e                                90
     C                   if        *in90 = *off                                 If not EOF
      *
     C     mdmvsn        chain     hsp074                             92
     C                   if        *in92 = *off
     C                   move      xxppcd        mhdnpp
     C                   move      xxptcd        mhdnpt
     C                   update    mhrec
     C                   endif
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do loop
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm lists
      *
     C     *entry        plist
     C                   parm                    xxhgcd
     C                   parm                    xxppcd
     C                   parm                    xxgtcd
     C                   parm                    xxptcd
     C                   parm                    xxsdcd
     C                   parm                    xxsmcd
      *
      * Save date for record stamp
      *
     C     *mdy          move      udate         wkisodate
     C                   move      wkisodate     wkcrdt
      *
     C                   endsr
      /eject
