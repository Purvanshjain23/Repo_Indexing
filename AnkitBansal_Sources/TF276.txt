     h option(*SRCSTMT:*NODEBUGIO)
      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Triumph Foods
      * PROGRAM:     TF276
      * TITLE:       YIELDS: Weekly Yields
      * PROGRAMMER:  LeAnne Ramsey
      * CREATED:     12/05/08
      *
      * FUNCTION:  Batch program to create the Weekly Yields data.
      *            Yield data is based on the Margin Adjustment file for Finished Goods and
      *            the Inventory Stock Closing file for WIPs.
      *
      ***************************************************************************************
      * MODIFICATIONS:
      ***************************************************************************************
      * DATE      PROGRAMMER
      *
      * 01/23/09  LeAnne Ramsey
      *           Fixed bug in Single Rib Belly calc.
      *
      * 01/28/09  LeAnne Ramsey
      *           Added logic to calc "start pounds" on WIPS.
      *           Changed "smoker" calc to use:   "start pounds"    times "smoker rate"
      *                             instead of:   "produced pounds" times "smoker rate".
      *           Added logic to calc "start pounds" for Picnics for:
      *               1) All non-ByProduct Items
      *               2) Cushion ByProduct Items
      *
      * 02/06/09  LeAnne Ramsey
      *           Added logic to calc "yield percent" for:
      *               700-Misc, 720-Trim, 740-Kill, 750-Render
      *
      * 02/19/09  LeAnne Ramsey
      *           1) Hardcoded a 'meat cost group' for the BP record in the special logic
      *              for the Single Rib Belly.
      *           2) Picnic "cushion" logic will no longer be limited to Item Structure
      *              Class = 631... we will now go with all Item Structure Group = 630.
      *
      * 02/26/09  LeAnne Ramsey
      *           1) Smoker Percent will now be pulled from file ROP100-Resource
      *              Optimization Header.
      *           2) We will no longer hold Yield%, Per Head Cut, Per Head Killed values in
      *              the Weekly Yield file. They will be calc'd in the Report programs.
      *
      * 03/09/09  LeAnne Ramsey
      *           To prevent 'divide by zero' errors, add an 'IF' clause on the calcs
      *           using WKSMOKYRT.
      *
      * 10/02/09  LeAnne Ramsey
      *           WIPs only. We need to accumulate pounds instead of using z-add when
      *           we process the Inventory Stock Closing file. We were only expecting one
      *           record for Seaboard and one record for Triumph. But, now they are putting
      *           WIPs into the "freezer" warehouses. So, we are getting multiple records
      *           for a Company/Week.
      *
      * 02/17/10  LeAnne Ramsey
      *           Recompile only. Two new fields were added to the Resource Optimization Header:
      *                Cap&Blade Allocation % for Special Trim
      *                Cap&Blade Allocation % for Regular Trim
      *
      * 02/01/11  LeAnne Ramsey (E1298)
      *           We no longer build records in ROP124-TF ByProduct Mix Exceptions.
      *           But, I have left the code and commented it out....just in case we have
      *           to resurrect it!!
      *
      * 03/08/12  LeAnne Ramsey (E1984)
      *           Recompile only.
      *           Added 6 new Skirt Meat Allocation Flag fields to ROP100.
      *
      * 09/10/12  LeAnne Ramsey (E2243)
      *           Recompile only.
      *           To handle Damon's new logic for Skirt Meat stuff, I had to add
      *           a new field to TFP014:
      *                         ADSMSFL-Skirt Meat Split Flag
      *
      * 10/02/12  LeAnne Ramsey (E2281)
      *           Removed special Start Weight calcs for Smokers along with files/keys etc.
      *           associated with that logic. So, now, in file TFP076-Weekly Yields, the 2
      *           fields below will always be zero:
      *              YWBNLSYPC-Boneless Picnic Cushion Yield%
      *              YWCALCYPC-Calculated Yield Percent
      *
      *           I also removed the commented out code from the 2/01/11 change...I had
      *           kept it awhile just to be safe.
      *
      * 11/15/12  LeAnne Ramsey (E2337)
      *           Recompile only.
      *           Rose had to increase the price/cwt field sizes in PPBTCPP-Inventory
      *           Value file and PPBSCPP-Inventory Stock Closing.
      *
      * 06/13/13  LeAnne Ramsey (C2635)
      *           In December 2009 Triumph started selling Item 96109-Choice White
      *           Grease on its own. This screwed up Yields because, being Exempt,
      *           it no longer got processed into TFP014-Margin Detail. And,
      *           TFP014 was the driver file for the Yield Reports. At that time, I
      *           changed the logic in TF277 to work around this..and it worked...
      *           until now!!
      *           Now, Damon has removed 96109 as a Component Item from the CV, VA, and
      *           NV items...that was what made the workaround work!! So, I have now
      *           hardcoded logic here for Item 96109 (see $CWG).
      *
      * 01/30/14  LeAnne Ramsey (E2997)
      *           Removed the special Single Rib Belly logic. Damon said this logic was
      *           correct when we were calculating yields on skinless bellies from a skin-on
      *           belly, but no longer applies. He now wants the SRBs to flow thru the normal
      *           Finished Goods logic. I removed $srb and $split.
      *
      * 11/14/17  Danny Nguyen  (R12011A-Weekly Product Revenue)
      *           Recompile only. Added 25 STF fields to TFP010 file.
      *
      * 02/04/22  Danny Nguyen  (DO2484-WI479 STF Variance Reporting)
      *           DBFC on TFP076 file. Added the following fields:
      *             YWXPULB   - STF PRODUCED LBS
      *             YWXPUSLB  - STF PRODUCED START WEIGHT
      *             YWXSTDPLB - STF STANDARD PRODUCTION LBS
      *           Populate YWXPULB & YWXPUSLB fields in TFP076 file.
      *           Added STF Item Standard Cost (PUACCPL1) file.
      *
      * 10/10/22  R Centonze   W105621 - Increase price fields to handle > 999.99
      *                        CHANGE @@ANPRPR TO SIZE 10.6  --> pranprpr tfp010
      *         COPY @@SPU1MG TO  @@SPU1MG10 SIZE 10.6  -> FIELD TFP014.ADSPU1MG
      *         COPY @@TPU1MG TO  @@TPU1MG10 SIZE 10.6  -> FIELD TFP014.ADTPU1MG
      *         COPY @@SSL1MG TO  @@SSL1MG10 SIZE 10.6  -> FIELD TFP014.ADSSL1MG
      *         COPY @@SSL2MG TO  @@SSL2MG10 SIZE 10.6  -> FIELD TFP014.ADSSL2MG
      *         COPY @@TSL1MG TO  @@TSL1MG10 SIZE 10.6  -> FIELD TFP014.ADTSL1MG
      *         COPY @@TSL2MG TO  @@TSL2MG10 SIZE 10.6  -> FIELD TFP014.ADTSL2MG
      *
      * 05/07/24  Santosh Patil P310149 - Field length is increased
      *           in TFP014. Function is recompiled only.
      *
      /EJECT
      ***************************************************************************************
      * FILE SPECIFICATIONS
      ***************************************************************************************
      *
     Fombyrel1  if   e           k disk
      *    Item default
      *
      *
     Fpoaxcpl1  if   e           k disk
      *  Item standard cost
      *
      *
2484 Fpuaccpl1  if   e           k disk
      *  STF Item Standard Cost
      *
      *
     Fppaorel1  if   e           k disk
      *    TF Margin adjustment group detail
      *
      *
     Fppbscpl3  if   e           k disk
      *    Inventory stock closing
      *
      *
     Ftfp010    if   e           k disk
      *    Weekly product revenue detail
      *
      *
     Ftfl014f   if   e           k disk
      *    Margin adjustment transaction detail
      *
     Ftfp076    o    e           k disk
      *    Yields: Weekly yields
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Control fields
      *
     D first           s              1    inz('Y')
     D procfl          s              1    inz('Y')
     D svprcd          s                   like(ywprcd)
      *
      *
      * Workfields
      *
     D wkpump          s              9  6
2484 D wkxpump         s              9  6
     D wkcono          s              3  0 inz(360)
     D wk96109         s                   like(ywprcd)   inz(96109)
      *
      * Parms
      *
     D xxprcd          s                   like(ywprcd)
     D xxprdcmp        s                   like(adprdcmp)
     D xxcgcd          s                   like(aohfaa)
     D xxmixgrp        s                   like(ywmixgrp)
     D xxsumlev        s                   like(ywsumlev)
     D xxistycd        s                   like(ywistycd)
     D xxisgrcd        s                   like(ywisgrcd)
     D xxisclcd        s                   like(ywisclcd)
     D xxtfclcd        s                   like(ywtfclcd)
     D xxtfcgcd        s                   like(ywtfcgcd)
     D xxitycd         s                   like(ywitycd)
     D xxcoownfl       s                   like(ywcoownfl)
     D xxglsub         s                   like(adglsub)
     D xxedfl          s              1
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Local data area.
      *---------------------------------------------------------------
      *
     Dlda             uds                  dtaara(*lda)
      *
     D  ldyr                   2      5  0
     D  ldwk                   6      7  0
      *
     D  ldwedt                29     36  0
     D  ldwesyn               37     43  0
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      *****************************************************************************************
      * MAINLINE
      *****************************************************************************************
      *
      * Special Choice White Grease logic
      *
     C                   exsr      $cwg
      *
      * Process Finished Goods from the Margin Adjustment Detail file.
      *
     C                   exsr      $fg
      *
      * Process WIPs from the Inventory Stock Closing file.
      *
     C                   exsr      $wp
      *
     C                   seton                                        lr
      /EJECT
      *---------------------------------------------------------------------------------
      * Choice White Grease  (special hardcoded logic for Exempt Item 96109)
      *---------------------------------------------------------------------------------
      *
     C     $cwg          begsr
      *
     C     key05         chain     tfp010                             92
     C                   if        *in92 = *off
      *
     C                   move      prcoownfl     ywcoownfl
     C                   move      prtfcgcd      ywtfcgcd
     C                   move      prtfclcd      ywtfclcd
     C                   z-add     pristycd      ywistycd
     C                   z-add     prisgrcd      ywisgrcd
     C                   z-add     prisclcd      ywisclcd
     C                   z-add     prprcd        ywprcd
     C                   move      pritycd       ywitycd
     C                   z-add     prspulb       ywspulb
     C                   z-add     prtpulb       ywtpulb
2484 C                   z-add     prxpulb       ywxpulb                        STF Produced Lbs
      *
     C                   exsr      $process
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------------------------
      * Finished Goods
      *---------------------------------------------------------------------------------
      *
      * Read each record for the week in the Magin Adjustment Detail file.
      * Do a 1-to-1 write to the Workfile. (Omit WIPs and Co-Pack)
      *
     C     $fg           begsr
      *
     C     ldwedt        setll     tfl014f
      *
     C                   dou       *in91 = *on                                  Do FGs
     C     ldwedt        reade     tfl014f                                91
     C                   if        *in91 = *off and                             If not EOF
     C                             aditycd <> 'WP ' and adistycd <> 900
      *
     C                   move      adcoownfl     ywcoownfl
     C                   move      adtfcgcd      ywtfcgcd
     C                   move      adtfclcd      ywtfclcd
     C                   z-add     adistycd      ywistycd
     C                   z-add     adisgrcd      ywisgrcd
     C                   z-add     adisclcd      ywisclcd
     C                   move      admixgrp      ywmixgrp
     C                   z-add     adprcd        ywprcd
     C                   move      aditycd       ywitycd
      *
     C                   z-add     adspulb       ywspulb
     C                   z-add     adtpulb       ywtpulb
2484 C                   z-add     adxpulb       ywxpulb                        STF Produced Lbs
      *
      * Populate Start Pounds (conditionally)
      *
     C                   select
     C                   when      ywtfcgcd = 'OT'
      *
      *    Picnic Cushions
     C                   when      ywtfcgcd = 'BP' and ywtfclcd = 'BP5' and
     C                             ywistycd = 600 and ywisgrcd = 630
     C                   z-add     adspulb       ywspuslb
     C                   z-add     adtpulb       ywtpuslb
2484 C                   z-add     adxpulb       ywxpuslb                       STF Prod Start Wgt
      *
      *   Other-Not ByProduct
     C                   when      ywtfcgcd <> 'BP'
     C                   z-add     adspuslb      ywspuslb
     C                   z-add     adtpuslb      ywtpuslb
2484 C                   z-add     adxpuslb      ywxpuslb                       STF Prod Start Wgt
     C                   endsl
      *
     C                   exsr      $process
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do FGs
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------------------------
      * WIPs
      *---------------------------------------------------------------------------------
      *
      * Read each WP record from the Inventory Stock Closing file.
      * We will only process some of these WIPs.
      *
     C     $wp           begsr
      *
     C                   clear                   ywrec
      *
     C     ldwedt        setll     ppbscpl3
      *
     C                   dou       *in91 = *on                                  Do WIPs
     C     ldwedt        reade     ppbscpl3                               91
     C                   if        *in91 = *off and bsw1sx = 'WP '              If not EOF
      *
      * The file will have a Seaboard record and a Triumph record for each Item.
      * So, we want to get both records before we write our Workfile record for
      * the Item.
     C                   select
     C                   when      first = yes
     C                   exsr      $wpcheck
      *
     C                   when      bsejc7 <> svprcd
     C                   exsr      $wpstart
     C                   exsr      $process
     C                   exsr      $wpcheck
     C                   endsl
      *
      * Detail processing
      *
     C                   select
     C                   when      procfl = no
      *
     C                   when      bsb2c3 = 360
     C                   add       bsmtwg        ywspulb
      *
     C                   when      bsb2c3 = 960
     C                   add       bsmtwg        ywtpulb
      *
2484 C                   when      bsb2c3 = 440
2484 C                   add       bsmtwg        ywxpulb                        STF Produced Lbs
      *
     C                   endsl
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do WIPs
      *
      * Last Item
     C                   if        first = no and procfl = yes
     C                   exsr      $wpstart
     C                   exsr      $process
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Check if the WIP Item should be processed
      *---------------------------------------------------------------
      *
     C     $wpcheck      begsr
      *
     C                   z-add     bsejc7        ywprcd
     C                   z-add     bsejc7        svprcd
      *
      * Retrieve TF Classification and Item Structure stuff
      *
     C                   call      'TF813'
     C                   parm      ywprcd        xxprcd
     C     ywistycd      parm      0             xxistycd
     C     ywisgrcd      parm      0             xxisgrcd
     C     ywisclcd      parm      0             xxisclcd
     C     ywtfclcd      parm      *blank        xxtfclcd
     C     ywtfcgcd      parm      *blank        xxtfcgcd
     C                   parm      *blank        xxglsub
     C     ywitycd       parm      *blank        xxitycd
     C     ywcoownfl     parm      *blank        xxcoownfl
     C                   parm      *blank        xxprdcmp
     C                   parm      *blank        xxedfl
      *
      * If the WIP has a TF Classification and is not a Co-Pack,
      * process.
     C                   if        ywtfclcd <> *blank and
     C                             ywistycd <> 900
     C                   move      yes           procfl
     C                   else
     C                   move      no            procfl
     C                   endif
      *
      * Are we processing this Item or not?
      *
     C                   select
     C                   when      procfl = no
     C                   clear                   ywrec
     C                   other
      *
     C                   if        first = yes
     C                   move      no            first
     C                   endif
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Calc Start Pounds for WIP Item  (exclude BPs)
      * DO2484 - Added PUACCPL1 file to calc STF Produced Start Weight.
      *---------------------------------------------------------------
      *
     C     $wpstart      begsr
      *
     C                   if        ywtfcgcd <> 'BP'                             If not ByProduct
      *
2484 C                   if        bsb2c3 <> 440
2484 C                   eval      wkcono = 360
      *
      * Retrieve Yield and Pump Percents from the Item Standard Cost file.
      *
     C     key06         chain     poaxcpl1                           92
     C                   if        *in92 = *off                                 If hit
     C                   eval      wkpump = axgepc + 1
      *
     C                   if        axfcpc <> 0 and wkpump <> 0
     C                   eval      ywspuslb = ((ywspulb / axfcpc) / wkpump)
     C                   eval      ywtpuslb = ((ywtpulb / axfcpc) / wkpump)
     C                   endif
     C                   endif                                                  If hit
      *
2484 C                   else
  |   *
  |  C                   eval      wkcono = 440
  |  C     key06         chain     puaccpl1
  |  C                   if        %found(puaccpl1)
  |  C                   eval      wkxpump = acgepc + 1
  |   *
  |  C                   if        acfcpc <> 0 and wkxpump <> 0
  |  C                   eval      ywxpuslb = ((ywxpulb / acfcpc) / wkxpump)
  |  C                   endif
  |  C                   endif
  |   *
2484 C                   endif                                                  bsb2c3 <> 440
      *
     C                   endif                                                  If not ByProduct
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Process
      *---------------------------------------------------------------
      *
     C     $process      begsr
      *
      * Continue only when you have some pounds
      *
     C                   if        ywspulb  <> 0 or                             If pounds
     C                             ywspuslb <> 0 or
2484 C                             ywxpulb  <> 0 or
2484 C                             ywxpuslb <> 0 or
     C                             ywtpulb  <> 0 or
     C                             ywtpuslb <> 0
      *
      * Populate fields with LDA values.
      *
     C                   z-add     ldyr          ywyr
     C                   z-add     ldwk          ywwk
     C                   z-add     ldwedt        ywwedt
      *
      * Retrieve Product Description.
      *
     C     ywprcd        chain     ombyrel1                           92
     C                   if        *in92 = *off
     C                   eval      ywprds = byavna
     C                   endif
      *
      * Retrieve the Meat Cost Group and Mix Group Code
      *
     C     key01         chain     ppaorel1                           92
     C                   if        *in92 = *off
     C                   move      aohfaa        ywcgcd
     C                   move      aoi1t1        ywmixgrp
     C                   endif
      *
      * Call generic program to retrieve the Summary Level for "BP" Items
      * Note: We will have already hardcoded the value for a few records;
      *       so, don't overlay our hardcoding.
      *
     C                   if        ywtfcgcd = 'BP' and ywsumlev = *blank        If BP
     C                   call      'RO801'
     C                   parm      ywcgcd        xxcgcd
     C                   parm      ywtfclcd      xxtfclcd
     C                   parm      ywistycd      xxistycd
     C                   parm      ywisgrcd      xxisgrcd
     C                   parm      ywisclcd      xxisclcd
     C                   parm      ywmixgrp      xxmixgrp
     C     ywsumlev      parm      *blank        xxsumlev
     C                   endif                                                  If BP
      *
      * Overlay the "summary level" for the Backribs. Damon G. wants the
      * 3 Summary levels (BP1.BKRB.A and BP1.BKRB.B and BP1.BKRB.C) combined.
      *
     C                   if        ywcgcd = 'BKRB'
     C                   eval      ywsumlev = ywtfclcd + '.' + ywcgcd
     C                   endif
      *
      * Write a record
     C                   write     ywrec
     C                   endif                                                  If pounds
      *
     C                   clear                   ywrec
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Key Lists
      *
     C     key01         klist
     C                   kfld                    ywtfclcd
     C                   kfld                    ywistycd
     C                   kfld                    ywisgrcd
     C                   kfld                    ywisclcd
      *
     C     key05         klist
     C                   kfld                    wk96109
     C                   kfld                    ldwedt
      *
     C     key06         klist
     C                   kfld                    wkcono
     C                   kfld                    svprcd
     C                   kfld                    ldwesyn
      *
     C                   endsr
      /EJECT
