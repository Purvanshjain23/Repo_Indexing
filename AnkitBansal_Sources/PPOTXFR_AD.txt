// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PPOTXFR
// ?Date: 14.08.2025 Time: 03:41:28
// ?------------------------------------------------------------------------------------------------

//?Execute user function

// PAR.Date Sat USR = PAR.Week End Date
PAR.Date_Sat_USR = PAR.Week_End_Date;

//?1. Crt new week's Inv Stock Closing bals
//?Rtv Sunday that starts the new week
EXECUTE FUNCTION(Rtv Prior Sunday      RT) TYPE(RTVOBJ) FILE(CAAFREP)           AC1410775;
PARAMETER(PAR.ISC_Warehouse_Company);
PARAMETER(PAR.Week_End_Date);
PARAMETER(PAR.Date_Sun_USR);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 CASE;

 // IF DB1.Day of Week is Sunday
 IF DB1.Day_of_Week = '1';

 // PAR.Date Sun USR = DB1.Post to G/L Date
 PAR.Date_Sun_USR = DB1.Post_to_G_L_Date;

 QUIT;

 ENDIF;

}


//?  a. Roll forward ending week's to beginning new week's balances
//?RMC 11/30/05 remove ISC company from input rst parm; do both
//?R9083 02/17/17 DN-Changed Access Path to Read by Group/WeekEnd.
EXECUTE FUNCTION(Rtv Crt New Weeks Rcd RT) TYPE(RTVOBJ) FILE(PPBSCPP)           AC1739132;
PARAMETER(PAR.ISC_Valuation_Grouping);
PARAMETER(PAR.Last_Week_Ending_Date_USR);
PARAMETER(PAR.ISC_Week_Ending_Date);
PARAMETER(PAR.Date_Sun_USR);
PARAMETER(PAR.Date_Sat_USR);
{
 //?USER: Initialize routine

 //?11/10/2009 slm
 //?E00470 Item Description Data sync
 //?Item Type = was not getting updated in the Crt from the
 //?Item Default.
 //?this was due to the fact that we did not think the users
 //?were changing from wip TO FG or FG to wip
 //?USER: Process Data record

 EXECUTE FUNCTION(Rtv Inv Stock Closing RT) TYPE(RTVOBJ) FILE(OMBYREP)           AC1738283;
 PARAMETER(DB1.ISC_Item_Code);
 PARAMETER(WRK.Description_Line_One);
 PARAMETER(WRK.ISC_Item_Structure_Class);
 PARAMETER(WRK.ISC_Item_Structure_Group);
 PARAMETER(WRK.ISC_Item_Structure_Type);
 PARAMETER(WRK.ISC_Item_Dft_Cmdty_Mkt_Bs);
 PARAMETER(WRK.ISC_Item_Type);
 PARAMETER(WRK.ISC_Item_Cmdty_Price_Grp);
 PARAMETER(WRK.ISC_Item_GL_Sub_Code);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 EXECUTE FUNCTION(Rtv Inv Stock Closing RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1738284;
 PARAMETER(DB1.ISC_Warehouse_Company);
 PARAMETER(DB1.ISC_Item_Code);
 PARAMETER(WRK.ISC_Item_UOM_Pricing);
 PARAMETER(WRK.ISC_Item_Market_Overage);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 EXECUTE FUNCTION(RTV Warehouse Type     RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1285482;
 PARAMETER(DB1.ISC_Warehouse_Code);
 PARAMETER(WRK.ISC_Warehouse_Type);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 // WRK.ISC Post Balance Sts = CND.Open
 WRK.ISC_Post_Balance_Sts = 'O';

 // WRK.ISC Post Warehouse Sts = CND.Open
 WRK.ISC_Post_Warehouse_Sts = 'O';

 // WRK.ISC Beg Inv Lbs = DB1.ISC End Inv Final Lbs - DB1.ISC End Inv Adj Lbs
 WRK.ISC_Begin_Inv_Lbs = DB1.ISC_Ending_Inv_Final_Lbs - DB1.ISC_Ending_Inv_Adj_Lbs;

 // WRK.ISC Beg Inv Qty = DB1.ISC End Inv Final Qty - DB1.ISC End Inv Adj Qty
 WRK.ISC_Begin_Inv_Qty = DB1.ISC_Ending_Inv_Final_Qty - DB1.ISC_Ending_Inv_Adj_Qty;

 CASE;

 // IF DB1.ISC Warehouse Price /UOM is Entered
 IF DB1.ISC_Warehouse_Price_UOM <> *ZERO;

 // WRK.ISC Warehouse Price Ovrrd = CND.Previous Week Value
 WRK.ISC_Warehouse_Price_Ovrrd = 'P';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // WRK.ISC Warehouse Price Ovrrd = WRK.Blank for 4           USR
 WRK.ISC_Warehouse_Price_Ovrrd = WRK.Blank_for_4_USR;

 ENDIF;

 //?11/10/2009 slm
 //?R9083 02/17/17 DN-Populate ISC Valuation Grouping.
 EXECUTE FUNCTION(Crt Inventory Stock   CR) TYPE(CRTOBJ) FILE(PPBSCPP)           AC1738127;
 PARAMETER(PAR.PT_Prod_Date_YYYYMMDD);
 PARAMETER(DB1.ISC_Warehouse_Company);
 PARAMETER(DB1.ISC_Warehouse_Code);
 PARAMETER(DB1.ISC_Item_Code);
 PARAMETER(WRK.ISC_Warehouse_Type);
 PARAMETER(WRK.ISC_Item_Cmdty_Price_Grp);
 PARAMETER(WRK.ISC_Item_Dft_Cmdty_Mkt_Bs);
 PARAMETER(WRK.ISC_Item_Type);
 PARAMETER(WRK.ISC_Item_Market_Overage);
 PARAMETER(WRK.ISC_Item_Structure_Type);
 PARAMETER(WRK.ISC_Item_Structure_Group);
 PARAMETER(WRK.ISC_Item_Structure_Class);
 PARAMETER(WRK.ISC_Item_GL_Sub_Code);
 PARAMETER(WRK.ISC_Item_UOM_Pricing);
 PARAMETER(DB1.ISC_Ending_Inv_Final_Qty);
 PARAMETER(DB1.ISC_Ending_Inv_Final_Lbs);
 PARAMETER(DB1.ISC_Ending_Inv_Adj_Qty);
 PARAMETER(DB1.ISC_Ending_Inv_Adj_Lbs);
 PARAMETER(WRK.ISC_Begin_Inv_Qty);
 PARAMETER(WRK.ISC_Begin_Inv_Lbs);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(WRK.ISC_Warehouse_Price_Ovrrd);
 PARAMETER(WRK.ISC_Post_Balance_Sts);
 PARAMETER(WRK.ISC_Post_Warehouse_Sts);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(PAR.ISC_Valuation_Grouping);
 PARAMETER(*ZERO);
 PARAMETER(WRK.ISC_Unused_Sts_2);
 PARAMETER('A');
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Create_Date);
  PARAMETER(DB1.Create_Time);
  PARAMETER(DB1.Create_User);
  PARAMETER(DB1.Create_Program);
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   //?*** Set RECORD STATUS field. ***
   // PAR.Record Status = CND.Active
   PAR.Record_Status = 'A';

   //?*** Set CREATE fields. ***
   // PAR.Create Date = JOB.*Job date
   PAR.Create_Date = JOB.*Job_date;

   // PAR.Create Time = JOB.*Job time
   PAR.Create_Time = JOB.*Job_time;

   // PAR.Create User = JOB.*USER
   PAR.Create_User = JOB.*USER;

   // PAR.Create Program = JOB.*PROGRAM
   PAR.Create_Program = JOB.*PROGRAM;

   //?*** Set CHANGE fields. ***
   // PAR.Change Date = CON.*ZERO
   PAR.Change_Date = *ZERO;

   // PAR.Change Time = CON.*ZERO
   PAR.Change_Time = *ZERO;

   // PAR.Change User = CON.*BLANK
   PAR.Change_User = *BLANK;

   // PAR.Change Program = CON.*BLANK
   PAR.Change_Program = *BLANK;

  }

  // Compute:Ending Inv Fin Qt
  DB1.ISC_Ending_Inv_Final_Qty = ( ( ( DB1.ISC_Ending_Inventory_Qty
  + DB1.ISC_Ending_Inv_Adj_Qty ) + DB1.ISC_Sun_Ship_Inv_Adj_Qty )
  + DB1.ISC_Unsh_Ship_Inv_Adj_Qty ) + DB1.ISC_End_Inv_Partial_Qty;

  // Compute:Ending Inv Fin Lb
  DB1.ISC_Ending_Inv_Final_Lbs = ( ( ( DB1.ISC_Ending_Inventory_Lbs
  + DB1.ISC_Ending_Inv_Adj_Lbs ) + DB1.ISC_Sun_Ship_Inv_Adj_Lbs )
  + DB1.ISC_Unsh_Ship_Inv_Adj_Lbs ) + DB1.ISC_End_Inv_Partial_Lbs;

 }

}


//?  b. Rtv End Inv from IC Item Bal -- Ending Inventory Download
//?    POFPPVR AND POFQUPC - read the item bal the same way & upd ISC
//?R9083 05/08/17 DN-Added ISC Valuation Grouping to Parm.
// Call program Exc Build End Inv-ISC XF.
CALL PROGRAM(Exc Build End Inv-ISC XF) ('PPO1XFR');
PARAMETER(PAR.Date_Sat_USR);
PARAMETER(PAR.ISC_Week_Ending_Date);
PARAMETER(PAR.ISC_Valuation_Grouping);

//?  c. Rtv Partials (PT) & Rejects (RJ) from the Yield system
//?  ---> Manually entered
//?  d. Floor Production from Item Trans --> Production Download- POFHPVR
//?******
//?******
EXECUTE FUNCTION(Rtv Date/Time         RT) TYPE(RTVOBJ) FILE(PMA5REP)           AC1831861;
PARAMETER(PAR.ISC_Warehouse_Company);
PARAMETER('RR');
PARAMETER(LCL.ISC_From_Time);
PARAMETER(LCL.ISC_To_Time);
PARAMETER(PAR.Date_Sat_USR);
PARAMETER(LCL.From_Date_USR);
PARAMETER(LCL.Thru_Date_USR);
{
 //?USER: Process Data record

 // PAR.ISC From Time = DB1.ISC From Time
 PAR.ISC_From_Time = DB1.ISC_From_Time;

 // PAR.ISC To Time = DB1.ISC To Time
 PAR.ISC_To_Time = DB1.ISC_To_Time;

 EXECUTE FUNCTION(Rtv Prior Day per par RT) TYPE(RTVOBJ) FILE(CAAFREP)           AC1831878;
 PARAMETER(DB1.Company_Number);
 PARAMETER(PAR.Date_USR);
 PARAMETER(DB1.ISC_From_Day_of_week);
 PARAMETER(PAR.From_Date_USR);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  CASE;

  // IF DB1.Day of Week EQ PAR.Day of Week
  IF DB1.Day_of_Week = PAR.Day_of_Week;

  // PAR.Date Mon USR = DB1.Post to G/L Date
  PAR.Date_Mon_USR = DB1.Post_to_G_L_Date;

  QUIT;

  ENDIF;

 }

 EXECUTE FUNCTION(RTV Next Day per par  RT) TYPE(RTVOBJ) FILE(CAAFREP)           AC1831883;
 PARAMETER(DB1.Company_Number);
 PARAMETER(PAR.Date_USR);
 PARAMETER(DB1.ISC_To_Day_of_Week);
 PARAMETER(PAR.Thru_Date_USR);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  CASE;

  // IF DB1.Day of Week EQ PAR.Day of Week
  IF DB1.Day_of_Week = PAR.Day_of_Week;

  // PAR.Scheduled Ship Date = DB1.Post to G/L Date
  PAR.Scheduled_Ship_Date = DB1.Post_to_G_L_Date;

  QUIT;

  ENDIF;

 }

}


//?R9083 05/09/17 DN-Added ISC Valuation Grouping to Parm.
// Call program Prt Prdctn Dwnl-ISC   UP.
CALL PROGRAM(Prt Prdctn Dwnl-ISC   UP) ('PPOWUPR');
PARAMETER(WRK.Return_Code_Usr);
PARAMETER(LCL.From_Date_USR);
PARAMETER(LCL.Thru_Date_USR);
PARAMETER(PAR.ISC_Week_Ending_Date);
PARAMETER(LCL.ISC_From_Time);
PARAMETER(LCL.ISC_To_Time);
PARAMETER(PAR.ISC_Valuation_Grouping);

//?  e. Inventory Shipments from Item Transaction  "IO" rcds
//?     Sunday ---> Saturday                     * calls ppo5pfr *
//?R9083 05/09/17 DN-Added ISC Valuation Grouping to Parm.
// Call program Prt Inventory Shp-ISC UP.
CALL PROGRAM(Prt Inventory Shp-ISC UP) ('PPO4UPC');
PARAMETER(WRK.Return_Code_Usr);
PARAMETER(PAR.Date_Sun_USR);
PARAMETER(PAR.Date_Sat_USR);
PARAMETER(PAR.ISC_Week_Ending_Date);
PARAMETER(PAR.ISC_Valuation_Grouping);

//?  f. Upd Order Dtl Shipment Initial --> Order Dtl Download- pof8pvr
//?     Sunday ---> Saturday                     * calls ppoypfr *
//?R9083 05/09/17 DN-Added ISC Valuation Grouping to Parm.
// Call program Prt Ord Dtl Shpmt-ISC UP.
CALL PROGRAM(Prt Ord Dtl Shpmt-ISC UP) ('PPOZUPR');
PARAMETER(WRK.Return_Code_Usr);
PARAMETER(PAR.Date_Sun_USR);
PARAMETER(PAR.Date_Sat_USR);
PARAMETER(PAR.ISC_Week_Ending_Date);
PARAMETER(PAR.ISC_Valuation_Grouping);

//?  g. Upd Sun Shpmnt Inv Adj --> orders shipped Sun after week ending dt
//?                                               * calls ppo3pfr *
EXECUTE FUNCTION(RTV Next Sunday        RT) TYPE(RTVOBJ) FILE(CAAFREP)          AC1672814;
PARAMETER(PAR.ISC_Warehouse_Company);
PARAMETER(PAR.Date_Sat_USR);
PARAMETER(WRK.Date_Sun_USR);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 CASE;

 // IF DB1.Day of Week is Sunday
 IF DB1.Day_of_Week = '1';

 // PAR.Scheduled Ship Date = DB1.Post to G/L Date
 PAR.Scheduled_Ship_Date = DB1.Post_to_G_L_Date;

 QUIT;

 ENDIF;

}


//?R9083 05/09/17 DN-Added ISC Valuation Grouping to Parm.
// Call program Prt Ord Dtl SunSh-ISC UP.
CALL PROGRAM(Prt Ord Dtl SunSh-ISC UP) ('PPO2UPC');
PARAMETER(WRK.Return_Code_Usr);
PARAMETER(WRK.Date_Sun_USR);
PARAMETER(PAR.ISC_Week_Ending_Date);
PARAMETER(PAR.ISC_Valuation_Grouping);

//?  h. Inventory Transfers from Item Transaction  "T""TW" rcds
//?     Other Inventory Adj from Item Transaction  "R""RC""RP""S"
//?******
//?******
EXECUTE FUNCTION(Rtv Date/Time         RT) TYPE(RTVOBJ) FILE(PMA5REP)           AC1831861;
PARAMETER(PAR.ISC_Warehouse_Company);
PARAMETER('TW');
PARAMETER(LCL.ISC_From_Time);
PARAMETER(LCL.ISC_To_Time);
PARAMETER(PAR.Date_Sat_USR);
PARAMETER(LCL.From_Date_USR);
PARAMETER(LCL.Thru_Date_USR);
{
 //?USER: Process Data record

 // PAR.ISC From Time = DB1.ISC From Time
 PAR.ISC_From_Time = DB1.ISC_From_Time;

 // PAR.ISC To Time = DB1.ISC To Time
 PAR.ISC_To_Time = DB1.ISC_To_Time;

 EXECUTE FUNCTION(Rtv Prior Day per par RT) TYPE(RTVOBJ) FILE(CAAFREP)           AC1831878;
 PARAMETER(DB1.Company_Number);
 PARAMETER(PAR.Date_USR);
 PARAMETER(DB1.ISC_From_Day_of_week);
 PARAMETER(PAR.From_Date_USR);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  CASE;

  // IF DB1.Day of Week EQ PAR.Day of Week
  IF DB1.Day_of_Week = PAR.Day_of_Week;

  // PAR.Date Mon USR = DB1.Post to G/L Date
  PAR.Date_Mon_USR = DB1.Post_to_G_L_Date;

  QUIT;

  ENDIF;

 }

 EXECUTE FUNCTION(RTV Next Day per par  RT) TYPE(RTVOBJ) FILE(CAAFREP)           AC1831883;
 PARAMETER(DB1.Company_Number);
 PARAMETER(PAR.Date_USR);
 PARAMETER(DB1.ISC_To_Day_of_Week);
 PARAMETER(PAR.Thru_Date_USR);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  CASE;

  // IF DB1.Day of Week EQ PAR.Day of Week
  IF DB1.Day_of_Week = PAR.Day_of_Week;

  // PAR.Scheduled Ship Date = DB1.Post to G/L Date
  PAR.Scheduled_Ship_Date = DB1.Post_to_G_L_Date;

  QUIT;

  ENDIF;

 }

}


// Call program Prt Inv Txf/MscAd ISC UP.
CALL PROGRAM(Prt Inv Txf/MscAd ISC UP) ('PPSHUPC');
PARAMETER(WRK.Return_Code_Usr);
PARAMETER(LCL.From_Date_USR);
PARAMETER(LCL.Thru_Date_USR);
PARAMETER(PAR.ISC_Week_Ending_Date);
PARAMETER(LCL.ISC_From_Time);
PARAMETER(LCL.ISC_To_Time);
PARAMETER(PAR.ISC_Valuation_Grouping);

//?  Z. Delete ISC Records for Scale check items and items that dont
//?  have an Item Balance.               12/19/08 S00598
//?R9083 02/17/17 DN-Added ISC Valuation Grouping to Parm.
// Call program Exc Del inv/scl item  XF.
CALL PROGRAM(Exc Del inv/scl item  XF) ('PMCBXFR');
PARAMETER(PAR.ISC_Week_Ending_Date);
PARAMETER(PAR.ISC_Valuation_Grouping);

