// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for OMB5PVR
// ?Date: 14.08.2025 Time: 03:26:59
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv and Center Hdg IF) TYPE(EXCINTFUN)                     AC1258539;
PARAMETER('OMS');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


EXECUTE FUNCTION(RTV Co/Cust 4 Load Pln RT) TYPE(RTVOBJ) FILE(CAEOREP)          AC1198194;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Carrier_Code);
PARAMETER(PAR.Deliver_after_time);
PARAMETER(PAR.Deliver_before_time);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// WRK.Contact Sequence Number = CON.1
WRK.Contact_Sequence_Number = 1;

EXECUTE FUNCTION(zTV Contact #/Load PlanZZ) TYPE(RTVOBJ) FILE(CAEMCPP)          AC1198196;
PARAMETER(WRK.Contact_Sequence_Number);
PARAMETER(WRK.Contact_Number);
{
 //?USER: Process Data record

 // PAR.Contact Number = DB1.Contact Number
 PAR.Contact_Number = DB1.Contact_Number;

}


EXECUTE FUNCTION(zTV Cantact Nm Rtv All ZZ) TYPE(RTVOBJ) FILE(CAD0REP)          AC1178121;
PARAMETER(WRK.Contact_Number);
PARAMETER(PAR.Primary_Contact_Name);
PARAMETER(PAR.Primary_Contact_Salutatio);
PARAMETER(PAR.Primary_Contact_Bus_Title);
PARAMETER(PAR.Telephone_Number_FF);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv Plant Co/Org      RT) TYPE(RTVOBJ) FILE(PDJYREP)           AC1826265;
PARAMETER(PAR.Company_Number);
PARAMETER(LCL.Plant_Company_Sts);
PARAMETER(LCL.Company_Organization);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?** Get display flag for the User Profile. If it is "NO"
//?** then selected fields will be non-display.
//?** In this case, Order Amount will not be displayed.   2/3/06 LJB
// Call program Rtv Field Security    XF.
CALL PROGRAM(Rtv Field Security    XF) ('PDL1XFR');
PARAMETER(WRK.Display_Flag);

//?USER: Load screen

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Company_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?T11401 08/04/17 DN-Replaced 3 RTVOBJs to use 1 RTVOBJ for OH TRG.
EXECUTE FUNCTION(RTV All Fields         RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC1571206;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(DTL.Order_Type_Sales);
PARAMETER(DTL.AR_Customer_Number);
PARAMETER(DTL.Ship_To_Customer);
PARAMETER(DTL.Ship_To_Name);
PARAMETER(DTL.Ship_To_Address_Line_1);
PARAMETER(DTL.Ship_To_Address_Line_2);
PARAMETER(DTL.Ship_To_Address_Line_3);
PARAMETER(DTL.Ship_To_City);
PARAMETER(DTL.Ship_To_State_Code);
PARAMETER(DTL.Ship_To_Zip_Postal_Code);
PARAMETER(DTL.Bill_to_Customer);
PARAMETER(DTL.Bill_to_Name);
PARAMETER(DTL.Bill_to_Address_Line_1);
PARAMETER(DTL.Bill_to_Address_Line_2);
PARAMETER(DTL.Bill_to_Address_Line_3);
PARAMETER(DTL.Bill_to_City);
PARAMETER(DTL.Bill_to_State_Code);
PARAMETER(DTL.Bill_to_Zip_Postal_Code);
PARAMETER(DTL.Customer_Purchase_Order_#);
PARAMETER(DTL.Order_Date);
PARAMETER(DTL.Requested_Ship_Date);
PARAMETER(DTL.Actual_Shipped_Date);
PARAMETER(DTL.Cancel_Date);
PARAMETER(DTL.Terms_Code);
PARAMETER(DTL.Special_Instructions);
PARAMETER(DTL.Special_Instructions_2);
PARAMETER(DTL.Carrier_Code);
PARAMETER(DTL.Comment_Print_Acknowledge);
PARAMETER(DTL.Comment_Print_Inv_Cr_Memo);
PARAMETER(DTL.Comment_Print_Pick_Slip);
PARAMETER(DTL.Comment_Print_Ship_Doc);
PARAMETER(DTL.Reason_Code);
PARAMETER(DTL.Order_in_Use);
PARAMETER(DTL.Header_Status);
PARAMETER(DTL.Header_Status_Last);
PARAMETER(DTL.Order_Type_Print_Status);
PARAMETER(DTL.Scheduled_Ship_Date);
PARAMETER(DTL.User_Original_Entry);
PARAMETER(DTL.Date_of_Original_Entry);
PARAMETER(DTL.Order_Value_Total);
PARAMETER(DTL.Order_Weight_Total);
PARAMETER(DTL.Credit_Hold);
PARAMETER(DTL.Production_Hold);
PARAMETER(DTL.New_Customer_Hold);
PARAMETER(DTL.Requested_Delivery_Date);
PARAMETER(DTL.Requested_Delivery_Time);
PARAMETER(DTL.Accounts_Receiv_Ent_1);
PARAMETER(DTL.Accounts_Receiv_Ent_2);
PARAMETER(DTL.Load_ID);
PARAMETER(DTL.Absorbed_Freight_Rate_CWT);
PARAMETER(DTL.Rated_Freight);
PARAMETER(DTL.LTL_Flag);
PARAMETER(DTL.Price_Audit);
PARAMETER(DTL.Price_Status);
PARAMETER(DTL.Shipping_Method);
PARAMETER(DTL.Export_Status);
PARAMETER(DTL.Palletize);
PARAMETER(DTL.Shrink_Wrap);
PARAMETER(DTL.Slip_Sheet);
PARAMETER(DTL.Age_Code);
PARAMETER(DTL.Reefer_Temperature);
PARAMETER(DTL.Load_Type);
PARAMETER(DTL.Attach_to_Invoice_Number);
PARAMETER(DTL.Load_Plan_Order);
PARAMETER(DTL.Print_Pick_Slip);
PARAMETER(DTL.Resell_Reference_Number);
PARAMETER(DTL.Special_Comment_1);
PARAMETER(DTL.Special_Comment_2);
PARAMETER(DTL.Affect_Auto_Accruals);
PARAMETER(DTL.Sales_Route_Code);
PARAMETER(DTL.Manager_Level_Code);
PARAMETER(DTL.VP_Level_Code);
PARAMETER(DTL.Attach_to_Order_Number);
PARAMETER(DTL.Reason_for_Price_Audit);
PARAMETER(WRK.Invoice_Number);
PARAMETER(WRK.Invoice_Suffix);
PARAMETER(DTL.Invoice_Date);
PARAMETER(DTL.Event_Code);
PARAMETER(DTL.Trans_Contol_AS400_Plant);
PARAMETER(DTL.Modified_Flag);
PARAMETER(DTL.A_R_order_Value_Total);
PARAMETER(DTL.Billing_Activity_Type);
PARAMETER(DTL.Block_Order_Flag);
PARAMETER(DTL.Order_Certification_Flag);
PARAMETER(NLL.Invoice_Order_Value_Tot);
PARAMETER(NLL.Process_Sts_for_3C);
PARAMETER(NLL.Order_Conf_Fax_Sts);
PARAMETER(NLL.Manifest_Fax_Sts);
PARAMETER(NLL.Invoice_Fax_Sts);
PARAMETER(NLL.Transfer_in_Storage_Ind);
PARAMETER(NLL.Email_Cust_On_Order_Ship);
PARAMETER(NLL.Order_Emailed);
PARAMETER(NLL.Export_Docs_Go_w_Driver);
PARAMETER(NLL.Shipping_Temp_Code_C_F);
PARAMETER(NLL.Broker_Order_Status);
PARAMETER(DTL.Air_Freight_Order);
PARAMETER(NLL.Order_Requires_Review);
PARAMETER(DTL.OH_Load_Plan_Ready);
PARAMETER(NLL.Export_USDA_Approved);
PARAMETER(DTL.HPB_Ship_to_Warehouse);
PARAMETER(NLL.OH_TF_Exempt_Code);
PARAMETER(DTL.OH_Appt_Confirmation_Dt);
PARAMETER(NLL.JPN_Invoice_Issuance_Date);
PARAMETER(NLL.Load_Actual_Shipped_Date);
PARAMETER(NLL.Load_BOL_Complete_Date);
PARAMETER(NLL.Load_Truck_Departure_Date);
PARAMETER(NLL.Maximum_Gross_Weight);
PARAMETER(DTL.Time_of_Original_Entry);
PARAMETER(DTL.OH_Appt_Confirmation_Tm);
PARAMETER(NLL.Load_BOL_Complete_Time);
PARAMETER(NLL.Load_Truck_Departure_Time);
PARAMETER(NLL.Act_Frt_Reference_Amount);
PARAMETER(NLL.Act_Non_Ref_Frt_Amount);
PARAMETER(NLL.OH_Fuel_Surcharge_Amount);
PARAMETER(NLL.OH_Total_Non_Ref_Frt_Amt);
PARAMETER(NLL.OH_Total_Ref_Frt_Amt);
PARAMETER(NLL.Claim_Number);
PARAMETER(DTL.EDI_Status_1);
PARAMETER(DTL.EDI_Status_2);
PARAMETER(DTL.EDI_Status_3);
PARAMETER(NLL.Job_Time);
PARAMETER(NLL.User_Id);
PARAMETER(NLL.Job_Name);
PARAMETER(NLL.Job_Date);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// LCL.HPB Ship to Warehouse = DTL.HPB Ship to Warehouse
LCL.HPB_Ship_to_Warehouse = DTL.HPB_Ship_to_Warehouse;

EXECUTE FUNCTION(Rtv Deadline Dt/Tm    RT) TYPE(RTVOBJ) FILE(OPBGWKP)           AC1920316;
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Order_Number);
PARAMETER(DTL.Deadline_Depart_Date_LH);
PARAMETER(DTL.Deadline_Depart_Time_LH);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 CASE;

 // IF DB1.Detail Line Status is Not cancelled
 IF DB1.Detail_Line_Status = 'L'/'A'/'C'/'R'/'E'/'H'/'I';

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

 ENDIF;

}


// DTL.Status Description = Condition name of DTL.Header Status
DTL.Status_Description = RTVCND(DTL.Header_Status);

EXECUTE FUNCTION(Rtv One Invoice /PO   RT) TYPE(RTVOBJ) FILE(PDNEREP)           AC1801817;
PARAMETER(DTL.Ship_To_Customer);
PARAMETER(DTL.One_Invoice_Per_PO);
{
 //?USER: Processing if Data record not found

 // PAR.One Invoice Per PO = CND.No
 PAR.One_Invoice_Per_PO = 'N';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV OHE Delv PO,HPB fldRT) TYPE(RTVOBJ) FILE(PMAMREP)          AC2003965;
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Order_Number);
PARAMETER(LCL.OHE_HPB_RIN_Equiv_Value);
PARAMETER(LCL.OHE_HPB_RIN_Price);
PARAMETER(LCL.OHE_Spot_Buy);
PARAMETER(DTL.OHE_Override_Type_Code);
PARAMETER(DTL.Delivery_P_O_Number);
PARAMETER(LCL.OHE_Intended_for_ExportCC);
PARAMETER(DTL.OHE_Appt_Confirmation_#);
PARAMETER(DTL.OHE_Appt_Confirmation_Nm);
PARAMETER(LCL.Letter_of_Credit_Number);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


// DTL.OHE HPB RIN Equiv Value = LCL.OHE HPB RIN Equiv Value
DTL.OHE_HPB_RIN_Equiv_Value = LCL.OHE_HPB_RIN_Equiv_Value;

// DTL.OHE HPB RIN Price = LCL.OHE HPB RIN Price
DTL.OHE_HPB_RIN_Price = LCL.OHE_HPB_RIN_Price;

//?* Convert numeric date from *YMD to *MDY for display  E009492
// Call program RTV Orig Appt Dte/Tme  XF.
CALL PROGRAM(RTV Orig Appt Dte/Tme  XF) ('PUA4XFR');
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Order_Number);
PARAMETER(LCL.Original_Appointment_Date);
PARAMETER(DTL.Original_Appointment_Time);

//?* Convert Orig Appt Date from *YMD to *MDY            E009492
DO;

CASE;

// IF LCL.Original Appointment Date is Not equal to zero
IF LCL.Original_Appointment_Date <> *ZERO;

//?* Retrieve original appointment date/time from OHE. These will be
//?* blank until appt is made, then they will not change.  E009492
// LCL.Date (Char-6) USR = CVTVAR(LCL.Original Appointment Date)
LCL.Date_Char_6_USR = CVTVAR(LCL.Original_Appointment_Date);

// Call program CLC *YMD to *MDY       CL.
CALL PROGRAM(CLC *YMD to *MDY       CL) ('PUA7UPC');
PARAMETER(LCL.Date_Char_6_USR);
PARAMETER(LCL.USR_Date_Alpha);
PARAMETER(*YMD);
PARAMETER(*MDY);
PARAMETER(*NONE);

// DTL.Original Appointment Date = CVTVAR(LCL.USR Date Alpha)
DTL.Original_Appointment_Date = CVTVAR(LCL.USR_Date_Alpha);

ENDIF;

ENDDO;

//?Block order
CASE;

// IF DTL.Block Order Flag is Block Order
IF DTL.Block_Order_Flag = 'B';

// DTL.USR 15 Text           USR = CON.* BLOCK ORDER *
DTL.USR_15_Text_USR = * BLOCK ORDER *;

//?Block order
// IF *OTHERWISE
IF *OTHERWISE;

// DTL.USR 15 Text           USR = CON.*BLANK
DTL.USR_15_Text_USR = *BLANK;

ENDIF;

//?Organization
CASE;

// IF LCL.Company Organization is Seaboard
IF LCL.Company_Organization = 'S';

// OR LCL.Company Organization is High Plains Biodiesel
OR LCL.Company_Organization = 'H';

// LCL.USR Display 1 = CND.Yes
LCL.USR_Display_1 = 'Y';

//?Organization
// IF *OTHERWISE
IF *OTHERWISE;

// LCL.USR Display 1 = CND.No
LCL.USR_Display_1 = 'N';

ENDIF;

//?Text for Organization
CASE;

// IF LCL.Company Organization is High Plains Biodiesel
IF LCL.Company_Organization = 'H';

// DTL.Text-18               USR = CON.HPB Override Typ :
DTL.Text_18_USR = 'HPB Override Typ :';

//?Text for Organization
// IF *OTHERWISE
IF *OTHERWISE;

// DTL.Text-18               USR = CON.Sales Channel. . :
DTL.Text_18_USR = 'Sales Channel. . :';

ENDIF;

//?W77844 06/12/21 DN-Retrieve Condition Value Text for OHE Spot Buy.
//?Spot Buy
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

// DTL.Spot Buy Text USR = Condition name of LCL.OHE Spot Buy
DTL.Spot_Buy_Text_USR = RTVCND(LCL.OHE_Spot_Buy);

ENDIF;

//?USER: Process command keys

//?F7=Display Orders for PO
CASE;

// IF DTL.*CMD key is CF07
IF DTL.*CMD_key = '07';

// Call program Dsp PO Orders         DF.
CALL PROGRAM(Dsp PO Orders         DF) ('PMCGDFR');
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Ship_To_Customer);
PARAMETER(DTL.Customer_Purchase_Order_#);
PARAMETER(DTL.Ship_To_Name);

ENDIF;

//?F08=Display Detail
CASE;

// IF DTL.*CMD key is CF08
IF DTL.*CMD_key = '08';

// LCL.Application Code = CND.Order Management System
LCL.Application_Code = 'OMS';

// Call program DSP Ord Inquiry Detail DF.
CALL PROGRAM(DSP Ord Inquiry Detail DF) ('PDPZDFR');
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Order_Number);
PARAMETER(LCL.Order_Sequence_Number);
PARAMETER(LCL.Order_Secondary_Line_Seq);
PARAMETER(LCL.Application_Code);

ENDIF;

//?F09=Display load order chg log
CASE;

// IF DTL.*CMD key is CF09
IF DTL.*CMD_key = '09';

// Call program DSP Chg Log Entries-OrdDF.
CALL PROGRAM(DSP Chg Log Entries-OrdDF) ('PMEIDFR');
PARAMETER(DTL.Order_Number);

ENDIF;

