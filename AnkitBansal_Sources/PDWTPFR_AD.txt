// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDWTPFR
// ?Date: 14.08.2025 Time: 12:04:42
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('OMS');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


//?USER: Record selection processing

//?Select by WAREHOUSE
CASE;

// IF PAR.Warehouse Code is Warehouse Code not Blank
IF PAR.Warehouse_Code <> *BLANK;

// AND DB1.Warehouse Code NE PAR.Warehouse Code
AND DB1.Warehouse_Code <> PAR.Warehouse_Code;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?Select by Destination
CASE;

// IF PAR.Destination City is Entered
IF PAR.Destination_City <> *BLANK;

// AND DB1.Destination City NE PAR.Destination City
AND DB1.Destination_City <> PAR.Destination_City;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?Select by State
CASE;

// IF PAR.State Code is State code not Blanks
IF PAR.State_Code <> *BLANK;

// AND DB1.State Code NE PAR.State Code
AND DB1.State_Code <> PAR.State_Code;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?USER: On print of first page format

// 1PG.Carrier Code = PAR.Carrier Code
X1PG_Carrier_Code = PAR.Carrier_Code;

EXECUTE FUNCTION(RTV Carrier Name       RT) TYPE(RTVOBJ) FILE(OMFFREP)          AC1382687;
PARAMETER(X1PG_Carrier_Code);
PARAMETER(X1PG_Name);
PARAMETER(WRK.Record_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

}


// 1PG.Warehouse Code = PAR.Warehouse Code
X1PG_Warehouse_Code = PAR.Warehouse_Code;

EXECUTE FUNCTION(Warehouse Desc DRV) TYPE(DRVFLD)                               AC1532477;
PARAMETER(X1PG_Warehouse_Desc_DRV);
PARAMETER(X1PG_Warehouse_Code);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Whse Descrip       RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1257603;
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.Warehouse_Desc_DRV);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  // PAR.Warehouse Description = DB1.Warehouse Description
  PAR.Warehouse_Description = DB1.Warehouse_Description;

 }

}


// 1PG.Destination City = PAR.Destination City
X1PG_Destination_City = PAR.Destination_City;

// 1PG.State Code = PAR.State Code
X1PG_State_Code = PAR.State_Code;

EXECUTE FUNCTION(RTV State Description  RT) TYPE(RTVOBJ) FILE(CAACREP)          AC1227485;
PARAMETER(X1PG_State_Code);
PARAMETER(X1PG_Description);
PARAMETER(WRK.Record_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?USER: Print required level headings

CASE;

IF NEW Carrier_Code;
// SUPPRESSED PRINT Carrier Code header format

ENDIF;

CASE;

IF NEW Warehouse_Code;
// SUPPRESSED PRINT Warehouse Code header format

ENDIF;

CASE;

IF NEW Destination_City;
// SUPPRESSED PRINT Destination City header format

ENDIF;

//?USER: On print of detail format

EXECUTE FUNCTION(RTV Active Description RT) TYPE(RTVOBJ) FILE(CAACREP)          AC1287387;
PARAMETER(CUR.State_Code);
PARAMETER(CUR.State_Description);
PARAMETER(WRK.Record_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?USER: Print required level totals

CASE;

IF NEW Destination_City;
// SUPPRESSED PRINT Destination City totals format

ENDIF;

CASE;

IF NEW Warehouse_Code;
// SUPPRESSED PRINT Warehouse Code totals format

ENDIF;

CASE;

IF NEW Carrier_Code;
// SUPPRESSED PRINT Carrier Code totals format

ENDIF;

