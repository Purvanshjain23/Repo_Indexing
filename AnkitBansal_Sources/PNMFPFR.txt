     H/TITLE PRT Watch by Par Summ  PF Print file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Print report of file contents
      *
     H* Generated by AllFusion 2E release 8.1SP2 (1250)
     H* Function type : Print file
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISLBUSE
     H* Date          : 10/22/09  Time  : 10:10:46
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
     FPNFMCPL6IF  E           K        DISK
      * RSQ : A/R Customer Totals WF    Parent name/Bill to name
      *
     FCAABREL3IF  E           K        DISK
      * RTV : Company Name and Address  Retrieval index       NV
      *
     FPDNEREL1IF  E           K        DISK
      * RTV : Customer EXT              Retrieval index
      *
     FPDLDCPL4IF  E           K        DISK
      * RSQ : A/R Balance File      AR Cust/BalYr/BalMo(D)
      *
     FPDLDCPL2IF  E           K        DISK
      * RSQ : A/R Balance File          Co/AR Cust/BalYr/BalMo(D
      *
     FPDLDCPL3IF  E           K        DISK
      * RSQ : A/R Balance File          AR Cust/BalYr/BalMO/Co
      *
     FCAEOREL1IF  E           K        DISK
      * RTV : Company Customer          Retrieval index
      *
     FCABBREL1IF  E           K        DISK
      * RTV : Customer                  Retrieval index       NV
      *
     FPNMFPFR$O   E             97     PRINTER
     F                                              KINFDS INFDS$
      * PRT: PRT Watch by Par Summ  PF Print file
      *
     E                    UCT        40  1               CENTER TABLE
     E                    #L7         7  1
     E                    #L3         3  1
     I@LDCPOU
      * A/R Balance File          Co/AR Cust/BalYr/BalMo(D
      * Renamed input format fields
     I              LDAIC3                          WAAIC3
     I              LDANC7                          WAANC7
     I              LDA1NB                          WAA1NB
     I              LDY4NB                          WAY4NB
     I              LDALVA                          WAALVA
     I              LDAIDT                          WAAIDT
     I              LDY5VA                          WAY5VA
     I              LDZAVA                          WAZAVA
     I              LDY7VA                          WAY7VA
     I              LDY8VA                          WAY8VA
     I              LDY9VA                          WAY9VA
     I              LDRTNX                          WARTNX
     I              LDRUNX                          WARUNX
     I              LDRVNX                          WARVNX
     I              LDRWNX                          WARWNX
     I              LDRXNX                          WARXNX
     I              LDB4DY                          WAB4DY
     I              LDBSDY                          WABSDY
     I              LDK2DT                          WAK2DT
     I              LDUNUS                          WAUNUS
     I              LDUNU2                          WAUNU2
     I              LDUVST                          WAUVST
     I              LDUWST                          WAUWST
     I              LDUXST                          WAUXST
     I              LDVSST                          WAVSST
     I              LDAATM                          WAAATM
     I              LDAYNA                          WAAYNA
     I              LDA0NA                          WAA0NA
     I              LDAXDT                          WAAXDT
      *
     I@LDCPU0
      * A/R Balance File          AR Cust/BalYr/BalMO/Co
      * Renamed input format fields
     I              LDAIC3                          WBAIC3
     I              LDANC7                          WBANC7
     I              LDA1NB                          WBA1NB
     I              LDY4NB                          WBY4NB
     I              LDALVA                          WBALVA
     I              LDAIDT                          WBAIDT
     I              LDY5VA                          WBY5VA
     I              LDZAVA                          WBZAVA
     I              LDY7VA                          WBY7VA
     I              LDY8VA                          WBY8VA
     I              LDY9VA                          WBY9VA
     I              LDRTNX                          WBRTNX
     I              LDRUNX                          WBRUNX
     I              LDRVNX                          WBRVNX
     I              LDRWNX                          WBRWNX
     I              LDRXNX                          WBRXNX
     I              LDB4DY                          WBB4DY
     I              LDBSDY                          WBBSDY
     I              LDK2DT                          WBK2DT
     I              LDUNUS                          WBUNUS
     I              LDUNU2                          WBUNU2
     I              LDUVST                          WBUVST
     I              LDUWST                          WBUWST
     I              LDUXST                          WBUXST
     I              LDVSST                          WBVSST
     I              LDAATM                          WBAATM
     I              LDAYNA                          WBAYNA
     I              LDA0NA                          WBA0NA
     I              LDAXDT                          WBAXDT
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
     IINFDS$    E DSY2I$DSP
      * Printer file information data structure
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: A/R Customer Totals WF
      * I :  Company Number
     I                                    P   1   20P1AIC3
      * I :  Parent Customer
     I                                    P   3   60P1BTC7
      * I :  Customer Watch Flag
     I                                        7   8 P1P4SX
     IP2PARM      DS
      * I :  From Production Date
     I                                    P   1   40P2OVDT
     IP3PARM      DS
      * I :  Age Code
     I                                        1   1 P3RPCD
     IP4PARM      DS
      * I :  Include Charge Backs
     I                                        1   1 P4BUSX
     IP5PARM      DS
      * FLD: *Arrays
      * N :  USR Age Current A
     I                                    P   1   62P5EUVA
      * N :  USR Age Current B
     I                                    P   7  122P5E5VA
      * N :  USR Age Value 1 A
     I                                    P  13  182P5EVVA
      * N :  USR Age Value 1 B
     I                                    P  19  242P5E0VA
      * N :  USR Age Value 2 A
     I                                    P  25  302P5EWVA
      * N :  USR Age Value 2 B
     I                                    P  31  362P5E1VA
      * N :  USR Age Value 3 A
     I                                    P  37  422P5EXVA
      * N :  USR Age Value 3 B
     I                                    P  43  482P5E2VA
      * N :  USR Age Value 4 A
     I                                    P  49  542P5EYVA
      * N :  USR Age Value 4 B
     I                                    P  55  602P5E3VA
      * N :  USR Age Value 5 A
     I                                    P  61  662P5EZVA
      * N :  USR Age Value 5 B
     I                                    P  67  722P5E4VA
      * N :  USR Extended Cost Amt. 1
     I                                    P  73  782P5I5VA
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1AIC3    PARM           WP0001  30       Company Number
     C           P1BTC7    PARM           WP0002  70       Parent Customer
     C           P1P4SX    PARM           WP0003  2        Customer Watch
     C           P2OVDT    PARM           WP0004  70       From Production
     C           P3RPCD    PARM           WP0005  1        Age Code
     C           P4BUSX    PARM           WP0006  1        Include Charge
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * PRT Watch by Par Summ  PF: Mainline
     C                     EXSR A0MAIN
      * Print headers then End of report format
     C                     EXSR Q0PRNT
     C                     WRITE$GENDRPT
      * Exit program
     C                     EXSR ZXEXPG
      * ------------------------------------------------------
      /EJECT
     CSR         A0MAIN    BEGSR
      *================================================================
      * PRT Watch by Par Summ  PF: Mainline
      *================================================================
      * Establish starting position
     C           *LOVAL    SETLL@FMCPCJ                    *
      * Read first record with user selection
     C                     EXSR A3READ
     C           W0EOFA    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0AL1P  1        First page
     C                     MOVEL'Y'       W0AL00  1        Parent Customer
     C                     MOVEL'Y'       W0AL01  1        A/R Customer Na
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      * Print report body
     C           W0EOFA    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR A1PHDR
      * Print report detail line
     C                     EXSR A2PDTL
      * Read next record with user selection
     C                     EXSR A3READ
      * Print totals
     C                     EXSR A4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         A0EXIT    ENDSR
      /EJECT
     CSR         A1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0AL1P    IFEQ 'Y'
      * Load key header format
     C                     Z-ADD*ZERO     $CBTC7           Parent Customer
     C                     MOVEL*BLANK    $CETC7           Parent Customer
     C                     Z-ADD*ZERO     $CANC7           A/R Customer Nu
     C                     MOVEL*BLANK    $CAETX           Bill to Name
     C                     Z-ADD*ZERO     $COVDT           From Production
     C                     MOVEL*BLANK    $CP4SX           Customer Watch
     C                     MOVEL*BLANK    $CGUTX           Condition Name
     C                     MOVEL*BLANK    $CRPCD           Age Code
     C                     MOVEL*BLANK    $CBUSX           Include Charge
     C                     Z-ADD*ZERO     $CAIC3           Company Number
     C                     MOVEL*BLANK    $CSQTX           Company Name DR
      * Load related totals format
     C                     Z-ADD*ZERO     $FLPVL           Total Due Amt
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP1P  1
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Load related totals format
     C                     Z-ADDFMBTC7    $EBTC7           Parent Customer
     C                     MOVELFMSYTX    $ESYTX           Parent Customer
     C                     MOVELFMP4SX    $EP4SX           Customer Watch
     C                     Z-ADD*ZERO     $ELPVL           Total Due Amt
     C                     Z-ADDFMAIC3    $EAIC3           Company Number
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP00  1
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP01  1
     C                     END
      *
      *================================================================
     CSR         A1EXIT    ENDSR
      /EJECT
     CSR         A2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     Z-ADDFMAIC3    $DAIC3           Company Number
     C                     Z-ADDFMANC7    $DANC7           A/R Customer Nu
     C                     MOVELFMAQTX    $DAQTX           A/R Customer Na
     C                     MOVELFMP4SX    $DP4SX           Customer Watch
     C                     Z-ADD*ZERO     $DLUVL           Credit Limit 9,
     C                     Z-ADD*ZERO     $DS2NB           Parent Credit L
     C                     Z-ADD*ZERO     $DLTVL           High A/R Bal 9,
     C                     Z-ADD*ZERO     $DAIDT           Date of Highest
     C                     Z-ADDFMLHVL    $DLHVL           YTD Sales Amoun
     C                     MOVEL*BLANK    $DR4CD           Sales Route Cod
     C                     MOVEL*BLANK    $DAJNA           City
     C                     MOVEL*BLANK    $DBGCD           State Code
     C                     Z-ADDFMGUPC    $DGUPC           YTD Average Day
     C                     Z-ADD*ZERO     $DR4NX           Month 1 USR
     C                     Z-ADD*ZERO     $DRYNX           Days to Pay 1 U
     C                     Z-ADD*ZERO     $DR5NX           Month 2 USR
     C                     Z-ADD*ZERO     $DRZNX           Days to Pay 2 U
     C                     Z-ADD*ZERO     $DR6NX           Month 3 USR
     C                     Z-ADD*ZERO     $DR0NX           Days to Pay 3 U
     C                     Z-ADD*ZERO     $DR7NX           Month 4 USR
     C                     Z-ADD*ZERO     $DR1NX           Days to Pay 4 U
     C                     Z-ADD*ZERO     $DR8NX           Month 5 USR
     C                     Z-ADD*ZERO     $DR2NX           Days to Pay 5 U
     C                     Z-ADD*ZERO     $DR9NX           Month 6 USR
     C                     Z-ADD*ZERO     $DR3NX           Days to Pay 6 U
     C                     Z-ADD*ZERO     $DALVA           Amount of Highe
     C                     Z-ADD*ZERO     $DIMNB           USR Customer Nu
     C                     Z-ADDFMBTC7    $DBTC7           Parent Customer
     C                     MOVELFMSYTX    $DSYTX           Parent Customer
     C                     MOVEL*BLANK    $DA3TX           USR Customer Na
     C                     Z-ADDFMASVA    $DASVA           Credit Limit
     C                     Z-ADDFMLGVL    $DLGVL           Total Due Amoun
     C                     Z-ADDFMK9VL    $DK9VL           Current Amount
     C                     Z-ADDFMLAVL    $DLAVL           Aging Amount 1
     C                     Z-ADDFMLBVL    $DLBVL           Aging Amount 2
     C                     Z-ADDFMLCVL    $DLCVL           Aging Amount 3
     C                     Z-ADDFMLDVL    $DLDVL           Aging Amount 4
     C                     Z-ADDFMLEVL    $DLEVL           Aging Amount 5
     C                     Z-ADDFMLFVL    $DLFVL           Credit/On Accou
     C                     Z-ADD*ZERO     $DL0VL           Credit Applied
     C                     Z-ADD*ZERO     $DLVVL           Credit Applied
     C                     Z-ADD*ZERO     $DLWVL           Credit Applied
     C                     Z-ADD*ZERO     $DLXVL           Credit Applied
     C                     Z-ADD*ZERO     $DLYVL           Credit Applied
     C                     Z-ADD*ZERO     $DLZVL           Credit Applied
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0APDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      * USER: Process after print of detail format
     C                     ADD  $DLGVL    $ELPVL           Total Due Amt
      * ** Accumulate the Report Total Amount Due
     C                     ADD  $DLGVL    P5I5VA           USR Extended Co
      * ** Accumulate the Credit Applied and Aging Amounts
     C                     ADD  $DL0VL    P5EUVA           USR Age Current
     C                     ADD  $DLVVL    P5EVVA           USR Age Value 1
     C                     ADD  $DLWVL    P5EWVA           USR Age Value 2
     C                     ADD  $DLXVL    P5EXVA           USR Age Value 3
     C                     ADD  $DLYVL    P5EYVA           USR Age Value 4
     C                     ADD  $DLZVL    P5EZVA           USR Age Value 5
      *
      *================================================================
     CSR         A2EXIT    ENDSR
      /EJECT
     CSR         A3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN FMSYTX    WZA001           Parent Customer
     C                     MOVELFMSYTX    WZA001
     C           *LIKE     DEFN FMAQTX    WZA002           A/R Customer Na
     C                     MOVELFMAQTX    WZA002
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFA    OREQ '1'
     C                     READ @FMCPCJ                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFA  1
      * Quit if no record read
     C           W0EOFA    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
      * USER: Record selection processing
      * ** If Select by company
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Company Number is not equal to zero
      *   |- c2    : DB1.Company Number NE PAR.Company Number
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P1AIC3    IFNE *ZERO                      *IF
     C           FMAIC3    IFNE P1AIC3                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * ** If Select by Parent customer number
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Parent Customer is not equal to zero
      *   |- c2    : DB1.Parent Customer NE PAR.Parent Customer
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P1BTC7    IFNE *ZERO                      *IF
     C           FMBTC7    IFNE P1BTC7                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * ** If Select by customer watch flag
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Customer Watch Flag NE WRK.Blank for 3
      *   |- c2    : DB1.Customer Watch Flag NE PAR.Customer Watch Flag
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P1P4SX    IFNE WUUAT1                     *IF
     C           FMP4SX    IFNE P1P4SX                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0AL00  1        Parent Customer
     C                     MOVEL*BLANK    W0AL01  1        A/R Customer Na
     C           W0EOFA    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0AL00  1        Parent Customer
     C                     MOVEL'Y'       W0AL01  1        A/R Customer Na
     C                     ELSE
      * Next record - Detect level breaks
     C           FMSYTX    IFNE WZA001                     Parent Customer
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL00
     C                     END
     C           FMAQTX    IFNE WZA002                     A/R Customer Na
     C           W0AL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL01
     C                     END
     C                     END
      *================================================================
     CSR         A3EXIT    ENDSR
      /EJECT
     CSR         A4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0AL01    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP01
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 2
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Convert fields to external form
      * Convert Parent Customer to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $EBTC7    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$EBTC7    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VEBTC7           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VEBTC7           CD7 Ext Numeric
     C                     END                             *FI
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           $EAIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL$EAIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    VEAIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VEAIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Print format
     C                     WRITE$EKEYTTL
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP00
      * USER: Process after print of Parent Customer Name format
     C                     ADD  $ELPVL    $FLPVL           Total Due Amt
     C                     END
      *
     C           W0EOFA    IFEQ '1'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 1
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Print format
     C                     WRITE$FFINTTL
     C                     END
      *
      *================================================================
     CSR         A4EXIT    ENDSR
      /EJECT
     CSR         Q0PRNT    BEGSR
      *================================================================
      * Print report formats
      *================================================================
      * Select formats to print
     C                     EXSR Q1FSEL
      * Calculate length of formats selected for printing
     C                     EXSR Q2PLEN
      * Add column heading length to print length
     C                     ADD  W0COLN    W0FSUM
     C           W0NEWP    IFNE 'Y'
      * Signal overflow if requested headings would cause
      * detail format to start past the overflow line
     C           W0FSUM    IFGT W0OFL
     C                     MOVE 'Y'       W0NEWP
     C                     ELSE
      * Signal overflow if requested headings would cause
      * Detail format to be printed past end of page
     C                     ADD  W0DTLN    W0FSUM
     C           W0FSUM    IFGT W0PGL
     C                     MOVE 'Y'       W0NEWP
     C                     END
     C                     END
     C                     END
      * Print Standard report header of PRT Watch by Par Summ  PF
      * If it is ready to print, then do so,
     C           W0NEWP    IFEQ 'Y'                        IF
     C                     EXSR Q3PTNP
     C                     END                             FI
      *
      * Print First Page Format of PRT Watch by Par Summ  PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP1P    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of first page format
     C                     MOVEL*BLANK    $CSQTX           Company Name DR
      * Company Name DRV
      * RTV Company Name       RT - Company Name and Address  * 
     C                     EXSR SCRVGN
      * ** Parent or ALL
      * CASE: PAR.Parent Customer is equal to zero
     C           P1BTC7    IFEQ *ZERO                      *IF
     C                     MOVEL*BLANK    $CETC7           Parent Customer
     C                     MOVEL'ALL'     $CETC7           Parent Customer
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    $CETC7           Parent Customer
     C                     END                             *FI
      * ** Watch flag = All
      * CASE: PAR.Customer Watch Flag is Blanks
     C           P1P4SX    IFEQ *BLANK                     *IF
     C                     MOVEL*BLANK    $CGUTX           Condition Name
     C                     MOVEL'ALL'     $CGUTX           Condition Name
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVELP1P4SX    $CP4SX           Customer Watch
      * 1PG.Condition Name USR = Condition name of PAR.Customer Watch Fla
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1942281   Y2LSNO  70       List number
     C                     PARM P1P4SX    W0INVL 25        Customer Watch
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $CGUTX    PARM           W0CNNM 25        Condition Name
      *
     C                     END                             *FI
      * ** Company = All
      * CASE: PAR.Company Number is Equal to zero
     C           P1AIC3    IFEQ *ZERO                      *IF
     C                     MOVEL*BLANK    $CSQTX           Company Name DR
     C                     MOVEL'*ALL'    $CSQTX           Company Name DR
     C                     END                             *FI
     C                     Z-ADDP2OVDT    $COVDT           From Production
     C                     MOVELP3RPCD    $CRPCD           Age Code
     C                     MOVELP4BUSX    $CBUSX           Include Charge
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert Parent Customer to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $CBTC7    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$CBTC7    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VCBTC7           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VCBTC7           CD7 Ext Numeric
     C                     END                             *FI
      * Convert A/R Customer Number to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $CANC7    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$CANC7    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VCANC7           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VCANC7           CD7 Ext Numeric
     C                     END                             *FI
      * Convert From Production Date to display format
      * Convert date
     C           1000000   ADD  $COVDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCOVDT
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           $CAIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL$CAIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    VCAIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VCAIC3           CD3 Ext Numeric
     C                     END                             *FI
     C                     MOVEL'0'       *IN79
     C           WUTAST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
      * Print format
     C                     WRITE$C1STPAG
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0AL1P
     C                     END                             FI
      * Print Parent Customer Name of PRT Watch by Par Summ  PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP00    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP00
     C                     END                             FI
      * Print A/R Customer Name of PRT Watch by Par Summ  PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP01    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP01
     C                     END                             FI
      * Print Detail line. of PRT Watch by Par Summ  PF
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0ACDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0APDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0APDT    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of detail format
     C                     MOVEL'N'       W0PFM            *Print format
     C                     MOVEL'N'       WUTAST           First Time Flag
      * CUR = DB1 By name
     C                     Z-ADDFMAIC3    $DAIC3           Company Number
     C                     Z-ADDFMANC7    $DANC7           A/R Customer Nu
     C                     MOVELFMAQTX    $DAQTX           A/R Customer Na
     C                     MOVELFMP4SX    $DP4SX           Customer Watch
     C                     Z-ADDFMLHVL    $DLHVL           YTD Sales Amoun
     C                     Z-ADDFMGUPC    $DGUPC           YTD Average Day
     C                     Z-ADDFMBTC7    $DBTC7           Parent Customer
     C                     MOVELFMSYTX    $DSYTX           Parent Customer
     C                     Z-ADDFMASVA    $DASVA           Credit Limit
     C                     Z-ADDFMLGVL    $DLGVL           Total Due Amoun
     C                     Z-ADDFMK9VL    $DK9VL           Current Amount
     C                     Z-ADDFMLAVL    $DLAVL           Aging Amount 1
     C                     Z-ADDFMLBVL    $DLBVL           Aging Amount 2
     C                     Z-ADDFMLCVL    $DLCVL           Aging Amount 3
     C                     Z-ADDFMLDVL    $DLDVL           Aging Amount 4
     C                     Z-ADDFMLEVL    $DLEVL           Aging Amount 5
     C                     Z-ADDFMLFVL    $DLFVL           Credit/On Accou
      * Rtv Cust Watch Flag   RT - Customer EXT  * 
     C                     EXSR SDRVGN
      * ** Populate the month and Avg Days to Pay fields
     C                     Z-ADDFMASVA    $DLUVL           Credit Limit 9,
     C                     Z-ADD$DAIDT    $DAIDT           Date of Highest
      * LCL.A/R Balance Year = PAR.From Production Date *YEAR
     C           P2OVDT    ADD  1000000   XDINDT
     C           1800      ADD  XDINYY    YL0001
      * LCL.A/R Balance Month = PAR.From Production Date *MONTH
     C           P2OVDT    ADD  1000000   XDINDT
     C                     Z-ADDXDINMM    YL0002
      * CASE: PAR.Company Number is Equal to zero
     C           P1AIC3    IFEQ *ZERO                      *IF
      * Rtv Past 6 Avg Dys ALL RT - A/R Balance File  * 
     C                     EXSR SERVGN
     C                     ELSE
      * CASE: *OTHERWISE
      * Rtv Past 6 Avg Dys Pay RT - A/R Balance File  * 
     C                     EXSR SFRVGN
     C                     END                             *FI
      * RTV Credit Applied    UP - STR TF Functions  * 
     C                     CALL 'AR800'                90  RTV Credit Appl
     C                     PARM $DAIC3    WQ0001  30       Company Number
     C                     PARM FMANC7    WQ0002  70       A/R Customer Nu
     C                     PARM 2         WQ0003  10       Number 1.0 USR
     C           YL0005    PARM *ZERO     WQ0004 112       USR Age Value 1
     C           YL0006    PARM *ZERO     WQ0005 112       USR Age Value 2
     C           YL0007    PARM *ZERO     WQ0006 112       USR Age Value 3
     C           YL0008    PARM *ZERO     WQ0007 112       USR Age Value 4
     C           YL0009    PARM *ZERO     WQ0008 112       USR Age Value 5
     C           YL0010    PARM *ZERO     WQ0009 112       USR Age Value 1
     C           YL0011    PARM *ZERO     WQ0010 112       USR Age Value 2
     C           YL0012    PARM *ZERO     WQ0011 112       USR Age Value 3
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'AR800'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     END
      * RTV HighBal/Date-Parnt RT - A/R Balance File  * 
     C                     EXSR SGRVGN
     C                     Z-ADDYL0013    $DLTVL           High A/R Bal 9,
      * ** Print the Credit Applied amounts from program AR800
     C                     EXSR UDSUBR                     ** Print the Cr
      * RTV Sales Route        RT - Company Customer  * 
     C                     EXSR SHRVGN
      * RTV Cust Addr, A/R Cst RT - Customer  * 
     C                     EXSR SIRVGN
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert A/R Customer Number to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $DANC7    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$DANC7    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VDANC7           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VDANC7           CD7 Ext Numeric
     C                     END                             *FI
      * Convert Date of Highest A/R Bal. to display format
      * Convert date
     C           1000000   ADD  $DAIDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VDAIDT
      * Convert Parent Customer to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $DBTC7    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$DBTC7    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VDBTC7           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VDBTC7           CD7 Ext Numeric
     C                     END                             *FI
      * Print column headings if required
     C           W0ACDT    IFEQ 'Y'
     C                     WRITE$DCOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0ACDT
     C                     END                             FI
      * Print format
     C                     WRITE$DDTLRCD
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0APDT
     C                     END                             FI
      * Clear new page flag
     C                     MOVE *BLANK    W0NEWP
      *================================================================
     CSR         Q0EXIT    ENDSR
      /EJECT
     CSR         Q1FSEL    BEGSR
      *================================================================
      * Format select
      *================================================================
      *================================================================
     CSR         Q1EXIT    ENDSR
      /EJECT
     CSR         Q2PLEN    BEGSR
      *================================================================
      * Evaluate print length
      *================================================================
     C           *LIKE     DEFN @$CLN     W0FSUM
     C           *LIKE     DEFN @$CLN     W0DTLN
     C           *LIKE     DEFN @$CLN     W0COLN
     C                     Z-ADD@$CLN     W0FSUM
     C                     Z-ADD*ZERO     W0DTLN
     C                     Z-ADD*ZERO     W0COLN
      * * First Page Format of PRT Watch by Par Summ  PF
     C           W0AP1P    IFEQ 'Y'
     C                     ADD  10        W0FSUM
     C                     END                             FI
      *
      * * Parent Customer Name of PRT Watch by Par Summ  PF
     C           W0AP00    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * A/R Customer Name of PRT Watch by Par Summ  PF
     C           W0AP01    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of PRT Watch by Par Summ  PF
     C           W0APDT    IFEQ 'Y'
     C                     Z-ADD7         W0DTLN
     C           W0ACDT    IFEQ 'Y'
     C                     Z-ADD0         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      *================================================================
     CSR         Q2EXIT    ENDSR
      /EJECT
     CSR         Q3PTNP    BEGSR
      *================================================================
      * Format select
      *================================================================
     C                     MOVEL'0'       *IN79
     C           WUTAST    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
     C                     WRITE$APAGHDR
      * Clear page overflow indicator
     C                     SETOF                     97    *
      *================================================================
     CSR         Q3EXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSA01           Application Cod
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WQSA01           Application Cod
      * Setup key
     C                     MOVE *BLANK    WQSA01           Application Cod
     C                     MOVEL'A/R'     WQSA01           Application Cod
      * Establish starting position
     C           KRSSA     SETLL@DNRESF                    *
     C           KRSSA     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           DNRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR SBRVGN
     C                     END                             *FI
     C           KRSSA     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSB01           Application Cod
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           Application Cod
      * Setup key
     C                     MOVELDNRSCD    WQSB01           Application Cod
      * Establish starting position
     C           KRSSB     SETLL@DNRESF                    *
     C           KRSSB     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAUNA           Description
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C           KRSSB     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * RTV Company Name       RT - Company Name and Address  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           ABAIC3           Company Number
      * Setup key
     C                     Z-ADD$CAIC3    ABAIC3           Company Number
      * Establish starting position
     C           KRSSC     CHAIN@ABREG3              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0003' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $CSQTX           Name
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELABADTX    $CSQTX           Name
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * Rtv Cust Watch Flag   RT - Customer EXT  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           NEBKC7           Ship To Custome
      * Setup key
     C                     Z-ADDFMANC7    NEBKC7           Ship To Custome
      * Establish starting position
     C           KRSSD     CHAIN@NEREAT              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2880' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $DP4SX           Customer Watch
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELNEP4SX    $DP4SX           Customer Watch
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * Rtv Past 6 Avg Dys ALL RT - A/R Balance File  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0001  50       Nbr Invoices Pa
     C                     Z-ADD*ZERO     WN0002  50       Nbr Invoices Pa
     C                     Z-ADD*ZERO     WN0003  50       Nbr Invoices Pa
     C                     Z-ADD*ZERO     WN0004  50       Nbr Invoices Pa
     C                     Z-ADD*ZERO     WN0005  50       Nbr Invoices Pa
     C                     Z-ADD*ZERO     WN0006  50       Nbr Invoices Pa
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * ***** Change Log and Comments
     C                     EXSR UBSUBR                     ***** Change Lo
     C                     Z-ADD*ZERO     YL0003           Count USR
      * Declare restrictor key work fields
     C           *LIKE     DEFN LDANC7    WQSE01           A/R Customer Nu
      * Define keylist
     C           KPSSE     KLIST
     C                     KFLD           WQSE01           A/R Customer Nu
     C                     KFLD           LDA1NB           A/R Balance Yea
     C                     KFLD           LDY4NB           A/R Balance Mon
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           WQSE01           A/R Customer Nu
      * Setup key
     C                     Z-ADDFMANC7    WQSE01           A/R Customer Nu
     C                     Z-ADDYL0001    LDA1NB           A/R Balance Yea
     C                     Z-ADDYL0002    LDY4NB           A/R Balance Mon
      * Establish starting position
     C           KPSSE     SETLL@LDCPU1                    *
     C           KRSSE     READE@LDCPU1                  90*
      * Data record not found
     C   90                MOVEL'USR2448' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * Do not process current month
      * CASE: DB1.A/R Balance Month EQ PAR.A/R Balance Month
     C           LDY4NB    IFEQ YL0002                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Count number of months read so far
      * CASE: DB1.A/R Balance Month NE LCL.A/R Balance Month
     C           LDY4NB    IFNE YL0004                     *IF
     C                     ADD  1         YL0003           Count USR
     C                     Z-ADDLDY4NB    YL0004           A/R Balance Mon
     C                     END                             *FI
      * Read only 6 months worth of records
      * CASE: LCL.Count USR is LE 6
     C           YL0003    IFLE 6                          *IF
      * ** Change calcs to use new Days to Pay field  09/11/2006 LJB L609
      * ** Month 1 calculations for Both Companies
      * CASE:
      *  - c1ORc2
      *   |- c1    : PAR.Month 1 USR is Zero
      *   |- c2    : PAR.Month 1 USR EQ DB1.A/R Balance Month
      *   '-
     C           $DR4NX    IFEQ *ZERO                      *IF
     C           $DR4NX    OREQ LDY4NB                     *OR
     C                     Z-ADDLDY4NB    $DR4NX           Month 1 USR
      * ** Add Company's "Days to Pay" and "Bal Nbr Invoices Paid" togeth
      * CASE: PAR.Days to Pay 1 USR is Not Equal to Zero
     C           $DRYNX    IFNE *ZERO                      *IF
     C                     ADD  LDBSDY    $DRYNX           Days to Pay 1 U
     C                     ADD  LDRXNX    WN0001           Nbr Invoices Pa
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDLDBSDY    $DRYNX           Days to Pay 1 U
     C                     Z-ADDLDRXNX    WN0001           Nbr Invoices Pa
     C                     END                             *FI
     C                     ELSE
      * CASE: Month 2 calculations for Both Companies
      *  - c1ORc2
      *   |- c1    : PAR.Month 2 USR is Zero
      *   |- c2    : PAR.Month 2 USR EQ DB1.A/R Balance Month
      *   '-
     C           $DR5NX    IFEQ *ZERO                      *IF
     C           $DR5NX    OREQ LDY4NB                     *OR
     C                     Z-ADDLDY4NB    $DR5NX           Month 2 USR
      * ** Add Company's "Days to Pay" and "Bal Nbr Invoices Paid" togeth
      * CASE: PAR.Days to Pay 2 USR is Not Equal to Zero
     C           $DRZNX    IFNE *ZERO                      *IF
     C                     ADD  LDBSDY    $DRZNX           Days to Pay 2 U
     C                     ADD  LDRXNX    WN0002           Nbr Invoices Pa
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDLDBSDY    $DRZNX           Days to Pay 2 U
     C                     Z-ADDLDRXNX    WN0002           Nbr Invoices Pa
     C                     END                             *FI
     C                     ELSE
      * CASE: ** Month 3 calculations for Both Companies
      *  - c1ORc2
      *   |- c1    : PAR.Month 3 USR is Zero
      *   |- c2    : PAR.Month 3 USR EQ DB1.A/R Balance Month
      *   '-
     C           $DR6NX    IFEQ *ZERO                      *IF
     C           $DR6NX    OREQ LDY4NB                     *OR
     C                     Z-ADDLDY4NB    $DR6NX           Month 3 USR
      * ** Add Company's "Days to Pay" and "Bal Nbr Invoices Paid" togeth
      * CASE: PAR.Days to Pay 3 USR is Not Equal to Zero
     C           $DR0NX    IFNE *ZERO                      *IF
     C                     ADD  LDBSDY    $DR0NX           Days to Pay 3 U
     C                     ADD  LDRXNX    WN0003           Nbr Invoices Pa
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDLDBSDY    $DR0NX           Days to Pay 3 U
     C                     Z-ADDLDRXNX    WN0003           Nbr Invoices Pa
     C                     END                             *FI
     C                     ELSE
      * CASE: ** Month 4 calculations for Both Companies
      *  - c1ORc2
      *   |- c1    : PAR.Month 4 USR is Zero
      *   |- c2    : PAR.Month 4 USR EQ DB1.A/R Balance Month
      *   '-
     C           $DR7NX    IFEQ *ZERO                      *IF
     C           $DR7NX    OREQ LDY4NB                     *OR
     C                     Z-ADDLDY4NB    $DR7NX           Month 4 USR
      * ** Add Company's "Days to Pay" and "Bal Nbr Invoices Paid" togeth
      * CASE: PAR.Days to Pay 4 USR is Not Equal to Zero
     C           $DR1NX    IFNE *ZERO                      *IF
     C                     ADD  LDBSDY    $DR1NX           Days to Pay 4 U
     C                     ADD  LDRXNX    WN0004           Nbr Invoices Pa
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDLDBSDY    $DR1NX           Days to Pay 4 U
     C                     Z-ADDLDRXNX    WN0004           Nbr Invoices Pa
     C                     END                             *FI
     C                     ELSE
      * CASE: ** Month 5 calculations for Both Companies
      *  - c1ORc2
      *   |- c1    : PAR.Month 5 USR is Zero
      *   |- c2    : PAR.Month 5 USR EQ DB1.A/R Balance Month
      *   '-
     C           $DR8NX    IFEQ *ZERO                      *IF
     C           $DR8NX    OREQ LDY4NB                     *OR
     C                     Z-ADDLDY4NB    $DR8NX           Month 5 USR
      * ** Add Company's "Days to Pay" and "Bal Nbr Invoices Paid" togeth
      * CASE: PAR.Days to Pay 5 USR is Not Equal to Zero
     C           $DR2NX    IFNE *ZERO                      *IF
     C                     ADD  LDBSDY    $DR2NX           Days to Pay 5 U
     C                     ADD  LDRXNX    WN0005           Nbr Invoices Pa
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDLDBSDY    $DR2NX           Days to Pay 5 U
     C                     Z-ADDLDRXNX    WN0005           Nbr Invoices Pa
     C                     END                             *FI
     C                     ELSE
      * CASE: ** Month 6 calculations for Both Companies
      *  - c1ORc2
      *   |- c1    : PAR.Month 6 USR is Zero
      *   |- c2    : PAR.Month 6 USR EQ DB1.A/R Balance Month
      *   '-
     C           $DR9NX    IFEQ *ZERO                      *IF
     C           $DR9NX    OREQ LDY4NB                     *OR
     C                     Z-ADDLDY4NB    $DR9NX           Month 6 USR
      * ** Add Company's "Days to Pay" and "Bal Nbr Invoices Paid" togeth
      * CASE: PAR.Days to Pay 6 USR is Not Equal to Zero
     C           $DR3NX    IFNE *ZERO                      *IF
     C                     ADD  LDBSDY    $DR3NX           Days to Pay 6 U
     C                     ADD  LDRXNX    WN0006           Nbr Invoices Pa
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDLDBSDY    $DR3NX           Days to Pay 6 U
     C                     Z-ADDLDRXNX    WN0006           Nbr Invoices Pa
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSE     READE@LDCPU1                  90*
     C                     ENDDO
      * USER: Exit processing
      * Calculate average Days to Pay - Month 1
      * CASE: PAR.Nbr Invoices Paid 1 Usr is Not zero
     C           WN0001    IFNE *ZERO                      *IF
     C                     DIV  WN0001    $DRYNX    H      Days to Pay 1 U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $DRYNX           Days to Pay 1 U
     C                     END                             *FI
      * Calculate average Days to Pay - Month 2
      * CASE: PAR.Nbr Invoices Paid 2 Usr is Not zero
     C           WN0002    IFNE *ZERO                      *IF
     C                     DIV  WN0002    $DRZNX    H      Days to Pay 2 U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $DRZNX           Days to Pay 2 U
     C                     END                             *FI
      * Calculate average Days to Pay - Month 3
      * CASE: PAR.Nbr Invoices Paid 3 Usr is Not zero
     C           WN0003    IFNE *ZERO                      *IF
     C                     DIV  WN0003    $DR0NX    H      Days to Pay 3 U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $DR0NX           Days to Pay 3 U
     C                     END                             *FI
      * Calculate average Days to Pay - Month 4
      * CASE: PAR.Nbr Invoices Paid 4 Usr is Not zero
     C           WN0004    IFNE *ZERO                      *IF
     C                     DIV  WN0004    $DR1NX    H      Days to Pay 4 U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $DR1NX           Days to Pay 4 U
     C                     END                             *FI
      * Calculate average Days to Pay - Month 5
      * CASE: PAR.Nbr Invoices Paid 5 Usr is Not zero
     C           WN0005    IFNE *ZERO                      *IF
     C                     DIV  WN0005    $DR2NX    H      Days to Pay 5 U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $DR2NX           Days to Pay 5 U
     C                     END                             *FI
      * Calculate average Days to Pay - Month 6
      * CASE: PAR.Nbr Invoices Paid 6 Usr is Not zero
     C           WN0006    IFNE *ZERO                      *IF
     C                     DIV  WN0006    $DR3NX    H      Days to Pay 6 U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $DR3NX           Days to Pay 6 U
     C                     END                             *FI
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * Rtv Past 6 Avg Dys Pay RT - A/R Balance File  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * ***** Change Log and Comments
     C                     EXSR UCSUBR                     ***** Change Lo
      * Declare restrictor key work fields
     C           *LIKE     DEFN WAAIC3    WQSF01           Company Number
     C           *LIKE     DEFN WAANC7    WQSF02           A/R Customer Nu
      * Define keylist
     C           KPSSF     KLIST
     C                     KFLD           WQSF01           Company Number
     C                     KFLD           WQSF02           A/R Customer Nu
     C                     KFLD           WAA1NB           A/R Balance Yea
     C                     KFLD           WAY4NB           A/R Balance Mon
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           WQSF01           Company Number
     C                     KFLD           WQSF02           A/R Customer Nu
      * Setup key
     C                     Z-ADDP1AIC3    WQSF01           Company Number
     C                     Z-ADDFMANC7    WQSF02           A/R Customer Nu
     C                     Z-ADDYL0001    WAA1NB           A/R Balance Yea
     C                     Z-ADDYL0002    WAY4NB           A/R Balance Mon
      * Establish starting position
     C           KPSSF     SETLL@LDCPOU                    *
     C           KRSSF     READE@LDCPOU                  90*
      * Data record not found
     C   90                MOVEL'USR2448' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * original 1/27/05
      * CASE: DB1.A/R Balance Month EQ PAR.A/R Balance Month
     C           WAY4NB    IFEQ YL0002                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.Month 1 USR is Zero
     C           $DR4NX    IFEQ *ZERO                      *IF
     C                     Z-ADDWAY4NB    $DR4NX           Month 1 USR
     C                     Z-ADDWAB4DY    $DRYNX           Days to Pay 1 U
     C                     ELSE
      * CASE: PAR.Month 2 USR is Zero
     C           $DR5NX    IFEQ *ZERO                      *IF
     C                     Z-ADDWAY4NB    $DR5NX           Month 2 USR
     C                     Z-ADDWAB4DY    $DRZNX           Days to Pay 2 U
     C                     ELSE
      * CASE: PAR.Month 3 USR is Zero
     C           $DR6NX    IFEQ *ZERO                      *IF
     C                     Z-ADDWAY4NB    $DR6NX           Month 3 USR
     C                     Z-ADDWAB4DY    $DR0NX           Days to Pay 3 U
     C                     ELSE
      * CASE: PAR.Month 4 USR is Zero
     C           $DR7NX    IFEQ *ZERO                      *IF
     C                     Z-ADDWAY4NB    $DR7NX           Month 4 USR
     C                     Z-ADDWAB4DY    $DR1NX           Days to Pay 4 U
     C                     ELSE
      * CASE: PAR.Month 5 USR is Zero
     C           $DR8NX    IFEQ *ZERO                      *IF
     C                     Z-ADDWAY4NB    $DR8NX           Month 5 USR
     C                     Z-ADDWAB4DY    $DR2NX           Days to Pay 5 U
     C                     ELSE
      * CASE: PAR.Month 6 USR is Zero
     C           $DR9NX    IFEQ *ZERO                      *IF
     C                     Z-ADDWAY4NB    $DR9NX           Month 6 USR
     C                     Z-ADDWAB4DY    $DR3NX           Days to Pay 6 U
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSF     READE@LDCPOU                  90*
     C                     ENDDO
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * RTV HighBal/Date-Parnt RT - A/R Balance File  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     YL0015           Amount of Highe
      * Declare restrictor key work fields
     C           *LIKE     DEFN WBANC7    WQSG01           A/R Customer Nu
     C           *LIKE     DEFN WBA1NB    WQSG02           A/R Balance Yea
     C           *LIKE     DEFN WBY4NB    WQSG03           A/R Balance Mon
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           WQSG01           A/R Customer Nu
     C                     KFLD           WQSG02           A/R Balance Yea
     C                     KFLD           WQSG03           A/R Balance Mon
      * Setup key
     C                     Z-ADDFMANC7    WQSG01           A/R Customer Nu
     C                     Z-ADDYL0001    WQSG02           A/R Balance Yea
     C                     Z-ADDYL0002    WQSG03           A/R Balance Mon
      * Establish starting position
     C           KRSSG     SETLL@LDCPU0                    *
     C           KRSSG     READE@LDCPU0                  90*
      * Data record not found
     C   90                MOVEL'USR2448' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     ADD  WBALVA    YL0015           Amount of Highe
      * CASE: DB1.Date of Highest A/R Bal. GT LCL.Date of Highest A/R Bal
     C           WBAIDT    IFGT YL0016                     *IF
     C                     Z-ADDWBAIDT    YL0016           Date of Highest
     C                     END                             *FI
     C           KRSSG     READE@LDCPU0                  90*
     C                     ENDDO
      * USER: Exit processing
     C                     Z-ADDYL0015    YL0013           Amount of Highe
     C                     Z-ADDYL0016    YL0014           Date of Highest
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHRVGN    BEGSR
      *================================================================
      * RTV Sales Route        RT - Company Customer  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSH     KLIST
     C                     KFLD           EOAIC3           Company Number
     C                     KFLD           EOBKC7           Ship To Custome
      * Setup key
     C                     Z-ADD$DAIC3    EOAIC3           Company Number
     C                     Z-ADDFMANC7    EOBKC7           Ship To Custome
      * Establish starting position
     C           KRSSH     CHAIN@EOREXM              90    *
      * Data record not found
     C   90                MOVEL'USR1007' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELEOR4CD    $DR4CD           Sales Route Cod
     C                     ENDIF
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * RTV Cust Addr, A/R Cst RT - Customer  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSI     KLIST
     C                     KFLD           BBBKC7           Ship To Custome
      * Setup key
     C                     Z-ADD$DBTC7    BBBKC7           Ship To Custome
      * Establish starting position
     C           KRSSI     CHAIN@BBREE9              90    *
      * Data record not found
     C   90                MOVEL'USR0170' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBBAJNA    $DAJNA           City
     C                     MOVELBBBGCD    $DBGCD           State Code
     C                     ENDIF
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * ***** Change log and comments
      *================================================================
      * ** 10/21/2009 LJB E00462
      * ** Print only Parent summary records
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * ***** Change Log and Comments
      *================================================================
      * RMC 3/7/06 Div Days by 2 only if both company's had days
      * *****
      * ** 05/19/2006 LJB T00009
      * ** Size of Days to Pay user fields changed from 3.0 to 5.0
      * ** to prevent truncating when accumulating for large
      * ** volume customers
      * *****
      * ** 06/11/2006 LJB L60906C
      * ** Change calculations for Average Days to Pay to use new
      * ** "Days to Pay" field. Accum total invoices paid and accum
      * ** total days to pay for both companies.
      * ** Then divide total Days to Pay by total Nbr Invoices paid.
      * *****
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         UCSUBR    BEGSR
      *================================================================
      * ***** Change Log and Comments
      *================================================================
      * ***** 05/19/2006 LJB T00009
      * ** Size of the Days to Pay Usr fields was changed from
      * ** 3.0 to 5.0 to prevent truncation when accumulating for
      * ** large volume customers.
      * *****
      *================================================================
     CSR         UCEXIT    ENDSR
      /EJECT
     CSR         UDSUBR    BEGSR
      *================================================================
      * ** Print the Credit Applied amounts from program AR800
      *================================================================
      * ** Prt current credit applied amount
      * CASE: LCL.USR Age Value 1 A is not equal to zeros
     C           YL0005    IFNE *ZERO                      *IF
     C                     Z-ADDYL0005    $DL0VL           Credit Applied
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $DL0VL           Credit Applied
     C                     END                             *FI
      * ** Prt Days 1 - 7 Amount
      * CASE: LCL.USR Age Value 2 A is not equal to zeros
     C           YL0006    IFNE *ZERO                      *IF
     C                     Z-ADDYL0006    $DLVVL           Credit Applied
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $DLVVL           Credit Applied
     C                     END                             *FI
      * ** Prt Days 8 - 14 Amount
      * CASE: LCL.USR Age Value 3 A is not equal to zeros
     C           YL0007    IFNE *ZERO                      *IF
     C                     Z-ADDYL0007    $DLWVL           Credit Applied
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $DLWVL           Credit Applied
     C                     END                             *FI
      * ** Prt Days 15 - 21 Amount
      * CASE: LCL.USR Age Value 4 A is not equal to zeros
     C           YL0008    IFNE *ZERO                      *IF
     C                     Z-ADDYL0008    $DLXVL           Credit Applied
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $DLXVL           Credit Applied
     C                     END                             *FI
      * ** Prt Days 22 - 28 Amount
      * CASE: LCL.USR Age Value 5 A is not equal to zeros
     C           YL0009    IFNE *ZERO                      *IF
     C                     Z-ADDYL0009    $DLYVL           Credit Applied
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $DLYVL           Credit Applied
     C                     END                             *FI
      * ** Prt Over 28 Days Amount
      * CASE: LCL.USR Age Value 1 B is not equal to zeros
     C           YL0010    IFNE *ZERO                      *IF
     C                     Z-ADDYL0010    $DLZVL           Credit Applied
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $DLZVL           Credit Applied
     C                     END                             *FI
      * ** Prt Credit Memos/On-Account
      * CASE: LCL.USR Age Value 2 B is not equal to zeros
     C           YL0011    IFNE *ZERO                      *IF
     C                     Z-ADDYL0011    $DLFVL           Credit/On Accou
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $DLFVL           Credit/On Accou
     C                     END                             *FI
      *================================================================
     CSR         UDEXIT    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     Z-ADD*ZERO     P5EUVA           USR Age Current
     C                     Z-ADD*ZERO     P5E5VA           USR Age Current
     C                     Z-ADD*ZERO     P5EVVA           USR Age Value 1
     C                     Z-ADD*ZERO     P5E0VA           USR Age Value 1
     C                     Z-ADD*ZERO     P5EWVA           USR Age Value 2
     C                     Z-ADD*ZERO     P5E1VA           USR Age Value 2
     C                     Z-ADD*ZERO     P5EXVA           USR Age Value 3
     C                     Z-ADD*ZERO     P5E2VA           USR Age Value 3
     C                     Z-ADD*ZERO     P5EYVA           USR Age Value 4
     C                     Z-ADD*ZERO     P5E3VA           USR Age Value 4
     C                     Z-ADD*ZERO     P5EZVA           USR Age Value 5
     C                     Z-ADD*ZERO     P5E4VA           USR Age Value 5
     C                     Z-ADD*ZERO     P5I5VA           USR Extended Co
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Define work field Blank for 3          USR
     C                     MOVEL*BLANK    WUUAT1  3
      * Define work field First Time Flag
     C                     MOVEL*BLANK    WUTAST  1
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    FMSYTX           Parent Customer
     C                     MOVEL*LOVAL    FMAQTX           A/R Customer Na
      * Define work field CD7 Ext Numeric Key
     C                     MOVEL*BLANK    WUEOCD  7
      * Define work field CD3 Ext Numeric Key
     C                     MOVEL*BLANK    WUDMCD  3
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAAIC3           Company Number
     C                     Z-ADD*ZERO     WAANC7           A/R Customer Nu
     C                     Z-ADD*ZERO     WAA1NB           A/R Balance Yea
     C                     Z-ADD*ZERO     WAY4NB           A/R Balance Mon
     C                     Z-ADD*ZERO     WAALVA           Amount of Highe
     C                     Z-ADD*ZERO     WAAIDT           Date of Highest
     C                     Z-ADD*ZERO     WAY5VA           Beginning Balan
     C                     Z-ADD*ZERO     WAZAVA           A/R Balance Val
     C                     Z-ADD*ZERO     WAY7VA           A/R Balance Val
     C                     Z-ADD*ZERO     WAY8VA           A/R Balance Val
     C                     Z-ADD*ZERO     WAY9VA           A/R Balance Val
     C                     Z-ADD*ZERO     WARTNX           Bal Nbr of Orde
     C                     Z-ADD*ZERO     WARUNX           Bal Nbr of Cred
     C                     Z-ADD*ZERO     WARVNX           Bal Nbr of Paym
     C                     Z-ADD*ZERO     WARWNX           Bal Nbr of Invo
     C                     Z-ADD*ZERO     WARXNX           Bal Nbr of Invo
     C                     Z-ADD*ZERO     WAB4DY           Bal Avg Days to
     C                     Z-ADD*ZERO     WABSDY           Days to Pay
     C                     Z-ADD*ZERO     WAK2DT           Override Total
     C                     Z-ADD*ZERO     WAAATM           Job Time
     C                     Z-ADD*ZERO     WAAXDT           Job Date
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C                     MOVEL'N'       W0PMT   1
      * Define local work field A/R Balance Year
     C                     Z-ADD*ZERO     YL0001  40
      * Define local work field A/R Balance Month
     C                     Z-ADD*ZERO     YL0002  20
      * Define local work field Count USR
     C                     Z-ADD*ZERO     YL0003  50
      * Define local work field A/R Balance Month
     C                     Z-ADD*ZERO     YL0004  20
      * Define local work field USR Age Value 1 A
     C                     Z-ADD*ZERO     YL0005 112
      * Define local work field USR Age Value 2 A
     C                     Z-ADD*ZERO     YL0006 112
      * Define local work field USR Age Value 3 A
     C                     Z-ADD*ZERO     YL0007 112
      * Define local work field USR Age Value 4 A
     C                     Z-ADD*ZERO     YL0008 112
      * Define local work field USR Age Value 5 A
     C                     Z-ADD*ZERO     YL0009 112
      * Define local work field USR Age Value 1 B
     C                     Z-ADD*ZERO     YL0010 112
      * Define local work field USR Age Value 2 B
     C                     Z-ADD*ZERO     YL0011 112
      * Define local work field USR Age Value 3 B
     C                     Z-ADD*ZERO     YL0012 112
      * Define local work field Amount of Highest A/R Bal
     C                     Z-ADD*ZERO     YL0013 112
      * Define local work field Date of Highest A/R Bal.
     C                     Z-ADD*ZERO     YL0014  70
      * Define local work field Amount of Highest A/R Bal
     C                     Z-ADD*ZERO     YL0015 112
      * Define local work field Date of Highest A/R Bal.
     C                     Z-ADD*ZERO     YL0016  70
      * Define null work field Customer Name
     C                     MOVEL*BLANK    YN0001 30
      * Define null work field Address Line 1
     C                     MOVEL*BLANK    YN0002 30
      * Define null work field Address Line 2
     C                     MOVEL*BLANK    YN0003 30
      * Define null work field Address Line 3
     C                     MOVEL*BLANK    YN0004 30
      * Define null work field Zip/Postal Code
     C                     MOVEL*BLANK    YN0005 11
      * Define null work field A/R Customer Number
     C                     Z-ADD*ZERO     YN0006  70
      * Define null work field Email When Order Shipped
     C                     MOVEL*BLANK    YN0007  1
      * Declare initial value data areas
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   $ACMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL##PGM     $APGM
     C                     MOVEL##USR     $AUSR
     C                     MOVEL*BLANK    W0PFM   1
     C                     Z-ADD*ZERO     @$WRK   40
     C                     Z-ADD*ZERO     @$HDL   40
     C                     Z-ADD*ZERO     @$CLN
     C                     Z-ADD*ZERO     @$PGN
      * Adjust page length and overflow as necessary
     C           @$PGL     SUB  2         W0PGL   40
     C           @$OFL     IFGE W0PGL
     C           W0PGL     SUB  2         W0OFL   40
     C                     ELSE
     C                     Z-ADD@$OFL     W0OFL
     C                     END
      * Clear overflow indicator
     C                     SETOF                     97
      * Request new page
     C                     MOVEL'Y'       W0NEWP  1
      * USER: Initialize program
      * VAL Rtv & Ctr Prt Hdg  IF
      * SET Setup Prt Headings IF
      * RTV Applic. Group Desc RT - Application  * 
     C                     EXSR SARVGN
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * Center Txt String 40 - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc to PrtCo US - /UT User Source  * 
     C                     MOVE WUDE40    $ACMP
     C                     MOVEL*BLANK    WUUAT1           Blank for 3
     C                     MOVEL'Y'       WUTAST           First Time Flag
      * ***** Change log and comments
     C                     EXSR UASUBR                     ***** Change lo
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      *================================================================
     CSR         ZZEXIT    ENDSR
