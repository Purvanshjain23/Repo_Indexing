// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PNJAPFR
// ?Date: 14.08.2025 Time: 12:05:54
// ?------------------------------------------------------------------------------------------------

//?USER: Process top of page

//?** Load the Order Number(s) and slashes for each following O#
EXECUTE FUNCTION(RTV All Orders for LoadRT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC1937522;
PARAMETER(DB1.Load_ID);
PARAMETER(TOP_Order_Number);
PARAMETER(TOP_Order_Number_Ref);
PARAMETER(TOP_Order_Number_Saved_USR);
PARAMETER(TOP_USR_Order_Number);
{
 //?USER: Process Data record

 CASE;

 // IF PAR.Order Number is Equal to zeros
 IF PAR.Order_Number = *ZERO;

 // PAR.Order Number = DB1.Order Number
 PAR.Order_Number = DB1.Order_Number;

 // IF PAR.Order Number Ref is Not Entered
 IF PAR.Order_Number_Ref = *ZERO;

 // PAR.Order Number Ref = DB1.Order Number
 PAR.Order_Number_Ref = DB1.Order_Number;

 // IF PAR.Order Number Saved USR is Equal to zeros
 IF PAR.Order_Number_Saved_USR = *ZERO;

 // PAR.Order Number Saved USR = DB1.Order Number
 PAR.Order_Number_Saved_USR = DB1.Order_Number;

 // IF PAR.USR Order Number is Equal to zeros
 IF PAR.USR_Order_Number = *ZERO;

 // PAR.USR Order Number = DB1.Order Number
 PAR.USR_Order_Number = DB1.Order_Number;

 ENDIF;

}


// WRK.Order Number Ref = TOP.Order Number Ref
WRK.Order_Number_Ref = TOP_Order_Number_Ref;

// WRK.Order Number Saved USR = TOP.Order Number Saved USR
WRK.Order_Number_Saved_USR = TOP_Order_Number_Saved_USR;

// WRK.USR Order Number = TOP.USR Order Number
WRK.USR_Order_Number = TOP_USR_Order_Number;

// TOP.Vertical Line 1 = CON./
TOP_Vertical_Line_1 = '/';

// TOP.Vertical Line 2 = CON./
TOP_Vertical_Line_2 = '/';

// TOP.Vertical Line 3 = CON./
TOP_Vertical_Line_3 = '/';

// TOP.Customer Purchase Order # = DB1.Customer Purchase Order #
TOP_Customer_Purchase_Order_# = DB1.Customer_Purchase_Order_#;

// TOP.JPN Invoice Issuance Date = DB1.JPN Invoice Issuance Date
TOP_JPN_Invoice_Issuance_Date = DB1.JPN_Invoice_Issuance_Date;

// TOP.Ship To Name = DB1.Ship To Name
TOP_Ship_To_Name = DB1.Ship_To_Name;

// TOP.Bill to Name = DB1.Bill to Name
TOP_Bill_to_Name = DB1.Bill_to_Name;

// TOP.Ship To Address Line 1 = DB1.Ship To Address Line 1
TOP_Ship_To_Address_Line_1 = DB1.Ship_To_Address_Line_1;

// TOP.Bill to Address Line 1 = DB1.Bill to Address Line 1
TOP_Bill_to_Address_Line_1 = DB1.Bill_to_Address_Line_1;

// TOP.Ship To Address Line 2 = DB1.Ship To Address Line 2
TOP_Ship_To_Address_Line_2 = DB1.Ship_To_Address_Line_2;

// TOP.Bill to Address Line 2 = DB1.Bill to Address Line 2
TOP_Bill_to_Address_Line_2 = DB1.Bill_to_Address_Line_2;

// TOP.Ship To Address Line 3 = DB1.Ship To Address Line 3
TOP_Ship_To_Address_Line_3 = DB1.Ship_To_Address_Line_3;

// TOP.Bill to Address Line 3 = DB1.Bill to Address Line 3
TOP_Bill_to_Address_Line_3 = DB1.Bill_to_Address_Line_3;

// TOP.Ship To City = DB1.Ship To City
TOP_Ship_To_City = DB1.Ship_To_City;

// TOP.Ship To State Code = DB1.Ship To State Code
TOP_Ship_To_State_Code = DB1.Ship_To_State_Code;

// TOP.Ship To Zip/Postal Code = DB1.Ship To Zip/Postal Code
TOP_Ship_To_Zip_Postal_Code = DB1.Ship_To_Zip_Postal_Code;

// TOP.Bill to City = DB1.Bill to City
TOP_Bill_to_City = DB1.Bill_to_City;

// TOP.Bill to State Code = DB1.Bill to State Code
TOP_Bill_to_State_Code = DB1.Bill_to_State_Code;

// TOP.Bill to Zip/Postal Code = DB1.Bill to Zip/Postal Code
TOP_Bill_to_Zip_Postal_Code = DB1.Bill_to_Zip_Postal_Code;

EXECUTE FUNCTION(RTV Country Code only  RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1531787;
PARAMETER(DB1.Company_Number);
PARAMETER(DB1.Order_Number);
PARAMETER(WRK.Country_Code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 CASE;

 // IF DB1.Detail Line Status is Not cancelled
 IF DB1.Detail_Line_Status = 'L'/'A'/'C'/'R'/'E'/'H'/'I';

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

 ENDIF;

}


EXECUTE FUNCTION(RTV Desc, Status       RT) TYPE(RTVOBJ) FILE(OME5REP)          AC1261065;
PARAMETER(WRK.Country_Code);
PARAMETER(TOP_Country_Description);
PARAMETER(NLL.Record_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// TOP.USR Description = TOP.Country Description
TOP_USR_Description = TOP_Country_Description;

// TOP.USR Load Id ALpha = CON.INVOICE
TOP_USR_Load_Id_ALpha = 'INVOICE';

// WRK.Company Number = CON.300
WRK.Company_Number = 300;

//?** Put a comma after addr 1, add suite #, and rtv the country
EXECUTE FUNCTION(RTV Co Addr,Phone,CntryRT) TYPE(RTVOBJ) FILE(CAABREP)          AC1936785;
PARAMETER(WRK.Company_Number);
PARAMETER(TOP_Name);
PARAMETER(WRK.Address_Line_1);
PARAMETER(TOP_Address_Line_2);
PARAMETER(WRK.Address_Line_3);
PARAMETER(TOP_City);
PARAMETER(TOP_Zip);
PARAMETER(TOP_Telephone_Number_FF);
PARAMETER(TOP_State_Code);
PARAMETER(TOP_Country_Code);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// TOP.Address Line 1 = CONCAT(WRK.Address Line 1,CON.,,CON.*ZERO)
TOP_Address_Line_1 = WRK.Address_Line_1 + ',' (*ZERO);

//?** Don't print remittance date, no longer being used  E002129
//?USER: Print required level headings

// SUPPRESSED PRINT Load ID header format

// SUPPRESSED PRINT Order Number header format

//?USER: On print of detail format

// PGM.*Print format = CND.Do not print format
PGM.*Print_format = 'N';

//?PRTOBJ calls after print of detail format

//?Embedded PRTOBJ : PRT JCO PltInv-DtEmlLd PO
// WRK.Quantity Shipped Total = CON.*ZERO
WRK.Quantity_Shipped_Total = *ZERO;

// WRK.Weight Shipped Total = CON.*ZERO
WRK.Weight_Shipped_Total = *ZERO;

// WRK.USR Extended Amount S = CON.*ZERO
WRK.USR_Extended_Amount_S = *ZERO;

EXECUTE FUNCTION(PRT JCO PltInv-DtEmlLd PO) TYPE(PRTOBJ);
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Order_Number);
PARAMETER(WRK.Quantity_Shipped_Total);
PARAMETER(WRK.Weight_Shipped_Total);
PARAMETER(WRK.USR_Extended_Amount_S);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?USER: Process after print of detail format

// NXT.Quantity Shipped Total = NXT.Quantity Shipped Total + WRK.Quantity Shipped Total
NXT.Quantity_Shipped_Total = NXT.Quantity_Shipped_Total + WRK.Quantity_Shipped_Total;

// NXT.Weight Shipped Total = NXT.Weight Shipped Total + WRK.Weight Shipped Total
NXT.Weight_Shipped_Total = NXT.Weight_Shipped_Total + WRK.Weight_Shipped_Total;

// NXT.USR Extended Amount S = NXT.USR Extended Amount S + WRK.USR Extended Amount S
NXT.USR_Extended_Amount_S = NXT.USR_Extended_Amount_S + WRK.USR_Extended_Amount_S;

//?USER: Print required level totals

// SUPPRESSED PRINT Order Number totals format

CASE;

IF NEW Load_ID;
// Print Load ID totals format
PRINT Load ID totals format;

ENDIF;

