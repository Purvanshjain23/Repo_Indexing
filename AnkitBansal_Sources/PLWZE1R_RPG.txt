     H/TITLE Edt GL Trial Bal Dwnld ER Edit record(1 screen)
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Maintain DBF file records, one at a time
     H* - Existing records may be updated or deleted
     H* - New records may be added
     H* - Key changes are not allowed
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Edit record(1 screen)
      *
     H* Company       : HPEDEVMDL
     H* System        : HPEDEVMDL
     H* User name     : ISLBUSE
     H* Date          : 11/01/16  Time  : 13:09:23
     H* Copyright     : HPEDEVMDL
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPKVLLSL0IF  E           K        DISK
      * Values list details file
      *
     FPLWZE1R#CF  E                    WORKSTN
     F                                              KINFDS INFDS#
      * DSP: Edt GL Trial Bal Dwnld ER Edit record(1 screen)
      *
     FPLCBCPL1IF  E           K        DISK
     F                                              KINFDS INFDS1
      * RTV : M3 GL Interface Control   Retrieval index
      *
     FPLCBCPL2IF  E           K        DISK
      * RSQ : M3 GL Interface Control   divisoin/Seq#(D)
      *
     FPLCBCPL0UF  E           K        DISK                      A
      * UPD : M3 GL Interface Control   Update index
      *
      * Long constants
     E                    @CN#    1  01  6   @CN    25
     I@CBCPUP
      * M3 GL Interface Control   divisoin/Seq#(D)
      * Renamed input format fields
     I              CBRMCD                          WARMCD
     I              CBWLA1                          WAWLA1
     I              CBWMA1                          WAWMA1
     I              CBWNA1                          WAWNA1
     I              CBHDDT                          WAHDDT
     I              CBHEDT                          WAHEDT
     I              CBAMT1                          WAAMT1
     I              CBG1SS                          WAG1SS
     I              CBHWSS                          WAHWSS
     I              CBAAVN                          WAAAVN
     I              CBAADT                          WAAADT
     I              CBAMTM                          WAAMTM
     I              CBAJST                          WAAJST
     I              CBAHVN                          WAAHVN
     I              CBAGVN                          WAAGVN
     I              CBABVN                          WAABVN
     I              CBABDT                          WAABDT
     I              CBABTM                          WAABTM
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IINFDS1    E DSY2I1DSP
      * File information data structure
      *
     I@1DBRC    E DSPLCBCPL0
      * UPD : M3 GL Interface Control   Update index
      * Current/previous master file format fields for change control
      *
     I#1DBRC      DS                             81
      * Stored master file format fields
     I                                        1   1 #1DB1
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
     IYARDCS      DS                             81
      * Message data for message Y2U0009.
     IMD0009      DS
     I                                        1  10 MDPGM
     I                                       11  20 MDACP
     I                                       21  30 MDFMT
     I                                       31  34 MDACT
     I                                       35  40 MDLBL
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: M3 GL Interface Control
      * I : RST MGL M3 Division Group
     I                                        1   3 P1RMCD
      * I : RST MGL Sequence #
     I                                    P   4   60P1WLA1
     IP2PARM      DS
      * FLD: *Arrays
      * N : MAP Oms Warehouse Code
     I                                        1   3 P2J8NB
      * N : MAP CC Company Number
     I                                    P   4   50P2HONB
      * N : MAP Oms SalesPerson Code
     I                                        6   8 P2C8CD
      * N : MAP Oms Allow Multi-Company
     I                                        9   9 P2G8ST
      * N : MAP Oms Default Printer
     I                                       10  19 P2G9ST
      * N : MAP Oms Name
     I                                       20  49 P2EUTX
      * N : MAP Oms System Value Alpha
     I                                       50  89 P2EVTX
      * N : MAP Oms Access Denied (Y/N)
     I                                       90  90 P2HAST
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'Date entry or Period'
      * MGL Selected To Date
     I                                    P   1   40ZA0001
      * MGL Selected Period
     I                                    P   5   60ZA0002
      * MGL Selected Year
     I                                    P   7   90ZA0003
      * MGL Selected From Date
     I                                    P  10  130ZA0004
      * Message data for 'Invalid Year'
      * MGL Selected Year
     I                                    P   1   30ZA0005
      * Message data for 'Invalid Period'
      * MGL Selected Period
     I                                    P   1   20ZA0006
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1RMCD    PARM           WP0001  3        MGL M3 Division
     C           P1WLA1    PARM           WP0002  50       MGL Sequence #
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Check passed parameters
     C                     EXSR FACKPM
      * Perform once if all passed, else repeat
     C           W0RPT     DOUEQ'N'
      * Display and process key screen
     C                     EXSR BADSKY
     C                     END
      * Terminate program
     C                     EXSR ZXEXPG
      *****************************************************************
      /EJECT
     CSR         BADSKY    BEGSR
      *================================================================
      * Display and process key screen
      *================================================================
      * Bypass first display of key screen is possible
     C                     MOVEL'Y'       W0BYP   1
      * Initialize key screen
     C                     EXSR MDIZ#K
      * Signal start of transaction
     C                     MOVEL'Y'       W0TRN   1
     C           W0TRN     DOWEQ'Y'
     C           W0TRN     OREQ 'K'
      * Ensure transaction continues (if reset)
     C                     MOVEL'Y'       W0TRN   1
      * Conduct screen conversation
     C           W0TRN     DOWEQ'Y'
      * Is bypass key screen still viable?
     C           W0BYP     IFEQ 'Y'
     C           #1WLA1    IFEQ *ZERO                      MGL Sequence #
     C           #1RMCD    OREQ *BLANK                     MGL M3 Division
      * One or more key fields is blank
     C           *IN30     OREQ '1'
      * HOME: Reset screen fields
     C                     MOVEL'N'       W0BYP
     C                     END
     C                     END
      * Bypass key screen
     C           W0BYP     IFEQ 'N'
      * Display key screen
     C                     EXSR BBEXFM
     C                     END
      * Cancel key screen bypass
     C                     MOVEL'N'       W0BYP
      * Process response to key screen
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * Switch between *ADD/*CHANGE modes
     C   09                CAS            BCCHMD
      * HOME: Reset screen fields
     C   30                CAS            BDHMKY
      * Process key screen input
     C                     CAS            BEPRKY
     C                     END
     C           W0TRN     DOWEQ'R'
     C                     MOVEL'Y'       W0TRN
     C                     EXSR BEPRKY
     C                     END
      *
     C                     END
     C                     END
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         BBEXFM    BEGSR
      *================================================================
      * Display key screen and process HELP requests
      *================================================================
      * Set screen conditioning indicators
     C                     EXSR GADSAK
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
      * PUTOVR unless conditioned fields change
     C                     SETON                         86*
     C           *IN89     IFNE BBIN89
     C                     SETOF                         86*
     C                     END
     C                     MOVE *IN89     BBIN89  1
     C                     MOVEL'K'       W0GRP   1
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#RCDKEY
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1
      * Reset global error indicator
     C                     SETOF                         99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         BBEXIT    ENDSR
      /EJECT
     CSR         BCCHMD    BEGSR
      *================================================================
      * Switch between *ADD/*CHANGE modes
      *================================================================
     C           W0PMD     IFEQ 'ADD'
     C                     MOVEL'CHG'     W0PMD   3
     C                     ELSE
     C                     MOVEL'ADD'     W0PMD
     C                     END
      *================================================================
     CSR         BCEXIT    ENDSR
      /EJECT
     CSR         BDHMKY    BEGSR
      *================================================================
      * Process HOME key
      *================================================================
     C                     MOVEL'N'       W0TRN
      *================================================================
     CSR         BDEXIT    ENDSR
      /EJECT
     CSR         BEPRKY    BEGSR
      *================================================================
      * Process key screen input
      *================================================================
      * Initialise detail screen
     C                     EXSR MAIZ#1
      * Validate key fields
     C                     EXSR BFVLKY
     C           *IN99     CABEQ'1'       BEEXIT
     C           YPMTFD    CABNE*BLANKS   BEEXIT
      * Check for existing record
     C           KRTV      KLIST
     C                     KFLD           CBRMCD           MGL M3 Division
     C                     KFLD           CBWLA1           MGL Sequence #
      * Setup key
     C                     MOVEL#1RMCD    CBRMCD
     C                     Z-ADD#1WLA1    CBWLA1
     C           KRTV      CHAIN@CBCPUO              9091  *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     SETON                     9931  *
     C                     GOTO BEEXIT
     C                     END                             FI 91
      *
      * If record does not exist, flip to add mode
     C           *IN90     IFEQ '1'
     C                     MOVEL'ADD'     W0PMD
      * USER: Initialize detail screen (new record)
     C                     MOVEL'O'       #1G1SS           MGL Process Sta
     C                     ELSE
      * If record does exist, flip to change mode
     C                     MOVEL'CHG'     W0PMD
      * Load screen fields from DBF
     C                     EXSR MBFL#1
     C                     END
      *..................................................
     C   99                GOTO BEEXIT
      *
     C           YPMTFD    IFEQ *BLANK
      * No error: Display and process details
     C                     EXSR CADSDA
     C                     END
      *
      *================================================================
     CSR         BEEXIT    ENDSR
      /EJECT
     CSR         BFVLKY    BEGSR
      *================================================================
      * Validate key fields
      *================================================================
      * Validate MGL M3 Division Group
     C                     MOVEL*BLANK    W0RTN
      * Name search required?
     C           '#1RMCD'  IFEQ YPMTFD
      * MGL M3 Division Group
     C                     MOVEL#1RMCD    W0INVL 25
      * Set current value in drop down list.
     C                     MOVEL*ZEROS    ZFRMCD
     C                     SELEC
     C           W0INVL    WHEQ 'DLY'                      DLY
     C                     Z-ADD1         ZFRMCD
     C           W0INVL    WHEQ 'SBD'                      SBD
     C                     Z-ADD2         ZFRMCD
     C           W0INVL    WHEQ 'TF'                       TF
     C                     Z-ADD3         ZFRMCD
     C           W0INVL    WHEQ 'STF'                      STF
     C                     Z-ADD4         ZFRMCD
     C           W0INVL    WHEQ 'HPB'                      HPB
     C                     Z-ADD5         ZFRMCD
     C           W0INVL    WHEQ 'MEX'                      MEX
     C                     Z-ADD6         ZFRMCD
     C                     ENDSL
     C                     EXFMTZERMCD
      * Set selected value from drop down list.
     C                     MOVEL*BLANKS   W0INVL
     C                     SELEC
     C           ZFRMCD    WHEQ 1
     C                     MOVEL'DLY'     W0INVL           DLY
     C           ZFRMCD    WHEQ 2
     C                     MOVEL'SBD'     W0INVL           SBD
     C           ZFRMCD    WHEQ 3
     C                     MOVEL'TF'      W0INVL           TF
     C           ZFRMCD    WHEQ 4
     C                     MOVEL'STF'     W0INVL           STF
     C           ZFRMCD    WHEQ 5
     C                     MOVEL'HPB'     W0INVL           HPB
     C           ZFRMCD    WHEQ 6
     C                     MOVEL'MEX'     W0INVL           MEX
     C                     ENDSL
     C                     SETOF                     90    *
     C                     MOVELW0INVL    #1RMCD
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
     C           W0PMD     IFNE 'ADD'
     C           YPMTFD    ORNE *BLANK
     C                     END
      * MGL M3 Division Group required
     C           #1RMCD    IFEQ *BLANK                     IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9931  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      *================================================================
     CSR         BFEXIT    ENDSR
      /EJECT
     CSR         CADSDA    BEGSR
      *================================================================
      * Display and process detail screen
      *================================================================
      * Conduct detail screen conversation
      * - repeat until screen control flag is reset:
     C           W0TRN     DOWEQ'Y'
      * Display detail screen
     C                     EXSR CBEXFM
      * Process response to detail screen
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * Redisplay previous screen
     C   12                CAS            CCDSPV
      * HOME: Reset screen fields
     C   30                CAS            CCDSPV
      * Process detail screen input
     C                     CAS            CFPRSC
     C                     END
     C           W0TRN     IFEQ 'R'
     C           W0PMD     IFEQ 'ADD'
     C                     EXSR MAIZ#1
     C                     END
     C                     END
      *
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         CBEXFM    BEGSR
      *================================================================
      * Display screen and process HELP requests
      *================================================================
      * Set screen conditioning indicators
     C                     EXSR GBDSAD
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
      * PUTOVR unless conditioned fields change
     C                     SETON                         86*
     C           *IN89     IFNE CBIN89
     C                     SETOF                         86*
     C                     END
     C                     MOVE *IN89     CBIN89  1
     C                     MOVEL'1'       W0GRP   1
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y1SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT2
     C                     EXFMT#RCDDTL1
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1
      * Reset global error indicator
     C                     SETOF                         99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CBEXIT    ENDSR
      /EJECT
     CSR         CCDSPV    BEGSR
      *================================================================
      * Redisplay previous screen
      *================================================================
     C   30                MOVEL'R'       W0TRN
     C   12                MOVEL'K'       W0TRN
      *================================================================
     CSR         CCEXIT    ENDSR
      /EJECT
     CSR         CFPRSC    BEGSR
      *================================================================
      * Validate record
      *================================================================
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * Validate details
     C                     EXSR DCVLDL
      * QUIT if error:
     C   99                GOTO CFEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       CFEXIT
      * Prompt for confirmation
     C                     EXSR EAPMCF
      * Quit if not confirmed
     C           *IN99     IFEQ '1'
     C                     SETOF                     99
     C                     GOTO CFEXIT
     C                     END
      * No error: update record
     C                     EXSR EBPR##
      *================================================================
     CSR         CFEXIT    ENDSR
      /EJECT
     CSR         DCVLDL    BEGSR
      *================================================================
      * Validate details
      *================================================================
      * Validate Initial Load
     C                     MOVEL*BLANK    W0RTN
      * Name search required?
     C           '#1HWSS'  IFEQ YPMTFD
      * Initial Load
     C                     MOVEL#1HWSS    W0INVL 25
      * Set current value in drop down list.
     C                     MOVEL*ZEROS    ZHHWSS
     C                     SELEC
     C           W0INVL    WHEQ 'Y'                        Y
     C                     Z-ADD1         ZHHWSS
     C           W0INVL    WHEQ 'N'                        N
     C                     Z-ADD2         ZHHWSS
     C                     ENDSL
     C                     EXFMTZGHWSS
      * Set selected value from drop down list.
     C                     MOVEL*BLANKS   W0INVL
     C                     SELEC
     C           ZHHWSS    WHEQ 1
     C                     MOVEL'Y'       W0INVL           Y
     C           ZHHWSS    WHEQ 2
     C                     MOVEL'N'       W0INVL           N
     C                     ENDSL
     C                     SETOF                     90    *
     C                     MOVELW0INVL    #1HWSS
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
      * Validate MGL Process Status
     C                     MOVEL*BLANK    W0RTN
     C                     MOVEL#1G1SS    W0NSRQ  1        MGL Process Sta
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C           '#1G1SS'  OREQ YPMTFD
     C                     CALL 'PKVLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1324366   Y2LSNO  70
     C           #1G1SS    PARM #1G1SS    W0EXVL 25        MGL Process Sta
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C           W0NSRQ    IFNE '?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
     C                     END
      *
     C           YPMTFD    IFEQ *BLANKS
      * USER: Validate detail screen fields
      * Enter yr/period OR date range
      * CASE:
      *  - (c1ORc2)AND(c3ORc4)
      *   |- c1    : DTL.MGL Selected Year is Entered
      *   |- c2    : DTL.MGL Selected Period is Entered
      *   |- c3    : DTL.MGL Selected From Date is GT 0
      *   |- c4    : DTL.MGL Selected To Date is GT 0
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C                     MOVEL'0'       Y0CX02  1
     C           #1WMA1    IFGT *ZERO                      *IF
     C           #1WNA1    ORGT *ZERO                      *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'0'       Y0CX02  1
     C           #1HDDT    IFGT 0                          *IF
     C           #1HEDT    ORGT *ZERO                      *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Setup message data for message
      * Convert MGL Selected To Date to display format
      * Convert date
     C           1000000   ADD  #1HEDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0001
     C                     Z-ADD#1WNA1    ZA0002           MGL Selected Pe
     C                     Z-ADD#1WMA1    ZA0003           MGL Selected Ye
      * Convert MGL Selected From Date to display format
      * Convert date
     C           1000000   ADD  #1HDDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0004
      * Send message 'Date entry or Period'
     C                     MOVEL'PRK1370' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     993231*
      *
     C                     END                             *FI
      * Val yr/period
      * CASE: DTL.MGL Selected Year is Entered
     C           #1WMA1    IFGT *ZERO                      *IF
      * CASE: DTL.MGL Selected Year is GE 2014
     C           #1WMA1    IFGE 2014                       *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     Z-ADD#1WMA1    ZA0005           MGL Selected Ye
      * Send message 'Invalid Year'
     C                     MOVEL'PRK1371' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
      *
     C                     END                             *FI
      * CASE: DTL.MGL Selected Period is Periods
     C           #1WNA1    IFGE 01                         *IF
     C           #1WNA1    ANDLE12
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     Z-ADD#1WNA1    ZA0006           MGL Selected Pe
      * Send message 'Invalid Period'
     C                     MOVEL'PRK1372' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9932  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END
      * Initial Load required
     C           #1HWSS    IFEQ *BLANK                     IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9933  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      * MGL User Initials required
     C           #1AMT1    IFEQ *BLANK                     IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9934  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      * MGL Process Status required
     C           #1G1SS    IFEQ *BLANK                     IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9935  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      *================================================================
     CSR         DCEXIT    ENDSR
      /EJECT
     CSR         EAPMCF    BEGSR
      *================================================================
      * Prompt for confirmation
      *================================================================
      * Set screen conditioning indicators
     C                     EXSR GBDSAD
      * Force PUTOVR
     C                     SETON                         86*
      * Update screen time
     C                     TIME           ##TME
      * Refresh screen
     C                     MOVEL*BLANK    ##CFCD
     C                     MOVEL'N'       ##CFCD
      * Save CMD keys
     C                     MOVEA*IN       WN30   30
     C                     SETOF                     29    *
      * Generate internal/external key list
     C           KINEX     KLIST
     C                     KFLD           Y2LSNO
     C                     KFLD           Y2INVL
      * Convert *CONFIRM to external value
     C                     Z-ADD1001713   Y2LSNO
     C                     MOVEL*BLANK    Y2INVL
     C                     MOVEL##CFCD    Y2INVL           *CONFIRM
     C           KINEX     CHAIN@Y2INEX              90    *
     C  N90                MOVELY2EXVL    V#CFCD           *CONFIRM
      *
     C           W0HLP     DOUEQ'N'
     C           *IN29     ANDEQ'0'
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT2
     C                     WRITE#RCDDTL1
     C                     EXFMT#CONFIRM
     C           *IN29     IFEQ '1'
     C                     SETON                     99
     C                     GOTO EAEXIT
     C                     END
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
      * Validate *CONFIRM
     C                     MOVEL*BLANK    W0RTN
     C                     MOVELV#CFCD    W0NSRQ  1        *CONFIRM
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C           'V#CFCD'  OREQ YPMTFD
     C                     CALL 'PKVLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1001713   Y2LSNO  70
     C           V#CFCD    PARM V#CFCD    W0EXVL 25        *CONFIRM
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C           W0NSRQ    IFNE '?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
     C                     END
      * Check external value of *CONFIRM
      * Generate internal/external key list
     C           KEXIN     KLIST
     C                     KFLD           Y2LSNO
     C                     KFLD           Y2EXVL
      * Convert *CONFIRM to internal value
     C                     Z-ADD1001713   Y2LSNO
     C                     MOVEL*BLANK    Y2EXVL
     C                     MOVELV#CFCD    Y2EXVL           *CONFIRM
     C           KEXIN     CHAIN@Y2EXIN              90    *
     C           *IN90     IFEQ '1'
     C                     MOVEL*BLANK    ##CFCD
     C           YPMTFD    IFEQ *BLANK
     C                     SETON                     96    *
     C                     WRITE#CONFIRM
     C                     SETOF                     96    *
     C                     END
     C                     ELSE
     C                     MOVELY2INVL    ##CFCD           *CONFIRM
     C                     END
      *
     C   90                SETON                     29    *
     C  N90                SETOF                     29    *
     C                     END
      * Restore CMD keys
     C                     MOVEAWN30      *IN
      * Update job time
     C                     TIME           ##JTM
     C           ##CFCD    IFEQ 'Y'
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C                     END
     C           ##CFCD    COMP 'Y'                  9999  *
      * Not confirmed
      *================================================================
     CSR         EAEXIT    ENDSR
      /EJECT
     CSR         EBPR##    BEGSR
      *================================================================
      * Process record:
      *================================================================
      * Process add request
     C           W0PMD     CASEQ'ADD'     ECADRQ
      * Process update request
     C           W0PMD     CASNE'ADD'     EECHRQ
     C                     END
     C           W0RTN     IFEQ *BLANK
     C           W0PMD     IFEQ 'ADD'
      * Exit after successful add
     C                     MOVEL'N'       W0RPT
     C                     END
      * Restart program for next record
     C                     MOVEL'N'       W0TRN
     C                     END
      *================================================================
     CSR         EBEXIT    ENDSR
      /EJECT
     CSR         ECADRQ    BEGSR
      *================================================================
      * Process add request
      *================================================================
      * USER: Create DBF record
      * Crt M3 GL Inter Ctl   IF
     C                     Z-ADD99999     YL0001           MGL Sequence #
      * Rtv Last Seq #        RT - M3 GL Interface Control  * 
     C                     EXSR SARVGN
     C                     ADD  1         YL0001           MGL Sequence #
      * Crt M3 GL Inter Ctl   CR - M3 GL Interface Control  * 
     C                     EXSR SBCRRC
     C           W0RTN     IFEQ *BLANK
      * Send message '*Record added'
     C                     MOVEL'Y2U0011' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
      *================================================================
     CSR         ECEXIT    ENDSR
      /EJECT
     CSR         EECHRQ    BEGSR
      *================================================================
      * Process update request
      *================================================================
      * USER: Change DBF record
      * Chg M3 GL Inter Ctl   CH - M3 GL Interface Control  * 
     C                     EXSR SCCHRC
     C           W0RTN     IFNE *BLANK
      * Data update error
      * Reset screen fields if changed record
     C           W0RTN     CASEQ'Y2U0007' MBFL#1
     C                     END
     C                     ELSE
     C           YARDC     IFEQ 'Y'
      * Send message '*Record changed'
     C                     MOVEL'Y2U0012' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *================================================================
     CSR         EEEXIT    ENDSR
      /EJECT
     CSR         FACKPM    BEGSR
      *================================================================
      * Check passed parameters
      *================================================================
      * Is full key present?
     C           P1WLA1    IFEQ *ZERO                      MGL Sequence #
     C           P1RMCD    OREQ *BLANK                     MGL M3 Division
      * Not every key field passed - loop program
     C                     MOVEL'Y'       W0RPT   1
     C                     ELSE
      * Full key passed, so single shot program
     C                     MOVEL'N'       W0RPT
     C                     END
      *================================================================
     CSR         FAEXIT    ENDSR
      /EJECT
     CSR         GADSAK    BEGSR
      *================================================================
      * Set key screen conditioning indicators
      *================================================================
     C           W0PMD     COMP 'ADD'                    89*
      *================================================================
     CSR         GAEXIT    ENDSR
      /EJECT
     CSR         GBDSAD    BEGSR
      *================================================================
      * Set detail screen conditioning indicators
      *================================================================
     C           W0PMD     COMP 'ADD'                    89*
      * Protect key fields on detail screen
     C                     SETON                     88    *
     C                     MOVEL'0'       *IN79
     C           WUHNSS    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
     C           W0RPT     IFEQ 'N'
      * Disable key screen - not applicable
     C                     SETOF                     87    *
     C                     ELSE
      * Enable key screen
     C                     SETON                     87    *
     C                     END
      *================================================================
     CSR         GBEXIT    ENDSR
      /EJECT
     CSR         MAIZ#1    BEGSR
      *================================================================
      * Initialise record - except for key fields and "neither" paramete
      *================================================================
     C                     Z-ADD*ZERO     #1HDDT           MGL Selected Fr
     C                     Z-ADD*ZERO     #1HEDT           MGL Selected To
     C                     MOVEL*BLANK    #1AAVN           RS User Changed
     C                     Z-ADD*ZERO     #1AADT           RS Date Changed
     C                     Z-ADD*ZERO     #1AMTM           RS Time Changed
     C                     MOVEL*BLANK    #1AJST           RS Record Statu
     C                     MOVEL*BLANK    #1AHVN           RS Job
     C                     MOVEL*BLANK    #1AGVN           RS Program
     C                     MOVEL*BLANK    #1ABVN           RS User Added
     C                     Z-ADD*ZERO     #1ABDT           RS Date Added
     C                     Z-ADD*ZERO     #1ABTM           RS Time Added
     C                     Z-ADD*ZERO     #1WMA1           MGL Selected Ye
     C                     Z-ADD*ZERO     #1WNA1           MGL Selected Pe
     C                     MOVEL*BLANK    #1HWSS           Initial Load
     C                     MOVEL*BLANK    #1AMT1           MGL User Initia
     C                     MOVEL*BLANK    #1G1SS           MGL Process Sta
      *================================================================
     CSR         MAEXIT    ENDSR
      /EJECT
     CSR         MBFL#1    BEGSR
      *================================================================
      * Move @CBCPUO fields to screen
      *================================================================
     C                     Z-ADDCBWLA1    #1WLA1           MGL Sequence #
     C                     Z-ADDCBHDDT    #1HDDT           MGL Selected Fr
     C                     Z-ADDCBHEDT    #1HEDT           MGL Selected To
     C                     MOVELCBAAVN    #1AAVN           RS User Changed
     C                     Z-ADDCBAADT    #1AADT           RS Date Changed
     C                     Z-ADDCBAMTM    #1AMTM           RS Time Changed
     C                     MOVELCBAJST    #1AJST           RS Record Statu
     C                     MOVELCBAHVN    #1AHVN           RS Job
     C                     MOVELCBAGVN    #1AGVN           RS Program
     C                     MOVELCBABVN    #1ABVN           RS User Added
     C                     Z-ADDCBABDT    #1ABDT           RS Date Added
     C                     Z-ADDCBABTM    #1ABTM           RS Time Added
     C                     MOVELCBRMCD    #1RMCD           MGL M3 Division
     C                     Z-ADDCBWMA1    #1WMA1           MGL Selected Ye
     C                     Z-ADDCBWNA1    #1WNA1           MGL Selected Pe
     C                     MOVELCBHWSS    #1HWSS           Initial Load
     C                     MOVELCBAMT1    #1AMT1           MGL User Initia
     C                     MOVELCBG1SS    #1G1SS           MGL Process Sta
      * Hold existing record image
     C                     MOVEL@1DBRC    #1DBRC
      *================================================================
     CSR         MBEXIT    ENDSR
      /EJECT
     CSR         MDIZ#K    BEGSR
      *================================================================
      * Initialize key screen
      *================================================================
     C                     MOVELP2J8NB    #PJ8NB           Oms Warehouse C
     C                     Z-ADDP2HONB    #PHONB           CC Company Numb
     C                     MOVELP2C8CD    #PC8CD           Oms SalesPerson
     C                     MOVELP2G8ST    #PG8ST           Oms Allow Multi
     C                     MOVELP2G9ST    #PG9ST           Oms Default Pri
     C                     MOVELP2EUTX    #PEUTX           Oms Name
     C                     MOVELP2EVTX    #PEVTX           Oms System Valu
     C                     MOVELP2HAST    #PHAST           Oms Access Deni
     C                     Z-ADDP1WLA1    #1WLA1           MGL Sequence #
     C                     MOVELP1RMCD    #1RMCD           MGL M3 Division
      * USER: Initialize key screen
     C                     MOVELP1RMCD    #1RMCD           MGL M3 Division
      *================================================================
     CSR         MDEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Rtv Last Seq #        RT - M3 GL Interface Control  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KPSSA     KLIST
     C                     KFLD           WAWLA1           MGL Sequence #
      * Setup key
     C                     Z-ADDYL0001    WAWLA1           MGL Sequence #
      * Establish starting position
     C           KPSSA     SETLL@CBCPUP                    *
     C                     READ @CBCPUP                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK1365' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     YL0001           MGL Sequence #
     C                     GOTO SAEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWAWLA1    YL0001           MGL Sequence #
     C                     GOTO SAEXIT                     *QUIT
     C                     READ @CBCPUP                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBCRRC    BEGSR
      *================================================================
      * Crt M3 GL Inter Ctl   CR - M3 GL Interface Control  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move all fields to @CBCPUN
     C                     MOVEL#1RMCD    CBRMCD           MGL M3 Division
     C                     Z-ADDYL0001    CBWLA1           MGL Sequence #
     C                     Z-ADD#1WMA1    CBWMA1           MGL Selected Ye
     C                     Z-ADD#1WNA1    CBWNA1           MGL Selected Pe
     C                     Z-ADD#1HDDT    CBHDDT           MGL Selected Fr
     C                     Z-ADD#1HEDT    CBHEDT           MGL Selected To
     C                     MOVEL#1AMT1    CBAMT1           MGL User Initia
     C                     MOVEL#1G1SS    CBG1SS           MGL Process Sta
     C                     MOVEL#1HWSS    CBHWSS           Initial Load
     C                     MOVEL*BLANK    CBAAVN           RS User Changed
     C                     Z-ADD0         CBAADT           RS Date Changed
     C                     Z-ADD0         CBAMTM           RS Time Changed
     C                     MOVELWUAJST    CBAJST           RS Record Statu
     C                     MOVEL##JOB     CBAHVN           RS Job
     C                     MOVEL##PGM     CBAGVN           RS Program
     C                     MOVEL##USR     CBABVN           RS User Added
     C                     Z-ADD##JDT     CBABDT           RS Date Added
     C                     Z-ADD##JTM     CBABTM           RS Time Added
      *
      * USER: Processing before Data update
      * Rtv Add Stamp-Sys Dt  IF
     C                     MOVEL'A'       CBAJST           RS Record Statu
     C                     MOVEL##USR     CBABVN           RS User Added
      * Rtv System Date & Tim UP - STR User Source Functions  * 
     C                     CALL 'PKWDUPC'              90  Rtv System Date
     C           CBABDT    PARM *ZERO     WQ0001  70       *DATE
     C           CBABTM    PARM *ZERO     WQ0002  60       *TIME
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PKWDUPC' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     END
     C                     MOVEL##PGM     CBAGVN           RS Program
     C                     MOVEL##JOB     CBAHVN           RS Job
     C           KLCRSB    KLIST
     C                     KFLD           CBRMCD           MGL M3 Division
     C                     KFLD           CBWLA1           MGL Sequence #
      * Check for duplicate primary key
     C           KLCRSB    SETLL@CBCPUN                  90*
     C           *IN90     IFEQ '1'
     C                     MOVEL'PRK1366' W0RTN   7
      * Send message 'M3 GL Interface Contro EX'
     C                     MOVEL'PRK1366' ZAMSID
     C                     EXSR ZASNMS
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C                     WRITE@CBCPUN                91  *
      *
     C           *IN91     IFEQ '1'
      * Write error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
     C                     ENDIF
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCCHRC    BEGSR
      *================================================================
      * Chg M3 GL Inter Ctl   CH - M3 GL Interface Control  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YARDC   1
      *
      * Move key fields to @CBCPUN
     C                     MOVEL#1RMCD    CBRMCD    P      MGL M3 Division
     C                     Z-ADDP1WLA1    CBWLA1           MGL Sequence #
      *
     C           KLCHSC    KLIST
     C                     KFLD           CBRMCD           MGL M3 Division
     C                     KFLD           CBWLA1           MGL Sequence #
     C           KLCHSC    CHAIN@CBCPUN              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PLCBCPL0'MDACP
     C                     MOVEL'@CBCPUN' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL001.
     C                     MOVEL'LBL001'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SCEXIT
     C                     ENDIF
      *
      * Check for changed record
     C           #1DBRC    IFNE @1DBRC                     IF
     C                     MOVEL'Y2U0007' W0RTN   7
      * Send message '*Update not accepted'
     C                     MOVEL'Y2U0007' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
      * Release record lock
     C                     UNLCKPLCBCPL0               91  *
     C                     GOTO SCEXIT
     C                     ENDIF                           FI #1DBRC
      * Store record data for null update check
     C                     MOVE @1DBRC    YARDCS
      * Move non-key fields to @CBCPUN
     C                     Z-ADD#1WMA1    CBWMA1           MGL Selected Ye
     C                     Z-ADD#1WNA1    CBWNA1           MGL Selected Pe
     C                     Z-ADD#1HDDT    CBHDDT           MGL Selected Fr
     C                     Z-ADD#1HEDT    CBHEDT           MGL Selected To
     C                     MOVEL#1AMT1    CBAMT1    P      MGL User Initia
     C                     MOVEL#1G1SS    CBG1SS    P      MGL Process Sta
     C                     MOVEL#1HWSS    CBHWSS    P      Initial Load
     C                     MOVEL##USR     CBAAVN    P      RS User Changed
     C                     Z-ADD##JDT     CBAADT           RS Date Changed
     C                     Z-ADD##JTM     CBAMTM           RS Time Changed
     C                     MOVEL#1AJST    CBAJST    P      RS Record Statu
     C                     MOVEL#1AHVN    CBAHVN    P      RS Job
     C                     MOVEL#1AGVN    CBAGVN    P      RS Program
     C                     MOVEL#1ABVN    CBABVN    P      RS User Added
     C                     Z-ADD#1ABDT    CBABDT           RS Date Added
     C                     Z-ADD#1ABTM    CBABTM           RS Time Added
      *
      * Set PGM.*Record Data Changed flag
     C           @1DBRC    IFNE YARDCS
     C           YARDC     ANDNE'N'
     C                     MOVE 'Y'       YARDC
     C                     ENDIF
      * USER: Processing before Data update
      * Rtv Change Stamp-SysDtIF
     C                     MOVEL##USR     CBAAVN           RS User Changed
      * Rtv System Date & Tim UP - STR User Source Functions  * 
     C                     CALL 'PKWDUPC'              90  Rtv System Date
     C           CBAADT    PARM *ZERO     WQ0003  70       *DATE
     C           CBAMTM    PARM *ZERO     WQ0004  60       *TIME
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PKWDUPC' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     END
     C                     MOVEL##JOB     CBAHVN           RS Job
     C                     MOVEL##PGM     CBAGVN           RS Program
      * Set PGM.*Record Data Changed flag
     C           @1DBRC    IFNE YARDCS
     C           YARDC     ANDNE'N'
     C                     MOVE 'Y'       YARDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YARDC     IFEQ 'Y'
     C                     UPDAT@CBCPUN                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPLCBCPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * Update saved record image
     C                     MOVEL@1DBRC    #1DBRC
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * VAL Record exists     RT - M3 GL Interface Control  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WAWLA1    WQSD02           MGL Sequence #
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           WQSD02           MGL Sequence #
      * Setup key
     C                     Z-ADDP1WLA1    WQSD02           MGL Sequence #
      * Establish starting position
     C           KRSSD     SETLL@CBCPUP                    *
     C           KRSSD     READE@CBCPUP                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK1365' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     MOVEL'Y2U0003' W0RTN            *Return code
     C           KRSSD     READE@CBCPUP                  90*
     C                     ENDDO
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y1SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y1EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C           @#DFMT    IFEQ '#RCDKEY'
      * KEY Screen
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
     C                     ENDIF
     C           @#DFMT    IFEQ '#RCDDTL1'
      * DETAIL Screen
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
     C                     ENDIF
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZDVPMT    BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                     MOVEL*BLANK    YPMTFD 10
     C                     Z-ADD*ZERO     YAFSCH  40
     C                     Z-ADD*ZERO     YPMRRN  40
      *
     C           *IN04     IFEQ '1'
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50
     C                     MVR            ZHCSCL  50
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
     C           ZHCSRW    IFEQ 004
     C           ZHCSCL    ANDGE024
     C           ZHCSCL    ANDLE026
     C           @#DFMT    ANDEQ'#RCDKEY'
     C                     MOVEL'#1RMCD'  YPMTFD           MGL M3 Division
     C                     END
      *
     C           ZHCSRW    IFEQ 008
     C           ZHCSCL    ANDEQ025
     C           @#DFMT    ANDEQ'#RCDDTL1'
     C                     MOVEL'#1HWSS'  YPMTFD           Initial Load
     C                     END
      *
     C           ZHCSRW    IFEQ 011
     C           ZHCSCL    ANDEQ025
     C           @#DFMT    ANDEQ'#RCDDTL1'
     C           *IN79     ANDEQ'0'
     C                     MOVEL'#1G1SS'  YPMTFD           MGL Process Sta
     C                     END
      *
     C           YPMTFD    IFEQ *BLANK
      * Error if user defined prompting is not specified.
     C           W0PMT     IFEQ 'N'
     C                     MOVEL'*NONE'   YPMTFD
     C                     MOVEL'Y'       W0HLP   1
     C                     MOVEL'Y'       ZAFSMS
      * Send error message.
     C                     MOVEL'Y2U0101' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
     C                     END
      *================================================================
     CSR         ZDEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*CSRLOC' YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM 1         YYLGCT  50       # of grps
     C                     PARM W0GRP     YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel and exit from key screen
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Copy any undisplayed messages back to caller
     C                     CALL 'Y2CPMSC'
     C                     PARM           ##PGM
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     MOVEL*BLANK    P2J8NB           Oms Warehouse C
     C                     Z-ADD*ZERO     P2HONB           CC Company Numb
     C                     MOVEL*BLANK    P2C8CD           Oms SalesPerson
     C                     MOVEL*BLANK    P2G8ST           Oms Allow Multi
     C                     MOVEL*BLANK    P2G9ST           Oms Default Pri
     C                     MOVEL*BLANK    P2EUTX           Oms Name
     C                     MOVEL*BLANK    P2EVTX           Oms System Valu
     C                     MOVEL*BLANK    P2HAST           Oms Access Deni
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Obtain default message file
     C           *NAMVAR   DEFN PKMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAWLA1           MGL Sequence #
     C                     Z-ADD*ZERO     WAWMA1           MGL Selected Ye
     C                     Z-ADD*ZERO     WAWNA1           MGL Selected Pe
     C                     Z-ADD*ZERO     WAHDDT           MGL Selected Fr
     C                     Z-ADD*ZERO     WAHEDT           MGL Selected To
     C                     Z-ADD*ZERO     WAAADT           RS Date Changed
     C                     Z-ADD*ZERO     WAAMTM           RS Time Changed
     C                     Z-ADD*ZERO     WAABDT           RS Date Added
     C                     Z-ADD*ZERO     WAABTM           RS Time Added
      * Define work field RS Record Status
     C                     MOVEL*BLANK    WUAJST  1
      * Define work field Update Flag
     C                     MOVEL*BLANK    WUHNSS  1
      * Define work field CC Company Number
     C                     Z-ADD*ZERO     WUHONB  30
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'N'       W0PMT   1
      * Define local work field MGL Sequence #
     C                     Z-ADD*ZERO     YL0001  50
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   ##CMP
     C                     IN   *NAMVAR
      *................................................................
      * Select initial mode
     C           @1NROP    IFEQ *ZERO
      * Add mode
     C                     MOVEL'ADD'     W0PMD   3
     C                     ELSE
      * Change mode
     C                     MOVEL'CHG'     W0PMD
     C                     END
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      * Val Application/User  IF
      * Val Application/User  XF - STR Order Management Sys  * 
     C                     CALL 'PDGXXFR'              90  Val Application
     C                     PARM *BLANK    W0RTN   7
     C           P2J8NB    PARM *BLANK    WQ0005  3        Oms Warehouse C
     C           WUHONB    PARM *ZERO     WQ0006  30       CC Company Numb
     C                     PARM 'HPE'     WQ0007  6        Oms Application
     C           P2C8CD    PARM *BLANK    WQ0008  3        Oms SalesPerson
     C           P2G8ST    PARM *BLANK    WQ0009  1        Oms Allow Multi
     C           P2G9ST    PARM *BLANK    WQ0010 10        Oms Default Pri
     C           P2EUTX    PARM *BLANK    WQ0011 30        Oms Name
     C           P2EVTX    PARM *BLANK    WQ0012 40        Oms System Valu
     C           P2HAST    PARM *BLANK    WQ0013  1        Oms Access Deni
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDGXXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PAR.Oms Access Denied (Y/N) is Yes
     C           P2HAST    IFEQ 'Y'                        *IF
      * Send message 'Access Denied for User'
     C                     MOVEL'PRK0298' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * Mov ApplN to Company  US - STR User Source Functions  * 
     C***   MOVE USER SOURCE                      ***
     C                     MOVELP2EVTX    ##CMP
     C                     END                             *FI
      * VAL Record exists     RT - M3 GL Interface Control  * 
     C                     EXSR SDRVGN
      * CASE: PGM.*Return code is *Record already exists
     C           W0RTN     IFEQ @CN,001                    *IF
     C                     MOVEL'Y'       WUHNSS           Update Flag
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUHNSS           Update Flag
     C                     END                             *FI
      *================================================================
     CSR         ZZEXIT    ENDSR
** @CN
00001 Y2U0003
