**free
//*****************************************************************************
// Company: Seaboard Foods Inc.
// Author : Santosh Patil
// Desc   : Get Period Number, Century, Fiscal Year based on Company Number.
// Date   : 03/04/2025
//*****************************************************************************
// Modification Log
// Date        Author    Issue#     Desc
// MM/DD/YYYY
//*****************************************************************************

//*****************************************************************************
// Control Level specifications
//*****************************************************************************
   Ctl-Opt AlwNull(*UsrCtl)
        Option(*NoDebugIO:*SrcStmt)
        DftActGrp(*NO);
//*****************************************************************************
// File Level specifications
//*****************************************************************************
   dcl-f E10010L1 disk usage(*input) keyed;
   dcl-f E10008L1 disk usage(*input) keyed;
//*****************************************************************************
// Declare program prototypes
//*****************************************************************************
   dcl-pr E1FYPER extpgm('E1FYPER');
    *n char(5);
    *n packed(6:0);
    *n packed(2:0);
    *n packed(2:0);
    *n packed(2:0);
    *n char(1);
   end-pr;

   dcl-pi E1FYPER;
      p_Company       char(5);
      p_Julian_Date   packed(6:0);
      p_Fiscal_Period packed(2:0);
      p_Fiscal_Year   packed(2:0);
      p_Century       packed(2:0);
      p_Error_Flag    char(1);
    end-pi;

//*****************************************************************************
// Declare Variables
//*****************************************************************************
    dcl-s l_Fiscal_Year packed(2:0) inz(0);
    dcl-s l_Fiscal_Period packed(2:0) inz(0);
    dcl-s l_blanks char(4) inz(' ');
    dcl-s l_Company char(5) inz(' ');
//*****************************************************************************
// Main Program
//*****************************************************************************
       monitor;
         p_Error_Flag = 'N';
         p_Fiscal_Period = 0;
         p_Fiscal_Year   = 0;
         p_Century       = 0;
         l_Company = '00' + %trim(p_Company);

       // Check entry for the Company in "Company Constants  F0010"
         chain (l_Company) E10010L1;
         if %found();
            l_Fiscal_Year = CCDFF;
            // Check in file "Date Constants     F0008"
            chain (CCDTPN:CCDFF:CCDFYJ:l_blanks) E10008L1;
            if %found();
               if p_Julian_Date < CDD01J;
                  p_Fiscal_Period = 1;
               Elseif p_Julian_Date > CDD01J and p_Julian_Date <= CDD02J;
                  p_Fiscal_Period = 2;
               Elseif p_Julian_Date > CDD02J and p_Julian_Date <= CDD03J;
                  p_Fiscal_Period = 3;
               Elseif p_Julian_Date > CDD03J and p_Julian_Date <= CDD04J;
                  p_Fiscal_Period = 4;
               Elseif p_Julian_Date > CDD04J and p_Julian_Date <= CDD05J;
                  p_Fiscal_Period = 5;
               Elseif p_Julian_Date > CDD05J and p_Julian_Date <= CDD06J;
                  p_Fiscal_Period = 6;
               Elseif p_Julian_Date > CDD06J and p_Julian_Date <= CDD07J;
                  p_Fiscal_Period = 7;
               Elseif p_Julian_Date > CDD07J and p_Julian_Date <= CDD08J;
                  p_Fiscal_Period = 8;
               Elseif p_Julian_Date > CDD08J and p_Julian_Date <= CDD09J;
                  p_Fiscal_Period = 9;
               Elseif p_Julian_Date > CDD09J and p_Julian_Date <= CDD10J;
                  p_Fiscal_Period = 10;
               Elseif p_Julian_Date > CDD10J and p_Julian_Date <= CDD11J;
                  p_Fiscal_Period = 11;
               Elseif p_Julian_Date > CDD11J and p_Julian_Date <= CDD12J;
                  p_Fiscal_Period = 12;
               endif;
               if p_Fiscal_Period <> 0;
                  p_Fiscal_Year = l_Fiscal_Year;
                  p_Century = CDCTRY;
               endif;
            endif;
         endif;

       On-error;
         p_Error_Flag = 'Y';
       Endmon;
      *inlr = *on ;
