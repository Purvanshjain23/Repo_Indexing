// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PLD4XFR
// ?Date: 14.08.2025 Time: 02:53:53
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Modifications and Comments
DO;

//?E3814 JJH 10/07/15 - Recompile because PS Premises ID added to
//?  Producer Site. - No logic changes.
//?H16853 ISE 11/02/2020 CHANGE BUY ORDER NUMBER FIELD LENGTH FROM 5 TO 7
ENDDO;

//?Read BOL with KIll Date paid -- Crt/Upd DT with Sum fields
EXECUTE FUNCTION(Rtv DT BOL Sum Fields RT) TYPE(RTVOBJ) FILE(PKAXCPP)           AB1256658;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.BOL_Kill_Date);
{
 //?USER: Process Data record

 //?Create DT if not there. Status 2 = NO dont display edit screen after creat
 //?slm 08032011
 //?do not need to allow the trk arrival to be schedule
 // Call program Edt Delivery Tracking XF.
 CALL PROGRAM(Edt Delivery Tracking XF) ('PLA0XFR');
 PARAMETER(*ZERO);
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER('N');
 PARAMETER(*BLANK);

 // PAR.DT Avg Weight Received = CON.*ZERO
 PAR.DT_Avg_Weight_Received = *ZERO;

 // PAR.DT Avg Weight Market = CON.*ZERO
 PAR.DT_Avg_Weight_Market = *ZERO;

 // PAR.DT Avg Weight Resale = CON.*ZERO
 PAR.DT_Avg_Weight_Resale = *ZERO;

 EXECUTE FUNCTION(Rtv Upd DT w/TH Sums  RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1256656;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(PAR.DT_Head_Received);
 PARAMETER(PAR.DT_Weight_Received);
 PARAMETER(PAR.DT_Head_DOA);
 PARAMETER(PAR.DT_Weight_DOA);
 PARAMETER(PAR.DT_Head_Yard_Dead);
 PARAMETER(PAR.DT_Weight_Yard_Dead);
 PARAMETER(PAR.DT_Head_Condemned);
 PARAMETER(PAR.DT_Weight_Condemned);
 PARAMETER(PAR.DT_Head_Held_Over);
 PARAMETER(PAR.DT_Weight_Held_Over);
 PARAMETER(PAR.DT_Head_Killed);
 PARAMETER(PAR.DT_Weight_Killed);
 PARAMETER(PAR.DT_Head_Market);
 PARAMETER(PAR.DT_Weight_Market);
 PARAMETER(PAR.DT_Head_Resale);
 PARAMETER(PAR.DT_Weight_Resale);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  // PAR.DT Head Received = PAR.DT Head Received + DB1.TH Head Received
  PAR.DT_Head_Received = PAR.DT_Head_Received + DB1.TH_Head_Received;

  // PAR.DT Weight Received = PAR.DT Weight Received + DB1.TH Live Wgt
  PAR.DT_Weight_Received = PAR.DT_Weight_Received + DB1.TH_Live_Wgt;

  // PAR.DT Head DOA = PAR.DT Head DOA + DB1.TH Dead On Arrival
  PAR.DT_Head_DOA = PAR.DT_Head_DOA + DB1.TH_Dead_On_Arrival;

  // Compute: Weight DOA
  PAR.DT_Weight_DOA = PAR.DT_Weight_DOA + ( DB1.TH_Dead_On_Arrival * DB1.TH_Avg_Live_Wgt );

  // PAR.DT Head Yard Dead = PAR.DT Head Yard Dead + DB1.TH Yard Deads
  PAR.DT_Head_Yard_Dead = PAR.DT_Head_Yard_Dead + DB1.TH_Yard_Deads;

  // Compute: Weight yard dead
  PAR.DT_Weight_Yard_Dead = PAR.DT_Weight_Yard_Dead + ( DB1.TH_Yard_Deads
  * DB1.TH_Avg_Live_Wgt );

  // PAR.DT Head Condemned = PAR.DT Head Condemned + DB1.TH Head Condemned
  PAR.DT_Head_Condemned = PAR.DT_Head_Condemned + DB1.TH_Head_Condemned;

  // Compute: Weight Condemn
  PAR.DT_Weight_Condemned = PAR.DT_Weight_Condemned + ( DB1.TH_Head_Condemned
  * DB1.TH_Avg_Live_Wgt );

  CASE;

  // IF DB1.TH Held Over Record is Yes
  IF DB1.TH_Held_Over_Record = 'Y';

  // PAR.DT Head Held Over = PAR.DT Head Held Over + DB1.TH Head Received
  PAR.DT_Head_Held_Over = PAR.DT_Head_Held_Over + DB1.TH_Head_Received;

  // PAR.DT Weight Held Over = PAR.DT Weight Held Over + DB1.TH Live Wgt
  PAR.DT_Weight_Held_Over = PAR.DT_Weight_Held_Over + DB1.TH_Live_Wgt;

  ENDIF;

  // PAR.DT Head Killed = PAR.DT Head Killed + DB1.TH Head Killed
  PAR.DT_Head_Killed = PAR.DT_Head_Killed + DB1.TH_Head_Killed;

  //?Sum per Class
  CASE;

  // IF DB1.TH Hog Class Type is Market
  IF DB1.TH_Hog_Class_Type = 'M';

  // PAR.DT Head Market = PAR.DT Head Market + DB1.TH Head Received
  PAR.DT_Head_Market = PAR.DT_Head_Market + DB1.TH_Head_Received;

  // PAR.DT Weight Market = PAR.DT Weight Market + DB1.TH Live Wgt
  PAR.DT_Weight_Market = PAR.DT_Weight_Market + DB1.TH_Live_Wgt;

  // PAR.DT Weight Killed = PAR.DT Weight Killed + DB1.TH Adj Live Wgt
  PAR.DT_Weight_Killed = PAR.DT_Weight_Killed + DB1.TH_Adj_Live_Wgt;

  //?Sum per Class
  // IF DB1.TH Hog Class Type is Resale
  IF DB1.TH_Hog_Class_Type = 'R';

  // PAR.DT Head Resale = PAR.DT Head Resale + DB1.TH Head Received
  PAR.DT_Head_Resale = PAR.DT_Head_Resale + DB1.TH_Head_Received;

  // PAR.DT Weight Resale = PAR.DT Weight Resale + DB1.TH Live Wgt
  PAR.DT_Weight_Resale = PAR.DT_Weight_Resale + DB1.TH_Live_Wgt;

  ENDIF;

 }

 CASE;

 // IF PAR.DT Head Received is Not Zero
 IF PAR.DT_Head_Received <> *ZERO;

 // PAR.DT Avg Weight Received = PAR.DT Weight Received / PAR.DT Head Received *
 PAR.DT_Avg_Weight_Received = PAR.DT_Weight_Received / PAR.DT_Head_Received;

 ENDIF;

 CASE;

 // IF PAR.DT Head Market is Not Zero
 IF PAR.DT_Head_Market <> *ZERO;

 // PAR.DT Avg Weight Market = PAR.DT Weight Market / PAR.DT Head Market *
 PAR.DT_Avg_Weight_Market = PAR.DT_Weight_Market / PAR.DT_Head_Market;

 ENDIF;

 CASE;

 // IF PAR.DT Head Resale is Not Zero
 IF PAR.DT_Head_Resale <> *ZERO;

 // PAR.DT Avg Weight Resale = PAR.DT Weight Resale / PAR.DT Head Resale *
 PAR.DT_Avg_Weight_Resale = PAR.DT_Weight_Resale / PAR.DT_Head_Resale;

 ENDIF;

 //?* 03/02/04 PKD Added calculation for Delivered Head.
 EXECUTE FUNCTION(Rtv/Chg with BOL Sums RT) TYPE(RTVOBJ) FILE(PLAFCPP)           AB1256659;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(PAR.DT_Head_Received);
 PARAMETER(PAR.DT_Weight_Received);
 PARAMETER(PAR.DT_Avg_Weight_Received);
 PARAMETER(PAR.DT_Head_DOA);
 PARAMETER(PAR.DT_Weight_DOA);
 PARAMETER(PAR.DT_Head_Yard_Dead);
 PARAMETER(PAR.DT_Weight_Yard_Dead);
 PARAMETER(PAR.DT_Head_Condemned);
 PARAMETER(PAR.DT_Weight_Condemned);
 PARAMETER(PAR.DT_Head_Held_Over);
 PARAMETER(PAR.DT_Weight_Held_Over);
 PARAMETER(PAR.DT_Head_Killed);
 PARAMETER(PAR.DT_Weight_Killed);
 PARAMETER(PAR.DT_Head_Market);
 PARAMETER(PAR.DT_Weight_Market);
 PARAMETER(PAR.DT_Avg_Weight_Market);
 PARAMETER(PAR.DT_Head_Resale);
 PARAMETER(PAR.DT_Weight_Resale);
 PARAMETER(PAR.DT_Avg_Weight_Resale);
 {
  //?USER: Process Data record

  // PAR.DT Delivered Weight lbs = DB1.DT Delivered Head * PAR.DT Avg Weight Market *Rounded
  PAR.DT_Delivered_Weight_lbs = DB1.DT_Delivered_Head * PAR.DT_Avg_Weight_Market 'H';

  EXECUTE FUNCTION(Chg DT BOl Sum fields CH) TYPE(CHGOBJ) FILE(PLAFCPP)           AB1256660;
  PARAMETER(DB1.CC_Company_Number);
  PARAMETER(DB1.DSH_Kill_Date);
  PARAMETER(DB1.DT_Delivery_Date);
  PARAMETER(DB1.DT_Delivery_Time);
  PARAMETER(DB1.DT_Delivery_Time_Seq);
  PARAMETER(PAR.DT_Delivered_Weight_lbs);
  PARAMETER(DB1.DSD_Scheduled_Delv_Head);
  PARAMETER(PAR.DT_Head_Received);
  PARAMETER(PAR.DT_Weight_Received);
  PARAMETER(PAR.DT_Avg_Weight_Received);
  PARAMETER(PAR.DT_Head_DOA);
  PARAMETER(PAR.DT_Weight_DOA);
  PARAMETER(PAR.DT_Head_Yard_Dead);
  PARAMETER(PAR.DT_Weight_Yard_Dead);
  PARAMETER(PAR.DT_Head_Condemned);
  PARAMETER(PAR.DT_Weight_Condemned);
  PARAMETER(PAR.DT_Head_Held_Over);
  PARAMETER(PAR.DT_Weight_Held_Over);
  PARAMETER(PAR.DT_Head_Killed);
  PARAMETER(PAR.DT_Weight_Killed);
  PARAMETER(PAR.DT_Head_Market);
  PARAMETER(PAR.DT_Weight_Market);
  PARAMETER(PAR.DT_Avg_Weight_Market);
  PARAMETER(PAR.DT_Head_Resale);
  PARAMETER(PAR.DT_Weight_Resale);
  PARAMETER(PAR.DT_Avg_Weight_Resale);
  {
   //?USER: Processing before Data read

   //?E2423 Mtech Live or Not Live *** Interfaces to HPS ***
   //?Get the MTech Live Yes or No
   DO;

   //?Mtech Live Yes or no
   // Call program Rtv Company Values    XF.
   CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
   PARAMETER(PAR.CC_Company_Number);
   PARAMETER('MTECHLIVE');
   PARAMETER(WRK.System_Value_Alpha_USR);

   // LCL.MTech Live Yes or No = WRK.System Value Alpha    USR
   LCL.MTech_Live_Yes_or_No = WRK.System_Value_Alpha_USR;

   ENDDO;

   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // PAR.RS Date Changed = JOB.*Job date
    PAR.RS_Date_Changed = JOB.*Job_date;

    // PAR.RS Time Changed = JOB.*Job time
    PAR.RS_Time_Changed = JOB.*Job_time;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

   //?USER: Processing after Data update

   CASE;

   // IF LCL.MTech Live Yes or No is No MTech not Live
   IF LCL.MTech_Live_Yes_or_No = 'N';

   CASE;

   // IF DB1.DT Source Type is Internal
   IF DB1.DT_Source_Type = 'I';

   // PAR.DT Movement Number = DB1.DT Movement Number
   PAR.DT_Movement_Number = DB1.DT_Movement_Number;

   // Call program Z1d Shppd Mvmnts f/DT UP.
   CALL PROGRAM(Z1d Shppd Mvmnts f/DT UP) ('HP278');
   PARAMETER(DB1.CC_Company_Number);
   PARAMETER(DB1.DSH_Kill_Date);
   PARAMETER(DB1.DT_Delivery_Date);
   PARAMETER(DB1.DT_Delivery_Time);
   PARAMETER(DB1.DT_Delivery_Time_Seq);
   PARAMETER(PAR.DT_Movement_Number);

   ENDIF;

   // IF LCL.MTech Live Yes or No is Yes MTech is Live
   IF LCL.MTech_Live_Yes_or_No = 'Y';

   //?Un Schedule Loads will no longer assign a next movement number
   //?from the HPS application
   //?The movement number on the bill of lading will be used
   //?the users will now enter this movement number for unschedule
   //?loads
   ENDIF;

  }

 }

}


//?Read TH that were held over for the Kill Date paid. Their BOL were
//?  processed on the previous day. And re-calc/upd DT sum fields
EXECUTE FUNCTION(Rtv HldOvr Upd DT Sum RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1256728;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.BOL_Kill_Date);
{
 //?USER: Process Data record

 CASE;

 // IF DB1.TH Held Over Record is Yes
 IF DB1.TH_Held_Over_Record = 'Y';

 // PAR.DT Avg Weight Received = CON.*ZERO
 PAR.DT_Avg_Weight_Received = *ZERO;

 // PAR.DT Avg Weight Market = CON.*ZERO
 PAR.DT_Avg_Weight_Market = *ZERO;

 // PAR.DT Avg Weight Resale = CON.*ZERO
 PAR.DT_Avg_Weight_Resale = *ZERO;

 EXECUTE FUNCTION(Rtv Upd DT w/TH Sums  RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1256656;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(PAR.DT_Head_Received);
 PARAMETER(PAR.DT_Weight_Received);
 PARAMETER(PAR.DT_Head_DOA);
 PARAMETER(PAR.DT_Weight_DOA);
 PARAMETER(PAR.DT_Head_Yard_Dead);
 PARAMETER(PAR.DT_Weight_Yard_Dead);
 PARAMETER(PAR.DT_Head_Condemned);
 PARAMETER(PAR.DT_Weight_Condemned);
 PARAMETER(PAR.DT_Head_Held_Over);
 PARAMETER(PAR.DT_Weight_Held_Over);
 PARAMETER(PAR.DT_Head_Killed);
 PARAMETER(PAR.DT_Weight_Killed);
 PARAMETER(PAR.DT_Head_Market);
 PARAMETER(PAR.DT_Weight_Market);
 PARAMETER(PAR.DT_Head_Resale);
 PARAMETER(PAR.DT_Weight_Resale);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  // PAR.DT Head Received = PAR.DT Head Received + DB1.TH Head Received
  PAR.DT_Head_Received = PAR.DT_Head_Received + DB1.TH_Head_Received;

  // PAR.DT Weight Received = PAR.DT Weight Received + DB1.TH Live Wgt
  PAR.DT_Weight_Received = PAR.DT_Weight_Received + DB1.TH_Live_Wgt;

  // PAR.DT Head DOA = PAR.DT Head DOA + DB1.TH Dead On Arrival
  PAR.DT_Head_DOA = PAR.DT_Head_DOA + DB1.TH_Dead_On_Arrival;

  // Compute: Weight DOA
  PAR.DT_Weight_DOA = PAR.DT_Weight_DOA + ( DB1.TH_Dead_On_Arrival * DB1.TH_Avg_Live_Wgt );

  // PAR.DT Head Yard Dead = PAR.DT Head Yard Dead + DB1.TH Yard Deads
  PAR.DT_Head_Yard_Dead = PAR.DT_Head_Yard_Dead + DB1.TH_Yard_Deads;

  // Compute: Weight yard dead
  PAR.DT_Weight_Yard_Dead = PAR.DT_Weight_Yard_Dead + ( DB1.TH_Yard_Deads
  * DB1.TH_Avg_Live_Wgt );

  // PAR.DT Head Condemned = PAR.DT Head Condemned + DB1.TH Head Condemned
  PAR.DT_Head_Condemned = PAR.DT_Head_Condemned + DB1.TH_Head_Condemned;

  // Compute: Weight Condemn
  PAR.DT_Weight_Condemned = PAR.DT_Weight_Condemned + ( DB1.TH_Head_Condemned
  * DB1.TH_Avg_Live_Wgt );

  CASE;

  // IF DB1.TH Held Over Record is Yes
  IF DB1.TH_Held_Over_Record = 'Y';

  // PAR.DT Head Held Over = PAR.DT Head Held Over + DB1.TH Head Received
  PAR.DT_Head_Held_Over = PAR.DT_Head_Held_Over + DB1.TH_Head_Received;

  // PAR.DT Weight Held Over = PAR.DT Weight Held Over + DB1.TH Live Wgt
  PAR.DT_Weight_Held_Over = PAR.DT_Weight_Held_Over + DB1.TH_Live_Wgt;

  ENDIF;

  // PAR.DT Head Killed = PAR.DT Head Killed + DB1.TH Head Killed
  PAR.DT_Head_Killed = PAR.DT_Head_Killed + DB1.TH_Head_Killed;

  //?Sum per Class
  CASE;

  // IF DB1.TH Hog Class Type is Market
  IF DB1.TH_Hog_Class_Type = 'M';

  // PAR.DT Head Market = PAR.DT Head Market + DB1.TH Head Received
  PAR.DT_Head_Market = PAR.DT_Head_Market + DB1.TH_Head_Received;

  // PAR.DT Weight Market = PAR.DT Weight Market + DB1.TH Live Wgt
  PAR.DT_Weight_Market = PAR.DT_Weight_Market + DB1.TH_Live_Wgt;

  // PAR.DT Weight Killed = PAR.DT Weight Killed + DB1.TH Adj Live Wgt
  PAR.DT_Weight_Killed = PAR.DT_Weight_Killed + DB1.TH_Adj_Live_Wgt;

  //?Sum per Class
  // IF DB1.TH Hog Class Type is Resale
  IF DB1.TH_Hog_Class_Type = 'R';

  // PAR.DT Head Resale = PAR.DT Head Resale + DB1.TH Head Received
  PAR.DT_Head_Resale = PAR.DT_Head_Resale + DB1.TH_Head_Received;

  // PAR.DT Weight Resale = PAR.DT Weight Resale + DB1.TH Live Wgt
  PAR.DT_Weight_Resale = PAR.DT_Weight_Resale + DB1.TH_Live_Wgt;

  ENDIF;

 }

 CASE;

 // IF PAR.DT Head Received is Not Zero
 IF PAR.DT_Head_Received <> *ZERO;

 // PAR.DT Avg Weight Received = PAR.DT Weight Received / PAR.DT Head Received *
 PAR.DT_Avg_Weight_Received = PAR.DT_Weight_Received / PAR.DT_Head_Received;

 ENDIF;

 CASE;

 // IF PAR.DT Head Market is Not Zero
 IF PAR.DT_Head_Market <> *ZERO;

 // PAR.DT Avg Weight Market = PAR.DT Weight Market / PAR.DT Head Market *
 PAR.DT_Avg_Weight_Market = PAR.DT_Weight_Market / PAR.DT_Head_Market;

 ENDIF;

 CASE;

 // IF PAR.DT Head Resale is Not Zero
 IF PAR.DT_Head_Resale <> *ZERO;

 // PAR.DT Avg Weight Resale = PAR.DT Weight Resale / PAR.DT Head Resale *
 PAR.DT_Avg_Weight_Resale = PAR.DT_Weight_Resale / PAR.DT_Head_Resale;

 ENDIF;

 EXECUTE FUNCTION(Rtv/Chg with BOL Sums RT) TYPE(RTVOBJ) FILE(PLAFCPP)           AB1256659;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(PAR.DT_Head_Received);
 PARAMETER(PAR.DT_Weight_Received);
 PARAMETER(PAR.DT_Avg_Weight_Received);
 PARAMETER(PAR.DT_Head_DOA);
 PARAMETER(PAR.DT_Weight_DOA);
 PARAMETER(PAR.DT_Head_Yard_Dead);
 PARAMETER(PAR.DT_Weight_Yard_Dead);
 PARAMETER(PAR.DT_Head_Condemned);
 PARAMETER(PAR.DT_Weight_Condemned);
 PARAMETER(PAR.DT_Head_Held_Over);
 PARAMETER(PAR.DT_Weight_Held_Over);
 PARAMETER(PAR.DT_Head_Killed);
 PARAMETER(PAR.DT_Weight_Killed);
 PARAMETER(PAR.DT_Head_Market);
 PARAMETER(PAR.DT_Weight_Market);
 PARAMETER(PAR.DT_Avg_Weight_Market);
 PARAMETER(PAR.DT_Head_Resale);
 PARAMETER(PAR.DT_Weight_Resale);
 PARAMETER(PAR.DT_Avg_Weight_Resale);
 {
  //?USER: Process Data record

  // PAR.DT Delivered Weight lbs = DB1.DT Delivered Head * PAR.DT Avg Weight Market *Rounded
  PAR.DT_Delivered_Weight_lbs = DB1.DT_Delivered_Head * PAR.DT_Avg_Weight_Market 'H';

  EXECUTE FUNCTION(Chg DT BOl Sum fields CH) TYPE(CHGOBJ) FILE(PLAFCPP)           AB1256660;
  PARAMETER(DB1.CC_Company_Number);
  PARAMETER(DB1.DSH_Kill_Date);
  PARAMETER(DB1.DT_Delivery_Date);
  PARAMETER(DB1.DT_Delivery_Time);
  PARAMETER(DB1.DT_Delivery_Time_Seq);
  PARAMETER(PAR.DT_Delivered_Weight_lbs);
  PARAMETER(DB1.DSD_Scheduled_Delv_Head);
  PARAMETER(PAR.DT_Head_Received);
  PARAMETER(PAR.DT_Weight_Received);
  PARAMETER(PAR.DT_Avg_Weight_Received);
  PARAMETER(PAR.DT_Head_DOA);
  PARAMETER(PAR.DT_Weight_DOA);
  PARAMETER(PAR.DT_Head_Yard_Dead);
  PARAMETER(PAR.DT_Weight_Yard_Dead);
  PARAMETER(PAR.DT_Head_Condemned);
  PARAMETER(PAR.DT_Weight_Condemned);
  PARAMETER(PAR.DT_Head_Held_Over);
  PARAMETER(PAR.DT_Weight_Held_Over);
  PARAMETER(PAR.DT_Head_Killed);
  PARAMETER(PAR.DT_Weight_Killed);
  PARAMETER(PAR.DT_Head_Market);
  PARAMETER(PAR.DT_Weight_Market);
  PARAMETER(PAR.DT_Avg_Weight_Market);
  PARAMETER(PAR.DT_Head_Resale);
  PARAMETER(PAR.DT_Weight_Resale);
  PARAMETER(PAR.DT_Avg_Weight_Resale);
  {
   //?USER: Processing before Data read

   //?E2423 Mtech Live or Not Live *** Interfaces to HPS ***
   //?Get the MTech Live Yes or No
   DO;

   //?Mtech Live Yes or no
   // Call program Rtv Company Values    XF.
   CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
   PARAMETER(PAR.CC_Company_Number);
   PARAMETER('MTECHLIVE');
   PARAMETER(WRK.System_Value_Alpha_USR);

   // LCL.MTech Live Yes or No = WRK.System Value Alpha    USR
   LCL.MTech_Live_Yes_or_No = WRK.System_Value_Alpha_USR;

   ENDDO;

   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // PAR.RS Date Changed = JOB.*Job date
    PAR.RS_Date_Changed = JOB.*Job_date;

    // PAR.RS Time Changed = JOB.*Job time
    PAR.RS_Time_Changed = JOB.*Job_time;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

   //?USER: Processing after Data update

   CASE;

   // IF LCL.MTech Live Yes or No is No MTech not Live
   IF LCL.MTech_Live_Yes_or_No = 'N';

   CASE;

   // IF DB1.DT Source Type is Internal
   IF DB1.DT_Source_Type = 'I';

   // PAR.DT Movement Number = DB1.DT Movement Number
   PAR.DT_Movement_Number = DB1.DT_Movement_Number;

   // Call program Z1d Shppd Mvmnts f/DT UP.
   CALL PROGRAM(Z1d Shppd Mvmnts f/DT UP) ('HP278');
   PARAMETER(DB1.CC_Company_Number);
   PARAMETER(DB1.DSH_Kill_Date);
   PARAMETER(DB1.DT_Delivery_Date);
   PARAMETER(DB1.DT_Delivery_Time);
   PARAMETER(DB1.DT_Delivery_Time_Seq);
   PARAMETER(PAR.DT_Movement_Number);

   ENDIF;

   // IF LCL.MTech Live Yes or No is Yes MTech is Live
   IF LCL.MTech_Live_Yes_or_No = 'Y';

   //?Un Schedule Loads will no longer assign a next movement number
   //?from the HPS application
   //?The movement number on the bill of lading will be used
   //?the users will now enter this movement number for unschedule
   //?loads
   ENDIF;

  }

 }

 ENDIF;

}


