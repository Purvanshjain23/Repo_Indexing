     H/TITLE TST Delivery Dt Calc   PV Prompt & validate record
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Prompts fields, allowing user changes
     H* - Validates fields
     H* - If valid, performs an action
      *
     H* Generated by  : COOL:2E  Version: 62010
     H* Function type : Prompt & validate record
      *
     H* Company       : OMS Development Model         lopment-
     H* System        : OMS Development Model
     H* User name     : ISPPATE
     H* Date          : 06/03/99  Time  : 13:11:16
     H* Copyright     : OMS Development Model         lopment-
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCAVLLSL0IF  E           K        DISK
      * Values list details file
      *
     FPDXAPVR#CF  E                    WORKSTN
     F                                              KINFDS INFDS#
      * DSP: TST Delivery Dt Calc   PV Prompt & validate record
      *
     FCAADREL1IF  E           K        DISK
      * RTV : Warehouse                 Retrieval index       NV
      *
     FPDLGCPL2IF  E           K        DISK
      * RSQ : Legal Run Mileage/Hours   Rtv Index w/ Desc Miles
      *
      * Days in month for date validation
     E                    @XD    12  12  2 0
     E                    YDOW        7  1               *Days of week
     I@ADREAO
      * Warehouse                 Retrieval index       NV
      * Renamed input format fields
     I              ADAJCD                          WAAJCD
     I              ADF8NA                          WAF8NA
     I              ADACNA                          WAACNA
     I              ADADNA                          WAADNA
     I              ADAENA                          WAAENA
     I              ADAJNA                          WAAJNA
     I              ADBTTX                          WABTTX
     I              ADAOCD                          WAAOCD
     I              ADBGCD                          WABGCD
     I              ADVHST                          WAVHST
     I              ADMPNA                          WAMPNA
     I              ADWPST                          WAWPST
     I              ADXUST                          WAXUST
     I              ADT0ST                          WAT0ST
     I              ADT1ST                          WAT1ST
     I              ADDBNB                          WADBNB
     I              ADT2ST                          WAT2ST
     I              ADT3ST                          WAT3ST
     I              ADT4ST                          WAT4ST
     I              ADT6ST                          WAT6ST
     I              ADT7ST                          WAT7ST
     I              ADT8ST                          WAT8ST
     I              ADUVST                          WAUVST
     I              ADUWST                          WAUWST
     I              ADUXST                          WAUXST
     I              ADVSST                          WAVSST
     I              ADAATM                          WAAATM
     I              ADAYNA                          WAAYNA
     I              ADA0NA                          WAA0NA
     I              ADAXDT                          WAAXDT
      *
     I@LGCPNM
      * Legal Run Mileage/Hours   Rtv Index w/ Desc Miles
      * Renamed input format fields
     I              LGMILE                          WBMILE
     I              LGHRRQ                          WBHRRQ
     I              LGAATM                          WBAATM
     I              LGAYNA                          WBAYNA
     I              LGA0NA                          WBA0NA
     I              LGAXDT                          WBAXDT
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXTCK        DS
      * Time: hours, minutes, seconds
     I                                        1   60XTTIM
     I                                        1   20XTHH
     I                                        3   40XTNN
     I                                        5   60XTSS
      /EJECT
     IXDOFF       DS
      * Cut-off year
     I                                        1   40XOFF
     I                                        3   40XOFFYY
      /EJECT
     IXD2T        DS
      * Internal date
     I                                        1   70XDINT2
     I                                        1   30XDINY2
     I                                        4   50XDINM2
     I                                        6   70XDIND2
      /EJECT
     IXTCK2       DS
      * Time: hours, minutes, seconds (2)
     I                                        1   60XTTIM2
     I                                        1   20XTHH2
     I                                        3   40XTNN2
     I                                        5   60XTSS2
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Conduct screen conversation
     C                     DO   *HIVAL
      * Start new transaction
     C                     MOVEL'Y'       W0TRN   1
      * Process current transaction
     C           W0TRN     DOWEQ'Y'
      * Convert fields to external form
     C                     EXSR MNCV#1
      * Display screen
     C                     EXSR CAEXFM
      * Process response
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Reset screen fields
     C   30                CAS            MALDSC
      * Process screen input
     C                     CAS            DAPRSC
     C                     END
      *
     C                     END
      *
     C                     END
      *****************************************************************
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen and process HELP requests
      *================================================================
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#RCDDTL1
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPRSC    BEGSR
      *================================================================
      * Process screen input
      *================================================================
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * Validate screen input
     C                     EXSR DBVLSC
      * If error, exit
     C           *IN99     CABEQ'1'       DAEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       DAEXIT
      * Prompt for confirmation
     C                     EXSR DHPMCF
      * Quit if not confirmed
     C           *IN99     CABEQ'1'       DAEXIT
      * Exit program
     C                     EXSR ZXEXPG
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         DBVLSC    BEGSR
      *================================================================
      * Validate screen input
      *================================================================
      * Validate BOL Complete Date
      * External date
     C                     Z-ADDV1J7DT    XDEXDT
      * Check date
     C                     EXSR XDCK2
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9932  *
     C                     END
     C                     Z-ADDXDINDT    #1J7DT
      * Validate BOL Complete Time
     C                     Z-ADD#1BOTM    XTTIM
      * Check time
     C                     EXSR XTCKTM
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9933  *
     C                     END
      * Check Test CDE as Numeric is numeric
     C                     MOVEL*IN90     XG90    1
     C                     TESTN          #DXZCD     90  90*
     C   90                MOVE #DXZCD    XGX1    1
     C   90                TESTB'0123'    XGX1           90*
      * All blank is OK
     C  N90      #DXZCD    COMP *BLANKS                  90*
      * '?' is OK
     C  N90                MOVEL#DXZCD    XGX1
     C  N90      XGX1      COMP '?'                      90*
     C           *IN90     IFEQ '0'
      * Send message '*Field must be numeric'
     C                     MOVEL'Y2U0010' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     SETON                     9934  *
     C                     END
     C                     MOVELXG90      *IN90
     C           YPMTFD    IFEQ *BLANKS
      * USER: Validate fields
     C                     Z-ADD*ZERO     #1KJDT           Scheduled Deliv
     C                     Z-ADD*ZERO     #1ATTM           Scheduled Deliv
     C                     END
      * Bypass ref file checks if error already detected
     C   99                GOTO DBEXIT
      * Check reference to Warehouse
     C                     EXSR VACKRL
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     SETON                     99    *
     C                     END
     C           YPMTFD    IFEQ *BLANKS
      * CALC: Screen function fields
      *
     C                     Z-ADD*ZERO     WN0001  51       Hours Required
     C                     Z-ADD*ZERO     WN0002  50       Miles to next s
     C                     Z-ADD*ZERO     WN0003  51       USR Hours Remai
     C                     Z-ADD*ZERO     WN0004  51       USR Hours to Mi
     C                     Z-ADD*ZERO     WN0005  50       @Days 5
     C                     Z-ADD*ZERO     WN0006  60       Estimated Arriv
      *
      * TST Scheduled Delivery IF
     C                     Z-ADD#1J7DT    #1KJDT           Scheduled Deliv
     C                     Z-ADD#1BOTM    #1ATTM           Scheduled Deliv
      * RTV Legal Run Mileage  RT - Legal Run Mileage/Hours  * 
     C                     EXSR SARVGN
      * get number of whole days + remaining hours
      * Calculate # whole days + hours left
      * CASE: PAR.Hours Required is Less than 1 day
     C           WN0001    IFLT 24                         *IF
     C                     Z-ADD*ZERO     WN0005           @Days 5
     C                     Z-ADDWN0001    WN0003           USR Hours Remai
     C                     ELSE
      * CASE: *OTHERWISE
     C           WN0001    DIV  24        WN0005           @Days 5
     C                     MVR            WN0003           USR Hours Remai
     C                     END                             *FI
      * Add # whole days to current date
      * CASE: PAR.@Days 5 EQ WRK.ZERO
     C           WN0005    IFEQ WUW0NB                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * PAR.Scheduled Delivery Date = PAR.Scheduled Delivery Date + PAR.@
     C           #1KJDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDWN0005    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     #1KJDT
     C                     ELSE
     C           XDINDT    SUB  1000000   #1KJDT
     C                     END
     C                     END                             *FI
      * WRK.Scheduled Delivery Time = CON.*ZERO + PAR.USR Hours Remaining
     C                     Z-ADD*ZERO     XTTIM
     C                     Z-ADD*ZERO     XASC    80
     C                     EXSR XTAD1
     C           3600      MULT WN0003    XDWK1   80
     C                     ADD  XDWK1     XASC    80
     C                     EXSR XTCT1
     C                     Z-ADDXTTIM     WUATTM
      * PAR.USR Hours Remaining = WRK.Scheduled Delivery Time *HOURS
     C                     Z-ADDWUATTM    XTTIM
     C                     Z-ADDXTHH      WN0003
      * Calculate scheduled delivery time; recalc date if past midnight
      * CASE: PAR.USR Hours Remaining is Not Zero
     C           WN0003    IFNE *ZERO                      *IF
      * PAR.Estimated Arrival Time = CON.240000 - PAR.Scheduled Delivery
     C                     Z-ADD#1ATTM    XTTIM2
     C                     Z-ADD240000    XTTIM
     C                     EXSR XTCEL
     C           XTHH      MULT 100       WN0006
     C                     ADD  XTNN      WN0006
     C                     MULT 100       WN0006
     C                     ADD  XTSS      WN0006
     C                     MULT XSGN      WN0006
      * PAR.USR Hours to Midnight = PAR.Estimated Arrival Time *HOURS
     C                     Z-ADDWN0006    XTTIM
     C                     Z-ADDXTHH      WN0004
      * WRK.USR Period = PAR.Estimated Arrival Time *MINUTES
     C                     Z-ADDWN0006    XTTIM
     C                     Z-ADDXTNN      WUB1NB
      * calc minutes % of hour
      * PGM.*Synon (15,2) work field =
      *    *COMPUTE ((x1 - x2) / x1)
      * x1    : CON.60
      * -     : PGM.*Synon (17,7) work field
      * x2    : WRK.USR Period
      * /     : PGM.*Synon (17,7) work field
      * x1    : CON.60
     C           60        SUB  WUB1NB    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  60        W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    W0WA             *Synon (15,2) w
      * calc hours to midnight
      * PAR.USR Hours to Midnight =
      *    *COMPUTE (x1 + x3)
      * x1    : PAR.USR Hours to Midnight
      * +     : PGM.*Synon (17,7) work field
      * x3    : PGM.*Synon (15,2) work field
     C           WN0004    ADD  W0WA      W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0004           USR Hours to Mi
      * CASE: PAR.USR Hours to Midnight LT PAR.USR Hours Remaining
     C           WN0004    IFLT WN0003                     *IF
      * PAR.Scheduled Delivery Date = PAR.Scheduled Delivery Date + CON.1
     C           #1KJDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     #1KJDT
     C                     ELSE
     C           XDINDT    SUB  1000000   #1KJDT
     C                     END
     C                     SUB  WN0004    WN0003           USR Hours Remai
      * PAR.Scheduled Delivery Time = CON.*ZERO + PAR.USR Hours Remaining
     C                     Z-ADD*ZERO     XTTIM
     C                     Z-ADD*ZERO     XASC    80
     C                     EXSR XTAD1
     C           3600      MULT WN0003    XDWK1   80
     C                     ADD  XDWK1     XASC    80
     C                     EXSR XTCT1
     C                     Z-ADDXTTIM     #1ATTM
     C                     ELSE
      * CASE: *OTHERWISE
      * PAR.Scheduled Delivery Time = PAR.Scheduled Delivery Time + PAR.U
     C                     Z-ADD#1ATTM    XTTIM
     C                     Z-ADD*ZERO     XASC    80
     C                     EXSR XTAD1
     C           3600      MULT WN0003    XDWK1   80
     C                     ADD  XDWK1     XASC    80
     C                     EXSR XTCT1
     C                     Z-ADDXTTIM     #1ATTM
     C                     END                             *FI
     C                     END                             *FI
     C                     END
      * BOL Complete Date required
     C           #1J7DT    IFEQ *ZERO                      IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9932  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      * BOL Complete Time required
     C           #1BOTM    IFEQ *ZERO                      IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9933  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      * Test CDE as Numeric required
     C           #DXZCD    IFEQ *BLANK                     IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9934  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      *================================================================
     CSR         DBEXIT    ENDSR
      /EJECT
     CSR         DHPMCF    BEGSR
      *================================================================
      * Prompt for confirmation
      *================================================================
      * Convert fields to external form
     C                     EXSR MNCV#1
      * Update screen time
     C                     TIME           ##TME
      * Refresh screen
     C                     MOVEL*BLANK    ##CFCD
     C                     MOVEL'N'       ##CFCD
      * Save CMD keys
     C                     MOVEA*IN       WN30   30
     C                     SETOF                     29    *
      * Generate internal/external key list
     C           KINEX     KLIST
     C                     KFLD           Y2LSNO
     C                     KFLD           Y2INVL
      * Convert *CONFIRM to external value
     C                     Z-ADD1001713   Y2LSNO
     C                     MOVEL*BLANK    Y2INVL
     C                     MOVEL##CFCD    Y2INVL           *CONFIRM
     C           KINEX     CHAIN@Y2INEX              90    *
     C  N90                MOVELY2EXVL    V#CFCD           *CONFIRM
      *
     C           W0HLP     DOUEQ'N'
     C           *IN29     ANDEQ'0'
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     WRITE#RCDDTL1
     C                     EXFMT#CONFIRM
     C           *IN29     IFEQ '1'
     C                     SETON                     99
     C                     GOTO DHEXIT
     C                     END
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
      * Validate *CONFIRM
     C                     MOVEL*BLANK    W0RTN
     C                     MOVELV#CFCD    W0NSRQ  1        *CONFIRM
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C           'V#CFCD'  OREQ YPMTFD
     C                     CALL 'CAVLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1001713   Y2LSNO  70
     C           V#CFCD    PARM V#CFCD    W0EXVL 25        *CONFIRM
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C           W0NSRQ    IFNE '?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
     C                     END
      * Check external value of *CONFIRM
      * Generate internal/external key list
     C           KEXIN     KLIST
     C                     KFLD           Y2LSNO
     C                     KFLD           Y2EXVL
      * Convert *CONFIRM to internal value
     C                     Z-ADD1001713   Y2LSNO
     C                     MOVEL*BLANK    Y2EXVL
     C                     MOVELV#CFCD    Y2EXVL           *CONFIRM
     C           KEXIN     CHAIN@Y2EXIN              90    *
     C           *IN90     IFEQ '1'
     C                     MOVEL*BLANK    ##CFCD
     C           YPMTFD    IFEQ *BLANK
     C                     SETON                     96    *
     C                     WRITE#CONFIRM
     C                     SETOF                     96    *
     C                     END
     C                     ELSE
     C                     MOVELY2INVL    ##CFCD           *CONFIRM
     C                     END
      *
     C   90                SETON                     29    *
     C  N90                SETOF                     29    *
     C                     END
      * Restore CMD keys
     C                     MOVEAWN30      *IN
      * Update job time
     C                     TIME           ##JTM
     C           ##CFCD    IFEQ 'Y'
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C                     END
     C           ##CFCD    COMP 'Y'                  9999  *
      * Not confirmed
      *================================================================
     CSR         DHEXIT    ENDSR
      /EJECT
     CSR         MALDSC    BEGSR
      *================================================================
      * Load screen from passed parameters
      *================================================================
     C                     MOVEL*BLANK    #1WTTX           LH Unused Seal
     C                     MOVEL*BLANK    #1WUTX           LH Unused Seal
     C                     MOVEL*BLANK    #1OTRS           On Time Reason
     C                     MOVEL*BLANK    #1RNST           BOL Printed Fla
     C                     Z-ADD*ZERO     #1BRBK           Bring Back Mile
     C                     Z-ADD*ZERO     #1EIDT           Requested Deliv
     C                     MOVEL*BLANK    #1RMST           Load Acceptance
     C                     MOVEL*BLANK    #1AJCD           Warehouse Code
     C                     Z-ADD*ZERO     #1KZDT           Deadline Depart
     C                     Z-ADD*ZERO     #1AXTM           Deadline Depart
     C                     MOVEL*BLANK    #1LHOS           Load Held Over
     C                     MOVEL*BLANK    #1LHOR           Load Held Over
     C                     MOVEL*BLANK    #1WNTX           Load Held Over
     C                     MOVEL*BLANK    #1OITX           Ocean BOL Numbe
     C                     MOVEL*BLANK    #1OJTX           Express Mail Nu
     C                     Z-ADD*ZERO     #1LLDT           Express Mail Da
     C                     MOVEL*BLANK    #1LSHG           Load Shag Flag
     C                     MOVEL*BLANK    #1YPST           Load Wash Flag
     C                     Z-ADD*ZERO     #1K0DT           Product Complet
     C                     Z-ADD*ZERO     #1AYTM           Product Complet
     C                     Z-ADD*ZERO     #1KNNX           Pallets Loaded
     C                     Z-ADD*ZERO     #1ICWG           Avg Pallet Tare
     C                     Z-ADD*ZERO     #1IDWG           Tot Pallet Tare
     C                     MOVEL*BLANK    #1H9SX           Load Confirmed
     C                     MOVEL*BLANK    #1WOTX           Load Confirmed
     C                     Z-ADD*ZERO     #1K1DT           Unused Load Dat
     C                     Z-ADD*ZERO     #1AZTM           Unused Load Tim
     C                     Z-ADD*ZERO     #1K2DT           Unused Load Dat
     C                     Z-ADD*ZERO     #1A0TM           Unused Load Tim
     C                     MOVEL*BLANK    #1ROST           Unused Load Sta
     C                     MOVEL*BLANK    #1RPST           Unused Load Sta
     C                     MOVEL*BLANK    #1RQST           Unused Load Sta
     C                     MOVEL*BLANK    #1RRST           Unused Load Sta
     C                     Z-ADD*ZERO     #1ZBVA           Unused Load Val
     C                     MOVEL*BLANK    #1WPTX           LH Unused Text
     C                     MOVEL*BLANK    #1WQTX           LH Unused Text
     C                     MOVEL*BLANK    #1WRTX           LH Unused Text
     C                     MOVEL*BLANK    #1WSTX           LH Unused Text
     C                     Z-ADD*ZERO     #1TLMI           Total Load Mile
     C                     Z-ADD*ZERO     #1J7DT           BOL Complete Da
      * Clear external version also
     C                     Z-ADD*ZERO     V1J7DT
     C                     Z-ADD*ZERO     #1BOTM           BOL Complete Ti
     C                     Z-ADD*ZERO     #1KJDT           Scheduled Deliv
      * Clear external version also
     C                     Z-ADD*ZERO     V1KJDT
     C                     Z-ADD*ZERO     #1ATTM           Scheduled Deliv
     C                     MOVEL*BLANK    #DXZCD           Test CDE as Num
      * CALC: Screen function fields
      *
     C                     Z-ADD*ZERO     WN0007  51       Hours Required
     C                     Z-ADD*ZERO     WN0008  50       Miles to next s
     C                     Z-ADD*ZERO     WN0009  51       USR Hours Remai
     C                     Z-ADD*ZERO     WN0010  51       USR Hours to Mi
     C                     Z-ADD*ZERO     WN0011  50       @Days 5
     C                     Z-ADD*ZERO     WN0012  60       Estimated Arriv
      *
      * TST Scheduled Delivery IF
     C                     Z-ADD#1J7DT    #1KJDT           Scheduled Deliv
     C                     Z-ADD#1BOTM    #1ATTM           Scheduled Deliv
      * RTV Legal Run Mileage  RT - Legal Run Mileage/Hours  * 
     C                     EXSR SBRVGN
      * get number of whole days + remaining hours
      * Calculate # whole days + hours left
      * CASE: PAR.Hours Required is Less than 1 day
     C           WN0007    IFLT 24                         *IF
     C                     Z-ADD*ZERO     WN0011           @Days 5
     C                     Z-ADDWN0007    WN0009           USR Hours Remai
     C                     ELSE
      * CASE: *OTHERWISE
     C           WN0007    DIV  24        WN0011           @Days 5
     C                     MVR            WN0009           USR Hours Remai
     C                     END                             *FI
      * Add # whole days to current date
      * CASE: PAR.@Days 5 EQ WRK.ZERO
     C           WN0011    IFEQ WUW0NB                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * PAR.Scheduled Delivery Date = PAR.Scheduled Delivery Date + PAR.@
     C           #1KJDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDWN0011    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     #1KJDT
     C                     ELSE
     C           XDINDT    SUB  1000000   #1KJDT
     C                     END
     C                     END                             *FI
      * WRK.Scheduled Delivery Time = CON.*ZERO + PAR.USR Hours Remaining
     C                     Z-ADD*ZERO     XTTIM
     C                     Z-ADD*ZERO     XASC    80
     C                     EXSR XTAD1
     C           3600      MULT WN0009    XDWK1   80
     C                     ADD  XDWK1     XASC    80
     C                     EXSR XTCT1
     C                     Z-ADDXTTIM     WUATTM
      * PAR.USR Hours Remaining = WRK.Scheduled Delivery Time *HOURS
     C                     Z-ADDWUATTM    XTTIM
     C                     Z-ADDXTHH      WN0009
      * Calculate scheduled delivery time; recalc date if past midnight
      * CASE: PAR.USR Hours Remaining is Not Zero
     C           WN0009    IFNE *ZERO                      *IF
      * PAR.Estimated Arrival Time = CON.240000 - PAR.Scheduled Delivery
     C                     Z-ADD#1ATTM    XTTIM2
     C                     Z-ADD240000    XTTIM
     C                     EXSR XTCEL
     C           XTHH      MULT 100       WN0012
     C                     ADD  XTNN      WN0012
     C                     MULT 100       WN0012
     C                     ADD  XTSS      WN0012
     C                     MULT XSGN      WN0012
      * PAR.USR Hours to Midnight = PAR.Estimated Arrival Time *HOURS
     C                     Z-ADDWN0012    XTTIM
     C                     Z-ADDXTHH      WN0010
      * WRK.USR Period = PAR.Estimated Arrival Time *MINUTES
     C                     Z-ADDWN0012    XTTIM
     C                     Z-ADDXTNN      WUB1NB
      * calc minutes % of hour
      * PGM.*Synon (15,2) work field =
      *    *COMPUTE ((x1 - x2) / x1)
      * x1    : CON.60
      * -     : PGM.*Synon (17,7) work field
      * x2    : WRK.USR Period
      * /     : PGM.*Synon (17,7) work field
      * x1    : CON.60
     C           60        SUB  WUB1NB    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  60        W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    W0WA             *Synon (15,2) w
      * calc hours to midnight
      * PAR.USR Hours to Midnight =
      *    *COMPUTE (x1 + x3)
      * x1    : PAR.USR Hours to Midnight
      * +     : PGM.*Synon (17,7) work field
      * x3    : PGM.*Synon (15,2) work field
     C           WN0010    ADD  W0WA      W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0010           USR Hours to Mi
      * CASE: PAR.USR Hours to Midnight LT PAR.USR Hours Remaining
     C           WN0010    IFLT WN0009                     *IF
      * PAR.Scheduled Delivery Date = PAR.Scheduled Delivery Date + CON.1
     C           #1KJDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     #1KJDT
     C                     ELSE
     C           XDINDT    SUB  1000000   #1KJDT
     C                     END
     C                     SUB  WN0010    WN0009           USR Hours Remai
      * PAR.Scheduled Delivery Time = CON.*ZERO + PAR.USR Hours Remaining
     C                     Z-ADD*ZERO     XTTIM
     C                     Z-ADD*ZERO     XASC    80
     C                     EXSR XTAD1
     C           3600      MULT WN0009    XDWK1   80
     C                     ADD  XDWK1     XASC    80
     C                     EXSR XTCT1
     C                     Z-ADDXTTIM     #1ATTM
     C                     ELSE
      * CASE: *OTHERWISE
      * PAR.Scheduled Delivery Time = PAR.Scheduled Delivery Time + PAR.U
     C                     Z-ADD#1ATTM    XTTIM
     C                     Z-ADD*ZERO     XASC    80
     C                     EXSR XTAD1
     C           3600      MULT WN0009    XDWK1   80
     C                     ADD  XDWK1     XASC    80
     C                     EXSR XTCT1
     C                     Z-ADDXTTIM     #1ATTM
     C                     END                             *FI
     C                     END                             *FI
      *================================================================
     CSR         MAEXIT    ENDSR
      /EJECT
     CSR         MNCV#1    BEGSR
      *================================================================
      * Convert fields into external form
      *================================================================
      * Convert BOL Complete Date to display format
      * Convert date
     C           1000000   ADD  #1J7DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    V1J7DT
      * Convert Scheduled Delivery Date to display format
      * Convert date
     C           1000000   ADD  #1KJDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    V1KJDT
      *================================================================
     CSR         MNEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV Legal Run Mileage  RT - Legal Run Mileage/Hours  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KPSSA     KLIST
     C                     KFLD           WBMILE           Miles to First
      * Setup key
     C                     Z-ADD#1TLMI    WBMILE           Miles to First
      * Establish starting position
     C           KPSSA     SETLL@LGCPNM                    *
     C                     READ @LGCPNM                  90*
      * Data record not found
     C   90                MOVEL'USR2462' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWBHRRQ    WN0001           Hours Required
     C                     GOTO SAEXIT                     *QUIT
     C                     READ @LGCPNM                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * RTV Legal Run Mileage  RT - Legal Run Mileage/Hours  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KPSSB     KLIST
     C                     KFLD           WBMILE           Miles to First
      * Setup key
     C                     Z-ADD#1TLMI    WBMILE           Miles to First
      * Establish starting position
     C           KPSSB     SETLL@LGCPNM                    *
     C                     READ @LGCPNM                  90*
      * Data record not found
     C   90                MOVEL'USR2462' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWBHRRQ    WN0007           Hours Required
     C                     GOTO SBEXIT                     *QUIT
     C                     READ @LGCPNM                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         VACKRL    BEGSR
      *================================================================
      * Check reference to Warehouse
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Name search required?
     C                     MOVEL#1AJCD    WK1X01  1
     C           WK1X01    IFEQ '?'                        Warehouse Code
     C           YPMTFD    OREQ '#1AJCD'
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DTL) #1AJCD' defaulted for 'Warehouse Code'.
     C                     CALL 'PDL4SRR'              90  SEL Non-Prod Wh
     C                     PARM *BLANK    W0RTN   7
     C           #1AJCD    PARM #1AJCD    WQ0001  3        Warehouse Code
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDL4SRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     99    *
     C                     END
      *
     C           #1AJCD    IFNE *BLANK                     Warehouse Code
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C           WK1X01    ANDNE'?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
      * No value selected, exit
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     GOTO VAEXIT
     C                     END
     C                     END
      *................................................................
      * If all low order keys not entered, exit
     C           #1AJCD    IFEQ *BLANK                     Warehouse Code
     C                     GOTO VAEXIT
     C                     END
      *
     C           KLVAWA    KLIST
     C                     KFLD           WAAJCD           Warehouse Code
      * Setup key
     C                     MOVEL#1AJCD    WAAJCD
     C           KLVAWA    CHAIN@ADREAO              9091  *
     C           *IN90     IFEQ '0'
      * Record found - move back any virtuals
     C                     GOTO VAEXIT
     C                     END
     C           YPMTFD    IFNE *BLANK
     C                     SETOF                     9091
     C                     GOTO VAEXIT
     C                     END
      * Send message 'Warehouse              NF'
     C                     MOVEL'USR0007' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVEL'USR0007' W0RTN
      *================================================================
     CSR         VAEXIT    ENDSR
      /EJECT
     CSR         XCVFA     BEGSR
      *================================================================
      * Convert absolute day to date
      *================================================================
     C           XDAY1     IFGT 109267
     C                     ADD  2         XDAY1
     C                     ELSE
     C           XDAY1     IFGT 36218
     C                     ADD  1         XDAY1
     C                     END
     C                     END
      * Full years (up to the date)
     C           XDAY1     DIV  365.25    XDWK1   80
     C                     MVR            XDWK3   71
     C                     Z-ADDXDWK1     XDINYY
     C           XDWK3     IFEQ 0
      * The date is the end of a year
     C                     Z-ADD12        XDINMM
     C                     Z-ADD31        XDINDD
     C                     ELSE
      * Year days up to the date
     C           XDWK1     MULT 365.25    XDWK2   60
     C                     SUB  XDWK2     XDAY1
     C                     ADD  1         XDINYY
      * Leap year ?
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
      * March 1 (relative day of the year)
     C           XDWK1     IFEQ 0
     C                     Z-ADD60        XDWK1
     C                     ELSE
     C                     Z-ADD59        XDWK1
     C                     END
      * Define date base month and offset day -
     C           XDAY1     IFLE XDWK1
      *  - January (thru February)
     C                     Z-ADD1         XDINMM
     C                     ELSE
     C                     SUB  XDWK1     XDAY1
     C           XDAY1     IFLE 153
      *  - March (thru July)
     C                     Z-ADD3         XDINMM
     C                     ELSE
      *  - August (thru December)
     C                     Z-ADD8         XDINMM
     C                     SUB  153       XDAY1
     C                     END
      * Calculate 2 month base and offset day
     C           XDAY1     SUB  1         XDWK1
     C                     DIV  61        XDWK1
     C                     MVR            XDAY1
     C                     ADD  1         XDAY1
     C                     MULT 2         XDWK1
     C                     ADD  XDWK1     XDINMM
     C                     END
      * Calculate date increment,
     C           XDAY1     IFGT 31
     C                     ADD  1         XDINMM
     C                     SUB  31        XDAY1
     C                     END
     C                     Z-ADDXDAY1     XDINDD
     C                     END
      *================================================================
     CSR         XCVFAE    ENDSR
      /EJECT
     CSR         XCVTA     BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C           XDINYY    SUB  1         XDWK1   80
     C           XDWK1     MULT 365.25    XDAY1   60
     C           XDWK1     IFGE 300
     C                     SUB  2         XDAY1
     C                     ELSE
     C           XDWK1     IFGE 100
     C                     SUB  1         XDAY1
     C                     END
     C                     END
      * (from the beginning of the year to the beginning of the month:)
     C           XDINMM    SUB  1         XDWK1
     C           XDINMM    IFLT 3
      *     ...+31*(MM-1) (for January-February) ...
     C                     MULT 31        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                     MULT 30        XDWK1
     C                     ADD  XDWK1     XDAY1
      *         ...-2 (for preceding February) ...
     C                     SUB  2         XDAY1
     C           XDINYY    IFNE 100
     C           XDINYY    ANDNE300
      *         ...+1 (for preceding February, if leap year) ...
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     ADD  1         XDAY1
     C                     END
     C                     END
     C           XDINMM    IFLT 8
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C           XDINMM    MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C           XDINMM    ADD  1         XDWK1
     C                     MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     END
     C                     END
      * ...+DD (days in the month up to the ending date)
     C                     ADD  XDINDD    XDAY1
      *================================================================
     CSR         XCVTAE    ENDSR
      /EJECT
     CSR         XDADY     BEGSR
      *================================================================
      * Calculate date increment, *DAYS
      *================================================================
     C           XDURR     IFEQ 0
     C           XDWSL     OREQ 0
      * None days of week selected
     C                     Z-ADDXDAY2     XDAY1
     C           XDURR     IFNE *ZERO
      * Return Code: Unable to increment date.
     C                     MOVEL'Y2U0059' W0RTN   7
     C                     ENDIF
     C                     GOTO XDADYE
     C                     ENDIF
     C           XDWSL     IFEQ 7
      * All days of week selected
     C           XDAY2     ADD  XDURR     XDAY1
     C                     GOTO XDADYM
     C                     ENDIF
      * Some days of week selected
     C           XDURR     IFGE 0
     C                     Z-ADD1         XDSTP   10
     C                     ELSE
     C                     Z-ADD-1        XDSTP
     C                     ENDIF
      * Get number of full weeks in the duration
     C           XDURR     DIV  XDWSL     XDWNB   60
      * Isolate the last week
     C                     MVR            XDLSW   10
     C           XDLSW     IFEQ 0
     C           XDWSL     MULT XDSTP     XDLSW
     C                     SUB  XDSTP     XDWNB
     C                     ENDIF
      * Increment the date by the full weeks
     C           XDWNB     MULT 7         XDWK1   80
     C           XDAY2     ADD  XDWK1     XDAY1   60
      * Determine day of week of the beginning date
     C           XDAY2     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ENDIF
      * Loop: Increment the date by the last week
     C           XDLSW     DOWNE0
      * Increment the date
     C                     ADD  XDSTP     XDAY1
      * Increment the day of week
     C                     ADD  XDSTP     YY
      * Put day of week into the range 1-7
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ELSE
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     ELSE
     C           YY        IFEQ -1
     C                     Z-ADD6         YY
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
     C           YDOW,YY   IFEQ XDSEL
      * Selected day of the last week has been processed
     C                     SUB  XDSTP     XDLSW
     C                     ENDIF
      * End of loop
     C                     ENDDO
     C           XDADYM    TAG
     C           XDINDD    IFLT 1
     C                     Z-ADD1         XDINDD
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         XDADYE    ENDSR
      /EJECT
     CSR         XDCK2     BEGSR
      *================================================================
      * Validate external date format
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
     C                     Z-ADD*ZERO     XDINDT
      * If external date is zero, do not check
     C           XDEXDT    CABEQ*ZERO     XDCK2E
      *................................................................
      * Map external to internal according to date format
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDEX02    XDINDD           DD
     C                     Z-ADDXDEX03    XDINMM           MM
     C                     Z-ADDXDEX04    XDINYY           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDEX02    XDINMM           MM
     C                     Z-ADDXDEX03    XDINDD           DD
     C                     Z-ADDXDEX04    XDINYY           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDEX02    XDINYY           YY
     C                     Z-ADDXDEX03    XDINMM           MM
     C                     Z-ADDXDEX04    XDINDD           DD
     C                     END
     C                     END
      * If YY prior to the 'cut-off' year treat as 20YY.
     C           XDINYY    IFLT XOFFYY
     C                     ADD  100       XDINYY
     C                     END
     C           YPMTFD    CABNE*BLANK    XDCK2E
      *................................................................
      * Check months in range 1 to 12
     C           XDINMM    CABLT1         XDCK2M
     C           XDINMM    CABGT12        XDCK2M
      *................................................................
      * Check days in range 1 to maximum for month
     C           XDINDD    CABLT1         XDCK2M
     C           XDINDD    CABGT@XD,XDINMMXDCK2M
      *................................................................
      * Special case: leap year
     C           XDINMM    IFEQ 2
     C           XDINYY    IFNE *ZERO
     C           XDINYY    ANDNE200
     C           XDINYY    DIV  4         XDWK1   80
     C                     MVR            XDWK1
     C                     ELSE
     C                     Z-ADD1         XDWK1
     C                     END
      * Year is not leap
     C           XDWK1     IFNE *ZERO
     C           XDINDD    CABGT28        XDCK2M
     C                     END
     C                     END
     C                     GOTO XDCK2E
      *................................................................
      * Send error message
     C           XDCK2M    TAG
      * Send message '*Invalid date'
     C                     MOVEL'Y2U0006' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     MOVEL'Y2U0006' W0RTN
      * Disable time portion if timestamp is validated
     C                     Z-ADD*ZERO     XTTIM
      *================================================================
     CSR         XDCK2E    ENDSR
      /EJECT
     CSR         XDOWS     BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                     MOVEAXDCDW     YDOW
     C                     Z-ADD0         XDWSL   10
     C                     Z-ADD1         YY
     C           YY        DOWLE7
     C           YDOW,YY   IFEQ XDSEL
     C                     ADD  1         XDWSL
     C                     END
     C                     ADD  1         YY
     C                     END
      *================================================================
     CSR         XDOWSE    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         XTAD1     BEGSR
      *================================================================
      * Add TME to absolute time (seconds)
      *================================================================
     C           XTHH      MULT 3600      XDWK1   80
     C                     ADD  XDWK1     XASC
     C           XTNN      MULT 60        XDWK1
     C                     ADD  XDWK1     XASC
     C                     ADD  XTSS      XASC
      *================================================================
     CSR         XTAD1E    ENDSR
      /EJECT
     CSR         XTCEL     BEGSR
      *================================================================
      * Calculate elapsed time from TME2 to TME1
      *================================================================
     C           XTTIM     IFGE XTTIM2
     C                     Z-ADD1         XSGN    10
     C                     Z-ADDXTNN      XTNNL   30
     C                     Z-ADDXTSS      XTSSL   30
     C           XTSSL     IFLT XTSS2
     C                     ADD  60        XTSSL
     C                     SUB  1         XTNNL
     C                     END
     C           XTSSL     SUB  XTSS2     XTSS
     C           XTNNL     IFLT XTNN2
     C                     ADD  60        XTNNL
     C                     SUB  1         XTHH
     C                     END
     C           XTNNL     SUB  XTNN2     XTNN
     C                     SUB  XTHH2     XTHH
     C                     ELSE
     C                     Z-ADD-1        XSGN
     C                     Z-ADDXTNN2     XTNNL
     C                     Z-ADDXTSS2     XTSSL
     C           XTSSL     IFLT XTSS
     C                     ADD  60        XTSSL
     C                     SUB  1         XTNNL
     C                     END
     C           XTSSL     SUB  XTSS      XTSS
     C           XTNNL     IFLT XTNN
     C                     ADD  60        XTNNL
     C                     SUB  1         XTHH2
     C                     END
     C           XTNNL     SUB  XTNN      XTNN
     C           XTHH2     SUB  XTHH      XTHH
     C                     END
      *================================================================
     CSR         XTCELE    ENDSR
      /EJECT
     CSR         XTCKTM    BEGSR
      *================================================================
      * Validate time format
      *================================================================
      * If time is zero, do not check
     C           XTTIM     CABEQ*ZERO     XTCKTE
     C                     MOVEL*BLANK    W0RTN   7
     C           YPMTFD    CABNE*BLANK    XTCKTE
      *
      * Check hours in range 0 to 23
      * Check minutes in range 0 to 59
      * Check seconds in range 0 to 59
     C           XTHH      IFLT *ZERO
     C           XTHH      ORGT 23
     C           XTNN      ORLT *ZERO
     C           XTNN      ORGT 59
     C           XTSS      ORLT *ZERO
     C           XTSS      ORGT 59
      * Send error message
      * Send message '*Invalid time'
     C                     MOVEL'Y2U0019' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     MOVEL'Y2U0019' W0RTN
     C                     END
      *================================================================
     CSR         XTCKTE    ENDSR
      /EJECT
     CSR         XTCT1     BEGSR
      *================================================================
      * Convert absolute time (seconds) to TME
      *================================================================
     C                     EXSR XTFCT
     C           XASC      DIV  60        XASC
     C                     MVR            XTSS
     C           XASC      DIV  60        XASC
     C                     MVR            XTNN
     C                     Z-ADDXASC      XTHH
      *================================================================
     CSR         XTCT1E    ENDSR
      /EJECT
     CSR         XTFCT     BEGSR
      *================================================================
      * Factorize absolute date (seconds) by 24 hours
      *================================================================
     C           XASC      IFGE 86400
     C                     DIV  86400     XASC    80
     C                     MVR            XASC
     C                     ELSE
     C           XASC      IFLE *ZERO
     C                     DIV  86400     XASC
     C                     MVR            XASC
     C           XASC      IFNE *ZERO
     C                     ADD  86400     XASC
     C                     END
     C                     END
     C                     END
      *================================================================
     CSR         XTFCTE    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA132        Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZDVPMT    BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                     MOVEL*BLANK    YPMTFD 10
     C                     Z-ADD*ZERO     YAFSCH  40
     C                     Z-ADD*ZERO     YPMRRN  40
      *
     C           *IN04     IFEQ '1'
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50
     C                     MVR            ZHCSCL  50
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
     C           YPMTFD    IFEQ *BLANK
      * Error if user defined prompting is not specified.
     C           W0PMT     IFEQ 'N'
     C                     MOVEL'*NONE'   YPMTFD
     C                     MOVEL'Y'       W0HLP   1
     C                     MOVEL'Y'       ZAFSMS
      * Send error message.
     C                     MOVEL'Y2U0101' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
     C                     END
      *================================================================
     CSR         ZDEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*CSRLOC' YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM *ZERO     YYLGCT  50       # of grps
     C                     PARM *BLANK    YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WADBNB           Warehouse Chill
     C                     Z-ADD*ZERO     WAAATM           Job Time
     C                     Z-ADD*ZERO     WAAXDT           Job Date
      * Obtain default message file
     C           *NAMVAR   DEFN CAMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WBMILE           Miles to First
     C                     Z-ADD*ZERO     WBHRRQ           Hours Required
     C                     Z-ADD*ZERO     WBAATM           Job Time
     C                     Z-ADD*ZERO     WBAXDT           Job Date
      * Define work field ZERO
     C                     Z-ADD*ZERO     WUW0NB 305
      * Define work field Scheduled Delivery Time
     C                     Z-ADD*ZERO     WUATTM  60
      * Define work field USR Period
     C                     Z-ADD*ZERO     WUB1NB  20
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    W0WD01 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD00 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WA   152       *Synon (15,2) w
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C                     MOVEL'N'       W0PMT   1
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      * Retrieve the 'cut-off' year YY: 19YY-1999,2000-20(YY-1).
     C           *NAMVAR   DEFN Y2CTOFF   XOFF    40
     C                     IN   XOFF
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   ##CMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL*BLANK    W0GRP   1
      * Load screen
     C                     EXSR MALDSC
      *================================================================
     CSR         ZZEXIT    ENDSR
** @XD
312931303130313130313031
