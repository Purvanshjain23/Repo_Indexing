      *****************  RPG PROGRAM HEADING  ************************
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     AR410
      * TITLE:       FOREIGN CORPORATE TAX SAVINGS
      *              SPECIFY TAX SAVINGS ANALYSIS FOR FOREIGN SALES
      * PROGRAMMER:  LEANNE FEDOR
      * CREATED:     10/23/97
      *
      * FUNCTION: ALLOWS USER TO ENTER REPORT OPTIONS.
      *           SUBMITS AR410CL AND CARRIES SELECTED OPTIONS IN THE
      *           LDA.
      *
      *           THIS PROGRAM IS CALLED FROM A MENU.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      /EJECT
      ****************************************************************
      * FUNCTION KEYS
      ****************************************************************
      * 03 F3-EXIT
      * 04 F4-PROMPT
      * 08 F8-SUBMIT REPORT OPTIONS
      * 20 SPOOL FILES
      *
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FARD410  CF  E                    WORKSTN
     F                                              KINFDS IOFEED
      *
      /EJECT
      ****************************************************************
      * TABLE AND ARRAY SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  STANDARD MESSAGE ARRAYS
      *---------------------------------------------------------------
     E                    MGID       20  7               MSG ID ARRAY
     E                    MGDT       20 50               MSG PARMS
     E                    MGW        50  1               MSG WORK PARMS
      *
      *---------------------------------------------------------------
      *  COMPILE TIME ARRAYS FOR SUBMIT JOB COMMAND USED IN QCMDEXC
      *---------------------------------------------------------------
      *
     E                    CMD    80  80  1
     E                    CMX    80  80  1
      *
      /EJECT
      ****************************************************************
      * INPUT SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      * STANDARD ERROR MESSAGE HANDLING DATA STRUCTURES
      *---------------------------------------------------------------
      *
      * FOR ERROR MESSAGE HANDLING, A PACKED INDEX (E) IS REQUIRED.
      * FOR PROGRAM READABILITY, DEFINE A CORRESPONDING ERROR COUNT
      * FIELD CALLED 'ERROR'
      *
     I           IDS
     I                                    P   1   20ERROR
     I                                    P   1   20E
      *
      * THIS DATA STRUCTURE SUPPLIES THE NAME OF THE MESSAGE FILE TO
      * THE MESSAGE HANDLING CL PROGRAM.  THE FIELD NAME MSGFIL MUST BE
      * CONSTANT. THE VALUE IN QUOTES IS THE NAME OF THE SPECIFIC
      * MESSAGE FILE CONTAINING THE USER DEFINED MESSAGES.
      *
     I           IDS
     I I            'HSMSGF    '              1  10 MSGFIL
      *
      * THE FOLLOWING 3 DATA STRUCTURES ARE USED TO SPEED MESSAGE
      * HANDLING SINCE IT IS FASTER TO CLEAR DATA STRUCTURES THAN
      * ARRAYS.  EACH IS ASSOCIATED WITH A STANDARD MESSAGE ARRAY.
      *
     IMGI        IDS                            140
     I                                        1 140 MGID
      *
     IMGD        IDS                           1000
     I                                        11000 MGDT
      *
     IMGWK       IDS                             50
     I                                        1  50 MGW
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     IPGMDS     ESDSUTPGFR
      *
      *---------------------------------------------------------------
      * STANDARD WORKSTATION INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTWSFR (RECORD FORMAT: UTIDFRR)
     IIOFEED    E DSUTWSFR
      *
      *---------------------------------------------------------------
      * STANDARD DATABASE FILE INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTDBFR (RECORD FORMAT: FDBCKD)
     IDBFEED    E DSUTDBFR
      *
      *---------------------------------------------------------------
      *  LDA -  WITH THE REQUESTED PRINT SELECTIONS
      *---------------------------------------------------------------
      *
     ILDA         DS
     I                                        1   40LDCCYY
     I                                        5  110LD0YMD
     I                                       12  190LDCYMD
     I                                       20  250LDMDY
     I                                       26  27 LDRFFL
      *
     I                                      401 410 LDOUTU
     I                                      411 411 LDHOLD
     I                                      412 412 LDCOPY
     I                                      413 422 LDOUTQ
      *
      *---------------------------------------------------------------
      *  DEFINITION FOR EXTERNAL DATA AREA 'DAJOBQ'
      *---------------------------------------------------------------
     I            DS
     I                                        1  10 DAJOBQ
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     I              'Y'                   C         YES
     I              'N'                   C         NO
     I              'SET1  '              C         SET1
     I              'EDIT1 '              C         EDIT1
     I              'SCRN1 '              C         SCRN1
     I              'EXIT  '              C         EXIT
      *
      *---------------------------------------------------------------
      *  DATE FORMATS
      *---------------------------------------------------------------
      *
      * DATE IN MMDDYY FORMAT
      *
     I            DS
     I                                        1   60WKMDY
     I                                        1   20WKMON
     I                                        3   40WKDAY
     I                                        5   60WKYER
      *
      * DATE IN CCYYMMDD FORMAT
      *
     I            DS
     I                                        1   80WKCYMD
     I                                        1   40WKCCYY
     I                                        1   20WKCC
     I                                        3   40WKYY
     I                                        5   80WKMMDD
     I                                        5   60WKMM
     I                                        7   80WKDD
      *
      * DATE IN CYYMMDD FORMAT
      *
     I            DS
     I                                        1   70WK0YMD
     I                                        1   10WKC
     I                                        2   30WKY
     I                                        4   70WKMD
      *
      /EJECT
      ****************************************************************
      * MAIN LINE
      ****************************************************************
      *
     C                     MOVELSET1      ROUTNE
      *
     C           *INLR     DOWEQ*OFF                       MAIN DO LOOP
      *
     C           ROUTNE    CASEQSET1      $SET1
     C           ROUTNE    CASEQSCRN1     $SCRN1
     C           ROUTNE    CASEQEDIT1     $EDIT1
      *
     C           ROUTNE    CASEQEXIT      $EXIT
     C                     ENDCS
     C                     ENDDO                           MAIN DO LOOP
      /EJECT
      *----------------------------------------------------------------
      * $SET1 - SUBROUTINE TO SET ENVIRONMENT FOR SCREEN 1
      *----------------------------------------------------------------
      *
      *  SET ROUTINE TO DISPLAY SCREEN
      *
     C           $SET1     BEGSR
     C                     MOVELSCRN1     ROUTNE
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $SCRN1 - SUBROUTINE TO PERFORM OPERATOR I/O FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C           $SCRN1    BEGSR
      *
      *
      * WRITE THE ERROR MESSAGES FROM THE ERROR ARRAYS TO THE
      * ERROR MESSAGE SUBFILE
      *
     C                     EXSR $WRMSG
      *
      * WRITE SCREEN 1 TO CRT
      *
     C                     WRITEAR410K1
     C                     WRITEAR410EC
     C                     EXFMTAR410R1
      *
      * CLEAR THE MESSAGES FROM THE MESSAGE DATA STRUCTURES AND PROGRAM
      * MESSAGE QUEUE.
      *
     C                     EXSR $CLMSG
      *
      * GET USER'S ENTRY AND SET THE NEXT ROUTINE
      *
     C                     SELEC
     C           *IN03     WHEQ *ON                        F3-EXIT
     C                     MOVELEXIT      ROUTNE
      *
     C           *IN20     WHEQ *ON                        F20-WRKSPLF
     C                     CALL 'QEZOUTPT'                     API
     C                     MOVELSCRN1     ROUTNE
      *
      * CHECK FOR A USER PROMPT FIRST.
      *
     C           *IN04     WHEQ *ON                        WH PROMPT
     C                     EXSR $F4S1
     C                     MOVELSCRN1     ROUTNE
     C                     OTHER
      *
     C                     MOVELEDIT1     ROUTNE
     C                     ENDSL
      *
     C                     ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $EDIT1 - SUBROUTINE TO EDIT INPUT FIELDS FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C           $EDIT1    BEGSR
      *
     C                     Z-ADD0         LDCCYY
     C                     Z-ADD0         LD0YMD
     C                     Z-ADD0         LDCYMD
     C                     Z-ADD0         LDMDY
     C                     MOVE *BLANK    LDRFFL
      *
      * VALIDATE YEAR
      *
     C                     EXSR $YEAR
      *
      * VALIDATE WHETHER TO GENERATE THE REPORTS OR THE FILES
      * THAT WILL BE DOWNLOADED TO A PC.
      *
     C           DFRFFL    IFNE 'R'
     C           DFRFFL    ANDNE'F'
     C                     SETON                     32
     C           ERROR     IFLT MAXMSG
     C                     ADD  1         ERROR
     C                     MOVEL'HS09006' MGID,E
     C                     ENDIF
     C                     ENDIF
      *
      *
      * VALIDATE COPIES
      *
     C           DFCOPY    IFEQ 0
     C                     SETON                     40
     C           ERROR     IFLT MAXMSG
     C                     ADD  1         ERROR
     C                     MOVEL'HS09001' MGID,E
     C                     ENDIF
     C                     ENDIF
      *
      * HOLD OUTPUT
      *
     C           DFHOLD    IFNE YES
     C           DFHOLD    ANDNENO
     C                     SETON                     39
     C           ERROR     IFLT MAXMSG
     C                     ADD  1         ERROR
     C                     MOVEL'HS09106' MGID,E
     C                     ENDIF
     C                     ENDIF
      *
      *
      * RUN IN NIGHT JOBQ?
      *
     C           DFJOBQ    IFNE YES
     C           DFJOBQ    ANDNENO
     C                     SETON                     37
     C           ERROR     IFLT MAXMSG
     C                     ADD  1         ERROR
     C                     MOVEL'HS09106' MGID,E
     C                     ENDIF
     C                     ENDIF
      *
      * IF THERE ARE NO ERRORS, EXECUTE THE SUBROUTINE TO PROCESS THE
      * USERS REQUEST
      *
     C           ERROR     IFEQ 0                          IF NO ERROR
     C           *IN44     IFEQ *OFF                       IF OFF
     C                     SETON                     44
     C                     ELSE
     C                     EXSR $PROC1
     C                     ENDIF                           IF OFF
     C                     ELSE
     C                     SETOF                     44
     C                     ENDIF                           IF NO ERROR
      *
     C                     MOVELSCRN1     ROUTNE
      *
     C                     ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $YEAR - VALIDATE YEAR
      *---------------------------------------------------------------
      *
      * VALIDATIONS:
      *  1) REQUIRED
      *  2) CANNOT BE NEGATIVE
      *  3) MUST BE IN RANGE OF 1900 - 2099
      *
     C           $YEAR     BEGSR
      *
      *
     C                     SELEC
     C           DFCCYY    WHEQ 0
     C                     SETON                     31
     C           ERROR     IFLT MAXMSG
     C                     ADD  1         ERROR
     C                     MOVEL'HS09001' MGID,E
     C                     ENDIF
      *
     C           DFCCYY    WHLT 0
     C                     SETON                     31
     C           ERROR     IFLT MAXMSG
     C                     ADD  1         ERROR
     C                     MOVEL'HS09000' MGID,E
     C                     ENDIF
      *
     C           DFCCYY    WHLT 1900
     C           DFCCYY    ORGT 2099
     C                     SETON                     31
     C           ERROR     IFLT MAXMSG
     C                     ADD  1         ERROR
     C                     MOVEL'HS09028' MGID,E
     C                     ENDIF
      *
      *
     C                     ENDSL
      *
     C                     ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $PROC1 - SUBROUTINE TO PROCESS THE USER'S REQUEST
      *---------------------------------------------------------------
      *
     C           $PROC1    BEGSR
      *
      *  IF USER TOOK F8=SUBMIT
      *
     C           *IN08     IFEQ *ON                        IF F8=SBMJOB
      *
      * MOVE DISPLAY FILE FIELDS INTO LDA AND SET UP THE
      * THE DECEMBER 31 DATE FORMATS
      *
     C                     Z-ADDDFCCYY    LDCCYY
      *
     C                     Z-ADDDFCCYY    WKCCYY
     C                     Z-ADD1231      WKMMDD
      *
      * SET UP DECEMBER 31 AS CCYYMMDD
      *
     C                     Z-ADDWKCYMD    LDCYMD
      *
      *
      * SET UP DECEMBER 31 AS MMDDYY
      *
     C                     Z-ADDWKYY      WKYER
     C                     Z-ADDWKMM      WKMON
     C                     Z-ADDWKDD      WKDAY
     C                     Z-ADDWKMDY     LDMDY
      *
      *
      * SET UP DECEMBER 31 AS CYYMMDD
      *
     C                     Z-ADDWKMMDD    WKMD
     C                     Z-ADDWKYY      WKY
     C                     SELEC
     C           WKYY      WHEQ 19
     C                     Z-ADD0         WKC
     C           WKYY      WHEQ 20
     C                     Z-ADD1         WKC
     C                     ENDSL
      *
     C                     Z-ADDWK0YMD    LD0YMD
      *
     C                     MOVELDFRFFL    LDRFFL
     C                     MOVELDFCOPY    LDCOPY
     C                     MOVELDFHOLD    LDHOLD
     C                     MOVELDFOUTQ    LDOUTQ
     C                     OUT  LDA
      *
      * IF JOB IS TO RUN IN NIGHT JOBQ, RETRIEVE THE JOBQ FROM DTAARA
      *
     C           DFJOBQ    IFEQ YES
     C           *NAMVAR   DEFN           DAJOBQ
     C                     IN   *NAMVAR
     C                     MOVELDAJOBQ    WKJOBQ 10
     C                     ELSE
     C                     MOVEL'*JOBD'   WKJOBQ    P
     C                     ENDIF
      *
      * MOVE THE 80-CHARACTER COMPILE TIME ARRAY 'CMD' TO A
      * 80-CHARACTER FIELD FOR SUBMITTING.
      *
     C                     SELEC
     C           DFRFFL    WHEQ 'R'
     C                     MOVEAWKJOBQ    CMD,52
     C                     MOVEACMD       CMDSBM
     C           DFRFFL    WHEQ 'F'
     C                     MOVEAWKJOBQ    CMX,52
     C                     MOVEACMX       CMDSBM
     C                     ENDSL
      *
     C                     CALL 'QCMDEXC'
     C                     PARM           CMDSBM
     C                     PARM           LENGTH
      *
      * ISSUE STANDARD REQUEST SUBMISSION MESSAGE
      *
     C                     ADD  1         ERROR
     C                     MOVEL'HS09003' MGID,E
     C                     ENDIF                           IF F8=SBMJOB
      *
     C                     ENDSR
      /EJECT
      *---------------------------------------------------------------
      *  $F4S1 - F4 PROMPT ON SCREEN 1
      *---------------------------------------------------------------
      *
     C           $F4S1     BEGSR
      *
     C                     SELEC
      *
      * IF HOLD OUTPUT OPTION SELECTED
      *
     C           FLD       WHEQ 'DFHOLD'
     C                     MOVE *BLANK    XXHOLD
     C                     CALL 'HP522'
     C                     PARM           XXHOLD
     C                     SETON                     59
     C           XXHOLD    IFNE *BLANK                     IF SELECTED
     C                     MOVELXXHOLD    DFHOLD
     C                     ENDIF                           IF SELECTED
      *
      *
      * IF NIGHT JOBQ OPTION SELECTED
      *
     C           FLD       WHEQ 'DFJOBQ'
     C                     MOVE *BLANK    XXJOBQ
     C                     CALL 'HP522'
     C                     PARM           XXJOBQ
     C                     SETON                     57
     C           XXJOBQ    IFNE *BLANK                     IF SELECTED
     C                     MOVELXXJOBQ    DFJOBQ
     C                     ENDIF                           IF SELECTED
     C                     OTHER
      *
      * F4 NOT VALID FOR THIS FIELD SO ISSUE MESSAGE
      *
     C           ERROR     IFLT MAXMSG
     C                     ADD  1         ERROR
     C                     MOVEL'HS09011' MGID,E
     C                     ENDIF
      *
     C                     ENDSL
      *
     C                     ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $WRMSG - SUBROUTINE TO WRITE ERROR MESSAGES
      *---------------------------------------------------------------
      *
     C           $WRMSG    BEGSR
      *
     C                     CALL 'UT80045J'             43
     C                     PARM           MGID
     C                     PARM           MGDT
     C                     PARM           ERROR
     C                     PARM SDPGM     PGM
     C                     PARM MSGFIL    MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C           *IN43     IFEQ *ON
     C                     MOVELSET1      ROUTNE
     C                     ENDIF
      *
     C                     ENDSR
      *
      *----------------------------------------------------------------
      * $CLMSG - SUBROUTINE TO CLEAR MESSAGES
      *----------------------------------------------------------------
      *
     C           $CLMSG    BEGSR
      *
     C                     CALL 'UT80045J'             43
     C                     PARM *BLANK    MGI
     C                     PARM *BLANK    MGD
     C                     PARM *ZEROS    ERROR
     C                     PARM SDPGM     PGM
     C                     PARM MSGFIL    MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C           *IN43     IFEQ *ON
     C                     MOVELSET1      ROUTNE
     C                     ENDIF
      *
     C                     ENDSR
      *
      *----------------------------------------------------------------
      * $EXIT - SUBROUTINE TO SET ON LR AND END JOB
      *----------------------------------------------------------------
      *
     C           $EXIT     BEGSR
     C                     SETON                     LR
     C                     ENDSR
      /EJECT
      *---------------------------------------------------------------
      * *INZSR - INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C           *INZSR    BEGSR
      *
      * DEFINE LDA
      *
     C           *NAMVAR   DEFN *LDA      LDA
     C                     IN   LDA
      *
      * GLOBAL DEFINES
      *
     C                     MOVE *BLANK    PGM    10        USED IN MSG
     C                     MOVE *BLANK    MSGFL  10        USED IN MSG
     C                     MOVE *BLANK    ROUTNE  6
     C                     MOVEL'00'      RTNCD   2        RETURN CODE
      *
     C           *LIKE     DEFN DFHOLD    XXHOLD
     C           *LIKE     DEFN DFOUTQ    XXOUTQ
     C           *LIKE     DEFN DFJOBQ    XXJOBQ
      *
      *
      *  PARMS FOR USE WITH QCMDEXC.  'LENGTH' IS THE LENGTH OF THE
      *  COMMAND THAT WILL BE ISSUED WITH QCMDEXC.  QCMDEXC REQUIRES
      *  THE FIELD CONTAINING LENGTH TO BE DEFINED AS 15 WITH 5 DECIMAL
      *  POSITIONS.  THE FIELD 'CMDSBM' WILL HOLD THE VALUES OF THE
      *  THE SUBMIT JOB COMMAND WHEN PASSED AS A PARM ON THE CALL TO
      *  QCMDEXC.
      *
     C                     Z-ADD80        LENGTH 155       QCMDEXC PARM
     C                     MOVE *BLANK    CMDSBM 80        QCMDEXC PARM
      *
      * THE FOLLOWING STANDARD CODE MUST BE INCLUDED TO MAKE THE
      * STANDARD ERROR MESSAGE HANDLING PROGRAM FUNCTION PROPERLY.
      * THIS CODE SETS AND CLEARS THE PROGRAM MESSAGE QUEUE.
      *
     C                     Z-ADD20        MAXMSG  20
     C                     MOVEL'*'       MSGPGM           SET QUEUE
     C                     EXSR $CLMSG                     CLEAR MSG
      *
      * DEFAULT VALUES
      *
     C                     Z-ADD1         DFCOPY
     C                     MOVELYES       DFHOLD
     C                     MOVELNO        DFJOBQ
      *
     C                     ENDSR
      /EJECT
      *****************************************************************
      * COMPILE TIME ARRAY NAMED 'CMD' USED IN QCMDEXC
      *****************************************************************
** CMD TABLE
SBMJOB CMD(CALL PGM(AR410CL)) JOB(TAXEXPORTS) JOBQ(__________)
** CMD TABLE
SBMJOB CMD(CALL PGM(AR362CL)) JOB(TAXPCFILES) JOBQ(__________)
