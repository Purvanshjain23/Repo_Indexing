      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Hog Production
      * PROGRAM:     HP381
      * TITLE:       Hog Group Review: Build Movement Workfile
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     01/03/06
      *
      * FUNCTION: This batch program is called from HP440CL and HP441CL. It builds a
      *           Movement Workfile that is used in the Hog Group Review and Movement
      *           Download.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 02/22/06  LeAnne Fedor
      *           The users wanted dates in MMDDCCYY format. So, added more
      *           fields to the file.
      *
      * 02/28/06  LeAnne Fedor
      *           Removed the dates added on 2/22/06. We will now accomplish this
      *           in the Sequel view.
      *
      * 01/21/08  LeAnne Ramsey
      *           Added Tattoo Number field (populated on Market Sales).
      *
      * 08/11/08  LeAnne Ramsey
      *           I wanted to use HSJ064F in another function (for Feeder Pig Sales).
      *           So, I removed the select clause in the LF for CULLS and put a
      *           check for CULLS in the 'read' logic in Cull Sale subroutine.
      *
      * 07/06/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Continuous Flow Flag' to Hog Group file.
      *
      * 07/27/11  LeAnne Ramsey  E1664
      *           Sami Wilson requested that we add 2 fields to the "Download Movements'
      *           function on HP4440 (file HSP381). The fields are:
      *              1) Leave Farm Time
      *              2) Arrive at Plant Time
      *
      * 08/09/11  LeAnne Ramsey  E1664
      *           Sami Wilson requested that we add 1 more field to the "Download Movements'
      *           function on HP4440 (file HSP381). The field is:
      *              1) Unload Time at Plant
      *
      * 11/03/20  ISE            H16853
      *           Recompile only. Increased Buy Order length from 5 to 7.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhsl034d   if   e           k disk
      *  Hog group
      *
      *
     Fhsl058d   if   e           k disk
      *  Movement event
      *
      *
     Fhsl064b   if   e           k disk    rename(cdrec:cdrecb)
      *  Check detail
      *
      *
     Fhsj064f   if   e           k disk
      *  Check detail + Sales movement header
      *
      *
     Fhsp068    if   e           k disk
      *  Killed/dead hogs
      *
      *
     Fhsp069    if   e           k disk
      *  Inventory adjustment
      *
      *
     Fhsp074    if   e           k disk
      *  Transfer movement header
      *
      *
     Fhsp075    if   e           k disk
      *  Transfer movement detail
      *
      *
     Fhsp076    if   e           k disk
      *  Movement type code
      *
      *
     Fhsp084    if   e           k disk
      *  Sales movement header
      *
      *
     Fhsp085    if   e           k disk
      *  Sales movement detail
      *
      *
     Fhsp118    if   e           k disk
      *  Cost movements: Costed transfers
      *
      *
     Fplafcpl3  if   e           k disk
      *  Delivery Tracking (from HPE system)
      *
      *
     Fhsp381    o    e           k disk
      *    Workfile: Movements
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Workfields for date manipulation
      *
     D wkisodate       s               d   datfmt(*iso)
      *
      *
      * Workfields
      *
     D wklnno          s                   like(cmlnno)
     D wkinhd          s                   like(w1inhd)
     D wkhd            s                   like(w1inhd)
      *
      *
      * Parm fields
      *
     D xxacyr          s                   like(w1acyr)
     D xxacpe          s                   like(w1acpe)
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Local data area
      *---------------------------------------------------------------
      *
     Dlda             uds                  dtaara(*lda)
     D  ldhgsn                 6     12  0
      *
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * Mainline
      ****************************************************************
      *
      * Process each movement in the Movement Event file for the Group.
      *
     C     ldhgsn        setll     hsl058d
      *
     C                   dou       *in90 = *on                                  Main do
     C     ldhgsn        reade     hsl058d                                90
     C                   if        *in90 = *off                                 If not EOF
      *
     C                   z-add     memvsn        w1mvsn
     C                   z-add     melnno        w1lnno
      *
      *
      * Perform logic based on Movement Type
      *
     C                   move      memtcd        w1mtcd
      * Transfers
     C                   select
     C                   when      memtcd = 'T'
     C                   exsr      $tran
      * Sales
     C                   when      memtcd = 'S'
     C                   exsr      $sale
      *
      * Inventory adjustments
      *
     C                   when      memtcd = 'A'
     C                   exsr      $adj
      * Daily deads
     C                   when      memtcd = 'D'
     C                   exsr      $dead
     C                   endsl
      *
      * Write a Workfile record
      *
     C                   exsr      $wrt381
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do
      *
     C                   seton                                        lr
      /EJECT
      *---------------------------------------------------------------
      * Process a Transfer Movement
      *---------------------------------------------------------------
      *
     C     $tran         begsr
      *
      * Retrieve "Opposing" group info
      *
     C     mehsn         chain     hsl034d                            92
     C                   if        *in92 = *off
     C                   z-add     hghgsn        w1ohgsn
     C                   move      hghgcd        w1ohgcd
     C                   z-add     hgfscd        w1ofscd
     C                   move      hgblcd        w1oblcd
     C                   move      hgrmcd        w1ormcd
     C                   move      hgppcd        w1oppcd
     C                   endif
      *
      * Retrieve Status from Transfer Movement Header
      *
     C     memvsn        chain     hsp074                             92
     C                   if        *in92 = *off
     C                   movel     mhmscd        w1mscd
     C                   endif
      *
      * Retrieve Head from the Transfer Movement Detail file for this
      * Movement and Line Number.
      *
     C     key01         chain     hsp075                             92
     C                   if        *in92 = *off                                 If detail hit
      *
      * Set up the "shipped" values
      *
     C                   z-add     mdshhd        w1shhd
     C                   z-add     mdshlb        w1shlb
      *
      * Set up the "arrived" values
      *
     C                   eval      w1arhd = mdqlhd + mdrjhd + mddohd
     C                   eval      w1arlb = mdqllb + mdrjlb + mddolb
      *
      * Retrieve Transfer Cost from Costed Movements file
      *
     C     key01         chain     hsp118                             92
     C                   if        *in92 = *off
     C                   z-add     cmhdrt        w1hdrt
     C                   z-add     cmam          w1tram
     C                   endif
      *
      * Set up the Origin/Destination flag and perform Origin/Destination logic
      *
     C                   movel     meodfl        w1odfl
      *
     C                   select
     C                   when      meodfl = 'O'
     C                   exsr      $orig
      *
     C                   when      meodfl = 'D'
     C                   exsr      $dest
     C                   endsl
      *
     C                   endif                                                  If detail hit
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Logic for the Origin group on a Transfer
      *---------------------------------------------------------------
      *
     C     $orig         begsr
      *
      * Flip the sign on the 'transfer cost amount' field
      *
     C                   mult      -1            w1tram
      *
      * If Scheduled, use Scheduled Head and zero pounds. Reverse the sign so
      * that the user can easily see that this is a scheduled transfer out of
      * the group.
      *
     C                   select
     C                   when      w1mscd = 'SC'
     C                   z-sub     mdschd        w1schd
     C                   other
      *
      * Reverse the sign on the Head and Pound fields for ultimately
      * printing in the 'generic' Head and Pounds columns. Reversing the
      * sign makes it easy for the user to find the "out" values on a
      * report.  And, use the "arrived" values--not the "shipped" values.
      *
     C                   eval      w1hd = (mdqlhd + mdrjhd + mddohd) * -1
     C                   eval      w1lb = (mdqllb + mdrjlb + mddolb) * -1
      *
      * Set up "dead-on-arrival" values.
      *
     C                   z-add     mddohd        w1dohd
     C                   z-add     mddolb        w1dolb
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Logic for the Destination Group on a Transfer
      *---------------------------------------------------------------
      *
     C     $dest         begsr
      *
      * If Scheduled, this represents a Scheduled Movement into the user's
      * selected group.
      *
     C                   if        w1mscd = 'SC'                                If sched in
     C                   z-add     mdschd        w1schd
     C                   else
      *
      * This transfer into the group has been shipped. Set up the Head value
      * to include Quality and Reject Head. Do not include DOA Head on this
      * transfer since the DOA Head are not "received" into the group.
      *
     C     mdqlhd        add       mdrjhd        w1hd
     C     mdqllb        add       mdrjlb        w1lb
     C                   endif                                                  If sched in
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Retrieve Sales Movement
      *---------------------------------------------------------------
      *
     C     $sale         begsr
      *
      * Origin/Destination flag
      * Customer number
      *
     C                   movel     meodfl        w1odfl
     C                   z-add     mecvno        w1cvno
      *
      * Retrieve Times from Delivery Tracking:
      *   1) Leave Farm Time
      *   2) Arrive at Plant Time
      *   3) Unload Time at Plant
      *
     C     memvsn        chain     plafcpl3                           92
     C                   if        *in92 = *off
     C                   z-add     afasth        w1lftm
     C                   z-add     afavth        w1aptm
     C                   z-add     afa4th        w1untm
     C                   endif
      *
      * Retrieve from the Sales Movement Header:
      *    1) Movement status
      *    2) Sales type
      *
     C     memvsn        chain     hsp084                             92
     C                   if        *in92 = *off
     C                   movel     shmscd        w1mscd
     C                   movel     shstcd        w1desc
     C                   movel     shstcd        w1stcd
     C                   endif
      *
      * Retrieve Head and Pounds from the Sales Movement Detail file for
      * this Movement/Hog Group.  Show Head and Pounds as negative values
      * to indicate movement out of the group.
      *
     C     key02         chain     hsp085                             92
     C                   if        *in92 = *off                                 If detail hit
      *
     C                   select
     C                   when      w1mscd = 'SC'
     C                   z-sub     sgschd        w1schd
     C                   other
      *
      * Set up "shipped" values.
      *
     C                   z-add     sgshhd        w1shhd
     C                   z-add     sgshlb        w1shlb
      *
      * Set up "arrived" values.
      *
     C     sglvhd        add       sgdohd        w1arhd
     C     sglvlb        add       sgdolb        w1arlb
      *
      * Set up "dead-on-arrival' values.
      *
     C                   z-add     sgdohd        w1dohd
     C                   z-add     sgdolb        w1dolb
      *
      * For the "generic" head and pounds fields,
      * use the "arrived" values on "Paid in Full" and the "shipped" values
      * on all other Sales Movements.
      *
     C                   if        w1mscd = 'FP' or
     C                             w1mscd = 'PP' or
     C                             w1mscd = 'PG'
     C                   add       w1arhd        w1hd
     C                   add       w1arlb        w1lb
     C                   else
     C                   z-add     w1shhd        w1hd
     C                   z-add     w1shlb        w1lb
     C                   endif
      *
      * Reverse the sign on the generic Head and Pound fields for ultimately
      * printing in the 'generic' Head and Pounds columns. Reversing the
      * sign makes it easy for the user to find the "out" values on a
      * report.
      *
     C     -1            mult      w1lb          w1lb
     C     -1            mult      w1hd          w1hd
      *
      * Retrieva Tattoo Number for a Market Sale
      *
     C                   if        shstcd = 'MRKTS'
     C                   exsr      $tattoo
     C                   endif
      *
      * Retrieve Cost of Sales
      *
     C                   if        shstcd = 'CULLS'                             If cull sale
     C                   exsr      $cullsam
     C                   else
      *
     C     key03         chain     hsp118                             92
     C                   if        *in92 = *off                                 If hit
     C                   z-add     cmhdrt        w1hdrt
     C     cmam          mult      -1            w1tram
     C                   endif                                                  If hit
     C                   endif                                                  If cull sale
      *
     C                   endsl
     C                   endif                                                  If detail hit
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Retrieve a Tattoo Number for a Market Sale
      *---------------------------------------------------------------
      *
      * In HPS, we only have "tattoo" in the Check Detail file. But,
      * there could be more than one Check Detail Line for a Movement/Group.
      * And, the Tattoo Number could be different on each line.
      * We will plop only 1 tattoo number into the workfile record.
      * We will use the tattoo nubmer with the greatest number of head.
      *
     C     $tattoo       begsr
      *
     C                   z-add     0             wkhd
      *
     C     key02         setll     hsl064b
      *
     C                   dou       *in94 = *on                                  Do check
     C     key02         reade     hsl064b                                94
     C                   if        *in94 = *off                                 If not eof
      *
     C                   if        cdlvhd > wkhd
     C                   z-add     cdlvhd        wkhd
     C                   z-add     cdtano        w1tano
     C                   endif
      *
     C                   endif                                                  If not eof
     C                   enddo                                                  Do check
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Retrieve Cull Sale Amount for the Group
      *---------------------------------------------------------------
      *
     C     $cullsam      begsr
      *
     C     ldhgsn        setll     hsj064f
      *
     C                   dou       *in94 = *on                                  Do cull sales
     C     ldhgsn        reade     hsj064f                                94
     C                   if        *in94 = *off and shstcd = 'CULLS'            If not eof
     C                   add       cdgram        w1cullsam
     C                   endif                                                  If not eof
     C                   enddo                                                  Do cull sales
      *
      * Flip the sign on the amount for printing.
      *
     C                   mult      -1            w1cullsam
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------------------
      * Retrieve an Adjustment Movement
      *--------------------------------------------------------------------------------------
      *
     C     $adj          begsr
      *
      * Retrieve Status and Head. For Adjustments, there will only be one record per
      * movement. (Note: Inventory Adjustments do not have Pounds.)
      *
     C     memvsn        chain     hsp069                             92
     C                   if        *in92 = *off
     C                   movel     iamscd        w1mscd
     C                   z-add     iaiahd        w1hd
     C                   endif
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------------------
      * Retrieve Daily Dead Movements
      *--------------------------------------------------------------------------------------
      *
     C     $dead         begsr
      *
      * Retrieve Status and Head.  For Daily Deads, there will only be one record per
      * movement. Also, reverse the sign on the fields so that the "daily dead" values
      * will appear as negative numbers--which indicates quickly to the user that this
      * is a movement out of the group.
      *
     C     memvsn        chain     hsp068                             92
     C                   if        *in92 = *off
     C                   movel     kdmscd        w1mscd
     C                   z-sub     kdkdhd        w1hd
     C                   z-sub     kdkdlb        w1lb
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Write Movement Workfile record
      *---------------------------------------------------------------
      *
     C     $wrt381       begsr
      *
      * Flip Movement Event Date from CCYYMMDD to MMDDYY format and
      * retrieve Accounting Year/Period for the date.
      *
     C                   exsr      $date
      *
      * If this was not a "sale", retrieve the Movement Type description.
      *
     C                   if        memtcd <> 'S'
     C     memtcd        chain     hsp076                             92
     C                   if        *in92 = *off
     C                   movel(p)  mtsmds        w1desc
     C                   else
     C                   movel(p)  'Unknown'     w1desc
     C                   endif
     C                   endif
      *
      * Calculate the "Running Total Head"
      *
     C                   add       w1hd          wkinhd
     C                   z-add     wkinhd        w1inhd
      *
      * Retrieve the Hog Group record for the user's "selected" group.
      *
     C     ldhgsn        chain     hsl034d                            92
     C                   if        *in92 = *off                                 If group hit
     C                   z-add     hghgsn        w1hgsn
     C                   move      hghgcd        w1hgcd
     C                   z-add     hgfscd        w1fscd
     C                   move      hgblcd        w1blcd
     C                   move      hgrmcd        w1rmcd
     C                   move      hgppcd        w1ppcd
     C                   move      hgptcd        w1ptcd
     C                   move      hggscd        w1gscd
     C                   move      hggtcd        w1gtcd
     C                   move      hgsxcd        w1sxcd
     C                   z-add     hgadoi        w1adoi
     C                   z-add     hgadoo        w1adoo
      *
      * Created Date in 2 formats: CCYYMMDD, MMDDYY
      *
     C                   z-add     hgcrdt        w1crdt
     C                   if        hgcrdt <> 0
     C     *iso          test(d)                 hgcrdt                 92
     C                   if        *in92 = *off                                 If OK date
     C                   move      hgcrdt        wkisodate
     C     *mdy          move      wkisodate     w1crdtmdy
     C                   endif                                                  If OK date
     C                   endif
      *
      * Opened Date in 2 formats: CCYYMMDD, MMDDYY
      *
     C                   z-add     hgopdt        w1opdt
     C                   if        hgopdt <> 0
     C     *iso          test(d)                 hgopdt                 92
     C                   if        *in92 = *off                                 If OK date
     C                   move      hgopdt        wkisodate
     C     *mdy          move      wkisodate     w1opdtmdy
     C                   endif                                                  If OK date
     C                   endif
      *
      * Disposed Date in 2 formats: CCYYMMDD, MMDDYY
      *
     C                   z-add     hgdsdt        w1dsdt
     C                   if        hgdsdt <> 0
     C     *iso          test(d)                 hgdsdt                 92
     C                   if        *in92 = *off                                 If OK date
     C                   move      hgdsdt        wkisodate
     C     *mdy          move      wkisodate     w1dsdtmdy
     C                   endif                                                  If OK date
     C                   endif
      *
     C                   endif                                                  If group hit
      *
     C                   write     w1rec
     C                   clear                   w1rec
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Retrieve Accounting Year/Period for Movement Event date
      *---------------------------------------------------------------
      *
     C     $date         begsr
      *
      * Movement Event Date in 2 formats: CCYYMMDD, MMDDYY
      *
     C                   z-add     memedt        w1medt
     C                   if        memedt <> 0
     C     *iso          test(d)                 memedt                 92
     C                   if        *in92 = *off                                 If OK date
     C                   move      memedt        wkisodate
     C     *mdy          move      wkisodate     w1medtmdy
     C                   endif                                                  If OK date
     C                   endif
      *
      * Retrieve Accounting Year/Period for Movement Event date
      *
     C                   call      'HP8015'
     C                   parm                    memedt
     C     w1acyr        parm      0             xxacyr
     C     w1acpe        parm      0             xxacpe
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    memvsn
     C                   kfld                    melnno
      *
      *
     C     key02         klist
     C                   kfld                    memvsn
     C                   kfld                    mehgsn
      *
      *
     C     key03         klist
     C                   kfld                    memvsn
     C                   kfld                    wklnno
     C                   kfld                    sghgsn
      *
     C                   endsr
      /EJECT
