     h option(*SRCSTMT:*NODEBUGIO)
      ****************************************************************
      *
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP462
      * TITLE:       SPECIFY FEED TICKETS TO COST
      * PROGRAMMER:  ROSE CENTONZE
      * CREATED:     04/15/94
      *
      * FUNCTION: USES A SPECIFY RECORD FORMAT TO ALLOW USER TO
      *           ENTER A BUSINESS OFFICE, A CUT-OFF DELIVERY DATE,
      *           AND SELECT WHETHER TO EDIT OR FINAL FEED TICKET
      *           COSTINGS.
      *
      *           THIS PROGRAM IS CALLED FROM A MENU.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      * 08/09/94  R. MARTIN     ADD REPORT OPTIONS: # COPY, HOLD (Y/N),
      *                         OUTQ TO DISPLAY AND *LDA OUTPUT. ADD
      *                         'RUN IN NIGHT JOBQ' TO DISPLAY AND
      *                         SBMJOB OUTPUT. MOVE PARMS TO *LDA &
      *                         SUBMIT A CL TO CALL HP262.
      *
      * 04/26/95  LEANNE FEDOR
      *           CHANGED F4 ROUTINE TO REDISPLAY SCREEN INSTEAD OF
      *           EDITING SCREEN.
      *
      * 02/02/00  LeAnne Fedor
      *           Removed print options (hold, copies, outque, etc.) from screen
      *           and replaced them with a function key that calls the pop-up
      *           window of print options.
      *
      * 04/29/09  LeAnne Ramsey
      *           Added 2 new warning messages to alert the user that feed dollar
      *           data has already been updated to JDE for the currently open period.
      *           The messages are hardcoded in the DSPF and conditioned with
      *           indicators 87 and 88.
      *
      * 09/21/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Upload Date' to Feed Ticket Header.
      *
      * 09/26/18  Danny Nguyen - (S13682)
      *           Added HSP009 to file spec in order to get Company Code by Business
      *           Office code.
      *
      * 05/10/22 Eric L SDN736 Recompiled ticket nbr increase (TKNO & RTNO 7.0 TO 9.0)
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHPD462    CF   E             WORKSTN INFDS(IOFEED)
      *
      *
     FHSP002    IF   E           K DISK
      *  Functions
      *
      *
     Fhsl037m   if   e           k disk    infds(dbfeed)
      *   Feed ticket header  (selects only EN, RC records)
      *
      *
     Fhsp116    if   e           k disk
      *   HPS-To-JDE Uploads: Status changes
      *
13682Fhsp009    if   e           k disk
      *   Business Office
      *
      /EJECT
      ****************************************************************
      * Definition Specifications
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  COMPILE TIME ARRAY FOR SUBMIT JOB COMMAND USED IN QCMDEXC
      *---------------------------------------------------------------
     D CMD             S              1    DIM(80) CTDATA PERRCD(80)
      *
      *---------------------------------------------------------------
      * EDIT/FINAL FLAGS AND DESCRIPTIONS
      *---------------------------------------------------------------
     D EFF             S              1    DIM(2) CTDATA PERRCD(1)
     D EFD             S             10    DIM(2) ALT(EFF)
      *
      *
      *---------------------------------------------------------------
      * STANDARD ERROR MESSAGE HANDLING DATA STRUCTURES
      *---------------------------------------------------------------
      *
      * FOR ERROR MESSAGE HANDLING, A PACKED INDEX (E) IS REQUIRED.
      * FOR PROGRAM READABILITY, DEFINE A CORRESPONDING ERROR COUNT
      * FIELD CALLED 'ERROR'
      *
     D                 DS                  INZ
     D  ERROR                  1      2P 0
     D  E                      1      2P 0
      *
      * THIS DATA STRUCTURE SUPPLIES THE NAME OF THE MESSAGE FILE TO
      * THE MESSAGE HANDLING CL PROGRAM.  THE FIELD NAME MSGFIL MUST BE
      * CONSTANT. THE VALUE IN QUOTES IS THE NAME OF THE SPECIFIC
      * MESSAGE FILE CONTAINING THE USER DEFINED MESSAGES.
      *
     D                 DS                  INZ
     D  MSGFIL                 1     10    INZ('HSMSGF    ')
      *
      * THE FOLLOWING 3 DATA STRUCTURES ARE USED TO SPEED MESSAGE
      * HANDLING SINCE IT IS FASTER TO CLEAR DATA STRUCTURES THAN
      * ARRAYS.  EACH IS ASSOCIATED WITH A STANDARD MESSAGE ARRAY.
      *
     D MGI             DS           140    INZ
     D  MGID                   1    140
     D                                     DIM(20)                              MSG ID ARRAY
      *
     D MGD             DS          1000    INZ
     D  MGDT                   1   1000
     D                                     DIM(20)                              MSG PARMS
      *
     D MGWK            DS            50    INZ
     D  MGW                    1     50
     D                                     DIM(50)                              MSG WORK PARMS
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      * STANDARD WORKSTATION INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTWSFR (RECORD FORMAT: UTIDFRR)
     D IOFEED        E DS                  EXTNAME(UTWSFR)
      *
      *---------------------------------------------------------------
      * STANDARD DATABASE FILE INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTDBFR (RECORD FORMAT: FDBCKD)
     D DBFEED        E DS                  EXTNAME(UTDBFR)
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D CREATE          C                   CONST('CREATE')
     D REVISE          C                   CONST('REVISE')
     D DELETE          C                   CONST('DELETE')
     D VIEW            C                   CONST('VIEW  ')
     D SELECT          C                   CONST('SELECT')
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
     D SET1            C                   CONST('SET1  ')
     D EDIT1           C                   CONST('EDIT1 ')
     D SCRN1           C                   CONST('SCRN1 ')
     D EXIT            C                   CONST('EXIT  ')
     D UPDATE          C                   CONST('UPDATE')
      *
      *---------------------------------------------------------------
      *  LOCAL DATA AREA
      *---------------------------------------------------------------
      *
     D LDA            UDS
     D  LDFMBO                 1      5
     D  LDCYMD                 6     13  0
     D  LDEFFL                14     14
     D  LDMDY                 15     20  0
     D  LDBODS                21     50
      *
     D  LDOUTU               401    410
     D  LDHOLD               411    411
     D  LDCOPY               412    412  0
     D  LDOUTQ               413    422
      *
      *
      * Workfields
      *
     D wkhucd          s                    like(schucd)
13682D wkcocd          s                    like(sccocd)
      *
      *
      * Workfields for date manipulation
      *
     D wkisodate       s               d   datfmt(*iso)
      *
      *---------------------------------------------------------------
      *  Definition for external data area 'DAAPER'
      *---------------------------------------------------------------
     D
     D daaper          ds                  dtaara(daaper)
     D  daccyy                 1      4  0
     D  daper                  5      6  0
     D  dabpdt                 7     14  0
     D  daepdt                15     22  0
     D  dapgfl                23     23
     D  dappfl                24     24
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
     C                   MOVEL     SET1          ROUTNE
      *
     C     *INLR         DOWEQ     *OFF
     C     ROUTNE        CASEQ     SET1          $SET1
     C     ROUTNE        CASEQ     SCRN1         $SCRN1
     C     ROUTNE        CASEQ     EDIT1         $EDIT1
     C     ROUTNE        CASEQ     EXIT          $EXIT
     C                   ENDCS
     C                   ENDDO
      /EJECT
      *----------------------------------------------------------------
      * SET ENVIRONMENT FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SET1         BEGSR
      *
      *  SET ROUTINE TO DISPLAY SCREEN
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SUBROUTINE TO PERFORM OPERATOR I/O FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SCRN1        BEGSR
      *
      * IF THE USER FAILED THE INITIAL SECURITY CHECKS, SETON 99
      * TO PROTECT INPUT FIELDS AND INVALIDATE FUNCTION KEYS.
      *
     C     TERMFL        IFEQ      YES
     C                   SETON                                        99
     C                   ENDIF
      *
      * WRITE THE ERROR MESSAGES FROM THE ERROR ARRAYS TO THE
      * ERROR MESSAGE SUBFILE
      *
     C                   EXSR      $WRMSG
      *
      * WRITE SCREEN 1 TO CRT
      *
     C                   WRITE     HP462K1
     C                   WRITE     HP462EC
     C                   EXFMT     HP462R1
      *
      * CLEAR THE MESSAGES FROM THE MESSAGE DATA STRUCTURES AND PROGRAM
      * MESSAGE QUEUE.
      *
     C                   EXSR      $CLMSG
      *
      * GET USER'S ENTRY AND SET THE NEXT ROUTINE
      *
     C                   SELECT
     C     *IN03         WHENEQ    *ON                                          F3-EXIT
     C     TERMFL        OREQ      YES                                          BAD USER
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN17         WHENEQ    *ON                                          F17-PRINT OPT
     C                   MOVEL     SCRN1         ROUTNE
     C                   CALL      'HP451'
     C                   PARM                    SDPGM
     C     LDCOPY        PARM      LDCOPY        XXCOPY
     C                   PARM                    LDHOLD
     C                   PARM                    LDOUTQ
     C                   PARM                    XXNITE
     C                   PARM                    XXJOBQ
      *
     C     *IN20         WHENEQ    *ON                                          F20-WRKSPLF
     C                   CALL      'UTWRKSPL'
     C                   MOVEL     SCRN1         ROUTNE
      *
      *
      * CHECK FOR A USER PROMPT FIRST. THE USER MAY WANT
      * TO SELECT A NEW BUSINESS OFFICE.
      *
     C     *IN04         WHENEQ    *ON                                          WH PROMPT
     C                   EXSR      $F4S1
     C                   MOVEL     SCRN1         ROUTNE
     C                   OTHER
      *
      * ALWAYS CHECK SECURITY FOR BUSINESS OFFICE
      *
     C                   MOVEL(P)  'HP462'       WKFNCD
     C                   EXSR      $CHKBO
     C                   MOVEL     EDIT1         ROUTNE
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SUBROUTINE TO EDIT INPUT FIELDS FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $EDIT1        BEGSR
      *
      * Validate date
     C                   select
     C                   when      dfmdy = 0
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
      *
     C                   when      dfmdy < 0
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   other
      *
     C     *mdy          test(d)                 dfmdy                  92
     C                   if        *in92 = *on                                  If bad date
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09004'
     C                   endif
     C                   else
      *
      * Flip the date from MMDDYY to CCYYMMDD.
      *
     C     *mdy          move      dfmdy         wkisodate
     C                   move      wkisodate     ldcymd
     C                   endif                                                  If bad date
     C                   endsl
      *
      * VERIFY THAT EITHER EDIT OR FINAL WAS SELECTED
      *
     C                   Z-ADD     1             X                 2 0
     C     DFEFFL        LOOKUP    EFF(X)                                 90
     C     *IN90         IFEQ      *ON
     C                   MOVEL     EFD(X)        DFEFDS
     C                   ELSE
     C                   MOVE      *BLANK        DFEFDS
     C                   MOVE      *ON           *IN33
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09107'     MGID(E)
     C                   ENDIF
     C                   ENDIF
      *
      *
      * Check to see if HPS-to-JDE Feed Uploads have already happened for
      * this Period.
     C                   exsr      $uploads
      *
      *
      * IF THERE ARE NO ERRORS, EXECUTE THE SUBROUTINE TO PROCESS THE
      * USERS REQUEST
      *
     C     ERROR         IFEQ      0
     C     *IN04         ANDEQ     *OFF
      *
     C     *IN44         IFEQ      *OFF
     C                   SETON                                        44
     C                   ELSE
     C                   EXSR      $PROC1
     C                   ENDIF
     C                   ELSE
     C                   SETOFF                                       44
     C                   ENDIF
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *-------------------------------------------------------------------------------
      * Have any JDE Uploads involving Feed Dollars already been done for this Period
      *-------------------------------------------------------------------------------
      *
     C     $uploads      begsr
      *
     C                   setoff                                       8788
      *
      * Bring in the data area to get the Accounting Period that is currently open.
      *
     C                   in        daaper
      *
     C                   z-add     daper         dffdper
     C                   z-add     daper         dffpper
      *
      * Are there any Uncosted Feed Tickets for the Period?
      *
     C     dabpdt        setll     hsl037m
     C                   read      hsl037m                                92
     C                   if        *in92 = *off and fhtkdt <= daepdt            If uncosted
      *
      * S13682-Get Company Code by Business Office code entered on screen.
13682C     DFFMBO        chain     hsp009
  |  C                   if        %found
  |  C                   eval      wkcocd = BOCOCD
13682C                   endif
      *
      * The users do have uncosted feed tickets for the current accounting period.
      * So, have they already uploaded any Feed Dollars to JDE for this period.
      * If so, set on the indicator that prints an ALERT on the screen; we let them
      * continue, but if they do not re-upload to JDE we may have variances between
      * HPS and JDE after they close the Period.
      *
      * FD: HPS Feed Delivery Dollars
      *
     C                   move      'FD'          wkhucd
     C     key01         chain     hsp116                             92
     C                   if        *in92 = *off and scuplscd = 'U'
     C                   seton                                        87
     C                   endif
      *
      * FP: HPS Feed Pickup Dollars
      *
     C                   move      'FP'          wkhucd
     C     key01         chain     hsp116                             92
     C                   if        *in92 = *off and scuplscd = 'U'
     C                   seton                                        88
     C                   endif
     C                   endif                                                  If uncosted
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * CHECK THE BUSINESS OFFICE ENTERED AS A RESTRICTOR
      *----------------------------------------------------------------
      *
      * THE BUSINESS OFFICE ENTERED MUST:
      *    BE A VALID OFFICE IN THE BUSINESS OFFICE MASTER
      *    BE A 'FEED MILL' DIVISION OFFICE
      *    HAVE A SECURITY LOCATION TO WHICH THE USER IS AUTHORIZED
      *
     C     $CHKBO        BEGSR
      *
      * CHECK THE USER'S SECURITY TO THIS BUSINESS OFFICE.
      * SET INDVFL TO YES TO TELL SECURITY PROGRAM TO COMPARE THE
      * FUNCTION DIVISION CODE TO THE B.O. DIVISION CODE.
      *
     C                   MOVEL     YES           INDVFL
     C                   EXSR      $SEC
     C                   MOVEL     NO            INDVFL
      *
     C                   MOVEL     OUBODS        DFBODS
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * CALL SECURITY PROGRAM
      *---------------------------------------------------------------
      *
     C     $SEC          BEGSR
      *
      * SETUP THE FIELDS TO SEND INTO THE SECURITY PROGRAM
      *
     C                   MOVEL     WKFNCD        INFNCD                         PGM NAME
     C                   MOVEL     DFFMBO        INBOBO                         SCREEN BO
      *
     C                   MOVE      *BLANK        OUBOBO                         BO CODE
     C                   MOVE      *BLANK        OUBODS                         BO DESC
     C                   MOVE      *BLANK        OUDVCD                         FUNCTION DIV
     C                   MOVEL     NO            TERMFL            1            TERMINAL FLG
      *
     C                   CALL      'HPSEC  '
      **** IN
     C                   PARM                    MGID                           MSGID ARRAY
     C                   PARM                    MGDT                           MSGDTA DATA
     C                   PARM                    ERROR                          # OF ERRORS
     C                   PARM                    INFNCD           10            FUNC CODE
     C                   PARM                    INBOBO            5            BO CODE
     C                   PARM                    INDVFL            1            CHECK DIV?
     C                   PARM                    INBOFL            1            CHECK B.O.?
      **** OUT
     C                   PARM                    OUBOBO            5            BO CODE
     C                   PARM                    OUBODS           30            BO DESC.
     C                   PARM                    OUDVCD            5            DIV CODE
     C                   PARM                    SECFL             1            SEC FLAG
     C                   PARM                    OUBOFL            1            BO ERRFLG
     C                   PARM                    OURMFL            1
      *
     C     OUBOFL        IFEQ      YES                                           BAD B.O.
     C                   SETON                                        31
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * SUBROUTINE TO PROCESS THE USER'S REQUEST
      *---------------------------------------------------------------
      *
     C     $PROC1        BEGSR
      *
      *  IF USER TOOK F8=SUBMIT EDIT/FINAL
      *
     C     *IN08         IFEQ      *ON                                          IF F8=SBMJOB
      *
      * PLACE OPTIONS INTO LOCAL DATA AREA AND OUTPUT AREA
      *
     C                   MOVEL     DFFMBO        LDFMBO
     C                   MOVEL     DFBODS        LDBODS
     C                   Z-ADD     DFMDY         LDMDY
     C                   MOVEL     DFEFFL        LDEFFL
     C                   OUT       LDA
      *
      *
      * MOVE THE 80-CHARACTER COMPILE TIME ARRAY 'CMD' TO AN
      * 80-CHARACTER FIELD FOR PASSING AS A PARM WITH QCMDEXC.
      *
     C                   MOVEA     XXJOBQ        CMD(50)
     C                   MOVEA     CMD           CMDSBM
      *
     C                   CALL      'QCMDEXC'
     C                   PARM                    CMDSBM
     C                   PARM                    LENGTH
      *
      * ISSUE STANDARD REQUEST SUBMISSION MESSAGE
      *
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09003'     MGID(E)
     C                   ENDIF                                                  IF F8=SBMJOB
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * F4 PROMPT ON SCREEN 1
      *---------------------------------------------------------------
      *
     C     $F4S1         BEGSR
      *
     C                   SELECT
      *
      * IF BUSINESS OFFICE
      *
     C     FLD           WHENEQ    'DFFMBO'
     C                   MOVE      *BLANK        XXFMBO
     C                   MOVE      *BLANK        XXBODS
     C                   CALL      'HP503'
     C                   PARM                    XXFMBO
     C                   PARM                    XXBODS
     C                   PARM                    SVDVCD
     C                   SETON                                        51
     C     XXFMBO        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXFMBO        DFFMBO
     C                   MOVEL     XXBODS        DFBODS
     C                   ENDIF                                                  IF SELECTED
      *
      * IF EDIT/FINAL FLAG
      *
     C     FLD           WHENEQ    'DFEFFL'
     C                   MOVE      *BLANK        XXEFFL
     C                   MOVE      *BLANK        XXEFDS
     C                   CALL      'HP525'
     C                   PARM                    XXEFFL
     C                   PARM                    XXEFDS
     C                   SETON                                        52
     C     XXEFFL        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXEFFL        DFEFFL
     C                   MOVEL     XXEFDS        DFEFDS
     C                   ENDIF                                                  IF SELECTED
     C                   OTHER
      *
      * F4 NOT VALID FOR THIS FIELD SO ISSUE MESSAGE
      *
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09011'     MGID(E)
     C                   ENDIF
      *
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * SUBROUTINE TO WRITE ERROR MESSAGES
      *---------------------------------------------------------------
      *
     C     $WRMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM                    MGID
     C                   PARM                    MGDT
     C                   PARM                    ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * SUBROUTINE TO CLEAR MESSAGES
      *----------------------------------------------------------------
      *
     C     $CLMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM      *BLANK        MGI
     C                   PARM      *BLANK        MGD
     C                   PARM      *ZEROS        ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * SUBROUTINE TO SET ON LR AND END JOB
      *----------------------------------------------------------------
      *
     C     $EXIT         BEGSR
     C                   SETON                                        LR
     C                   ENDSR
      *
      /EJECT
      *---------------------------------------------------------------
      * INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      * Key lists
      *
     C     key01         klist
13682C                   kfld                    wkcocd
     C                   kfld                    daccyy
     C                   kfld                    daper
     C                   kfld                    wkhucd
      *
      *
      * DEFINE LDA
     C     *DTAARA       DEFINE    *LDA          LDA
     C                   IN        LDA
      *
      * Initialize LDA fields for printing
      *
     C                   MOVE      *BLANK        LDHOLD
     C                   Z-ADD     0             LDCOPY
     C                   MOVEL     LDOUTU        LDOUTQ
     C                   MOVEL     '*JOBD'       XXJOBQ           10
     C                   MOVEL     NO            XXNITE            1
     C                   Z-ADD     0             XXCOPY            1 0
      *
      * GET THIS FUNCTION'S NUMBER OF COPIES, HOLD YES/NO
      *
     C     SDPGM         CHAIN     HSP002                             92
     C     *IN92         IFEQ      *OFF
     C                   Z-ADD     FNCOPY        LDCOPY
     C                   MOVEL     FNHOLD        LDHOLD
     C                   ENDIF
      *
     C     LDCOPY        IFEQ      0
     C                   Z-ADD     1             LDCOPY
     C                   ENDIF
      *
     C     LDHOLD        IFEQ      *BLANK
     C                   MOVEL     NO            LDHOLD
     C                   ENDIF
      *
      * GLOBAL DEFINES
      *
     C                   MOVE      *BLANK        PGM              10            USED IN MSG
     C                   MOVE      *BLANK        MSGFL            10            USED IN MSG
     C                   MOVE      *BLANK        ROUTNE            6
     C                   MOVEL     '00'          RTNCD             2            RETURN CODE
      *
      * ALPHA PARM FIELDS
      *
     C     *LIKE         DEFINE    DFFMBO        XXFMBO
     C     *LIKE         DEFINE    DFBODS        XXBODS
     C     *LIKE         DEFINE    DFEFFL        XXEFFL
     C     *LIKE         DEFINE    DFEFDS        XXEFDS
      *
      *  PARMS FOR USE WITH QCMDEXC.  'LENGTH' IS THE LENGTH OF THE
      *  COMMAND THAT WILL BE ISSUED WITH QCMDEXC.  QCMDEXC REQUIRES
      *  THE FIELD CONTAINING LENGTH TO BE DEFINED AS 15 WITH 5 DECIMAL
      *  POSITIONS.  THE FIELD 'CMDSBM' WILL HOLD THE VALUES OF THE
      *  THE SUBMIT JOB COMMAND WHEN PASSED AS A PARM ON THE CALL TO
      *  QCMDEXC.
      *
     C                   Z-ADD     80            LENGTH           15 5          QCMDEXC PARM
     C                   MOVE      *BLANK        CMDSBM           80            QCMDEXC PARM
      *
      * THE FOLLOWING STANDARD CODE MUST BE INCLUDED TO MAKE THE
      * STANDARD ERROR MESSAGE HANDLING PROGRAM FUNCTION PROPERLY.
      * THIS CODE SETS AND CLEARS THE PROGRAM MESSAGE QUEUE.
      *
     C                   Z-ADD     20            MAXMSG            2 0
     C                   MOVEL     '*'           MSGPGM                         SET QUEUE
     C                   EXSR      $CLMSG                                       CLEAR MSG
      *
      * EXECUTE THE SECURITY SUBROUTINE TO DETERMINE USER
      * AUTHORIZATIONS.
      *
     C                   MOVEL(P)  SDPGM         WKFNCD           10
     C                   MOVEL     NO            INBOFL
     C                   EXSR      $SEC
     C                   MOVEL     YES           INBOFL            1
      *
      * IF ERRORS ON INITIAL CALL, SET TERMINAL FLAG TO YES.
      *
     C     SECFL         IFEQ      YES
     C                   MOVEL     YES           TERMFL
     C                   ENDIF
      *
      * MOVE RETURNED FIELDS TO CONTROL RCD FMT FIELDS
      *
     C                   MOVEL     OUBOBO        DFFMBO
     C                   MOVEL     OUBODS        DFBODS
      *
      * SAVE THIS FUNCTION'S DIVISION CODE
      *
     C     *LIKE         DEFINE    OUDVCD        SVDVCD
     C                   MOVEL     OUDVCD        SVDVCD
      *
     C                   ENDSR
      *****************************************************************
      * COMPILE TIME ARRAY NAMED 'CMD' USED IN QCMDEXC
      *****************************************************************
** CMD TABLE
SBMJOB CMD(CALL PGM(HP462CL)) JOB(FEEDCOST) JOBQ(__________)
** EFF
EEDIT
FFINAL
