// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKMWXFR
// ?Date: 14.08.2025 Time: 02:52:13
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Modifications and Comments
DO;

//?R10690 JJH 06/12/17 - Producer Address
//?- Get Producer Fax Numbers from Producer Address
//?R10690 JJH 06/12/17 - Producer Location Address
//?- Get Producer Location Fax Numbers from Producer Location Address
//?FP1049 add email like faxing
//?12/17/2007 slm  1st clean up * out code
//?01/20/2008 slm Producer & location restrict on this
//?H16853 ISE 11/09/2020 - Recompiled due to change in Buy Order Number
ENDDO;

EXECUTE FUNCTION(Rtv/Crt Tt Fax Driver RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1204343;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.TH_Tattoo_Number);
PARAMETER(PAR.TH_Voucher_Payment_Date);
PARAMETER(PAR.TH_Source_Type);
PARAMETER(PAR.TH_Payment_Type);
PARAMETER(PAR.PD_Producer_Code);
PARAMETER(PAR.@Status_Detail_Summary);
PARAMETER(PAR.Ignore_Fax_Y_N);
PARAMETER(PAR.Status_3);
PARAMETER(PAR.Ignore_Email_Y_N_User);
{
 //?USER: Initialize routine

 // PAR.TFD Sequence Number = CON.*ZERO
 PAR.TFD_Sequence_Number = *ZERO;

 //?history
 DO;

 //?FP1049 - Email processing
 //?12/17/2007
 ENDDO;

 //?USER: Process Data record

 // WRK.@Status (Yes/No) = CND.Yes
 WRK.@Status_Yes_No = 'Y';

 //?Do not process held over tattoo headers
 CASE;

 // IF DB1.TH Held Over Record is Yes
 IF DB1.TH_Held_Over_Record = 'Y';

 // WRK.@Status (Yes/No) = CND.No
 WRK.@Status_Yes_No = 'N';

 //?Do not process held over tattoo headers
 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF DB1.TH Hog Class Type is Resale
 IF DB1.TH_Hog_Class_Type = 'R';

 //?Do select resale per Kar 04/17/95
 // WRK.@Status (Yes/No) = CND.No
 WRK.@Status_Yes_No = 'N';

 // IF *OTHERWISE
 IF *OTHERWISE;

 //?If Source Type selected
 CASE;

 // IF PAR.TH Source Type EQ WRK.Blank Usr 1 fld Usr
 IF PAR.TH_Source_Type = WRK.Blank_Usr_1_fld_Usr;

 //?If Source Type selected
 // IF PAR.TH Source Type EQ DB1.TH Source Type
 IF PAR.TH_Source_Type = DB1.TH_Source_Type;

 //?If Source Type selected
 // IF *OTHERWISE
 IF *OTHERWISE;

 // WRK.@Status (Yes/No) = CND.No
 WRK.@Status_Yes_No = 'N';

 ENDIF;

 //?If Tattoo number selected...
 CASE;

 // IF PAR.TH Tattoo Number is Zero
 IF PAR.TH_Tattoo_Number = *ZERO;

 //?If Tattoo number selected...
 // IF PAR.TH Tattoo Number EQ DB1.TH Tattoo Number
 IF PAR.TH_Tattoo_Number = DB1.TH_Tattoo_Number;

 //?If Tattoo number selected...
 // IF *OTHERWISE
 IF *OTHERWISE;

 // WRK.@Status (Yes/No) = CND.No
 WRK.@Status_Yes_No = 'N';

 ENDIF;

 //?If Producer selected...
 CASE;

 // IF PAR.PD Producer Code is Blank
 IF PAR.PD_Producer_Code = *BLANK;

 //?If Producer selected...
 // IF PAR.PD Producer Code EQ DB1.PD Producer Code
 IF PAR.PD_Producer_Code = DB1.PD_Producer_Code;

 //?If Producer selected...
 // IF *OTHERWISE
 IF *OTHERWISE;

 // WRK.@Status (Yes/No) = CND.No
 WRK.@Status_Yes_No = 'N';

 ENDIF;

 //?If Payment Type selected
 CASE;

 // IF PAR.TH Payment Type EQ WRK.Blank Usr 1 fld Usr
 IF PAR.TH_Payment_Type = WRK.Blank_Usr_1_fld_Usr;

 //?If Payment Type selected
 // IF PAR.TH Payment Type EQ DB1.TH Payment Type
 IF PAR.TH_Payment_Type = DB1.TH_Payment_Type;

 //?If Payment Type selected
 // IF *OTHERWISE
 IF *OTHERWISE;

 // WRK.@Status (Yes/No) = CND.No
 WRK.@Status_Yes_No = 'N';

 ENDIF;

 ENDIF;

 ENDIF;

 //?Write Fx Driver: 1 rcd for sum/det PRINT, OR 1for FAX or 1for email
 CASE;

 // IF WRK.@Status (Yes/No) is Yes
 IF WRK.@Status_Yes_No = 'Y';

 // PAR.TFD Producer Sequence Sts = WRK.Blank USR
 PAR.TFD_Producer_Sequence_Sts = WRK.Blank_USR;

 // PAR.TFD Header Action-Crc Sum = WRK.Blank USR
 PAR.TFD_Header_Action_Crc_Sum = WRK.Blank_USR;

 // PAR.TFD Header Action-Crc Dtl = WRK.Blank USR
 PAR.TFD_Header_Action_Crc_Dtl = WRK.Blank_USR;

 CASE;

 // IF PAR.@Status Detail/Summary is Summary or both
 IF PAR.@Status_Detail_Summary = 'B'/'S';

 // PAR.TFD Header Action-Crc Sum = CND.Carc Sum
 PAR.TFD_Header_Action_Crc_Sum = 'Carc Sum';

 ENDIF;

 CASE;

 // IF PAR.@Status Detail/Summary is Detail or both
 IF PAR.@Status_Detail_Summary = 'B'/'D';

 CASE;

 // IF DB1.HC Class Code is Resale
 IF DB1.HC_Class_Code = 'RSL';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.TFD Header Action-Crc Dtl = CND.Prt Crc Dtl
 PAR.TFD_Header_Action_Crc_Dtl = 'Prt CrcDtl';

 ENDIF;

 ENDIF;

 //?Write Driver for PRINT
 CASE;

 // IF PAR.Ignore Fax Y/N is Yes
 IF PAR.Ignore_Fax_Y_N = 'Y';

 // OR PAR.Ignore Fax Y/N is No
 OR ( PAR.Ignore_Fax_Y_N = 'N';

 // AND PAR.Ignore Fax Y/N is Yes
 AND PAR.Ignore_Fax_Y_N = 'Y' );

 CASE;

 // IF PAR.TFD Header Action-Crc Sum NE WRK.Blank USR
 IF PAR.TFD_Header_Action_Crc_Sum <> WRK.Blank_USR;

 // OR PAR.TFD Header Action-Crc Dtl NE WRK.Blank USR
 OR PAR.TFD_Header_Action_Crc_Dtl <> WRK.Blank_USR;

 // PAR.TFD Sequence Number = PAR.TFD Sequence Number + CON.1
 PAR.TFD_Sequence_Number = PAR.TFD_Sequence_Number + 1;

 EXECUTE FUNCTION(Crt Tattoo Fax Driver CR) TYPE(CRTOBJ) FILE(PKD7CPP)           AB1203671;
 PARAMETER(PAR.TFD_Sequence_Number);
 PARAMETER(PAR.TFD_Producer_Sequence_Sts);
 PARAMETER('P');
 PARAMETER(PAR.TFD_Header_Action_Crc_Sum);
 PARAMETER(PAR.TFD_Header_Action_Crc_Dtl);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(DB1.TH_Voucher_Payment_Date);
 PARAMETER(DB1.TH_AP_Voucher_Document#);
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?Execute internal function

   // PAR.RS Record Status = CND.Active
   PAR.RS_Record_Status = 'A';

   // PAR.RS User Added = JOB.*USER
   PAR.RS_User_Added = JOB.*USER;

   // PAR.RS Date Added = JOB.*Job date
   PAR.RS_Date_Added = JOB.*Job_date;

   // PAR.RS Time Added = JOB.*Job time
   PAR.RS_Time_Added = JOB.*Job_time;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

  }

 }

 ENDIF;

 ENDIF;

 //?OR Write Driver for FAX
 CASE;

 // IF PAR.Ignore Fax Y/N is No
 IF PAR.Ignore_Fax_Y_N = 'N';

 // PAR.Fax Area Code # = CON.*BLANK
 PAR.Fax_Area_Code_# = *BLANK;

 // PAR.Fax Telephone = CON.*BLANK
 PAR.Fax_Telephone = *BLANK;

 // PAR.Fax Area Code # 2 = CON.*BLANK
 PAR.Fax_Area_Code_#_2 = *BLANK;

 // PAR.Fax Telephone 2 = CON.*BLANK
 PAR.Fax_Telephone_2 = *BLANK;

 // WRK.Fax Area Code Prdcr 1 USR = CON.*BLANK
 WRK.Fax_Area_Code_Prdcr_1_USR = *BLANK;

 // WRK.Fax Telephone Prdcr 1 USR = CON.*BLANK
 WRK.Fax_Telephone_Prdcr_1_USR = *BLANK;

 // WRK.Fax Area Code Prdcr 2 USR = CON.*BLANK
 WRK.Fax_Area_Code_Prdcr_2_USR = *BLANK;

 // WRK.Fax Telephone Prdcr 2 USR = CON.*BLANK
 WRK.Fax_Telephone_Prdcr_2_USR = *BLANK;

 //?Retrieve Fax Status
 EXECUTE FUNCTION(Rtv Fax Status        RT) TYPE(RTVOBJ) FILE(PKAFREP)           AB1203678;
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(DB1.PL_Location_Code);
 PARAMETER(PAR.Pl_VND_Address_Number);
 PARAMETER(PAR.PL_Fax_Status);
 PARAMETER(PAR.PL_Fax_Carcass_Summary);
 PARAMETER(PAR.PL_Unused);
 PARAMETER(PAR.PL_Fax_Carcass_Detail);
 PARAMETER(PAR.PL_Fax_to_Producer);
 PARAMETER(PAR.PL_Producer_Fax_Sequence);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?R10690 JJH 06/12/17 - Get Fax Numbers from Producer Location Address
 //?Retrieve Location Fax Phone Nbrs
 CASE;

 // IF PAR.PL Fax Status is Yes
 IF PAR.PL_Fax_Status = 'Y';

 // Call program Rtv Producer Loc Addr XF.
 CALL PROGRAM(Rtv Producer Loc Addr XF) ('PWC6XFR');
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(DB1.PL_Location_Code);
 PARAMETER(WRK.Address_Number);
 PARAMETER(WRK.Pass_Name);
 PARAMETER(WRK.Address_1);
 PARAMETER(WRK.Address_2);
 PARAMETER(WRK.Address_3);
 PARAMETER(WRK.City);
 PARAMETER(WRK.State);
 PARAMETER(WRK.Zip);
 PARAMETER(WRK.Area_Code);
 PARAMETER(WRK.Country_Code);
 PARAMETER(WRK.Telephone);
 PARAMETER(PAR.Fax_Area_Code_#);
 PARAMETER(PAR.Fax_Telephone);
 PARAMETER(PAR.Fax_Attn_1);
 PARAMETER(PAR.Fax_Area_Code_#_2);
 PARAMETER(PAR.Fax_Telephone_2);
 PARAMETER(PAR.Fax_Attn_2);
 PARAMETER(WRK.Vendor_1099);
 PARAMETER(WRK.Vendor_Tax_Id);

 ENDIF;

 //?R10690 JJH 06/12/17 - Get Fax Numbers from Producer Address
 //?If Fax to Producer, Rtv producer's fax nbrs.
 CASE;

 // IF PAR.PL Fax to Producer is Yes
 IF PAR.PL_Fax_to_Producer = 'Y';

 EXECUTE FUNCTION(Rtv Prdcr Vnd#, Faxsts RT) TYPE(RTVOBJ) FILE(PKACREP)          AB1192596;
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(PAR.PD_VND_Address_Number);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 // Call program Rtv Producer Address  XF.
 CALL PROGRAM(Rtv Producer Address  XF) ('PWCZXFR');
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(WRK.Address_Number);
 PARAMETER(WRK.Pass_Name);
 PARAMETER(WRK.Address_1);
 PARAMETER(WRK.Address_2);
 PARAMETER(WRK.Address_3);
 PARAMETER(WRK.City);
 PARAMETER(WRK.State);
 PARAMETER(WRK.Zip);
 PARAMETER(WRK.Area_Code);
 PARAMETER(WRK.Telephone);
 PARAMETER(WRK.Fax_Area_Code_Prdcr_1_USR);
 PARAMETER(WRK.Fax_Telephone_Prdcr_1_USR);
 PARAMETER(WRK.Fax_Attn_1);
 PARAMETER(WRK.Fax_Area_Code_Prdcr_2_USR);
 PARAMETER(WRK.Fax_Telephone_Prdcr_2_USR);
 PARAMETER(WRK.Fax_Attn_2);
 PARAMETER(WRK.Vendor_1099);
 PARAMETER(WRK.Vendor_Tax_Id);
 PARAMETER(WRK.Country_Code);

 ENDIF;

 //?NEW Fax Crc Sum/Dtl
 CASE;

 // IF PAR.PL Fax Status is Yes
 IF PAR.PL_Fax_Status = 'Y';

 // OR PAR.PL Fax to Producer is Yes
 OR PAR.PL_Fax_to_Producer = 'Y';

 // WRK.TFD Header Action-Crc Sum = WRK.Blank USR
 WRK.TFD_Header_Action_Crc_Sum = WRK.Blank_USR;

 // WRK.TFD Header Action-Crc Dtl = WRK.Blank USR
 WRK.TFD_Header_Action_Crc_Dtl = WRK.Blank_USR;

 CASE;

 // IF PAR.PL Fax   Carcass Summary is Yes
 IF PAR.PL_Fax_Carcass_Summary = 'Y';

 // WRK.TFD Header Action-Crc Sum = CND.Carc Sum
 WRK.TFD_Header_Action_Crc_Sum = 'Carc Sum';

 ENDIF;

 CASE;

 // IF PAR.PL Fax   Carcass Detail is Yes
 IF PAR.PL_Fax_Carcass_Detail = 'Y';

 // WRK.TFD Header Action-Crc Dtl = CND.Prt Crc Dtl
 WRK.TFD_Header_Action_Crc_Dtl = 'Prt CrcDtl';

 ENDIF;

 CASE;

 // IF WRK.TFD Header Action-Crc Dtl NE WRK.Blank USR
 IF WRK.TFD_Header_Action_Crc_Dtl <> WRK.Blank_USR;

 // OR WRK.TFD Header Action-Crc Sum NE WRK.Blank USR
 OR WRK.TFD_Header_Action_Crc_Sum <> WRK.Blank_USR;

 CASE;

 // IF PAR.Fax Telephone is Not Blank
 IF PAR.Fax_Telephone <> *BLANK;

 // PAR.TFD Sequence Number = PAR.TFD Sequence Number + CON.1
 PAR.TFD_Sequence_Number = PAR.TFD_Sequence_Number + 1;

 // LCL.TFD Phone # or Email = PAR.Fax Telephone
 LCL.TFD_Phone_#_or_Email = PAR.Fax_Telephone;

 EXECUTE FUNCTION(Crt Tattoo Fax Driver CR) TYPE(CRTOBJ) FILE(PKD7CPP)           AB1203671;
 PARAMETER(PAR.TFD_Sequence_Number);
 PARAMETER(PAR.PL_Producer_Fax_Sequence);
 PARAMETER('F');
 PARAMETER(PAR.TFD_Header_Action_Crc_Sum);
 PARAMETER(PAR.TFD_Header_Action_Crc_Dtl);
 PARAMETER(PAR.Fax_Area_Code_#);
 PARAMETER(LCL.TFD_Phone_#_or_Email);
 PARAMETER(DB1.TH_Voucher_Payment_Date);
 PARAMETER(DB1.TH_AP_Voucher_Document#);
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?Execute internal function

   // PAR.RS Record Status = CND.Active
   PAR.RS_Record_Status = 'A';

   // PAR.RS User Added = JOB.*USER
   PAR.RS_User_Added = JOB.*USER;

   // PAR.RS Date Added = JOB.*Job date
   PAR.RS_Date_Added = JOB.*Job_date;

   // PAR.RS Time Added = JOB.*Job time
   PAR.RS_Time_Added = JOB.*Job_time;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

  }

 }

 ENDIF;

 CASE;

 // IF PAR.Fax Telephone 2 is Not Blank
 IF PAR.Fax_Telephone_2 <> *BLANK;

 // PAR.TFD Sequence Number = PAR.TFD Sequence Number + CON.1
 PAR.TFD_Sequence_Number = PAR.TFD_Sequence_Number + 1;

 // LCL.TFD Phone # or Email = PAR.Fax Telephone 2
 LCL.TFD_Phone_#_or_Email = PAR.Fax_Telephone_2;

 EXECUTE FUNCTION(Crt Tattoo Fax Driver CR) TYPE(CRTOBJ) FILE(PKD7CPP)           AB1203671;
 PARAMETER(PAR.TFD_Sequence_Number);
 PARAMETER(PAR.PL_Producer_Fax_Sequence);
 PARAMETER('F');
 PARAMETER(PAR.TFD_Header_Action_Crc_Sum);
 PARAMETER(PAR.TFD_Header_Action_Crc_Dtl);
 PARAMETER(PAR.Fax_Area_Code_#_2);
 PARAMETER(LCL.TFD_Phone_#_or_Email);
 PARAMETER(DB1.TH_Voucher_Payment_Date);
 PARAMETER(DB1.TH_AP_Voucher_Document#);
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?Execute internal function

   // PAR.RS Record Status = CND.Active
   PAR.RS_Record_Status = 'A';

   // PAR.RS User Added = JOB.*USER
   PAR.RS_User_Added = JOB.*USER;

   // PAR.RS Date Added = JOB.*Job date
   PAR.RS_Date_Added = JOB.*Job_date;

   // PAR.RS Time Added = JOB.*Job time
   PAR.RS_Time_Added = JOB.*Job_time;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

  }

 }

 ENDIF;

 CASE;

 // IF WRK.Fax Telephone Prdcr 1 USR is Not Blank
 IF WRK.Fax_Telephone_Prdcr_1_USR <> *BLANK;

 // PAR.TFD Sequence Number = PAR.TFD Sequence Number + CON.1
 PAR.TFD_Sequence_Number = PAR.TFD_Sequence_Number + 1;

 // LCL.TFD Phone # or Email = WRK.Fax Telephone Prdcr 1 USR
 LCL.TFD_Phone_#_or_Email = WRK.Fax_Telephone_Prdcr_1_USR;

 EXECUTE FUNCTION(Crt Tattoo Fax Driver CR) TYPE(CRTOBJ) FILE(PKD7CPP)           AB1203671;
 PARAMETER(PAR.TFD_Sequence_Number);
 PARAMETER(PAR.PL_Producer_Fax_Sequence);
 PARAMETER('F');
 PARAMETER(PAR.TFD_Header_Action_Crc_Sum);
 PARAMETER(PAR.TFD_Header_Action_Crc_Dtl);
 PARAMETER(WRK.Fax_Area_Code_Prdcr_1_USR);
 PARAMETER(LCL.TFD_Phone_#_or_Email);
 PARAMETER(DB1.TH_Voucher_Payment_Date);
 PARAMETER(DB1.TH_AP_Voucher_Document#);
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?Execute internal function

   // PAR.RS Record Status = CND.Active
   PAR.RS_Record_Status = 'A';

   // PAR.RS User Added = JOB.*USER
   PAR.RS_User_Added = JOB.*USER;

   // PAR.RS Date Added = JOB.*Job date
   PAR.RS_Date_Added = JOB.*Job_date;

   // PAR.RS Time Added = JOB.*Job time
   PAR.RS_Time_Added = JOB.*Job_time;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

  }

 }

 ENDIF;

 CASE;

 // IF WRK.Fax Telephone Prdcr 2 USR is Not Blank
 IF WRK.Fax_Telephone_Prdcr_2_USR <> *BLANK;

 // PAR.TFD Sequence Number = PAR.TFD Sequence Number + CON.1
 PAR.TFD_Sequence_Number = PAR.TFD_Sequence_Number + 1;

 // LCL.TFD Phone # or Email = WRK.Fax Telephone Prdcr 2 USR
 LCL.TFD_Phone_#_or_Email = WRK.Fax_Telephone_Prdcr_2_USR;

 EXECUTE FUNCTION(Crt Tattoo Fax Driver CR) TYPE(CRTOBJ) FILE(PKD7CPP)           AB1203671;
 PARAMETER(PAR.TFD_Sequence_Number);
 PARAMETER(PAR.PL_Producer_Fax_Sequence);
 PARAMETER('F');
 PARAMETER(PAR.TFD_Header_Action_Crc_Sum);
 PARAMETER(PAR.TFD_Header_Action_Crc_Dtl);
 PARAMETER(WRK.Fax_Area_Code_Prdcr_2_USR);
 PARAMETER(LCL.TFD_Phone_#_or_Email);
 PARAMETER(DB1.TH_Voucher_Payment_Date);
 PARAMETER(DB1.TH_AP_Voucher_Document#);
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?Execute internal function

   // PAR.RS Record Status = CND.Active
   PAR.RS_Record_Status = 'A';

   // PAR.RS User Added = JOB.*USER
   PAR.RS_User_Added = JOB.*USER;

   // PAR.RS Date Added = JOB.*Job date
   PAR.RS_Date_Added = JOB.*Job_date;

   // PAR.RS Time Added = JOB.*Job time
   PAR.RS_Time_Added = JOB.*Job_time;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

  }

 }

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 //?OR Write Driver for Email   Producer and then Producer location
 CASE;

 // IF PAR.Ignore Email Y/N User is No
 IF PAR.Ignore_Email_Y_N_User = 'N';

 // PAR.Fax Area Code # = CON.*BLANK
 PAR.Fax_Area_Code_# = *BLANK;

 // PAR.Fax Telephone = CON.*BLANK
 PAR.Fax_Telephone = *BLANK;

 // PAR.Fax Area Code # 2 = CON.*BLANK
 PAR.Fax_Area_Code_#_2 = *BLANK;

 // PAR.Fax Telephone 2 = CON.*BLANK
 PAR.Fax_Telephone_2 = *BLANK;

 // WRK.Fax Area Code Prdcr 1 USR = CON.*BLANK
 WRK.Fax_Area_Code_Prdcr_1_USR = *BLANK;

 // WRK.Fax Telephone Prdcr 1 USR = CON.*BLANK
 WRK.Fax_Telephone_Prdcr_1_USR = *BLANK;

 // WRK.Fax Area Code Prdcr 2 USR = CON.*BLANK
 WRK.Fax_Area_Code_Prdcr_2_USR = *BLANK;

 // WRK.Fax Telephone Prdcr 2 USR = CON.*BLANK
 WRK.Fax_Telephone_Prdcr_2_USR = *BLANK;

 //?Build Email Records.  for Producer emails first
 EXECUTE FUNCTION(Crt ProdEm - TattDrv  RT) TYPE(RTVOBJ) FILE(PLAZREP)           AB1282969;
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(DB1.PL_Location_Code);
 PARAMETER(PAR.TFD_Sequence_Number);
 PARAMETER('E');
 PARAMETER(WRK.TFD_Header_Action_Crc_Sum);
 PARAMETER(WRK.TFD_Header_Action_Crc_Dtl);
 PARAMETER(*BLANK);
 PARAMETER(DB1.TH_Voucher_Payment_Date);
 PARAMETER(DB1.TH_AP_Voucher_Document#);
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 {
  //?USER: Process Data record

  CASE;

  // IF DB1.RS Record Status is Active
  IF DB1.RS_Record_Status = 'A';

  EXECUTE FUNCTION(Rtv Email Status      RT) TYPE(RTVOBJ) FILE(PLA0REP)           AB1282962;
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.PL_Location_Code);
  PARAMETER(WRK.PLEH_Email_Status);
  PARAMETER(WRK.PLEH_Email_Carcass_Sum);
  PARAMETER(WRK.PLEH_Email_Carcass_Detail);
  PARAMETER(WRK.PLEH_Email_to_Producer);
  PARAMETER(WRK.PLEH_Producer_Email_Seq);
  PARAMETER(WRK.RS_Record_Status);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

   CASE;

   // IF DB1.RS Record Status is Active
   IF DB1.RS_Record_Status = 'A';

   // PGM.*Return code = CND.Record Found
   PGM.*Return_code = 999;

   // IF *OTHERWISE
   IF *OTHERWISE;

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   ENDIF;

  }

  CASE;

  // IF PGM.*Return code is Record Found
  IF PGM.*Return_code = '999';

  // AND WRK.PLEH Email to Producer is Yes
  AND WRK.PLEH_Email_to_Producer = 'Y';

  //?* creation of the tattoo fax driver for the emails by producer
  EXECUTE FUNCTION(Crt PrdEmlDtlTatFax   RT) TYPE(RTVOBJ) FILE(PLA1REP)           AB1282970;
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.TFD_Sequence_Number);
  PARAMETER(PAR.TFD_Driver_Type);
  PARAMETER(PAR.TFD_Header_Action_Crc_Sum);
  PARAMETER(PAR.TFD_Header_Action_Crc_Dtl);
  PARAMETER(PAR.TFD_Area_Code);
  PARAMETER(PAR.TH_Voucher_Payment_Date);
  PARAMETER(PAR.TH_AP_Voucher_Document#);
  PARAMETER(PAR.BOH_Company_Number);
  PARAMETER(PAR.BOH_Buy_Order_Number);
  PARAMETER(PAR.BOL_Load_Number);
  PARAMETER(PAR.TH_Tattoo_Number);
  PARAMETER(PAR.TH_Kill_Date);
  PARAMETER(PAR.PL_Location_Code);
  PARAMETER(WRK.PLEH_Email_Status);
  PARAMETER(WRK.PLEH_Email_Carcass_Sum);
  PARAMETER(WRK.PLEH_Email_Carcass_Detail);
  PARAMETER(WRK.PLEH_Email_to_Producer);
  PARAMETER(WRK.PLEH_Producer_Email_Seq);
  {
   //?USER: Process Data record

   //?Test Record Status
   CASE;

   // IF DB1.RS Record Status is Active
   IF DB1.RS_Record_Status = 'A';

   // WRK.TFD Header Action-Crc Sum = WRK.Blank USR
   WRK.TFD_Header_Action_Crc_Sum = WRK.Blank_USR;

   // WRK.TFD Header Action-Crc Dtl = WRK.Blank USR
   WRK.TFD_Header_Action_Crc_Dtl = WRK.Blank_USR;

   CASE;

   // IF PAR.PLEH Email Carcass Sum is Yes
   IF PAR.PLEH_Email_Carcass_Sum = 'Y';

   // WRK.TFD Header Action-Crc Sum = CND.Carc Sum
   WRK.TFD_Header_Action_Crc_Sum = 'Carc Sum';

   ENDIF;

   CASE;

   // IF PAR.PLEH Email Carcass Detail is Yes
   IF PAR.PLEH_Email_Carcass_Detail = 'Y';

   // WRK.TFD Header Action-Crc Dtl = CND.Prt Crc Dtl
   WRK.TFD_Header_Action_Crc_Dtl = 'Prt CrcDtl';

   ENDIF;

   // PAR.TFD Sequence Number = PAR.TFD Sequence Number + CON.1
   PAR.TFD_Sequence_Number = PAR.TFD_Sequence_Number + 1;

   EXECUTE FUNCTION(Crt Tattoo Fax Driver CR) TYPE(CRTOBJ) FILE(PKD7CPP)           AB1203671;
   PARAMETER(PAR.TFD_Sequence_Number);
   PARAMETER(PAR.PLEH_Producer_Email_Seq);
   PARAMETER('E');
   PARAMETER(WRK.TFD_Header_Action_Crc_Sum);
   PARAMETER(WRK.TFD_Header_Action_Crc_Dtl);
   PARAMETER(*BLANK);
   PARAMETER(DB1.PED_Email_Line);
   PARAMETER(PAR.TH_Voucher_Payment_Date);
   PARAMETER(PAR.TH_AP_Voucher_Document#);
   PARAMETER(PAR.BOH_Company_Number);
   PARAMETER(PAR.BOH_Buy_Order_Number);
   PARAMETER(PAR.BOL_Load_Number);
   PARAMETER(PAR.TH_Tattoo_Number);
   PARAMETER(PAR.TH_Kill_Date);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
    PARAMETER(DB1.RS_Record_Status);
    PARAMETER(DB1.RS_Job);
    PARAMETER(DB1.RS_Program);
    PARAMETER(DB1.RS_User_Added);
    PARAMETER(DB1.RS_Date_Added);
    PARAMETER(DB1.RS_Time_Added);
    {
     //?Execute internal function

     // PAR.RS Record Status = CND.Active
     PAR.RS_Record_Status = 'A';

     // PAR.RS User Added = JOB.*USER
     PAR.RS_User_Added = JOB.*USER;

     // PAR.RS Date Added = JOB.*Job date
     PAR.RS_Date_Added = JOB.*Job_date;

     // PAR.RS Time Added = JOB.*Job time
     PAR.RS_Time_Added = JOB.*Job_time;

     // PAR.RS Program = JOB.*PROGRAM
     PAR.RS_Program = JOB.*PROGRAM;

     // PAR.RS Job = JOB.*JOB
     PAR.RS_Job = JOB.*JOB;

    }

   }

   ENDIF;

  }

  ENDIF;

  ENDIF;

 }

 //?Build Email Records.  for Producer location emails
 EXECUTE FUNCTION(Crt PrdLodEm-TattDrvT RT) TYPE(RTVOBJ) FILE(PLA0REP)           AB1284627;
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(DB1.PL_Location_Code);
 PARAMETER(PAR.TFD_Sequence_Number);
 PARAMETER('E');
 PARAMETER(WRK.TFD_Header_Action_Crc_Sum);
 PARAMETER(WRK.TFD_Header_Action_Crc_Dtl);
 PARAMETER(*BLANK);
 PARAMETER(DB1.TH_Voucher_Payment_Date);
 PARAMETER(DB1.TH_AP_Voucher_Document#);
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 {
  //?USER: Process Data record

  CASE;

  // IF DB1.RS Record Status is Active
  IF DB1.RS_Record_Status = 'A';

  CASE;

  // IF DB1.PLEH Email Status is Yes
  IF DB1.PLEH_Email_Status = 'Y';

  EXECUTE FUNCTION(CrtPrdLocEmlDtlTatFax2 RT) TYPE(RTVOBJ) FILE(PLA2REP)          AB1285019;
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.PL_Location_Code);
  PARAMETER(PAR.TFD_Sequence_Number);
  PARAMETER(PAR.TFD_Driver_Type);
  PARAMETER(PAR.TFD_Header_Action_Crc_Sum);
  PARAMETER(PAR.TFD_Header_Action_Crc_Dtl);
  PARAMETER(PAR.TFD_Area_Code);
  PARAMETER(PAR.TH_Voucher_Payment_Date);
  PARAMETER(PAR.TH_AP_Voucher_Document#);
  PARAMETER(PAR.BOH_Company_Number);
  PARAMETER(PAR.BOH_Buy_Order_Number);
  PARAMETER(PAR.BOL_Load_Number);
  PARAMETER(PAR.TH_Tattoo_Number);
  PARAMETER(PAR.TH_Kill_Date);
  PARAMETER(PAR.PL_Location_Code);
  PARAMETER(WRK.PLEH_Email_Status);
  PARAMETER(WRK.PLEH_Email_Carcass_Sum);
  PARAMETER(WRK.PLEH_Email_Carcass_Detail);
  PARAMETER(WRK.PLEH_Email_to_Producer);
  PARAMETER(WRK.PLEH_Producer_Email_Seq);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.RS Record Status is Active
   IF DB1.RS_Record_Status = 'A';

   //?create information for Carcass Summary/Carcass Detail
   CASE;

   // IF PAR.PLEH Email Status is Yes
   IF PAR.PLEH_Email_Status = 'Y';

   // OR PAR.PLEH Email to Producer is Yes
   OR PAR.PLEH_Email_to_Producer = 'Y';

   // WRK.TFD Header Action-Crc Sum = WRK.Blank USR
   WRK.TFD_Header_Action_Crc_Sum = WRK.Blank_USR;

   // WRK.TFD Header Action-Crc Dtl = WRK.Blank USR
   WRK.TFD_Header_Action_Crc_Dtl = WRK.Blank_USR;

   CASE;

   // IF PAR.PLEH Email Carcass Sum is Yes
   IF PAR.PLEH_Email_Carcass_Sum = 'Y';

   // WRK.TFD Header Action-Crc Sum = CND.Carc Sum
   WRK.TFD_Header_Action_Crc_Sum = 'Carc Sum';

   ENDIF;

   CASE;

   // IF PAR.PLEH Email Carcass Detail is Yes
   IF PAR.PLEH_Email_Carcass_Detail = 'Y';

   // WRK.TFD Header Action-Crc Dtl = CND.Prt Crc Dtl
   WRK.TFD_Header_Action_Crc_Dtl = 'Prt CrcDtl';

   ENDIF;

   // PAR.TFD Sequence Number = PAR.TFD Sequence Number + CON.1
   PAR.TFD_Sequence_Number = PAR.TFD_Sequence_Number + 1;

   EXECUTE FUNCTION(Crt Tattoo Fax Driver CR) TYPE(CRTOBJ) FILE(PKD7CPP)           AB1203671;
   PARAMETER(PAR.TFD_Sequence_Number);
   PARAMETER(PAR.PLEH_Producer_Email_Seq);
   PARAMETER('E');
   PARAMETER(WRK.TFD_Header_Action_Crc_Sum);
   PARAMETER(WRK.TFD_Header_Action_Crc_Dtl);
   PARAMETER(*BLANK);
   PARAMETER(DB1.PLED_Email_Line);
   PARAMETER(PAR.TH_Voucher_Payment_Date);
   PARAMETER(PAR.TH_AP_Voucher_Document#);
   PARAMETER(PAR.BOH_Company_Number);
   PARAMETER(PAR.BOH_Buy_Order_Number);
   PARAMETER(PAR.BOL_Load_Number);
   PARAMETER(PAR.TH_Tattoo_Number);
   PARAMETER(PAR.TH_Kill_Date);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
    PARAMETER(DB1.RS_Record_Status);
    PARAMETER(DB1.RS_Job);
    PARAMETER(DB1.RS_Program);
    PARAMETER(DB1.RS_User_Added);
    PARAMETER(DB1.RS_Date_Added);
    PARAMETER(DB1.RS_Time_Added);
    {
     //?Execute internal function

     // PAR.RS Record Status = CND.Active
     PAR.RS_Record_Status = 'A';

     // PAR.RS User Added = JOB.*USER
     PAR.RS_User_Added = JOB.*USER;

     // PAR.RS Date Added = JOB.*Job date
     PAR.RS_Date_Added = JOB.*Job_date;

     // PAR.RS Time Added = JOB.*Job time
     PAR.RS_Time_Added = JOB.*Job_time;

     // PAR.RS Program = JOB.*PROGRAM
     PAR.RS_Program = JOB.*PROGRAM;

     // PAR.RS Job = JOB.*JOB
     PAR.RS_Job = JOB.*JOB;

    }

   }

   ENDIF;

   ENDIF;

  }

  ENDIF;

  ENDIF;

 }

 ENDIF;

 ENDIF;

}


