     H/TITLE Prt Pckg Var by GrpCt PF  Print file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Print report of file contents
      *
     H* Generated by CA 2E release 8.5 (1351)
     H* Function type : Print file
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISRCENT
     H* Date          : 01/22/13  Time  : 11:33:17
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
     FPOARREL6IF  E           K        DISK
      * RSQ : Packaging Item            Co/Ctgry/Grp/PkgItmDesc
      *
     FCAABREL3IF  E           K        DISK
      * RTV : Company Name and Address  Retrieval index       NV
      *
     FPOCCREL1IF  E           K        DISK
      * RTV : Packaging Group Category  Retrieval index
      *
     FPOAZCPL2IF  E           K        DISK
      * RSQ : Packaging BOM             Co/Pckg Item/Item
      *
     FPMALCPL2IF  E           K        DISK
      * RSQ : WF ISC Trans Sum/Pkg Var  Co/Item
      *
     FPOA0CPL1IF  E           K        DISK
      * RTV : Packaging Daily Usage     Retrieval index
      *
     FPOCAREL1IF  E           K        DISK
      * RTV : Packaging Type            Retrieval index
      *
     FPOCDCPL3IF  E           K        DISK
      * RSQ : Packaging Item Unit Cost  Co/Item/Eff Date (D)
      *
     FPOCBREL1IF  E           K        DISK
      * RTV : Packaging Reporting Group Retrieval index
      *
     FPOSOPFR$O   E             97     PRINTER
     F                                              KINFDS INFDS$
      * PRT: Prt Pckg Var by GrpCt PF  Print file
      *
     E                    UCT        40  1               CENTER TABLE
     E                    #L3         3  1
      * Long constants
     E                    @CN#    1  01  6   @CN    25
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
     IINFDS$    E DSY2I$DSP
      * Printer file information data structure
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Packaging Item
      * I : RST Company Number
     I                                    P   1   20P1AIC3
      * I : MAP Pckg Type Class
     I                                        3   5 P1EAAA
     IP2PARM      DS
      * I :  Report Type USR
     I                                        1   1 P2QBST
     IP3PARM      DS
      * I :  Date From             USR
     I                                    P   1   40P3JEDT
     IP4PARM      DS
      * I :  Date To               USR
     I                                    P   1   40P4JFDT
     IP5PARM      DS
      * FLD: *Arrays
      * N : MAP Application Code
     I                                        1   6 P5DNCD
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1AIC3    PARM           WP0001  30       Company Number
     C           P1EAAA    PARM           WP0002  3        Pckg Type Class
     C           P2QBST    PARM           WP0003  1        Report Type USR
     C           P3JEDT    PARM           WP0004  70       Date From
     C           P4JFDT    PARM           WP0005  70       Date To
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Prt Pckg Var by GrpCt PF: Mainline
     C                     EXSR A0MAIN
      * Print headers then End of report format
     C                     EXSR Q0PRNT
     C                     WRITE$IENDRPT
      * Exit program
     C                     EXSR ZXEXPG
      * ------------------------------------------------------
      /EJECT
     CSR         A0MAIN    BEGSR
      *================================================================
      * Prt Pckg Var by GrpCt PF: Mainline
      *================================================================
      * Declare restrictor key work fields
     C           *LIKE     DEFN ARAIC3    WQKA01           Company Number
      * Define keylist
     C           KRSA      KLIST
     C                     KFLD           WQKA01           Company Number
      * Setup key
     C                     Z-ADDP1AIC3    WQKA01           Company Number
      * Establish starting position
     C           KRSA      SETLL@ARREOH                    *
      * Read first record with user selection
     C                     EXSR A3READ
     C           W0EOFA    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0AL1P  1        First page
     C                     MOVEL'Y'       W0AL00  1        Company Number
     C                     MOVEL'Y'       W0AL01  1        Pckg Group Cate
     C                     MOVEL'Y'       W0AL02  1        Pckg Reporting
     C                     MOVEL'Y'       W0AL03  1        Pckg Item Descr
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      * Print report body
     C           W0EOFA    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR A1PHDR
      * Print report detail line
     C                     EXSR A2PDTL
      * Read next record with user selection
     C                     EXSR A3READ
      * Print totals
     C                     EXSR A4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         A0EXIT    ENDSR
      /EJECT
     CSR         A1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0AL1P    IFEQ 'Y'
      * Load key header format
     C                     Z-ADD*ZERO     $CAIC3           Company Number
     C                     MOVEL*BLANK    $CSQTX           Company Name DR
     C                     Z-ADD*ZERO     $CJEDT           Date From
     C                     Z-ADD*ZERO     $CJFDT           Date To
     C                     MOVEL*BLANK    $CEAAA           Pckg Type Class
     C                     MOVEL*BLANK    $CHMTX           Condition Desc.
     C                     MOVEL*BLANK    $CQBST           Report Type USR
     C                     MOVEL*BLANK    $CHLTX           Condition Desc.
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP1P  1
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDARAIC3    $DAIC3           Company Number
      * Load related totals format
     C                     Z-ADDARAIC3    $HAIC3           Company Number
     C                     Z-ADD*ZERO     $HQ9NX           Actual Usage
     C                     Z-ADD*ZERO     $HRCNX           Standard Usage
     C                     Z-ADD*ZERO     $HP7NY           Rework Usage SU
     C                     Z-ADD*ZERO     $HTTNX           Qty Adjusted SU
     C                     Z-ADD*ZERO     $HRDNX           Variance Usage
     C                     Z-ADD*ZERO     $HQ8NX           Actual $ Usage
     C                     Z-ADD*ZERO     $HRANX           Standard $ Usag
     C                     Z-ADD*ZERO     $HRGNX           Variance $ Usag
     C                     Z-ADD*ZERO     $HRENX           Standard Waste
     C                     Z-ADD*ZERO     $HRBNX           Standard $ Wast
     C                     Z-ADD*ZERO     $HPZNX           Variance Final
     C                     Z-ADD*ZERO     $HRFNX           Actual $ Opp
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP00  1
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDARAIC3    $EAIC3           Company Number
     C                     MOVELARM3SX    $EM3SX           Pckg Group Cate
     C                     MOVEL*BLANK    $ECGT1           Pckg Group Cate
      * Load related totals format
     C                     Z-ADDARAIC3    $GAIC3           Company Number
     C                     MOVELARM3SX    $GM3SX           Pckg Group Cate
     C                     Z-ADD*ZERO     $GQ9NX           Actual Usage
     C                     Z-ADD*ZERO     $GRCNX           Standard Usage
     C                     Z-ADD*ZERO     $GP7NY           Rework Usage SU
     C                     Z-ADD*ZERO     $GTTNX           Qty Adjusted SU
     C                     Z-ADD*ZERO     $GRDNX           Variance Usage
     C                     Z-ADD*ZERO     $GQ8NX           Actual $ Usage
     C                     Z-ADD*ZERO     $GRANX           Standard $ Usag
     C                     Z-ADD*ZERO     $GRGNX           Variance $ Usag
     C                     Z-ADD*ZERO     $GRENX           Standard Waste
     C                     Z-ADD*ZERO     $GRBNX           Standard $ Wast
     C                     Z-ADD*ZERO     $GPZNX           Variance Final
     C                     Z-ADD*ZERO     $GRFNX           Actual $ Opp
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP01  1
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP02  1
     C                     END
      *
     C           W0AL03    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP03  1
     C                     END
      *
      *================================================================
     CSR         A1EXIT    ENDSR
      /EJECT
     CSR         A2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     MOVELARXITX    $FXITX           Pckg Item Descr
     C                     MOVEL*BLANK    $FBDT1           Text USR 43
     C                     MOVELARBRAA    $FBRAA           Packaging Item
     C                     Z-ADD*ZERO     $FQVNX           Actual Usage
     C                     Z-ADD*ZERO     $FSUQT           Standard Usage
     C                     Z-ADD*ZERO     $FP6NY           Rework Usage
     C                     Z-ADD*ZERO     $FQTAD           Adjustment Qty
     C                     Z-ADD*ZERO     $FQWNX           Variance Usage
     C                     Z-ADD*ZERO     $FQXNX           Standard Waste
     C                     Z-ADD*ZERO     $FQYNX           Standard $ Wast
     C                     Z-ADD*ZERO     $FEAVL           Actual $ Opp
     C                     Z-ADD*ZERO     $FD8VL           Actual $ Usage
     C                     Z-ADD*ZERO     $FD9VL           Standard $ Usag
     C                     Z-ADD*ZERO     $FD7VL           Variance $
     C                     Z-ADD*ZERO     $FM5QT           PDU Ending Inve
     C                     Z-ADDARAIC3    $FAIC3           Company Number
     C                     Z-ADDARNONX    $FNONX           Pckg List Seque
     C                     MOVELAREAAA    $FEAAA           Pckg Type Class
     C                     MOVELARI5SX    $FI5SX           Pckg Item Type
     C                     Z-ADDARHGCD    $FHGCD           Item Code
     C                     Z-ADDARBICS    $FBICS           Pckg Unit Cost
     C                     Z-ADDARIIWG    $FIIWG           Pckg Tare Weigh
     C                     MOVELARD8AA    $FD8AA           Pckg Reporting
     C                     MOVELARM3SX    $FM3SX           Pckg Group Cate
     C                     MOVELARM1SX    $FM1SX           Pckg Modified W
     C                     MOVELARNGSX    $FNGSX           Pckg Unused Sta
     C                     MOVELARM2SX    $FM2SX           Pckg Unused Sts
     C                     MOVELARNHSX    $FNHSX           Pre-printed Bag
     C                     MOVELARNISX    $FNISX           Pckg Unused Sta
     C                     MOVELARNJSX    $FNJSX           Pckg Unused Sta
     C                     MOVELARNKSX    $FNKSX           Pckg Unused Sta
     C                     MOVELARNLSX    $FNLSX           Pckg Unused Sta
     C                     MOVELARNMSX    $FNMSX           Pckg Unused Sta
     C                     MOVELARNNSX    $FNNSX           Pckg Unused Sta
     C                     MOVELAREBAA    $FEBAA           Pckg Unused Cod
     C                     MOVELARVSST    $FVSST           Record Status
     C                     Z-ADDARMJDT    $FMJDT           Create Date
     C                     Z-ADDARBETM    $FBETM           Create Time
     C                     MOVELARCCVN    $FCCVN           Create User
     C                     MOVELARCDVN    $FCDVN           Create Program
     C                     Z-ADDARMKDT    $FMKDT           Change Date
     C                     Z-ADDARBFTM    $FBFTM           Change Time
     C                     MOVELARCEVN    $FCEVN           Change User
     C                     MOVELARCFVN    $FCFVN           Change Program
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0APDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      * USER: Process after print of detail format
     C                     ADD  $FQVNX    $GQ9NX           Actual Usage
     C                     ADD  $FSUQT    $GRCNX           Standard Usage
     C                     ADD  $FP6NY    $GP7NY           Rework Usage SU
     C                     ADD  $FQTAD    $GTTNX           Qty Adjusted SU
     C                     ADD  $FQWNX    $GRDNX           Variance Usage
     C                     ADD  $FQXNX    $GRENX           Standard Waste
     C                     ADD  $FQYNX    $GRBNX           Standard $ Wast
     C                     ADD  $FEAVL    $GRFNX           Actual $ Opp
     C                     ADD  $FD7VL    $GRGNX           Variance $ Usag
     C                     ADD  $FD8VL    $GQ8NX           Actual $ Usage
     C                     ADD  $FD9VL    $GRANX           Standard $ Usag
     C                     Z-ADD$GRBNX    WURBNX           Standard $ Wast
     C                     Z-ADD$GRFNX    WURFNX           Actual $ Opp
     C                     Z-ADD$GRGNX    WURGNX           Variance $ Usag
     C                     Z-ADD$GQ8NX    WUQ8NX           Actual $ Usage
     C                     Z-ADD$GRANX    WURANX           Standard $ Usag
      *
      *================================================================
     CSR         A2EXIT    ENDSR
      /EJECT
     CSR         A3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN ARAIC3    WZA001           Company Number
     C                     Z-ADDARAIC3    WZA001
     C           *LIKE     DEFN ARM3SX    WZA002           Pckg Group Cate
     C                     MOVELARM3SX    WZA002
     C           *LIKE     DEFN ARD8AA    WZA003           Pckg Reporting
     C                     MOVELARD8AA    WZA003
     C           *LIKE     DEFN ARXITX    WZA004           Pckg Item Descr
     C                     MOVELARXITX    WZA004
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFA    OREQ '1'
     C           KRSA      READE@ARREOH                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFA  1
      * Quit if no record read
     C           W0EOFA    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
      * USER: Record selection processing
      * Rtv Include Flag      RT - Packaging Reporting Group  * 
     C                     EXSR SJRVGN
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Pckg Type Class NE WRK.Blank for 4           USR
      *   |- c2    : DB1.Pckg Type Class NE PAR.Pckg Type Class
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P1EAAA    IFNE WUOTTX                     *IF
     C           AREAAA    IFNE P1EAAA                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * CASE: LCL.Pckg Include on Var Rpt is No
     C           YL0006    IFEQ 'N'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0AL00  1        Company Number
     C                     MOVEL*BLANK    W0AL01  1        Pckg Group Cate
     C                     MOVEL*BLANK    W0AL02  1        Pckg Reporting
     C                     MOVEL*BLANK    W0AL03  1        Pckg Item Descr
     C           W0EOFA    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0AL00  1        Company Number
     C                     MOVEL'Y'       W0AL01  1        Pckg Group Cate
     C                     MOVEL'Y'       W0AL02  1        Pckg Reporting
     C                     MOVEL'Y'       W0AL03  1        Pckg Item Descr
     C                     ELSE
      * Next record - Detect level breaks
     C           ARAIC3    IFNE WZA001                     Company Number
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL00
     C                     END
     C           ARM3SX    IFNE WZA002                     Pckg Group Cate
     C           W0AL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL01
     C                     END
     C           ARD8AA    IFNE WZA003                     Pckg Reporting
     C           W0AL01    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL02
     C                     END
     C           ARXITX    IFNE WZA004                     Pckg Item Descr
     C           W0AL02    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL03
     C                     END
     C                     END
      *================================================================
     CSR         A3EXIT    ENDSR
      /EJECT
     CSR         A4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0AL03    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP03
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP02
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Pckg Group Category format
     C           $GRDNX    ADD  $GRENX    $GPZNX           Variance Final
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 2
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Convert fields to external form
     C                     MOVEL'0'       *IN79
     C           WUQ8NX    IFEQ 0                          *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
     C                     MOVEL'0'       *IN78
     C           WURANX    IFEQ 0                          *IF
     C                     MOVEL'1'       *IN78
     C                     END                             *FI
     C                     MOVEL'0'       *IN77
     C           WURGNX    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       *IN77
     C                     END                             *FI
      * Print format
     C                     WRITE$GKEYTTL
     C                     END
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP01
      * USER: Process after print of Pckg Group Category format
     C                     ADD  $GRCNX    $HRCNX           Standard Usage
     C                     ADD  $GQ9NX    $HQ9NX           Actual Usage
     C                     ADD  $GRDNX    $HRDNX           Variance Usage
     C                     ADD  $GRENX    $HRENX           Standard Waste
     C                     ADD  $GRBNX    $HRBNX           Standard $ Wast
     C                     ADD  $GRFNX    $HRFNX           Actual $ Opp
     C                     ADD  $GRGNX    $HRGNX           Variance $ Usag
     C                     ADD  $GQ8NX    $HQ8NX           Actual $ Usage
     C                     ADD  $GRANX    $HRANX           Standard $ Usag
     C                     Z-ADD$HRBNX    WURBNX           Standard $ Wast
     C                     Z-ADD$HRFNX    WURFNX           Actual $ Opp
     C                     Z-ADD$HRGNX    WURGNX           Variance $ Usag
     C                     Z-ADD$HQ8NX    WUQ8NX           Actual $ Usage
     C                     Z-ADD$HRANX    WURANX           Standard $ Usag
     C                     ADD  $GTTNX    $HTTNX           Qty Adjusted SU
     C                     ADD  $GP7NY    $HP7NY           Rework Usage SU
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Company Number format
     C           $HRDNX    ADD  $HRENX    $HPZNX           Variance Final
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 3
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Convert fields to external form
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           $HAIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL$HAIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    VHAIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VHAIC3           CD3 Ext Numeric
     C                     END                             *FI
     C                     MOVEL'0'       *IN79
     C           WUQ8NX    IFEQ 0                          *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
     C                     MOVEL'0'       *IN78
     C           WURANX    IFEQ 0                          *IF
     C                     MOVEL'1'       *IN78
     C                     END                             *FI
     C                     MOVEL'0'       *IN77
     C           WURGNX    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       *IN77
     C                     END                             *FI
      * Print format
     C                     WRITE$HKEYTTL
     C                     END
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP00
     C                     END
      *
     C           W0EOFA    IFEQ '1'
     C                     END
      *
      *================================================================
     CSR         A4EXIT    ENDSR
      /EJECT
     CSR         Q0PRNT    BEGSR
      *================================================================
      * Print report formats
      *================================================================
      * Select formats to print
     C                     EXSR Q1FSEL
      * Calculate length of formats selected for printing
     C                     EXSR Q2PLEN
      * Add column heading length to print length
     C                     ADD  W0COLN    W0FSUM
     C           W0NEWP    IFNE 'Y'
      * Signal overflow if requested headings would cause
      * detail format to start past the overflow line
     C           W0FSUM    IFGT W0OFL
     C                     MOVE 'Y'       W0NEWP
     C                     ELSE
      * Signal overflow if requested headings would cause
      * Detail format to be printed past end of page
     C                     ADD  W0DTLN    W0FSUM
     C           W0FSUM    IFGT W0PGL
     C                     MOVE 'Y'       W0NEWP
     C                     END
     C                     END
     C                     END
      * Print Standard report header of Prt Pckg Var by GrpCt PF
      * If it is ready to print, then do so,
     C           W0NEWP    IFEQ 'Y'                        IF
     C                     EXSR Q3PTNP
     C                     END                             FI
      *
      * Print First Page Format of Prt Pckg Var by GrpCt PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP1P    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of first page format
      * 1PG = PAR By name
     C                     Z-ADDP1AIC3    $CAIC3           Company Number
     C                     Z-ADDP3JEDT    $CJEDT           Date From
     C                     Z-ADDP4JFDT    $CJFDT           Date To
     C                     MOVELP1EAAA    $CEAAA           Pckg Type Class
     C                     MOVELP2QBST    $CQBST           Report Type USR
      * 1PG.Condition Desc. 1  USR = Condition name of 1PG.Report Type US
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1456722   Y2LSNO  70       List number
     C                     PARM $CQBST    W0INVL 25        Report Type USR
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $CHLTX    PARM           W0CNNM 25        Condition Desc.
      *
     C                     MOVEL*BLANK    $CSQTX           Company Name DR
      * Company Name DRV
      * RTV Company Name       RT - Company Name and Address  * 
     C                     EXSR SCRVGN
      * CASE: 1PG.Pckg Type Class NE WRK.Blank for 4           USR
     C           $CEAAA    IFNE WUOTTX                     *IF
      * 1PG.Condition Desc. 2  USR = Condition name of 1PG.Pckg Type Clas
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1657889   Y2LSNO  70       List number
     C                     PARM $CEAAA    W0INVL 25        Pckg Type Class
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $CHMTX    PARM           W0CNNM 25        Condition Desc.
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    $CHMTX           Condition Desc.
     C                     MOVEL'All'     $CHMTX           Condition Desc.
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           $CAIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL$CAIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    VCAIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VCAIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Convert Date From             USR to display format
      * Convert date
     C           1000000   ADD  $CJEDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCJEDT
      * Convert Date To               USR to display format
      * Convert date
     C           1000000   ADD  $CJFDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCJFDT
      * Print format
     C                     WRITE$C1STPAG
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0AL1P
     C                     END                             FI
      * Print Company Number of Prt Pckg Var by GrpCt PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP00    ANDEQ'P'
      * Print format
     C                     WRITE$DKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      *
      * Reset format print flag
     C                     MOVE 'P'       W0AP00
     C                     END                             FI
      * Print Pckg Group Category of Prt Pckg Var by GrpCt PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP01    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Pckg Group Category format
      * Rtv Pckgng Grp Desc   RT - Packaging Group Category  * 
     C                     EXSR SDRVGN
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Print format
     C                     WRITE$EKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP01
     C                     END                             FI
      * Print Pckg Reporting Group of Prt Pckg Var by GrpCt PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP02    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP02    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP02
     C                     END                             FI
      * Print Pckg Item Description of Prt Pckg Var by GrpCt PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP03    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP03    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP03
     C                     END                             FI
      * Print Detail line. of Prt Pckg Var by GrpCt PF
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0ACDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0APDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0APDT    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of detail format
     C                     MOVELARXITX    $FBDT1           Text USR 43
      * Rtv Calc Std Usage    RT - Packaging BOM  * 
     C                     EXSR SERVGN
      * Rtv Dly Usg per Item  RT - Packaging Daily Usage  * 
     C                     EXSR SGRVGN
      * CUR.Variance Usage        USR =
      *    *COMPUTE (x1 - x2)
      * x1    : CUR.Standard Usage        USR
      * -     : CUR.Variance Usage        USR = CUR.Standard Usage
      * x2    : CUR.Actual Usage          USR
     C           $FSUQT    SUB  $FQVNX    $FQWNX           Variance Usage
     C                     Z-ADD$FQWNX    $FQWNX           Variance Usage
      * Rtv Waste Factor      RT - Packaging Type  * 
     C                     EXSR SHRVGN
      * Compute:Standard waste
      * CUR.Standard Waste        USR =
      *    *COMPUTE ((x1+x3) * x2)
      * x1    : CUR.Standard Usage        USR
      * +     : PGM.*Synon (17,7) work field
      * x3    : CUR.Adjustment Qty 7.0    USR
      * *     : CUR.Standard Waste        USR = CUR.Standard Usage
      * x2    : LCL.Pckg Waste Factor %
     C           $FSUQT    ADD  $FQTAD    W0WD00           *Synon (17,7) w
     C           W0WD00    MULT YL0005    $FQXNX           Standard Waste
     C                     Z-ADD$FQXNX    $FQXNX           Standard Waste
      * Rtv Cost by Eff Dt    RT - Packaging Item Unit Cost  * 
     C                     EXSR SIRVGN
     C           $FQXNX    MULT $FBICS    $FQYNX           Standard $ Wast
     C           $FQVNX    MULT $FBICS    $FD8VL           Actual $ Usage
      * Compute:standard $ Usage
      * CUR.Standard $ Usage      USR =
      *    *COMPUTE (x1 * x2)
      * x1    : CUR.Standard Usage        USR
      * *     : CUR.Standard $ Usage      USR = CUR.Standard Usage
      * x2    : CUR.Pckg Unit Cost
     C           $FSUQT    MULT $FBICS    $FD9VL           Standard $ Usag
     C                     Z-ADD$FD9VL    $FD9VL           Standard $ Usag
     C           $FD9VL    SUB  $FD8VL    $FD7VL           Variance $
     C           $FD7VL    ADD  $FQYNX    $FEAVL           Actual $ Opp
      * CASE:
      *  - c1OR(c2ANDc3ANDc4)
      *   |- c1    : PAR.Report Type USR is Summary
      *   |- c2    : CUR.Actual Usage          USR EQ WRK.ZERO
      *   |- c3    : CUR.Standard Usage        USR EQ WRK.ZERO
      *   |- c4    : CUR.Rework Usage          USR is eq 0
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2QBST    IFEQ 'S'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C           Y0CX01    IFNE '1'                        *IF
     C           $FQVNX    IFEQ WUW0NB                     *IF
     C           $FSUQT    IFEQ WUW0NB                     *IF
     C           $FP6NY    IFEQ 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0PFM            *Print format
     C                     END                             *FI
     C                     Z-ADD$FQYNX    WUQYNX           Standard $ Wast
     C                     Z-ADD$FEAVL    WUEAVL           Actual $ Opp
     C                     Z-ADD$FD7VL    WUD7VL           Variance $
     C                     Z-ADD$FD8VL    WUD8VL           Actual $ Usage
     C                     Z-ADD$FD9VL    WUD9VL           Standard $ Usag
     C           W0PFM     IFEQ 'Y'
     C                     MOVEL'0'       *IN79
     C           WUD8VL    IFEQ 0                          *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
     C                     MOVEL'0'       *IN78
     C           WUD9VL    IFEQ 0                          *IF
     C                     MOVEL'1'       *IN78
     C                     END                             *FI
     C                     MOVEL'0'       *IN77
     C           WUD7VL    IFEQ 0                          *IF
     C                     MOVEL'1'       *IN77
     C                     END                             *FI
      * Print column headings if required
     C           W0ACDT    IFEQ 'Y'
     C                     WRITE$FCOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0ACDT
     C                     END                             FI
      * Print format
     C                     WRITE$FDTLRCD
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0APDT
     C                     END                             FI
      * Clear new page flag
     C                     MOVE *BLANK    W0NEWP
      *================================================================
     CSR         Q0EXIT    ENDSR
      /EJECT
     CSR         Q1FSEL    BEGSR
      *================================================================
      * Format select
      *================================================================
      *================================================================
     CSR         Q1EXIT    ENDSR
      /EJECT
     CSR         Q2PLEN    BEGSR
      *================================================================
      * Evaluate print length
      *================================================================
     C           *LIKE     DEFN @$CLN     W0FSUM
     C           *LIKE     DEFN @$CLN     W0DTLN
     C           *LIKE     DEFN @$CLN     W0COLN
     C                     Z-ADD@$CLN     W0FSUM
     C                     Z-ADD*ZERO     W0DTLN
     C                     Z-ADD*ZERO     W0COLN
      * * First Page Format of Prt Pckg Var by GrpCt PF
     C           W0AP1P    IFEQ 'Y'
     C                     ADD  6         W0FSUM
     C                     END                             FI
      *
      * * Company Number of Prt Pckg Var by GrpCt PF
     C           W0AP00    IFEQ 'Y'
     C                     ADD  3         W0FSUM
     C                     END                             FI
      *
      * * Pckg Group Category of Prt Pckg Var by GrpCt PF
     C           W0AP01    IFEQ 'Y'
     C                     ADD  2         W0FSUM
     C                     END                             FI
      *
      * * Pckg Reporting Group of Prt Pckg Var by GrpCt PF
     C           W0AP02    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Pckg Item Description of Prt Pckg Var by GrpCt PF
     C           W0AP03    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of Prt Pckg Var by GrpCt PF
     C           W0APDT    IFEQ 'Y'
     C                     Z-ADD2         W0DTLN
     C           W0ACDT    IFEQ 'Y'
     C                     Z-ADD0         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      *================================================================
     CSR         Q2EXIT    ENDSR
      /EJECT
     CSR         Q3PTNP    BEGSR
      *================================================================
      * Format select
      *================================================================
     C                     WRITE$APAGHDR
      * Clear page overflow indicator
     C                     SETOF                     97    *
      *================================================================
     CSR         Q3EXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSA01           Application Cod
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WQSA01           Application Cod
      * Setup key
     C                     MOVE *BLANK    WQSA01           Application Cod
     C                     MOVEL'C/S'     WQSA01           Application Cod
      * Establish starting position
     C           KRSSA     SETLL@DNRESF                    *
     C           KRSSA     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           DNRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR SBRVGN
     C                     END                             *FI
     C           KRSSA     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSB01           Application Cod
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           Application Cod
      * Setup key
     C                     MOVELDNRSCD    WQSB01           Application Cod
      * Establish starting position
     C           KRSSB     SETLL@DNRESF                    *
     C           KRSSB     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAUNA           Description
     C                     MOVEL@CN,001   W0RTN            *Return code
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C           KRSSB     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * RTV Company Name       RT - Company Name and Address  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           ABAIC3           Company Number
      * Setup key
     C                     Z-ADD$CAIC3    ABAIC3           Company Number
      * Establish starting position
     C           KRSSC     CHAIN@ABREG3              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0003' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $CSQTX           Name
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELABADTX    $CSQTX           Name
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * Rtv Pckgng Grp Desc   RT - Packaging Group Category  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           CCM3SX           Pckg Group Cate
      * Setup key
     C                     MOVEL$EM3SX    CCM3SX           Pckg Group Cate
      * Establish starting position
     C           KRSSD     CHAIN@CCREN3              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR3173' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $ECGT1           Pckg Group Cate
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELCCCGT1    $ECGT1           Pckg Group Cate
     C                     GOTO SDEXIT                     *QUIT
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * Rtv Calc Std Usage    RT - Packaging BOM  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     $FSUQT           Standard Usage
     C                     Z-ADD*ZERO     $FQTAD           Adjustment Qty
     C                     Z-ADD*ZERO     $FP6NY           Rework Usage
      * Declare restrictor key work fields
     C           *LIKE     DEFN AZAIC3    WQSE01           Company Number
     C           *LIKE     DEFN AZBRAA    WQSE02           Packaging Item
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           WQSE01           Company Number
     C                     KFLD           WQSE02           Packaging Item
      * Setup key
     C                     Z-ADD$FAIC3    WQSE01           Company Number
     C                     MOVEL$FBRAA    WQSE02           Packaging Item
      * Establish starting position
     C           KRSSE     SETLL@AZCPH4                    *
     C           KRSSE     READE@AZCPH4                  90*
      * Data record not found
     C   90                MOVEL'USR3007' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * Rtv Summ for Var Rpt  RT - WF ISC Trans Sum/Pkg Var  * 
     C                     EXSR SFRVGN
      * Compute: Std Usage,Accum
      * PAR.Standard Usage        USR =
      *    *COMPUTE (x1 * x2 +x3)
      * x1    : LCL.WF Trans Total type RR qt
      * *     : PGM.*Synon (17,7) work field *
      * x2    : DB1.Packaging Item Quantity
      * +     : PGM.*Synon (17,7) work field
      * x3    : PAR.Standard Usage        USR
     C           YL0001    MULT AZM1QT    W0WD01           *Synon (17,7) w
     C           W0WD01    ADD  $FSUQT    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $FSUQT           Standard Usage
      * Compute: RwrkUsage,Accum
      * PAR.Rework Usage          USR =
      *    *COMPUTE (x1 * x2 +x3)
      * x1    : LCL.WF ISC Part/Rej Curr Qty
      * *     : PGM.*Synon (17,7) work field *
      * x2    : DB1.Packaging Item Quantity
      * +     : PGM.*Synon (17,7) work field
      * x3    : PAR.Rework Usage          USR
     C           YL0004    MULT AZM1QT    W0WD01           *Synon (17,7) w
     C           W0WD01    ADD  $FP6NY    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $FP6NY           Rework Usage
      * Compute: Adj Usage,Accum
      * PAR.Adjustment Qty 7.0    USR =
      *    *COMPUTE ((x1+x4) * x2 +x3)
      * x1    : LCL.WF Trans Total type A qty
      * +     : PGM.*Synon (17,7) work field
      * x4    : LCL.WF Trans Total type AP qt
      * *     : PGM.*Synon (17,7) work field *
      * x2    : DB1.Packaging Item Quantity
      * +     : PGM.*Synon (17,7) work field
      * x3    : PAR.Adjustment Qty 7.0    USR
     C           YL0002    ADD  YL0003    W0WD02           *Synon (17,7) w
     C           W0WD02    MULT AZM1QT    W0WD01           *Synon (17,7) w
     C           W0WD01    ADD  $FQTAD    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $FQTAD           Adjustment Qty
     C           KRSSE     READE@AZCPH4                  90*
     C                     ENDDO
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * Rtv Summ for Var Rpt  RT - WF ISC Trans Sum/Pkg Var  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     YL0001           WF Trans Total
     C                     Z-ADD*ZERO     YL0002           WF Trans Total
     C                     Z-ADD*ZERO     YL0003           WF Trans Total
     C                     Z-ADD*ZERO     YL0004           WF ISC Part/Rej
      * Declare restrictor key work fields
     C           *LIKE     DEFN ALB2C3    WQSF01           ISC Warehouse C
     C           *LIKE     DEFN ALEJC7    WQSF02           ISC Item Code
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           WQSF01           ISC Warehouse C
     C                     KFLD           WQSF02           ISC Item Code
      * Setup key
     C                     Z-ADDAZAIC3    WQSF01           ISC Warehouse C
     C                     Z-ADDAZHGCD    WQSF02           ISC Item Code
      * Establish starting position
     C           KRSSF     SETLL@ALCPRM                    *
     C           KRSSF     READE@ALCPRM                  90*
      * Data record not found
     C   90                MOVEL'USR3695' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     ADD  ALO4QT    YL0001           WF Trans Total
     C                     ADD  ALO2QT    YL0003           WF Trans Total
     C                     ADD  ALO0QT    YL0002           WF Trans Total
      * This is -RR = rework
     C                     ADD  ALO7QT    YL0004           WF ISC Part/Rej
     C           KRSSF     READE@ALCPRM                  90*
     C                     ENDDO
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * Rtv Dly Usg per Item  RT - Packaging Daily Usage  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     $FQVNX           PDU Quantity Us
     C                     Z-ADD*ZERO     $FM5QT           PDU Ending Inve
      * Declare restrictor key work fields
     C           *LIKE     DEFN A0AIC3    WQSG01           Company Number
     C           *LIKE     DEFN A0BRAA    WQSG02           Packaging Item
      * Define keylist
     C           KPSSG     KLIST
     C                     KFLD           WQSG01           Company Number
     C                     KFLD           WQSG02           Packaging Item
     C                     KFLD           A0ELDT           Production Date
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           WQSG01           Company Number
     C                     KFLD           WQSG02           Packaging Item
      * Setup key
     C                     Z-ADD$FAIC3    WQSG01           Company Number
     C                     MOVEL$FBRAA    WQSG02           Packaging Item
     C                     Z-ADDP3JEDT    A0ELDT           Production Date
      * Establish starting position
     C           KPSSG     SETLL@A0CPHW                    *
     C           KRSSG     READE@A0CPHW                  90*
      * Data record not found
     C   90                MOVEL'USR3009' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Production Date GT PAR.Date To               USR
     C           A0ELDT    IFGT P4JFDT                     *IF
     C                     GOTO SGEXIT                     *QUIT
     C                     END                             *FI
     C                     ADD  A0M2QT    $FQVNX           PDU Quantity Us
      * CASE: DB1.PDU Ending Inventory is Greater than Zero
     C           A0M5QT    IFGT *ZERO                      *IF
     C                     Z-ADDA0M5QT    $FM5QT           PDU Ending Inve
     C                     END                             *FI
     C           KRSSG     READE@A0CPHW                  90*
     C                     ENDDO
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHRVGN    BEGSR
      *================================================================
      * Rtv Waste Factor      RT - Packaging Type  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSH     KLIST
     C                     KFLD           CAAIC3           Company Number
     C                     KFLD           CAI5SX           Pckg Item Type
      * Setup key
     C                     Z-ADD$FAIC3    CAAIC3           Company Number
     C                     MOVEL$FI5SX    CAI5SX           Pckg Item Type
      * Establish starting position
     C           KRSSH     CHAIN@CARENX              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR3168' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     YL0005           Pckg Waste Fact
     C                     GOTO SHEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDCAFIPC    YL0005           Pckg Waste Fact
     C                     ENDIF
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * Rtv Cost by Eff Dt    RT - Packaging Item Unit Cost  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN CDAIC3    WQSI01           Company Number
     C           *LIKE     DEFN CDBRAA    WQSI02           Packaging Item
      * Define keylist
     C           KPSSI     KLIST
     C                     KFLD           WQSI01           Company Number
     C                     KFLD           WQSI02           Packaging Item
     C                     KFLD           CDO4DT           Pkg Effective D
      * Define keylist
     C           KRSSI     KLIST
     C                     KFLD           WQSI01           Company Number
     C                     KFLD           WQSI02           Packaging Item
      * Setup key
     C                     Z-ADD$FAIC3    WQSI01           Company Number
     C                     MOVEL$FBRAA    WQSI02           Packaging Item
     C                     Z-ADDP4JFDT    CDO4DT           Pkg Effective D
      * Establish starting position
     C           KPSSI     SETLL@CDCPOG                    *
     C           KRSSI     READE@CDCPOG                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR3181' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     $FBICS           Pckg Unit Cost
     C                     GOTO SIEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDCDBICS    $FBICS           Pckg Unit Cost
     C                     GOTO SIEXIT                     *QUIT
     C           KRSSI     READE@CDCPOG                  90*
     C                     ENDDO
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * Rtv Include Flag      RT - Packaging Reporting Group  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSJ     KLIST
     C                     KFLD           CBD8AA           Pckg Reporting
      * Setup key
     C                     MOVELARD8AA    CBD8AA           Pckg Reporting
      * Establish starting position
     C           KRSSJ     CHAIN@CBREN0              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR3171' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    YL0006           Pckg Include on
     C                     GOTO SJEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELCBM6SX    YL0006           Pckg Include on
     C                     ENDIF
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     MOVEL*BLANK    P5DNCD           Application Cod
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    ARAIC3           Company Number
     C                     MOVEL*LOVAL    ARM3SX           Pckg Group Cate
     C                     MOVEL*LOVAL    ARD8AA           Pckg Reporting
     C                     MOVEL*LOVAL    ARXITX           Pckg Item Descr
      * Define work field Blank for 4           USR
     C                     MOVEL*BLANK    WUOTTX  4
      * Define work field CD3 Ext Numeric Key
     C                     MOVEL*BLANK    WUDMCD  3
      * Define work field ZERO
     C                     Z-ADD*ZERO     WUW0NB 305
      * Define work field Standard $ Waste      USR
     C                     Z-ADD*ZERO     WUQYNX  70
      * Define work field Actual $ Opp          USR
     C                     Z-ADD*ZERO     WUEAVL  70
      * Define work field Variance $            USR
     C                     Z-ADD*ZERO     WUD7VL  70
      * Define work field Actual $ Usage        USR
     C                     Z-ADD*ZERO     WUD8VL  70
      * Define work field Standard $ Usage      USR
     C                     Z-ADD*ZERO     WUD9VL  70
      * Define work field Standard $ Waste      SUM
     C                     Z-ADD*ZERO     WURBNX  70
      * Define work field Actual $ Opp          SUM
     C                     Z-ADD*ZERO     WURFNX  70
      * Define work field Variance $ Usage      SUM
     C                     Z-ADD*ZERO     WURGNX  70
      * Define work field Actual $ Usage        SUM
     C                     Z-ADD*ZERO     WUQ8NX  80
      * Define work field Standard $ Usage      SUM
     C                     Z-ADD*ZERO     WURANX  80
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    W0WD01 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD00 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD02 177       *Synon (17,7) w
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'N'       W0PMT   1
      * Define local work field WF Trans Total type RR qt
     C                     Z-ADD*ZERO     YL0001 112
      * Define local work field WF Trans Total type A qty
     C                     Z-ADD*ZERO     YL0002 112
      * Define local work field WF Trans Total type AP qt
     C                     Z-ADD*ZERO     YL0003 112
      * Define local work field WF ISC Part/Rej Curr Qty
     C                     Z-ADD*ZERO     YL0004 112
      * Define local work field Pckg Waste Factor %
     C                     Z-ADD*ZERO     YL0005  52
      * Define local work field Pckg Include on Var Rpt
     C                     MOVEL*BLANK    YL0006  1
      * Declare initial value data areas
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   $ACMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL##PGM     $APGM
     C                     MOVEL##USR     $AUSR
     C                     MOVEL*BLANK    W0PFM   1
     C                     Z-ADD*ZERO     @$WRK   40
     C                     Z-ADD*ZERO     @$HDL   40
     C                     Z-ADD*ZERO     @$CLN
     C                     Z-ADD*ZERO     @$PGN
      * Adjust page length and overflow as necessary
     C           @$PGL     SUB  2         W0PGL   40
     C           @$OFL     IFGE W0PGL
     C           W0PGL     SUB  2         W0OFL   40
     C                     ELSE
     C                     Z-ADD@$OFL     W0OFL
     C                     END
      * Clear overflow indicator
     C                     SETOF                     97
      * Request new page
     C                     MOVEL'Y'       W0NEWP  1
      * USER: Initialize program
      * E00112 03/10/08 RMC - read workfile built in poswupc/pmstxfr for
      *   FG trans total RR/AP/A
      * E00221 10/02/08 RMC - added company to key of packaging type file
      * E00458  07/29/09 RMC 1. Remove Plus Std Waste subtotal and Net Va
      *   2. Add rework column - calc'd from sum(-RR) * pkg bom qty
      *   3. Std Usage includes Phantom box transactions I03 and I04
      * VAL Rtv & Ctr Prt Hdg  IF
      * SET Setup Prt Headings IF
      * RTV Applic. Group Desc RT - Application  * 
     C                     EXSR SARVGN
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * Center Txt String 40 - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc to PrtCo US - /UT User Source  * 
     C                     MOVE WUDE40    $ACMP
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      *================================================================
     CSR         ZZEXIT    ENDSR
** @CN
00001 Y2U0005
