// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PLFIDFR
// ?Date: 14.08.2025 Time: 02:54:04
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(HPE048) TYPE(EXCINTFUN)                                        AB1190146;
{
 //?Execute internal function

 //?Nppc by Origin State Report
}


//?RMC 2/21/05 Copied from WW Producer - changed to a Display only function
EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(LCL.CC_Company_Number);
PARAMETER('HPE');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


CASE;

// IF PAR.Oms Access Denied (Y/N) is Yes
IF PAR.Oms_Access_Denied_Y_N = 'Y';

RETURN;

ENDIF;

// PAR.PRT Night Queue Run Sts = CND.No
PAR.PRT_Night_Queue_Run_Sts = 'N';

//?R7522 JJH 12/27/16 - Initialize F10=Email Toggle
// LCL.F10=Display Emails = CND.Display Emails
LCL.F10Display_Emails = 'Y';

//?R10690 JJH 06/08/17 - Get M3 Supplier Division
// Call program Rtv Company Values    XF.
CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
PARAMETER(LCL.CC_Company_Number);
PARAMETER('M3HPEDIV');
PARAMETER(PAR.M3_Supplier_Division);

//?R17061 DN 05/03/21 - Get JDE 'E1LIVE' Flag.
// Call program Rtv Company Values    XF.
CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
PARAMETER(LCL.CC_Company_Number);
PARAMETER('E1LIVE');
PARAMETER(LCL.JDE_Live_with_E1_USR);

//?USER: Initialize subfile control

//?First time processing
CASE;

// IF WRK.First Time Flag Usr EQ WRK.Blank USR
IF WRK.First_Time_Flag_Usr = WRK.Blank_USR;

// CTL.RS Record Status = CND.Active
CTL.RS_Record_Status = 'A';

// WRK.Display Print Prompt  Usr = CND.Prompt is to be displayed
WRK.Display_Print_Prompt_Usr = 'Y';

// WRK.First Time Flag Usr = CND.Yes
WRK.First_Time_Flag_Usr = 'Y';

//?R10690 JJH 06/07/17 - F8=Dsp Blank SupplierID/ALL
//?R17061 DN 5/03/21-Renamed 'Supplier' to 'Vendor'.
// LCL.Dsp Blank Vendor USR = CND.No
LCL.Dsp_Blank_Vendor_USR = 'N';

//?R17061 DN 5/03/21-Renamed 'Supplier' to 'Vendor'.
// CTL.Text 25 #1 Usr = CON.**ALL Vendor**
CTL.Text_25_#1_Usr = '**ALL Vendor**';

ENDIF;

// WRK.Insurance flag USR = CTL.Insurance flag USR
WRK.Insurance_flag_USR = CTL.Insurance_flag_USR;

// WRK.Subsidiary Flag Usr = CTL.Subsidiary Flag Usr
WRK.Subsidiary_Flag_Usr = CTL.Subsidiary_Flag_Usr;

//?USER: Initialize subfile record from DBF record

// PGM.*Record selected = CND.*YES
PGM.*Record_selected = 'Y';

//?R10690 JJH 06/08/17 - Producer Address
// Call program Rtv Producer Address  XF.
CALL PROGRAM(Rtv Producer Address  XF) ('PWCZXFR');
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(NLL.Address_Number);
PARAMETER(NLL.Pass_Name);
PARAMETER(RCD.Producer_Address_1_USR);
PARAMETER(NLL.Address_2);
PARAMETER(NLL.Address_3);
PARAMETER(RCD.Producer_City_USR);
PARAMETER(RCD.Producer_State_USR);
PARAMETER(RCD.Producer_Zip_10_USR);
PARAMETER(RCD.Producer_Area_Code_USR);
PARAMETER(RCD.Producer_Phone_Number_USR);
PARAMETER(NLL.Fax_Area_Code_#);
PARAMETER(NLL.Fax_Telephone);
PARAMETER(NLL.Fax_Attn_1);
PARAMETER(NLL.Fax_Area_Code_#_2);
PARAMETER(NLL.Fax_Telephone_2);
PARAMETER(NLL.Fax_Attn_2);
PARAMETER(NLL.Vendor_1099);
PARAMETER(NLL.Vendor_Tax_Id);
PARAMETER(RCD.Country_Code_Usr);

//?R10690 JJH 06/07/17 - Retrieve M3 Supplier ID
EXECUTE FUNCTION(Rtv Producer EXT2     RT) TYPE(RTVOBJ) FILE(PLB4REP)           AB1322079;
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(RCD.M3_Supplier_ID);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?R17061 DN 05/03/21-Commented Out M3 Supplier ID.
//?R17061 DN 05/03/21-Set JDE / M3 Prefix Based on 'E1LIVE' Flag.
CASE;

// IF LCL.JDE Live with E1 USR is Yes
IF LCL.JDE_Live_with_E1_USR = 'Y';

// CTL.JDE/M3 Prefix USR = CON.JDE
CTL.JDE_M3_Prefix_USR = 'JDE';

// RCD.Vendor Number USR = CON.*BLANK
RCD.Vendor_Number_USR = *BLANK;

//?Remove Leading Zero for JDE Vendor #.
CASE;

// IF RCD.PD VND Address Number is Not zero
IF RCD.PD_VND_Address_Number <> *ZERO;

// RCD.Vendor Number USR = CVTVAR(RCD.PD VND Address Number)
RCD.Vendor_Number_USR = CVTVAR(RCD.PD_VND_Address_Number);

// PAR.Vendor Number USR = RCD.Vendor Number USR
PAR.Vendor_Number_USR = RCD.Vendor_Number_USR;

// LCL.Count USR = CON.*ZERO
LCL.Count_USR = *ZERO;

// LCL.Text Usr 1 = CON.0
LCL.Text_Usr_1 = 0;

//?Substring in the Value Without the Leading Zeros.
// DOW LCL.Text Usr 1 is Zero
DOW LCL.Text_Usr_1 = '0';

// LCL.Count USR = LCL.Count USR + CON.1
LCL.Count_USR = LCL.Count_USR + 1;

// LCL.Text Usr 1 = SUBSTRING(PAR.Vendor Number USR,LCL.Count USR,CON.1)
LCL.Text_Usr_1 = SUBSTRING(PAR.Vendor_Number_USR:LCL.Count_USR:1);

CASE;

// IF LCL.Text Usr 1 is Not Zero
IF LCL.Text_Usr_1 <> '0';

// LCL.For Length USR = CON.9 - LCL.Count USR
LCL.For_Length_USR = 9 - LCL.Count_USR;

// PAR.Vendor Number USR = SUBSTRING(PAR.Vendor Number USR,LCL.Count USR,LCL.For Length USR)
PAR.Vendor_Number_USR = SUBSTRING(PAR.Vendor_Number_USR:LCL.Count_USR:LCL.For_Length_USR);

// RCD.Vendor Number USR = PAR.Vendor Number USR
RCD.Vendor_Number_USR = PAR.Vendor_Number_USR;

ENDIF;

ENDDO;

ENDIF;

//?R17061 DN 05/03/21-Set JDE / M3 Prefix Based on 'E1LIVE' Flag.
// IF *OTHERWISE
IF *OTHERWISE;

// CTL.JDE/M3 Prefix USR = CON.M3
CTL.JDE_M3_Prefix_USR = 'M3';

// RCD.Vendor Number USR = RCD.M3 Supplier ID
RCD.Vendor_Number_USR = RCD.M3_Supplier_ID;

ENDIF;

//?R17061 DN 05/03/21-Select By Vendor.
CASE;

// IF CTL.Vendor Number USR is Not Entered
IF CTL.Vendor_Number_USR = *BLANK;

//?R17061 DN 05/03/21-Select By Vendor.
// IF *OTHERWISE
IF *OTHERWISE;

CASE;

// IF CTL.Vendor Number USR NE RCD.Vendor Number USR
IF CTL.Vendor_Number_USR <> RCD.Vendor_Number_USR;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?12/03/2018  JBB Record selection process for Y, N, or blank
//?S16226 DN 03/02/20-Get Both HPS Automation & Live Repayment Flags.
EXECUTE FUNCTION(Rtv HPS Auto/Live Repy RT) TYPE(RTVOBJ) FILE(PLAOREP)          AB1353757;
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(RCD.HPS_Automation_Y_N_Usr);
PARAMETER(RCD.Live_Repayment_USR);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?HPS Automation selection
CASE;

// IF CTL.HPS Automation Y/N Usr is BLANK
IF CTL.HPS_Automation_Y_N_Usr = *BLANK;

//?Select all records
//?HPS Automation selection
// IF *OTHERWISE
IF *OTHERWISE;

//?Select HPE Automation records = user's selection
CASE;

// IF CTL.HPS Automation Y/N Usr EQ RCD.HPS Automation Y/N Usr
IF CTL.HPS_Automation_Y_N_Usr = RCD.HPS_Automation_Y_N_Usr;

//?Select record
//?Select HPE Automation records = user's selection
// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?S16226 DN 03/02/20-Live Repayment Selection.
CASE;

// IF CTL.Live Repayment USR is Blank
IF CTL.Live_Repayment_USR = *BLANK;

// OR CTL.Live Repayment USR EQ RCD.Live Repayment USR
OR CTL.Live_Repayment_USR = RCD.Live_Repayment_USR;

//?S16226 DN 03/02/20-Live Repayment Selection.
// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?R10690 JJH 06/07/17 - F8=Dsp Blank SupplierID/All
//?R17061 DN 05/03/21-Changed Logic for F8.
//?If F8 Pressed Then Select Blank/ALL Vendor.
CASE;

// IF LCL.Dsp Blank Supplier USR is Yes
IF LCL.Dsp_Blank_Vendor_USR = 'Y';

// CTL.Vendor Number USR = CND.Not Entered
CTL.Vendor_Number_USR = *BLANK;

CASE;

// IF RCD.Vendor Number USR is Not Entered
IF RCD.Vendor_Number_USR = *BLANK;

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?*************************************************************************
//?*************************************************************************
//?R10690 JJH 06/14/17 - Enaable this validation.
// Call program Rtv/Chk Prdcr for Ins XF.
CALL PROGRAM(Rtv/Chk Prdcr for Ins XF) ('PKGDXFR');
PARAMETER(DB1.PD_Producer_Code);
PARAMETER(RCD.Insurance_flag_USR);
PARAMETER(LCL.CC_Company_Number);

//?Insurance Flag
CASE;

// IF CTL.Insurance flag USR NE WRK.Blank USR
IF CTL.Insurance_flag_USR <> WRK.Blank_USR;

CASE;

// IF RCD.Insurance flag USR EQ CTL.Insurance flag USR
IF RCD.Insurance_flag_USR = CTL.Insurance_flag_USR;

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?Subsidiary Flag
CASE;

// IF PGM.*Record selected is *YES
IF PGM.*Record_selected = 'Y';

EXECUTE FUNCTION(Rtv Prodsubsidiary    RT) TYPE(RTVOBJ) FILE(PLA8REP)           AB1291363;
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(RCD.Subsidiary_Flag_Usr);
{
 //?USER: Initialize routine

 // PAR.Subsidiary Flag Usr = CND.No
 PAR.Subsidiary_Flag_Usr = 'N';

 //?USER: Process Data record

 // PAR.Subsidiary Flag Usr = CND.Yes
 PAR.Subsidiary_Flag_Usr = 'Y';

 QUIT;

}


CASE;

// IF CTL.Subsidiary Flag Usr NE WRK.Blank USR
IF CTL.Subsidiary_Flag_Usr <> WRK.Blank_USR;

CASE;

// IF RCD.Subsidiary Flag Usr EQ CTL.Subsidiary Flag Usr
IF RCD.Subsidiary_Flag_Usr = CTL.Subsidiary_Flag_Usr;

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

ENDIF;

//?R7522 JJH 01/16/17 - Display "Y" in Email Prodcr Dist Ent Sts if
//?  at least 1 Email is set up in Producer Distribution Ent.
EXECUTE FUNCTION(Val Prdcr DistEnt Eml RT) TYPE(RTVOBJ) FILE(PVCRREP)           AB1329785;
PARAMETER(RCD.PD_Producer_Code);
PARAMETER('HPE-DLVRCV');
PARAMETER(LCL.Return_Code_USR);
{
 //?USER: Initialize routine

 // PAR.Return Code USR = CND.*Record does not exist
 PAR.Return_Code_USR = 'Y2U0005';

 //?USER: Process Data record

 CASE;

 // IF DB1.PDE Destination Type is Email
 IF DB1.PDE_Destination_Type = 'E';

 // AND DB1.RS Record Status is Active
 AND DB1.RS_Record_Status = 'A';

 // PAR.Return Code USR = CND.*Record already exists
 PAR.Return_Code_USR = 'Y2U0003';

 QUIT;

 ENDIF;

}


//?Display Y or N in Email Prodcr Dist Ent Sts
CASE;

// IF LCL.Return Code USR is *Record already exists
IF LCL.Return_Code_USR = 'Y2U0003';

// RCD.Email Prodcr Dist Ent Sts = CND.Yes
RCD.Email_Prodcr_Dist_Ent_Sts = 'Y';

//?Display Y or N in Email Prodcr Dist Ent Sts
// IF *OTHERWISE
IF *OTHERWISE;

// RCD.Email Prodcr Dist Ent Sts = CND.No
RCD.Email_Prodcr_Dist_Ent_Sts = *BLANK;

ENDIF;

//?F10=Toggle Delivery Schedule Report Email
CASE;

// IF LCL.F10=Display Emails is Display NO Emails
IF LCL.F10Display_Emails = 'N';

// AND RCD.Email Prodcr Dist Ent Sts is Yes
AND RCD.Email_Prodcr_Dist_Ent_Sts = 'Y';

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?Email Prodcr Dist Ent Sts
CASE;

// IF CTL.Email Prodcr Dist Ent Sts is No
IF CTL.Email_Prodcr_Dist_Ent_Sts = *BLANK;

//?If value is No (blank), select record
//?Email Prodcr Dist Ent Sts
// IF CTL.Email Prodcr Dist Ent Sts is Yes
IF CTL.Email_Prodcr_Dist_Ent_Sts = 'Y';

// AND RCD.Email Prodcr Dist Ent Sts is Yes
AND RCD.Email_Prodcr_Dist_Ent_Sts = 'Y';

//?Select record
//?Email Prodcr Dist Ent Sts
// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?R7522 JJH 02/14/17 - Display "Y" in Email Carcass Detail Sts if
//?  at least 1 Email is set up in Producer Email Detail.
EXECUTE FUNCTION(Rtv Producer EmlDtlEx Rt) TYPE(RTVOBJ) FILE(PLA1REP)           AB1331568;
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(LCL.Record_Found_USR);
{
 //?USER: Initialize routine

 // PAR.Record Found USR = CND.Record Not Found
 PAR.Record_Found_USR = 'N';

 //?USER: Process Data record

 // PAR.Record Found USR = CND.Record Found
 PAR.Record_Found_USR = 'Y';

 QUIT;

}


//?Display Y or N in Email Carcass Detail Sts
CASE;

// IF LCL.Record Found USR is Record Found
IF LCL.Record_Found_USR = 'Y';

// RCD.Email Carcass Detail Sts = CND.Yes
RCD.Email_Carcass_Detail_Sts = 'Y';

//?Display Y or N in Email Carcass Detail Sts
// IF *OTHERWISE
IF *OTHERWISE;

// RCD.Email Carcass Detail Sts = CND.No
RCD.Email_Carcass_Detail_Sts = *BLANK;

ENDIF;

//?Email Carcass Detail Status
CASE;

// IF CTL.Email Carcass Detail Sts is No
IF CTL.Email_Carcass_Detail_Sts = *BLANK;

//?If value is No (blank), select record
//?Email Carcass Detail Status
// IF CTL.Email Carcass Detail Sts is Yes
IF CTL.Email_Carcass_Detail_Sts = 'Y';

// AND RCD.Email Carcass Detail Sts is Yes
AND RCD.Email_Carcass_Detail_Sts = 'Y';

//?Select record
//?Email Carcass Detail Status
// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?USER: Process subfile control (Pre-confirm)

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

//?If either CTL email flag changes value, reload; ELSE process
CASE;

// IF LCL.Email Prodcr Dist Ent Sts NE CTL.Email Prodcr Dist Ent Sts
IF LCL.Email_Prodcr_Dist_Ent_Sts <> CTL.Email_Prodcr_Dist_Ent_Sts;

// OR LCL.Email Carcass Detail Sts NE CTL.Email Carcass Detail Sts
OR LCL.Email_Carcass_Detail_Sts <> CTL.Email_Carcass_Detail_Sts;

// OR LCL.HPS Automation Y/N Usr NE CTL.HPS Automation Y/N Usr
OR LCL.HPS_Automation_Y_N_Usr <> CTL.HPS_Automation_Y_N_Usr;

// OR LCL.Live Repayment USR NE CTL.Live Repayment USR
OR LCL.Live_Repayment_USR <> CTL.Live_Repayment_USR;

// LCL.Email Prodcr Dist Ent Sts = CTL.Email Prodcr Dist Ent Sts
LCL.Email_Prodcr_Dist_Ent_Sts = CTL.Email_Prodcr_Dist_Ent_Sts;

// LCL.Email Carcass Detail Sts = CTL.Email Carcass Detail Sts
LCL.Email_Carcass_Detail_Sts = CTL.Email_Carcass_Detail_Sts;

// LCL.HPS Automation Y/N Usr = CTL.HPS Automation Y/N Usr
LCL.HPS_Automation_Y_N_Usr = CTL.HPS_Automation_Y_N_Usr;

//?S16226 DN 03/02/20-Added Live Repayment Selector.
// LCL.Live Repayment USR = CTL.Live Repayment USR
LCL.Live_Repayment_USR = CTL.Live_Repayment_USR;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

//?If either CTL email flag changes value, reload; ELSE process
// IF *OTHERWISE
IF *OTHERWISE;

//?F4=Prompt on Source
CASE;

// IF CTL.*CMD key is CF04
IF CTL.*CMD_key = '04';

// AND PGM.*Cursor field <IS> CTL.SR Source Code
AND PGM.*Cursor_field = CTL.SR_Source_Code;

// CTL.SR Source Code = WRK.Blank USR
CTL.SR_Source_Code = WRK.Blank_USR;

// Call program Sel Source            SR.
CALL PROGRAM(Sel Source            SR) ('PKDRSRR');
PARAMETER(CTL.SR_Source_Code);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// PGM.*Defer confirm = CND.Proceed to confirm
PGM.*Defer_confirm = 'N';

ENDIF;

//?F4=Prompt on Buyer
CASE;

// IF CTL.*CMD key is CF04
IF CTL.*CMD_key = '04';

// AND PGM.*Cursor field <IS> CTL.HB Buyer Code
AND PGM.*Cursor_field = CTL.HB_Buyer_Code;

// CTL.HB Buyer Code = WRK.Blank USR
CTL.HB_Buyer_Code = WRK.Blank_USR;

// Call program Sel Hog Buyer         SR.
CALL PROGRAM(Sel Hog Buyer         SR) ('PKD3SRR');
PARAMETER(CTL.HB_Buyer_Code);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// PGM.*Defer confirm = CND.Proceed to confirm
PGM.*Defer_confirm = 'N';

ENDIF;

//?R10690 JJH 06/08/17 - Prompt for M3 Supplier ID
//?R17061 DN 05/03/21-Allow M3 Vendor Prompt Only if E1LIVE=N.
//?F4=Prompt on M3 Supp
CASE;

// IF CTL.*CMD key is CF04
IF CTL.*CMD_key = '04';

// AND PGM.*Cursor field <IS> CTL.Vendor Number USR
AND PGM.*Cursor_field = CTL.Vendor_Number_USR;

// AND LCL.JDE Live with E1 USR is No
AND LCL.JDE_Live_with_E1_USR = 'N';

// WRK.M3 Supplier Name = CON.*BLANK
WRK.M3_Supplier_Name = *BLANK;

//?T8163 DN  01/16/17 - Set M3 Supplier Group as Producer.
// LCL.M3 Supplier Group = CND.Producers
LCL.M3_Supplier_Group = 'ZHP';

// Call program Sel M3 Suplr Same Div/Grp.
CALL PROGRAM(Sel M3 Suplr Same Div/Grp) ('PLX1SRR');
PARAMETER(CTL.Vendor_Number_USR);
PARAMETER(WRK.M3_Supplier_Name);
PARAMETER(WRK.M3_Address_Line_1);
PARAMETER(WRK.M3_Address_Line_2);
PARAMETER(WRK.M3_Address_Line_3);
PARAMETER(WRK.M3_Address_Line_4);
PARAMETER(WRK.M3_City);
PARAMETER(WRK.M3_State);
PARAMETER(WRK.M3_Postal_Code);
PARAMETER(WRK.M3_Telephone_No_1);
PARAMETER(WRK.M3_Telephone_No_2);
PARAMETER(WRK.M3_Fax_Telephone);
PARAMETER(WRK.M3_Supplier_Tax_ID);
PARAMETER(WRK.M3_Country_Code);
PARAMETER(LCL.M3_Supplier_Group);
PARAMETER(PAR.M3_Supplier_Division);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// PGM.*Defer confirm = CND.Proceed to confirm
PGM.*Defer_confirm = 'N';

ENDIF;

//?R10690 JJH 06/07/17 - F8=Dsp Blank SupplierID/ALL
//?F8=Dsp Blank Vendor/ALL
CASE;

// IF CTL.*CMD key is CF08
IF CTL.*CMD_key = '08';

//?New.                                          R17061 DN 5/03/21
CASE;

// IF LCL.Dsp Blank Vendor USR is No
IF LCL.Dsp_Blank_Vendor_USR = 'N';

// LCL.Dsp Blank Vendor USR = CND.Yes
LCL.Dsp_Blank_Vendor_USR = 'Y';

// CTL.Text 25 #1 Usr = CON.**Blank Vendor**
CTL.Text_25_#1_Usr = '**Blank Vendor**';

//?New.                                          R17061 DN 5/03/21
// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Dsp Blank Vendor USR = CND.No
LCL.Dsp_Blank_Vendor_USR = 'N';

// CTL.Text 25 #1 Usr = CON.**ALL Vendor**
CTL.Text_25_#1_Usr = '**ALL Vendor**';

ENDIF;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?R7522 JJH 12/27/16 - F10=Email Toggle
//?F10=Email Toggle
CASE;

// IF CTL.*CMD key is CF10
IF CTL.*CMD_key = '10';

CASE;

// IF LCL.F10=Display Emails is Display Emails
IF LCL.F10Display_Emails = 'Y';

// LCL.F10=Display Emails = CND.Display NO Emails
LCL.F10Display_Emails = 'N';

// IF LCL.F10=Display Emails is Display NO Emails
IF LCL.F10Display_Emails = 'N';

// LCL.F10=Display Emails = CND.Display Emails
LCL.F10Display_Emails = 'Y';

ENDIF;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?F21=Print List
CASE;

// IF CTL.*CMD key is Print List
IF CTL.*CMD_key = '21';

// Call program Pmt Print Options     XF.
CALL PROGRAM(Pmt Print Options     XF) ('PDG0PVR');
PARAMETER('Print Producer List');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER('P/S');

CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// Execute command - 'SBM Prt Producer List'
EXECUTE COMMAND(PRK0306);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(CTL.RS_Record_Status);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(CTL.SR_Source_Code);
PARAMETER(CTL.HB_Buyer_Code);

ENDIF;

// WRK.Display Print Prompt  Usr = CND.Prompt is to be displayed
WRK.Display_Print_Prompt_Usr = 'Y';

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// PGM.*Defer confirm = CND.Proceed to confirm
PGM.*Defer_confirm = 'N';

ENDIF;

//?Insurance Flag
CASE;

// IF CTL.Insurance flag USR NE WRK.Insurance flag USR
IF CTL.Insurance_flag_USR <> WRK.Insurance_flag_USR;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?R17061 DN 05/03/21-Reload When Vendor Changes.
CASE;

// IF CTL.Vendor Number USR NE LCL.Vendor Number USR
IF CTL.Vendor_Number_USR <> LCL.Vendor_Number_USR;

// LCL.Vendor Number USR = CTL.Vendor Number USR
LCL.Vendor_Number_USR = CTL.Vendor_Number_USR;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

ENDIF;

//?USER: Process subfile record (Pre-confirm)

//?R17061 DN 05/04/21-Changed Opt 5 to Check E1LIVE Flag.
//?5=Display
CASE;

// IF RCD.*SFLSEL is *WW/Display request
IF RCD.*SFLSEL = '5'/'5';

//?If E1LIVE = Y, Then Call PWMOD1R to Display JDE E1 Info.
CASE;

// IF LCL.JDE Live with E1 USR is Yes
IF LCL.JDE_Live_with_E1_USR = 'Y';

// Call program Dsp Producer JDE E1   DR.
CALL PROGRAM(Dsp Producer JDE E1   DR) ('PWMOD1R');
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(PAR.Oms_System_Value_Alpha);

//?If E1LIVE = Y, Then Call PWMOD1R to Display JDE E1 Info.
// IF *OTHERWISE
IF *OTHERWISE;

// Call program Dsp Producer          DR.
CALL PROGRAM(Dsp Producer          DR) ('PKDYD1R');
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(PAR.Oms_System_Value_Alpha);

ENDIF;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?6=Print
CASE;

// IF RCD.*SFLSEL is *Print request
IF RCD.*SFLSEL = '6'/'6';

//?Print Options Prompt
CASE;

// IF WRK.Display Print Prompt  Usr is Prompt is to be displayed
IF WRK.Display_Print_Prompt_Usr = 'Y';

// Call program Pmt Print Options     XF.
CALL PROGRAM(Pmt Print Options     XF) ('PDG0PVR');
PARAMETER('Print Producer');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER('P/S');

// WRK.Display Print Prompt  Usr = CND.Do not display prompt
WRK.Display_Print_Prompt_Usr = 'N';

ENDIF;

CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// Execute command - 'SBM Prt Producer'
EXECUTE COMMAND(PRK0307);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(PAR.Oms_System_Value_Alpha);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

ENDIF;

//?7=Dsp Producer Location
CASE;

// IF RCD.*SFLSEL is *Option 7 request
IF RCD.*SFLSEL = '7'/'7';

// Call program WW Prdctn Loc - Dsp   DF.
CALL PROGRAM(WW Prdctn Loc - Dsp   DF) ('PLFJDFR');
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(PAR.Oms_System_Value_Alpha);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?**********************************************************************
//?**********************************************************************
//?8=Display Std Deduction/Addition
CASE;

// IF RCD.*SFLSEL is *Option 8 request
IF RCD.*SFLSEL = '8'/'8';

// Call program Dsp Producer D/A      DF.
CALL PROGRAM(Dsp Producer D/A      DF) ('PLFMDFR');
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(PAR.Oms_System_Value_Alpha);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?9=Display Sites                          12/28/05 LJB
CASE;

// IF RCD.*SFLSEL is *option 9 request
IF RCD.*SFLSEL = '9'/'9';

// Call program Dsp Producer Sites    DF.
CALL PROGRAM(Dsp Producer Sites    DF) ('PLGODFR');
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(PAR.Oms_System_Value_Alpha);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?10=Edit Producer Emails Carcass Settlement
CASE;

// IF RCD.*SFLSEL is *Option 10 (Reusable)
IF RCD.*SFLSEL = '10';

// Call program Edt ProdEmlHdrDtl     ET.
CALL PROGRAM(Edt ProdEmlHdrDtl     ET) ('PLK1ETR');
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(RCD.PD_Name);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?11=Dsp TF/STF Producers
CASE;

// IF RCD.*SFLSEL is *Option 11 (Reusable)
IF RCD.*SFLSEL = '11';

// Call program Dsp Producer Sent To  DF.
CALL PROGRAM(Dsp Producer Sent To  DF) ('PWB8DFR');

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?R10690 JJH 06/08/17 - Add option
//?16=Dsp Alt Producer Payee
CASE;

// IF RCD.*SFLSEL is *Option 16 (Reusable)
IF RCD.*SFLSEL = '16';

// Call program Dsp Alt Prod Payee    DF.
CALL PROGRAM(Dsp Alt Prod Payee    DF) ('PLO6DFR');
PARAMETER(RCD.PD_Producer_Code);

// RCD.*SFLSEL = CND.*Reset to blanks
RCD.*SFLSEL = *BLANK;

ENDIF;

//?R7522 JJH 12/27/16 - Add Option 18=Edit Producer Entry
//?18=Edit Dlv Sched Rpt Emails
CASE;

// IF RCD.*SFLSEL is *Option 18
IF RCD.*SFLSEL = '18';

// Call program Edt Prdcr Distrib Ent EF.
CALL PROGRAM(Edt Prdcr Distrib Ent EF) ('PWADEFR');
PARAMETER(RCD.PD_Producer_Code);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?USER: Final processing (Pre-confirm)

// WRK.Display Print Prompt  Usr = CND.Prompt is to be displayed
WRK.Display_Print_Prompt_Usr = 'Y';

