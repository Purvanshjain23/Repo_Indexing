      *****************  RPG PROGRAM HEADING  ***********************
      *
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP132
      * TITLE:       MAINTAIN REPORT CODES
      * PROGRAMMER:  MARY PALMER
      * CREATED:     06/09/94
      *
      * FUNCTION: THIS PROGRAM USES A SUBFILE TO MAINTAIN REPORT CODE
      *           RECORDS.
      *
      *           THE PROGRAM WILL CREATE, DELETE AND UPDATE RECORDS
      *           FOR A PARTICULAR REPORT CATEGORY.
      *
      *           THIS PROGRAM IS CALLED FROM HP422-WORK WITH
      *           REPORT CATEGORIES.
      *
      *           USER CAN ONLY DELETE RECORD IF USER CONTROL FLAG = Y.
      *
      *           IT DOES NOT HAVE SELECTORS OR POSITIONERS.
      *           IT DOES HAVE F4-PROMPT LOGIC.
      *           IT LOADS THE SUBFILE A PAGE AT A TIME.
      *           IT USES THE STANDARD MESSAGE HANDLING PROGRAM.
      *           IT HAS STANDARD SUBFILE OPTION EDITING.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 04/12/00  LeAnne Fedor
      *           Recompile only. The 'closed group pounds' field in the
      *           Closed Hog Group file was increased to 11,2.
      *
      * 07/18/01  LeAnne Fedor
      *           Recompile only.
      *           Expense ticket amount expanded from 7,2 to 9,2.
      *
      * 06/25/03  LeAnne Fedor
      *           Made the 'descriptions' upper/lower case.
      *
      * 07/14/03  LeAnne Fedor
      *           Removed deletion integrity check against HSP047-EOP Farm Site file; this
      *           file no longer exists in the system.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHPD132    CF   E             WORKSTN
     F                                     SFILE(HP132S1:HDRRN1)
     F                                     INFDS(IOFEED)
      *
     FHSL006B   IF   E           K DISK
     F                                     RENAME(RPREC:RPRECA)
      *    REPORT CODES
      *
      *
     FHSP006    UF A E           K DISK
     F                                     INFDS(DBFEED)
      *    REPORT CODES
      *
      *
     FHSL033A   IF   E           K DISK
      *    CLOSED HOG GROUP
      *
      *
     FHSL044A   IF   E           K DISK
      *    DEDUCTION/ADD-ON CODES
      *
      *
     FHSL045A   IF   E           K DISK
      *    PREMIUM/DISCOUTN CODE
      *
      *
     FHSL048E   IF   E           K DISK
      *    EXPENSE TICKET
      *
      *
     FHSL052C   IF   E           K DISK
      *    EXPENSE CODES
      *
      *
     FHSL079B   IF   E           K DISK
      *    SALE TYPE REPORT CODES
      *
      ****************************************************************
      * TABLE AND ARRAY SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  STANDARD MESSAGE ARRAYS
      *---------------------------------------------------------------
      *
      /EJECT
      ****************************************************************
      * INPUT SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      * STANDARD ERROR MESSAGE HANDLING DATA STRUCTURES
      *---------------------------------------------------------------
      *
      * FOR ERROR MESSAGE HANDLING, A PACKED INDEX (E) IS REQUIRED.
      * FOR PROGRAM READABILITY, DEFINE A CORRESPONDING ERROR COUNT
      * FIELD CALLED 'ERROR'. ALSO DEFINE CURSOR LOCATION FIELDS.
      *
     D                 DS                  INZ
     D  ERROR                  1      2P 0
     D  E                      1      2P 0
      *
      * THIS DATA STRUCTURE SUPPLIES THE NAME OF THE MESSAGE FILE TO
      * THE MESSAGE HANDLING CL PROGRAM.  THE FIELD NAME MSGFIL MUST BE
      * CONSTANT. THE VALUE IN QUOTES IS THE NAME OF THE SPECIFIC
      * MESSAGE FILE CONTAINING THE USER DEFINED MESSAGES.
      *
     D                 DS                  INZ
     D  MSGFIL                 1     10    INZ('HSMSGF    ')
      *
      * THE FOLLOWING 3 DATA STRUCTURES ARE USED TO SPEED MESSAGE
      * HANDLING SINCE IT IS FASTER TO CLEAR DATA STRUCTURES THAN
      * ARRAYS.  EACH IS ASSOCIATED WITH A STANDARD MESSAGE ARRAY.
      *
     D MGI             DS           140    INZ
     D  MGID                   1    140
     D                                     DIM(20)                              MSG ID ARRAY
      *
     D MGD             DS          1000    INZ
     D  MGDT                   1   1000
     D                                     DIM(20)                              MSG PARMS
      *
     D MGWK            DS            50    INZ
     D  MGW                    1     50
     D                                     DIM(50)                              MSG WORK PARMS
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      * STANDARD WORKSTATION INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTWSFR (RECORD FORMAT: UTIDFRR)
     D IOFEED        E DS                  EXTNAME(UTWSFR)
      *
      *---------------------------------------------------------------
      * STANDARD DATABASE FILE INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTDBFR (RECORD FORMAT: FDBCKD)
     D DBFEED        E DS                  EXTNAME(UTDBFR)
      *
      *---------------------------------------------------------------
      *STANDARD SUBFILE SELECTOR CONVERSION
      *---------------------------------------------------------------
     D                 DS
     D  DFOPT                  1      2
     D  WKOPT1                 1      1
     D  WKOPT2                 2      2
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D CREATE          C                   CONST('CREATE')
     D REVISE          C                   CONST('REVISE')
     D DELETE          C                   CONST('DELETE')
     D VIEW            C                   CONST('VIEW  ')
     D SELECT          C                   CONST('SELECT')
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
     D SET1            C                   CONST('SET1  ')
     D EDIT1           C                   CONST('EDIT1 ')
     D SCRN1           C                   CONST('SCRN1 ')
     D EXIT            C                   CONST('EXIT  ')
     D UPDATE          C                   CONST('UPDATE')
      *
      /EJECT
      ****************************************************************
      * MAIN LINE
      ****************************************************************
      *
     C                   MOVEL     SET1          ROUTNE
      *
     C     *INLR         DOWEQ     *OFF                                         MAIN DO LOOP
      *
     C     ROUTNE        CASEQ     SET1          $SET1
     C     ROUTNE        CASEQ     SCRN1         $SCRN1
     C     ROUTNE        CASEQ     EDIT1         $EDIT1
      *
     C     ROUTNE        CASEQ     EXIT          $EXIT
     C                   ENDCS
     C                   ENDDO                                                  MAIN DO LOOP
      *
      /EJECT
      *----------------------------------------------------------------
      * $SET1 - SUBROUTINE TO SET ENVIRONMENT FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SET1         BEGSR
      *
      * NO NEED TO VERIFY THAT REPORT CATEGORY EXISTS, MAINTAINED BY IS
      *
      *  CLEAR/FILL THE SUBFILE
      *
     C                   EXSR      $CLR1
     C                   EXSR      $FRSH1
      *
      *  SET ROUTINE TO DISPLAY SCREEN
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $SCRN1 - SUBROUTINE TO PERFORM OPERATOR I/O FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SCRN1        BEGSR
      *
      * WRITE THE ERROR MESSAGES FROM THE ERROR ARRAYS TO THE
      * ERROR MESSAGE SUBFILE
      *
     C                   EXSR      $WRMSG
      *
      *  WRITE SCREEN 1 TO CRT
      *
     C                   WRITE     HP132K1
     C                   WRITE     HP132EC
     C                   EXFMT     HP132C1
      *
      * SET THE 'RESET' FLAG TO NO.  THIS FLAG IS USED TO DETERMINE
      * WHETHER TO REPOSITION THE USER TO A PARTICULAR PLACE IN THE
      * SUBFILE (RESET=YES) OR TO PLACE THE USER AT THE BEGINNNING OF
      * THE SUBFILE (RESET=NO)
      *
     C                   MOVEL     NO            RESET
      *
      * RETRIEVE THE LOWEST SUBFILE RRN ON THE SCREEN FROM THE DSPF
      * FEEDBACK AREA (IDFLOW) AND MOVE IT TO A WORK FIELD.  THIS VALUE
      * WILL BE USED LATER TO CONTROL THE REPOSITIONING OF THE SUBFILE.
      *
     C                   Z-ADD     IDFLOW        WKFLOW
      *
      * CLEAR ALL MESSAGES
      *
     C                   EXSR      $CLMSG
      *
      * GET USER'S ENTRY AND RESET STANDARD RESPONSE
      *
     C                   SELECT
      *
     C     *IN03         WHENEQ    *ON                                          F3-EXIT
     C                   MOVEL     '03'          RTNCD
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN05         WHENEQ    *ON                                          F5-REFRESH
     C     MODE          IFEQ      REVISE
     C                   MOVEL     YES           RESET
     C                   ENDIF
     C                   MOVEL     SET1          ROUTNE
      *
     C     *IN06         WHENEQ    *ON                                          F6-CREATE
     C                   MOVEL     CREATE        MODE
     C                   MOVEL     CREATE        DFMODE
     C                   MOVEL     SET1          ROUTNE
      *
     C     *IN12         WHENEQ    *ON                                          F12-PREVIOUS
     C     MODE          IFEQ      REVISE
     C                   MOVEL     '12'          RTNCD
     C                   MOVEL     EXIT          ROUTNE
     C                   ELSE
     C                   MOVEL     REVISE        MODE
     C                   MOVEL     REVISE        DFMODE
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C     *IN25         WHENEQ    *ON                                          F25-ROLLUP
     C                   EXSR      $LOAD1
     C                   MOVEL     SCRN1         ROUTNE
     C                   OTHER
      *
      * USER PRESSED 'ENTER'
      *
     C     MODE          IFEQ      REVISE                                       IF NOTHING
     C     HDRRN1        ANDEQ     0
     C                   MOVEL     EXIT          ROUTNE
     C                   ELSE
     C                   MOVEL     EDIT1         ROUTNE
     C                   ENDIF                                                  IF NOTHING
      *
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $EDIT1 - SUBROUTINE TO EDIT INPUT FIELDS FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $EDIT1        BEGSR
      *
      * CLEAR CALLED PROGRAM FLAG
      *
     C                   MOVEL     NO            CALFLG
      *
      *
      * FIRST, EDIT ALL THE SELECTIONS ENTERED BY THE USER IN THE
      * SUBFILE OPTION FIELD, TO SEE THAT VALID SELECTIONS WERE INPUT
      *
     C     MODE          IFEQ      REVISE
     C                   EXSR      $EDOP1
     C                   ENDIF
      *
      * IF THERE ARE NO ERRORS IN THE SUBFILE OPTION SELECTORS ENTERED
      * BY THE USER, THEN READ THE SELECTED SUBFILE RECORDS AND PROCESS
      *
     C     ERROR         IFEQ      0                                            IF NO ERROR
     C                   EXSR      $PROC1
     C                   ENDIF                                                  IF NO ERROR
      *
      * IF THERE ARE NO ERRORS,
      *    IF THE USER IS IN REVISE MODE, EXIT THE PROGRAM
      *    IF THE USER IS IN CREATE MODE, GO TO REVISE MODE
      *
     C     ERROR         IFEQ      0                                            IF STILL OK
      *
     C     MODE          IFEQ      CREATE                                       IF CREATE
     C                   MOVEL     REVISE        MODE
     C                   MOVEL     REVISE        DFMODE
     C                   MOVEL     SET1          ROUTNE
     C                   ELSE
      *
     C                   SELECT
     C     RTNCD         WHENEQ    '12'
     C                   Z-ADD     WKFLOW        HDPAG1
     C                   MOVEL     SCRN1         ROUTNE
      *
     C     RTNCD         WHENEQ    '03'
     C                   MOVEL     EXIT          ROUTNE
      *
     C     CALFLG        WHENEQ    YES
     C                   Z-ADD     WKFLOW        HDPAG1
     C                   MOVEL     SCRN1         ROUTNE
      *
     C     DELFLG        WHENEQ    YES                                          IF DELETED
     C                   MOVEL     NO            DELFLG
     C                   MOVEL     YES           RESET
     C                   MOVEL     SET1          ROUTNE
     C                   OTHER
      *
     C                   MOVEL     EXIT          ROUTNE
     C                   ENDSL
     C                   ENDIF                                                  IF CREATE
      *
     C                   ELSE
      *
      * IF THERE ARE SUBFILE ERRORS, SET THE SCREEN TO REDISPLAY
      *
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDIF                                                  IF STILL OK
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $CLR1  - SUBROUTINE TO CLEAR THE SUBFILE ON SCREEN 1
      *---------------------------------------------------------------
      *
     C     $CLR1         BEGSR
      *
     C                   Z-ADD     0             SVRRN1
      *
     C                   CLEAR                   HP132S1
     C                   SETON                                        83        SFLCLR
     C                   WRITE     HP132C1
     C                   SETOFF                                       818283
      *                                                    81=SFLDSP
      *                                                    82=SFLEND
      *                                                    83=SFLCLR
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $FRSH1 - SUBROUTINE TO FILL THE SUBFILE ON SCREEN 1
      *---------------------------------------------------------------
      *
     C     $FRSH1        BEGSR
      *
      * SET INDICATORS TO CONTROL DSPF DISPLAY
      *
     C     MODE          IFEQ      CREATE
     C                   SETON                                        61
     C                   ELSE
     C                   SETON                                        60
     C                   ENDIF
      *
      * SET POSITION IN DATABASE FILE HSL006B-REPORT CODES
      *
     C     C1CACD        SETLL     HSL006B
      *
      * THE FIELD 'RESET' IS A FLAG FIELD TO INDICATE WHETHER YOU ARE
      * ATTEMPTING TO REPOSITION THE USER CLOSE TO WHERE HE WAS IN THE
      * SUBFILE.
      * THE LOWEST SUBFILE RRN ON THE SCREEN FROM THE DSPF
      * FEEDBACK AREA (IDFLOW) WAS RETRIEVED EARLIER AND PUT IN WKFLOW.
      * ADD TO WKFLOW THE NUMBER OF LINES ON YOUR SUBFILE PAGE OR THE
      * NUMBER LESS 1 TO DETERMINE A SUBFILE RRN TO REPOSITION TO.
      * IF RESET IS 'NO', DON'T REPOSITION THE USER; JUST START OVER
      *
     C     RESET         IFEQ      YES
     C     WKFLOW        ADD       WKRLIN        MAXRRN
     C                   ELSE
     C                   Z-ADD     WKPLIN        MAXRRN
     C                   ENDIF
      *
      * LOAD THE SUBFILE UNTIL YOU HAVE THE REQUIRED NUMBER OF RECORDS
      * BY COMPARING THE HIDDEN RRN IN THE SUBFILE TO DESIRED MAXIMUM.
      * THE MAXIMUM WILL DEPEND ON WHETHER YOU ARE REPOSITIONING THE
      * SUBFILE OR NOT. STOP IF YOU GET TO THE END OF THE SUBFILE.
      *
     C     SVRRN1        DOUGE     MAXRRN
     C     *IN82         OREQ      *ON
     C                   EXSR      $LOAD1
     C                   ENDDO
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $LOAD1- SUBROUTINE TO LOAD THE SUBFILE ON SCREEN 1
      *---------------------------------------------------------------
      *
     C     $LOAD1        BEGSR
      *
     C                   Z-ADD     SVRRN1        HDRRN1
      *
      * SET THE COUNT OF RECORDS ON THE SUBFILE PAGE TO ZERO.
      * COUNT IS USED TO COUNT THE RECORDS WRITTEN TO THE SUBFILE.
      *
     C                   Z-ADD     0             COUNT             2 0
      *
      * FILL THE SUBFILE UNTIL THE END OF THE DATABASE FILE OR YOU
      * HAVE FILLED ALL THE LINES ON THE SUBFILE PAGE
      *
     C                   SETOFF                                       82
     C     *IN82         DOUEQ     *ON                                          DO FILL LOOP
     C     COUNT         ORGE      WKPLIN
      *
      * IF IN REVISE MODE, READ REPORT CODE RECORDS FOR THE REPORT
      * CATEGORY PASSED IN AS A PARM.
      *
     C     MODE          IFEQ      REVISE
     C     C1CACD        READE     HSL006B                                82
     C                   ENDIF
      *
     C     *IN82         IFEQ      *OFF                                          IF FOUND
      *
     C                   ADD       1             COUNT
     C                   ADD       1             HDRRN1
     C                   MOVE      *BLANK        DFACT
     C                   MOVE      *BLANK        DFOPT
      *
      * IF IN REVISE MODE, FILL SUBFILE FIELDS FROM DATABASE FILE
      *
     C     MODE          IFEQ      REVISE
     C                   MOVEL     RPRPCD        DFRPCD
     C                   MOVEL     RPRSDS        DFRSDS
     C                   MOVEL     RPRLDS        DFRLDS
     C                   MOVEL     RPUCFL        DFUCFL
     C                   MOVEL     RPUCFL        HDUCFL
     C                   Z-ADD     RPSEQ         DFSEQ
     C                   ELSE
      *
      * IF IN CREATE MODE, INITIALIZE SUBFILE FIELDS.
      *
     C                   MOVE      *BLANK        DFRPCD
     C                   MOVE      *BLANK        DFRSDS
     C                   MOVE      *BLANK        DFRLDS
     C                   MOVE      YES           DFUCFL
     C                   MOVE      YES           HDUCFL
     C                   Z-ADD     0             DFSEQ
     C                   ENDIF
      *
     C                   WRITE     HP132S1
     C                   SETON                                        81
      *
      * TO CONTROL THE PAGE OF THE SUBFILE TO DISPLAY, SET THE VALUE
      * FOR THE DSPF SFLRCDNBR FIELD TO BE EQUAL TO THE SFL HIDDEN RRN
      *
     C                   Z-ADD     HDRRN1        HDPAG1
      *
     C                   ENDIF                                                  IF FOUND
     C                   ENDDO                                                  DO FILL LOOP
      *
      * IF NO RECORDS WERE WRITTEN TO THE SUBFILE, THEN ISSUE
      * THE STANDARD ERROR MESSAGE OF NO DATA FOUND.
      *
     C     HDRRN1        IFEQ      0
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09002'     MGID(E)
     C                   ENDIF
     C                   ENDIF
      *
     C                   Z-ADD     HDRRN1        SVRRN1
      *
     C                   ENDSR
      /EJECT
      ****************************************************************
      * $RRN1  - ROUTINE TO FIND/RETRIEVE THE SUBFILE RECORD TO UPDATE
      *          WHEN RETURNING FROM A SELECT PROGRAM ON SCREEN 1
      ****************************************************************
      *
      * HDRR1 IS THE HIDDEN FIELD ASSOCIATED WITH THE KEYWORD SFLCSRRRN
      * ON THE CONTROL RECORD IN THE DSPF.
      * HDRRN1 IS THE VALUE ASSOCIATED WITH THE KEYWORD 'KSFILE' IN
      * THE F-SPECS FOR THE WORKSTATION.
      *
     C     $RRN1         BEGSR
      *
     C                   SETOFF                                       97
      *
     C     HDRR1         IFNE      0
     C                   Z-ADD     HDRR1         HDRRN1
     C     HDRRN1        CHAIN     HP132S1                            97
     C                   ENDIF
      *
     C                   ENDSR                                                                016
      /EJECT
      *---------------------------------------------------------------
      * $EDOP1 - SUBROUTINE TO READ CHANGED RECORDS IN SUBFILE AND
      *          EDIT FOR VALID SUBFILE OPTIONS ON SCREEN 1
      *---------------------------------------------------------------
      *
     C     $EDOP1        BEGSR
      *
      *
      * READ ALL THE CHANGED SUBFILE RECORDS EDITING FOR VALID SUBFILE
      * OPTIONS
      *
     C                   SETOFF                                       80
     C     *IN80         DOUEQ     *ON                                          DO READ C
     C                   READC     HP132S1                                80
     C     *IN80         IFEQ      *OFF                                         IF REC READ
      * SET ON MDT
     C                   SETON                                        85
      *
      * SET OFF ERROR INDICATOR FOR SUBFILE SELECTOR
      *
     C                   SETOFF                                       30
      *
      * CONVERT OPTION USER ENTERED TO STANDARD FORMAT. FOR EXAMPLE,
      * A ' 1', '01', AND '1 ' MUST BE STANDARDIZED TO ' 1'.
      *
     C     WKOPT2        IFEQ      *BLANK                                       IF 2 = BLANK
     C                   MOVE      WKOPT1        WKOPT2
     C                   MOVE      *BLANKS       WKOPT1
     C                   ENDIF                                                  IF 2 = BLANK
      *
     C     WKOPT1        IFEQ      *ZEROS                                       IF 1 IS ZERO
     C                   MOVE      *BLANKS       WKOPT1
     C                   ENDIF                                                  IF 1 IS ZERO
      *
      * TEST FOR VALID SUBFILE OPTION ENTRY ON ALL CHANGED RECORDS
      *
     C     DFOPT         IFNE      ' 4'
     C     DFOPT         ANDNE     '  '
     C                   SETON                                        30
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09006'     MGID(E)
     C                   ENDIF
     C                   EXSR      $ERR1
     C                   ENDIF
      *
     C                   UPDATE    HP132S1
      *
      * SET OFF ERROR INDICATOR FOR SUBFILE SELECTOR
      *
     C                   SETOFF                                       30
     C                   ENDIF                                                  IF REC READ
     C                   ENDDO                                                  DO READ C
      * RESET MDT
     C                   SETOFF                                       85
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $PROC1 - SUBROUTINE TO READ AND EDIT CHANGED SUBFILE RECORDS
      *          ON SCREEN 1
      *---------------------------------------------------------------
      *
     C     $PROC1        BEGSR
      *
     C                   MOVEL     '00'          RTNCD
      *
      * READ ALL THE CHANGED SUBFILE RECORDS PROCESSING THE SUBFILE
      * SELECTION
      *
     C                   SETOFF                                       80
     C     *IN80         DOUEQ     *ON                                          DO PROCESS
     C                   READC     HP132S1                                80
     C     *IN80         IFEQ      *OFF                                         IF REC READ
      *
      * SETON MDT
     C                   SETON                                        85
      *
      * SET OFF THE ERROR INDICATORS
      *
     C                   SETOFF                                       303132
     C                   SETOFF                                       3335
      *
     C     RTNCD         IFEQ      '00'
     C                   MOVEL     NO            ERRFLG
      *
      * WHEN IN CREATE MODE,
      * ONLY EDIT REPORT CODE IF THE USER HAS ENTERED A CODE OR
      * A SHORT OR LONG DESCRIPTION
      *
     C     MODE          IFEQ      CREATE                                       IF CREATE
     C     DFRPCD        IFNE      *BLANK                                       IF ENTRY
     C     DFRSDS        ORNE      *BLANK
     C     DFRLDS        ORNE      *BLANK
     C                   EXSR      $EDCR1
     C                   ENDIF                                                  IF ENTRY
     C                   ENDIF                                                  IF CREATE
      *
      * WHEN IN REVISE MODE
      *
     C     MODE          IFEQ      REVISE                                       IF REVISE
     C                   EXSR      $EDRV1
     C                   ENDIF                                                  IF REVISE
      *
      * NOW, IF THE USER HAS ENTERED A SUBFILE OPTION, GO PERFORM
      * THAT PROCESSING IF THERE ARE NO ERRORS.
      *
     C                   MOVEL     NO            CALFLG
      *
      *  IF THERE WERE NO ERRORS, SET THE SFLNXTCHG INDICATOR OFF SO
      *  THAT THE PROGRAM WILL NOT REPROCESS THE SUBFILE RECORD.
      *  REWRITE THE SUBFILE RECORD.
      *
     C     ERRFLG        IFEQ      NO
     C                   SETOFF                                       85
     C                   ENDIF
     C                   ENDIF                                                  RTNCD = 00
      *
     C                   UPDATE    HP132S1
      *
      * SET OFF THE ERROR INDICATORS
      *
     C                   SETOFF                                       303132
     C                   SETOFF                                       3335
      *
     C                   ENDIF                                                  IF REC READ
     C                   ENDDO                                                  DO PROCESS
      * SET MDT
     C                   SETOFF                                       85
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $EDCR1 - SUBROUTINE TO EDIT/WRITE RECORDS TO DATABASE FILE
      *          FROM SCREEN 1
      *----------------------------------------------------------------
      *
     C     $EDCR1        BEGSR
      *
      * IF REPORT CODE IS BLANK, ISSUE ERROR.
      *
     C     DFRPCD        IFEQ      *BLANK                                       IF BLANK
     C                   SETON                                        31
     C                   MOVEL     YES           ERRFLG
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
     C                   EXSR      $ERR1
     C                   ELSE
      *
      *  CHECK TO SEE IF THIS REPORT CODE ALREADY EXISTS
      *
     C     DFRPCD        CHAIN(N)  HSP006                             94
     C     *IN94         IFEQ      *OFF                                         IF FOUND
     C                   SETON                                        31
     C                   MOVEL     YES           ERRFLG
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00166'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFRPCD        MGW(1)
     C                   MOVEA     RPCACD        MGW(6)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   EXSR      $ERR1
     C                   ENDIF                                                  IF FOUND
      *
      * PERFORM EDITS COMMON TO BOTH THE CREATE AND REVISE MODES
      *
     C                   EXSR      $EDAL1
      *
      * WHEN A RECORD IS CREATED, THE CONSTANT '*CREATED' IS MOVED TO
      * A SUBFILE FIELD.  THIS IS DONE SO THAT IF SOME SUBFILE
      * RECORDS HAVE ERRORS AND THE SCREEN IS REDISPLAYED WITH ERROR
      * MESSAGES, THE USER WILL KNOW THAT THIS RECORD HAS BEEN CREATED
      * SUCCESSFULLY.  SETTING ON *IN62 WILL PROTECT THE FIELD.
      *
     C     ERRFLG        IFEQ      NO                                           IF NO ERROR
     C                   MOVEL     DFRPCD        RPRPCD
     C                   MOVEL     C1CACD        RPCACD
     C                   MOVEL     DFRSDS        RPRSDS
     C                   MOVEL     DFRLDS        RPRLDS
     C                   MOVEL     YES           RPUCFL
     C                   MOVE      *BLANK        RPOIFL
     C                   Z-ADD     DFSEQ         RPSEQ
     C                   WRITE     RPREC
      *
     C                   MOVEL     '*CREATED'    DFACT
     C                   SETON                                        62
     C                   ENDIF                                                  IF NO ERROR
     C                   ENDIF                                                  IF BLANK
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $EDRV1 - SUBROUTINE TO EDIT/UPDATE/DELETE A DATABASE RECORD
      *          FROM SCREEN 1
      *----------------------------------------------------------------
      *
     C     $EDRV1        BEGSR
      *
      * IF THE USER IS DELETING,
      *   PERFORM DELETION INTEGRITY CHECKS
      *
     C     DFOPT         IFEQ      ' 4'                                         IF DELETE
     C                   EXSR      $DLTCK
     C                   ENDIF                                                  IF DELETE
      *
      * IF THE USER IS NOT DELETING THE RECORD, THEN
      * PERFORM EDITS COMMON TO BOTH THE CREATE AND REVISE MODES
      *
     C     DFOPT         IFNE      ' 4'
     C                   EXSR      $EDAL1
     C                   ENDIF
      *
      * RETRIEVE RECORD AND LOCK BEFORE UPDATE/DELETE
      *
     C     ERRFLG        IFEQ      NO                                           IF NO ERROR
     C     DFRPCD        CHAIN     HSP006                             94
      *
      * IN REVISE MODE THE USER MAY HAVE TAKEN SUBFILE OPTION 4 TO
      * DELETE A RECORD OR HE MAY HAVE CHANGED THE SHORT & LONG REPORT
      * NAMES, THE OPERATIONAL FLAG, AND THE CATEGORY SEQUENCE.
      *
      * WHEN A RECORD IS DELETED, THE CONSTANT '*DELETED' IS MOVED TO
      * THE SUBFILE FIELD.  THIS IS DONE SO THAT IF SOME SUBFILE
      * RECORDS HAVE ERRORS AND THE SCREEN IS REDISPLAYED WITH ERROR
      * MESSAGES, THE USER WILL KNOW THAT THIS RECORD HAS BEEN DELETED
      * SUCCESSFULLY.  *IN62 WILL PROTECT THE FIELDS.
      *
     C     *IN94         IFEQ      *OFF                                         IF FOUND
     C     DFOPT         IFEQ      ' 4'                                         IF DEL
     C                   MOVEL     YES           DELFLG
     C                   DELETE    RPREC
      *
     C                   MOVEL     *BLANKS       DFOPT
     C                   MOVEL     '*DELETED'    DFACT
     C                   SETON                                        62
     C                   ELSE
      * NOT DELETING
     C                   MOVEL     DFRSDS        RPRSDS
     C                   MOVEL     DFRLDS        RPRLDS
     C                   MOVE      *BLANK        RPOIFL
     C                   Z-ADD     DFSEQ         RPSEQ
     C                   UPDATE    RPREC
     C                   ENDIF                                                  IF DEL
     C                   ELSE
      *
      * THE RECORD HAS BEEN DELETED SINCE THIS PROGRAM RETRIEVED IT,
      * SO ISSUE THE STANDARD ERROR MESSAGE.
      *
     C     DFOPT         IFEQ      *BLANK
     C                   SETON                                        31
     C                   ELSE
     C                   SETON                                        30
     C                   ENDIF
      *
     C                   MOVEL     YES           ERRFLG
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09008'     MGID(E)
     C                   ENDIF
     C                   EXSR      $ERR1
     C                   ENDIF                                                  IF FOUND
     C                   ENDIF                                                  IF NO ERROR
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $DLTCK - DELETION INTEGRITY CHECKS
      *---------------------------------------------------------------
      *
     C     $DLTCK        BEGSR
      *
      * THE REPORT CODE CANNOT HAVE BEEN USED ON ANY CLOSED
      * HOG GROUP RECORD.
      *
     C     DFRPCD        CHAIN     HSL033A                            96
     C     *IN96         IFEQ      *OFF                                         IF FOUND
     C                   SETON                                        30
     C                   MOVEL     YES           ERRFLG
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00179'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFRPCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   EXSR      $ERR1
     C                   ENDIF                                                  IF FOUND
      *
      * THE REPORT CODE CANNOT HAVE BEEN USED ON ANY
      * DEDUCTION/ADD-ON RECORD.
      *
     C     DFRPCD        CHAIN     HSL044A                            96
     C     *IN96         IFEQ      *OFF                                         IF FOUND
     C                   SETON                                        30
     C                   MOVEL     YES           ERRFLG
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00192'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFRPCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   EXSR      $ERR1
     C                   ENDIF                                                  IF FOUND
      *
      * THE REPORT CODE CANNOT HAVE BEEN USED ON ANY
      * PREMIUM/DISCOUNT RECORD.
      *
     C     DFRPCD        CHAIN     HSL045A                            96
     C     *IN96         IFEQ      *OFF                                         IF FOUND
     C                   SETON                                        30
     C                   MOVEL     YES           ERRFLG
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00194'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFRPCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   EXSR      $ERR1
     C                   ENDIF                                                  IF FOUND
      *
      *
      * THE REPORT CODE CANNOT HAVE BEEN USED ON ANY
      * EXPENSE TICKET RECORD.
      *
     C     DFRPCD        CHAIN     HSL048E                            96
     C     *IN96         IFEQ      *OFF                                         IF FOUND
     C                   SETON                                        30
     C                   MOVEL     YES           ERRFLG
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00503'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFRPCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   EXSR      $ERR1
     C                   ENDIF                                                  IF FOUND
      *
      * THE REPORT CODE CANNOT HAVE BEEN USED ON ANY
      * EXPENSE CODE RECORD.
      *
     C     DFRPCD        CHAIN     HSL052C                            96
     C     *IN96         IFEQ      *OFF                                         IF FOUND
     C                   SETON                                        30
     C                   MOVEL     YES           ERRFLG
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00504'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFRPCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   EXSR      $ERR1
     C                   ENDIF                                                  IF FOUND
      *
      * THE REPORT CODE CANNOT HAVE BEEN USED ON ANY
      * SALES TYPE REPORT CODE RECORD.
      *
     C     DFRPCD        CHAIN     HSL079B                            96
     C     *IN96         IFEQ      *OFF                                         IF FOUND
     C                   SETON                                        30
     C                   MOVEL     YES           ERRFLG
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00505'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFRPCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   EXSR      $ERR1
     C                   ENDIF                                                  IF FOUND
      *
      * A REPORT CODE CAN ONLY BE DELETED BY THE USER IF IT IS
      * 'USER CONTROLLED'.
      *
     C     HDUCFL        IFEQ      NO                                           IF NOT USER
     C                   SETON                                        30
     C                   MOVEL     YES           ERRFLG
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00167'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFRPCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   EXSR      $ERR1
     C                   ENDIF                                                  IF NOT USER
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $EDAL1 - SUBROUTINE TO PERFORM EDITS THAT ARE COMMON TO BOTH
      *          THE CREATE MODE AND THE REVISE MODE
      *---------------------------------------------------------------
      *
     C     $EDAL1        BEGSR
      *
      * REPORT CODE SHORT DESCRIPTION IS REQUIRED.
      *
     C     DFRSDS        IFEQ      *BLANK                                       IF NO DESC
     C                   SETON                                        32
     C                   MOVEL     YES           ERRFLG
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
     C                   EXSR      $ERR1
     C                   ENDIF                                                  IF NO DESC
      *
      * REPORT CODE LONG DESCRIPTION IS REQUIRED.
      *
     C     DFRLDS        IFEQ      *BLANK                                       IF NO DESC
     C                   SETON                                        33
     C                   MOVEL     YES           ERRFLG
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
     C                   EXSR      $ERR1
     C                   ENDIF                                                  IF NO DESC
      *
      * CATEGORY SEQUENCE IS REQUIRED AND CANNOT BE A NEGATIVE VALUE.
      *
     C     DFSEQ         IFEQ      0                                            IF NO SEQ
     C                   SETON                                        35
     C                   MOVEL     YES           ERRFLG
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
     C                   EXSR      $ERR1
     C                   ELSE
      *
     C     DFSEQ         IFLT      0                                            IF NEG
     C                   SETON                                        35
     C                   MOVEL     YES           ERRFLG
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09000'     MGID(E)
     C                   ENDIF
     C                   EXSR      $ERR1
     C                   ENDIF                                                  IF NEG
     C                   ENDIF                                                  IF NO SEQ
      *
     C                   ENDSR
      *
      /EJECT
      *---------------------------------------------------------------
      * $ERR1  - SUBROUTINE TO SET THE SUBFILE TO REDISPLAY AT
      *          THE FIRST SCREEN THAT HAS ERRORS
      *---------------------------------------------------------------
      *
     C     $ERR1         BEGSR
      *
     C     ERROR         IFEQ      1
     C                   Z-ADD     HDRRN1        HDPAG1
     C                   ENDIF
      *
     C                   ENDSR
      *
      *---------------------------------------------------------------
      * $EXIT - SUBROUTINE TO SET ON LR AND END JOB
      *---------------------------------------------------------------
      *
     C     $EXIT         BEGSR
     C                   SETON                                        LR
     C                   ENDSR
      *
      *---------------------------------------------------------------
      * $WRMSG - SUBROUTINE TO WRITE ERROR MESSAGES
      *---------------------------------------------------------------
      *
     C     $WRMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM                    MGID
     C                   PARM                    MGDT
     C                   PARM                    ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $CLMSG - SUBROUTINE TO CLEAR MESSAGES
      *----------------------------------------------------------------
     C     $CLMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM      *BLANKS       MGI
     C                   PARM      *BLANKS       MGD
     C                   PARM      *ZEROS        ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * *INZSR - INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      * PARM LISTS
      *
     C     *ENTRY        PLIST
     C                   PARM                    C1CACD
     C                   PARM                    C1CADS
     C                   PARM                    RTNCD
      *
      * GLOBAL DEFINES
      *
     C                   MOVE      *BLANK        PGM              10            USED IN MSG
     C                   MOVE      *BLANK        MSGFL            10            USED IN MSG
     C                   MOVE      *BLANK        ROUTNE            6            ROUTINE
     C                   Z-ADD     0             MAXRRN            4 0          REPOSITION
     C                   MOVEL     NO            RESET             1            REPOSITION
     C                   MOVEL     NO            ERRFLG            1
     C                   MOVEL     NO            NOTFLG            1
     C                   MOVEL     NO            CALFLG            1
     C                   MOVEL     NO            DELFLG            1
     C                   MOVEL     '00'          RTNCD             2            RETURN CODE
     C     *LIKE         DEFINE    DFMODE        MODE                           SFL POSITION
     C     *LIKE         DEFINE    IDFLOW        WKFLOW                         SFL POSITION
     C     *LIKE         DEFINE    HDRRN1        SVRRN1
      *
      * TO SUPPORT F5-REFRESH, LOGIC REQUIRES THE NUMBER OF LINES ON
      * THE SUBFILE PAGE AND ALSO THE NUMBER OF LINES LESS 1.  BY
      * SETTING THESE VALUES UP AS CONSTANT WORK FIELDS, THE PROCESSING
      * LOGIC CAN BE STANDARDIZED BETWEEN PROGRAMS.
      *
     C                   Z-ADD     12            WKPLIN            2 0          SFLPAG(0012)
     C     WKPLIN        SUB       1             WKRLIN            2 0          SFLPAG - 1
      *
      * ALWAYS BRING THE SCREEN UP IN REVISE MODE--EVEN IF THERE ARE
      * NOT ANY RECORDS TO REVISE.
      *
     C                   MOVEL     REVISE        MODE
     C                   MOVEL     REVISE        DFMODE
     C                   SETON                                        62
      *
      * THE FOLLOWING STANDARD CODE MUST BE INCLUDED TO MAKE THE
      * STANDARD ERROR MESSAGE HANDLING PROGRAM FUNCTION PROPERLY.
      * THIS CODE SETS AND CLEARS THE PROGRAM MESSAGE QUEUE.
      *
     C                   Z-ADD     20            MAXMSG            2 0
     C                   MOVEL     '*'           MSGPGM                         SET QUEUE
     C                   EXSR      $CLMSG                                       CLEAR MSG
      *
     C                   ENDSR
      /EJECT
