// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for OMDZPFR
// ?Date: 14.08.2025 Time: 12:03:09
// ?------------------------------------------------------------------------------------------------

//?USER: Print required level headings

// SUPPRESSED PRINT Accounting Company Number header format

//?USER: On print of detail format

CASE;

// IF PAR.Manifest Type STS is Summary
IF PAR.Manifest_Type_STS = 'CS'/'SS';

// CUR.Text USR 7 = CON.SUMMARY
CUR.Text_USR_7 = 'SUMMARY';

// IF PAR.Manifest Type STS is Detail
IF PAR.Manifest_Type_STS = 'CD'/'SD';

// CUR.Text USR 7 = CON.DETAIL
CUR.Text_USR_7 = 'DETAIL';

ENDIF;

EXECUTE FUNCTION(RTV for B.O.L.         RT) TYPE(RTVOBJ) FILE(OMFJCPP)          AC1376991;
PARAMETER(CUR.Load_ID);
PARAMETER(WRK.Reefer_Temperature);
PARAMETER(CUR.Seal_1);
PARAMETER(CUR.Seal_2);
PARAMETER(CUR.Seal_3);
PARAMETER(WRK.Total_Stops);
PARAMETER(WRK.Trailer_Id);
PARAMETER(WRK.BOL_Time);
PARAMETER(WRK.Number_Pallets_Received);
PARAMETER(WRK.Number_Pallets_Loaded);
PARAMETER(WRK.Load_Carrier_Pay_Amt);
PARAMETER(WRK.Product_Temperature);
PARAMETER(WRK.Number_Spacers_Loaded);
PARAMETER(WRK.Car_Veh_Initials);
PARAMETER(WRK.Recorder_ID);
PARAMETER(WRK.Shipping_Method);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Co Address & Phone RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1203423;
PARAMETER(CUR.Company_Number);
PARAMETER(WRK.Name);
PARAMETER(WRK.Address_Line_1);
PARAMETER(WRK.Address_Line_2);
PARAMETER(WRK.Address_Line_3);
PARAMETER(WRK.City);
PARAMETER(WRK.Zip_Postal_Code);
PARAMETER(CUR.USR_Telephone_Code);
PARAMETER(WRK.State);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// WRK.State = WRK.State Code
WRK.State = WRK.State_Code;

// Execute function CLC Compress Name/Addr US.
EXECUTE FUNCTION(CLC Compress Name/Addr US) TYPE(EXCUSRSRC) ('PDRWUFR');
PARAMETER(WRK.Ship_To_Name);
PARAMETER(WRK.Ship_To_Address_Line_1);
PARAMETER(WRK.Ship_To_Address_Line_2);
PARAMETER(WRK.Ship_To_Address_Line_3);
PARAMETER(WRK.Ship_To_City);
PARAMETER(WRK.State);
PARAMETER(WRK.Ship_To_Zip_Postal_Code);
PARAMETER(CUR.USR_Compressed_Address_1);
PARAMETER(CUR.USR_Compressed_Address_2);
PARAMETER(CUR.USR_Compressed_Address_3);
PARAMETER(CUR.USR_Compressed_Address_4);
PARAMETER(WRK.USR_Compressed_Address_5);
{
 * Use this function to compress name/address information
 *
 E                    UAD         5 34               Name/Address
 *
 C                     MOVEL#IADTX    UADTX            Name
 C                     MOVEL#IACNA    UACNA            Address 1
 C                     MOVEL#IADNA    UADNA            Address 2
 C                     MOVEL#IAENA    UAENA            Address 3
 C                     MOVEL#IAJNA    UAJNA            City
 C                     MOVEL#IEINA    UEINA            State
 C                     MOVEL#IBTTX    UBTTX            Zip
 C                     EXSR UJ1UF
 C                     MOVELUAD,1     #OEJNA
 C                     MOVELUAD,2     #OEKNA
 C                     MOVELUAD,3     #OELNA
 C                     MOVELUAD,4     #OEMNA
 C                     MOVELUAD,5     #OENNA
 C           UJ1UF     BEGSR
 *=============================================================
 * UJ1UF - COMPRESS NAME/ADDRESS INFORMATION
 *=============================================================
 *
 C           *LIKE     DEFN #IADTX    UADTX
 C           *LIKE     DEFN #IACNA    UACNA
 C           *LIKE     DEFN #IADNA    UADNA
 C           *LIKE     DEFN #IAENA    UAENA
 C           *LIKE     DEFN #IAJNA    UAJNA
 C           *LIKE     DEFN #IEINA    UEINA
 C           *LIKE     DEFN #IBTTX    UBTTX - 1
 * CLEAR OUTPUT ARRAY
 C                     MOVE *BLANK    UAD
 C                     Z-ADD1         UX      20
 C                     MOVELUADTX     UAD,UX
 C                     ADD  1         UX
 C           UACNA     IFNE *BLANK
 C                     MOVELUACNA     UAD,UX
 C                     ADD  1         UX
 C                     END
 C           UADNA     IFNE *BLANK
 C                     MOVELUADNA     UAD,UX
 C                     ADD  1         UX
 C                     END
 C           UAENA     IFNE *BLANK
 C                     MOVELUAENA     UAD,UX
 C                     ADD  1         UX
 C                     END
 C                     MOVE *BLANK    UCSTZ  34
 C                     MOVELUAJNA     UCST   23
 C                     MOVE UEINA     UCST
 C                     MOVELUCST      UCSTZ
 C                     MOVE UBTTX     UCSTZ
 C                     MOVELUCSTZ     UAD,UX
 *============================================================
 C                     ENDSR
}


// CUR.USR Date - ATR = JOB.*Job date
CUR.USR_Date_ATR = JOB.*Job_date;

// CUR.USR Time = JOB.*Job time
CUR.USR_Time = JOB.*Job_time;

//?Check for Export - OMS228 - S.Schertz - 4/14/97
//?If live w/tpm rtv export info from OHE, else rtv from Ld Hdr  E004119
//?If Export replace address information with Sail Port information.
CASE;

// IF DB1.Export Status is yes
IF DB1.Export_Status = 'Y';

EXECUTE FUNCTION(RTV PFS Export Inst    RT) TYPE(RTVOBJ) FILE(PMAMREP)          AC1814730;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Order_Number);
PARAMETER(CUR.Load_ID);
PARAMETER(WRK.Stop_Drop_Sequence_Number);
PARAMETER(PAR.Shipping_Line);
PARAMETER(PAR.Port_Delv_Terminal);
PARAMETER(LCL.OHE_City);
PARAMETER(LCL.OHE_Vessel_Airline);
PARAMETER(LCL.OHE_Voyage_Flight);
PARAMETER(LCL.OHE_Booking_Number);
PARAMETER(LCL.OHE_Discharge_Port_Airprt);
PARAMETER(LCL.OHE_Sail_Flight_Date);
PARAMETER(LCL.OHE_Port_Cut_Date);
PARAMETER(LCL.OHE_Arrival_Date);
PARAMETER(LCL.OHE_Late_Delivery_Code);
PARAMETER(LCL.OHE_Ship_Status);
PARAMETER(LCL.OHE_Container_Number);
PARAMETER(LCL.OHE_Comment_1);
PARAMETER(LCL.OHE_Comment_2);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


CASE;

// IF PAR.Port Delv Terminal is Entered
IF PAR.Port_Delv_Terminal <> *BLANK;

// CUR.Ship To Address Line 1 = CND.Blank
CUR.Ship_To_Address_Line_1 = *BLANK;

// CUR.Ship To Address Line 2 = CND.Blank
CUR.Ship_To_Address_Line_2 = *BLANK;

EXECUTE FUNCTION(RTV Shipping Line/PortsRT) TYPE(RTVOBJ) FILE(PDLCREP)          AC1447742;
PARAMETER(PAR.Shipping_Line);
PARAMETER(PAR.Port_Delv_Terminal);
PARAMETER(CUR.Ship_To_City);
PARAMETER(CUR.Ship_To_Address_Line_1);
PARAMETER(CUR.Ship_To_Address_Line_2);
PARAMETER(CUR.Ship_To_State_Code);
PARAMETER(CUR.Ship_To_Zip_Postal_Code);
PARAMETER(WRK.Port_Phone_Number);
PARAMETER(WRK.Port_Fax_Number);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PGM.*Return code = CND.*Record already exists
 PGM.*Return_code = 'Y2U0003';

}


ENDIF;

ENDIF;

//?PRTOBJ calls after print of detail format

//?Embedded PRTOBJ : PRT Bill of Lading Dtl PO
EXECUTE FUNCTION(PRT Manifest CUST     PO) TYPE(PRTOBJ);
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Order_Number);
PARAMETER(*ZERO);
PARAMETER(PAR.Manifest_Type_STS);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PGM.*Return code = CND.*Record already exists
 PGM.*Return_code = 'Y2U0003';

}


//?USER: Print required level totals

// SUPPRESSED PRINT Accounting Company Number totals format

