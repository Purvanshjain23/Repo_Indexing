// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PLCCPVR
// ?Date: 14.08.2025 Time: 02:53:46
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?MODIFICATIONS
//?11/02/2020 ISE H16853 - CHANGE BUY ORDER NUMBER FIELD LENGTH FROM 5 TO 7
EXECUTE FUNCTION(Val Appl/User Only    IF) TYPE(EXCINTFUN)                      AB1191075;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(WRK.CC_Company_Number);
PARAMETER('HPE');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 ENDIF;

}


//?USER: User defined action

CASE;

// IF DTL.DSD Delivery Date is Entered
IF DTL.DSD_Delivery_Date <> *ZERO;

// AND DTL.DSD Delivery Time is Entered
AND DTL.DSD_Delivery_Time <> *ZERO;

EXECUTE FUNCTION(Rtv Next Seq Num      RT) TYPE(RTVOBJ) FILE(PLAECPP)           AB1248408;
PARAMETER(DTL.CC_Company_Number);
PARAMETER(DTL.DSH_Kill_Date);
PARAMETER(DTL.DSD_Delivery_Date);
PARAMETER(DTL.DSD_Delivery_Time);
PARAMETER(DTL.DSD_Delivery_Time_Seq);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PAR.DSD Delivery Time Seq = CON.1
 PAR.DSD_Delivery_Time_Seq = 1;

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PAR.DSD Delivery Time Seq = DB1.DSD Delivery Time Seq + CON.1
 PAR.DSD_Delivery_Time_Seq = DB1.DSD_Delivery_Time_Seq + 1;

 QUIT;

}


CASE;

// IF DTL.DSD Delivery Time Seq is EQ One
IF DTL.DSD_Delivery_Time_Seq = 1;

EXECUTE FUNCTION(Rtv Closest Time      RT) TYPE(RTVOBJ) FILE(PLAECPP)           AB1248453;
PARAMETER(DTL.CC_Company_Number);
PARAMETER(DTL.DSH_Kill_Date);
PARAMETER(DTL.DSD_Delivery_Date);
PARAMETER(DTL.DSD_Delivery_Time);
PARAMETER(DTL.DSD_Receiving_Shift);
PARAMETER(DTL.DSD_Kill_Shift);
PARAMETER(DTL.DSD_BOL_Kill_Shift);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


ENDIF;

// DTL.DSD Scheduled Hour = DTL.DSD Delivery Time / CON.100 *
DTL.DSD_Scheduled_Hour = DTL.DSD_Delivery_Time / 100;

EXECUTE FUNCTION(Crt Delv Sched Dtl    CR) TYPE(CRTOBJ) FILE(PLAECPP)           AB1244727;
PARAMETER(DTL.CC_Company_Number);
PARAMETER(DTL.DSH_Kill_Date);
PARAMETER(DTL.DSD_Delivery_Date);
PARAMETER(DTL.DSD_Delivery_Time);
PARAMETER(DTL.DSD_Delivery_Time_Seq);
PARAMETER(DTL.DSD_Scheduled_Hour);
PARAMETER(*ZERO);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(DTL.CHR_Code);
PARAMETER(*BLANK);
PARAMETER('F');
PARAMETER(*ZERO);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER('N');
PARAMETER(WRK.Blank_USR);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(DTL.DSD_Receiving_Shift);
PARAMETER(DTL.DSD_Kill_Shift);
PARAMETER(DTL.DSD_BOL_Kill_Shift);
PARAMETER('N');
PARAMETER('N');
PARAMETER('O');
PARAMETER(WRK.Blank_USR);
PARAMETER(DTL.DSD_Transfer_Sts);
PARAMETER(DTL.DSD_Unused_Date);
PARAMETER(DTL.DSD_Unused_Time);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(DTL.DSD_PRD_Srv_Sched_ID);
PARAMETER(DTL.DSD_Ref_1);
PARAMETER(DTL.DSD_Ref_2);
PARAMETER(DTL.DSD_Ref_Status);
PARAMETER(*BLANK);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER('A');
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?Execute internal function

  // PAR.RS Record Status = CND.Active
  PAR.RS_Record_Status = 'A';

  // PAR.RS User Added = JOB.*USER
  PAR.RS_User_Added = JOB.*USER;

  // PAR.RS Date Added = JOB.*Job date
  PAR.RS_Date_Added = JOB.*Job_date;

  // PAR.RS Time Added = JOB.*Job time
  PAR.RS_Time_Added = JOB.*Job_time;

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

 }

}


ENDIF;

