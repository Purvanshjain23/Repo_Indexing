// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PBDFPFR
// ?Date: 14.08.2025 Time: 12:03:24
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('OMS');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


//?USER: Record selection processing

//?** Don't select inactive or deleted records
CASE;

// IF DB1.Record Status is Inactive/Delete
IF DB1.Record_Status = 'D'/'I';

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?** Select by start date
CASE;

// IF PAR.Price Start Date is Entered
IF PAR.Price_Start_Date > *ZERO;

CASE;

// IF DB1.Price Start Date LT PAR.Price Start Date
IF DB1.Price_Start_Date < PAR.Price_Start_Date;

// OR DB1.Price Start Date GT PAR.Price End Date
OR DB1.Price_Start_Date > PAR.Price_End_Date;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

// WRK.*Record selected = CND.*NO
WRK.*Record_selected = 'N';

//?** Select by up to 5 users
CASE;

// IF PAR.Entered by User NE WRK.Blank for 12          USR
IF PAR.Entered_by_User <> WRK.Blank_for_12_USR;

CASE;

// IF DB1.Entered by User EQ PAR.Entered by User
IF DB1.Entered_by_User = PAR.Entered_by_User;

// WRK.*Record selected = CND.*YES
WRK.*Record_selected = 'Y';

ENDIF;

//?** Select by up to 5 users
// IF PAR.Entered by User 2 NE WRK.Blank for 12          USR
IF PAR.Entered_by_User_2 <> WRK.Blank_for_12_USR;

CASE;

// IF DB1.Entered by User EQ PAR.Entered by User 2
IF DB1.Entered_by_User = PAR.Entered_by_User_2;

// WRK.*Record selected = CND.*YES
WRK.*Record_selected = 'Y';

ENDIF;

//?** Select by up to 5 users
// IF PAR.Entered by User 3 NE WRK.Blank for 12          USR
IF PAR.Entered_by_User_3 <> WRK.Blank_for_12_USR;

CASE;

// IF DB1.Entered by User EQ PAR.Entered by User 3
IF DB1.Entered_by_User = PAR.Entered_by_User_3;

// WRK.*Record selected = CND.*YES
WRK.*Record_selected = 'Y';

ENDIF;

//?** Select by up to 5 users
// IF PAR.Entered by User 4 NE WRK.Blank for 12          USR
IF PAR.Entered_by_User_4 <> WRK.Blank_for_12_USR;

CASE;

// IF DB1.Entered by User EQ PAR.Entered by User 4
IF DB1.Entered_by_User = PAR.Entered_by_User_4;

// WRK.*Record selected = CND.*YES
WRK.*Record_selected = 'Y';

ENDIF;

//?** Select by up to 5 users
// IF PAR.Entered by User 5 NE WRK.Blank for 12          USR
IF PAR.Entered_by_User_5 <> WRK.Blank_for_12_USR;

CASE;

// IF DB1.Entered by User EQ PAR.Entered by User 5
IF DB1.Entered_by_User = PAR.Entered_by_User_5;

// WRK.*Record selected = CND.*YES
WRK.*Record_selected = 'Y';

ENDIF;

ENDIF;

//?** Select if any passed in users match the database user
CASE;

// IF WRK.*Record selected is *NO
IF WRK.*Record_selected = 'N';

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?USER: Print required level headings

// SUPPRESSED PRINT Ship To Name header format

CASE;

IF NEW Price_Code;
// Print Price Code header format
PRINT Price Code header format;

ENDIF;

//?USER: Print required level totals

// SUPPRESSED PRINT Price Code totals format

CASE;

IF NEW Ship_To_Name;
// Print Ship To Name totals format
PRINT Ship To Name totals format;

ENDIF;

