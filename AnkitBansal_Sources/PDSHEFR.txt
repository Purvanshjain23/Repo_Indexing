// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDSHEFR
// ?Date: 14.08.2025 Time: 03:32:55
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Set Inter. Access  IF) TYPE(EXCINTFUN)                     AC1144606;
PARAMETER('P/S');
PARAMETER(WRK.Company_Number);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(WRK.Allow_Multi_Company);
PARAMETER(WRK.Default_Printer);
PARAMETER(WRK.Salesperson_Code);

// WRK.First Time Flag = CND.Yes
WRK.First_Time_Flag = 'Y';

// PAR.Chilling Time USR = CON.*ZERO
PAR.Chilling_Time_USR = *ZERO;

// Call program ZZWW Substitutions ArraXF.
CALL PROGRAM(ZZWW Substitutions ArraXF) ('PDSIXFR');
PARAMETER('DA');
PARAMETER(CTL.Company_Number);
PARAMETER(CTL.Item_Code);
PARAMETER(CTL.Warehouse_Code);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(WRK.BLANK);
PARAMETER(*MISSING);
PARAMETER(*MISSING);
PARAMETER(*MISSING);
PARAMETER(*ZERO);
PARAMETER(PAR.Chilling_Time_USR);

//?USER: Initialize subfile header

//?First time initialization
CASE;

// IF WRK.First Time Flag is Yes
IF WRK.First_Time_Flag = 'Y';

MOVE *ALL (To: CTL From: PAR);

// WRK.First Time Flag = CND.NO
WRK.First_Time_Flag = 'N';

ENDIF;

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(CTL.Company_Number);
PARAMETER(CTL.Company_Name);

EXECUTE FUNCTION(RTV Whse Descrip       RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1257603;
PARAMETER(CTL.Warehouse_Code);
PARAMETER(CTL.Warehouse_Description);

EXECUTE FUNCTION(Rtv Descriptions      RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1140665;
PARAMETER(CTL.Company_Number);
PARAMETER(CTL.Item_Code);
PARAMETER(CTL.Item_Description);
PARAMETER(WRK.Description_Line_Two);
PARAMETER(WRK.UOM_Primary);
PARAMETER(WRK.UOM_Second);
PARAMETER(WRK.UOM_Third);

// PAR.Warehouse Code = CTL.Warehouse Code
PAR.Warehouse_Code = CTL.Warehouse_Code;

// PAR.Item Code = CTL.Item Code
PAR.Item_Code = CTL.Item_Code;

SET CURSOR;

//?USER: Validate subfile control

//?Select Warehouse
CASE;

// IF CTL.*CMD key is *Prompt
IF CTL.*CMD_key = '04';

// AND PGM.*Cursor field <IS> CTL.Warehouse Code
AND PGM.*Cursor_field = CTL.Warehouse_Code;

// Call program SEL Warehouse          SR.
CALL PROGRAM(SEL Warehouse          SR) ('CAANSRR');
PARAMETER(CTL.Warehouse_Code);

ENDIF;

//?Select Substituted item
CASE;

// IF CTL.*CMD key is *Prompt
IF CTL.*CMD_key = '04';

// AND PGM.*Cursor field <IS> CTL.Item Code
AND PGM.*Cursor_field = CTL.Item_Code;

// Call program SEL Actv Finished Good SR.
CALL PROGRAM(SEL Actv Finished Good SR) ('PDNHSRR');
PARAMETER(CTL.Company_Number);
PARAMETER(CTL.Item_Code);

ENDIF;

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(CTL.Company_Number);
PARAMETER(CTL.Company_Name);

//?Validate Warehouse code
CASE;

// IF CTL.Warehouse Code EQ WRK.BLANK
IF CTL.Warehouse_Code = WRK.BLANK;

// Send error message - 'Warehouse Code is required.'
ERROR(USR2015);
MSGPARM(CTL.Warehouse_Code);

// CTL.Warehouse Description = CON.*BLANK
CTL.Warehouse_Description = *BLANK;

//?Validate Warehouse code
// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(RTV Whse Descrip       RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1257603;
PARAMETER(CTL.Warehouse_Code);
PARAMETER(CTL.Warehouse_Description);

ENDIF;

//?Validate Item
CASE;

// IF CTL.Item Code EQ WRK.ZERO
IF CTL.Item_Code = WRK.ZERO;

// Send error message - 'Value Required'
ERROR(USR1962);
MSGPARM(CTL.Item_Code);

// CTL.Item Description = CON.*BLANK
CTL.Item_Description = *BLANK;

//?Validate Item
// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(Rtv Descriptions      RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1140665;
PARAMETER(CTL.Company_Number);
PARAMETER(CTL.Item_Code);
PARAMETER(CTL.Item_Description);
PARAMETER(WRK.Description_Line_Two);
PARAMETER(WRK.UOM_Primary);
PARAMETER(WRK.UOM_Second);
PARAMETER(WRK.UOM_Third);

ENDIF;

// PAR.USR Update Flag = CND.No
PAR.USR_Update_Flag = *BLANK;

//?Reprocess subfile if changed whse or item
CASE;

// IF PAR.Warehouse Code NE CTL.Warehouse Code
IF PAR.Warehouse_Code <> CTL.Warehouse_Code;

// OR PAR.Item Code NE CTL.Item Code
OR PAR.Item_Code <> CTL.Item_Code;

// PGM.*Re-read Subfile Record = CND.*YES
PGM.*Re_read_Subfile_Record = 1;

ENDIF;

// Call program RTV for Ord.Detail     XF.
CALL PROGRAM(RTV for Ord.Detail     XF) ('PDC3XFR');
PARAMETER(CTL.Company_Number);
PARAMETER(CTL.Item_Code);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.Numeric_Field_Not_Needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.Numeric_Field_Not_Needed);
PARAMETER(WRK.Numeric_Field_Not_Needed);
PARAMETER(WRK.Numeric_Field_Not_Needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.Numeric_Field_Not_Needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.Numeric_Field_Not_Needed);
PARAMETER(PAR.Variety_Rendered_Cut);
PARAMETER(WRK.Item_Target_Price);
PARAMETER(WRK.Error_Status);

// PAR.Warehouse Code = CTL.Warehouse Code
PAR.Warehouse_Code = CTL.Warehouse_Code;

// PAR.Item Code = CTL.Item Code
PAR.Item_Code = CTL.Item_Code;

//?USER: Validate subfile record fields

// Call program RTV for Ord.Detail     XF.
CALL PROGRAM(RTV for Ord.Detail     XF) ('PDC3XFR');
PARAMETER(CTL.Company_Number);
PARAMETER(RCD.Item_Code);
PARAMETER(RCD.Item_Description);
PARAMETER(WRK.Description_Line_Two);
PARAMETER(RCD.UOM_Primary);
PARAMETER(RCD.UOM_Pricing);
PARAMETER(RCD.Unit_Weight);
PARAMETER(RCD.Item_Level);
PARAMETER(RCD.Production_Date_Control);
PARAMETER(RCD.Catch_Weight_Status);
PARAMETER(RCD.Item_Structure_Class_Code);
PARAMETER(RCD.Item_Structure_Group_Code);
PARAMETER(RCD.Item_Structure_Type_Code);
PARAMETER(RCD.Default_Commod_Mark_basis);
PARAMETER(WRK.Transportation_Temp);
PARAMETER(RCD.Item_Type_Code);
PARAMETER(RCD.Commodity_Price_Group);
PARAMETER(WRK.Default_Warehouse);
PARAMETER(RCD.Price_Method_Default);
PARAMETER(WRK.Fresh_Chilling_Time);
PARAMETER(WRK.Variety_Rendered_Cut);
PARAMETER(WRK.Item_Target_Price);
PARAMETER(WRK.Error_Status);

//?Item Balance not found
CASE;

// IF WRK.Error Status is yes
IF WRK.Error_Status = 'Y';

// Send error message - 'Item Balance not found.'
ERROR(USR0328);
MSGPARM(RCD.Company_Number);
MSGPARM(RCD.Item_Code);
MSGPARM(RCD.Warehouse_Code);

//?Item Balance not found
// IF WRK.Variety/Rendered/Cut is Rendered
IF ( WRK.Variety_Rendered_Cut = 'R';

// AND PAR.Variety/Rendered/Cut is Not Bulk Item
AND PAR.Variety_Rendered_Cut = 'C'/*BLANK/'V' );

// OR WRK.Variety/Rendered/Cut is Not Bulk Item
OR ( WRK.Variety_Rendered_Cut = 'C'/*BLANK/'V';

// AND PAR.Variety/Rendered/Cut is Rendered
AND PAR.Variety_Rendered_Cut = 'R' );

// Send error message - 'Cannot substitute bulk item for regular item or regular item for bulk item.
ERROR(USR2401);
MSGPARM(RCD.Item_Code);

//?Item Balance not found
// IF *OTHERWISE
IF *OTHERWISE;

// Call program Val ItmBal.Unit Cst    XF.
CALL PROGRAM(Val ItmBal.Unit Cst    XF) ('PDMCXFR');
PARAMETER(CTL.Company_Number);
PARAMETER(RCD.Item_Code);
PARAMETER(CTL.Warehouse_Code);
PARAMETER(WRK.Unit_Cost_Per_Pound);
PARAMETER(WRK.Error_Status);

//?Error if no item balance or 0 unit cost
CASE;

// IF WRK.Error Status is yes
IF WRK.Error_Status = 'Y';

// Send error message - 'Item Balance not found.'
ERROR(USR0328);
MSGPARM(RCD.Company_Number);
MSGPARM(RCD.Item_Code);
MSGPARM(RCD.Warehouse_Code);

//?Error if no item balance or 0 unit cost
// IF WRK.Unit Cost Per Pound EQ WRK.ZERO
IF WRK.Unit_Cost_Per_Pound = WRK.ZERO;

// Send error message - 'Unit Cost for Warehouse &2 Cannot Be 0'
ERROR(USR2343);
MSGPARM(RCD.Item_Code);
MSGPARM(RCD.Warehouse_Code);

ENDIF;

//?Item must be FG
CASE;

// IF RCD.Item Type Code is Not Finished Good
IF RCD.Item_Type_Code <> 'FG';

// Send error message - 'Ordered Items must be Finished Goods.'
ERROR(USR1941);
MSGPARM(RCD.Item_Code);

// WRK.Error Status = CND.yes
WRK.Error_Status = 'Y';

ENDIF;

ENDIF;

// PGM.*Defer confirm = CND.Proceed to confirm
PGM.*Defer_confirm = 'N';

//?USER: Validate subfile record relations

CASE;

// IF RCD.Item Code EQ CTL.Item Code
IF RCD.Item_Code = CTL.Item_Code;

// Send error message - 'Can't substitute same item.'
ERROR(USR2400);
MSGPARM(RCD.Item_Code);

ENDIF;

//?USER: Create DBF record

// Call program ZZWW Substitutions ArraXF.
CALL PROGRAM(ZZWW Substitutions ArraXF) ('PDSIXFR')                             AC1140665;
PARAMETER('CR');
PARAMETER(CTL.Company_Number);
PARAMETER(RCD.Item_Code);
PARAMETER(CTL.Warehouse_Code);
PARAMETER(RCD.USR_Quantity_Subeded);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(WRK.BLANK);
PARAMETER(*MISSING);
PARAMETER(*MISSING);
PARAMETER(*MISSING);
PARAMETER(*ZERO);
PARAMETER(PAR.Chilling_Time_USR);

//?USER: Extra processing after DBF update

// PAR.USR Update Flag = CND.Yes
PAR.USR_Update_Flag = 'Y';

//?USER: Process command keys

CASE;

// IF PAR.USR Update Flag is Yes
IF PAR.USR_Update_Flag = 'Y';

// Call program ZzzSubstitutions       PV.
CALL PROGRAM(ZzzSubstitutions       PV) ('PDR4PVR');
PARAMETER(CTL.Company_Number);
PARAMETER(CTL.Item_Code);
PARAMETER(CTL.Warehouse_Code);
PARAMETER(PAR.Chilling_Time_USR);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?USER: Exit program processing

// Call program ZZWW Substitutions ArraXF.
CALL PROGRAM(ZZWW Substitutions ArraXF) ('PDSIXFR');
PARAMETER('CP');
PARAMETER(CTL.Company_Number);
PARAMETER(CTL.Item_Code);
PARAMETER(CTL.Warehouse_Code);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(WRK.BLANK);
PARAMETER(*MISSING);
PARAMETER(*MISSING);
PARAMETER(*MISSING);
PARAMETER(*ZERO);
PARAMETER(PAR.Chilling_Time_USR);

