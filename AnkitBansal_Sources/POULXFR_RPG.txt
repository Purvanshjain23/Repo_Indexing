     H/TITLE Exc Upd Closest Farms XF  Execute external functio
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H*  Perform user function
     H*  As defined by action diagram
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Execute external function
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISDNGUY
     H* Date          : 04/27/20  Time  : 16:33:59
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPOB2CPL3IF  E           K        DISK
      * RSQ : Product Trace             Co/Prod Dt/Product/Shift
      *
     FPOB2CPL6IF  E           K        DISK
      * RSQ : Product Trace             Co/Offset Date/time/farm
      *
     FPOB2CPL7IF  E           K        DISK
      * RSQ : Product Trace             Co/Offset Dte/Tme(D)/Frm
      *
     FPOB2CPL0UF  E           K        DISK
      * UPD : Product Trace             Update index
      *
     E                    YK01        8 12  A            ARR Closest Far
      *
     E                    YK02        8 18  A            ARR Closest Far
      *
     E                    YDOW        7  1               *Days of week
     I@B2CPM8
      * Product Trace             Co/Prod Dt/Product/Shift
      * Renamed input format fields
     I              B2AIC3                          WAAIC3
     I              B2PFNX                          WAPFNX
     I              B2AADX                          WAAADX
     I              B2B9TM                          WAB9TM
     I              B2ADDX                          WAADDX
     I              B2ABDX                          WAABDX
     I              B2CATM                          WACATM
     I              B2MNSX                          WAMNSX
     I              B2JOWG                          WAJOWG
     I              B2JPWG                          WAJPWG
     I              B2MOSX                          WAMOSX
     I              B2DNAA                          WADNAA
     I              B2PGNX                          WAPGNX
     I              B2BTT1                          WABTT1
     I              B2D7C7                          WAD7C7
     I              B2PYNA                          WAPYNA
     I              B2PZNA                          WAPZNA
     I              B2MPSX                          WAMPSX
     I              B2CCT1                          WACCT1
     I              B2PHNX                          WAPHNX
     I              B2MQSX                          WAMQSX
     I              B2DOAA                          WADOAA
     I              B2BUT1                          WABUT1
     I              B2DYAA                          WADYAA
     I              B2BVT1                          WABVT1
     I              B2DPAA                          WADPAA
     I              B2DQAA                          WADQAA
     I              B2BZT1                          WABZT1
     I              B2BWT1                          WABWT1
     I              B2DRAA                          WADRAA
     I              B2B9T1                          WAB9T1
     I              B2DSAA                          WADSAA
     I              B2B8T1                          WAB8T1
     I              B2D4AA                          WAD4AA
     I              B2EPAA                          WAEPAA
     I              B2EQAA                          WAEQAA
     I              B2ERAA                          WAERAA
     I              B2ESAA                          WAESAA
     I              B2PNSX                          WAPNSX
     I              B2UFNX                          WAUFNX
     I              B2UGNX                          WAUGNX
     I              B2UHNX                          WAUHNX
     I              B2AGDX                          WAAGDX
     I              B2CGTM                          WACGTM
     I              B2POSX                          WAPOSX
     I              B2PPSX                          WAPPSX
     I              B2UINX                          WAUINX
     I              B2UJNX                          WAUJNX
     I              B2UKNX                          WAUKNX
     I              B2ULNX                          WAULNX
     I              B2PRSX                          WAPRSX
     I              B2PSSX                          WAPSSX
     I              B2AATM                          WAAATM
     I              B2AYNA                          WAAYNA
     I              B2A0NA                          WAA0NA
     I              B2AXDT                          WAAXDT
      *
     I@B2CPPN
      * Product Trace             Co/Offset Date/time/farm
      * Renamed input format fields
     I              B2AIC3                          WDAIC3
     I              B2PFNX                          WDPFNX
     I              B2AADX                          WDAADX
     I              B2B9TM                          WDB9TM
     I              B2ADDX                          WDADDX
     I              B2ABDX                          WDABDX
     I              B2CATM                          WDCATM
     I              B2MNSX                          WDMNSX
     I              B2JOWG                          WDJOWG
     I              B2JPWG                          WDJPWG
     I              B2MOSX                          WDMOSX
     I              B2DNAA                          WDDNAA
     I              B2PGNX                          WDPGNX
     I              B2BTT1                          WDBTT1
     I              B2D7C7                          WDD7C7
     I              B2PYNA                          WDPYNA
     I              B2PZNA                          WDPZNA
     I              B2MPSX                          WDMPSX
     I              B2CCT1                          WDCCT1
     I              B2PHNX                          WDPHNX
     I              B2MQSX                          WDMQSX
     I              B2DOAA                          WDDOAA
     I              B2BUT1                          WDBUT1
     I              B2DYAA                          WDDYAA
     I              B2BVT1                          WDBVT1
     I              B2DPAA                          WDDPAA
     I              B2DQAA                          WDDQAA
     I              B2BZT1                          WDBZT1
     I              B2BWT1                          WDBWT1
     I              B2DRAA                          WDDRAA
     I              B2B9T1                          WDB9T1
     I              B2DSAA                          WDDSAA
     I              B2B8T1                          WDB8T1
     I              B2D4AA                          WDD4AA
     I              B2EPAA                          WDEPAA
     I              B2EQAA                          WDEQAA
     I              B2ERAA                          WDERAA
     I              B2ESAA                          WDESAA
     I              B2PNSX                          WDPNSX
     I              B2UFNX                          WDUFNX
     I              B2UGNX                          WDUGNX
     I              B2UHNX                          WDUHNX
     I              B2AGDX                          WDAGDX
     I              B2CGTM                          WDCGTM
     I              B2POSX                          WDPOSX
     I              B2PPSX                          WDPPSX
     I              B2UINX                          WDUINX
     I              B2UJNX                          WDUJNX
     I              B2UKNX                          WDUKNX
     I              B2ULNX                          WDULNX
     I              B2PRSX                          WDPRSX
     I              B2PSSX                          WDPSSX
     I              B2AATM                          WDAATM
     I              B2AYNA                          WDAYNA
     I              B2A0NA                          WDA0NA
     I              B2AXDT                          WDAXDT
      *
     I@B2CPPO
      * Product Trace             Co/Offset Dte/Tme(D)/Frm
      * Renamed input format fields
     I              B2AIC3                          WEAIC3
     I              B2PFNX                          WEPFNX
     I              B2AADX                          WEAADX
     I              B2B9TM                          WEB9TM
     I              B2ADDX                          WEADDX
     I              B2ABDX                          WEABDX
     I              B2CATM                          WECATM
     I              B2MNSX                          WEMNSX
     I              B2JOWG                          WEJOWG
     I              B2JPWG                          WEJPWG
     I              B2MOSX                          WEMOSX
     I              B2DNAA                          WEDNAA
     I              B2PGNX                          WEPGNX
     I              B2BTT1                          WEBTT1
     I              B2D7C7                          WED7C7
     I              B2PYNA                          WEPYNA
     I              B2PZNA                          WEPZNA
     I              B2MPSX                          WEMPSX
     I              B2CCT1                          WECCT1
     I              B2PHNX                          WEPHNX
     I              B2MQSX                          WEMQSX
     I              B2DOAA                          WEDOAA
     I              B2BUT1                          WEBUT1
     I              B2DYAA                          WEDYAA
     I              B2BVT1                          WEBVT1
     I              B2DPAA                          WEDPAA
     I              B2DQAA                          WEDQAA
     I              B2BZT1                          WEBZT1
     I              B2BWT1                          WEBWT1
     I              B2DRAA                          WEDRAA
     I              B2B9T1                          WEB9T1
     I              B2DSAA                          WEDSAA
     I              B2B8T1                          WEB8T1
     I              B2D4AA                          WED4AA
     I              B2EPAA                          WEEPAA
     I              B2EQAA                          WEEQAA
     I              B2ERAA                          WEERAA
     I              B2ESAA                          WEESAA
     I              B2PNSX                          WEPNSX
     I              B2UFNX                          WEUFNX
     I              B2UGNX                          WEUGNX
     I              B2UHNX                          WEUHNX
     I              B2AGDX                          WEAGDX
     I              B2CGTM                          WECGTM
     I              B2POSX                          WEPOSX
     I              B2PPSX                          WEPPSX
     I              B2UINX                          WEUINX
     I              B2UJNX                          WEUJNX
     I              B2UKNX                          WEUKNX
     I              B2ULNX                          WEULNX
     I              B2PRSX                          WEPRSX
     I              B2PSSX                          WEPSSX
     I              B2AATM                          WEAATM
     I              B2AYNA                          WEAYNA
     I              B2A0NA                          WEA0NA
     I              B2AXDT                          WEAXDT
      *
     I@B2CPMP
      * Product Trace             Update index
      * Renamed input format fields
     I              B2AIC3                          WFAIC3
     I              B2PFNX                          WFPFNX
     I              B2AADX                          WFAADX
     I              B2B9TM                          WFB9TM
     I              B2ADDX                          WFADDX
     I              B2ABDX                          WFABDX
     I              B2CATM                          WFCATM
     I              B2MNSX                          WFMNSX
     I              B2JOWG                          WFJOWG
     I              B2JPWG                          WFJPWG
     I              B2MOSX                          WFMOSX
     I              B2DNAA                          WFDNAA
     I              B2PGNX                          WFPGNX
     I              B2BTT1                          WFBTT1
     I              B2D7C7                          WFD7C7
     I              B2PYNA                          WFPYNA
     I              B2PZNA                          WFPZNA
     I              B2MPSX                          WFMPSX
     I              B2CCT1                          WFCCT1
     I              B2PHNX                          WFPHNX
     I              B2MQSX                          WFMQSX
     I              B2DOAA                          WFDOAA
     I              B2BUT1                          WFBUT1
     I              B2DYAA                          WFDYAA
     I              B2BVT1                          WFBVT1
     I              B2DPAA                          WFDPAA
     I              B2DQAA                          WFDQAA
     I              B2BZT1                          WFBZT1
     I              B2BWT1                          WFBWT1
     I              B2DRAA                          WFDRAA
     I              B2B9T1                          WFB9T1
     I              B2DSAA                          WFDSAA
     I              B2B8T1                          WFB8T1
     I              B2D4AA                          WFD4AA
     I              B2EPAA                          WFEPAA
     I              B2EQAA                          WFEQAA
     I              B2ERAA                          WFERAA
     I              B2ESAA                          WFESAA
     I              B2PNSX                          WFPNSX
     I              B2UFNX                          WFUFNX
     I              B2UGNX                          WFUGNX
     I              B2UHNX                          WFUHNX
     I              B2AGDX                          WFAGDX
     I              B2CGTM                          WFCGTM
     I              B2POSX                          WFPOSX
     I              B2PPSX                          WFPPSX
     I              B2UINX                          WFUINX
     I              B2UJNX                          WFUJNX
     I              B2UKNX                          WFUKNX
     I              B2ULNX                          WFULNX
     I              B2PRSX                          WFPRSX
     I              B2PSSX                          WFPSSX
     I              B2AATM                          WFAATM
     I              B2AYNA                          WFAYNA
     I              B2A0NA                          WFA0NA
     I              B2AXDT                          WFAXDT
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
     IYD01        DS
     I                                        1   7 YI0101
     I                                        8  120YI01
      *
     IYM01        DS                          8
     I                                        1   7 WBEPAA
     I                                        8  130WBCCTM
      *
     IYW01        DS
     I                                        1   7 XAEPAA
     I                                        8  130XACCTM
      *
     IYD02        DS
     I                                        1   60YI0201
     I                                        7  13 YI0202
     I                                       14  180YI02
      *
     IYM02        DS                          8
     I                                        1   60WCCCTM
     I                                        7  13 WCEPAA
      *
     IYW02        DS
     I                                        1   60XBCCTM
     I                                        7  13 XBEPAA
      *
      /EJECT
     IXTCK2       DS
      * Time: hours, minutes, seconds (2)
     I                                        1   60XTTIM2
     I                                        1   20XTHH2
     I                                        3   40XTNN2
     I                                        5   60XTSS2
      /EJECT
     IXTCK        DS
      * Time: hours, minutes, seconds
     I                                        1   60XTTIM
     I                                        1   20XTHH
     I                                        3   40XTNN
     I                                        5   60XTSS
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXD2T        DS
      * Internal date
     I                                        1   70XDINT2
     I                                        1   30XDINY2
     I                                        4   50XDINM2
     I                                        6   70XDIND2
     IQPOB21    E DSPOB2CPL0
      * UPD : Product Trace             Update index
      * Renamed input format fields
     I              B2AIC3                          WFAIC3
     I              B2PFNX                          WFPFNX
     I              B2AADX                          WFAADX
     I              B2B9TM                          WFB9TM
     I              B2ADDX                          WFADDX
     I              B2ABDX                          WFABDX
     I              B2CATM                          WFCATM
     I              B2MNSX                          WFMNSX
     I              B2JOWG                          WFJOWG
     I              B2JPWG                          WFJPWG
     I              B2MOSX                          WFMOSX
     I              B2DNAA                          WFDNAA
     I              B2PGNX                          WFPGNX
     I              B2BTT1                          WFBTT1
     I              B2D7C7                          WFD7C7
     I              B2PYNA                          WFPYNA
     I              B2PZNA                          WFPZNA
     I              B2MPSX                          WFMPSX
     I              B2CCT1                          WFCCT1
     I              B2PHNX                          WFPHNX
     I              B2MQSX                          WFMQSX
     I              B2DOAA                          WFDOAA
     I              B2BUT1                          WFBUT1
     I              B2DYAA                          WFDYAA
     I              B2BVT1                          WFBVT1
     I              B2DPAA                          WFDPAA
     I              B2DQAA                          WFDQAA
     I              B2BZT1                          WFBZT1
     I              B2BWT1                          WFBWT1
     I              B2DRAA                          WFDRAA
     I              B2B9T1                          WFB9T1
     I              B2DSAA                          WFDSAA
     I              B2B8T1                          WFB8T1
     I              B2D4AA                          WFD4AA
     I              B2EPAA                          WFEPAA
     I              B2EQAA                          WFEQAA
     I              B2ERAA                          WFERAA
     I              B2ESAA                          WFESAA
     I              B2PNSX                          WFPNSX
     I              B2UFNX                          WFUFNX
     I              B2UGNX                          WFUGNX
     I              B2UHNX                          WFUHNX
     I              B2AGDX                          WFAGDX
     I              B2CGTM                          WFCGTM
     I              B2POSX                          WFPOSX
     I              B2PPSX                          WFPPSX
     I              B2UINX                          WFUINX
     I              B2UJNX                          WFUJNX
     I              B2UKNX                          WFUKNX
     I              B2ULNX                          WFULNX
     I              B2PRSX                          WFPRSX
     I              B2PSSX                          WFPSSX
     I              B2AATM                          WFAATM
     I              B2AYNA                          WFAYNA
     I              B2A0NA                          WFA0NA
     I              B2AXDT                          WFAXDT
      *
     IYARDCS      DS                            439
      * Message data for message Y2U0009.
     IMD0009      DS
     I                                        1  10 MDPGM
     I                                       11  20 MDACP
     I                                       21  30 MDFMT
     I                                       31  34 MDACT
     I                                       35  40 MDLBL
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * I :  Company Number
     I                                    P   1   20P1AIC3
     IP2PARM      DS
      * I :  PT Prod Date YYYYMMDD
     I                                    P   1   50P2AADX
     IP3PARM      DS
      * I :  Date 8.0 USR
     I                                    P   1   50P3MLNX
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1AIC3    PARM           WP0001  30       Company Number
     C           P2AADX    PARM           WP0002  80       PT Prod Date YY
     C           P3MLNX    PARM           WP0003  80       Date 8.0 USR
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Exc Upd Closest Farms XF
      * Rtv Upd Closest Farms RT - Product Trace  * 
     C                     EXSR SARVGN
      *----------------------------------------------------------------
      * Exit program
     C           AAEXIT    TAG
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Rtv Upd Closest Farms RT - Product Trace  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WAAIC3    WQSA01           Company Number
      * Define keylist
     C           KPSSA     KLIST
     C                     KFLD           WQSA01           Company Number
     C                     KFLD           WAAADX           PT Prod Date YY
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WQSA01           Company Number
      * Setup key
     C                     Z-ADDP1AIC3    WQSA01           Company Number
     C                     Z-ADDP2AADX    WAAADX           PT Prod Date YY
      * Establish starting position
     C           KPSSA     SETLL@B2CPM8                    *
     C           KRSSA     READE@B2CPM8                  90*
      * Data record not found
     C   90                MOVEL'USR3144' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE:
      *  - c1ORc2
      *   |- c1    : DB1.PT Prod Date YYYYMMDD LE PAR.Date 8.0 USR
      *   |- c2    : PAR.Date 8.0 USR is zero
      *   '-
     C           WAAADX    IFLE P3MLNX                     *IF
     C           P3MLNX    OREQ 0                          *OR
      * CASE:
      *  - c1ANDc2
      *   |- c1    : DB1.PT Producer/Farm Code is Entered
      *   |- c2    : DB1.PT Producer/Farm Code 1 is Not Entered
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WADPAA    IFNE *BLANK                     *IF
     C           WAEPAA    IFEQ *BLANK                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Clear Arrays
      * DLT PT Closest Farms  DL - *Arrays  * 
     C                     EXSR SBDLRC
      * DLT PT Closest Farms2 DL - *Arrays  * 
     C                     EXSR SCDLRC
      * If Internal, use farm code, else use Prod Loc Vendor #    RMC 2/1
      * CASE:
      *  - c1ORc2ORc3
      *   |- c1    : DB1.PT Source Type is Internal
      *   |- c2    : DB1.Company Number is St. Joseph
      *   |- c3    : DB1.Company Number is Seaboard Triumph Foods
      *   '-
     C           WAMQSX    IFEQ 'I'                        *IF
     C           WAAIC3    OREQ 960                        *OR
     C           WAAIC3    OREQ 440                        *OR
     C                     MOVELWADPAA    YL0001           PT Producer/Far
     C                     ELSE
      * CASE: *OTHERWISE
      * Rtv Prd Loc Vnd# 4 OMS XF - STR Hog Prcr & Eval Sys  * 
     C                     CALL 'PKRTVVND'             90  Rtv Prd Loc Vnd
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WADPAA    WQ0001  7        PT Producer/Far
     C                     PARM *BLANK    WQ0002 40        PT Producer/Far
     C                     PARM WADQAA    WQ0003  6        PT Producer Loc
     C           YL0002    PARM *BLANK    WQ0004  6        Address Number
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PKRTVVND'W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     MOVEL*BLANK    YL0001           PT Producer/Far
     C                     MOVELYL0002    YL0001           PT Producer/Far
     C                     END                             *FI
      * Get Next 4 farms after the offset date/time
      * Rtv Next 4 Farms      RT - Product Trace  * 
     C                     EXSR SDRVGN
      * Get Previous 4 farms before the offset date/time
      * Rtv Previous 4 Farms  RT - Product Trace  * 
     C                     EXSR SHRVGN
      * Copy Array to another Array in Time Diff Seq
      * RTV PT Crt ClstFrms2  DL - *Arrays  * 
     C                     EXSR SIRVGN
      * Load Db fields from the array  -- 1st 4 farms should be the close
      * Rtv PT Closest Farms2 RT - *Arrays  * 
     C                     EXSR SKRVGN
      * Chg PT Closest Farms CH - Product Trace  * 
     C                     EXSR SLCHRC
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSA     READE@B2CPM8                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBDLRC    BEGSR
      *================================================================
      * DLT PT Closest Farms  DL - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Initialize array variables
     C                     MOVEA*HIVAL    YK01
      * Initialize last used element number
     C                     Z-ADD0         YL01
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCDLRC    BEGSR
      *================================================================
      * DLT PT Closest Farms2 DL - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Initialize array variables
     C                     MOVEA*HIVAL    YK02
      * Initialize last used element number
     C                     Z-ADD0         YL02
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * Rtv Next 4 Farms      RT - Product Trace  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * T12136 RMC 12/5/17 added stf
     C                     Z-ADDWAABDX    YL0003           PT Offset Prod
     C                     Z-ADDWACATM    YL0004           PT Offset Prod
     C                     Z-ADD0         YL0005           Count USR
      * Declare restrictor key work fields
     C           *LIKE     DEFN WDAIC3    WQSD01           Company Number
      * Define keylist
     C           KPSSD     KLIST
     C                     KFLD           WQSD01           Company Number
     C                     KFLD           WDABDX           PT Offset Prod
     C                     KFLD           WDCATM           PT Offset Prod
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           WQSD01           Company Number
      * Setup key
     C                     Z-ADDWAAIC3    WQSD01           Company Number
     C                     Z-ADDWAABDX    WDABDX           PT Offset Prod
     C                     Z-ADDWACATM    WDCATM           PT Offset Prod
      * Establish starting position
     C           KPSSD     SETLL@B2CPPN                    *
     C           KRSSD     READE@B2CPPN                  90*
      * Data record not found
     C   90                MOVEL'USR3144' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * RMC TFS027 For ST JO the producer/farm code is the trace seq
      * CASE:
      *  - c1ORc2ORc3
      *   |- c1    : DB1.PT Source Type is Internal
      *   |- c2    : DB1.Company Number is St. Joseph
      *   |- c3    : DB1.Company Number is Seaboard Triumph Foods
      *   '-
     C           WDMQSX    IFEQ 'I'                        *IF
     C           WDAIC3    OREQ 960                        *OR
     C           WDAIC3    OREQ 440                        *OR
      * CASE:
      *  - c1ANDc2
      *   |- c1    : DB1.PT Producer/Farm Code NE PAR.PT Producer/Farm Co
      *   |- c2    : DB1.PT Producer/Farm Code is Entered
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WDDPAA    IFNE YL0001                     *IF
     C           WDDPAA    IFNE *BLANK                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * UPD PT Closest Farms  RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWDDPAA    WL0001    P      PT Producer/Far
     C                     Z-ADDYL0006    WL0002           Time Difference
     C                     Z-ADDYL0005    WL0003           Count USR
     C                     Z-ADDWDABDX    WL0004           PT Offset Prod
     C                     Z-ADDWDCATM    WL0005           PT Offset Prod
     C                     Z-ADDYL0003    WL0006           From Prod Date
     C                     Z-ADDYL0004    WL0007           Time In
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0003    YL0005           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * External --  compare to producer loc address #
      * CASE: DB1.PT Source Type is External
     C           WDMQSX    IFEQ 'E'                        *IF
      * Rtv Prd Loc Vnd# 4 OMS XF - STR Hog Prcr & Eval Sys  * 
     C                     CALL 'PKRTVVND'             90  Rtv Prd Loc Vnd
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WDDPAA    WQ0005  7        PT Producer/Far
     C                     PARM *BLANK    WQ0006 40        PT Producer/Far
     C                     PARM WDDQAA    WQ0007  6        PT Producer Loc
     C           WUE7T1    PARM *BLANK    WQ0008  6        Address Number
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PKRTVVND'W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE:
      *  - c1ANDc2
      *   |- c1    : WRK.Address Number 6A NE PAR.PT Producer/Farm Code
      *   |- c2    : WRK.Address Number 6A is Entered
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WUE7T1    IFNE YL0001                     *IF
     C           WUE7T1    IFGT *BLANK                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * UPD PT Closest Farms  RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWUE7T1    WL0001    P      PT Producer/Far
     C                     Z-ADDYL0006    WL0002           Time Difference
     C                     Z-ADDYL0005    WL0003           Count USR
     C                     Z-ADDWDABDX    WL0004           PT Offset Prod
     C                     Z-ADDWDCATM    WL0005           PT Offset Prod
     C                     Z-ADDYL0003    WL0006           From Prod Date
     C                     Z-ADDYL0004    WL0007           Time In
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0003    YL0005           Count USR
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * CASE: LCL.Count USR is Four
     C           YL0005    IFEQ 4                          *IF
     C                     GOTO SDEXIT                     *QUIT
     C                     END                             *FI
     C           KRSSD     READE@B2CPPN                  90*
     C                     ENDDO
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * UPD PT Closest Farms  RT - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
     C           YL01      IFGT 0
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * Initialize internal index
     C                     MOVEL*LOVAL    YD01
      * Move key fields to ARR Closest Farms
     C                     MOVELWL0001    YI0101           PT Producer/Far
      *
      *
      *
      *
      *
      *
      * Only search if key is not beyond range of current elements
     C           YK01,YL01 IFGT YD01
     C           YD01      LOKUPYK01,Y               90    Look for >
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFNE WL0001
      *
      *
      *
      *
      *
      *
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Array element not found
     C                     MOVEL'Y2U0005' W0RTN   7
      * USER: Processing if Data record not found
      * CASE: PAR.PT Offset Prod Date EQ PAR.From Prod Date YYYYMMDD
     C           WL0004    IFEQ WL0006                     *IF
      * LCL.Time Difference USR = PAR.PT Offset Prod Time - PAR.Time In *
     C                     Z-ADDWL0007    XTTIM2
     C                     Z-ADDWL0005    XTTIM
     C                     EXSR XTCEL
     C           XTHH      MULT 100       YL0007
     C                     ADD  XTNN      YL0007
     C                     MULT 100       YL0007
     C                     ADD  XTSS      YL0007
     C                     MULT XSGN      YL0007
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.PT Offset Prod Date LT PAR.From Prod Date YYYYMMDD
     C           WL0004    IFLT WL0006                     *IF
      * WRK.Days = PAR.PT Offset Prod Date - PAR.From Prod Date YYYYMMDD
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C           WL0006    SUB  18000000  XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C           WL0004    SUB  18000000  XDINDT
     C                     EXSR XCVTA
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
      * Negative duration, when date1<date2
     C           XDAY1     IFGE XDAY2
     C                     Z-ADDXDURR     WUNPNX
     C                     ELSE
     C           XDURR     MULT -1        WUNPNX
     C                     END
     C           WUNPNX    MULT 240000    YL0007           Time Difference
      * LCL.Time Difference USR = LCL.Time Difference USR - PAR.Time In *
     C                     Z-ADDWL0007    XTTIM2
     C                     Z-ADDYL0007    XTTIM
     C                     EXSR XTCEL
     C           XTHH      MULT 100       YL0007
     C                     ADD  XTNN      YL0007
     C                     MULT 100       YL0007
     C                     ADD  XTSS      YL0007
     C                     MULT XSGN      YL0007
     C                     ELSE
      * CASE: *OTHERWISE
      * WRK.Days = PAR.From Prod Date YYYYMMDD - PAR.PT Offset Prod Date
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C           WL0004    SUB  18000000  XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C           WL0006    SUB  18000000  XDINDT
     C                     EXSR XCVTA
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
      * Negative duration, when date1<date2
     C           XDAY1     IFGE XDAY2
     C                     Z-ADDXDURR     WUNPNX
     C                     ELSE
     C           XDURR     MULT -1        WUNPNX
     C                     END
     C           WUNPNX    MULT 240000    YL0007           Time Difference
      * LCL.Time Difference USR = LCL.Time Difference USR - PAR.Time In *
     C                     Z-ADDWL0007    XTTIM2
     C                     Z-ADDYL0007    XTTIM
     C                     EXSR XTCEL
     C           XTHH      MULT 100       YL0007
     C                     ADD  XTNN      YL0007
     C                     MULT 100       YL0007
     C                     ADD  XTSS      YL0007
     C                     MULT XSGN      YL0007
     C                     END                             *FI
     C                     END                             *FI
      * CASE: LCL.Time Difference USR is Less than 0
     C           YL0007    IFLT 0                          *IF
     C           0         SUB  YL0007    YL0007           Time Difference
     C                     END                             *FI
      * CRT PT Closest Farms  CR - *Arrays  * 
     C                     EXSR SFCRRC
     C                     ADD  1         WL0003           Count USR
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '1'
     C           YI01      OCUR YM01
      * USER: Process Data record
      * For this farm, If this time diff is less that it was, update it.
      * CASE: PAR.PT Offset Prod Date EQ PAR.From Prod Date YYYYMMDD
     C           WL0004    IFEQ WL0006                     *IF
      * LCL.Time Difference USR = PAR.PT Offset Prod Time - PAR.Time In *
     C                     Z-ADDWL0007    XTTIM2
     C                     Z-ADDWL0005    XTTIM
     C                     EXSR XTCEL
     C           XTHH      MULT 100       YL0007
     C                     ADD  XTNN      YL0007
     C                     MULT 100       YL0007
     C                     ADD  XTSS      YL0007
     C                     MULT XSGN      YL0007
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.PT Offset Prod Date LT PAR.From Prod Date YYYYMMDD
     C           WL0004    IFLT WL0006                     *IF
      * WRK.Days = PAR.PT Offset Prod Date - PAR.From Prod Date YYYYMMDD
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C           WL0006    SUB  18000000  XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C           WL0004    SUB  18000000  XDINDT
     C                     EXSR XCVTA
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
      * Negative duration, when date1<date2
     C           XDAY1     IFGE XDAY2
     C                     Z-ADDXDURR     WUNPNX
     C                     ELSE
     C           XDURR     MULT -1        WUNPNX
     C                     END
     C           WUNPNX    MULT 240000    YL0007           Time Difference
      * LCL.Time Difference USR = LCL.Time Difference USR - PAR.Time In *
     C                     Z-ADDWL0007    XTTIM2
     C                     Z-ADDYL0007    XTTIM
     C                     EXSR XTCEL
     C           XTHH      MULT 100       YL0007
     C                     ADD  XTNN      YL0007
     C                     MULT 100       YL0007
     C                     ADD  XTSS      YL0007
     C                     MULT XSGN      YL0007
     C                     ELSE
      * CASE: *OTHERWISE
      * WRK.Days = PAR.From Prod Date YYYYMMDD - PAR.PT Offset Prod Date
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C           WL0004    SUB  18000000  XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C           WL0006    SUB  18000000  XDINDT
     C                     EXSR XCVTA
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
      * Negative duration, when date1<date2
     C           XDAY1     IFGE XDAY2
     C                     Z-ADDXDURR     WUNPNX
     C                     ELSE
     C           XDURR     MULT -1        WUNPNX
     C                     END
     C           WUNPNX    MULT 240000    YL0007           Time Difference
      * LCL.Time Difference USR = LCL.Time Difference USR - PAR.Time In *
     C                     Z-ADDWL0007    XTTIM2
     C                     Z-ADDYL0007    XTTIM
     C                     EXSR XTCEL
     C           XTHH      MULT 100       YL0007
     C                     ADD  XTNN      YL0007
     C                     MULT 100       YL0007
     C                     ADD  XTSS      YL0007
     C                     MULT XSGN      YL0007
     C                     END                             *FI
     C                     END                             *FI
      * CASE: LCL.Time Difference USR is Less than 0
     C           YL0007    IFLT 0                          *IF
     C           0         SUB  YL0007    YL0007           Time Difference
     C                     END                             *FI
      * CASE: LCL.Time Difference USR LT DB1.Time Difference USR
     C           YL0007    IFLT WBCCTM                     *IF
      * UPD PT Closest Farms  CR - *Arrays  * 
     C                     EXSR SGCHRC
     C                     END                             *FI
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFCRRC    BEGSR
      *================================================================
      * CRT PT Closest Farms  CR - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Array full, cannot add any more elements
     C           YL01      IFEQ 8
     C                     MOVEL'Y2U0036' W0RTN   7
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C                     MOVEL*BLANK    XAEPAA           PT Producer/Far
     C                     Z-ADD*ZERO     XACCTM           Time Difference
      * Move all fields to ARR Closest Farms
     C                     MOVELWL0001    XAEPAA           PT Producer/Far
     C                     Z-ADDYL0007    XACCTM           Time Difference
      *
      * Move key fields to ARR Closest Farms
     C                     MOVELXAEPAA    YI0101           PT Producer/Far
      *
      * Check for duplicate primary key
      * Initialize internal index
     C                     Z-ADD*ZERO     YI01
      * Only search if key is not beyond range of current elements
     C           YL01      IFGT 0
     C           YK01,YL01 ANDGTYD01
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C           YD01      LOKUPYK01,Y               90    Look for >
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFEQ XAEPAA
      * Array element already exists
     C                     MOVEL'Y2U0003' W0RTN   7
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C                     ENDIF
      *
      * Insert after last used element
     C           YL01      ADD  1         Y       50
      * Check if element was a previously deleted element
     C           YK01,Y    IFNE *HIVAL
      * If so, reuse MODS index
     C                     MOVELYK01,Y    YD01
     C                     ELSE
      * If not, use element number as MODS index
     C                     Z-ADDY         YI01
     C                     ENDIF
      *
      * Create(insert) new element
      * Move key fields to ARR Closest Farms
     C                     MOVELXAEPAA    YI0101           PT Producer/Far
      *
     C                     MOVELYD01      YK01,Y
     C           YI01      OCUR YM01
      * Update MODS fields
     C                     MOVELXAEPAA    WBEPAA           PT Producer/Far
     C                     Z-ADDXACCTM    WBCCTM           Time Difference
      * Only sort if element is out of position
     C           YL01      IFGT 0
     C           YK01,YL01 ANDGTYD01
      * Adjust RTVOBJ index to reflect position of added/removed element
     C           YR01      IFGT 0
     C           YR01      ANDLE8
     C           YK01,YR01 ANDGTYD01
     C                     ADD  1         YR01    50
     C                     ENDIF
      * Sort array to place element in correct position
     C                     SORTAYK01
     C                     ENDIF
      * Adjust number of elements currently in array
     C                     ADD  1         YL01
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGCHRC    BEGSR
      *================================================================
      * UPD PT Closest Farms  CR - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move key fields to ARR Closest Farms
     C                     MOVELWBEPAA    YI0101    P      PT Producer/Far
      *
      * Reset global index if not within range of current elements
     C           Y         IFGT YL01
     C                     Z-ADD1         Y
     C                     ENDIF
      * Only search if not already pointing to correct element
     C           Y         IFGT 0
     C           YD01      ANDNEYK01,Y
      * Initialize internal index
     C                     Z-ADD*ZERO     YI01
      * Only search if key is not beyond range of current elements
     C           YL01      IFGT 0
     C           YK01,YL01 ANDGTYD01
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C           YD01      LOKUPYK01,Y               90    Look for >
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFNE WBEPAA
      *
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Element not found in array
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     GOTO SGEXIT
     C                     ENDIF
      *
     C                     ENDIF
     C           YI01      OCUR YM01
      *
      * Move all fields to ARR Closest Farms
     C                     Z-ADDYL0007    WBCCTM           Time Difference
      *
      *
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHRVGN    BEGSR
      *================================================================
      * Rtv Previous 4 Farms  RT - Product Trace  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * T12136 RMC 12/5/17 added stf
     C                     Z-ADDWAABDX    YL0008           PT Offset Prod
     C                     Z-ADDWACATM    YL0009           PT Offset Prod
     C                     Z-ADD0         YL0010           Count USR
      * Declare restrictor key work fields
     C           *LIKE     DEFN WEAIC3    WQSH01           Company Number
      * Define keylist
     C           KPSSH     KLIST
     C                     KFLD           WQSH01           Company Number
     C                     KFLD           WEABDX           PT Offset Prod
     C                     KFLD           WECATM           PT Offset Prod
      * Define keylist
     C           KRSSH     KLIST
     C                     KFLD           WQSH01           Company Number
      * Setup key
     C                     Z-ADDWAAIC3    WQSH01           Company Number
     C                     Z-ADDWAABDX    WEABDX           PT Offset Prod
     C                     Z-ADDWACATM    WECATM           PT Offset Prod
      * Establish starting position
     C           KPSSH     SETLL@B2CPPO                    *
     C           KRSSH     READE@B2CPPO                  90*
      * Data record not found
     C   90                MOVEL'USR3144' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * RMC TFS027 For ST JO the producer/farm code is the trace seq
      * CASE:
      *  - c1ORc2ORc3
      *   |- c1    : DB1.PT Source Type is Internal
      *   |- c2    : DB1.Company Number is St. Joseph
      *   |- c3    : DB1.Company Number is Seaboard Triumph Foods
      *   '-
     C           WEMQSX    IFEQ 'I'                        *IF
     C           WEAIC3    OREQ 960                        *OR
     C           WEAIC3    OREQ 440                        *OR
      * CASE:
      *  - c1ANDc2
      *   |- c1    : DB1.PT Producer/Farm Code NE PAR.PT Producer/Farm Co
      *   |- c2    : DB1.PT Producer/Farm Code is Entered
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WEDPAA    IFNE YL0001                     *IF
     C           WEDPAA    IFNE *BLANK                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * UPD PT Closest Farms  RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWEDPAA    WL0001    P      PT Producer/Far
     C                     Z-ADDYL0011    WL0002           Time Difference
     C                     Z-ADDYL0010    WL0003           Count USR
     C                     Z-ADDWEABDX    WL0004           PT Offset Prod
     C                     Z-ADDWECATM    WL0005           PT Offset Prod
     C                     Z-ADDYL0008    WL0006           From Prod Date
     C                     Z-ADDYL0009    WL0007           Time In
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0003    YL0010           Count USR
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * External -- compare to producer loc address #
      * CASE: DB1.PT Source Type is External
     C           WEMQSX    IFEQ 'E'                        *IF
      * Rtv Prd Loc Vnd# 4 OMS XF - STR Hog Prcr & Eval Sys  * 
     C                     CALL 'PKRTVVND'             90  Rtv Prd Loc Vnd
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WEDPAA    WQ0009  7        PT Producer/Far
     C                     PARM *BLANK    WQ0010 40        PT Producer/Far
     C                     PARM WEDQAA    WQ0011  6        PT Producer Loc
     C           WUE7T1    PARM *BLANK    WQ0012  6        Address Number
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PKRTVVND'W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE:
      *  - c1ANDc2
      *   |- c1    : WRK.Address Number 6A NE PAR.PT Producer/Farm Code
      *   |- c2    : WRK.Address Number 6A is Entered
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WUE7T1    IFNE YL0001                     *IF
     C           WUE7T1    IFGT *BLANK                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * UPD PT Closest Farms  RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWUE7T1    WL0001    P      PT Producer/Far
     C                     Z-ADDYL0011    WL0002           Time Difference
     C                     Z-ADDYL0010    WL0003           Count USR
     C                     Z-ADDWEABDX    WL0004           PT Offset Prod
     C                     Z-ADDWECATM    WL0005           PT Offset Prod
     C                     Z-ADDYL0008    WL0006           From Prod Date
     C                     Z-ADDYL0009    WL0007           Time In
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0003    YL0010           Count USR
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * CASE: LCL.Count USR is Four
     C           YL0010    IFEQ 4                          *IF
     C                     GOTO SHEXIT                     *QUIT
     C                     END                             *FI
     C           KRSSH     READE@B2CPPO                  90*
     C                     ENDDO
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * RTV PT Crt ClstFrms2  DL - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
     C                     Z-ADD1         Y       50
     C           YL01      IFGT 0
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
     C                     ELSE
      * Array element not found
     C                     MOVEL'Y2U0005' W0RTN   7
     C                     ENDIF
      *
      * Sequence through qualified elements:
     C                     Z-ADDY         YR01    50
     C           YR01      DOWLEYL01
     C                     Z-ADDYR01      Y
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * USER: Process Data record
      * CRT PT Closest Farms2 CR - *Arrays  * 
     C                     EXSR SJCRRC
     C                     ADD  1         YR01
     C                     ENDDO
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJCRRC    BEGSR
      *================================================================
      * CRT PT Closest Farms2 CR - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Array full, cannot add any more elements
     C           YL02      IFEQ 8
     C                     MOVEL'Y2U0036' W0RTN   7
     C                     GOTO SJEXIT
     C                     ENDIF
      *
     C                     Z-ADD*ZERO     XBCCTM           Time Difference
     C                     MOVEL*BLANK    XBEPAA           PT Producer/Far
      * Move all fields to ARR Closest Farms 2
     C                     Z-ADDWBCCTM    XBCCTM           Time Difference
     C                     MOVELWBEPAA    XBEPAA           PT Producer/Far
      *
      * Move key fields to ARR Closest Farms 2
     C                     Z-ADDXBCCTM    YI0201           Time Difference
     C                     MOVELXBEPAA    YI0202           PT Producer/Far
      *
      * Check for duplicate primary key
      * Initialize internal index
     C                     Z-ADD*ZERO     YI02
      * Only search if key is not beyond range of current elements
     C           YL02      IFGT 0
     C           YK02,YL02 ANDGTYD02
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C           YD02      LOKUPYK02,Y               90    Look for >
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK02,Y    YD02
      * Compare
     C           YI0201    IFEQ XBCCTM
     C           YI0202    ANDEQXBEPAA
      * Array element already exists
     C                     MOVEL'Y2U0003' W0RTN   7
     C                     GOTO SJEXIT
     C                     ENDIF
      *
     C                     ENDIF
      *
      * Insert after last used element
     C           YL02      ADD  1         Y       50
      * Check if element was a previously deleted element
     C           YK02,Y    IFNE *HIVAL
      * If so, reuse MODS index
     C                     MOVELYK02,Y    YD02
     C                     ELSE
      * If not, use element number as MODS index
     C                     Z-ADDY         YI02
     C                     ENDIF
      *
      * Create(insert) new element
      * Move key fields to ARR Closest Farms 2
     C                     Z-ADDXBCCTM    YI0201           Time Difference
     C                     MOVELXBEPAA    YI0202           PT Producer/Far
      *
     C                     MOVELYD02      YK02,Y
     C           YI02      OCUR YM02
      * Update MODS fields
     C                     Z-ADDXBCCTM    WCCCTM           Time Difference
     C                     MOVELXBEPAA    WCEPAA           PT Producer/Far
      * Only sort if element is out of position
     C           YL02      IFGT 0
     C           YK02,YL02 ANDGTYD02
      * Adjust RTVOBJ index to reflect position of added/removed element
     C           YR02      IFGT 0
     C           YR02      ANDLE8
     C           YK02,YR02 ANDGTYD02
     C                     ADD  1         YR02    50
     C                     ENDIF
      * Sort array to place element in correct position
     C                     SORTAYK02
     C                     ENDIF
      * Adjust number of elements currently in array
     C                     ADD  1         YL02
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         SKRVGN    BEGSR
      *================================================================
      * Rtv PT Closest Farms2 RT - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     MOVEL*BLANK    WUEPAA           PT Producer/Far
     C                     MOVEL*BLANK    WUEQAA           PT Producer/Far
     C                     MOVEL*BLANK    WUERAA           PT Producer/Far
     C                     MOVEL*BLANK    WUESAA           PT Producer/Far
     C                     Z-ADD1         Y       50
     C           YL02      IFGT 0
     C                     MOVELYK02,Y    YD02
     C           YI02      OCUR YM02
     C                     ELSE
      * Array element not found
     C                     MOVEL'Y2U0005' W0RTN   7
     C                     ENDIF
      *
      * Sequence through qualified elements:
     C                     Z-ADDY         YR02    50
     C           YR02      DOWLEYL02
     C                     Z-ADDYR02      Y
     C                     MOVELYK02,Y    YD02
     C           YI02      OCUR YM02
      * USER: Process Data record
      * CASE: PAR.PT Producer/Farm Code 1 is Not Entered
     C           WUEPAA    IFEQ *BLANK                     *IF
     C                     MOVELWCEPAA    WUEPAA           PT Producer/Far
     C                     ELSE
      * CASE: PAR.PT Producer/Farm Code 2 is Not Entered
     C           WUEQAA    IFEQ *BLANK                     *IF
     C                     MOVELWCEPAA    WUEQAA           PT Producer/Far
     C                     ELSE
      * CASE: PAR.PT Producer/Farm Code 3 is Not Entered
     C           WUERAA    IFEQ *BLANK                     *IF
     C                     MOVELWCEPAA    WUERAA           PT Producer/Far
     C                     ELSE
      * CASE: PAR.PT Producer/Farm Code 4 is Not Entered
     C           WUESAA    IFEQ *BLANK                     *IF
     C                     MOVELWCEPAA    WUESAA           PT Producer/Far
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ADD  1         YR02
     C                     ENDDO
      *================================================================
     CSR         SKEXIT    ENDSR
      /EJECT
     CSR         SLCHRC    BEGSR
      *================================================================
      * Chg PT Closest Farms CH - Product Trace  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0001  80       PT Label Date Y
     C                     Z-ADD*ZERO     WN0002  80       PT Offset Prod
     C                     Z-ADD*ZERO     WN0003  60       PT Offset Prod
     C                     MOVEL*BLANK    WN0004  1        PT Inventory St
     C                     Z-ADD*ZERO     WN0005  51       PT Net Weight
     C                     Z-ADD*ZERO     WN0006  51       PT Gross Weight
     C                     MOVEL*BLANK    WN0007  1        PT Shift Number
     C                     MOVEL*BLANK    WN0008  3        PT Warehouse ID
     C                     Z-ADD*ZERO     WN0009  70       PT Order Number
     C                     MOVEL*BLANK    WN0010 10        PT Pallet Numbe
     C                     Z-ADD*ZERO     WN0011  70       PT Product Code
     C                     MOVEL*BLANK    WN0012 32        PT Item Label L
     C                     MOVEL*BLANK    WN0013 32        PT Item Label L
     C                     MOVEL*BLANK    WN0014  2        PT Fresh/Frozen
     C                     MOVEL*BLANK    WN0015  9        PT Item Picture
     C                     Z-ADD*ZERO     WN0016  50       PT Tattoo Numbe
     C                     MOVEL*BLANK    WN0017  1        PT Source Type
     C                     MOVEL*BLANK    WN0018  3        PT Source Code
     C                     MOVEL*BLANK    WN0019 25        PT Source Code
     C                     MOVEL*BLANK    WN0020  5        PT Producer/Cel
     C                     MOVEL*BLANK    WN0021 25        PT Producer/Cel
     C                     MOVEL*BLANK    WN0022  7        PT Producer/Far
     C                     MOVEL*BLANK    WN0023  6        PT Producer Loc
     C                     MOVEL*BLANK    WN0024 40        PT Producer/Far
     C                     MOVEL*BLANK    WN0025 40        PT Producer/Far
     C                     MOVEL*BLANK    WN0026  2        PT Producer/Far
     C                     MOVEL*BLANK    WN0027 20        PT Producer/Far
     C                     MOVEL*BLANK    WN0028  5        PT Genetic Code
     C                     MOVEL*BLANK    WN0029 25        PT Genetic Desc
     C                     MOVEL*BLANK    WN0030  1        PT Gender Code
     C                     MOVEL*BLANK    WN0031  3        PT Item Type Co
     C                     Z-ADD*ZERO     WN0032  30       PT Item Str Cla
     C                     Z-ADD*ZERO     WN0033  30       PT Item Str Gro
     C                     Z-ADD*ZERO     WN0034  30       PT Item Str Typ
     C                     Z-ADD*ZERO     WN0035  80       PT WIP Dump/Pro
     C                     Z-ADD*ZERO     WN0036  60       PT WIP Dump/Pro
     C                     MOVEL*BLANK    WN0037  1        PT WIP Dump/Pro
     C                     MOVEL*BLANK    WN0038  1        PT WIP Used/Not
     C                     Z-ADD*ZERO     WN0039  80       PT From FG Seri
     C                     Z-ADD*ZERO     WN0040  80       PT To FG Serial
     C                     Z-ADD*ZERO     WN0041  80       PT Unused Nbr 3
     C                     Z-ADD*ZERO     WN0042  70       PT Unused Nbr 4
     C                     MOVEL*BLANK    WN0043  1        PT Incl in Prod
     C                     MOVEL*BLANK    WN0044  1        PT Unused Sts 4
     C                     Z-ADD*ZERO     WN0045  60       Job Time
     C                     MOVEL*BLANK    WN0046 10        User Id
     C                     MOVEL*BLANK    WN0047 10        Job Name
     C                     Z-ADD*ZERO     WN0048  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YARDC   1
      *
      * Move key fields to @B2CPMP
     C                     Z-ADDWAAIC3    WFAIC3           Company Number
     C                     Z-ADDWAPFNX    WFPFNX           PT Serial Numbe
     C                     Z-ADDWAAADX    WFAADX           PT Prod Date YY
     C                     Z-ADDWAB9TM    WFB9TM           PT Production T
      *
     C           KLCHSL    KLIST
     C                     KFLD           WFAIC3           Company Number
     C                     KFLD           WFPFNX           PT Serial Numbe
     C                     KFLD           WFAADX           PT Prod Date YY
     C                     KFLD           WFB9TM           PT Production T
     C           KLCHSL    CHAIN@B2CPMP              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'POB2CPL0'MDACP
     C                     MOVEL'@B2CPMP' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL001.
     C                     MOVEL'LBL001'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SLEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SLEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPOB21    YARDCS
      * Move non-key fields to @B2CPMP
     C                     MOVELWUEPAA    WFEPAA    P      PT Producer/Far
     C                     MOVELWUEQAA    WFEQAA    P      PT Producer/Far
     C                     MOVELWUERAA    WFERAA    P      PT Producer/Far
     C                     MOVELWUESAA    WFESAA    P      PT Producer/Far
      *
      * Set PGM.*Record Data Changed flag
     C           QPOB21    IFNE YARDCS
     C           YARDC     ANDNE'N'
     C                     MOVE 'Y'       YARDC
     C                     ENDIF
      * USER: Processing before Data update
      * Set Date/Time Stamp   IF
     C                     Z-ADD##JTM     WFAATM           Job Time
     C                     MOVEL##USR     WFAYNA           User Id
     C                     MOVEL##JOB     WFA0NA           Job Name
     C                     Z-ADD##JDT     WFAXDT           Job Date
      * Set PGM.*Record Data Changed flag
     C           QPOB21    IFNE YARDCS
     C           YARDC     ANDNE'N'
     C                     MOVE 'Y'       YARDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YARDC     IFEQ 'Y'
     C                     UPDAT@B2CPMP                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPOB2CPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         SLEXIT    ENDSR
      /EJECT
     CSR         XCVTA     BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C           XDINYY    SUB  1         XDWK1   80
     C           XDWK1     MULT 365.25    XDAY1   60
     C           XDWK1     IFGE 300
     C                     SUB  2         XDAY1
     C                     ELSE
     C           XDWK1     IFGE 100
     C                     SUB  1         XDAY1
     C                     END
     C                     END
      * (from the beginning of the year to the beginning of the month:)
     C           XDINMM    SUB  1         XDWK1
     C           XDINMM    IFLT 3
      *     ...+31*(MM-1) (for January-February) ...
     C                     MULT 31        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                     MULT 30        XDWK1
     C                     ADD  XDWK1     XDAY1
      *         ...-2 (for preceding February) ...
     C                     SUB  2         XDAY1
     C           XDINYY    IFNE 100
     C           XDINYY    ANDNE300
      *         ...+1 (for preceding February, if leap year) ...
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     ADD  1         XDAY1
     C                     END
     C                     END
     C           XDINMM    IFLT 8
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C           XDINMM    MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C           XDINMM    ADD  1         XDWK1
     C                     MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     END
     C                     END
      * ...+DD (days in the month up to the ending date)
     C                     ADD  XDINDD    XDAY1
      *================================================================
     CSR         XCVTAE    ENDSR
      /EJECT
     CSR         XDOWS     BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                     MOVEAXDCDW     YDOW
     C                     Z-ADD0         XDWSL   10
     C                     Z-ADD1         YY
     C           YY        DOWLE7
     C           YDOW,YY   IFEQ XDSEL
     C                     ADD  1         XDWSL
     C                     END
     C                     ADD  1         YY
     C                     END
      *================================================================
     CSR         XDOWSE    ENDSR
      /EJECT
     CSR         XDUDY     BEGSR
      *================================================================
      * Calculate duration, *DAYS
      *================================================================
     C           XDAY1     IFLT 1
     C           XDAY2     ORLT 1
     C                     Z-ADD0         XDURR
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     GOTO XDUDYE
     C                     END
     C           XDAY1     IFGE XDAY2
      * From date2 to date1
     C                     Z-ADDXDAY2     XABEG   60
     C                     Z-ADDXDAY1     XAEND   60
     C                     ELSE
      * From date1 to date2
     C                     Z-ADDXDAY1     XABEG   60
     C                     Z-ADDXDAY2     XAEND   60
     C                     END
     C           XDWSL     IFEQ 0
      * None days of week selected
     C                     Z-ADD0         XDURR
     C                     GOTO XDUDYC
     C                     END
     C           XAEND     SUB  XABEG     XDURR   80
     C           XDWSL     IFEQ 7
      * All days of week selected
     C                     GOTO XDUDYC
     C                     END
      * Some days of week selected
     C                     DIV  7         XDURR
     C                     MVR            XDLSW   10
     C                     MULT XDWSL     XDURR
     C           XDLSW     IFNE 0
      * Determine day of week of the beginning date
     C           XABEG     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
      * Loop: Increment the date by the last week
     C           XDLSW     DOWGT0
      * Increment the day of week
     C                     ADD  1         YY
     C                     SUB  1         XDLSW
      * Put day of week into the range 1-7
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     END
      * Selected day of the last week has been processed
     C           YDOW,YY   IFEQ XDSEL
      * Increment duration
     C                     ADD  1         XDURR
     C                     END
      * End of loop
     C                     END
     C                     END
     C           XDUDYC    TAG
     C           XDURR     IFEQ 0
      * Return Code: Unable to calculate duration
     C                     MOVEL'Y2U0060' W0RTN   7
     C                     ELSE
     C                     MOVEL*BLANK    W0RTN   7
     C                     END
      *================================================================
     CSR         XDUDYE    ENDSR
      /EJECT
     CSR         XTCEL     BEGSR
      *================================================================
      * Calculate elapsed time from TME2 to TME1
      *================================================================
     C           XTTIM     IFGE XTTIM2
     C                     Z-ADD1         XSGN    10
     C                     Z-ADDXTNN      XTNNL   30
     C                     Z-ADDXTSS      XTSSL   30
     C           XTSSL     IFLT XTSS2
     C                     ADD  60        XTSSL
     C                     SUB  1         XTNNL
     C                     END
     C           XTSSL     SUB  XTSS2     XTSS
     C           XTNNL     IFLT XTNN2
     C                     ADD  60        XTNNL
     C                     SUB  1         XTHH
     C                     END
     C           XTNNL     SUB  XTNN2     XTNN
     C                     SUB  XTHH2     XTHH
     C                     ELSE
     C                     Z-ADD-1        XSGN
     C                     Z-ADDXTNN2     XTNNL
     C                     Z-ADDXTSS2     XTSSL
     C           XTSSL     IFLT XTSS
     C                     ADD  60        XTSSL
     C                     SUB  1         XTNNL
     C                     END
     C           XTSSL     SUB  XTSS      XTSS
     C           XTNNL     IFLT XTNN
     C                     ADD  60        XTNNL
     C                     SUB  1         XTHH2
     C                     END
     C           XTNNL     SUB  XTNN      XTNN
     C           XTHH2     SUB  XTHH      XTHH
     C                     END
      *================================================================
     CSR         XTCELE    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program: Normal
      *================================================================
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAAIC3           Company Number
     C                     Z-ADD*ZERO     WAPFNX           PT Serial Numbe
     C                     Z-ADD*ZERO     WAAADX           PT Prod Date YY
     C                     Z-ADD*ZERO     WAB9TM           PT Production T
     C                     Z-ADD*ZERO     WAADDX           PT Label Date Y
     C                     Z-ADD*ZERO     WAABDX           PT Offset Prod
     C                     Z-ADD*ZERO     WACATM           PT Offset Prod
     C                     Z-ADD*ZERO     WAJOWG           PT Net Weight
     C                     Z-ADD*ZERO     WAJPWG           PT Gross Weight
     C                     Z-ADD*ZERO     WAPGNX           PT Order Number
     C                     Z-ADD*ZERO     WAD7C7           PT Product Code
     C                     Z-ADD*ZERO     WAPHNX           PT Tattoo Numbe
     C                     Z-ADD*ZERO     WAUFNX           PT Item Str Cla
     C                     Z-ADD*ZERO     WAUGNX           PT Item Str Gro
     C                     Z-ADD*ZERO     WAUHNX           PT Item Str Typ
     C                     Z-ADD*ZERO     WAAGDX           PT WIP Dump/Pro
     C                     Z-ADD*ZERO     WACGTM           PT WIP Dump/Pro
     C                     Z-ADD*ZERO     WAUINX           PT From FG Seri
     C                     Z-ADD*ZERO     WAUJNX           PT To FG Serial
     C                     Z-ADD*ZERO     WAUKNX           PT Unused Nbr 3
     C                     Z-ADD*ZERO     WAULNX           PT Unused Nbr 4
     C                     Z-ADD*ZERO     WAAATM           Job Time
     C                     Z-ADD*ZERO     WAAXDT           Job Date
      *
     C           W0ICL     IFEQ 'Y'
      * Initialize array variables
     C                     MOVEA*HIVAL    YK01
      * Initialize last used element number
     C                     Z-ADD0         YL01    50
     C                     Z-ADD1         Y       50
     C                     ENDIF
      *
      *
     C           W0ICL     IFEQ 'Y'
      * Initialize array variables
     C                     MOVEA*HIVAL    YK02
      * Initialize last used element number
     C                     Z-ADD0         YL02    50
     C                     ENDIF
      *
      * Define work field Days
     C                     Z-ADD*ZERO     WUNPNX  50
      * Define work field Address Number 6A
     C                     MOVEL*BLANK    WUE7T1  6
      * Define work field PT Producer/Farm Code 1
     C                     MOVEL*BLANK    WUEPAA  7
      * Define work field PT Producer/Farm Code 2
     C                     MOVEL*BLANK    WUEQAA  7
      * Define work field PT Producer/Farm Code 3
     C                     MOVEL*BLANK    WUERAA  7
      * Define work field PT Producer/Farm Code 4
     C                     MOVEL*BLANK    WUESAA  7
     C                     MOVEL'N'       W0PMT   1
      * Define local variables for subroutine SERVGN.
     C                     MOVEL*BLANK    WL0001  7
     C                     Z-ADD*ZERO     WL0002  60
     C                     Z-ADD*ZERO     WL0003  50
     C                     Z-ADD*ZERO     WL0004  80
     C                     Z-ADD*ZERO     WL0005  60
     C                     Z-ADD*ZERO     WL0006  80
     C                     Z-ADD*ZERO     WL0007  60
      * Define local work field PT Producer/Farm Code
     C                     MOVEL*BLANK    YL0001  7
      * Define null work field PT Producer/Farm Name
     C                     MOVEL*BLANK    YN0001 40
      * Define local work field Address Number 6A
     C                     MOVEL*BLANK    YL0002  6
      * Define local work field PT Offset Prod Date
     C                     Z-ADD*ZERO     YL0003  80
      * Define local work field PT Offset Prod Time
     C                     Z-ADD*ZERO     YL0004  60
      * Define local work field Count USR
     C                     Z-ADD*ZERO     YL0005  50
      * Define local work field Time Difference USR
     C                     Z-ADD*ZERO     YL0006  60
      * Define local work field Time Difference USR
     C                     Z-ADD*ZERO     YL0007  60
      * Define null work field PT Producer/Farm Name
     C                     MOVEL*BLANK    YN0002 40
      * Define local work field PT Offset Prod Date
     C                     Z-ADD*ZERO     YL0008  80
      * Define local work field PT Offset Prod Time
     C                     Z-ADD*ZERO     YL0009  60
      * Define local work field Count USR
     C                     Z-ADD*ZERO     YL0010  50
      * Define local work field Time Difference USR
     C                     Z-ADD*ZERO     YL0011  60
      * Define null work field PT Producer/Farm Name
     C                     MOVEL*BLANK    YN0003 40
      *================================================================
     CSR         ZZEXIT    ENDSR
