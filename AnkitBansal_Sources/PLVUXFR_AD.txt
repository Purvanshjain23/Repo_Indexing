// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PLVUXFR
// ?Date: 14.08.2025 Time: 02:55:34
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?MODIFICATIONS
//?11/02/2020 ISE H16853 - CHANGE BUY ORDER NUMBER FIELD LENGTH FROM 5 TO 7
EXECUTE FUNCTION(Rtv Exc post fromMtechRT) TYPE(RTVOBJ) FILE(PLAECPP)           AB1311975;
PARAMETER(PAR.CC_Company_Number);
PARAMETER(PAR.DSH_Kill_Date);
PARAMETER(PAR.DSD_Delivery_Date);
PARAMETER(PAR.DSD_Delivery_Time);
PARAMETER(PAR.DSD_Delivery_Time_Seq);
PARAMETER(WRK.Record_Found_USR);
{
 //?USER: Initialize routine

 //?Get the MTech Live Yes or No
 DO;

 //?Mtech Live Yes or no
 // Call program Rtv Company Values    XF.
 CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER('MTECHLIVE');
 PARAMETER(WRK.System_Value_Alpha_USR);

 // LCL.MTech Live Yes or No = WRK.System Value Alpha    USR
 LCL.MTech_Live_Yes_or_No = WRK.System_Value_Alpha_USR;

 ENDDO;

 // WRK.First Time Usr = CND.Yes
 WRK.First_Time_Usr = 'Y';

 //?USER: Processing if Data record not found

 // PAR.Record Found USR = CND.Record Not Found
 PAR.Record_Found_USR = 'N';

 //?USER: Process Data record

 CASE;

 // IF LCL.MTech Live Yes or No is Yes MTech is Live
 IF LCL.MTech_Live_Yes_or_No = 'Y';

 //?This rtv is only for the Mtech Live - Yes,
 //?and Internal delivery schedule detail records
 //?that are not posted yet = flag as "N" only
 //?also on the internal selection within this function
 //?only selct records that have no company for this buy order
 //?D=Clear SlotNO| N=Not Posted Yet  |  R=Repost SlotNO
 CASE;

 // IF DB1.DSD HPE Post Status is Not Posted
 IF DB1.DSD_HPE_Post_Status = 'N';

 //?Create BOL, Chg HPE Post Sts
 //?BUY ORDER ONLY AND SEABOARD ONLY
 CASE;

 // IF DB1.BOH Buy Order Number EQ WRK.Zero USR
 IF DB1.BOH_Buy_Order_Number = WRK.Zero_USR;

 // AND DB1.DSD Source Type is Internal
 AND DB1.DSD_Source_Type = 'I';

 // LCL.BOH Company Number = DB1.BOH Company Number
 LCL.BOH_Company_Number = DB1.BOH_Company_Number;

 // LCL.BOH Buy Order Number = DB1.BOH Buy Order Number
 LCL.BOH_Buy_Order_Number = DB1.BOH_Buy_Order_Number;

 // LCL.BOL Load Number = DB1.BOL Load Number
 LCL.BOL_Load_Number = DB1.BOL_Load_Number;

 // Call program ZZt BOH/BOL f/DSchMTechXF.
 CALL PROGRAM(ZZt BOH/BOL f/DSchMTechXF) ('PLSQXFR');
 PARAMETER(DB1.CC_Company_Number);
 PARAMETER(DB1.DSH_Kill_Date);
 PARAMETER(DB1.DSD_Delivery_Date);
 PARAMETER(DB1.DSD_Delivery_Time);
 PARAMETER(DB1.DSD_Scheduled_Delv_Head);
 PARAMETER(DB1.DSD_Movement_Number);
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(DB1.PL_Location_Code);
 PARAMETER(LCL.BOH_Company_Number);
 PARAMETER(LCL.BOH_Buy_Order_Number);
 PARAMETER(LCL.BOL_Load_Number);
 PARAMETER('Y');

 EXECUTE FUNCTION(Chg Delv Sched DtlBOL CH) TYPE(CHGOBJ) FILE(PLAECPP)           AB1321642;
 PARAMETER(DB1.CC_Company_Number);
 PARAMETER(DB1.DSH_Kill_Date);
 PARAMETER(DB1.DSD_Delivery_Date);
 PARAMETER(DB1.DSD_Delivery_Time);
 PARAMETER(DB1.DSD_Delivery_Time_Seq);
 PARAMETER('P');
 PARAMETER(LCL.BOH_Company_Number);
 PARAMETER(LCL.BOH_Buy_Order_Number);
 PARAMETER(LCL.BOL_Load_Number);
 PARAMETER(DB1.DSD_PRD_Srv_Batch_ID);
 PARAMETER(DB1.DSD_PRD_Srv_Sched_ID);
 PARAMETER(DB1.DSD_Ref_1);
 PARAMETER(DB1.DSD_Ref_2);
 PARAMETER(DB1.DSD_Ref_Status);
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

 ENDIF;

 ENDIF;

 ENDIF;

}


