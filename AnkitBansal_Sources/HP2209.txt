      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     Datamart BUD: Update Current Dates in Data Area
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     08/11/04
      *
      *              AS the first step of each Datamart Budget build, we will
      *              1) calculate new 'current' beginning and ending dates for processing
      *              2) calculate ending date for this run (ie: the Thru Date)
      *              3) update the DABUD data area with these new dates
      *              4) pass the week-beginning date back out to the build CLP
      *
      *              The calculation is made as follows:
      *              1) Find the first Saturday previous to the system date.
      *                 (If system date is a Saturday, use it.)
      *              2) Go back XXX days from this Saturday date using the DAYS value
      *                 in data area DABUD. This will give you the
      *                 Saturday week-ending date to be used for 'current' processing.
      *                 If this date is not a Saturday (it will be if we set XXX days
      *                 in the data area to be a multiple of 7), get the previous
      *                 Saturday.
      *              3) Subtract 6 days from this week-ending date to get the
      *                 beginning date for 'current' processing.
      *              4) Update the data area DABUD with these new 'current' dates.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
      *
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Parm fields
      *
     D xxname          s              9
     D xxabbrev        s              4
     D xxsatdt         s              8  0
      *
     D xxcurbegdt      s              8  0
      *
      *
      * Workfields for date manipulation
      *
     D wkcymdiso       s               D   datfmt(*iso)
     D wksysdt         s              8  0
     D wksatdt         s              8  0
     D wkwedt          s              8  0
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Definition for external data area DABUD
      *---------------------------------------------------------------
     D
     Ddabud           uds
     D  dacwkbegdt            36     43  0
     D  dacwkenddt            45     52  0
     D  dadays                61     63  0
     D  dathrudt              77     84  0
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
      * Put system date into a workfield in CCYYMMDD format
      *
     C     *mdy          movel     udate         wkcymdiso
     C                   movel     wkcymdiso     wksysdt
      *
      * Determine if the system date is a Saturday.
      *
     C                   call      'HP8005'
     C                   parm                    wksysdt
     C                   parm      *blank        xxname
     C                   parm      *blank        xxabbrev
      *
      * If the system date is not a Saturday, then find the previous Saturday.
      *
     C                   if        xxabbrev = 'Sat '                            If Saturday
     C                   z-add     wksysdt       wksatdt
     C                   else
     C                   call      'HPSAT'
     C                   parm                    wksysdt
     C     wksatdt       parm                    xxsatdt
     C                   endif                                                  If Saturday
      *
      * You now have the most recent Saturday date, put this in the THRU DATE.
      *
     C                   z-add     wksatdt       dathrudt
      *
      * Next, subtract the number of 'current days' in the data area from this
      * Saturday date. This date will be your week-ending date.
      *
     C     *iso          movel     wksatdt       wkcymdiso
     C     wkcymdiso     subdur    dadays:*d     wkcymdiso
     C                   movel     wkcymdiso     wkwedt
      *
      * Verify that the date you just calculated is a Saturday. If it is not,
      * find the first Saturday that is previous to this date.
      *
     C                   call      'HP8005'
     C                   parm                    wkwedt
     C                   parm      *blank        xxname
     C                   parm      *blank        xxabbrev
      *
     C                   if        xxabbrev = 'Sat '                            If Saturday
     C                   z-add     wkwedt        dacwkenddt
     C                   else
     C                   call      'HPSAT'
     C                   parm                    wkwedt
     C     dacwkenddt    parm                    xxsatdt
     C                   endif                                                  If Saturday
      *
      * Now, find the 'beginning' date that goes with this week-ending date.
      * It is the date that is six days earlier.
      *
     C     *iso          movel     dacwkenddt    wkcymdiso
     C     wkcymdiso     subdur    6:*d          wkcymdiso
     C                   movel     wkcymdiso     dacwkbegdt
      *
      *
      * Send 'current beginning date' back to calling program
      *
     C                   z-add     dacwkbegdt    xxcurbegdt
      *
     C                   seton                                        lr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
     C     *entry        plist
     C                   parm                    xxcurbegdt
      *
     C                   endsr
      /eject
