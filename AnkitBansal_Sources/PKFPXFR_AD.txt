// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKFPXFR
// ?Date: 14.08.2025 Time: 02:51:34
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Modifications and Comments
DO;

//?H16853 ISE 11/02/20 - Increased the Buy Order Number field
//? length from 5 to 7.
ENDDO;

//?Routine to delete any D/A's
//?*** Read TH same lf as 'clc tattoo dadd/nt rt'
//?and do the deletes and chg hdr totals there
EXECUTE FUNCTION(Rtv Tattoo Dadd/nt ch RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1186283;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.BOH_Buy_Order_Number);
PARAMETER(PAR.BOL_Load_Number);
{
 //?USER: Initialize routine

 EXECUTE FUNCTION(C2292 BOL 0 OUT ALL TATTO) TYPE(EXCINTFUN)                     AB1191018;
 {
  //?Execute internal function

  //?01/24/97   SLM     Process by Buy Order Load in the payment
  //?                   section was read by co kill date then bol
  //?                   On break by buyorder load the program was
  //?                   reading all of the tattoos and zero out even
  //?                   if paid.
  //?                   Chg log file in order by co,bol,ttt,pd,kd
  //?                   company buy order, load, tattoo, purchase
  //?                   date, kill date
  //?                   Also change zero out the tattoo header
  //?                   on paid tattoo's do this only on unpaid
  //?                   tattoo's
 }

 //?USER: Process Data record

 //?PK0044 -- added Th Commission status to TH Chgobj
 CASE;

 // IF DB1.TH Payment Sts is Paid Anything
 IF DB1.TH_Payment_Sts = 'PL'/'PC'/'NC'/'NL';

 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Set Live Gross and Payment Gross to Zeros and all net's to zero
 DO;

 // WRK.TH Live Gross Amt = CON.*ZERO
 WRK.TH_Live_Gross_Amt = *ZERO;

 // WRK.TH Payment Gross = CON.*ZERO
 WRK.TH_Payment_Gross = *ZERO;

 // WRK.Th Payment Net Amt = CON.*ZERO
 WRK.Th_Payment_Net_Amt = *ZERO;

 // WRK.TH LIve Net Amt = CON.*ZERO
 WRK.TH_LIve_Net_Amt = *ZERO;

 // WRK.TH Carcass Net Amt = CON.*ZERO
 WRK.TH_Carcass_Net_Amt = *ZERO;

 // WRK.TH Total Net WO Adds = CON.*ZERO
 WRK.TH_Total_Net_WO_Adds = *ZERO;

 // WRK.TH Accrual Amount = CON.*ZERO
 WRK.TH_Accrual_Amount = *ZERO;

 ENDDO;

 // WRK.TH Calc Net Sts = CND.Calculated
 WRK.TH_Calc_Net_Sts = 'C';

 // WRK.TH Commission Status = CND.No Commission on tattoo
 WRK.TH_Commission_Status = *BLANK;

 EXECUTE FUNCTION(Dlt Tattoo Ded/Add    RT) TYPE(RTVOBJ) FILE(PKCDCPP)           AB1143415;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Delete Tattoo Deduction) TYPE(DLTOBJ) FILE(PKCDCPP)            AB1107819;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(DB1.DED_D_A_Code);
 }

 EXECUTE FUNCTION(Rtv Tattoo Hdr Totls RT) TYPE(RTVOBJ) FILE(PKCDCPP)            AB1143322;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(WRK.TH_Deduction_Amt);
 PARAMETER(WRK.TH_Additions_Amt);
 PARAMETER(WRK.TH_Accrual_Amount);
 PARAMETER('Y');
 PARAMETER(WRK.Freight_Tot_Ded_Add_Exp);
 {
  //?USER: Initialize routine

  // PAR.TH Deduction Amt = CON.*ZERO
  PAR.TH_Deduction_Amt = *ZERO;

  // PAR.TH Additions Amt = CON.*ZERO
  PAR.TH_Additions_Amt = *ZERO;

  // PAR.TH Accrual Amount = CON.*ZERO
  PAR.TH_Accrual_Amount = *ZERO;

  // PAR.Freight Tot Ded/Add Exp = CON.*ZERO
  PAR.Freight_Tot_Ded_Add_Exp = *ZERO;

  //?USER: Process Data record

  CASE;

  // IF PAR.@Status Include Dead Hd is No, dont include Dead Hd
  IF PAR.@Status_Include_Dead_Hd = 'N';

  // AND DB1.THD UOM is Dead Head UOM
  AND DB1.THD_UOM = 'CH'/'DH'/'DY'/'YH'/'KH';

  // IF *OTHERWISE
  IF *OTHERWISE;

  CASE;

  // IF DB1.THD Expense Paid by is Producer
  IF DB1.THD_Expense_Paid_by = 'P';

  CASE;

  // IF DB1.THD Unit Amt Sign is Add
  IF DB1.THD_Unit_Amt_Sign = '+';

  // PAR.TH Additions Amt = PAR.TH Additions Amt + DB1.THD Ded/Add Amount
  PAR.TH_Additions_Amt = PAR.TH_Additions_Amt + DB1.THD_Ded_Add_Amount;

  // IF *OTHERWISE
  IF *OTHERWISE;

  // PAR.TH Deduction Amt = PAR.TH Deduction Amt + DB1.THD Ded/Add Amount
  PAR.TH_Deduction_Amt = PAR.TH_Deduction_Amt + DB1.THD_Ded_Add_Amount;

  ENDIF;

  // IF DB1.THD Expense Paid by is Seaboard
  IF DB1.THD_Expense_Paid_by = 'S';

  CASE;

  // IF DB1.THD Expense Type is Freight
  IF DB1.THD_Expense_Type = 'F';

  CASE;

  // IF DB1.THD Unit Amt Sign is Add
  IF DB1.THD_Unit_Amt_Sign = '+';

  // PAR.Freight Tot Ded/Add Exp = PAR.Freight Tot Ded/Add Exp + DB1.THD Ded/Add Amou
  PAR.Freight_Tot_Ded_Add_Exp = PAR.Freight_Tot_Ded_Add_Exp + DB1.THD_Ded_Add_Amount;

  // IF *OTHERWISE
  IF *OTHERWISE;

  // PAR.Freight Tot Ded/Add Exp = PAR.Freight Tot Ded/Add Exp - DB1.THD Ded/Add Amou
  PAR.Freight_Tot_Ded_Add_Exp = PAR.Freight_Tot_Ded_Add_Exp - DB1.THD_Ded_Add_Amount;

  ENDIF;

  // IF DB1.THD Expense Type is Other
  IF DB1.THD_Expense_Type = 'O';

  CASE;

  // IF DB1.THD Unit Amt Sign is Add
  IF DB1.THD_Unit_Amt_Sign = '+';

  // PAR.TH Accrual Amount = PAR.TH Accrual Amount + DB1.THD Ded/Add Amount
  PAR.TH_Accrual_Amount = PAR.TH_Accrual_Amount + DB1.THD_Ded_Add_Amount;

  // IF *OTHERWISE
  IF *OTHERWISE;

  // PAR.TH Accrual Amount = PAR.TH Accrual Amount - DB1.THD Ded/Add Amount
  PAR.TH_Accrual_Amount = PAR.TH_Accrual_Amount - DB1.THD_Ded_Add_Amount;

  ENDIF;

  ENDIF;

  ENDIF;

  ENDIF;

 }

 EXECUTE FUNCTION(Chg Tto Ded/Add/Net/CmCH) TYPE(CHGOBJ) FILE(PKA1CPP)           AB1213108;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(WRK.TH_Live_Gross_Amt);
 PARAMETER(WRK.TH_LIve_Net_Amt);
 PARAMETER(WRK.TH_Deduction_Amt);
 PARAMETER(WRK.TH_Total_Net_WO_Adds);
 PARAMETER(WRK.TH_Carcass_Net_Amt);
 PARAMETER(WRK.TH_Additions_Amt);
 PARAMETER(WRK.TH_Payment_Gross);
 PARAMETER(WRK.Th_Payment_Net_Amt);
 PARAMETER(WRK.TH_Accrual_Amount);
 PARAMETER(DB1.TH_Calc_Net_Sts);
 PARAMETER(DB1.TH_Payment_Type);
 PARAMETER(WRK.TH_Commission_Status);
 PARAMETER(JOB.*USER);
 PARAMETER(JOB.*Job_date);
 PARAMETER(JOB.*Job_time);
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(JOB.*JOB);
 PARAMETER(JOB.*PROGRAM);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

 ENDIF;

}


