// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PLOWXFR
// ?Date: 14.08.2025 Time: 02:54:56
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?MODIFICATIONS
//?11/02/2020 ISE H16853 - CHANGE BUY ORDER NUMBER FIELD LENGTH FROM 5 TO 7
//?Read the Scheduling -- by buy order load
EXECUTE FUNCTION(RTV MoveTimeByBol     RT) TYPE(RTVOBJ) FILE(PLAECPP)           AB1296611;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.BOH_Buy_Order_Number);
PARAMETER(PAR.BOL_Load_Number);
PARAMETER(PAR.BOL_Kill_Date);
PARAMETER(PAR.BOL_Pln_Delv_Start_Time);
PARAMETER(PAR.BOL_Pln_Delv_Date);
PARAMETER(PAR.Delivery_Date_New_Usr);
PARAMETER(PAR.Delivery_Time_New_Usr);
PARAMETER(WRK.Delivery_Time_Seq_New_Usr);
{
 //?USER: Process Data record

 // Call program Rtv Val DelvDt/Tim    XF.
 CALL PROGRAM(Rtv Val DelvDt/Tim    XF) ('PLORXFR');
 PARAMETER(DB1.CC_Company_Number);
 PARAMETER(DB1.DSH_Kill_Date);
 PARAMETER(PAR.Delivery_Date_New_Usr);
 PARAMETER(PAR.Delivery_Time_New_Usr);
 PARAMETER(LCL.Delivery_Time_Seq_New_Usr);

 // LCL.DSD Scheduled Hour = PAR.Delivery Time New Usr / CON.100 *
 LCL.DSD_Scheduled_Hour = PAR.Delivery_Time_New_Usr / 100;

 //?Create new record
 EXECUTE FUNCTION(Crt Delv Sched Dtl    CR) TYPE(CRTOBJ) FILE(PLAECPP)           AB1244727;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.DSH_Kill_Date);
 PARAMETER(PAR.Delivery_Date_New_Usr);
 PARAMETER(PAR.Delivery_Time_New_Usr);
 PARAMETER(LCL.Delivery_Time_Seq_New_Usr);
 PARAMETER(LCL.DSD_Scheduled_Hour);
 PARAMETER(DB1.DSD_Farm_Site_Code);
 PARAMETER(DB1.DSD_Building);
 PARAMETER(DB1.DSD_Room);
 PARAMETER(DB1.DSD_Sire_Line_Code);
 PARAMETER(DB1.DSD_Hog_Group_Code);
 PARAMETER(DB1.DSD_Unused_Head);
 PARAMETER(DB1.DSD_Scheduled_Delv_Head);
 PARAMETER(DB1.DSD_Scheduled_Kill_Head);
 PARAMETER(DB1.DSD_Transportation_Office);
 PARAMETER(DB1.DSD_Trucker_Code_HPS);
 PARAMETER(DB1.DSD_Driver);
 PARAMETER(DB1.DSD_Loading_Crew);
 PARAMETER(DB1.CHR_Code);
 PARAMETER(DB1.DSD_Load_Type);
 PARAMETER(DB1.DSD_Full_Split_Load);
 PARAMETER(DB1.DSD_Movement_Number);
 PARAMETER(DB1.DSD_Truck_ID);
 PARAMETER(DB1.DSD_Trailer_ID);
 PARAMETER(DB1.DSD_Movement_Printed);
 PARAMETER(DB1.DSD_Sched_Route_Start_Pnt);
 PARAMETER(DB1.DSD_Sched_Route_Start_Dte);
 PARAMETER(DB1.DSD_Sched_Route_Start_Tim);
 PARAMETER(DB1.DSD_Sch_Farm_Arrival_Date);
 PARAMETER(DB1.DSD_Sch_Farm_Arrival_Time);
 PARAMETER(DB1.DSD_Sch_Start_Load_Date);
 PARAMETER(DB1.DSD_Sch_Start_Load_Time);
 PARAMETER(DB1.DSD_Receiving_Shift);
 PARAMETER(DB1.DSD_Kill_Shift);
 PARAMETER(DB1.DSD_BOL_Kill_Shift);
 PARAMETER(DB1.DSD_HPS_Post_Status);
 PARAMETER(DB1.DSD_HPE_Post_Status);
 PARAMETER(DB1.DSD_Lock_Status);
 PARAMETER(DB1.DSD_Source_Type);
 PARAMETER(DB1.DSD_Transfer_Sts);
 PARAMETER(DB1.DSD_Unused_Date);
 PARAMETER(DB1.DSD_Unused_Time);
 PARAMETER(DB1.SR_Source_Code);
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(DB1.PL_Location_Code);
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(PAR.BOH_Buy_Order_Number);
 PARAMETER(PAR.BOL_Load_Number);
 PARAMETER(DB1.DSD_PRD_Srv_Batch_ID);
 PARAMETER(DB1.DSD_PRD_Srv_Sched_ID);
 PARAMETER(DB1.DSD_Ref_1);
 PARAMETER(DB1.DSD_Ref_2);
 PARAMETER(DB1.DSD_Ref_Status);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?Execute internal function

   // PAR.RS Record Status = CND.Active
   PAR.RS_Record_Status = 'A';

   // PAR.RS User Added = JOB.*USER
   PAR.RS_User_Added = JOB.*USER;

   // PAR.RS Date Added = JOB.*Job date
   PAR.RS_Date_Added = JOB.*Job_date;

   // PAR.RS Time Added = JOB.*Job time
   PAR.RS_Time_Added = JOB.*Job_time;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

  }

 }

 // PAR.Delivery Time Seq New Usr = LCL.Delivery Time Seq New Usr
 PAR.Delivery_Time_Seq_New_Usr = LCL.Delivery_Time_Seq_New_Usr;

 CASE;

 // IF DB1.DSD Full/Split Load is Split
 IF DB1.DSD_Full_Split_Load = 'S';

 EXECUTE FUNCTION(Rtv Crt f/Delv        RT) TYPE(RTVOBJ) FILE(PLAGCPP)           AB1296090;
 PARAMETER(DB1.CC_Company_Number);
 PARAMETER(DB1.DSH_Kill_Date);
 PARAMETER(DB1.DSD_Delivery_Date);
 PARAMETER(DB1.DSD_Delivery_Time);
 PARAMETER(DB1.DSD_Delivery_Time_Seq);
 PARAMETER(PAR.Delivery_Date_New_Usr);
 PARAMETER(PAR.Delivery_Time_New_Usr);
 PARAMETER(LCL.Delivery_Time_Seq_New_Usr);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Del Delv Sched Split  DL) TYPE(DLTOBJ) FILE(PLAGCPP)           AB1244778;
  PARAMETER(DB1.CC_Company_Number);
  PARAMETER(DB1.DSH_Kill_Date);
  PARAMETER(DB1.DSD_Delivery_Date);
  PARAMETER(DB1.DSD_Delivery_Time);
  PARAMETER(DB1.DSD_Delivery_Time_Seq);
  PARAMETER(DB1.DSS_Split_Sequence);
  EXECUTE FUNCTION(Crt Delv Sched Split  CR) TYPE(CRTOBJ) FILE(PLAGCPP)           AB1244776;
  PARAMETER(DB1.CC_Company_Number);
  PARAMETER(DB1.DSH_Kill_Date);
  PARAMETER(PAR.Delivery_Date_New_Usr);
  PARAMETER(PAR.Delivery_Time_New_Usr);
  PARAMETER(PAR.Delivery_Time_Seq_New_Usr);
  PARAMETER(DB1.DSS_Split_Sequence);
  PARAMETER(DB1.DSS_Building);
  PARAMETER(DB1.DSS_Room);
  PARAMETER(DB1.DSS_Sire_Line_Code);
  PARAMETER(DB1.DSS_Hog_Group_Code);
  PARAMETER(DB1.DSS_Scheduled_Head);
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

 }

 ENDIF;

 EXECUTE FUNCTION(Rtv Chg for f/DelvTimeRT) TYPE(RTVOBJ) FILE(PLAKCPP)           AB1296094;
 PARAMETER(DB1.CC_Company_Number);
 PARAMETER(DB1.DSH_Kill_Date);
 PARAMETER(DB1.DSD_Delivery_Date);
 PARAMETER(DB1.DSD_Delivery_Time);
 PARAMETER(DB1.DSD_Delivery_Time_Seq);
 PARAMETER(PAR.Delivery_Date_New_Usr);
 PARAMETER(PAR.Delivery_Time_New_Usr);
 PARAMETER(LCL.Delivery_Time_Seq_New_Usr);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Del Delivery Sched Cm DL) TYPE(DLTOBJ) FILE(PLAKCPP)           AB1244987;
  PARAMETER(DB1.CC_Company_Number);
  PARAMETER(DB1.DSH_Kill_Date);
  PARAMETER(DB1.DSD_Delivery_Date);
  PARAMETER(DB1.DSD_Delivery_Time);
  PARAMETER(DB1.DSD_Delivery_Time_Seq);
  PARAMETER(DB1.DSC_Line_Number);
  EXECUTE FUNCTION(Crt Delivery Sched Cm CR) TYPE(CRTOBJ) FILE(PLAKCPP)           AB1244985;
  PARAMETER(DB1.CC_Company_Number);
  PARAMETER(DB1.DSH_Kill_Date);
  PARAMETER(PAR.Delivery_Date_New_Usr);
  PARAMETER(PAR.Delivery_Time_New_Usr);
  PARAMETER(PAR.Delivery_Time_Seq_New_Usr);
  PARAMETER(DB1.DSC_Line_Number);
  PARAMETER(DB1.DSC_Comment);
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

 }

 //?clear out the old record
 EXECUTE FUNCTION(Chg Clear Slot EXT   CH) TYPE(CHGOBJ) FILE(PLAECPP)            AB1251029;
 PARAMETER(DB1.CC_Company_Number);
 PARAMETER(DB1.DSH_Kill_Date);
 PARAMETER(DB1.DSD_Delivery_Date);
 PARAMETER(DB1.DSD_Delivery_Time);
 PARAMETER(DB1.DSD_Delivery_Time_Seq);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(DB1.DSD_Load_Type);
 PARAMETER('F');
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER('N');
 PARAMETER(WRK.Blank_Usr_1_fld_Usr);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('N');
 PARAMETER('N');
 PARAMETER('O');
 PARAMETER(WRK.Blank_Usr_2);
 PARAMETER(WRK.Blank_Usr_1_fld_Usr);
 PARAMETER(DB1.DSD_Unused_Date);
 PARAMETER(DB1.DSD_Unused_Time);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

 QUIT;

}


//?Read the delivery tracking by buy order load
EXECUTE FUNCTION(RTV MoveTimeByBol     RT) TYPE(RTVOBJ) FILE(PLAFCPP)           AB1296619;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.BOH_Buy_Order_Number);
PARAMETER(PAR.BOL_Load_Number);
PARAMETER(PAR.BOL_Kill_Date);
PARAMETER(PAR.BOL_Pln_Delv_Start_Time);
PARAMETER(PAR.BOL_Pln_Delv_Date);
PARAMETER(PAR.Delivery_Date_New_Usr);
PARAMETER(PAR.Delivery_Time_New_Usr);
PARAMETER(WRK.Delivery_Time_Seq_New_Usr);
{
 //?USER: Process Data record

 // LCL.DT Scheduled Hour = PAR.Delivery Time New Usr / CON.100 *
 LCL.DT_Scheduled_Hour = PAR.Delivery_Time_New_Usr / 100;

 // LCL.DT Delivery Initiation = DB1.DT Delivery Initiation
 LCL.DT_Delivery_Initiation = DB1.DT_Delivery_Initiation;

 EXECUTE FUNCTION(Crt Delivery Tracking CR) TYPE(CRTOBJ) FILE(PLAFCPP)           AB1244756;
 PARAMETER(DB1.CC_Company_Number);
 PARAMETER(DB1.DSH_Kill_Date);
 PARAMETER(PAR.Delivery_Date_New_Usr);
 PARAMETER(PAR.Delivery_Time_New_Usr);
 PARAMETER(PAR.Delivery_Time_Seq_New_Usr);
 PARAMETER(DB1.DT_Actual_Kill_Date);
 PARAMETER(DB1.DT_Actual_Delivery_Hour);
 PARAMETER(LCL.DT_Scheduled_Hour);
 PARAMETER(DB1.DT_Delivery_Initiation);
 PARAMETER(DB1.DT_Farm_Site_Code);
 PARAMETER(DB1.DT_Building);
 PARAMETER(DB1.DT_Room);
 PARAMETER(DB1.DT_Sire_Line_Code);
 PARAMETER(DB1.DT_Hog_Group_Reference);
 PARAMETER(DB1.DT_Delivered_Head);
 PARAMETER(DB1.DT_Delivered_Weight_lbs);
 PARAMETER(DB1.DT_Trucker_Code_HPS);
 PARAMETER(DB1.DT_Driver);
 PARAMETER(DB1.DT_Loading_Crew);
 PARAMETER(DB1.CHR_Code);
 PARAMETER(DB1.DT_Load_Type);
 PARAMETER(DB1.DT_Full_Split_Load);
 PARAMETER(DB1.DT_Movement_Number);
 PARAMETER(DB1.DT_Truck_ID);
 PARAMETER(DB1.DT_Trailer_ID);
 PARAMETER(DB1.DT_Transportation_Office);
 PARAMETER(DB1.DT_Transprtn_Office_Date);
 PARAMETER(DB1.DT_Transprtn_Office_Time);
 PARAMETER(DB1.DT_Arrive@Frm_v_StartLd);
 PARAMETER(DB1.DT_On_Time_Farm_Arrvl_Sts);
 PARAMETER(DB1.DT_Route_Start_Pnt);
 PARAMETER(DB1.DT_Route_Start_Date);
 PARAMETER(DB1.DT_Route_Start_Time);
 PARAMETER(DB1.DT_Route_Start_Variance);
 PARAMETER(DB1.DT_Wait_@_Transp_Offc_Tm);
 PARAMETER(DB1.DT_Arrive_@_Farm_Date);
 PARAMETER(DB1.DT_Arrive_@_Farm_Time);
 PARAMETER(DB1.DT_Drive_Time_To_Farm);
 PARAMETER(DB1.DT_Start_Loading_Date);
 PARAMETER(DB1.DT_Start_Loading_Time);
 PARAMETER(DB1.DT_Start_Loading_Variance);
 PARAMETER(DB1.DT_Wait_@_Farm);
 PARAMETER(DB1.DT_Frm_End_Loading_Date);
 PARAMETER(DB1.DT_Frm_End_Loading_Time);
 PARAMETER(DB1.DT_Load_Time);
 PARAMETER(DB1.DT_Leave_Farm_Date);
 PARAMETER(DB1.DT_Leave_Farm_Time);
 PARAMETER(DB1.DT_Wait_Depart_Frm);
 PARAMETER(DB1.DT_Plt_TrkWsh_Arvl_Date);
 PARAMETER(DB1.DT_Plt_TrkWsh_Arvl_Time);
 PARAMETER(DB1.DT_Arrive_@_Plant_Date);
 PARAMETER(DB1.DT_Arrive_@_Plant_Time);
 PARAMETER(DB1.DT_Wait_@_TrkWsh);
 PARAMETER(DB1.DT_Drive_Time_To_Plant);
 PARAMETER(DB1.DT_Delv_Time_Variance);
 PARAMETER(DB1.DT_On_Time_Delivery);
 PARAMETER(DB1.Delivery_Reason_Code);
 PARAMETER(DB1.DT_TrkScl_Weigh_In_Date);
 PARAMETER(DB1.DT_TrkScl_Weigh_In_Time);
 PARAMETER(DB1.DT_Wait_@_TrkScl);
 PARAMETER(DB1.DT_To_Recv_Dock_Date);
 PARAMETER(DB1.DT_To_Recv_Dock_Time);
 PARAMETER(DB1.DT_Wait_Rcv_Dock);
 PARAMETER(DB1.DT_Start_Unloading_Date);
 PARAMETER(DB1.DT_Start_Unloading_Time);
 PARAMETER(DB1.DT_Wait_@_Rcv_Dock);
 PARAMETER(DB1.DT_End_Unload_Date);
 PARAMETER(DB1.DT_End_Unload_Time);
 PARAMETER(DB1.DT_Unload_Time);
 PARAMETER(DB1.DT_Unload_Variance_Time);
 PARAMETER(DB1.DT_TrkScl_Weigh_Out_Date);
 PARAMETER(DB1.DT_TrkScl_Weigh_Out_Time);
 PARAMETER(DB1.DT_Wait_Time_@_the_Plant);
 PARAMETER(DB1.DT_Formula_Wait_Tm_@_Plt);
 PARAMETER(DB1.DT_Source_Type);
 PARAMETER(DB1.DT_GATE_UPDATE_YES);
 PARAMETER(DB1.DT_Unused_Date);
 PARAMETER(DB1.DT_Unused_Time);
 PARAMETER(DB1.DT_Unused_Wait_Time);
 PARAMETER(DB1.DSD_Scheduled_Delv_Head);
 PARAMETER(DB1.DT_Head_Received);
 PARAMETER(DB1.DT_Weight_Received);
 PARAMETER(DB1.DT_Avg_Weight_Received);
 PARAMETER(DB1.DT_Head_DOA);
 PARAMETER(DB1.DT_Weight_DOA);
 PARAMETER(DB1.DT_Head_Yard_Dead);
 PARAMETER(DB1.DT_Weight_Yard_Dead);
 PARAMETER(DB1.DT_Head_Condemned);
 PARAMETER(DB1.DT_Weight_Condemned);
 PARAMETER(DB1.DT_Head_Held_Over);
 PARAMETER(DB1.DT_Weight_Held_Over);
 PARAMETER(DB1.DT_Head_Killed);
 PARAMETER(DB1.DT_Weight_Killed);
 PARAMETER(DB1.DT_Head_Market);
 PARAMETER(DB1.DT_Weight_Market);
 PARAMETER(DB1.DT_Avg_Weight_Market);
 PARAMETER(DB1.DT_Head_Resale);
 PARAMETER(DB1.DT_Weight_Resale);
 PARAMETER(DB1.DT_Avg_Weight_Resale);
 PARAMETER(DB1.DT_Head_Unused_1);
 PARAMETER(DB1.DT_Weight_Unused_1);
 PARAMETER(DB1.DT_Head_Unused_2);
 PARAMETER(DB1.DT_Weight_Unused_2);
 PARAMETER(DB1.DT_Error_Sts);
 PARAMETER(DB1.DT_Error_Reason);
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(DB1.PL_Location_Code);
 PARAMETER(DB1.SR_Source_Code);
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?Execute internal function

   // PAR.RS Record Status = CND.Active
   PAR.RS_Record_Status = 'A';

   // PAR.RS User Added = JOB.*USER
   PAR.RS_User_Added = JOB.*USER;

   // PAR.RS Date Added = JOB.*Job date
   PAR.RS_Date_Added = JOB.*Job_date;

   // PAR.RS Time Added = JOB.*Job time
   PAR.RS_Time_Added = JOB.*Job_time;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

  }

  //?USER: Processing if Data record already exists

  // PGM.*Return code = CND.*Normal
  PGM.*Return_code = *BLANK;

  //?USER: Processing after Data update

  EXECUTE FUNCTION(Upd Farm, Movement    RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1251472;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(PAR.DT_Movement_Number);
  PARAMETER(PAR.DT_Farm_Site_Code);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.TH HPS Farm Site NE PAR.TH HPS Farm Site
   IF DB1.TH_HPS_Farm_Site <> PAR.TH_HPS_Farm_Site;

   CASE;

   // IF DB1.TH Source Type is Internal
   IF DB1.TH_Source_Type = 'I';

   //?Due to test with e2423 SAW that we were change the
   //?movement and farm site and not the state code
   //?use this retrieve regardless of Not Live Or Live with MTech
   // Call program Rtv HPS Farm Inf-Mtech UP.
   CALL PROGRAM(Rtv HPS Farm Inf-Mtech UP) ('HP293');
   PARAMETER(PGM.*Return_code);
   PARAMETER(NLL.Farm_site_Name_f_HPS_USR);
   PARAMETER(PAR.TH_HPS_Farm_Site);
   PARAMETER(NLL.HPS_FS_Comp_Relation_USR);
   PARAMETER(WRK.State);
   PARAMETER(NLL.HPS_Farm_County);
   PARAMETER(NLL.HPS_Cell_Manager_Code_USR);
   PARAMETER(NLL.HPS_Cell_Manager_Nm_USR);
   PARAMETER(NLL.MTech_Farm_Site_Ref);
   PARAMETER(NLL.MTech_Cell_Manager_Ref);

   EXECUTE FUNCTION(Chg Farm, Movement    CH) TYPE(CHGOBJ) FILE(PKA1CPP)           AB1251473;
   PARAMETER(DB1.BOH_Company_Number);
   PARAMETER(DB1.BOH_Buy_Order_Number);
   PARAMETER(DB1.BOL_Load_Number);
   PARAMETER(DB1.TH_Tattoo_Number);
   PARAMETER(DB1.TH_Kill_Date);
   PARAMETER(PAR.TH_HPS_Movement_Ref_#);
   PARAMETER(WRK.State);
   PARAMETER(PAR.TH_HPS_Farm_Site);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
    PARAMETER(DB1.RS_User_Changed);
    PARAMETER(DB1.RS_Date_Changed);
    PARAMETER(DB1.RS_Time_Changed);
    PARAMETER(DB1.RS_Job);
    PARAMETER(DB1.RS_Program);
    {
     //?Execute internal function

     // PAR.RS User Changed = JOB.*USER
     PAR.RS_User_Changed = JOB.*USER;

     // PAR.RS Date Changed = JOB.*Job date
     PAR.RS_Date_Changed = JOB.*Job_date;

     // PAR.RS Time Changed = JOB.*Job time
     PAR.RS_Time_Changed = JOB.*Job_time;

     // PAR.RS Job = JOB.*JOB
     PAR.RS_Job = JOB.*JOB;

     // PAR.RS Program = JOB.*PROGRAM
     PAR.RS_Program = JOB.*PROGRAM;

    }

   }

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(Chg Farm, Movement    CH) TYPE(CHGOBJ) FILE(PKA1CPP)           AB1251473;
   PARAMETER(DB1.BOH_Company_Number);
   PARAMETER(DB1.BOH_Buy_Order_Number);
   PARAMETER(DB1.BOL_Load_Number);
   PARAMETER(DB1.TH_Tattoo_Number);
   PARAMETER(DB1.TH_Kill_Date);
   PARAMETER(PAR.TH_HPS_Movement_Ref_#);
   PARAMETER(DB1.TH_State);
   PARAMETER(PAR.TH_HPS_Farm_Site);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
    PARAMETER(DB1.RS_User_Changed);
    PARAMETER(DB1.RS_Date_Changed);
    PARAMETER(DB1.RS_Time_Changed);
    PARAMETER(DB1.RS_Job);
    PARAMETER(DB1.RS_Program);
    {
     //?Execute internal function

     // PAR.RS User Changed = JOB.*USER
     PAR.RS_User_Changed = JOB.*USER;

     // PAR.RS Date Changed = JOB.*Job date
     PAR.RS_Date_Changed = JOB.*Job_date;

     // PAR.RS Time Changed = JOB.*Job time
     PAR.RS_Time_Changed = JOB.*Job_time;

     // PAR.RS Job = JOB.*JOB
     PAR.RS_Job = JOB.*JOB;

     // PAR.RS Program = JOB.*PROGRAM
     PAR.RS_Program = JOB.*PROGRAM;

    }

   }

   ENDIF;

   ENDIF;

  }

 }

 CASE;

 // IF DB1.DT Full/Split Load is Split
 IF DB1.DT_Full_Split_Load = 'S';

 EXECUTE FUNCTION(Rtv Chg for F/DelvTimeRT) TYPE(RTVOBJ) FILE(PLAJCPP)           AB1296102;
 PARAMETER(DB1.CC_Company_Number);
 PARAMETER(DB1.DSH_Kill_Date);
 PARAMETER(DB1.DT_Delivery_Date);
 PARAMETER(DB1.DT_Delivery_Time);
 PARAMETER(DB1.DT_Delivery_Time_Seq);
 PARAMETER(PAR.Delivery_Date_New_Usr);
 PARAMETER(PAR.Delivery_Time_New_Usr);
 PARAMETER(PAR.Delivery_Time_Seq_New_Usr);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Del Delv Trckng Split DO) TYPE(DLTOBJ) FILE(PLAJCPP)           AB1245172;
  PARAMETER(DB1.CC_Company_Number);
  PARAMETER(DB1.DSH_Kill_Date);
  PARAMETER(DB1.DT_Delivery_Date);
  PARAMETER(DB1.DT_Delivery_Time);
  PARAMETER(DB1.DT_Delivery_Time_Seq);
  PARAMETER(DB1.DTS_Split_Sequence);
  EXECUTE FUNCTION(Crt Delv Trckng Split CR) TYPE(CRTOBJ) FILE(PLAJCPP)           AB1245170;
  PARAMETER(DB1.CC_Company_Number);
  PARAMETER(DB1.DSH_Kill_Date);
  PARAMETER(PAR.Delivery_Date_New_Usr);
  PARAMETER(PAR.Delivery_Time_New_Usr);
  PARAMETER(PAR.Delivery_Time_Seq_New_Usr);
  PARAMETER(DB1.DTS_Split_Sequence);
  PARAMETER(DB1.DTS_Building);
  PARAMETER(DB1.DTS_Room);
  PARAMETER(DB1.DTS_Sire_Line_Code);
  PARAMETER(DB1.DTS_Hog_Group_Code);
  PARAMETER(DB1.DTS_Delivered_Head);
  PARAMETER(DB1.DTS_Delivered_Weight);
  PARAMETER(DB1.DTS_Movement_Number);
  PARAMETER(DB1.DTS_UnUsed_Number_6_0);
  PARAMETER(DB1.DTS_Unused_Fld_1);
  PARAMETER(DB1.DTS_Unused_Fld_2);
  PARAMETER(DB1.DTS_Unused_Fld_3);
  PARAMETER(DB1.DTS_Unused_Status_1);
  PARAMETER(DB1.DTS_Unused_Status_2);
  PARAMETER(DB1.DTS_Unused_Status_3);
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

 }

 ENDIF;

 EXECUTE FUNCTION(Rtv Chg for F/DelvTimeRT) TYPE(RTVOBJ) FILE(PLAHCPP)           AB1296103;
 PARAMETER(DB1.CC_Company_Number);
 PARAMETER(DB1.DSH_Kill_Date);
 PARAMETER(DB1.DT_Delivery_Date);
 PARAMETER(DB1.DT_Delivery_Time);
 PARAMETER(DB1.DT_Delivery_Time_Seq);
 PARAMETER(PAR.Delivery_Date_New_Usr);
 PARAMETER(PAR.Delivery_Time_New_Usr);
 PARAMETER(PAR.Delivery_Time_Seq_New_Usr);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Del Delv Track Cmnt   DL) TYPE(DLTOBJ) FILE(PLAHCPP)           AB1244801;
  PARAMETER(DB1.CC_Company_Number);
  PARAMETER(DB1.DSH_Kill_Date);
  PARAMETER(DB1.DT_Delivery_Date);
  PARAMETER(DB1.DT_Delivery_Time);
  PARAMETER(DB1.DT_Delivery_Time_Seq);
  PARAMETER(DB1.DTC_Line_Number);
  EXECUTE FUNCTION(Crt Delv Track Cmnt   CR) TYPE(CRTOBJ) FILE(PLAHCPP)           AB1244799;
  PARAMETER(DB1.CC_Company_Number);
  PARAMETER(DB1.DSH_Kill_Date);
  PARAMETER(PAR.Delivery_Date_New_Usr);
  PARAMETER(PAR.Delivery_Time_New_Usr);
  PARAMETER(PAR.Delivery_Time_Seq_New_Usr);
  PARAMETER(DB1.DTC_Line_Number);
  PARAMETER(DB1.DTC_Comment);
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

 }

 EXECUTE FUNCTION(Del Delivery Tracking DL) TYPE(DLTOBJ) FILE(PLAFCPP)           AB1244758;
 PARAMETER(DB1.CC_Company_Number);
 PARAMETER(DB1.DSH_Kill_Date);
 PARAMETER(DB1.DT_Delivery_Date);
 PARAMETER(DB1.DT_Delivery_Time);
 PARAMETER(DB1.DT_Delivery_Time_Seq);
 QUIT;

}


//?    Change the BOL with the new delivery time
//?If this is excuted from the receiving screen then the
//?buy order load has already been updated
//?and that is fine
//?this will only read and if the time is different then it
//?change the time
EXECUTE FUNCTION(Rtv/Chg Bol F/DelvTimeRT) TYPE(RTVOBJ) FILE(PKAXCPP)           AB1296096;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.BOH_Buy_Order_Number);
PARAMETER(PAR.BOL_Load_Number);
PARAMETER(PAR.Delivery_Time_New_Usr);
PARAMETER(PAR.Delivery_Time_New_Usr);
PARAMETER(PAR.Delivery_Date_New_Usr);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Chg Buy Order LdDtTimeCH) TYPE(CHGOBJ) FILE(PKAXCPP)           AB1295914;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(PAR.BOL_Pln_Delv_Start_Time);
 PARAMETER(PAR.BOL_Pln_Delv_Start_Time);
 PARAMETER(PAR.BOL_Pln_Delv_Date);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

}


// PAR.Delivery Time Seq New Usr = WRK.Delivery Time Seq New Usr
PAR.Delivery_Time_Seq_New_Usr = WRK.Delivery_Time_Seq_New_Usr;

