// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for POSIPVR
// ?Date: 14.08.2025 Time: 03:38:53
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?E01630 - Change Application Code to be PKGUPD from C/S.
EXECUTE FUNCTION(VAL Set Int.Acc No Hdg IF) TYPE(EXCINTFUN)                     AC1460523;
PARAMETER('PKGUPD');
PARAMETER(LCL.Company_Number);
PARAMETER(LCL.Warehouse_Code);
PARAMETER(LCL.Allow_Multi_Company);
PARAMETER(LCL.Default_Printer);
PARAMETER(LCL.Salesperson_Code);
PARAMETER(LCL.Name);
PARAMETER(LCL.System_Value_Alpha);
PARAMETER(LCL.Access_Denied_Y_N);
{
 //?Execute internal function

 // PAR.User Profile Name = JOB.*USER
 PAR.User_Profile_Name = JOB.*USER;

 EXECUTE FUNCTION(VAL User/Appl No Exit  IF) TYPE(EXCINTFUN)                     AC1460535;
 PARAMETER(PAR.User_Profile_Name);
 PARAMETER(PAR.Application_Code);
 PARAMETER(WRK.Company_Number);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.Allow_Multi_Company);
 PARAMETER(PAR.Default_Printer);
 PARAMETER(PAR.Salesperson_Code);
 PARAMETER(WRK.Access_Denied_Y_N);
 {
  //?Execute internal function

  //?RMC 5/11/09 Rtv default company from user profile --
  //?  Override user code model company if it exists
  EXECUTE FUNCTION(RTV Program Setup w/Co RT) TYPE(RTVOBJ) FILE(CADRREP)          AC1935572;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Allow_Multi_Company);
  PARAMETER(PAR.Default_Printer);
  PARAMETER(PAR.Salesperson_Code);
  PARAMETER(LCL.Company_Number);
  PARAMETER(PAR.User_Code_Model);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?User Profile Record Not found
  CASE;

  // IF PGM.*Return code is *Record does not exist
  IF PGM.*Return_code = 'Y2U0005';

  // PAR.Access Denied (Y/N) = CND.yes
  PAR.Access_Denied_Y_N = 'Y';

  //?User Profile Record Not found
  // IF *OTHERWISE
  IF *OTHERWISE;

  // PAR.Access Denied (Y/N) = CND.no
  PAR.Access_Denied_Y_N = 'N';

  ENDIF;

  CASE;

  // IF PAR.User Code Model is equal to blank
  IF PAR.User_Code_Model = *BLANK;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Code_Model);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  ENDIF;

  // PAR.Warehouse Code = LCL.Warehouse Code
  PAR.Warehouse_Code = LCL.Warehouse_Code;

  //?Return code when not normal for Application Profile
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  // PAR.Access Denied (Y/N) = CND.no
  PAR.Access_Denied_Y_N = 'N';

  //?Return code when not normal for Application Profile
  // IF *OTHERWISE
  IF *OTHERWISE;

  // PAR.Access Denied (Y/N) = CND.yes
  PAR.Access_Denied_Y_N = 'Y';

  ENDIF;

  CASE;

  // IF LCL.Company Number is greater than zero
  IF LCL.Company_Number > *ZERO;

  // PAR.Company Number = LCL.Company Number
  PAR.Company_Number = LCL.Company_Number;

  CASE;

  // IF LCL.Warehouse Code is Not Blanks
  IF LCL.Warehouse_Code <> *BLANK;

  EXECUTE FUNCTION(RTV Prod Whse for Co  RT) TYPE(RTVOBJ) FILE(CAADREP)           AC1757887;
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(LCL.Shipping_Company);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   CASE;

   // IF DB1.Record Status is Active
   IF DB1.Record_Status = 'A';

   CASE;

   // IF DB1.Production Warehouse Code is Warehouse Code not Blank
   IF DB1.Production_Warehouse_Code <> *BLANK;

   // PAR.Warehouse Code = DB1.Production Warehouse Code
   PAR.Warehouse_Code = DB1.Production_Warehouse_Code;

   QUIT;

   ENDIF;

   ENDIF;

  }

  ENDIF;

  ENDIF;

 }

 // PAR.Company Number = WRK.Company Number
 PAR.Company_Number = WRK.Company_Number;

 // PAR.Access Denied (Y/N) = WRK.Access Denied (Y/N)
 PAR.Access_Denied_Y_N = WRK.Access_Denied_Y_N;

 //?If access denied is no, rtv co. name
 CASE;

 // IF WRK.Access Denied (Y/N) is no
 IF WRK.Access_Denied_Y_N = 'N';

 EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
 PARAMETER(WRK.Company_Number);
 PARAMETER(PAR.Name);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 ENDIF;

}


CASE;

// IF LCL.Access Denied (Y/N) is yes
IF LCL.Access_Denied_Y_N = 'Y';

// Execute function SET Message Queue Dest US.
EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
{
 C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
}


// Send completion message - 'Application access denied for user &1 in application area &2'
MESSAGE(USR0810 *COMPLETION);
MSGPARM(JOB.*USER);
MSGPARM('PKGUPD');

// PAR.Return Code Usr = CND.*User Quit Requested
PAR.Return_Code_Usr = 'Y2U9999';

PGM.*Return_code = 'Y2U9999';

RETURN;

ENDIF;

//?USER: Load screen

// DTL.Company Number = PAR.Company Number
DTL.Company_Number = PAR.Company_Number;

// WRK.First Time Flag = CND.Yes
WRK.First_Time_Flag = 'Y';

// WRK.Modified Flag = CND.Not Shipped
WRK.Modified_Flag = *BLANK;

// DTL.Packaging Item Code = CON.*BLANK
DTL.Packaging_Item_Code = *BLANK;

//?USER: Validate fields

EXECUTE FUNCTION(Val Packaging Item    RT) TYPE(RTVOBJ) FILE(POARREP)           AC1655308;
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Packaging_Item_Code);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

 //?USER: Process Data record

 // PGM.*Return code = CND.*Record already exists
 PGM.*Return_code = 'Y2U0003';

}


CASE;

// IF PGM.*Return code is *Record already exists
IF PGM.*Return_code = 'Y2U0003';

// Send error message - 'Packaging Item already exists.'
ERROR(USR2983);
MSGPARM(DTL.Packaging_Item_Code);

ENDIF;

CASE;

// IF WRK.First Time Flag is Yes
IF WRK.First_Time_Flag = 'Y';

// OR DTL.Pckg Item Type is Box
OR DTL.Pckg_Item_Type = 'BX';

// OR DTL.Pckg Item Type is Combo box
OR DTL.Pckg_Item_Type = 'CB';

// WRK.First Time Flag = CND.NO
WRK.First_Time_Flag = 'N';

// DTL.Item Code = CON.1
DTL.Item_Code = 1;

// DOW PGM.*Return code is *Normal
DOW PGM.*Return_code = *BLANK;

// DTL.Item Code = DTL.Item Code + CON.1
DTL.Item_Code = DTL.Item_Code + 1;

EXECUTE FUNCTION(RTV Chk Item Existance RT) TYPE(RTVOBJ) FILE(OMBYREP)          AC1192262;
PARAMETER(DTL.Item_Code);

ENDDO;

// LCL.Item Code = DTL.Item Code
LCL.Item_Code = DTL.Item_Code;

ENDIF;

EXECUTE FUNCTION(Rtv Class             RT) TYPE(RTVOBJ) FILE(POCAREP)           AC1660311;
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Pckg_Item_Type);
PARAMETER(DTL.Pckg_Type_Class);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


//?USER: User defined action

CASE;

// IF DTL.Pckg Item Type is Box
IF DTL.Pckg_Item_Type = 'BX';

// OR DTL.Pckg Item Type is Combo box
OR DTL.Pckg_Item_Type = 'CB';

// Call program Edt Box Company Item  ER.
CALL PROGRAM(Edt Box Company Item  ER) ('POSLE1R');
PARAMETER('ADD');
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Packaging_Item_Code);
PARAMETER(DTL.Pckg_Type_Class);
PARAMETER(DTL.Pckg_Item_Type);
PARAMETER(DTL.Item_Code);
PARAMETER(LCL.Return_Code_Usr);

// IF *OTHERWISE
IF *OTHERWISE;

// Call program Edt Packaging Item    ER.
CALL PROGRAM(Edt Packaging Item    ER) ('POG9E1R');
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Packaging_Item_Code);
PARAMETER(DTL.Pckg_Type_Class);
PARAMETER(DTL.Pckg_Item_Type);
PARAMETER(LCL.Return_Code_Usr);
PARAMETER('ADD');

ENDIF;

// DTL.Packaging Item Code = CON.*BLANK
DTL.Packaging_Item_Code = *BLANK;

//?USER: Exit program processing

// PAR.Return Code Usr = CND.*User Quit Requested
PAR.Return_Code_Usr = 'Y2U9999';

