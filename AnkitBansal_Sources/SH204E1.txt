      *****************  RPG PROGRAM HEADING  ************************
     h option(*SRCSTMT:*NODEBUGIO)
      *
      * ENVIRONMENT: Pork Division
      * SYSTEM:      OMS---Datamart
      * PROGRAM:     SH204 - Datamart Sales: Build Sales History -use E1 table
      * PROGRAMMER:  Rose Centonze
      * CREATED:     03/27/2020
      *
      * FUNCTION: This program consolidates a number of files
      *           in the OMS-Order Management System into a Sales History
      *           file for Datamart. (includes Seaboard/Triumph/Dailys)
      *
      *           This file in the Datamart will be added to with
      *           each load of the Datamart.
      *
      *           This program reads a file that selects ONLY the
      *           records that have not already been written to the
      *           Data Mart.
      *
      *           After the record is written to the Datamart file
      *           it updates the sales history as having been written.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * Date      Programmer
      *
      * 08/14/01  LeAnne Fedor
      *           Added 'temporary' code to handle fresh/frozen. Code can
      *           come out when Purva gets OMS changes in place.
      *
      * 02/24/02  LeAnne Fedor
      *           Added new fields: week-ending date, quantity ordered, weight
      *           ordered, quantity scheduled, weight scheduled.
      *
      * 01/25/02  Alice
      *           Removed 'temporary' code to handle fresh/frozen.
      *
      * 09/05/02  LeAnne Fedor
      *           We will now only proces records where the 'actual ship date' is on/before
      *           the Saturday previous to the system date.
      *
      * 11/11/03  Barb Gutierrez
      *           Force 12/28 through 12/31 to have a week endding date of 12/27/2003.
      *
      * 03/10/04  Barb Gutierrez
      *           Added history detail accrual file to accumulate brokerage commissions.
      *           Also removed the comments on the update of the sales history file flag.
      *           Update it as already being sent.
      *
      * 03/25/04  Barb Gutierrez
      *           Removed the update of the sales history file flag because we were updating the
      *           actual shipped date in omhstpmb.  The program needs to be reviewed to make sure
      *           we use work fields for the actual ship date before we start updating the flag
      *           again.
      *
      * 04/13/04  Barb Gutierrez
      *           Added the update of the sales history file flag back in.  Changed the hardcoding
      *           of the actual ship date to a work field.
      *
      * 09/08/05  Alice Brownfield
      *           Added the qty/lbs Overeage and Shortage fields for Logistics KPI project
      *           TFS013.
      *
      * 11/15/05  LeAnne Fedor
      *           Per AMB, we will now exclude records where the Actual Ship Date is zero.
      *           Also, added logic to test for a valid date before populating any 'date
      *           format' field. If the date is not valid, we will populate the field
      *           with the "null" date----since fields defined as 'date format' cannot be
      *           zero.
      *
      * 01/12/06  Alice Brownfield
      *           Added Company #, and 2 new Marketing Accrual Fields
      *
      * 03/22/06  LeAnne Fedor
      *           Added 1 new field: TF Exempt Code
      *
      * 08/15/06  Alice Brownfield
      *           Added hardcoding for 2005 & 2006 end of year dates to force the data
      *           to go into the proper year/quarter/week in Cognos.
      *
      * 09/19/06  LeAnne Ramsey
      *           Recompile only. Synon file POAXCPP was changed.
      *
      * 07/31/07  LeAnne Ramsey
      *           Added logic to populate new Cost fields, Net Product Revenue Amount and
      *           Margin Amount.
      *           Added hardcoding for 2007 end of year date to force the data to
      *           to go into the proper year/quarter/week in Cognos.
      *
      * 08/06/07  Alice Brownfield & LeAnne
      *           Added other coding to facilitate adding Daily's sales data to
      *           SHP204 along with Seaboard's
      *
      * 08/21/07  LeAnne Ramsey
      *           Added logic to populate:
      *                 Order sequence number
      *                 Order secondary line number
      *                 TF CoOwned Flag and Percent
      *                 Final Cost Flag
      *
      * 09/04/07  LeAnne Ramsey
      *           Recompiled in Production.
      *
      * 09/06/07  LeAnne Ramsey
      *           Made final changes resulting from Dailys.
      *           Removed hardcoding on Actual Ship Date; we will now use new Sales Dates
      *                   in CAPCAL-Calendar file.
      *           Reinstated update of the OMS Sales History record as being 'sent' to
      *                   Datamart.
      *           We will now check for existing record, delete, rewrite.
      *
      * 11/19/07  LeAnne Ramsey
      *           Per Purva Droge:
      *            1) Always set the Dailys Fresh/Frozen Flag value to FR=Fresh.
      *            2) Retrieve Broker Name from JDE; concatenate Vendor Number
      *               and JDE Name into Broker Name field.
      *
      * 12/28/07  LeAnne Ramsey
      *           Per Alice (For Signal Demand):
      *            1) Added Order Date and Ship To Zip.
      *            2) Added 8,0 date fields for all dates in CCYYMMDD format.
      *
      * 01/10/08  LeAnne Ramsey
      *           Added (For Signal Demand) a field that tells the Signal Demand
      *           status for a record:
      *                  S=Sent    The record has been sent to Signal Demand
      *                  N=Not Yet The record has not yet been sent to Signal Demand
      *                  D=Don't   Don't send the record to Signal Demand. (We'll use
      *                            this field to mark SBD records prior to 2003--which
      *                            Signal Demand does not want.) (All "Dailys" records
      *                            will be D=Don't Send.)
      *
      * 03/09/08  LeAnne Ramsey
      *           Removed the "cost" logic for Seaboard/Triumph. The "cost" fields
      *           will now be populated in a separate program (SH209).
      *
      * 03/27/08  LeAnne Ramsey
      *           For Signal Demand, we are only extracting OR=Orders.
      *           So, all other records (debit/credit memos) should be set to
      *                  D=Don't send the record to Signal Demand.
      *
      * 03/31/08  LeAnne Ramsey
      *           Now, we WILL NOT be using this Datamart Sales History file for
      *           Signal Demand. We have removed the Signal Demand Flag field/logic.
      *
      *           Also, corrected bug--we were inadvertantly moving Invoice Date into
      *           Order Date.
      *
      *           Also, for SBD/TF records (not Dailys), we will save the "cost" fields
      *           before deleting an existing record so that we can repop the fields
      *           when the record is written. The actual "costing" logic is still in
      *           the new program SH209.
      *
      * 04/01/08  LeAnne Ramsey
      *           While working on Signal Demand, we discovered that we had been
      *           doubling up on Broker Commission since the Dailys changes last fall.
      *           So, we are now reverting back to the correct/original code: use F4UOVA only
      *           We will no longer start with F4UOVA and add to it all "CM" record
      *           values from the History Accrual Detail file.
      *
      * 09/11/08  LeAnne Ramsey
      *           Recompile only. Export/Domestic Flag was added to TFP010-
      *           Weekly Product Revenue Detail file.
      *
      * 09/23/08  Alice Brownfield
      *           Change the logic to get the Commodity Market Dollars to handle the
      *           Credit/Debit memos the same as the OMS Sales Realization reports.
      *
      *           Also, change logic to determine if this is a CM/DM to use the
      *           Invoice Suffix field instead of the Order Type Code.
      *
      * 09/23/08  LeAnne Ramsey
      *           Added Invoice Suffix to the Datamart Sales History file.
      *
      * 10/03/08  Barb Gutierrez
      *           Make sure the shipping company in the datamart is always the shipping
      *           company.  For some reason when the organization was not Dailys, we were
      *           putting the accounting company number in the shipping company field.
      *           Project E00497.
      *
      * 11/05/08  LeAnne Ramsey
      *           Added logic to populate 3 new fields:
      *             Current Market Code
      *             Current Market Description
      *             Current Commissionable Item Flag
      *
      * 01/16/09  LeAnne Ramsey
      *           Recompile only. Fields were added to Datamart file SHP201-Item.
      *
      * 01/28/09  LeAnne Ramsey
      *           Recompile only. Fields were added to Datamart file SHP201-Item.
      *
      * 02/25/09  LeAnne Ramsey
      *           Changed Dailys 'Cost' logic.
      *
      * 07/21/09  Alice Brownfield
      *           Added Palletize, Slip Sheet, and Floor Loaded Flags
      *           Also removed all TF* files from program.  they were
      *           not being used any longer.  (TFP007, TFL010a, TFP099)
      *
      * 09/03/09  LeAnne Ramsey
      *           Recompile only. File PMD0CPP-Sales History Extension was changed.
      *
      * 09/08/09  LeAnne Ramsey
      *           Recompile only. New field "Commodity Market Code" was added to
      *           SHP203-Datamart: Customer.
      *
      * 09/10/09  LeAnne Ramsey
      *           Added logic for new fields in SHP204-Datamart Sales History:
      *             1) intended for export flag
      *             2) intended for export country
      *
      * 02/22/10  LeAnne Ramsey
      *           Added logic for new field in SHP204-Datamart Sales History:
      *             1) price type
      *
      * 05/24/10  LeAnne Ramsey
      *           Added a field to SHP204-Datamart Sales History:
      *           1) SHWEDTMDCY-Week Ending Date in date format mm/dd/ccyy
      *
      * 11/29/11  LeAnne Ramsey  (E1818)
      *           Add 5 fields to SHP204-Datamart Sales History:
      *           1) SHORSPNM-Order Salesperson Name
      *           2) SHORSPCDNM-Order Salesperson Code/Name
      *           3) SHSRCD-Sales Route Code
      *           4) SHSRCS-Sales Route Description
      *           5) SHSRCDDS-Sales Route Code/Description
      *              Note: When/if Original Salesperson Code is blank in the
      *                    Sales History file, we will populate the 3 Order
      *                    Salesperson fields with the Sales Route fields...
      *                    which appear to never be blank in Sales History.
      *              Note: After installing this change, we reprocessed the
      *                    Sales History data for 1/01/10 forward.
      *
      * 11/29/11  LeAnne Ramsey  (E1818)
      *           I forgot to reinstate the commented out update to Synon Sales History...
      *           which I removed for testing purposes. So, changed/reinstalled.
      *
      * 11/30/11  LeAnne Ramsey  (E1818)
      *           Changed our 3 new SalesRoute fields to say "Order"...like
      *           our SalesPerson fields.
      *
      * 03/06/12  LeAnne Ramsey  (E1960)
      *           Recompile only.
      *           Two new fields were added to SHP201:
      *                1) Report Group 1 Code
      *                2) Report Group 1 Description
      *           (FYI: After we installed this, the users decided not to use it.
      *                 They had us do the SubClass change below instead.)
      *
      * 04/09/12  LeAnne Ramsey  (E1960)
      *           Recompile only.
      *           Two new fields were added to SHP201:                               z
      *                1) Item Structure SubClass Code
      *                2) Item Structure SubClass Description
      *
      * 12/18/12  LeAnne Ramsey  (E2360)
      *           Prior to this change, we plopped/defaulted N=No into the CoOwned Flag
      *           when we were writing a new SHP204 record. The retrieval of the actual
      *           CoOwned Flag value from TFP010 for an Item happened in program SH209..
      *           when we got the costs....after the TFS Margin Close had run.
      *           I am adding logic to retrieve the TFP010 CoOwned values here...so that
      *           we have them immediately instead of waiting til after the TFS Margin Close.
      *
      * 02/14/13  LeAnne Ramsey  (E2450)
      *           Adam Gross had Rose C. add 'sales channel' to the order entry screen. Now,
      *           the users will have to enter a valid Sales Channel (aka: Customer Type) on
      *           each Order!!  They were not happy with having it at the Customer level!!
      *           Rose will hold/store this new value in PMD0CPP-Sales History Extension.
      *           I have added 3 fields to our Datamart Sales History file (see $ext):
      *             SHORCHCD-Order Sales Channel Code
      *             SHORCHDS-Order Sales Channel Description
      *             SHORCHCDDS-Order Sales Channel Code/Description
      *
      * 07/16/13  LeAnne Ramsey  (E2682)
      *           Adam Gross had us add Gate/Final Price and Gate/Final Price Adjustment to
      *           Sales History.  These will come from the Sales History Extension file (PMD0CPP).
      *           I also added Price Method Code (SHPMCD) from Sales History (field F4Q7CD).
      *
      * 09/18/13  LeAnne Ramsey  (E2782)
      *           Recompile only. Added a new field below to SHP201-Item:
      *               Sold 100% Frozen Flag (ITSLFZFL)
      *
      * 10/29/13  LeAnne Ramsey  (E2848)
      *           Recompile only. Added the 2 new fields below to SHP201-Item:
      *              Sales Yield Rate (ITSYRT)
      *              Production Yield Rate (ITPYRT)
      *
      * 11/25/13  LeAnne Ramsey  (E2899)
      *           Recompile only. Added 2 new fields to SHP201-Item:
      *               COMMODITY PRICE GROUP (ITLRCD)
      *               COMMODITY PRICE GRP DESC (ITCMPGDS)
      *
      * 01/02/14  LeAnne Ramsey  (E2964)
      *           Recompile only.  Added a new field to SHP201-Item:
      *               MPR to USDA Flag (ITMPRFL)
      *
      * 07/08/14  LeAnne Ramsey  (E3174)
      *           Added a new field to SHP204-Sales History:
      *               Spot/Buy Flag    (SHSPBYFL)
      *
      * 09/23/14  Rose Centonze  (E3329)
      *           Added 7 new fields to SHP204-Sales History for Demand Planning: see $dpfields
      *               DP Location      (SHDPLOC)
      *               DP Region        (SHDPREGION)
      *               DP Channel Type  (SHDPCHTYP)
      *               Req Shp Date     (SHRQSHDT)
      *               Req Shp w/end    (SHRQWEDT)
      *               Req Dlv Date     (SHRQDLDT)
      *               Req Dlv w/end    (SHDLWEDT)
      *
      * 10/07/14  LeAnne Ramsey  (E3499)
      *           Added 1 new field to SHP204-Sales History:
      *               Stop             (SHSTOP)
      *
      * 11/24/14  LeAnne Ramsey  (E3640)
      *           Added 3 more fields to SHP204-Sales History for Demand Planning.
      *               DP Salesperson Code        (SHDPSPCD)
      *               DP Salesperson Name        (SHDPSPNM)
      *               DP Salesperson Code/Name   (SHDPSPCDNM)
      *           (Note: I call Rose's program PBP8XFR to retrieve DP Values.)
      *
      * 07/23/15  Lara Buser  (E004044)
      *           Recompile Only. Field added to SHP203-Datamart: Customer
      *               Field vs. In-House Managed Flag (CUMANAGED)
      *
      * 10/28/16  Danny Nguyen   (E7720)
      *           Added 2 new fields to SHP204-Sales History:
      *               Requested Delivery Time      (SHRQDLTM)
      *               Requested Delivery Timestamp (SHRQDLSTMP)
      *           Requested Delivery Time in Sales History stores the 'hour' in the minute
      *           position & the 'minute' in the last 2 position hence we need to multiply
      *           it by 100 first before populating it to SHRQDLTM & SHRQDLSTMP fields.
      *
      * 04/07/17  Danny Nguyen   (R9970)
      *           SHP201 file was changed to add Company Number as Key 1.
      *           Changed key list key06 to include Company Number.
      *
      * 11/14/17  Danny Nguyen  (R12011A-Weekly Product Revenue)
      *           Recompile only. Added 25 STF fields to TFP010 file.
      *
      * 05/22/18  Danny Nguyen  (R12926 - Absorbed Freight Rate Override)
      *           Added 3 new fields to SHP204-Sales History:
      *               ABSORBED FREIGHT RATE        (SHABFRRT)
      *               ORIG ORD ABS FREIGHT RATE    (SHORABFRRT)
      *               INVOICED MODE OF TRANSPTN    (SHINMOTCD)
      *           Populate the 3 new fields:
      *               SHABFRRT - Get from Sales History.
      *               SHORABFRRT & SHINMOTCD - Get from Sales History EXT.
      *
      * 03/27/20  Rose Centonze (P16169A-JDE to E1)
      *           Copied from SH204 and modified to use E1 table:
      *           F0101LA  -->  E10101LA
      *
      * 07/09/21  Brad Baden WHD80179 - Add Parent Name to SHP203
      *           Recompile only for added field in SHP203
      *
      * 05/18/22  Danny Nguyen  (DO2484 - WI 479 STF Variance Reporting)
      *           Recompile only. Added 2 STF fields to TFP010 file.
      *           PRXYPC   - STF STD YIELD %
      *           PRXPMPPC - STF PUMP %
      *
      * W105621 RMC 10/10/2022 INCREASE FIELD SIZES TO HANDLE PRICES > 999.99
      *         CHANGE @@ANPRPR TO SIZE 10.6
      *           CHANGES PRANPRPR IN TFP010
      *
      *
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fcabzrel1  if   e           k disk
      *   Company item
      *
      *
     Fcaadrel1  if   e           k disk
      *   Warehouse
      *
      *
     Fcaajrel1  if   e           k disk
      *  Type Codes
      *
      *
     Fcaaprel1  if   e           k disk
      *   Salesperson
      *
      *
     Fcalcale   if   e           k disk
      *  Calendar file
      *
      *
     F*f0101la   if   e           k disk                                        p16169
     Fe10101la  if   e           k disk
      *  JDE- Address book master
      *
      *
     Fombyrel1  if   e           k disk
      *  Item default
      *
      *
     Fomflcpl5  if   e           k disk
      *  Load detail
      *
      *
     Fomhstpmb  uf   e           k disk
      *  Sales history
      *  (logical contains only records not previously sent to Datamart  (F4ISSX = *blank)
      *
      *
     Fpdjerel1  if   e           k disk
      *  Sales route
      *
      *
     Fpmd0cpl1  if   e           k disk
      *  Sales History Extension file
      *
      *
     Fpoaxcpl1  if   e           k disk
      *  Item standard cost
      *
      *
     Fpdiccpl3  if   e           k disk
      *   History Detail Accrual
      *
      *
     Fpoc5rel1  if   e           k disk
      *  Broker
      *
      *
     Ftfp007    if   e           k disk
      *    Exempt codes
      *
      *
     Ftfl010a   if   e           k disk
      *    Weekly product revenue detail
      *
      *
     Fshp201    if   e           k disk
      *  Datamart: Item
      *
      *
     Fshp203    if   e           k disk
      *  Datamart: Customer
      *
      *
     Fshp210    if   e           k disk
      *  Datamart: Market/Item
      *
      *
     Fshl204b   uf a e           k disk
      *    Datamart: Sales history
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  Named Constants
      *---------------------------------------------------------------
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *---------------------------------------------------------------
      *  Standalone fields
      *---------------------------------------------------------------
      *
      * Save fields
      *
     D svfcfl          s                   like(shfcfl)
     D svslmam         s                   like(shslmam)
     D svsllam         s                   like(shsllam)
     D svslkam         s                   like(shslkam)
     D svsliam         s                   like(shsliam)
     D svsloam         s                   like(shsloam)
     D svslpam         s                   like(shslpam)
     D svnpram         s                   like(shnpram)
      *
      *
      * Miscellaneous Workfields
      *
     D wkrcexfl        s                   like(exrcexfl)
     D wkalph8         s              8
     D wkshov          s             11  2
     D wkokcd          s                   like(icokcd)
      *
      *
      * Workfields for date manipulation
      *
     D wknulldt        s                   like(shwedt)   inz(D'0001-01-01')
     D wkcymdiso       s               D   datfmt(*iso)
     D wksyndt         s              7  0
      *
      *
      * Parm fields
      *
     D xxcorg          s                   like(shcorg)
      *
     D xxitem          s              7  0
     D xxpr            s             11  4
     D xxuom           s              2
      *
     D xxsatdt         s              7  0
     D xxsynondt       s              7  0
      *
     D xxperiod        s                   like(shacpe)
     D xxquarter       s                   like(shacqr)
      *
     D xxcocd          s              3  0
     D xxreturn        s              7a
     D xxjulian        s              5  0
     D xxcyymmdd       s              7  0
     D xxcyymmddo      s              7  0
     D xxhpscdyr       s                   like(shacyr)
     D xxhpscdwk       s                   like(shacwk)
     D xxhpspicdt      s              5p 0
     D xxcdwk          s                   like(shacwk)
     D xxcdyr          s                   like(shacyr)
     D xxday           s              1a
     D xxacyr          s                   like(shcdyr)
     D xxacpe          s                   like(shacpe)
     D xxacwk          s                   like(shacwk)
      *
     D xxtm            s              6  0
     D xxrqdltm        s                   like(f4bztm)
     D xxchgtyp        s              6
     D xxorno          s                   like(f4c4nb)
     D xxorseqno       s                   like(f4dpnb)
      *
      ****************************************************************
      * Data Structures
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ***************************************************************************************
      * Mainline
      ***************************************************************************************
      *
      * Process records in the OMS Sales History file that have an 'actual ship date'
      * that is on/before the Saturday previous to the system date and not zero.
      * (Note: this logical view selects only records that have not already
      * been sent to the Datamart.)
      *
     C     *loval        setll     omhstpmb                               90
     C                   dou       *in90 = *on                                  Main do loop
     C                   read      omhstpmb                               90
     C                   if        *in90 = *off and                             If not EOF
     C                             f4gndt > 0 and
     C                             f4gndt <= xxsatdt
      *
      * If we already have a Datamart record, delete it. We want to rewrite
      * instead of updating. (For SBD/TF records, we will save the "cost" fields
      * to use in repopulating the record on the rewrite.)
      *
     C                   exsr      $dlt204
      *
     C                   clear                   shrec
      *
      *   1.  Populate fields that are a direct map from the OMS file
      *   2.  Retrieve "current" market info
      *   3.  Dates
      *   4.  Retrieve code values from the History Detail Accrual file
      *   5.  Retrieve amounts from the History Detail Accrual file
      *   6.  Retrieve data from the Sales History Extension file
      *   7.  Retreive Demand Planning fields
      *
     C                   exsr      $directmap
     C                   exsr      $curmkt
     C                   exsr      $dates
     C                   exsr      $codes
     C                   exsr      $amounts
     C                   exsr      $ext
     C                   exsr      $dpfields
      *
      * If Affect Sales DOLLARS = "Y"es, go get the Commodity Market Price
      *   and calculate the Market $$$ (shcmmkam).
      *
     C                   if        f4anst = 'Y'
     C                   exsr      $mktam
     C                   endif
      *
      * Logic customized for Seaboard/Dailys
      *   1) fresh/frozen flag
      *   2) Costs/Net Product Revenue
      *   3) for SBD only - Set Palletize, Slip Sheet, and Floor Loaded flags
      *
     C                   select
      *  Dailys
     C                   when      xxcorg = 'D'
     C                   move      'FR'          shfffl
     C                   exsr      $dlcost
      *
      *  Seaboard/Triumph
     C                   when      xxcorg = 'S'
     C                   exsr      $fresh
     C                   exsr      $palletize
      *
      *   For a Seaboard/Triumph, repopulate with saved "cost" fields.
      *
     C                   move      svfcfl        shfcfl
     C                   z-add     svslmam       shslmam
     C                   z-add     svsllam       shsllam
     C                   z-add     svslkam       shslkam
     C                   z-add     svsliam       shsliam
     C                   z-add     svsloam       shsloam
     C                   z-add     svslpam       shslpam
     C                   z-add     svnpram       shnpram
     C                   endsl
      *
      * Get the Record Exempt Flag value for the TF Exempt Code. (We need
      * this for the chain to the TFS Product Revenue file to get the
      * CoOwned Flag/Percent.)
      *
     C     shtfexcd      chain     tfp007
     C                   if        *in92 = *off
     C                   move      exrcexfl      wkrcexfl
     C                   else
     C                   move      'N'           wkrcexfl
     C                   endif
      *
      * Retrieve the record for this: WeekEnding Date, Item, Record Exempt Flag
      *
     C     key08         chain     tfl010a                            92
     C                   if        *in92 = *off                                 If hit
     C                   move      prcoownfl     shtownfl
     C                   z-add     prtownpc      shtownpc
     C                   else
     C                   move      no            shtownfl
     C                   z-add     0             shtownpc
     C                   endif
      *
      * Write record
     C                   write     shrec
      *
      * Update the OMS Sales History Record as being 'sent' to Datamart
      *
     C                   move      yes           f4issx
     C                   update    @hstpf0
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do loop
      *
     C                   seton                                        lr
      /EJECT
      *--------------------------------------------------------------------------------
      * Populate Datamart fields that are a direct map from the OMS Sales History file
      *--------------------------------------------------------------------------------
      *
     C     $directmap    begsr
      *
      * Company Organization
     C                   move      xxcorg        shcorg
      *
      * Shipping Company Number
     C                   z-add     f4r8nb        shshcono
      *
      * Customer info
     C                   z-add     f4bkc7        shshcuno                       customer
     C                   move      f4hnna        shshcity                       st city
     C                   move      f4dbcd        shshstate                      st state
     C                   move      f4cktx        shshzipcd                      st zip
     C                   move      f4x1cd        shshzone                       ship zone
     C                   z-add     f4anc7        sharcuno                       ar cust no
     C                   move      f4bcna        shcupono                       cust PO #
     C                   z-add     f4btc7        shpacuno                       Parent #
      * TF Exempt Code
     C                   move      f4iusx        shtfexcd                       TF Exempt Code
      * Item/warehouse
     C                   z-add     f4s5nb        shshitcd                       shipped item
     C                   move      f4ajcd        shwhcd                         whse code
      *
      * Accounting period
     C                   z-add     f4esnb        shacyr                         acctg year
     C                   z-add     f4etnb        shacpe                         acctg period
     C                   z-add     f4bznb        shacwk                         acctg week
      *
      * Call the generic program to retrieve the quarter associated with the
      * accounting period.
      *
     C                   call      'HP8006'
     C                   parm      shacpe        xxperiod
     C     shacqr        parm      0             xxquarter
      *
      * Amounts
     C                   z-add     f4kdva        shblgram                       bill dtl gross
     C                   z-add     f4utva        shsdovam                       std ovg amt
     C                   z-add     f4upva        shspfnam                       fin amt-special
     C                   z-add     f4unva        shkrotam                       other MKT accr amt
     C                   z-add     f4d9pr        shkrsbam                       SBD MKT accr amt
     C     f4d9pr        add       f4unva        shkram                         total MKT accr amt
     C                   z-add     f4uova        shbkam                         broker amount
      *
     C                   z-add     f4ulva        shabfram                       abs fgt amt
     C                   z-add     f4r1nb        shrtfram                       rated fgt amt
     C                   z-add     f4onva        shacfram                       actual fgt amt
      *
      * R12926 - Populate Absorbed Freight Rate. (This rate reflects at the Order level.)
12926C                   z-add     f4tbnb        shabfrrt                       Abs Freight Rate
      *
      *-------------------------------------------------------------------------------------
      * If this is an order
      *
     C                   if        f4jncd = 'OR'                                IF ORDER
      *
     C                   z-add     f4avqt        shorqt                         ordered quantity
     C                   z-add     f4ccqt        shscqt                         scheduled quantity
      *
     C                   z-add     f4d0wg        shorwt                         ordered weight
     C                   z-add     f4auwg        shscwt                         scheduled weight
      *
      * Shortage/overage calculations
      *
     C     f4exqt        sub       f4avqt        wkshov                         billed - ordered
     C                   if        wkshov < *zero
     C                   z-add     1             shqtshct                       shortage count
     C                   z-sub     wkshov        shshqt                         shortage qty
     C                   endif
      *
     C                   if        wkshov > *zero
     C                   z-add     1             shqtovct                       overage count
     C                   z-add     wkshov        shovqt                         overage qty
     C                   endif
      * weight
     C     f4bywg        sub       f4d0wg        wkshov                         billed - ordered
     c                   if        wkshov < *zero
     C                   z-sub     wkshov        shshwt                         shortage wgt
     C                   endif
      *
     C                   if        wkshov > *zero
     C                   z-add     wkshov        shovwt                         overage qty
     C                   endif
      *
     C                   endif                                                  IF ORDER
      *---------------------------------------------------------------------------------------
      *
      * Billed quantity and weight are populated based on the yes/no value
      * in the OMS field 'affect sales pnds status'.
      *
     C                   select
     C                   when      f4vast = no
     C                   z-add     0             shblqt                           billed qty
     C                   z-add     0             shblwt                           billed lbs
     C                   other
     C                   z-add     f4exqt        shblqt
     C                   z-add     f4bywg        shblwt
      *
      *  If this is a Credit Memo and it has a debit qty and weight,
      *  re-set the quantity and weight to a negative.
      *  Use the Invoice Suffix field to determine if this is a CM.
      *
     C                   if         f4cest = 'CM'                               If credit
      *
      * Quantity billed
     C                   if        f4exqt > 0
     C                   z-sub     f4exqt        shblqt
     C                   endif
      *
      * Weight billed
     C                   if        f4bywg > 0
     C                   z-sub     f4bywg        shblwt
     C                   endif
      *
     C                   endif                                                  If credit
     C                   endsl
      *
      * Populate Order Sales Route Code.
      * Retrieve Description from Sales Route master file.
      *
     C                   move      f4r4cd        shorsrcd
     C     shorsrcd      chain     pdjerel1                           92
     C                   if        *in92 = *off
     C                   eval      shorsrds = jemzna
     C                   eval      shorsrcdds = shorsrcd + '-' + shorsrds
     C                   endif
      *
      * Populate Order Salesperson (with Original Salesperson Code)
      * Retrieve name from Salesperson master.
      * Note: If Original Salesperson Code is blank, populate the
      *       Order Salesperson fields with the Order Sales Route fields.
      *       (The field is probably going to be blank for Credit/Debit
      *        memos...and may even be blank for some Orders.)
      *
     C                   select
     C                   when      f4r5cd = *blank
     C                   eval      shorspcd = shorsrcd
     C                   eval      shorspnm = shorsrds
     C                   eval      shorspcdnm = shorsrcdds
     C                   other
      *
     C                   move      f4r5cd        shorspcd
     C     shorspcd      chain     caaprel1                           92
     C                   if        *in92 = *off
     C                   eval      shorspnm = apaltx
     C                   eval      shorspcdnm = shorspcd + '-' + shorspnm
     C                   endif
     C                   endsl
      *
      * Carrier & Load & Export info
     C                   move      f4q2cd        shsmcd                         Shipping method
     C                   move      f4bzna        shcrcd                         Carrier code
     C                   move      f4u2st        shexfl                         Export flag
     C                   move      f4umcd        shexcntry                      Export country
     C                   z-add     f4rmnb        shloadno                       Load ID
      *
      * Credit/Debits
     C                   z-add     f4atin        shatinno                       Attached Inv #
     C                   z-add     f4t3nb        shatorno                       Attch to Ord #
     C                   z-add     f4rsrn        shrrno                         Resell Ref #
     C                   z-add     f4c0c7        shclno                         Claim #
      * Acctg Info
     C                   z-add     f4aic3        shcono                         Company #
     C                   z-add     f4conb        shinno                         Invoice #
     C                   z-add     f4c4nb        shorno                         Order #
     C                   z-add     f4dpnb        shorseqno                      Order seq #
     C                   z-add     f4uenb        shorsecno                      Order secondary
     C                   move      f4jncd        shortycd                       Order Type
     C                   move      f4cest        shinvsuf                       Invoice Suffix
     C                   move      f4amst        shafinfl                       Affect Inv
     C                   move      f4anst        shafamfl                       Affect Sales $
     C                   move      f4vast        shaflbfl                       Affect Sales #
     C                   move      f4q7cd        shpmcd                         Price Method Code
      *
      * Retrieve the Load Stop that this order is on from the Load Detail file
      * using a key of: Load, Order
      *
     C     key09         chain     omflcpl5                           92
     C                   if        *in92 = *off
     C                   z-add     flrvnb        shstop
     C                   endif
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------
      * Retrieve "current" Market info
      *--------------------------------------------------------------------------
      *
     C     $curmkt       begsr
      *
      * Retrieve the Market Code for the Item from the Datamart: Item file.
R9970 * Added Company Number as Key 1 for SHP201. Change key06 to include Company Number.
R9970 *      company number
      *      shipped item
      *      company organization
      *
     C     key06         chain     shp201                             92
     C                   if        *in92 = *off
     C                   move      itmkcd        shcurmkcd
     C                   move      itmkds        shcurmkds
     C                   endif
      *
      * If you did not get a Market Code from the Item file, try to retrieve
      * a Market Code for the Customer from the Datamart: Customer file.
      * Key: ship to customer
      *      company organization
      *
     C                   if        shcurmkcd = *blank                           If nothing
     C     key04         chain     shp203                             92
     C                   if        *in92 = *off
     C                   move      cumkcd        shcurmkcd
     C                   move      cumkds        shcurmkds
     C                   endif
     C                   endif                                                  If nothing
      *
      * If you got a Market Code, retrieve the Commissionable Item Flag
      * for the Market/Item from the Datamart: Market/Item file.
      *
     C                   if        shcurmkcd <> *blank                          If market
     C     key05         chain     shp210                             92
     C                   if        *in92 = *off
     C                   move      micomfl       shcurcomfl
     C                   endif
     C                   endif                                                  If market
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------
      * Delete a record if it already exists
      *--------------------------------------------------------------------------
      *
      * If we already have a Datamart record, delete it. We want to rewrite
      * instead of updating. (For SBD/TF records, we will save the "cost" fields
      * to use in repopulating the record on the rewrite.
      *
     C     $dlt204       begsr
      *
     C                   select
     C                   when      xxcorg = 'D'
     C     key03         chain     shl204b                            92
     C                   if        *in92 = *off
     C                   delete    shrec
     C                   endif
      *
      * Save "costs" before deleting a "SBD/TF" record. We will use
      * them in repopulating when we rewrite the record.
      *
     C                   when      xxcorg = 'S'
     C     key03         chain     shl204b                            92
     C                   if        *in92 = *off                                 If sbd dlt
     C                   move      shfcfl        svfcfl
     C                   z-add     shslmam       svslmam
     C                   z-add     shsllam       svsllam
     C                   z-add     shslkam       svslkam
     C                   z-add     shsliam       svsliam
     C                   z-add     shsloam       svsloam
     C                   z-add     shslpam       svslpam
     C                   z-add     shnpram       svnpram
     C                   delete    shrec
     C                   else
      *
     C                   move      no            svfcfl
     C                   z-add     0             svslmam
     C                   z-add     0             svsllam
     C                   z-add     0             svslkam
     C                   z-add     0             svsliam
     C                   z-add     0             svsloam
     C                   z-add     0             svslpam
     C                   z-add     0             svnpram
     C                   endif                                                  If sbd dlt
     C                   endsl
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------
      * Format dates into 1) date format *ISO (CCYY-MM-DD) and 2) 8,0 CCYYMMDD
      *--------------------------------------------------------------------------
      *
     C     $dates        begsr
      *
      * Order date
      *
     C     *cymd         test(d)                 f4a0dt                 92
     C                   if        *in92 = *off
     C     *cymd         move      f4a0dt        shordt
     C     *iso          move      shordt        sh80ordt
     C                   else
     C                   move      wknulldt      shordt
     C                   z-add     0             sh80ordt
     C                   endif
      *
      * Last quantity change date/time
      *  (call Rose's program to retrieve the date/time from PDLHCPLI-Load/Header
      *   Change Log for the last/latest "quantity" change on this order.)
      *   Note: If Kevin Smith decides he wants the latest date/time for each Line
      *   Item, simply send in F4DPNB in the Order Sequence Number and Rose's
      *   program will send the latest date/time for that specific line.)
      *
     C                   call      'PBOJXFR'
     C                   parm      *blank        xxreturn
     C                   parm      0             xxsynondt
     C                   parm      0             xxtm
     C                   parm      'ORDQTY'      xxchgtyp
     C                   parm      f4c4nb        xxorno
     C                   parm      0             xxorseqno
      *
     C     *cymd         test(d)                 xxsynondt              92
     C                   if        *in92 = *off
     C     *cymd         move      xxsynondt     shlqcdt
     C     *iso          move      shlqcdt       sh80lqcdt
     C                   move      xxtm          shlqctm
     C                   else
     C                   move      wknulldt      shlqcdt
     C                   z-add     0             sh80lqcdt
     C                   move      *loval        shlqctm
     C                   endif
      *
      * Invoice date
      *
     C     *cymd         test(d)                 f4awdt                 92
     C                   if        *in92 = *off
     C     *cymd         move      f4awdt        shindt
     C     *iso          move      shindt        sh80indt
     C                   else
     C                   move      wknulldt      shindt
     C                   z-add     0             sh80indt
     C                   endif
      *
      * Actual ship date
      *  (We will use the "sales date" from the Calendar file associated
      *   with the Actual Ship Date.)
      *
     C                   move      wknulldt      shacshdt
     C                   z-add     0             sh80acshdt
      *
      * WeekEnding Date
     C                   move      wknulldt      shwedt
     C                   move      shwedt        shwedtmdcy
     C                   z-add     0             sh80wedt
      *
     C     f4gndt        chain     calcale                            92
     C                   if        *in92 = *off                                 If cal hit
     C                   move      casdtiso      shacshdt
     C     *iso          move      shacshdt      sh80acshdt
      *
      * Get HPS calendar year/week associated with "Sales Date"
      *
     C                   call      'POF3XFR'
     C                   parm      *blank        xxreturn
     C                   parm      f4aic3        xxcocd
     C                   parm      casdtsy       xxcyymmdd
     C                   parm      0             xxjulian
     C                   parm      0             xxacyr
     C                   parm      0             xxacpe
     C                   parm      0             xxacwk
     C                   parm      *blank        xxday
     C                   parm      0             xxcdwk
     C                   parm      0             xxhpspicdt
     C     shcdyr        parm      0             xxhpscdyr
     C     shcdwkyr      parm      0             xxhpscdwk
      *
      *
      * Get Saturday week-ending date associated with "Sales Date"
      *
     C                   call      'POJNXFR'
     C                   parm      *blank        xxreturn
     C                   parm      f4aic3        xxcocd
     C                   parm      casdtsy       xxcyymmdd
     C                   parm      0             xxcyymmddo
     C                   parm      0             xxcdyr
     C                   parm      0             xxcdwk
      *
      * Get the Saturday date into:
      *  1) date format
      *  2) 8,0 CCYYMMDD workfile for later keying
      *
     C                   if        xxreturn = *blank                            If got Sat
     C     *cymd         test(d)                 xxcyymmddo             92
     C                   if        *in92 = *off                                 If OK date
     C     *cymd         move      xxcyymmddo    shwedt
     C                   move      shwedt        shwedtmdcy
     C     *cymd         move      xxcyymmddo    wkcymdiso
     C     *iso          move      wkcymdiso     sh80wedt
     C                   endif                                                  If OK date
     C                   endif                                                  If got Sat
     C                   endif                                                  If cal hit
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------------
      * Retrieve code values from the History Detail Accrual file
      *--------------------------------------------------------------------------------
      *
     C     $codes        begsr
      *
      * Retrieve values associated with Accrual Type of CM
      *  1) Broker Code
      *  2) Commission Code  (if Commission Amount not zero)
      *
     C                   move      'CM'          wkokcd
     C     key02         chain     pdiccpl3                           92
     C                   if        *in92 = *off                                 If CM
      *
     C                   eval      shbkcd = ichhaa
      *
     C                   if        f4uova <> 0
     C                   eval      shcmsch = icojcd
     C                   endif
     C                   endif                                                  If CM
      *
      * Retrieve values associated with Accrual Type of BG
      *  1) Buyer Group Rebate Group Code
      *
     C                   move      'BG'          wkokcd
     C     key02         chain     pdiccpl3                           92
     C                   if        *in92 = *off                                 If BG
     C                   eval      shbgrgcd = ichhaa
     C                   endif                                                  If BG
      *
      * Retrieve values associated with Accrual Type of PR
      *  1) Product Rebate Group Code
      *
     C                   move      'PR'          wkokcd
     C     key02         chain     pdiccpl3                           92
     C                   if        *in92 = *off                                 If PR
     C                   eval      shprgcd = ichhaa
     C                   endif                                                  If PR
      *
      * Now, retrieve "names" associated with these values from the Broker file.
      *  1) Broker name
      *  2) Buyer group rebate group name
      *  3) Product rebate group name
      *
      *           Broker
     C                   if        shbkcd <> *blank
     C     shbkcd        chain     poc5rel1                           92
     C                   if        *in92 = *off
     C**   c5dat1        chain     f0101la                            92          p16169
     C     c5dat1        chain     i0101la                            92
     C                   if        *in92 = *off
     C                   eval      wkalph8 = %triml(%editc(c5dat1: 'Z'))
     C                   eval      shbknm = wkalph8 + ' ' + abalph
     C                   endif
     C                   endif
     C                   endif
      *
      *      Buyer group
     C                   if        shbgrgcd <> *blank
     C     shbgrgcd      chain     poc5rel1                           92
     C                   if        *in92 = *off
     C                   eval      shbgrgnm = c5c4t1
     C                   endif
     C                   endif
      *
      *    Product Group
     C                   if        shprgcd <> *blank
     C     shprgcd       chain     poc5rel1                           92
     C                   if        *in92 = *off
     C                   eval      shprgnm = c5c4t1
     C                   endif
     C                   endif
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------------
      * Retrieve Amounts from the History Detail Accrual file
      *--------------------------------------------------------------------------------
      *
     C     $amounts      begsr
      *
      * Discount Amount
      *
     C                   move      'DA'          wkokcd
     C     key02         setll     pdiccpl3
      *
     C                   dou       *in93 = *on                                  Do discount
     C     key02         reade     pdiccpl3                               93
     C                   if        *in93 = *off
     C                   add       icayva        shdscam
     C                   endif
     C                   enddo                                                  Do discount
      *
      * Buyer Group Rebate Group Amount
      *
     C                   move      'BG'          wkokcd
     C     key02         setll     pdiccpl3
      *
     C                   dou       *in93 = *on                                  Do buyer group
     C     key02         reade     pdiccpl3                               93
     C                   if        *in93 = *off
     C                   add       icayva        shbgrgam
     C                   endif
     C                   enddo                                                  Do buyer group
      *
      *
      * Product Group Rebate Amount
      *
     C                   move      'PR'          wkokcd
     C     key02         setll     pdiccpl3
      *
     C                   dou       *in93 = *on                                  Do product grp
     C     key02         reade     pdiccpl3                               93
     C                   if        *in93 = *off
     C                   add       icayva        shprgam
     C                   endif
     C                   enddo                                                  Do product grp
      *
      * Customer Rebate Amount
      *
     C                   move      'CR'          wkokcd
     C     key02         setll     pdiccpl3
      *
     C                   dou       *in93 = *on                                  Do cust rebate
     C     key02         reade     pdiccpl3                               93
     C                   if        *in93 = *off
     C                   add       icayva        shcuram
     C                   endif
     C                   enddo                                                  Do cust rebate
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------
      * Retrieve Sales History Extension data
      *--------------------------------------------------------------------------
      *
     C     $ext          begsr
      *
      * Retrieve Sales History Extension record using a key of:
      *      Company, Order #, Order Seq #, Order Secondary Line Seq #
      *
     C     key03         chain     pmd0cpl1                           92
     C                   if        *in92 = *off
     C                   move      d0lxaa        shiexcntry
     C                   move      d0jxaa        shprtype
     C                   move      d0ovtx        shorchcd
     C                   z-add     d0gipr        shgipr
     C                   z-add     d0gjpr        shgjpr
     C                   move      d0shs1        shspbyfl
      * R12926 - Populate Orig Ord ABS Freight Rate & both Orig/Inv Mode of Transportation.
12926C                   z-add     d0javl        shorabfrrt
12926C                   move      d0gast        shinmotcd
     C                   endif
      *
      * Retrieve Sales Channel (aka: Customer Type) description
      *
     C                   if        shorchcd <> *blank
     C     shorchcd      chain     caajrel1                           92
     C                   if        *in92 = *off
     C                   eval      shorchds = ajauna
     C                   eval      shorchcdds =  %trim(shorchcd) + '-' +
     C                                           %trim(shorchds)
     C                   endif
     C                   endif
      *
      * Set the Intended for Export Flag
      *
     C                   if        shiexcntry = *blank
     C                   move      no            shiexfl
     C                   else
     C                   move      yes           shiexfl
     C                   endif
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------
      * Demand Planning fields
      *--------------------------------------------------------------------------
      *
     C     $dpfields     begsr
      *
      * Only process Seaboard Orders (do not process CM, DM, CB or PS)
      *
     c     shortycd      ifne      'OR'                                         If skipping
     c     shorchcd      oreq      'PS'
     c     shcorg        orne      'S'
     C                   move      wknulldt      shrqshdt
     C                   move      wknulldt      shrqwedt
     C                   move      wknulldt      shrqdldt
E7720C                   move      *loval        shrqdltm
     C                   move      wknulldt      shdlwedt
     c                   move      *blank        shdpregion
     c                   move      *blank        shdploc
     c                   move      *blank        shdpchtype
     c                   else
      *
      * Retrieve DP Location, DP Region and DP channel type
      *
     C                   call      'PBPPXFR'
     C                   parm      *blank        xxreturn
     C                   parm      f4aic3        xxcocd
     C                   parm                    f4btc7                         parent customer
     C                   parm                    f4dbcd                         ship to state
     C                   parm                    f4u2st                         export status
     C                   parm                    f4umcd                         export company
     C                   parm                    shorchcd                       saleschannel
     C                   parm                    shdploc                        dp location
     C                   parm                    shdpchtype                     dp channel type
     C                   parm                    shdpregion                     dp region
      *
      * Retrieve DP Salesperson Code and Name
      *
     C                   call      'PBP8XFR'
     C                   parm      *blank        xxreturn
     C                   parm                    shdploc
     C                   parm                    shshitcd
     C                   parm                    shdpspcd
     C                   parm                    shdpspnm
      *
      * Concatenate DP Code/Name
     C                   if        shdpspcd <> *blank
     C                   eval      shdpspcdnm = shdpspcd + '-' + shdpspnm
     C                   endif
      *
      *
      * Requested Ship Date
      * Requested Ship WeekEnding Date
      *
     C                   move      wknulldt      shrqshdt
     C                   move      wknulldt      shrqwedt
      *
     C     f4a5dt        chain     calcale                            92
     C                   if        *in92 = *off
     C                   move      casdtiso      shrqshdt
     C                   endif
      *
      * Get Saturday week-ending date associated with Requested ship date
      *
     C                   call      'POJNXFR'
     C                   parm      *blank        xxreturn
     C                   parm      f4aic3        xxcocd
     C                   parm      f4a5dt        xxcyymmdd
     C                   parm      0             xxcyymmddo
     C                   parm      0             xxcdyr
     C                   parm      0             xxcdwk
      *
     C     xxcyymmddo    chain     calcale                            92
     C                   if        *in92 = *off
     C                   move      casdtiso      shrqwedt
     C                   endif
      *
      * Requested Delivery Date
      * Requested Delivery Week Ending Date
      *
     C                   move      wknulldt      shrqdldt
     C                   move      wknulldt      shdlwedt
      *
     C     f4nydt        chain     calcale                            92
     C                   if        *in92 = *off
     C                   move      casdtiso      shrqdldt
     C                   endif
      *
E7720 * Requested Delivery Time
  |   *    If time is '00:24:00' then default it to 0.
  |  C                   eval      xxrqdltm = f4bztm
  |  C                   if        xxrqdltm = 2400
  |  C                   eval      xxrqdltm = 0
  |  C                   endif
  |  C                   test(t)                 xxrqdltm               92
  |  C                   if        *in92 = *off
  |  C                   eval      xxrqdltm = xxrqdltm * 100
  |  C                   move      xxrqdltm      shrqdltm
  |  C                   else
  |  C                   move      *loval        shrqdltm
  |  C                   endif
  |   *
  |   * Requested Delivery Timestamp
  |  C                   movel     shrqdldt      shrqdlstmp
  |  C                   move      shrqdltm      shrqdlstmp
E7720 *
      * Get Saturday week-ending date associated with Requested delivery date
      *
     C                   call      'POJNXFR'
     C                   parm      *blank        xxreturn
     C                   parm      f4aic3        xxcocd
     C                   parm      f4nydt        xxcyymmdd
     C                   parm      0             xxcyymmddo
     C                   parm      0             xxcdyr
     C                   parm      0             xxcdwk
      *
     C     xxcyymmddo    chain     calcale                            92
     C                   if        *in92 = *off
     C                   move      casdtiso      shdlwedt
     C                   endif
      *
     c                   endif                                                  If skipping
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------
      * Retrieve Slip Sheet flag & setup Pallatize & Floor Loaded Flags
      *--------------------------------------------------------------------------
      *
     C     $palletize    begsr
      *
      * change palletize blanks & invalids to "N" else use what's in rcd
      *
     C                   if        f4vest <> 'N' and f4vest <> 'Y'
     C                   move      'N'           shpalfl
     C                   else
     C                   move      f4vest        shpalfl
     C                   endif
      *
      * Retrieve the Slip Sheet flag from the Sales History Extension file
      * Key: CO, Order #, Order Seq #, and Order Secondary Line Seq #
      *
     C                   move      ' '           d0shes
     C     key03         chain     pmd0cpl1                           92
     C                   if        *in92 = *off
     C                   move      d0shes        shslpfl
     C                   endif
      *
     C                   if        d0shes <> 'N' and d0shes <> 'Y'
     C                   move      'N'           shslpfl
     C                   endif
      *
      * If both Palletize and Slip Sheet flags are = "N", then set the
      * Floor Loaded flag = "Y", else it's an "N".
      *
     C                   if        shpalfl = 'N' and shslpfl = 'N'
     C                   move      'Y'           shflrfl
     C                   else
     C                   move      'N'           shflrfl
     C                   endif
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------------------------------
      * Retrieve Commodity Market Price and calculate Market Amount
      *-------------------------------------------------------------------------------------
      * Although we have a field in the Sales History record for this,
      * we CANNOT use it because we need to balance to the OMS Sales Realization
      * reports in OMS so we'll use the same logic that the OMS reports use by calling
      * a synon program.  This program uses the Actual Ship Date less 1 day,
      * the Commodity Market Code, the Commodity Price Code for the item that we
      * send into it (from the Item Default file)
      * and finds the Market Price for that day in the OMS Market price files.
      *
     C     $mktam        begsr
      *
     C                   call      'POS2XFR'
     C                   parm                    xxreturn
     C                   parm      f4aic3        xxcocd
     C                   parm      f4agcd        xxuom
     C                   parm      f4s5nb        xxitem
     C                   parm      f4gndt        xxsynondt
     C                   parm      0             xxpr
      *
      * Calculate Commodity Market Amount as:
      *       Price per CWT * Weight Billed (from Data Mart field)
      *
     C     xxpr          mult      shblwt        shcmmkam
      *
      * If this is a Credit Memo we want the Market Dollars to be negative
      *
     C                   if        f4cest = 'CM' and shcmmkam > 0
     C                   eval      shcmmkam = shcmmkam * -1
     C                   endif
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------------------
      * Determine whether the item is fresh or frozen
      *--------------------------------------------------------------------------------------
      *
     C     $fresh        begsr
      *
      * Make two attempts to determine fresh/frozen:
      *  1) check the 'sld fzn flag' in the Company/Item file
      *  2) if the item is not a frozen item, then
      *     Use the Warehouse Code from the OMS Sales History record to access
      *     the Warehouse file. Move the  'warehouse type' from the retrieved
      *     warehouse record to the fresh/frozen flag field.
      *
     C     key01         chain     cabzrel1                           92
     C                   if        *in92 = *off and                             If frozen
     C                             bzs4st = 'Y'
     C                   move      'FZ'          shfffl
     C                   else
      *
      * Check the Warehouse file
      *
     C     f4ajcd        chain     caadrel1                           92
     C                   if        *in92 = *off
     C                   move      adwpst        shfffl
     C                   endif
     C                   endif                                                  If frozen
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Daily's: Costs and Net Product Revenue Information
      *---------------------------------------------------------------
      *
     C     $dlcost       begsr
      *
      * Always set Net Product Revenue Amount equal to FOB Gross Amount
      *
     C                   z-add     f4usva        shnpram
      *
      * Set Final Cost Flag to:
      *  YES when it is an 'order'; NO for everything else.
      *
     C                   if        f4jncd = 'OR'
     C                   move      yes           shfcfl
     C                   else
     C                   move      no            shfcfl
     C                   endif
      *
      * If this is an "order", retrieve the Credit Status of the Item and continue.
      *
     C                   if        f4jncd = 'OR'                                If order
     C     shshitcd      chain     ombyrel1                           92
     C                   select
     C                   when      *in92 = *on
      *
      * Credit Item
      *    Plop FOB Gross Amount into:
      *       1) Sold Other Cost Amount
      *       2) Sold Product Cost Total Amount
      *
     C                   when      byvmst = yes
     C                   z-add     f4usva        shsloam
     C                   z-add     f4usva        shslpam
      *
      * Not a Credit Item
     C                   when      byvmst = no
      *
      * If Unit Cost per Pound is not zero, use the pre-February 2009 calcs.
      *    1) Calc Sold Other Cost Amount: Unit Cost per Pound * Weight Billed
      *    2) Set Sold Product Cost Total Amount equals to Sold Other Cost Amount
      *
     C                   if        f4agcs <> 0                                  If old way
     C                   eval(h)   shsloam = f4agcs * f4bywg
     C                   z-add     shsloam       shslpam
     C                   else
      *
      * Retrieve Standard Costs
     C                   exsr      $dlstdcost
     C                   endif                                                  If old way
     C                   endsl
     C                   endif                                                  If order
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Retrieve Dailys Standard Costs and Calc Amounts
      *---------------------------------------------------------------
      *
     C     $dlstdcost    begsr
      *
      * Get the date of the Sunday preceeding this WeekEnding Date and put
      * it into Synon format.
      *
     C     shwedt        subdur    6:*days       wkcymdiso
     C     *cymd         move      wkcymdiso     wksyndt
      *
      *
      * Retrieve standard costs for this:
      *   1) Company
      *   2) Item
      *   3) Sunday date
      * And calc dollar amounts by:
      *   1) getting CWT costs into Per Pound values
      *   2) multiplying by Weight Billed
      *
     C     key07         chain     poaxcpl1                           92
     C                   if        *in92 = *off                                 If hit
      * Packaging cost
     C                   eval(h)   shslkam = (axedpr/100) * f4bywg
      * Labor cost
     C                   eval(h)   shsllam = (axeepr/100) * f4bywg
      * Ingredient cost
     C                   eval(h)   shsliam = (axefpr/100) * f4bywg
      * Meat cost
     C                   eval(h)   shslmam = (axfrpr/100) * f4bywg
      * Other cost
     C                   eval(h)   shsloam = (axegpr/100) * f4bywg
      * Product cost
     C                   eval(h)   shslpam = (axfupr/100) * f4bywg
     C                   endif                                                  If hit
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm lists
      *
     C     *entry        plist
     C                   parm                    xxcorg
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    f4aic3                         Company
     C                   kfld                    f4s5nb                         Shipped item
      *
     C     key02         klist
     C                   kfld                    f4aic3                         Company
     C                   kfld                    f4c4nb                         order nbr
     C                   kfld                    f4dpnb                         order seq #
     C                   kfld                    f4uenb                         order sec line sq#
     C                   kfld                    wkokcd                         accrual type
      *
     C     key03         klist
     C                   kfld                    f4aic3                         Company
     C                   kfld                    f4c4nb                         order nbr
     C                   kfld                    f4dpnb                         order seq #
     C                   kfld                    f4uenb                         order sec line sq#
      *
     C     key04         klist
     C                   kfld                    shshcuno
     C                   kfld                    shcorg
      *
     C     key05         klist
     C                   kfld                    shcurmkcd
     C                   kfld                    shshitcd
      *
     C     key06         klist
R9970C                   kfld                    shcono
     C                   kfld                    shshitcd
     C                   kfld                    shcorg
      *
     C     key07         klist
     C                   kfld                    f4aic3
     C                   kfld                    f4s5nb
     C                   kfld                    wksyndt
      *
     C     key08         klist
     C                   kfld                    sh80wedt
     C                   kfld                    shshitcd
     C                   kfld                    wkrcexfl
      *
     C     key09         klist
     C                   kfld                    shloadno
     C                   kfld                    shorno
      *
      * Put system date into Synon format of CYYMMDD.
      *
     C     *mdy          movel     udate         wkcymdiso
     C     *cymd         movel     wkcymdiso     xxsynondt
      *
      * Always find the 'previous' Saturday, even if the system date is
      * already a Saturday!
      *
     C                   select
      *  Seaboard/Triumph
     C                   when      xxcorg = 'S'
     C                   z-add     350           xxcocd
      *  Dailys
     C                   when      xxcorg = 'D'
     C                   z-add     364           xxcocd
     C                   endsl
      *
     C                   call      'POGSXFR'
     C                   parm      *blank        xxreturn
     C                   parm                    xxcocd
     C                   parm                    xxsynondt
     C                   parm      0             xxsatdt
      *
     C                   endsr
      /EJECT
