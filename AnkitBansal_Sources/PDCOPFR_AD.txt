// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDCOPFR
// ?Date: 14.08.2025 Time: 12:03:41
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('A/R');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


// WRK.USR Display field = CND.no
WRK.USR_Display_field = 'N';

//?USER: Record selection processing

//?Select only records matching parms if parms are passed
CASE;

// IF PAR.Ship To Customer is not equal to zero
IF PAR.Ship_To_Customer <> *ZERO;

// AND DB1.Ship To Customer NE PAR.Ship To Customer
AND DB1.Ship_To_Customer <> PAR.Ship_To_Customer;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

//?Select only records matching parms if parms are passed
// IF PAR.City is NE Blanks
IF PAR.City <> *BLANK;

// AND DB1.City NE PAR.City
AND DB1.City <> PAR.City;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

//?Select only records matching parms if parms are passed
// IF PAR.State Code is State code not Blanks
IF PAR.State_Code <> *BLANK;

// AND DB1.State Code NE PAR.State Code
AND DB1.State_Code <> PAR.State_Code;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

//?Select only records matching parms if parms are passed
// IF PAR.Record Status is Valid Entries
IF PAR.Record_Status = 'A'/'D'/'I';

CASE;

// IF PAR.Record Status NE DB1.Record Status
IF PAR.Record_Status <> DB1.Record_Status;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

CASE;

// IF PAR.EDI Trading Partner No. is Entered
IF PAR.EDI_Trading_Partner_No <> *BLANK;

EXECUTE FUNCTION(Rtv All Values        RT) TYPE(RTVOBJ) FILE(PDNEREP)           AC1569834;
PARAMETER(DB1.AR_Customer_Number);
PARAMETER(WRK.Internet_Password);
PARAMETER(WRK.Email_Address);
PARAMETER(WRK.Email_User_ID);
PARAMETER(LCL.EDI_Trading_Partner_No);
PARAMETER(WRK.EDI_Cust_Duns_Number);
PARAMETER(WRK.EDI_Warehouse_Store_No);
PARAMETER(WRK.State_Tax_ID);
PARAMETER(WRK.Cust_Shipping_Temp_C_F);
PARAMETER(WRK.One_Invoice_Per_PO);
PARAMETER(WRK.EDI_Advanced_Ship_Notice);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF PAR.EDI Trading Partner No. NE LCL.EDI Trading Partner No.
IF PAR.EDI_Trading_Partner_No <> LCL.EDI_Trading_Partner_No;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?USER: On print of first page format

// 1PG.Ship To Customer = PAR.Ship To Customer
X1PG_Ship_To_Customer = PAR.Ship_To_Customer;

EXECUTE FUNCTION(RTV Customer Name      RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1108159;
PARAMETER(X1PG_Ship_To_Customer);
PARAMETER(X1PG_Customer_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// 1PG.City = PAR.City
X1PG_City = PAR.City;

// 1PG.State Code = PAR.State Code
X1PG_State_Code = PAR.State_Code;

// 1PG.STATUS = PAR.Record Status
X1PG_STATUS = PAR.Record_Status;

// 1PG.EDI Trading Partner No. = PAR.EDI Trading Partner No.
X1PG_EDI_Trading_Partner_No = PAR.EDI_Trading_Partner_No;

//?USER: Null report processing

// Execute function CLC Set for Null Rpt   US.
EXECUTE FUNCTION(CLC Set for Null Rpt   US) TYPE(EXCUSRSRC) ('PDUUUFR');
{
 C                     MOVEL'Y'       W0AP1P
 C                     MOVEL'Y'       W0NEWP
}


// WRK.USR Display field = CND.yes
WRK.USR_Display_field = 'Y';

//?USER: Print required level headings

// SUPPRESSED PRINT Customer Name header format

//?USER: On print of detail format

EXECUTE FUNCTION(Rtv All Values        RT) TYPE(RTVOBJ) FILE(PDNEREP)           AC1569834;
PARAMETER(CUR.Ship_To_Customer);
PARAMETER(NLL.Internet_Password);
PARAMETER(NLL.Email_Address);
PARAMETER(NLL.Email_User_ID);
PARAMETER(NLL.EDI_Trading_Partner_No);
PARAMETER(CUR.EDI_Cust_Duns_Number);
PARAMETER(NLL.EDI_Warehouse_Store_No);
PARAMETER(NLL.State_Tax_ID);
PARAMETER(NLL.Cust_Shipping_Temp_C_F);
PARAMETER(NLL.One_Invoice_Per_PO);
PARAMETER(NLL.EDI_Advanced_Ship_Notice);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?PRTOBJ calls after print of detail format

//?Embedded PRTOBJ : PRT Cust emails       PO
//?** Fax/Email addresses for Invoices & Statements      P000198
EXECUTE FUNCTION(PRT Cust Faxes/Emails PO) TYPE(PRTOBJ);
PARAMETER(CUR.Ship_To_Customer);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?USER: Print required level totals

CASE;

IF NEW Customer_Name;
// Print Customer Name totals format
PRINT Customer Name totals format;

ENDIF;

