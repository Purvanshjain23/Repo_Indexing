// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PLDEXFR
// ?Date: 14.08.2025 Time: 02:53:49
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?*** NOTE  ***********************************************************
//?This function is wrapped into a procedure so it can be invoked from
//?the WEB program. If parms are changed the proc. needs to be recreated.
//? From a command line, type STRSQL, then enter the following:
//?CREATE PROCEDURE PRKPLIB/PLDEXFRP(OUT rtncde CHAR (7 ), IN
//?movmnt CHAR (7 ), IN killdt CHAR (7 ), IN delvdt CHAR (7 ), IN
//?delvtm CHAR (4 )) LANGUAGE RPG NOT DETERMINISTIC CONTAINS SQL
//?EXTERNAL NAME PRKPLIB/PLDEXFR PARAMETER STYLE GENERAL
//?******************************************************************
//?MODIFICATIONS
//?11/02/2020 ISE H16853 - CHANGE BUY ORDER NUMBER FIELD LENGTH FROM 5 TO 7
// PAR.BOL HPS Movement Number = CVTVAR(PAR.Movement Alpha USR)
PAR.BOL_HPS_Movement_Number = CVTVAR(PAR.Movement_Alpha_USR);

CASE;

// IF PAR.Date Alpha USR is Entered
IF PAR.Date_Alpha_USR <> *BLANK;

// PAR.Kill Date Usr = CVTVAR(PAR.Date Alpha USR)
PAR.Kill_Date_Usr = CVTVAR(PAR.Date_Alpha_USR);

ENDIF;

CASE;

// IF PAR.Date Alpha Usr 2 is Entered
IF PAR.Date_Alpha_Usr_2 <> *BLANK;

// PAR.Date To   USR = CVTVAR(PAR.Date Alpha Usr 2)
PAR.Date_To_USR = CVTVAR(PAR.Date_Alpha_Usr_2);

ENDIF;

CASE;

// IF PAR.Time 4 Alpha USR is Entered
IF PAR.Time_4_Alpha_USR <> *BLANK;

// PAR.Time USR = CVTVAR(PAR.Time 4 Alpha USR)
PAR.Time_USR = CVTVAR(PAR.Time_4_Alpha_USR);

ENDIF;

//?******************************************************************
//?Called from the WEB to transfer a delivery to a new date &/or time slot
//?******************************************************************
//?RMC 11/16/05 get co for user
// Call program Rtv Co for User       XF.
CALL PROGRAM(Rtv Co for User       XF) ('PLF8XFR');
PARAMETER(LCL.CC_Company_Number);
PARAMETER('HPE');

//?*****
EXECUTE FUNCTION(RTV BOL from Movement RT) TYPE(RTVOBJ) FILE(PLAECPP)           AB1253870;
PARAMETER(LCL.CC_Company_Number);
PARAMETER(LCL.BOL_Kill_Date);
PARAMETER(LCL.DSD_Delivery_Date);
PARAMETER(LCL.DSD_Delivery_Time);
PARAMETER(LCL.DSD_Delivery_Time_Seq);
PARAMETER(PAR.BOL_HPS_Movement_Number);
PARAMETER(PAR.PD_Producer_Code);
PARAMETER(PAR.PL_Location_Code);
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.BOH_Buy_Order_Number);
PARAMETER(PAR.BOL_Load_Number);
PARAMETER(LCL.Return_Code_USR);
{
 //?USER: Initialize routine

 // PAR.Return Code USR = CND.*Normal
 PAR.Return_Code_USR = *BLANK;

 //?USER: Processing if Data record not found

 // PAR.Return Code USR = CND.*Record does not exist
 PAR.Return_Code_USR = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF PAR.BOH Buy Order Number is EQ Zero
IF PAR.BOH_Buy_Order_Number = *ZERO;

QUIT;

ENDIF;

//?*****
//?Get last BO/Load Number used for new Kill Date
CASE;

// IF PAR.Kill Date Usr NE LCL.BOL Kill Date
IF PAR.Kill_Date_Usr <> LCL.BOL_Kill_Date;

// AND PAR.Kill Date Usr is Entered
AND PAR.Kill_Date_Usr <> 0;

EXECUTE FUNCTION(Rtv Last BOL f/prd,kl RT) TYPE(RTVOBJ) FILE(PKAXCPP)           AB1251132;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.PD_Producer_Code);
PARAMETER(PAR.PL_Location_Code);
PARAMETER(PAR.Kill_Date_Usr);
PARAMETER(LCL.Buy_Order_New_Usr);
PARAMETER(LCL.Buy_Order_Load_New_Usr);
PARAMETER(WRK.Record_Found_USR);
{
 //?USER: Process Data record

 // PAR.BOH Buy Order Number = DB1.BOH Buy Order Number
 PAR.BOH_Buy_Order_Number = DB1.BOH_Buy_Order_Number;

 // PAR.BOL Load Number = DB1.BOL Load Number
 PAR.BOL_Load_Number = DB1.BOL_Load_Number;

}


//?Maybe header exists without any loads yet.
CASE;

// IF LCL.Buy Order New Usr is EQ Zero
IF LCL.Buy_Order_New_Usr = *ZERO;

EXECUTE FUNCTION(Rtv BOH For Prdcr/Loc RT) TYPE(RTVOBJ) FILE(PKAWCPP)           AB1246633;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(LCL.Buy_Order_New_Usr);
PARAMETER(PAR.Kill_Date_Usr);
PARAMETER(PAR.PD_Producer_Code);
PARAMETER(PAR.PL_Location_Code);
{
 //?USER: Initialize routine

 // PAR.BOH Buy Order Number = CON.*ZERO
 PAR.BOH_Buy_Order_Number = *ZERO;

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


CASE;

// IF LCL.Buy Order New Usr is EQ Zero
IF LCL.Buy_Order_New_Usr = *ZERO;

PGM.*Return_code = 'ERROR';

RETURN;

ENDIF;

ENDIF;

// LCL.Buy Order Load New Usr = LCL.Buy Order Load New Usr + CON.1
LCL.Buy_Order_Load_New_Usr = LCL.Buy_Order_Load_New_Usr + 1;

// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Buy Order New Usr = PAR.BOH Buy Order Number
LCL.Buy_Order_New_Usr = PAR.BOH_Buy_Order_Number;

// LCL.Buy Order Load New Usr = PAR.BOL Load Number
LCL.Buy_Order_Load_New_Usr = PAR.BOL_Load_Number;

ENDIF;

//?*****
//?Do the Transfer if Kill &/or Delivery Date &/or time changed.
CASE;

// IF PAR.Date To   USR NE LCL.DSD Delivery Date
IF PAR.Date_To_USR <> LCL.DSD_Delivery_Date;

// OR PAR.Time USR NE LCL.DSD Delivery Time
OR PAR.Time_USR <> LCL.DSD_Delivery_Time;

// OR PAR.Kill Date Usr NE LCL.BOL Kill Date
OR PAR.Kill_Date_Usr <> LCL.BOL_Kill_Date;

//?*****
// LCL.Kill Date Usr = PAR.Kill Date Usr
LCL.Kill_Date_Usr = PAR.Kill_Date_Usr;

// LCL.Date To   USR = PAR.Date To   USR
LCL.Date_To_USR = PAR.Date_To_USR;

// LCL.Time USR = PAR.Time USR
LCL.Time_USR = PAR.Time_USR;

//?if new kill date not passed in, use DSD for the BOL
CASE;

// IF PAR.Kill Date Usr is Not Entered
IF PAR.Kill_Date_Usr = *ZERO;

// LCL.Kill Date Usr = LCL.BOL Kill Date
LCL.Kill_Date_Usr = LCL.BOL_Kill_Date;

ENDIF;

//?if new delivery date not passed in, use DSD for the BOL
CASE;

// IF PAR.Date To   USR is Not Entered
IF PAR.Date_To_USR = *ZERO;

// LCL.Date To   USR = LCL.DSD Delivery Date
LCL.Date_To_USR = LCL.DSD_Delivery_Date;

ENDIF;

//?if new delivery time not passed in, use DSD for the BOL
CASE;

// IF PAR.Time USR is Not Entered
IF PAR.Time_USR = *ZERO;

// LCL.Time USR = LCL.DSD Delivery Time
LCL.Time_USR = LCL.DSD_Delivery_Time;

ENDIF;

//?*****
//?Get next sequence nbr new DSD Kill &/or Delivery Date &/or time
EXECUTE FUNCTION(Rtv Next Seq Num      RT) TYPE(RTVOBJ) FILE(PLAECPP)           AB1248408;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(LCL.Kill_Date_Usr);
PARAMETER(LCL.Date_To_USR);
PARAMETER(LCL.Time_USR);
PARAMETER(LCL.New_Delivery_Time_Seq_USR);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PAR.DSD Delivery Time Seq = CON.1
 PAR.DSD_Delivery_Time_Seq = 1;

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PAR.DSD Delivery Time Seq = DB1.DSD Delivery Time Seq + CON.1
 PAR.DSD_Delivery_Time_Seq = DB1.DSD_Delivery_Time_Seq + 1;

 QUIT;

}


//?*****
//?Call the routine to do the transfer
// Call program Exc Transfer Delivery XF.
CALL PROGRAM(Exc Transfer Delivery XF) ('PLCWXFR');
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.BOH_Buy_Order_Number);
PARAMETER(PAR.BOL_Load_Number);
PARAMETER(LCL.BOL_Kill_Date);
PARAMETER(PAR.BOL_HPS_Movement_Number);
PARAMETER(PAR.PD_Producer_Code);
PARAMETER(LCL.Kill_Date_Usr);
PARAMETER(LCL.Buy_Order_New_Usr);
PARAMETER(LCL.Buy_Order_Load_New_Usr);
PARAMETER(WRK.Status_1);
PARAMETER(LCL.Time_USR);
PARAMETER(LCL.Date_To_USR);
PARAMETER(LCL.New_Delivery_Time_Seq_USR);

//?*****
ENDIF;

//?*****
//?Set return code to done
// PGM.*Return code = CND.*Normal
PGM.*Return_code = *BLANK;

