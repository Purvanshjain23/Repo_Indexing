// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKLIXFR
// ?Date: 14.08.2025 Time: 02:52:04
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Modifications and Comments
DO;

//?H16853 ISE 11/02/20 - Increased the Buy Order Number field
//? length from 5 to 7.
ENDDO;

EXECUTE FUNCTION(Rtv/Chg Int Live Data RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1200902;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.BOH_Buy_Order_Number);
PARAMETER(PAR.BOL_Load_Number);
PARAMETER(PAR.TH_Tattoo_Number);
PARAMETER(PAR.TH_Kill_Date);
{
 //?USER: Process Data record

 CASE;

 // IF DB1.TH Head Killed is Not Zero
 IF DB1.TH_Head_Killed <> *ZERO;

 // AND DB1.TH Recalc Live Wgt is EQ 1
 AND DB1.TH_Recalc_Live_Wgt = 1;

 //?Rtv Live weight total calc'd from carc dtl:  Sum(hot weight/yld %)
 EXECUTE FUNCTION(Rtv f/Int TH Live Wgt RT) TYPE(RTVOBJ) FILE(PKB1CPP)           AB1200906;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(PAR.Live_wgt_total_11_1_USR);
 {
  //?USER: Initialize routine

  // PAR.Live wgt total 11.1   USR = CON.*ZERO
  PAR.Live_wgt_total_11_1_USR = *ZERO;

  //?USER: Process Data record

  CASE;

  // IF DB1.CD Record Add/Del Sts is Add/Blank
  IF DB1.CD_Record_Add_Del_Sts = 'A'/*BLANK;

  // AND DB1.RS Record Status is Active
  AND DB1.RS_Record_Status = 'A';

  // Call program Clc Live Weight       XF.
  CALL PROGRAM(Clc Live Weight       XF) ('PDO1XFR');
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.CD_Carcass_Hot_Weight);
  PARAMETER(WRK.Live_Weight_11_2_Usr);
  PARAMETER(LCL.Live_wgt_total_11_1_USR);
  PARAMETER(WRK.Live_Weight_5_0_USR);

  // PAR.Live wgt total 11.1   USR = PAR.Live wgt total 11.1   USR + LCL.Live wgt total 11.1   USR
  PAR.Live_wgt_total_11_1_USR = PAR.Live_wgt_total_11_1_USR + LCL.Live_wgt_total_11_1_USR;

  ENDIF;

 }

 // WRK.TH Adj Live Wgt = PAR.Live wgt total 11.1   USR
 WRK.TH_Adj_Live_Wgt = PAR.Live_wgt_total_11_1_USR;

 //?Calc Avg Live Wgt
 //?Avg Live Weight
 CASE;

 // IF DB1.TH Head Killed is GT Zero
 IF DB1.TH_Head_Killed > *ZERO;

 // WRK.TH Avg Live Wgt = PAR.Live wgt total 11.1   USR / DB1.TH Head Killed *
 WRK.TH_Avg_Live_Wgt = PAR.Live_wgt_total_11_1_USR / DB1.TH_Head_Killed;

 ENDIF;

 // Compute: Live wgt f/adj
 WRK.TH_Live_Wgt = WRK.TH_Adj_Live_Wgt + ( WRK.TH_Avg_Live_Wgt * ( DB1.TH_Yard_Deads
 + DB1.TH_Head_Condemned ) );

 //?Actual Yield
 CASE;

 // IF WRK.TH Live Wgt is Greater then Zero
 IF WRK.TH_Live_Wgt > *ZERO;

 // Compute: Actual Yield
 WRK.TH_Actual_Yield = ( DB1.TH_Hot_Wgt / WRK.TH_Live_Wgt ) * 100;

 ENDIF;

 //?Adjusted Yield
 CASE;

 // IF WRK.TH Adj Live Wgt is Greater then Zero
 IF WRK.TH_Adj_Live_Wgt > *ZERO;

 // Compute: Adj Actual Yield
 WRK.TH_Adj_Actual_Yield = ( DB1.TH_Hot_Wgt / WRK.TH_Adj_Live_Wgt ) * 100;

 ENDIF;

 // WRK.TH Yield Difference = WRK.TH Actual Yield % - DB1.TH Std Yield Percent
 WRK.TH_Yield_Difference = WRK.TH_Actual_Yield - DB1.TH_Std_Yield_Percent;

 EXECUTE FUNCTION(Chg Tattoo Header     CH) TYPE(CHGOBJ) FILE(PKA1CPP)           AB1101744;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(DB1.TH_Purchase_Date);
 PARAMETER(DB1.TH_Group_Reference);
 PARAMETER(DB1.TH_Live_Purchase_UOM);
 PARAMETER(DB1.TH_Live_Purchase_Price);
 PARAMETER(DB1.TH_Live_Gross_Amt);
 PARAMETER(DB1.TH_LIve_Net_Amt);
 PARAMETER(DB1.TH_Resale_UOM);
 PARAMETER(DB1.TH_Recalc_Live_Wgt_Yld);
 PARAMETER(DB1.TH_Pricing_Date);
 PARAMETER(DB1.TH_Resale_Spread_Sts);
 PARAMETER(DB1.TH_Dead_On_Arrival);
 PARAMETER(DB1.TH_Head_Received);
 PARAMETER(DB1.TH_Yard_Deads);
 PARAMETER(DB1.TH_Held_Over);
 PARAMETER(DB1.TH_Head_Condemned);
 PARAMETER(DB1.TH_Head_Killed);
 PARAMETER(DB1.TH_Head_Adds);
 PARAMETER(DB1.TH_Head_Accepted);
 PARAMETER(WRK.TH_Live_Wgt);
 PARAMETER(WRK.TH_Adj_Live_Wgt);
 PARAMETER(DB1.TH_Hot_Wgt);
 PARAMETER(DB1.TH_Tot_Loin_Eye_Depth);
 PARAMETER(DB1.TH_Tot_Backfat_Inches);
 PARAMETER(DB1.TH_Tot_Light_Reflectance);
 PARAMETER(WRK.TH_Avg_Live_Wgt);
 PARAMETER(DB1.TH_Avg_Hot_Wgt);
 PARAMETER(DB1.TH_Avg_Light_Reflectance);
 PARAMETER(DB1.TH_Avg_Lean_Percent);
 PARAMETER(DB1.TH_Avg_Loin_Eye_Depth);
 PARAMETER(DB1.TH_Avg_Backfat);
 PARAMETER(DB1.TH_Std_Yield_Percent);
 PARAMETER(WRK.TH_Actual_Yield);
 PARAMETER(WRK.TH_Adj_Actual_Yield);
 PARAMETER(WRK.TH_Yield_Difference);
 PARAMETER(DB1.TH_Recalc_Live_Wgt);
 PARAMETER(DB1.TH_CM_Market_Price);
 PARAMETER(DB1.TH_CM_Base_Mkt_Price);
 PARAMETER(DB1.TH_CM_Base_Mkt_Price_Amt);
 PARAMETER(DB1.TH_CM_Sort_Discount_Amt);
 PARAMETER(DB1.TH_CM_Yield_Gain_Loss_Amt);
 PARAMETER(DB1.TH_CM_Base_Carcass_Value);
 PARAMETER(DB1.TH_CM_LN_AddOn_Deduct_Amt);
 PARAMETER(DB1.TH_CM_Carcass_Gross_Amt);
 PARAMETER(DB1.TH_Deduction_Amt);
 PARAMETER(DB1.TH_Total_Net_WO_Adds);
 PARAMETER(DB1.TH_Carcass_Net_Amt);
 PARAMETER(DB1.TH_Additions_Amt);
 PARAMETER(DB1.TH_Payment_Gross);
 PARAMETER(DB1.Th_Payment_Net_Amt);
 PARAMETER(DB1.TH_AP_Voucher_Document#);
 PARAMETER(DB1.TH_Freight_Amount);
 PARAMETER(DB1.TH_Accrual_Amount);
 PARAMETER(DB1.TH_Fixed_Cost_Amount);
 PARAMETER(DB1.TH_Calc_Net_Sts);
 PARAMETER(DB1.TH_Payment_Sts);
 PARAMETER(DB1.TH_Header_Error_Sts);
 PARAMETER(DB1.TH_Detail_Error_Sts);
 PARAMETER(DB1.TH_Kill_Balancing_Sts);
 PARAMETER(DB1.TH_Bal_to_Kill_Gen);
 PARAMETER(DB1.TH_Commission_A_P_Voucher);
 PARAMETER(DB1.TH_Voucher_Payment_Date);
 PARAMETER(DB1.TH_User_Error_Override);
 PARAMETER(DB1.TH_Held_Over_Record);
 PARAMETER(DB1.TH_Sex);
 PARAMETER(DB1.TH_Held_Ovr_Completed_Dte);
 PARAMETER(DB1.TH_Commission_Paid_Date);
 PARAMETER(DB1.TH_Actual_Check_Date);
 PARAMETER(DB1.TH_Shipped_Weight);
 PARAMETER(DB1.TH_Avg_Hot_Wgt_EXC_ADD);
 PARAMETER(DB1.TH_FFLI);
 PARAMETER(DB1.TH_Kill_Product_Value);
 PARAMETER(DB1.TH_Cut_Product_Value);
 PARAMETER(DB1.TH_Render_Product_Value);
 PARAMETER(DB1.TH_Head_Excluded);
 PARAMETER(DB1.TH_CM_Bse_Mkt_Live_CWT);
 PARAMETER(DB1.TH_CM_Bse_Mkt_Carc_CWT);
 PARAMETER(DB1.TH_CM_Srt_Dsc_Live_CWT);
 PARAMETER(DB1.TH_CM_Srt_Dsc_Carc_CWT);
 PARAMETER(DB1.TH_CM_Yld_G_L_Live_CWT);
 PARAMETER(DB1.TH_CM_Yld_G_L_Carc_CWT);
 PARAMETER(DB1.TH_CM_Crc_Val_Live_CWT);
 PARAMETER(DB1.TH_CM_Crc_Val_Carc_CWT);
 PARAMETER(DB1.TH_CM_Lean_Prem_Live_CWT);
 PARAMETER(DB1.TH_CM_Lean_Prem_Carc_CWT);
 PARAMETER(DB1.TH_CM_Gross_Live_CWT);
 PARAMETER(DB1.TH_CM_Gross_Carc_CWT);
 PARAMETER(DB1.TH_Source_Type);
 PARAMETER(DB1.TH_Scale_Ticket_Sts);
 PARAMETER(DB1.TH_Payment_Type);
 PARAMETER(DB1.TH_HPS_Movement_Ref_#);
 PARAMETER(DB1.TH_Source_Code);
 PARAMETER(DB1.TH_Hog_Class_Type);
 PARAMETER(DB1.TH_Posted_to_HPS_Flag);
 PARAMETER(DB1.TH_Schedule_Kill_Shift);
 PARAMETER(DB1.TH_Shift_Held_Over);
 PARAMETER(DB1.DF_Defect_Code);
 PARAMETER(DB1.THP_Process_Code);
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(DB1.PL_Location_Code);
 PARAMETER(DB1.HB_Buyer_Code);
 PARAMETER(DB1.GN_Genetic_Code);
 PARAMETER(DB1.HC_Class_Code);
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

 ENDIF;

}


