// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PBK4XFR
// ?Date: 14.08.2025 Time: 03:48:21
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?E2885 for testing
EXECUTE FUNCTION(Rtv Prod f/Capcty Cde RT) TYPE(RTVOBJ) FILE(PMFDREP)           AC2079756;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.CIE_Capacity_Code);
PARAMETER(PAR.Production_Type);
PARAMETER(PAR.Production_Date);
PARAMETER(PAR.Weight_Production_USR);
PARAMETER(PAR.Pieces_Production_USR);
PARAMETER(PAR.PS_Production_Warehouse);
PARAMETER(PAR.Production_Qty);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 EXECUTE FUNCTION(Rtv Production-AllWhs RT) TYPE(RTVOBJ) FILE(PDI8CPP)           AC2050625;
 PARAMETER(DB1.Company_Number);
 PARAMETER(PAR.Production_Type);
 PARAMETER(PAR.Production_Date);
 PARAMETER(DB1.Item_Code);
 PARAMETER(PAR.Weight_Production_USR);
 PARAMETER(PAR.Pieces_Production_USR);
 PARAMETER(PAR.PS_Production_Warehouse);
 PARAMETER(PAR.Production_Qty);
 {
  //?USER: Initialize routine

  //?accumulate for items in a capacity code - so dont zero out
  //?USER: Processing if Data record not found

  // PAR.Weight Production USR = PAR.Weight Production USR + CON.*ZERO
  PAR.Weight_Production_USR = PAR.Weight_Production_USR + 0;

  // PAR.Pieces Production USR = PAR.Pieces Production USR + CON.*ZERO
  PAR.Pieces_Production_USR = PAR.Pieces_Production_USR + 0;

  //?USER: Process Data record

  // Weight Production
  WRK.Weight_Production_USR = ( ( DB1.PS_Weight_Standard + DB1.PS_Weight_Prod_Adj )
  - DB1.PS_Weight_Converted ) - DB1.PS_Weight_Whs_Tfr_Adj;

  CASE;

  // IF DB1.PS Piece Count Item is Not Yes
  IF DB1.PS_Piece_Count_Item = *BLANK/'N';

  CASE;

  // IF DB1.PS Unit Weight is Greater than zero
  IF DB1.PS_Unit_Weight > *ZERO;

  // WRK.Production Qty = WRK.Weight Production USR / DB1.PS Unit Weight *Rounded
  WRK.Production_Qty = WRK.Weight_Production_USR / DB1.PS_Unit_Weight 'H';

  // PAR.Production Qty = PAR.Production Qty + WRK.Production Qty
  PAR.Production_Qty = PAR.Production_Qty + WRK.Production_Qty;

  ENDIF;

  ENDIF;

  // PAR.Weight Production USR = PAR.Weight Production USR + WRK.Weight Production USR
  PAR.Weight_Production_USR = PAR.Weight_Production_USR + WRK.Weight_Production_USR;

  // Pieces Production
  WRK.Pieces_Production_USR = ( ( DB1.PS_Pieces_Standard + DB1.PS_Pieces_Prod_Adj )
  - DB1.PS_Pieces_Converted ) - DB1.PS_Pieces_Whs_Tfr_Adj;

  CASE;

  // IF DB1.PS Piece Count Item is yes
  IF DB1.PS_Piece_Count_Item = 'Y';

  EXECUTE FUNCTION(RTV Pces/Bag,Bag/Unt,umRT) TYPE(RTVOBJ) FILE(CABZREP)          AC1606251;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Item_Code);
  PARAMETER(NLL.Description_Line_One);
  PARAMETER(NLL.UOM_Primary);
  PARAMETER(NLL.Unit_Weight);
  PARAMETER(WRK.Piece_Count_Item);
  PARAMETER(WRK.Pieces_Per_Bag);
  PARAMETER(WRK.Bags_Per_Unit);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // Production Quantity
  WRK.Production_Qty = WRK.Pieces_Production_USR / ( WRK.Pieces_Per_Bag
  * WRK.Bags_Per_Unit 'H' );

  // PAR.Production Qty = PAR.Production Qty + WRK.Production Qty
  PAR.Production_Qty = PAR.Production_Qty + WRK.Production_Qty;

  // PAR.Pieces Production USR = PAR.Pieces Production USR + WRK.Pieces Production USR
  PAR.Pieces_Production_USR = PAR.Pieces_Production_USR + WRK.Pieces_Production_USR;

  ENDIF;

  // PAR.PS Shift/Priority = DB1.PS Shift/Priority
  PAR.PS_Production_Warehouse = DB1.PS_Production_Warehouse;

 }

}


