// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKSNDFR
// ?Date: 14.08.2025 Time: 02:50:23
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modifications and Comments
DO;

//?E3625 JJH 12/04/14 - Recompile because PrklISTesting List for
//? field *USER to add users Julius High (ISJHIGH) and Collin Lynch
//? ISCLYNC.
//?H16853 ISE 01/23/2021 - Increased the length from 5 to 7 and
//?                        corrected the alignment of Buy Order Number field
ENDDO;

EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(LCL.Oms_Warehouse_Code);
PARAMETER(LCL.CC_Company_Number);
PARAMETER('HPE');
PARAMETER(LCL.Oms_SalesPerson_Code);
PARAMETER(LCL.Oms_Allow_Multi_Company);
PARAMETER(LCL.Oms_Default_Printer);
PARAMETER(LCL.Oms_Name);
PARAMETER(LCL.Oms_System_Value_Alpha);
PARAMETER(LCL.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


//?USER: Initialize subfile control

CASE;

// IF LCL.Oms Allow Multi-Company is No
IF LCL.Oms_Allow_Multi_Company = 'N';

// CTL.CC Company Number = LCL.CC Company Number
CTL.CC_Company_Number = LCL.CC_Company_Number;

ENDIF;

CASE;

// IF JOB.*USER is PorkISTesting
IF JOB.*USER = 'PRKTEST'/'ISPPATE'/'ISSMASO'/'ISRCENT'/'ISPURVAP'/'ISROSEM'/'ISSHARONZ'            +
/'ISSZURN'/'ISJHIGH'/'ISJBADE'/'ISJAMESB'/'ISDNGUY'/'ISDANNYN'/'PRKTESTGU'/'PRKTESTST'             +
/'PRKTESTTF'/'TPMTEST'/'TFTST961'/'ISSUSANM'/'ISJULIUSH'/'ISBGUTI'/'ISBARBG'/'ISBBARK'             +
/'ISNFOY'/'ISNATHANF'/'ISDREDD'/'ISABANS';

// LCL.Display Field Usr = CND.*Yes
LCL.Display_Field_Usr = *YES;

// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Display Field Usr = CND.*No
LCL.Display_Field_Usr = *NO;

ENDIF;

//?USER: Initialize subfile record from DBF record

CASE;

// IF CTL.CC Company Number NE RCD.CC Company Number
IF CTL.CC_Company_Number <> RCD.CC_Company_Number;

// AND CTL.CC Company Number is Greater Then *zero
AND CTL.CC_Company_Number > *ZERO;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?USER: Process subfile record (Pre-confirm)

CASE;

// IF RCD.*SFLSEL is *Revise
IF RCD.*SFLSEL = '2';

CASE;

// IF LCL.Oms Allow Multi-Company is No
IF LCL.Oms_Allow_Multi_Company = 'N';

// AND LCL.CC Company Number NE RCD.CC Company Number
AND LCL.CC_Company_Number <> RCD.CC_Company_Number;

ENDIF;

// Call program Edt Company Control   E1.
CALL PROGRAM(Edt Company Control   E1) ('PKSOE1R');
PARAMETER(RCD.CC_Company_Number);

// IF RCD.*SFLSEL is *Option 7 (Reusable)
IF RCD.*SFLSEL = '7';

CASE;

// IF JOB.*USER is PorkISTesting
IF JOB.*USER = 'PRKTEST'/'ISPPATE'/'ISSMASO'/'ISRCENT'/'ISPURVAP'/'ISROSEM'/'ISSHARONZ'            +
/'ISSZURN'/'ISJHIGH'/'ISJBADE'/'ISJAMESB'/'ISDNGUY'/'ISDANNYN'/'PRKTESTGU'/'PRKTESTST'             +
/'PRKTESTTF'/'TPMTEST'/'TFTST961'/'ISSUSANM'/'ISJULIUSH'/'ISBGUTI'/'ISBARBG'/'ISBBARK'             +
/'ISNFOY'/'ISNATHANF'/'ISDREDD'/'ISABANS';

// Call program Edt Payment Process   E1.
CALL PROGRAM(Edt Payment Process   E1) ('PKSPE1R');
PARAMETER(RCD.CC_Company_Number);

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Option not allowed'
ERROR(PRK0648);
MSGPARM(RCD.*SFLSEL);

ENDIF;

// IF RCD.*SFLSEL is *Option 8 request
IF RCD.*SFLSEL = '8'/'8';

CASE;

// IF JOB.*USER is PorkISTesting
IF JOB.*USER = 'PRKTEST'/'ISPPATE'/'ISSMASO'/'ISRCENT'/'ISPURVAP'/'ISROSEM'/'ISSHARONZ'            +
/'ISSZURN'/'ISJHIGH'/'ISJBADE'/'ISJAMESB'/'ISDNGUY'/'ISDANNYN'/'PRKTESTGU'/'PRKTESTST'             +
/'PRKTESTTF'/'TPMTEST'/'TFTST961'/'ISSUSANM'/'ISJULIUSH'/'ISBGUTI'/'ISBARBG'/'ISBBARK'             +
/'ISNFOY'/'ISNATHANF'/'ISDREDD'/'ISABANS';

// Call program Edt - Company Values  UP.
CALL PROGRAM(Edt - Company Values  UP) ('PDEJEFR');
PARAMETER(PGM.*Return_code);

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Option not allowed'
ERROR(PRK0648);
MSGPARM(RCD.*SFLSEL);

ENDIF;

ENDIF;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

