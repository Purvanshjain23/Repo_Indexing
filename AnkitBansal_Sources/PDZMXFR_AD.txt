// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDZMXFR
// ?Date: 14.08.2025 Time: 03:33:42
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?E5445 JJH 03/26/16 - Update Order Detail Schedule & ODS-Inv
//?If Scheduled Ship Date Chg and Requested Ship Date does not chg
CASE;

// IF PAR.Scheduled Ship Date NE PAR.Scheduled Ship Date USR
IF PAR.Scheduled_Ship_Date <> PAR.Scheduled_Ship_Date_USR;

// AND PAR.Requested Ship Date EQ PAR.Requested Ship Date USR
AND PAR.Requested_Ship_Date = PAR.Requested_Ship_Date_USR;

// Call program Ext Upd Sched Ship Dt XF.
CALL PROGRAM(Ext Upd Sched Ship Dt XF) ('PBWQXFR');
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Scheduled_Ship_Date);

ENDIF;

//?E3796 JJH 03/03/15 - Add logic if Requested Ship Date Changes
//?Exit if no changes
CASE;

// IF PAR.Scheduled Ship Date EQ PAR.Scheduled Ship Date USR
IF PAR.Scheduled_Ship_Date = PAR.Scheduled_Ship_Date_USR;

// AND PAR.Ship From Warehouse EQ PAR.USR Warehouse Code
AND PAR.Ship_From_Warehouse = PAR.USR_Warehouse_Code;

// AND PAR.Requested Delivery Date EQ PAR.USR Requested Deliver Dte
AND PAR.Requested_Delivery_Date = PAR.USR_Requested_Deliver_Dte;

// AND PAR.Requested Delivery Time EQ PAR.Sched Delivery Time USR
AND PAR.Requested_Delivery_Time = PAR.Sched_Delivery_Time_USR;

// AND PAR.Requested Ship Date EQ PAR.Requested Ship Date USR
AND PAR.Requested_Ship_Date = PAR.Requested_Ship_Date_USR;

EXECUTE FUNCTION(CHG Order in Use       CH) TYPE(CHGOBJ) FILE(OPBFCPP)          AC1316259;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER('N');
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Date/Time Stamp.PgmIF) TYPE(EXCINTFUN)                     AC1425284;
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*PROGRAM
  PAR.Job_Name = JOB.*PROGRAM;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

 // Call program TRG Order Hdr CHG Trig XT.
 CALL PROGRAM(TRG Order Hdr CHG Trig XT) ('PDW9XFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Type_Sales);
 PARAMETER(DB1.AR_Customer_Number);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(DB1.Ship_To_Name);
 PARAMETER(DB1.Ship_To_Address_Line_1);
 PARAMETER(DB1.Ship_To_Address_Line_2);
 PARAMETER(DB1.Ship_To_Address_Line_3);
 PARAMETER(DB1.Ship_To_City);
 PARAMETER(DB1.Ship_To_State_Code);
 PARAMETER(DB1.Ship_To_Zip_Postal_Code);
 PARAMETER(DB1.Bill_to_Customer);
 PARAMETER(DB1.Bill_to_Name);
 PARAMETER(DB1.Bill_to_Address_Line_1);
 PARAMETER(DB1.Bill_to_Address_Line_2);
 PARAMETER(DB1.Bill_to_Address_Line_3);
 PARAMETER(DB1.Bill_to_City);
 PARAMETER(DB1.Bill_to_State_Code);
 PARAMETER(DB1.Bill_to_Zip_Postal_Code);
 PARAMETER(DB1.Customer_Purchase_Order_#);
 PARAMETER(DB1.Order_Date);
 PARAMETER(DB1.Requested_Ship_Date);
 PARAMETER(DB1.Actual_Shipped_Date);
 PARAMETER(DB1.Cancel_Date);
 PARAMETER(DB1.Terms_Code);
 PARAMETER(DB1.Special_Instructions);
 PARAMETER(DB1.Special_Instructions_2);
 PARAMETER(DB1.Carrier_Code);
 PARAMETER(DB1.Comment_Print_Acknowledge);
 PARAMETER(DB1.Comment_Print_Inv_Cr_Memo);
 PARAMETER(DB1.Comment_Print_Pick_Slip);
 PARAMETER(DB1.Comment_Print_Ship_Doc);
 PARAMETER(DB1.Reason_Code);
 PARAMETER(DB1.Order_in_Use);
 PARAMETER(DB1.Header_Status);
 PARAMETER(DB1.Header_Status_Last);
 PARAMETER(DB1.Order_Type_Print_Status);
 PARAMETER(DB1.Scheduled_Ship_Date);
 PARAMETER(DB1.User_Original_Entry);
 PARAMETER(DB1.Date_of_Original_Entry);
 PARAMETER(DB1.Order_Value_Total);
 PARAMETER(DB1.Order_Weight_Total);
 PARAMETER(DB1.Credit_Hold);
 PARAMETER(DB1.Production_Hold);
 PARAMETER(DB1.New_Customer_Hold);
 PARAMETER(DB1.Requested_Delivery_Date);
 PARAMETER(DB1.Requested_Delivery_Time);
 PARAMETER(DB1.Accounts_Receiv_Ent_1);
 PARAMETER(DB1.Accounts_Receiv_Ent_2);
 PARAMETER(DB1.Load_ID);
 PARAMETER(DB1.Absorbed_Freight_Rate_CWT);
 PARAMETER(DB1.Rated_Freight);
 PARAMETER(DB1.LTL_Flag);
 PARAMETER(DB1.Price_Audit);
 PARAMETER(DB1.Price_Status);
 PARAMETER(DB1.Shipping_Method);
 PARAMETER(DB1.Export_Status);
 PARAMETER(DB1.Palletize);
 PARAMETER(DB1.Shrink_Wrap);
 PARAMETER(DB1.Slip_Sheet);
 PARAMETER(DB1.Age_Code);
 PARAMETER(DB1.Reefer_Temperature);
 PARAMETER(DB1.Load_Type);
 PARAMETER(DB1.Attach_to_Invoice_Number);
 PARAMETER(DB1.Load_Plan_Order);
 PARAMETER(DB1.Print_Pick_Slip);
 PARAMETER(DB1.Resell_Reference_Number);
 PARAMETER(DB1.Special_Comment_1);
 PARAMETER(DB1.Special_Comment_2);
 PARAMETER(DB1.Affect_Auto_Accruals);
 PARAMETER(DB1.Sales_Route_Code);
 PARAMETER(DB1.Manager_Level_Code);
 PARAMETER(DB1.VP_Level_Code);
 PARAMETER(DB1.Attach_to_Order_Number);
 PARAMETER(DB1.Reason_for_Price_Audit);
 PARAMETER(DB1.Invoice_Number);
 PARAMETER(DB1.Invoice_Suffix);
 PARAMETER(DB1.Invoice_Date);
 PARAMETER(DB1.Event_Code);
 PARAMETER(DB1.Trans_Contol_AS400_Plant);
 PARAMETER(DB1.Modified_Flag);
 PARAMETER(DB1.A_R_order_Value_Total);
 PARAMETER(DB1.Billing_Activity_Type);
 PARAMETER(DB1.Block_Order_Flag);
 PARAMETER(DB1.Order_Certification_Flag);
 PARAMETER(DB1.Invoice_Order_Value_Tot);
 PARAMETER(DB1.Process_Sts_for_3C);
 PARAMETER(DB1.Order_Conf_Fax_Sts);
 PARAMETER(DB1.Manifest_Fax_Sts);
 PARAMETER(DB1.Invoice_Fax_Sts);
 PARAMETER(DB1.Transfer_in_Storage_Ind);
 PARAMETER(DB1.Email_Cust_On_Order_Ship);
 PARAMETER(DB1.Order_Emailed);
 PARAMETER(DB1.Export_Docs_Go_w_Driver);
 PARAMETER(DB1.Shipping_Temp_Code_C_F);
 PARAMETER(DB1.Broker_Order_Status);
 PARAMETER(DB1.Air_Freight_Order);
 PARAMETER(DB1.Order_Requires_Review);
 PARAMETER(DB1.OH_Load_Plan_Ready);
 PARAMETER(DB1.Export_USDA_Approved);
 PARAMETER(DB1.HPB_Ship_to_Warehouse);
 PARAMETER(DB1.OH_TF_Exempt_Code);
 PARAMETER(DB1.OH_Appt_Confirmation_Dt);
 PARAMETER(DB1.JPN_Invoice_Issuance_Date);
 PARAMETER(DB1.Load_Actual_Shipped_Date);
 PARAMETER(DB1.Load_BOL_Complete_Date);
 PARAMETER(DB1.Load_Truck_Departure_Date);
 PARAMETER(DB1.Maximum_Gross_Weight);
 PARAMETER(DB1.Time_of_Original_Entry);
 PARAMETER(DB1.OH_Appt_Confirmation_Tm);
 PARAMETER(DB1.Load_BOL_Complete_Time);
 PARAMETER(DB1.Load_Truck_Departure_Time);
 PARAMETER(DB1.Act_Frt_Reference_Amount);
 PARAMETER(DB1.Act_Non_Ref_Frt_Amount);
 PARAMETER(DB1.OH_Fuel_Surcharge_Amount);
 PARAMETER(DB1.OH_Total_Non_Ref_Frt_Amt);
 PARAMETER(DB1.OH_Total_Ref_Frt_Amt);
 PARAMETER(DB1.Claim_Number);
 PARAMETER(DB1.EDI_Status_1);
 PARAMETER(DB1.EDI_Status_2);
 PARAMETER(DB1.EDI_Status_3);
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);

}


RETURN;

ENDIF;

//?E004119 JJH 05/06/16 - Only generate a Load Order Change Log when
//?  the Sheduled Ship Date or Requested Delivery Date changes.
//?T12340 DN 01/22/18-Added Requested Delivery Time to Update OH TRG.
//?Change Scheduled Ship Date or Requested Delivery Date
CASE;

// IF PAR.Scheduled Ship Date NE PAR.Scheduled Ship Date USR
IF PAR.Scheduled_Ship_Date <> PAR.Scheduled_Ship_Date_USR;

// OR PAR.Requested Delivery Date NE PAR.USR Requested Deliver Dte
OR PAR.Requested_Delivery_Date <> PAR.USR_Requested_Deliver_Dte;

// OR PAR.Requested Delivery Time NE PAR.Requested Delivery TimeUS
OR PAR.Requested_Delivery_Time <> PAR.Requested_Delivery_TimeUS;

//?CHG: Scheduled Ship Date & Requested Delivery Dte/Tme if load blank, else
CASE;

// IF PAR.Load ID is Blank
IF PAR.Load_ID = *ZERO;

//?fp1309  slm  05262010
//?update the order header by order number
//?update the ship date and requested delivery date
//?update the order detail for shipping date
//?E11353 JJH 07/28/17 - Update Scheduled Ship Date
//?T12340 DN 01/22/18-Update Requested Delivery Time in Order Header TRG.
EXECUTE FUNCTION(Upd ShpDtRqDt/AllBy OrIF) TYPE(EXCINTFUN)                      AC1411547;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Scheduled_Ship_Date);
PARAMETER(PAR.Requested_Delivery_Date);
PARAMETER(PAR.Requested_Delivery_Time);
{
 //?Execute internal function

 //?T12340 DN 01/22/18-Update Requested Delivery Time in Order Header TRG.
 EXECUTE FUNCTION(CHG Sched ShpDte RqDlv2CH) TYPE(CHGOBJ) FILE(OPBFCPP)          AC2146869;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Order_Number);
 PARAMETER(PAR.Scheduled_Ship_Date);
 PARAMETER(PAR.Requested_Delivery_Date);
 PARAMETER(PAR.Requested_Delivery_Time);
 {
  //?USER: Processing after Data read

  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp.PgmIF) TYPE(EXCINTFUN)                     AC1425284;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

  // Call program TRG Order Hdr CHG Trig XT.
  CALL PROGRAM(TRG Order Hdr CHG Trig XT) ('PDW9XFR');
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Type_Sales);
  PARAMETER(DB1.AR_Customer_Number);
  PARAMETER(DB1.Ship_To_Customer);
  PARAMETER(DB1.Ship_To_Name);
  PARAMETER(DB1.Ship_To_Address_Line_1);
  PARAMETER(DB1.Ship_To_Address_Line_2);
  PARAMETER(DB1.Ship_To_Address_Line_3);
  PARAMETER(DB1.Ship_To_City);
  PARAMETER(DB1.Ship_To_State_Code);
  PARAMETER(DB1.Ship_To_Zip_Postal_Code);
  PARAMETER(DB1.Bill_to_Customer);
  PARAMETER(DB1.Bill_to_Name);
  PARAMETER(DB1.Bill_to_Address_Line_1);
  PARAMETER(DB1.Bill_to_Address_Line_2);
  PARAMETER(DB1.Bill_to_Address_Line_3);
  PARAMETER(DB1.Bill_to_City);
  PARAMETER(DB1.Bill_to_State_Code);
  PARAMETER(DB1.Bill_to_Zip_Postal_Code);
  PARAMETER(DB1.Customer_Purchase_Order_#);
  PARAMETER(DB1.Order_Date);
  PARAMETER(DB1.Requested_Ship_Date);
  PARAMETER(DB1.Actual_Shipped_Date);
  PARAMETER(DB1.Cancel_Date);
  PARAMETER(DB1.Terms_Code);
  PARAMETER(DB1.Special_Instructions);
  PARAMETER(DB1.Special_Instructions_2);
  PARAMETER(DB1.Carrier_Code);
  PARAMETER(DB1.Comment_Print_Acknowledge);
  PARAMETER(DB1.Comment_Print_Inv_Cr_Memo);
  PARAMETER(DB1.Comment_Print_Pick_Slip);
  PARAMETER(DB1.Comment_Print_Ship_Doc);
  PARAMETER(DB1.Reason_Code);
  PARAMETER(DB1.Order_in_Use);
  PARAMETER(DB1.Header_Status);
  PARAMETER(DB1.Header_Status_Last);
  PARAMETER(DB1.Order_Type_Print_Status);
  PARAMETER(DB1.Scheduled_Ship_Date);
  PARAMETER(DB1.User_Original_Entry);
  PARAMETER(DB1.Date_of_Original_Entry);
  PARAMETER(DB1.Order_Value_Total);
  PARAMETER(DB1.Order_Weight_Total);
  PARAMETER(DB1.Credit_Hold);
  PARAMETER(DB1.Production_Hold);
  PARAMETER(DB1.New_Customer_Hold);
  PARAMETER(DB1.Requested_Delivery_Date);
  PARAMETER(DB1.Requested_Delivery_Time);
  PARAMETER(DB1.Accounts_Receiv_Ent_1);
  PARAMETER(DB1.Accounts_Receiv_Ent_2);
  PARAMETER(DB1.Load_ID);
  PARAMETER(DB1.Absorbed_Freight_Rate_CWT);
  PARAMETER(DB1.Rated_Freight);
  PARAMETER(DB1.LTL_Flag);
  PARAMETER(DB1.Price_Audit);
  PARAMETER(DB1.Price_Status);
  PARAMETER(DB1.Shipping_Method);
  PARAMETER(DB1.Export_Status);
  PARAMETER(DB1.Palletize);
  PARAMETER(DB1.Shrink_Wrap);
  PARAMETER(DB1.Slip_Sheet);
  PARAMETER(DB1.Age_Code);
  PARAMETER(DB1.Reefer_Temperature);
  PARAMETER(DB1.Load_Type);
  PARAMETER(DB1.Attach_to_Invoice_Number);
  PARAMETER(DB1.Load_Plan_Order);
  PARAMETER(DB1.Print_Pick_Slip);
  PARAMETER(DB1.Resell_Reference_Number);
  PARAMETER(DB1.Special_Comment_1);
  PARAMETER(DB1.Special_Comment_2);
  PARAMETER(DB1.Affect_Auto_Accruals);
  PARAMETER(DB1.Sales_Route_Code);
  PARAMETER(DB1.Manager_Level_Code);
  PARAMETER(DB1.VP_Level_Code);
  PARAMETER(DB1.Attach_to_Order_Number);
  PARAMETER(DB1.Reason_for_Price_Audit);
  PARAMETER(DB1.Invoice_Number);
  PARAMETER(DB1.Invoice_Suffix);
  PARAMETER(DB1.Invoice_Date);
  PARAMETER(DB1.Event_Code);
  PARAMETER(DB1.Trans_Contol_AS400_Plant);
  PARAMETER(DB1.Modified_Flag);
  PARAMETER(DB1.A_R_order_Value_Total);
  PARAMETER(DB1.Billing_Activity_Type);
  PARAMETER(DB1.Block_Order_Flag);
  PARAMETER(DB1.Order_Certification_Flag);
  PARAMETER(DB1.Invoice_Order_Value_Tot);
  PARAMETER(DB1.Process_Sts_for_3C);
  PARAMETER(DB1.Order_Conf_Fax_Sts);
  PARAMETER(DB1.Manifest_Fax_Sts);
  PARAMETER(DB1.Invoice_Fax_Sts);
  PARAMETER(DB1.Transfer_in_Storage_Ind);
  PARAMETER(DB1.Email_Cust_On_Order_Ship);
  PARAMETER(DB1.Order_Emailed);
  PARAMETER(DB1.Export_Docs_Go_w_Driver);
  PARAMETER(DB1.Shipping_Temp_Code_C_F);
  PARAMETER(DB1.Broker_Order_Status);
  PARAMETER(DB1.Air_Freight_Order);
  PARAMETER(DB1.Order_Requires_Review);
  PARAMETER(DB1.OH_Load_Plan_Ready);
  PARAMETER(DB1.Export_USDA_Approved);
  PARAMETER(DB1.HPB_Ship_to_Warehouse);
  PARAMETER(DB1.OH_TF_Exempt_Code);
  PARAMETER(DB1.OH_Appt_Confirmation_Dt);
  PARAMETER(DB1.JPN_Invoice_Issuance_Date);
  PARAMETER(DB1.Load_Actual_Shipped_Date);
  PARAMETER(DB1.Load_BOL_Complete_Date);
  PARAMETER(DB1.Load_Truck_Departure_Date);
  PARAMETER(DB1.Maximum_Gross_Weight);
  PARAMETER(DB1.Time_of_Original_Entry);
  PARAMETER(DB1.OH_Appt_Confirmation_Tm);
  PARAMETER(DB1.Load_BOL_Complete_Time);
  PARAMETER(DB1.Load_Truck_Departure_Time);
  PARAMETER(DB1.Act_Frt_Reference_Amount);
  PARAMETER(DB1.Act_Non_Ref_Frt_Amount);
  PARAMETER(DB1.OH_Fuel_Surcharge_Amount);
  PARAMETER(DB1.OH_Total_Non_Ref_Frt_Amt);
  PARAMETER(DB1.OH_Total_Ref_Frt_Amt);
  PARAMETER(DB1.Claim_Number);
  PARAMETER(DB1.EDI_Status_1);
  PARAMETER(DB1.EDI_Status_2);
  PARAMETER(DB1.EDI_Status_3);
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);

 }

 EXECUTE FUNCTION(Upd ShpDt/Alc by Ord  RT) TYPE(RTVOBJ) FILE(OPBGWKP)           AC1425320;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Order_Number);
 PARAMETER(PAR.Scheduled_Ship_Date);
 PARAMETER(WRK.Production_Hold);
 {
  //?USER: Initialize routine

  //?***** PA PROCESS - USE REQUESTED SHIP DATE FOR Ship Date USR *****
  //?USER: Process Data record

  //?E3796 JJH 02/24/15 - Requseted Ship Date for Production Schedule
  //?- Allocation and Deallocation no longer occur for a changed
  //?  Scheduled Ship Date
  EXECUTE FUNCTION(Chg Sched Ship Dt/qty CH) TYPE(CHGOBJ) FILE(OPBGWKP)           AC1920285;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER(DB1.Quantity_Scheduled);
  PARAMETER(DB1.Weight_Scheduled);
  PARAMETER(PAR.Scheduled_Ship_Date);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Set Record Stamp CHGOB IF) TYPE(EXCINTFUN)                     AC1283156;
   PARAMETER(DB1.Job_Time);
   PARAMETER(DB1.User_Id);
   PARAMETER(DB1.Job_Name);
   PARAMETER(DB1.Job_Date);
   {
    //?Execute internal function

    // PAR.Job Time = JOB.*Job time
    PAR.Job_Time = JOB.*Job_time;

    // PAR.User Id = JOB.*USER
    PAR.User_Id = JOB.*USER;

    // PAR.Job Name = JOB.*PROGRAM
    PAR.Job_Name = JOB.*PROGRAM;

    // PAR.Job Date = JOB.*Job date
    PAR.Job_Date = JOB.*Job_date;

   }

  }

 }

 //?E11353 JJH 07/28/17 - Update Scheduled Ship Date
 // Call program Ext Upd Sched Ship Dt XF.
 CALL PROGRAM(Ext Upd Sched Ship Dt XF) ('PBWQXFR');
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Order_Number);
 PARAMETER(PAR.Scheduled_Ship_Date);

 //?FP1054 Post orders so they'll come off prod hold if they can
 // Call program EDT Post Open Orders   XF.
 CALL PROGRAM(EDT Post Open Orders   XF) ('PDHRXFR');
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Order_Number);
 PARAMETER(LCL.Ship_To_Customer);
 PARAMETER(LCL.Order_Value_Total);
 PARAMETER(LCL.Order_Weight_Total);
 PARAMETER('PS');

}


//?CHG: Scheduled Ship Date & Requested Delivery Dte/Tme if load blank, else
// IF *OTHERWISE
IF *OTHERWISE;

//?RMC 06/28/07 do this by LOAD to chg all the orders
//?fp1309  slm  05262010
//?LJB 10/30/2015 Remove Load Hdr from parm list. Pass SSD & Load ID
//?   using the Order Header                             E004119
//?T12340 DN 01/22/18-Update Requested Delivery Time in Order Header TRG.
//?- NOTE: This process should never fall into here since the Load ID
//?  would always be blank.
// Call program Upd ShpDt Alloc ByLd  XF.
CALL PROGRAM(Upd ShpDt Alloc ByLd  XF) ('PDLFXFR');
PARAMETER(JOB.*PROGRAM);
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Scheduled_Ship_Date);
PARAMETER(PAR.Requested_Delivery_Date);
PARAMETER(PAR.Requested_Delivery_Time);
PARAMETER(PAR.Load_ID);

ENDIF;

//?--- CHANGE LOG: Scheduled Ship Date
CASE;

// IF PAR.Scheduled Ship Date NE PAR.Scheduled Ship Date USR
IF PAR.Scheduled_Ship_Date <> PAR.Scheduled_Ship_Date_USR;

// WRK.Load Change Type = CND.Scheduled Ship Date
WRK.Load_Change_Type = 'SCHSHP';

// WRK.Department Control Code = CND.Traffic Dept
WRK.Department_Control_Code = 'TRF';

// WRK.Change Log Prior Value = CVTVAR(PAR.Scheduled Ship Date USR)
WRK.Change_Log_Prior_Value = CVTVAR(PAR.Scheduled_Ship_Date_USR);

// WRK.Change Log New Value = CVTVAR(PAR.Scheduled Ship Date)
WRK.Change_Log_New_Value = CVTVAR(PAR.Scheduled_Ship_Date);

// Call program CRT LOCL-Ord,no load   XF.
CALL PROGRAM(CRT LOCL-Ord,no load   XF) ('PBL6XFR');
PARAMETER(JOB.*Job_date);
PARAMETER(JOB.*Job_time);
PARAMETER(PAR.Load_ID);
PARAMETER(*ZERO);
PARAMETER(WRK.Load_Change_Type);
PARAMETER(WRK.Department_Control_Code);
PARAMETER(WRK.Change_Log_Prior_Value);
PARAMETER(WRK.Change_Log_New_Value);
PARAMETER(JOB.*USER);
PARAMETER(JOB.*PROGRAM);
PARAMETER(*BLANK);
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);

ENDIF;

//?--- CHANGE LOG: Requested Delivery Date/Time
//?T12340 DN 01/22/18-Check if Requested Delivery Time Changed.
CASE;

// IF PAR.Requested Delivery Date NE PAR.USR Requested Deliver Dte
IF PAR.Requested_Delivery_Date <> PAR.USR_Requested_Deliver_Dte;

// OR PAR.Requested Delivery Time NE PAR.Requested Delivery TimeUS
OR PAR.Requested_Delivery_Time <> PAR.Requested_Delivery_TimeUS;

// WRK.Load Change Type = CND.Requested Delivery Date
WRK.Load_Change_Type = 'RQSDLV';

// WRK.Department Control Code = CND.Traffic Dept
WRK.Department_Control_Code = 'TRF';

// WRK.Text USR 7 = CVTVAR(PAR.USR Requested Deliver Dte)
WRK.Text_USR_7 = CVTVAR(PAR.USR_Requested_Deliver_Dte);

// LCL.Calc 4 = PAR.Sched Delivery Time USR
LCL.Calc_4 = PAR.Sched_Delivery_Time_USR;

// WRK.Text USR 4 = CVTVAR(LCL.Calc 4)
WRK.Text_USR_4 = CVTVAR(LCL.Calc_4);

// WRK.Change Log Prior Value = CONCAT(WRK.Text USR 7,WRK.Text USR 4,CON.1)
WRK.Change_Log_Prior_Value = WRK.Text_USR_7 + WRK.Text_USR_4 (1);

// WRK.Text USR 7 = CVTVAR(PAR.Requested Delivery Date)
WRK.Text_USR_7 = CVTVAR(PAR.Requested_Delivery_Date);

// LCL.Calc 4 = PAR.Requested Delivery Time
LCL.Calc_4 = PAR.Requested_Delivery_Time;

// WRK.Text USR 4 = CVTVAR(LCL.Calc 4)
WRK.Text_USR_4 = CVTVAR(LCL.Calc_4);

// WRK.Change Log New Value = CONCAT(WRK.Text USR 7,WRK.Text USR 4,CON.1)
WRK.Change_Log_New_Value = WRK.Text_USR_7 + WRK.Text_USR_4 (1);

// Call program CRT LOCL-Ord,no load   XF.
CALL PROGRAM(CRT LOCL-Ord,no load   XF) ('PBL6XFR');
PARAMETER(JOB.*Job_date);
PARAMETER(JOB.*Job_time);
PARAMETER(PAR.Load_ID);
PARAMETER(*ZERO);
PARAMETER(WRK.Load_Change_Type);
PARAMETER(WRK.Department_Control_Code);
PARAMETER(WRK.Change_Log_Prior_Value);
PARAMETER(WRK.Change_Log_New_Value);
PARAMETER(JOB.*USER);
PARAMETER(JOB.*PROGRAM);
PARAMETER(*BLANK);
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);

ENDIF;

ENDIF;

//?Recalculate Deadline Departure Date/Time
//?Recalc and update deadline delivery dt/tm             E00127 & W288
CASE;

// IF PAR.Requested Delivery Date NE PAR.USR Requested Deliver Dte
IF PAR.Requested_Delivery_Date <> PAR.USR_Requested_Deliver_Dte;

// OR PAR.Requested Delivery Time NE PAR.Sched Delivery Time USR
OR PAR.Requested_Delivery_Time <> PAR.Sched_Delivery_Time_USR;

CASE;

// IF PAR.Load ID is Blank
IF PAR.Load_ID = *ZERO;

//?FP1054 recalc deadl for order thats NOT on a load
// Call program CLC Deadln Depart Dt  XF.
CALL PROGRAM(CLC Deadln Depart Dt  XF) ('POSCXFR');
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Ship_To_City);
PARAMETER(PAR.Ship_To_State_Code);
PARAMETER(PAR.Scheduled_Ship_Date);
PARAMETER(PAR.Requested_Delivery_Time);
PARAMETER(LCL.Deadline_Depart_Date_LH);
PARAMETER(LCL.Deadline_Depart_Time_LH);

EXECUTE FUNCTION(Upd Deadline Dte/Tme  RT) TYPE(RTVOBJ) FILE(OPBGWKP)           AC1648968;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(LCL.Deadline_Depart_Date_LH);
PARAMETER(LCL.Deadline_Depart_Time_LH);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Chg Deadline Dte/Tme  CH) TYPE(CHGOBJ) FILE(OPBGWKP)           AC1648969;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 PARAMETER(PAR.Deadline_Depart_Date_LH);
 PARAMETER(PAR.Deadline_Depart_Time_LH);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

}


ENDIF;

ENDIF;

//?Change Requested Ship Date - create change log only
CASE;

// IF PAR.Requested Ship Date NE PAR.Requested Ship Date USR
IF PAR.Requested_Ship_Date <> PAR.Requested_Ship_Date_USR;

//?Create Load Order Change Log for Requested Ship Date change
// WRK.Load Change Type = CND.Requested Ship Date
WRK.Load_Change_Type = 'RQSSHP';

// WRK.Department Control Code = CND.Traffic Dept
WRK.Department_Control_Code = 'TRF';

// WRK.Change Log Prior Value = CVTVAR(PAR.Requested Ship Date USR)
WRK.Change_Log_Prior_Value = CVTVAR(PAR.Requested_Ship_Date_USR);

// WRK.Change Log New Value = CVTVAR(PAR.Requested Ship Date)
WRK.Change_Log_New_Value = CVTVAR(PAR.Requested_Ship_Date);

// Call program CRT LOCL-Ord,no load   XF.
CALL PROGRAM(CRT LOCL-Ord,no load   XF) ('PBL6XFR');
PARAMETER(JOB.*Job_date);
PARAMETER(JOB.*Job_time);
PARAMETER(PAR.Load_ID);
PARAMETER(*ZERO);
PARAMETER(WRK.Load_Change_Type);
PARAMETER(WRK.Department_Control_Code);
PARAMETER(WRK.Change_Log_Prior_Value);
PARAMETER(WRK.Change_Log_New_Value);
PARAMETER(JOB.*USER);
PARAMETER(JOB.*PROGRAM);
PARAMETER(*BLANK);
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);

ENDIF;

//?Change Requested Ship Date / Req delivery then Reallocate
CASE;

// IF PAR.Requested Ship Date NE PAR.Requested Ship Date USR
IF PAR.Requested_Ship_Date <> PAR.Requested_Ship_Date_USR;

// OR PAR.Requested Delivery Date NE PAR.USR Requested Deliver Dte
OR PAR.Requested_Delivery_Date <> PAR.USR_Requested_Deliver_Dte;

EXECUTE FUNCTION(Upd ReqDt Alloc ByOrd RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC2102410;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Requested_Ship_Date);
PARAMETER(JOB.*PROGRAM);
{
 //?USER: Initialize routine

 //?***** PA PROCESS - USE REQUESTED SHIP DATE FOR Ship Date USR *****
 //?E3796 JJH 02/24/15 - This function was copied from the "Upd ShpDt
 //?  Alloc ByLoad RT - Order Header TRG.
 //?- The purpose of this function is to perform allocation and
 //?  Dealocation when the Requested Ship Date Changes for an Order.
 //?- All unused functionality has been removed from this function.
 //?USER: Process Data record

 EXECUTE FUNCTION(Upd ReqDt/Alc by Ord  RT) TYPE(RTVOBJ) FILE(OPBGWKP)           AC2102411;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(PAR.Requested_Ship_Date);
 PARAMETER(WRK.TXT_field_not_needed);
 {
  //?USER: Initialize routine

  //?***** PA PROCESS - USE REQUESTED SHIP DATE FOR Ship Date USR *****
  //?E3796 JJH 02/24/15 - This function was copied from the "Upd ReqDt
  //?  /Alc by Ord  RT - Order Detail.
  //?- The purpose of this function is to perform allocation and
  //?  Dealocation when the Requested Ship Date Changes for an Order.
  //?USER: Process Data record

  CASE;

  // IF DB1.OD Production Plan Sts is Yes
  IF DB1.OD_Production_Plan_Sts = *BLANK;

  // PAR.Quantity Scheduled = DB1.Quantity Scheduled
  PAR.Quantity_Scheduled = DB1.Quantity_Scheduled;

  // PAR.Weight Scheduled = DB1.Weight Scheduled
  PAR.Weight_Scheduled = DB1.Weight_Scheduled;

  //?E3796 JJH 02/24/15 - Changed Parameter Input Field
  //? Changed: I  Ship Date USR       FLD   DB1 Scheduled Ship Date
  //? To:      I  Ship Date USR       FLD   DB1 Requested Ship Date
  // Call program UPD Avail-To-Sell  ORD XF.
  CALL PROGRAM(UPD Avail-To-Sell  ORD XF) ('PDQNXFR');
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER(DB1.Item_Code);
  PARAMETER(DB1.Warehouse_Code);
  PARAMETER(DB1.Requested_Ship_Date);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(PAR.Quantity_Scheduled);
  PARAMETER(PAR.Weight_Scheduled);
  PARAMETER('OD');
  PARAMETER('CHGSHPDTE');
  PARAMETER(DB1.Item_Age_Days);
  PARAMETER(DB1.Production_Ovr_AgeDte_Fr);
  PARAMETER(DB1.Production_Ovr_AgeDte_To);

  //?FP1054 chg to use ordered instead of scheduled
  //?(uses scheduled, not ordered)
  // PAR.Quantity Scheduled = CON.*ZERO
  PAR.Quantity_Scheduled = *ZERO;

  // PAR.Weight Scheduled = CON.*ZERO
  PAR.Weight_Scheduled = *ZERO;

  //?E3796 JJH 02/24/15 - Changed Parameter Input Field
  //? Changed: I  Ship Date USR       FLD   PAR Scheduled Ship Date
  //? To:      I  Ship Date USR       FLD   PAR Requested Ship Date
  // Call program UPD Avail-To-Sell  ORD XF.
  CALL PROGRAM(UPD Avail-To-Sell  ORD XF) ('PDQNXFR');
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER(DB1.Item_Code);
  PARAMETER(DB1.Warehouse_Code);
  PARAMETER(PAR.Requested_Ship_Date);
  PARAMETER(DB1.Quantity_Ordered);
  PARAMETER(DB1.Weight_Ordered);
  PARAMETER(PAR.Quantity_Scheduled);
  PARAMETER(PAR.Weight_Scheduled);
  PARAMETER('OA');
  PARAMETER('CHGSHPDTE');
  PARAMETER(DB1.Item_Age_Days);
  PARAMETER(DB1.Production_Ovr_AgeDte_Fr);
  PARAMETER(DB1.Production_Ovr_AgeDte_To);

  //?10/06/16  RMC Re-instate this - want it to resched whatever it had before
  //?Schedule As Ordered.   FP1054- dont sched as ordered
  CASE;

  // IF PAR.Quantity Scheduled NE DB1.Quantity Scheduled
  IF PAR.Quantity_Scheduled <> DB1.Quantity_Scheduled;

  // Call program UPD Avail-To-Sell  ORD XF.
  CALL PROGRAM(UPD Avail-To-Sell  ORD XF) ('PDQNXFR');
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER(DB1.Item_Code);
  PARAMETER(DB1.Warehouse_Code);
  PARAMETER(PAR.Requested_Ship_Date);
  PARAMETER(DB1.Quantity_Scheduled);
  PARAMETER(DB1.Weight_Scheduled);
  PARAMETER(PAR.Quantity_Scheduled);
  PARAMETER(PAR.Weight_Scheduled);
  PARAMETER('AO');
  PARAMETER('CHGSHPDTE');
  PARAMETER(DB1.Item_Age_Days);
  PARAMETER(DB1.Production_Ovr_AgeDte_Fr);
  PARAMETER(DB1.Production_Ovr_AgeDte_To);

  ENDIF;

  //?FP1054 Chg sched ship date and Sched Qty and Weight
  //?E3796 JJH 02/24/15 - Use new function: Chg Reque Ship Dt/qty CH
  EXECUTE FUNCTION(Chg Reque Ship Dt/qty CH) TYPE(CHGOBJ) FILE(OPBGWKP)           AC2102414;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER(PAR.Quantity_Scheduled);
  PARAMETER(PAR.Weight_Scheduled);
  PARAMETER(PAR.Requested_Ship_Date);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Set Record Stamp CHGOB IF) TYPE(EXCINTFUN)                     AC1283156;
   PARAMETER(DB1.Job_Time);
   PARAMETER(DB1.User_Id);
   PARAMETER(DB1.Job_Name);
   PARAMETER(DB1.Job_Date);
   {
    //?Execute internal function

    // PAR.Job Time = JOB.*Job time
    PAR.Job_Time = JOB.*Job_time;

    // PAR.User Id = JOB.*USER
    PAR.User_Id = JOB.*USER;

    // PAR.Job Name = JOB.*PROGRAM
    PAR.Job_Name = JOB.*PROGRAM;

    // PAR.Job Date = JOB.*Job date
    PAR.Job_Date = JOB.*Job_date;

   }

  }

  // IF *OTHERWISE
  IF *OTHERWISE;

  //?FP1054 Chg sched ship date only if prod plan is  NO  6/17/09
  //?E3796 JJH 02/24/15 - Use new function: Chg Reque Ship Dt/qty CH
  EXECUTE FUNCTION(Chg Reque Ship Dt/qty CH) TYPE(CHGOBJ) FILE(OPBGWKP)           AC2102414;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER(DB1.Quantity_Scheduled);
  PARAMETER(DB1.Weight_Scheduled);
  PARAMETER(PAR.Requested_Ship_Date);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Set Record Stamp CHGOB IF) TYPE(EXCINTFUN)                     AC1283156;
   PARAMETER(DB1.Job_Time);
   PARAMETER(DB1.User_Id);
   PARAMETER(DB1.Job_Name);
   PARAMETER(DB1.Job_Date);
   {
    //?Execute internal function

    // PAR.Job Time = JOB.*Job time
    PAR.Job_Time = JOB.*Job_time;

    // PAR.User Id = JOB.*USER
    PAR.User_Id = JOB.*USER;

    // PAR.Job Name = JOB.*PROGRAM
    PAR.Job_Name = JOB.*PROGRAM;

    // PAR.Job Date = JOB.*Job date
    PAR.Job_Date = JOB.*Job_date;

   }

  }

  ENDIF;

 }

 EXECUTE FUNCTION(CHG Requested Ship Dt  CH) TYPE(CHGOBJ) FILE(OPBFCPP)          AC1512676;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(PAR.Requested_Ship_Date);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp.PgmIF) TYPE(EXCINTFUN)                     AC1425284;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

  // Call program TRG Order Hdr CHG Trig XT.
  CALL PROGRAM(TRG Order Hdr CHG Trig XT) ('PDW9XFR');
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Type_Sales);
  PARAMETER(DB1.AR_Customer_Number);
  PARAMETER(DB1.Ship_To_Customer);
  PARAMETER(DB1.Ship_To_Name);
  PARAMETER(DB1.Ship_To_Address_Line_1);
  PARAMETER(DB1.Ship_To_Address_Line_2);
  PARAMETER(DB1.Ship_To_Address_Line_3);
  PARAMETER(DB1.Ship_To_City);
  PARAMETER(DB1.Ship_To_State_Code);
  PARAMETER(DB1.Ship_To_Zip_Postal_Code);
  PARAMETER(DB1.Bill_to_Customer);
  PARAMETER(DB1.Bill_to_Name);
  PARAMETER(DB1.Bill_to_Address_Line_1);
  PARAMETER(DB1.Bill_to_Address_Line_2);
  PARAMETER(DB1.Bill_to_Address_Line_3);
  PARAMETER(DB1.Bill_to_City);
  PARAMETER(DB1.Bill_to_State_Code);
  PARAMETER(DB1.Bill_to_Zip_Postal_Code);
  PARAMETER(DB1.Customer_Purchase_Order_#);
  PARAMETER(DB1.Order_Date);
  PARAMETER(DB1.Requested_Ship_Date);
  PARAMETER(DB1.Actual_Shipped_Date);
  PARAMETER(DB1.Cancel_Date);
  PARAMETER(DB1.Terms_Code);
  PARAMETER(DB1.Special_Instructions);
  PARAMETER(DB1.Special_Instructions_2);
  PARAMETER(DB1.Carrier_Code);
  PARAMETER(DB1.Comment_Print_Acknowledge);
  PARAMETER(DB1.Comment_Print_Inv_Cr_Memo);
  PARAMETER(DB1.Comment_Print_Pick_Slip);
  PARAMETER(DB1.Comment_Print_Ship_Doc);
  PARAMETER(DB1.Reason_Code);
  PARAMETER(DB1.Order_in_Use);
  PARAMETER(DB1.Header_Status);
  PARAMETER(DB1.Header_Status_Last);
  PARAMETER(DB1.Order_Type_Print_Status);
  PARAMETER(DB1.Scheduled_Ship_Date);
  PARAMETER(DB1.User_Original_Entry);
  PARAMETER(DB1.Date_of_Original_Entry);
  PARAMETER(DB1.Order_Value_Total);
  PARAMETER(DB1.Order_Weight_Total);
  PARAMETER(DB1.Credit_Hold);
  PARAMETER(DB1.Production_Hold);
  PARAMETER(DB1.New_Customer_Hold);
  PARAMETER(DB1.Requested_Delivery_Date);
  PARAMETER(DB1.Requested_Delivery_Time);
  PARAMETER(DB1.Accounts_Receiv_Ent_1);
  PARAMETER(DB1.Accounts_Receiv_Ent_2);
  PARAMETER(DB1.Load_ID);
  PARAMETER(DB1.Absorbed_Freight_Rate_CWT);
  PARAMETER(DB1.Rated_Freight);
  PARAMETER(DB1.LTL_Flag);
  PARAMETER(DB1.Price_Audit);
  PARAMETER(DB1.Price_Status);
  PARAMETER(DB1.Shipping_Method);
  PARAMETER(DB1.Export_Status);
  PARAMETER(DB1.Palletize);
  PARAMETER(DB1.Shrink_Wrap);
  PARAMETER(DB1.Slip_Sheet);
  PARAMETER(DB1.Age_Code);
  PARAMETER(DB1.Reefer_Temperature);
  PARAMETER(DB1.Load_Type);
  PARAMETER(DB1.Attach_to_Invoice_Number);
  PARAMETER(DB1.Load_Plan_Order);
  PARAMETER(DB1.Print_Pick_Slip);
  PARAMETER(DB1.Resell_Reference_Number);
  PARAMETER(DB1.Special_Comment_1);
  PARAMETER(DB1.Special_Comment_2);
  PARAMETER(DB1.Affect_Auto_Accruals);
  PARAMETER(DB1.Sales_Route_Code);
  PARAMETER(DB1.Manager_Level_Code);
  PARAMETER(DB1.VP_Level_Code);
  PARAMETER(DB1.Attach_to_Order_Number);
  PARAMETER(DB1.Reason_for_Price_Audit);
  PARAMETER(DB1.Invoice_Number);
  PARAMETER(DB1.Invoice_Suffix);
  PARAMETER(DB1.Invoice_Date);
  PARAMETER(DB1.Event_Code);
  PARAMETER(DB1.Trans_Contol_AS400_Plant);
  PARAMETER(DB1.Modified_Flag);
  PARAMETER(DB1.A_R_order_Value_Total);
  PARAMETER(DB1.Billing_Activity_Type);
  PARAMETER(DB1.Block_Order_Flag);
  PARAMETER(DB1.Order_Certification_Flag);
  PARAMETER(DB1.Invoice_Order_Value_Tot);
  PARAMETER(DB1.Process_Sts_for_3C);
  PARAMETER(DB1.Order_Conf_Fax_Sts);
  PARAMETER(DB1.Manifest_Fax_Sts);
  PARAMETER(DB1.Invoice_Fax_Sts);
  PARAMETER(DB1.Transfer_in_Storage_Ind);
  PARAMETER(DB1.Email_Cust_On_Order_Ship);
  PARAMETER(DB1.Order_Emailed);
  PARAMETER(DB1.Export_Docs_Go_w_Driver);
  PARAMETER(DB1.Shipping_Temp_Code_C_F);
  PARAMETER(DB1.Broker_Order_Status);
  PARAMETER(DB1.Air_Freight_Order);
  PARAMETER(DB1.Order_Requires_Review);
  PARAMETER(DB1.OH_Load_Plan_Ready);
  PARAMETER(DB1.Export_USDA_Approved);
  PARAMETER(DB1.HPB_Ship_to_Warehouse);
  PARAMETER(DB1.OH_TF_Exempt_Code);
  PARAMETER(DB1.OH_Appt_Confirmation_Dt);
  PARAMETER(DB1.JPN_Invoice_Issuance_Date);
  PARAMETER(DB1.Load_Actual_Shipped_Date);
  PARAMETER(DB1.Load_BOL_Complete_Date);
  PARAMETER(DB1.Load_Truck_Departure_Date);
  PARAMETER(DB1.Maximum_Gross_Weight);
  PARAMETER(DB1.Time_of_Original_Entry);
  PARAMETER(DB1.OH_Appt_Confirmation_Tm);
  PARAMETER(DB1.Load_BOL_Complete_Time);
  PARAMETER(DB1.Load_Truck_Departure_Time);
  PARAMETER(DB1.Act_Frt_Reference_Amount);
  PARAMETER(DB1.Act_Non_Ref_Frt_Amount);
  PARAMETER(DB1.OH_Fuel_Surcharge_Amount);
  PARAMETER(DB1.OH_Total_Non_Ref_Frt_Amt);
  PARAMETER(DB1.OH_Total_Ref_Frt_Amt);
  PARAMETER(DB1.Claim_Number);
  PARAMETER(DB1.EDI_Status_1);
  PARAMETER(DB1.EDI_Status_2);
  PARAMETER(DB1.EDI_Status_3);
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);

 }

 // Call program EDT Post Open Orders   XF.
 CALL PROGRAM(EDT Post Open Orders   XF) ('PDHRXFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(LCL.Order_Value_Total);
 PARAMETER(PAR.Order_Weight_Total);
 PARAMETER('PS');

}


ENDIF;

//?E004119 JJH 05/06/16 - Comment out logic to update Load Order
//?  Change Log for Requested Delivery Date/Time because logic is
//?  already occuring in this function.
//?Change Warehouse
CASE;

// IF PAR.Ship From Warehouse NE PAR.USR Warehouse Code
IF PAR.Ship_From_Warehouse <> PAR.USR_Warehouse_Code;

EXECUTE FUNCTION(Upd WHS/Alc by Order  RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC1468515;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Ship_From_Warehouse);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Upd WHS/Alc by Order RT) TYPE(RTVOBJ) FILE(OPBGWKP)            AC1468516;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(PAR.Warehouse_Code);
 {
  //?USER: Initialize routine

  //?***** PA PROCESS - USE REQUESTED SHIP DATE FOR Ship Date USR *****
  //?USER: Process Data record

  // PAR.Quantity Scheduled = DB1.Quantity Scheduled
  PAR.Quantity_Scheduled = DB1.Quantity_Scheduled;

  // PAR.Weight Scheduled = DB1.Weight Scheduled
  PAR.Weight_Scheduled = DB1.Weight_Scheduled;

  // Call program UPD Avail-To-Sell  ORD XF.
  CALL PROGRAM(UPD Avail-To-Sell  ORD XF) ('PDQNXFR');
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER(DB1.Item_Code);
  PARAMETER(DB1.Warehouse_Code);
  PARAMETER(DB1.Requested_Ship_Date);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(PAR.Quantity_Scheduled);
  PARAMETER(PAR.Weight_Scheduled);
  PARAMETER('OD');
  PARAMETER('CHGWHS');
  PARAMETER(DB1.Item_Age_Days);
  PARAMETER(DB1.Production_Ovr_AgeDte_Fr);
  PARAMETER(DB1.Production_Ovr_AgeDte_To);

  // PAR.Quantity Scheduled = CON.*ZERO
  PAR.Quantity_Scheduled = *ZERO;

  // PAR.Weight Scheduled = CON.*ZERO
  PAR.Weight_Scheduled = *ZERO;

  // Call program UPD Avail-To-Sell  ORD XF.
  CALL PROGRAM(UPD Avail-To-Sell  ORD XF) ('PDQNXFR');
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER(DB1.Item_Code);
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(DB1.Requested_Ship_Date);
  PARAMETER(DB1.Quantity_Scheduled);
  PARAMETER(DB1.Weight_Scheduled);
  PARAMETER(PAR.Quantity_Scheduled);
  PARAMETER(PAR.Weight_Scheduled);
  PARAMETER('OA');
  PARAMETER('CHGWHS');
  PARAMETER(DB1.Item_Age_Days);
  PARAMETER(DB1.Production_Ovr_AgeDte_Fr);
  PARAMETER(DB1.Production_Ovr_AgeDte_To);

  //?Schedule As Ordered.
  CASE;

  // IF PAR.Quantity Scheduled NE DB1.Quantity Scheduled
  IF PAR.Quantity_Scheduled <> DB1.Quantity_Scheduled;

  // Call program UPD Avail-To-Sell  ORD XF.
  CALL PROGRAM(UPD Avail-To-Sell  ORD XF) ('PDQNXFR');
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER(DB1.Item_Code);
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(DB1.Requested_Ship_Date);
  PARAMETER(DB1.Quantity_Scheduled);
  PARAMETER(DB1.Weight_Scheduled);
  PARAMETER(PAR.Quantity_Scheduled);
  PARAMETER(PAR.Weight_Scheduled);
  PARAMETER('AO');
  PARAMETER('CHGWHS');
  PARAMETER(DB1.Item_Age_Days);
  PARAMETER(DB1.Production_Ovr_AgeDte_Fr);
  PARAMETER(DB1.Production_Ovr_AgeDte_To);

  ENDIF;

  //?FP1054 upd production warehouse
  EXECUTE FUNCTION(Rtv Productin Whs     RT) TYPE(RTVOBJ) FILE(CAADREP)           AC1498428;
  PARAMETER(DB1.Warehouse_Code);
  PARAMETER(LCL.Production_Warehouse);
  PARAMETER(NLL.Accounting_Company);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  EXECUTE FUNCTION(Chg Warehouse         CH) TYPE(CHGOBJ) FILE(OPBGWKP)           AC1468517;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(LCL.Production_Warehouse);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1255766;
   PARAMETER(DB1.Job_Time);
   PARAMETER(DB1.User_Id);
   PARAMETER(DB1.Job_Name);
   PARAMETER(DB1.Job_Date);
   {
    //?Execute internal function

    // PAR.Job Time = JOB.*Job time
    PAR.Job_Time = JOB.*Job_time;

    // PAR.User Id = JOB.*USER
    PAR.User_Id = JOB.*USER;

    // PAR.Job Name = JOB.*JOB
    PAR.Job_Name = JOB.*JOB;

    // PAR.Job Date = JOB.*Job date
    PAR.Job_Date = JOB.*Job_date;

   }

  }

 }

 EXECUTE FUNCTION(RTV Whse Type,Control  RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1332644;
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(WRK.Warehouse_Type);
 PARAMETER(PAR.Trans_Contol_AS400_Plant);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 EXECUTE FUNCTION(CHG Trans Control      CH) TYPE(CHGOBJ) FILE(OPBFCPP)          AC1409189;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(PAR.Trans_Contol_AS400_Plant);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp.PgmIF) TYPE(EXCINTFUN)                     AC1425284;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

  // Call program TRG Order Hdr CHG Trig XT.
  CALL PROGRAM(TRG Order Hdr CHG Trig XT) ('PDW9XFR');
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Type_Sales);
  PARAMETER(DB1.AR_Customer_Number);
  PARAMETER(DB1.Ship_To_Customer);
  PARAMETER(DB1.Ship_To_Name);
  PARAMETER(DB1.Ship_To_Address_Line_1);
  PARAMETER(DB1.Ship_To_Address_Line_2);
  PARAMETER(DB1.Ship_To_Address_Line_3);
  PARAMETER(DB1.Ship_To_City);
  PARAMETER(DB1.Ship_To_State_Code);
  PARAMETER(DB1.Ship_To_Zip_Postal_Code);
  PARAMETER(DB1.Bill_to_Customer);
  PARAMETER(DB1.Bill_to_Name);
  PARAMETER(DB1.Bill_to_Address_Line_1);
  PARAMETER(DB1.Bill_to_Address_Line_2);
  PARAMETER(DB1.Bill_to_Address_Line_3);
  PARAMETER(DB1.Bill_to_City);
  PARAMETER(DB1.Bill_to_State_Code);
  PARAMETER(DB1.Bill_to_Zip_Postal_Code);
  PARAMETER(DB1.Customer_Purchase_Order_#);
  PARAMETER(DB1.Order_Date);
  PARAMETER(DB1.Requested_Ship_Date);
  PARAMETER(DB1.Actual_Shipped_Date);
  PARAMETER(DB1.Cancel_Date);
  PARAMETER(DB1.Terms_Code);
  PARAMETER(DB1.Special_Instructions);
  PARAMETER(DB1.Special_Instructions_2);
  PARAMETER(DB1.Carrier_Code);
  PARAMETER(DB1.Comment_Print_Acknowledge);
  PARAMETER(DB1.Comment_Print_Inv_Cr_Memo);
  PARAMETER(DB1.Comment_Print_Pick_Slip);
  PARAMETER(DB1.Comment_Print_Ship_Doc);
  PARAMETER(DB1.Reason_Code);
  PARAMETER(DB1.Order_in_Use);
  PARAMETER(DB1.Header_Status);
  PARAMETER(DB1.Header_Status_Last);
  PARAMETER(DB1.Order_Type_Print_Status);
  PARAMETER(DB1.Scheduled_Ship_Date);
  PARAMETER(DB1.User_Original_Entry);
  PARAMETER(DB1.Date_of_Original_Entry);
  PARAMETER(DB1.Order_Value_Total);
  PARAMETER(DB1.Order_Weight_Total);
  PARAMETER(DB1.Credit_Hold);
  PARAMETER(DB1.Production_Hold);
  PARAMETER(DB1.New_Customer_Hold);
  PARAMETER(DB1.Requested_Delivery_Date);
  PARAMETER(DB1.Requested_Delivery_Time);
  PARAMETER(DB1.Accounts_Receiv_Ent_1);
  PARAMETER(DB1.Accounts_Receiv_Ent_2);
  PARAMETER(DB1.Load_ID);
  PARAMETER(DB1.Absorbed_Freight_Rate_CWT);
  PARAMETER(DB1.Rated_Freight);
  PARAMETER(DB1.LTL_Flag);
  PARAMETER(DB1.Price_Audit);
  PARAMETER(DB1.Price_Status);
  PARAMETER(DB1.Shipping_Method);
  PARAMETER(DB1.Export_Status);
  PARAMETER(DB1.Palletize);
  PARAMETER(DB1.Shrink_Wrap);
  PARAMETER(DB1.Slip_Sheet);
  PARAMETER(DB1.Age_Code);
  PARAMETER(DB1.Reefer_Temperature);
  PARAMETER(DB1.Load_Type);
  PARAMETER(DB1.Attach_to_Invoice_Number);
  PARAMETER(DB1.Load_Plan_Order);
  PARAMETER(DB1.Print_Pick_Slip);
  PARAMETER(DB1.Resell_Reference_Number);
  PARAMETER(DB1.Special_Comment_1);
  PARAMETER(DB1.Special_Comment_2);
  PARAMETER(DB1.Affect_Auto_Accruals);
  PARAMETER(DB1.Sales_Route_Code);
  PARAMETER(DB1.Manager_Level_Code);
  PARAMETER(DB1.VP_Level_Code);
  PARAMETER(DB1.Attach_to_Order_Number);
  PARAMETER(DB1.Reason_for_Price_Audit);
  PARAMETER(DB1.Invoice_Number);
  PARAMETER(DB1.Invoice_Suffix);
  PARAMETER(DB1.Invoice_Date);
  PARAMETER(DB1.Event_Code);
  PARAMETER(DB1.Trans_Contol_AS400_Plant);
  PARAMETER(DB1.Modified_Flag);
  PARAMETER(DB1.A_R_order_Value_Total);
  PARAMETER(DB1.Billing_Activity_Type);
  PARAMETER(DB1.Block_Order_Flag);
  PARAMETER(DB1.Order_Certification_Flag);
  PARAMETER(DB1.Invoice_Order_Value_Tot);
  PARAMETER(DB1.Process_Sts_for_3C);
  PARAMETER(DB1.Order_Conf_Fax_Sts);
  PARAMETER(DB1.Manifest_Fax_Sts);
  PARAMETER(DB1.Invoice_Fax_Sts);
  PARAMETER(DB1.Transfer_in_Storage_Ind);
  PARAMETER(DB1.Email_Cust_On_Order_Ship);
  PARAMETER(DB1.Order_Emailed);
  PARAMETER(DB1.Export_Docs_Go_w_Driver);
  PARAMETER(DB1.Shipping_Temp_Code_C_F);
  PARAMETER(DB1.Broker_Order_Status);
  PARAMETER(DB1.Air_Freight_Order);
  PARAMETER(DB1.Order_Requires_Review);
  PARAMETER(DB1.OH_Load_Plan_Ready);
  PARAMETER(DB1.Export_USDA_Approved);
  PARAMETER(DB1.HPB_Ship_to_Warehouse);
  PARAMETER(DB1.OH_TF_Exempt_Code);
  PARAMETER(DB1.OH_Appt_Confirmation_Dt);
  PARAMETER(DB1.JPN_Invoice_Issuance_Date);
  PARAMETER(DB1.Load_Actual_Shipped_Date);
  PARAMETER(DB1.Load_BOL_Complete_Date);
  PARAMETER(DB1.Load_Truck_Departure_Date);
  PARAMETER(DB1.Maximum_Gross_Weight);
  PARAMETER(DB1.Time_of_Original_Entry);
  PARAMETER(DB1.OH_Appt_Confirmation_Tm);
  PARAMETER(DB1.Load_BOL_Complete_Time);
  PARAMETER(DB1.Load_Truck_Departure_Time);
  PARAMETER(DB1.Act_Frt_Reference_Amount);
  PARAMETER(DB1.Act_Non_Ref_Frt_Amount);
  PARAMETER(DB1.OH_Fuel_Surcharge_Amount);
  PARAMETER(DB1.OH_Total_Non_Ref_Frt_Amt);
  PARAMETER(DB1.OH_Total_Ref_Frt_Amt);
  PARAMETER(DB1.Claim_Number);
  PARAMETER(DB1.EDI_Status_1);
  PARAMETER(DB1.EDI_Status_2);
  PARAMETER(DB1.EDI_Status_3);
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);

 }

 //?Change Load Hdr warehouse, and recalc load miles       * OMS259
 //?** 11/16/2007 LJB FP1251 Total Load Miles will=zeros if there is
 //?** no Miles Between Cities record
 CASE;

 // IF DB1.Load ID is NE Blank
 IF DB1.Load_ID <> *ZERO;

 EXECUTE FUNCTION(Rtv/Chg Whs,ld miles  RT) TYPE(RTVOBJ) FILE(OMFJCPP)           AC1471360;
 PARAMETER(DB1.Load_ID);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(RTV First Order Whse   RT) TYPE(RTVOBJ) FILE(OMFLCPP)          AC1397882;
  PARAMETER(DB1.Load_ID);
  PARAMETER(1);
  PARAMETER(PAR.Ship_From_Warehouse);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   EXECUTE FUNCTION(RTV 1st Warehouse/Ctl  RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1360958;
   PARAMETER(DB1.Company_Number);
   PARAMETER(DB1.Order_Number);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(PAR.Warehouse_Code);
   PARAMETER(WRK.TXT_field_not_needed);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    //?USER: Process Data record

    EXECUTE FUNCTION(RTV Warehouse Control  RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1304300;
    PARAMETER(DB1.Warehouse_Code);
    PARAMETER(PAR.Trans_Contol_AS400_Plant);
    {
     //?USER: Processing if Data record not found

     MOVE *ALL (To: PAR From: CON);

     // PGM.*Return code = CND.*Record does not exist
     PGM.*Return_code = 'Y2U0005';

     //?USER: Process Data record

     MOVE *ALL (To: PAR From: DB1);

    }

    MOVE *ALL (To: PAR From: DB1);

    QUIT;

   }

   QUIT;

  }

  CASE;

  // IF DB1.Warehouse Code EQ PAR.Ship From Warehouse
  IF DB1.Warehouse_Code = PAR.Ship_From_Warehouse;

  // PAR.Warehouse Code = CON.*BLANK
  PAR.Warehouse_Code = *BLANK;

  // IF *OTHERWISE
  IF *OTHERWISE;

  // PAR.Warehouse Code = DB1.Warehouse Code
  PAR.Warehouse_Code = DB1.Warehouse_Code;

  ENDIF;

  //?** 11/16/2007 LJB FP1251 Total Load Miles will = zeros if no
  //?** Miles Between Cities record exists
  //?** Override total load miles will take precedence over tlm  E00207
  //?E4119 RMC 7/15/16  Upd miles if NOT MG LOAD
  CASE;

  // IF DB1.MG Created Load is Yes
  IF DB1.MG_Created_Load = 'Y';

  // PAR.Total Load Miles = DB1.Total Load Miles
  PAR.Total_Load_Miles = DB1.Total_Load_Miles;

  // PAR.Override Total Load Miles = DB1.Override Total Load Miles
  PAR.Override_Total_Load_Miles = DB1.Override_Total_Load_Miles;

  //?E4119 RMC 7/15/16  Upd miles if NOT MG LOAD
  // IF *OTHERWISE
  IF *OTHERWISE;

  // Call program CLC Total Load Miles   XF.
  CALL PROGRAM(CLC Total Load Miles   XF) ('PDW3XFR');
  PARAMETER(DB1.Load_ID);
  PARAMETER(PAR.Total_Load_Miles);
  PARAMETER(PAR.Override_Total_Load_Miles);

  ENDIF;

  //?** Add override miles to the update            E00207 LJB 08/13/08
  EXECUTE FUNCTION(CHG Ship FrmWhs,ld mls CH) TYPE(CHGOBJ) FILE(OMFJCPP)          AC1471384;
  PARAMETER(DB1.Load_ID);
  PARAMETER(PAR.Total_Load_Miles);
  PARAMETER(PAR.Ship_From_Warehouse);
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(PAR.Override_Total_Load_Miles);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Set Date/Time Stamp.PgmIF) TYPE(EXCINTFUN)                     AC1425284;
   PARAMETER(DB1.Job_Time);
   PARAMETER(DB1.User_Id);
   PARAMETER(DB1.Job_Name);
   PARAMETER(DB1.Job_Date);
   {
    //?Execute internal function

    // PAR.Job Time = JOB.*Job time
    PAR.Job_Time = JOB.*Job_time;

    // PAR.User Id = JOB.*USER
    PAR.User_Id = JOB.*USER;

    // PAR.Job Name = JOB.*PROGRAM
    PAR.Job_Name = JOB.*PROGRAM;

    // PAR.Job Date = JOB.*Job date
    PAR.Job_Date = JOB.*Job_date;

   }

  }

 }

 ENDIF;

 //?USER: Exit processing

 //?FP1054  post order so it will come off prod hold if it can
 // Call program EDT Post Open Orders   XF.
 CALL PROGRAM(EDT Post Open Orders   XF) ('PDHRXFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(LCL.Order_Value_Total);
 PARAMETER(LCL.Order_Weight_Total);
 PARAMETER('OE');

}


ENDIF;

EXECUTE FUNCTION(CHG Order in Use       CH) TYPE(CHGOBJ) FILE(OPBFCPP)          AC1316259;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER('N');
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Date/Time Stamp.PgmIF) TYPE(EXCINTFUN)                     AC1425284;
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*PROGRAM
  PAR.Job_Name = JOB.*PROGRAM;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

 // Call program TRG Order Hdr CHG Trig XT.
 CALL PROGRAM(TRG Order Hdr CHG Trig XT) ('PDW9XFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Type_Sales);
 PARAMETER(DB1.AR_Customer_Number);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(DB1.Ship_To_Name);
 PARAMETER(DB1.Ship_To_Address_Line_1);
 PARAMETER(DB1.Ship_To_Address_Line_2);
 PARAMETER(DB1.Ship_To_Address_Line_3);
 PARAMETER(DB1.Ship_To_City);
 PARAMETER(DB1.Ship_To_State_Code);
 PARAMETER(DB1.Ship_To_Zip_Postal_Code);
 PARAMETER(DB1.Bill_to_Customer);
 PARAMETER(DB1.Bill_to_Name);
 PARAMETER(DB1.Bill_to_Address_Line_1);
 PARAMETER(DB1.Bill_to_Address_Line_2);
 PARAMETER(DB1.Bill_to_Address_Line_3);
 PARAMETER(DB1.Bill_to_City);
 PARAMETER(DB1.Bill_to_State_Code);
 PARAMETER(DB1.Bill_to_Zip_Postal_Code);
 PARAMETER(DB1.Customer_Purchase_Order_#);
 PARAMETER(DB1.Order_Date);
 PARAMETER(DB1.Requested_Ship_Date);
 PARAMETER(DB1.Actual_Shipped_Date);
 PARAMETER(DB1.Cancel_Date);
 PARAMETER(DB1.Terms_Code);
 PARAMETER(DB1.Special_Instructions);
 PARAMETER(DB1.Special_Instructions_2);
 PARAMETER(DB1.Carrier_Code);
 PARAMETER(DB1.Comment_Print_Acknowledge);
 PARAMETER(DB1.Comment_Print_Inv_Cr_Memo);
 PARAMETER(DB1.Comment_Print_Pick_Slip);
 PARAMETER(DB1.Comment_Print_Ship_Doc);
 PARAMETER(DB1.Reason_Code);
 PARAMETER(DB1.Order_in_Use);
 PARAMETER(DB1.Header_Status);
 PARAMETER(DB1.Header_Status_Last);
 PARAMETER(DB1.Order_Type_Print_Status);
 PARAMETER(DB1.Scheduled_Ship_Date);
 PARAMETER(DB1.User_Original_Entry);
 PARAMETER(DB1.Date_of_Original_Entry);
 PARAMETER(DB1.Order_Value_Total);
 PARAMETER(DB1.Order_Weight_Total);
 PARAMETER(DB1.Credit_Hold);
 PARAMETER(DB1.Production_Hold);
 PARAMETER(DB1.New_Customer_Hold);
 PARAMETER(DB1.Requested_Delivery_Date);
 PARAMETER(DB1.Requested_Delivery_Time);
 PARAMETER(DB1.Accounts_Receiv_Ent_1);
 PARAMETER(DB1.Accounts_Receiv_Ent_2);
 PARAMETER(DB1.Load_ID);
 PARAMETER(DB1.Absorbed_Freight_Rate_CWT);
 PARAMETER(DB1.Rated_Freight);
 PARAMETER(DB1.LTL_Flag);
 PARAMETER(DB1.Price_Audit);
 PARAMETER(DB1.Price_Status);
 PARAMETER(DB1.Shipping_Method);
 PARAMETER(DB1.Export_Status);
 PARAMETER(DB1.Palletize);
 PARAMETER(DB1.Shrink_Wrap);
 PARAMETER(DB1.Slip_Sheet);
 PARAMETER(DB1.Age_Code);
 PARAMETER(DB1.Reefer_Temperature);
 PARAMETER(DB1.Load_Type);
 PARAMETER(DB1.Attach_to_Invoice_Number);
 PARAMETER(DB1.Load_Plan_Order);
 PARAMETER(DB1.Print_Pick_Slip);
 PARAMETER(DB1.Resell_Reference_Number);
 PARAMETER(DB1.Special_Comment_1);
 PARAMETER(DB1.Special_Comment_2);
 PARAMETER(DB1.Affect_Auto_Accruals);
 PARAMETER(DB1.Sales_Route_Code);
 PARAMETER(DB1.Manager_Level_Code);
 PARAMETER(DB1.VP_Level_Code);
 PARAMETER(DB1.Attach_to_Order_Number);
 PARAMETER(DB1.Reason_for_Price_Audit);
 PARAMETER(DB1.Invoice_Number);
 PARAMETER(DB1.Invoice_Suffix);
 PARAMETER(DB1.Invoice_Date);
 PARAMETER(DB1.Event_Code);
 PARAMETER(DB1.Trans_Contol_AS400_Plant);
 PARAMETER(DB1.Modified_Flag);
 PARAMETER(DB1.A_R_order_Value_Total);
 PARAMETER(DB1.Billing_Activity_Type);
 PARAMETER(DB1.Block_Order_Flag);
 PARAMETER(DB1.Order_Certification_Flag);
 PARAMETER(DB1.Invoice_Order_Value_Tot);
 PARAMETER(DB1.Process_Sts_for_3C);
 PARAMETER(DB1.Order_Conf_Fax_Sts);
 PARAMETER(DB1.Manifest_Fax_Sts);
 PARAMETER(DB1.Invoice_Fax_Sts);
 PARAMETER(DB1.Transfer_in_Storage_Ind);
 PARAMETER(DB1.Email_Cust_On_Order_Ship);
 PARAMETER(DB1.Order_Emailed);
 PARAMETER(DB1.Export_Docs_Go_w_Driver);
 PARAMETER(DB1.Shipping_Temp_Code_C_F);
 PARAMETER(DB1.Broker_Order_Status);
 PARAMETER(DB1.Air_Freight_Order);
 PARAMETER(DB1.Order_Requires_Review);
 PARAMETER(DB1.OH_Load_Plan_Ready);
 PARAMETER(DB1.Export_USDA_Approved);
 PARAMETER(DB1.HPB_Ship_to_Warehouse);
 PARAMETER(DB1.OH_TF_Exempt_Code);
 PARAMETER(DB1.OH_Appt_Confirmation_Dt);
 PARAMETER(DB1.JPN_Invoice_Issuance_Date);
 PARAMETER(DB1.Load_Actual_Shipped_Date);
 PARAMETER(DB1.Load_BOL_Complete_Date);
 PARAMETER(DB1.Load_Truck_Departure_Date);
 PARAMETER(DB1.Maximum_Gross_Weight);
 PARAMETER(DB1.Time_of_Original_Entry);
 PARAMETER(DB1.OH_Appt_Confirmation_Tm);
 PARAMETER(DB1.Load_BOL_Complete_Time);
 PARAMETER(DB1.Load_Truck_Departure_Time);
 PARAMETER(DB1.Act_Frt_Reference_Amount);
 PARAMETER(DB1.Act_Non_Ref_Frt_Amount);
 PARAMETER(DB1.OH_Fuel_Surcharge_Amount);
 PARAMETER(DB1.OH_Total_Non_Ref_Frt_Amt);
 PARAMETER(DB1.OH_Total_Ref_Frt_Amt);
 PARAMETER(DB1.Claim_Number);
 PARAMETER(DB1.EDI_Status_1);
 PARAMETER(DB1.EDI_Status_2);
 PARAMETER(DB1.EDI_Status_3);
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);

}


//?***** Change Log and Comments
DO;

//?E3796 JJH 03/03/15 - Use Requested Ship Date for Production Schedule
//?- Add Parm: Requested Ship Date and Requested Ship Date USR
//?- Add Change Requested Ship Date logic with update of Load Order
//?  Change Log.
//?- Add logic if Requested Ship Date Changes
//?** 01/27/2010 LJB W288
//?** Update Delivery Time if changed
//?** 02/09/09 RMC FP1054
//?** Chg when alloc to use qty and wt ordered instead of sched
//?** 09/05/08 LJB E00207
//?** Recompile only
//?** 04/22/08 LJB E00147
//?** Change the Scheduled Ship Date routine to the one that updates
//?** the Requested Ship Date as well
//?** 04/07/2008 LJB E00127
//?** Update Delivery Date
ENDDO;

CASE;

// IF PAR.OH Load Plan Ready is Yes
IF PAR.OH_Load_Plan_Ready = 'Y';

// Call program Rtv Crt OH Trigger    XF.
CALL PROGRAM(Rtv Crt OH Trigger    XF) ('PBWVXFR');
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Company_Number);

ENDIF;

