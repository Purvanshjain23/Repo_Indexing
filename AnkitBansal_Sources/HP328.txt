      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     Workfile: Nursery Groups--Sow/Sire Summary
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     11/15/01
      *
      * FUNCTION:    This function builds the summarized sow/sire line records for each
      *              nursery group in the workfile Nursery Groups--BGF sources.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 11//11/02 LeAnne Fedor
      *           Added 'Cognos Report Grouping' field to file.
      *
      * 01/27/05  LeAnne Fedor
      *           Recompile only. Two new fields (sire line company, prime line)
      *           added to Sire Line file.
      *
      * 06/27/05  LeAnne Fedor
      *           Rewrote. The input file is a new file (HSP3310) instead of the
      *           old file HSP326.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhsl3310a  if   e           k disk
      *  Workfile: Nursery groups--Sow and sire
      *
      *
     Fhsl3310b  if   e           k disk    rename(wfrec:wfrecb) prefix(p1)
      *  Workfile: Nursery groups--Sow and sire
      *
      *
     Fhsl328a   if   e           k disk    rename(w4rec:w4reca) prefix(p2)
      *  Workfile: Nursery groups--sow/sire summary
      *
      *
     Fhsp328    uf a e           k disk
      *  Workfile: Nursery groups--sow/sire summary
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Control fields
      *
     D first           s              1    inz('Y')
     D svhgsn          s                   like(wfdnhgsn)
     D svdnhgsn        s                   like(wfdnhgsn)
     D svhgcd          s                   like(wfdnhgcd)
     D svfscd          s                   like(wfdnfscd)
     D svcell          s                   like(wfdncell)
     D svorfscd        s                   like(wforfscd)
     D svsicd          s                   like(wfsicd)
     D svgg0           s                   like(wfgg0)
      *
      *
      * Workfields
      *
     D wktotrchd       s                   like(wfrchd)
     D wkhd            s                   like(wfrchd)
     D wkrchd          s                   like(wfrchd)
     D wkpr            s             15  8
     D wkrempr         s              5  2
     D wkcnt           s              3  0
     D wktotcnt        s              3  0
     D wksysdt         s              8  0
      *
      *
      *
      * Workfields for date manipulation
      *
     D wkcymdiso       s               D   datfmt(*iso)
      *
      *
      * Define parms for the generic movement program
      *
     D @@nu50          s              5  0
     D gpihd           s                   like(@@nu50)
     D pinhd           s                   like(@@nu50)
     D tinhd           s                   like(@@nu50)
     D tisphd          s                   like(@@nu50)
     D tidphd          s                   like(@@nu50)
     D pouhd           s                   like(@@nu50)
     D touhd           s                   like(@@nu50)
     D tosphd          s                   like(@@nu50)
     D todphd          s                   like(@@nu50)
     D rinhd           s                   like(@@nu50)
     D rouhd           s                   like(@@nu50)
     D qinhd           s                   like(@@nu50)
     D qouhd           s                   like(@@nu50)
     D morhd           s                   like(@@nu50)
     D inahd           s                   like(@@nu50)
      *
     D @@nu92          s              9  2
     D pinlb           s                   like(@@nu92)
     D tinlb           s                   like(@@nu92)
     D tisplb          s                   like(@@nu92)
     D tidplb          s                   like(@@nu92)
     D poulb           s                   like(@@nu92)
     D toulb           s                   like(@@nu92)
     D tosplb          s                   like(@@nu92)
     D todplb          s                   like(@@nu92)
     D rinlb           s                   like(@@nu92)
     D roulb           s                   like(@@nu92)
     D qinlb           s                   like(@@nu92)
     D qoulb           s                   like(@@nu92)
     D morlb           s                   like(@@nu92)
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ***************************************************************************************
      * MAINLINE
      ***************************************************************************************
      *
      *
      * Process each group in the file Nursery Groups-Sow/Sire Detail
      *
     C                   exsr      $step1
      *
      * Cleanup the file removing records with zero head.
      *
     C                   exsr      $step2
      *
      *
      * Account for all received head
      *
     C                   exsr      $step3
      *
      * Calculate the dose percents
      *
     C                   exsr      $step4
      *
      * EOF Processing
      *
     C                   seton                                        lr
      /eject
      *----------------------------------------------------------------
      * Step 1
      *----------------------------------------------------------------
      *
      * Process each group in the file Nursery Groups-Sow/Sire Detail
      *
     C     $step1        begsr
      *
     C     *loval        setll     hsl3310a
      *
     C                   dou       *in90 = *on                                  Main do loop
     C                   read      hsl3310a                               90
     C                   if        *in90 = *off                                 If not EOF
      *
      * First time
     C                   select
     C                   when      first = yes
     C                   move      no            first
     C                   exsr      $sv3310
      *
      * Write a record for each destination group/origin farm/sire line
      *
     C                   when      wfdnhgsn <> svdnhgsn
     C                   exsr      $wrt328
      *
     C                   when      wforfscd <> svorfscd or
     C                             wfsicd   <> svsicd
     C                   exsr      $wrt328
     C                   endsl
      *
      * Detail processing: Accumulate Received Head
      *
     C                   add       wfrchd        wkrchd
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do loop
      *
      * Last record processing
      *
     C                   if        first = no
     C                   exsr      $wrt328
     C                   endif
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Write a record
      *----------------------------------------------------------------
      *
     C     $wrt328       begsr
      *
     C                   z-add     svdnhgsn      w4hgsn
     C                   move      svhgcd        w4hgcd
     C                   z-add     svfscd        w4fscd
     C                   z-add     svcell        w4cell
      *
     C                   z-add     svorfscd      w4orfscd
     C                   move      svsicd        w4sicd
     C                   move      svgg0         w4gg0
     C                   z-add     wkrchd        w4rchd
      *
      * Write record
     C                   write     w4rec
      *
     C                   add       1             wkcnt
     C                   z-add     0             wkrchd
      *
      * Save fields
     C                   exsr      $sv3310
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Save fields
      *----------------------------------------------------------------
      *
     C     $sv3310       begsr
      *
     C                   z-add     wfdnhgsn      svdnhgsn
     C                   move      wfdnhgcd      svhgcd
     C                   z-add     wfdnfscd      svfscd
     C                   z-add     wfdncell      svcell
      *
     C                   z-add     wforfscd      svorfscd
     C                   move      wfsicd        svsicd
     C                   move      wfgg0         svgg0
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Step 2: Delete any/all records with zero received head
      *----------------------------------------------------------------
      *
     C     $step2        begsr
      *
     C     *loval        setll     hsp328
      *
     C                   dou       *in91 = *on                                  Step 2 loop
     C                   read      hsp328                                 91
     C                   if        *in91 = *off and w4rchd = 0                  If not EOF
     C                   delete    w4rec
     C                   endif                                                  If not EOF
     C                   enddo                                                  Step 2 loop
      *
     C                   endsr
      /eject
      *-------------------------------------------------------------------------------------
      * Step 3: Account for all Received Head
      *-------------------------------------------------------------------------------------
      *
      * To make our dose percents come out correctly in Step4, we need to account for
      * all the received head.
      *
     C     $step3        begsr
      *
     C                   move      yes           first
     C                   z-add     0             wkhd
     C     *loval        setll     hsl328a
      *
     C                   dou       *in91 = *on                                  Do step 3
     C                   read      hsl328a                                91
     C                   if        *in91 = *off                                 If not EOF
      *
      * New group
     C                   select
     C                   when      first = yes
     C                   move      no            first
     C                   exsr      $sv328
      *
     C                   when      p2w4hgsn  <> svhgsn
     C                   exsr      $allhogs
     C                   endsl
      *
      * Detail processing
      *
     C                   add       p2w4rchd      wkhd
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do step 3
      *
      * Last record processing for last group
      *
     C                   if        first = no
     C                   exsr      $allhogs
     C                   endif
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Save fields
      *----------------------------------------------------------------
      *
     C     $sv328        begsr
      *
     C                   z-add     p2w4hgsn      svhgsn
     C                   move      p2w4hgcd      svhgcd
     C                   z-add     p2w4fscd      svfscd
     C                   z-add     p2w4cell      svcell
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------------
      * Update Sow/Sire Detail records.
      *---------------------------------------------------------------------
      *
     C     $allhogs      begsr
      *
      * Retrieve the 'Total Head Received' into this group as of the system date.
      *
     C                   z-add     0             wkrchd
     C                   call      'HPMOVE'      plist01
     C     qinhd         add       rinhd         wkrchd
      *
      *
      * Compare the 'Total Head Received' and the Accumulated Received Head from
      * the sow/sire records just processed--we want to account for all received
      * head. If there is a difference, write/update a record. If they are equal.
      * go delete any records with zero head.
      *
     C                   if        wkrchd > wkhd
     C     wkrchd        sub       wkhd          wkrchd
     C                   move      'UNK??'       svsicd
     C                   move      'UNK??'       svgg0
     C                   z-add     0             svorfscd
     C                   exsr      $updwrt328
     C                   endif
      *
      * Clear accumulator and save control fields
      *
     C                   z-add     0             wkhd
     C                   exsr      $sv328
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Update/write HSP328 record
      *----------------------------------------------------------------
      *
     C     $updwrt328    begsr
      *
      *
     C     key01         chain     hsp328                             92
     C                   if        *in92 = *on                                  If not found
      *
     C                   z-add     svhgsn        w4hgsn
     C                   move      svhgcd        w4hgcd
     C                   z-add     svfscd        w4fscd
     C                   z-add     svcell        w4cell
      *
     C                   z-add     svorfscd      w4orfscd
     C                   move      svsicd        w4sicd
     C                   move      svgg0         w4gg0
     C                   z-add     wkrchd        w4rchd
     C                   write     w4rec
      *
     C                   else
     C                   add       wkrchd        w4rchd
     C                   update    w4rec
     C                   endif                                                  If not found
      *
     C                   z-add     0             wkrchd
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Step 4: Calculate the dose percents
      *----------------------------------------------------------------
      *
     C     $step4        begsr
      *
     C                   z-add     0             svhgsn
     C     *loval        setll     hsp328
      *
     C                   dou       *in91 = *on                                  Step 3 loop
     C                   read      hsp328                                 91
     C                   if        *in91 = *off                                 If not EOF
      *
      * For each 'new' group, retrieve the total received head.
      *
     C                   if        w4hgsn <> svhgsn
     C                   exsr      $rchd
     C                   endif
      *
      *
      * Calculate the percent of Total Received Head represented by this record.
      *
     C                   add       1             wkcnt
      *
     C                   select
     C                   when      w4rchd = 0
      *
     C                   when      wktotcnt = wkcnt
     C                   z-add     wkrempr       w4dopr
      *
     C                   when      wktotrchd <> 0
     C     w4rchd        div       wktotrchd     wkpr
     C     wkpr          mult(h)   100           w4dopr
     C                   sub       w4dopr        wkrempr
     C                   endsl
      *
      * Update
     C                   z-add     wktotcnt      w4sino
     C                   update    w4rec
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Step 3 loop
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Accumulate Head Received into this group
      *----------------------------------------------------------------
      *
     C     $rchd         begsr
      *
     C                   z-add     0             wktotrchd
     C                   z-add     0             wkrchd
     C                   z-add     0             wktotcnt
     c                   z-add     0             wkcnt
     C                   z-add     100           wkrempr
      *
     C     w4hgsn        setll     hsl328a
      *
     C                   dou       *in93 = *on                                  Do loop
     C     w4hgsn        reade     hsl328a                                93
     C                   if        *in93 = *off                                 If not EOF
     C                   add       p2w4rchd      wktotrchd
     C                   add       1             wktotcnt
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do loop
      *
      *
     C                   z-add     w4hgsn        svhgsn
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Initialization subroutine
      *----------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      *
      * Parm lists
      *
     C     plist01       plist
     C                   parm                    svhgsn
     C                   parm                    wksysdt
      * Head
     C                   parm                    gpihd                          GROUP INV
     C                   parm                    pinhd                          PIG IN
     C                   parm                    tinhd                          TRSF IN
     C                   parm                    tisphd                         SAME PHASE
     C                   parm                    tidphd                         DIFF PHASE
     C                   parm                    pouhd                          PIGS OUT
     C                   parm                    touhd                          TRSF OUT
     C                   parm                    tosphd                         SAME PHASE
     C                   parm                    tosphd                         DIFF PHASE
     C                   parm                    rinhd                          REJECT IN
     C                   parm                    rouhd                          REJECT OUT
     C                   parm                    qinhd                          QUALITY IN
     C                   parm                    qouhd                          QUALITY OUT
     C                   parm                    morhd                          MORTALITY
     C                   parm                    inahd                          INV ADJ
      * Pounds
     C                   parm                    pinlb                          PIG IN
     C                   parm                    tinlb                          TRSF IN
     C                   parm                    tisplb                         SAME PHASE
     C                   parm                    tidplb                         DIFF PHASE
     C                   parm                    poulb                          PIG OUT
     C                   parm                    toulb                          TRSF OUT
     C                   parm                    tosplb                         SAME PHASE
     C                   parm                    todplb                         DIFF PHASE
     C                   parm                    rinlb                          REJECT IN
     C                   parm                    roulb                          REJECT OUT
     C                   parm                    qinlb                          QUALITY IN
     C                   parm                    qoulb                          QUALITY OUT
     C                   parm                    morlb                          MORTALITY
      *
      *
     C     key01         klist
     C                   kfld                    svhgsn
     C                   kfld                    svsicd
     C                   kfld                    svorfscd
      *
      * Put system date into work field.
      *
     C     *mdy          movel     udate         wkcymdiso
     C                   movel     wkcymdiso     wksysdt
      *
      *
     C                   endsr
      /EJECT
