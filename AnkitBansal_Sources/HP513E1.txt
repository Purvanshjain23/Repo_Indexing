     H/TITLE Sel Customer      E1  UP  Execute external functio
     H DATFMT(*YMD) DATEDIT(*YMD) DEBUG(*YES)
     Z* CRTBNDRPG
     Z* DFTACTGRP(*NO) BNDDIR(YBNDDIR) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP513E1
      * TITLE:       SELECT CUSTOMER
      *                OR PRODUCER JDE NUMBER
      *                OR FARM SITE JDE NUMBER
      * PROGRAMMER:  BRAD BADEN
      * CREATED:     04/02/2020
      *
      * FUNCTION:  THIS PROGRAM IS A SELECT FUNCTION DISPLAY OF
      *            VALUES IN THE J.D. EDWARDS SYSTEM.  IT IS USED
      *            ALMOST EXCLUSIVELY TO SELECT CUSTOMER NUMBERS.
      *
      *            HOWEVER, IN THE MAINTENANCE FUNCTIONS OVER FARM
      *            SITE, IT CAN ALSO BE CALLED TO SELECT A 'PRODUCER'
      *            OR 'FARM SITE JDE NUMBER'.  THE JDE 'SEARCH'
      *            CRITERIA CONTROLS WITH VALUES--CUSTOMER, PRODUCER,
      *            OR FACILITY WILL BE DISPLAYED.
      *
      *         RESTRICTORS: COMPANY
      *         SELECTORS:   alpha name
      *         POSITIONER:  none
      *
      *         IT LOADS THE WINDOW SUBFILE A PAGE AT A TIME.
      *         IT DOES NOT USE THE STANDARD MESSAGE HANDLING PROGRAM.
      *         A RECORD IS SELECTED BY POSITIONING THE CURSOR
      *         ON THE LINE AND PRESSING ENTER.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      * 07/11/94  R. CENTONZE    USE L.F KEYED ON NAME INSTEAD OF
      *                          NUMBER.
      *
      * 07/15/94  R. CENTONZE    JDE DATABASE CHANGES FOR 7/24:
      *                          THE STATE CODE IS 3A INSTEAD OF 2A,
      *                          (ABADDS), & ADDRESS FLDS ARE 40A.
      *
      * 11/02/95  LEANNE FEDOR
      *           RECOMPILE ONLY. THE ALTSEQ KEYWORD WAS ADDED TO
      *           THE CUSTOMER LOGICAL FILE SO THAT UPPER/LOWER CASE
      *           WOULD BE IGNORED WHEN SORTING.
      *
      * 05/08/96  LEANNE FEDOR
      *           MADE PRE-JDE RELEASE CHANGES. ALSO, CONDITIONED
      *           SCREEN HEADING BASED ON THE 'SEARCH' CRITERIA THAT
      *           HAS BEEN PASSED IN AS A PARAMETER.
      * 05/20/96  JONI MILLER
      *           JDE RELEASE A7.1 CHANGES
      *
      * 02/25/98  LEANNE FEDOR
      *           Changed positioner on customer name to a selector
      *           containing the value keyed.
      *
      * 04/02/20  Brad Baden   SDN465   TFS# 16169
      *           Copied source from HP513 and modified program files.
      *
      ****************************************************************
      * VALID FUNCTION KEYS
      ****************************************************************
      * 12 F12-PREVIOUS
      * 25 ROLLUP
      *
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     F*HPD513    CF   E             WORKSTN
     FHPD513E1  CF   E             WORKSTN
     F                                     SFILE(HP513S1:HDRRN1)
     F                                     INFDS(IOFEED)
      *
     F*F0101CA   IF   E           K DISK
     FE10101CA  IF   E           K DISK
      *    JDE ADDRESS BOOK          (KEY: ABMCU ABAT1 ABALPH)
      /EJECT
      ****************************************************************
      * TABLE AND ARRAY SPECIFICATIONS
      ****************************************************************
      *
     D P30             S              1    DIM(30)
     D ABA             S             40    DIM(5)
      *
      ****************************************************************
      * INPUT SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      * STANDARD WORKSTATION INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTWSFR (RECORD FORMAT: UTIDFRR)
     D IOFEED        E DS                  EXTNAME(UTWSFR)
      *
      *---------------------------------------------------------------
      * STANDARD DATABASE FILE INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTDBFR (RECORD FORMAT: FDBCKD)
     D DBFEED        E DS                  EXTNAME(UTDBFR)
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D CREATE          C                   CONST('CREATE')
     D REVISE          C                   CONST('REVISE')
     D DELETE          C                   CONST('DELETE')
     D VIEW            C                   CONST('VIEW  ')
     D SELECT          C                   CONST('SELECT')
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
     D SET1            C                   CONST('SET1  ')
     D EDIT1           C                   CONST('EDIT1 ')
     D SCRN1           C                   CONST('SCRN1 ')
     D EXIT            C                   CONST('EXIT  ')
     D UPDATE          C                   CONST('UPDATE')
      *
     D upper           c                   'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
     D lower           c                   'abcdefghijklmnopqrstuvwxyz'
      *
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
     D length          s              2  0
     D procfl          s              1
      *
      *
      * Workfields
      *
     D wkname          s                   like(c1alph)
     D wkcname         s                   like(c1alph)
      *
      /EJECT
      ****************************************************************
      * MAIN LINE
      ****************************************************************
      *
     C                   MOVEL     SET1          ROUTNE
      *
     C     *INLR         DOWEQ     *OFF                                         MAIN DO LOOP
      *
     C     ROUTNE        CASEQ     SET1          $SET1
     C     ROUTNE        CASEQ     SCRN1         $SCRN1
     C     ROUTNE        CASEQ     EDIT1         $EDIT1
      *
     C     ROUTNE        CASEQ     EXIT          $EXIT
     C                   ENDCS
     C                   ENDDO                                                  MAIN DO LOOP
      *
      /EJECT
      *----------------------------------------------------------------
      * $SET1 - SUBROUTINE TO SET ENVIRONMENT FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SET1         BEGSR
      *
      *  CLEAR/FILL THE SUBFILE
      *
     C                   EXSR      $CLR1
     C                   EXSR      $FRSH1
      *
      *  SET ROUTINE TO DISPLAY SCREEN
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $SCRN1 - SUBROUTINE TO PERFORM OPERATOR I/O FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SCRN1        BEGSR
      *
     C                   WRITE     HP513K1
     C                   EXFMT     HP513C1
      *
      * SAVE THE VALUE FOR THE LOWEST SLF RRN ON THE SCREEN FOR
      * REPOSITIONING THE SUBFILE
      *
     C                   Z-ADD     IDFLOW        WKFLOW
      * RESET ERROR FLAG
     C                   Z-ADD     0             ERROR                          ERRORS
      *
      * GET USER'S ENTRY AND RESET STANDARD RESPONSE
      *
     C                   SELECT
      *
     C     *IN12         WHENEQ    *ON                                          F12=PREVIOUS
     C                   MOVEL     EXIT          ROUTNE
      *
      *
      * Reposition the subfile if the user has changed any of the
      * positioners or selectors in the control record.
      *
     C                   when      c1alph <> svalph                             Positioners
     C                   exsr      $chksv
      *
     C     *IN25         WHENEQ    *ON                                          F25-ROLLUP
     C                   EXSR      $LOAD1
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   OTHER
      *
      * USER HAS PRESSED ENTER
      *
     C     NORECS        IFEQ      YES                                          IF EMPTY SFL
     C                   MOVEL     SET1          ROUTNE
     C                   ELSE
     C                   MOVEL     EDIT1         ROUTNE
     C                   ENDIF                                                  IF EMPTY SFL
      *
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $EDIT1 - SUBROUTINE TO EDIT INPUT FIELDS FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $EDIT1        BEGSR
      *
      * IF THERE ARE NO ERRORS IN THE SUBFILE OPTION SELECTORS ENTERED
      * BY THE USER, THEN EXECUTE THE SUBROUTINE TO READ AND PROCESS
      * THE RECORDS SELECTED BY THE USER.  AFTER COMPLETING THE
      * SUBROUTINE, SET THE ROUTINE TO START OVER.
      *
     C     ERROR         IFEQ      0                                            IF NO ERROR
     C                   EXSR      $PROC1
      *
      * IF THE USER SELECTED JDE ADDR #, THEN SET THE ROUTINE TO EXIT
      * THIS SELECTION PROGRAM.  IF NO NUMBER WAS SELECTED, THEN
      * SET TO REDISPLAY THE SCREEN OF JDE ADDRESS NOS.
      *
     C     OUAJD         IFNE      *ZEROS
     C                   MOVEL     EXIT          ROUTNE
     C                   ELSE
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
      * ELSE THERE WERE ERRORS IN THE SUBFILE OPTIONS ENTERED, SO SET
      * TO REDISPLAY SCREEN AND ERRORS TO USER
      *
     C                   ELSE
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDIF                                                  IF NO ERROR
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $chksv - save the control record positioners/selectors
      *----------------------------------------------------------------
      *                                                                        z
     C     $chksv        begsr
      *
     C                   eval      routne = set1
     C                   eval      reset = no
      *
      * Prepare to scan on customer name
      *  1) trim leading/trailing blanks
      *  2) find first non-blank postion from right
      *
     C                   eval      c1alph = %trim(c1alph)
     C     ' '           checkr    c1alph        length
      *
     C                   eval      svalph = c1alph
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * $CLR1  - SUBROUTINE TO CLEAR THE SUBFILE FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $CLR1         BEGSR
      *
     C                   CLEAR                   HP513S1
     C                   SETON                                        83        SFLCLR
     C                   WRITE     HP513C1
     C                   SETOFF                                       818283
      *                                                    81=SFLDSP
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $FRSH1 - SUBROUTINE TO REFRESH/FILL THE SUBFILE FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $FRSH1        BEGSR
      *
      * SET POSITION IN FILE
      *
     C*    K0101A        SETLL     F0101CA
     C     K0101A        SETLL     E10101CA
      *
      * THE LOWEST SUBFILE RRN ON THE SCREEN FROM THE DSPF
      * FEEDBACK AREA (IDFLOW) WAS RETRIEVED EARLIER AND PUT IN WKFLOW.
      * ADD TO WKFLOW THE NUMBER OF LINES ON YOUR SUBFILE PAGE OR THE
      * NUMBER LESS 1 TO DETERMINE A SUBFILE RRN TO REPOSITION TO.
      * RESET IS A FLAG FIELD TO INDICATE WHETHER YOU ARE ATTEMPTING
      * TO REPOSITION THE USER CLOSE TO WHERE HE WAS IN THE SUBFILE.
      * IF RESET IS 'NO' DON'T REPOSITION THE USER--JUST START OVER.
      *
     C     RESET         IFEQ      YES
     C     WKFLOW        ADD       WKRLIN        MAXRRN
     C                   ELSE
     C                   Z-ADD     WKPLIN        MAXRRN
     C                   ENDIF
      *
      * LOAD THE SUBFILE UNTIL YOU HAVE THE REQUIRED NUMBER OF RECORDS.
      * THE NUMBER WILL DEPEND ON WHETHER YOU ARE REPOSITIONING THE
      * SUBFILE OR NOT. STOP IF YOU GET TO THE END OF THE SUBFILE.
      *
     C     HDRRN1        DOUGE     MAXRRN
     C     *IN82         OREQ      *ON
     C                   EXSR      $LOAD1
     C                   ENDDO
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $LOAD1 - SUBROUTINE TO LOAD THE SUBFILE FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $LOAD1        BEGSR
      *
      * SET THE COUNT OF RECORDS ON THE SUBFILE PAGE TO ZERO.
      *
     C                   Z-ADD     0             COUNT             2 0
      *
      * FILL THE SUBFILE UNTIL THE END OF THE DATABASE FILE OR YOU
      * HAVE FILLED ALL THE LINES ON THE SUBFILE PAGE
      *
     C                   SETOFF                                       82
     C     *IN82         DOUEQ     *ON                                          DO FILL LOOP
     C     COUNT         ORGE      WKPLIN
      *
      * READ JDE ADDRESS MASTER FILE
      *
     C*    K0101A        READE     F0101CA                                82
     C     K0101A        READE     E10101CA                               82
     C     *IN82         IFEQ      *OFF                                          IF NOT EOF
      *
     C                   eval      procfl = yes
      *
      * Only include records that match the user's selectors
      *
     C                   if        c1alph  <> *blank                            If customer name
     C     lower:upper   xlate     c1alph        wkname
     C     lower:upper   xlate     abalph        wkcname
     C     wkname:length scan      wkcname                                92
     C                   if        *in92 = *off
     C                   eval      procfl = no
     C                   endif
     C                   endif                                                  If customer name
      *
      *
     C                   if        procfl = yes                                 If process
     C                   ADD       1             COUNT
     C                   ADD       1             HDRRN1
     C                   MOVEL     ABAN8         DFAN8
     C                   MOVEL     ABALPH        DFALPH
     C                   WRITE     HP513S1
     C                   SETON                                        81
      *
      * FOR POSITIONING, PLACE THE SUBFILE RELATIVE RECORD NUMBER INTO
      * THE SFLRCDNBR FIELD (HDPAG1)
      *
     C                   Z-ADD     HDRRN1        HDPAG1
      *
     C                   endif                                                  If process
     C                   ENDIF                                                  IF NOT EOF
     C                   ENDDO                                                  DO FILL LOOP
      *
      * IF NO RECORDS WERE WRITTEN TO THE SUBFILE, THEN ISSUE
      * THE STANDARD MESSAGE 'NO DATA TO DISPLAY'.
      *
     C     HDRRN1        IFEQ      0
     C                   Z-ADD     1             ERROR
     C                   MOVE      YES           NORECS
     C                   ELSE
     C                   MOVE      NO            NORECS
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $PROC1 - SUBROUTINE TO READ SUBFILE RECORDS AND PROCESS
      *          USER SELECTIONS FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $PROC1        BEGSR
      *
     C                   Z-ADD     0             ERROR
      *
      * IF CURSOR LOCATION RETURNED IS THE RRN OF A RCD IN THE SUBFILE,
      * CHAIN THE SUBFILE FOR THAT RECORD AND LOAD THE DATA INTO THE
      * PARM TO RETURN TO THE CALLING PROGRAM.
      *
     C                   SETOFF                                       82
     C     HDRRN         IFNE      0                                            IF SELECTED
     C                   Z-ADD     HDRRN         HDRRN1
     C     HDRRN1        CHAIN     HP513S1                            82
      *
     C*    K0101C        CHAIN     F0101CA                            92
     C     K0101C        CHAIN     E10101CA                           92
     C     *IN92         IFEQ      *OFF                                         IF HIT
     C                   MOVEL     ABALPH        OUALPH
     C                   MOVEL     DFAN8         OUAJD
     C                   ENDIF                                                  IF HIT
     C                   ENDIF                                                  IF SELECTED
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $EXIT - SUBROUTINE TO SET ON LR AND END JOB
      *---------------------------------------------------------------
      *
     C     $EXIT         BEGSR
     C                   SETON                                        LR
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * *INZSR - INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      * PARM LISTS
      *
     C     *ENTRY        PLIST
     C                   PARM                    INCCO             3            COMPANY
     C                   PARM                    INAT1                          SEARCH TYPE
     C                   PARM                    OUAJD                          JDE ADDRESS#
     C                   PARM                    OUALPH           30            NAME
      *
      * KEY LISTS
      *
     C     K0101A        KLIST
     C                   KFLD                    ABMCU
     C                   KFLD                    ABAT1
      *
     C     K0101C        KLIST
     C                   KFLD                    ABMCU
     C                   KFLD                    ABAT1
     C                   KFLD                    DFALPH
      *
      * SET UP SECURITY COST CENTER AND SEARCH TYPE KEY FIELD
      *
     C********           MOVE      INCCO         ABMCU
     C                   MOVE      '301'         ABMCU
     C                   MOVEL     INAT1         ABAT1
      *
     C                   SELECT
     C     INAT1         WHENEQ    'P  '
     C                   SETON                                        88
     C     INAT1         WHENEQ    'F  '
     C                   SETON                                        89
     C                   ENDSL
      *
      * SET UP WORK FIELDS FOR VALIDATIONS
      *
     C     *LIKE         DEFINE    ABAT1         INAT1
     C     *LIKE         DEFINE    ABAN8         OUAJD
     C     *LIKE         DEFINE    C1ALPH        SVALPH
      *
      * GLOBAL DEFINES
      *
     C                   MOVE      *BLANK        MODE              6            PARM
     C                   MOVE      *BLANK        PGM              10            USED IN MSG
     C                   MOVE      *BLANK        MSGFL            10            USED IN MSG
     C                   MOVE      *BLANK        ROUTNE            6            ROUTINE
     C                   Z-ADD     0             MAXRRN            4 0          REPOSITION
     C                   MOVEL     NO            RESET             1            REPOSITION
     C                   MOVEL     NO            NORECS            1            NO RECORDS
     C     *LIKE         DEFINE    IDFLOW        WKFLOW
     C                   Z-ADD     0             ERROR             3 0          ERRORS
      *
      * TO SUPPORT F5-REFRESH, LOGIC REQUIRES THE NUMBER OF LINES ON
      * THE SUBFILE PAGE AND ALSO THE NUMBER OF LINES LESS 1.  BY
      * SETTING THESE VALUES UP AS CONSTANT WORK FIELDS, THE PROCESSING
      * LOGIC CAN BE STANDARDIZED BETWEEN PROGRAMS.
      *
     C                   Z-ADD     9             WKPLIN            2 0          SFLPAG(0009)
     C     WKPLIN        SUB       1             WKRLIN            2 0          SFLPAG - 1
      *
      *  DO ONE TIME ONLY:  MAKE SURE CALLING PROGRAM SCREEN IS NOT
      *  CLEARED AND WRITE THE WINDOW DEFINITION RCDFMT
      *
     C                   WRITE     HP513R2                                      DUMMY FMT
     C                   WRITE     HP513R1                                      REF WINDOW
     C                   ENDSR
      /EJECT
