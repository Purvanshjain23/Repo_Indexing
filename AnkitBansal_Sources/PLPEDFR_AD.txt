// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PLPEDFR
// ?Date: 14.08.2025 Time: 02:55:01
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modifications and Comments
DO;

//?3008982 EL 06/20/24 - Adding F10 Toggle to show All/Zero Tattoos
//?E12101 JJH 11/20/17 - Recompile after adding Shawn Smith and
//?  remmoving Joe Hegeman from the Receiving Group TF list for
//?  field *USER.
//?E6784 JBB 07/28/16 - Recompile after adding Joe Hegeman to
//? the Receiving Group TF list for field *USER.
//?E3625 JJH 12/04/14 - Recompile because PrklISTesting List for
//? field *USER to add users Julius High (ISJHIGH) and Collin Lynch
//? ISCLYNC.
//?H16853 ISE 11/02/2020 CHANGE BUY ORDER NUMBER FIELD LENGTH FROM 5 TO 7
//?103777 E.L.10/25/22 - REPLACE Hard Coded Authority Change
//?                      By calling PDGXXFR (Parm HPETHO)
//?                      Also check IT users (ISBGUTI)
ENDDO;

EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(WRK.BOH_Company_Number);
PARAMETER('UET');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


CASE;

// IF PAR.Oms Access Denied (Y/N) is Yes
IF PAR.Oms_Access_Denied_Y_N = 'Y';

RETURN;

ENDIF;

// LCL.First Time Flag Usr = CND.Yes
LCL.First_Time_Flag_Usr = 'Y';

// PGM.*Scan limit = CON.0035000
PGM.*Scan_limit = 0035000;

//?USER: Initialize subfile control

CASE;

// IF LCL.First Time Flag Usr is Yes
IF LCL.First_Time_Flag_Usr = 'Y';

// CTL.EA Company Number = WRK.BOH Company Number
CTL.EA_Company_Number = WRK.BOH_Company_Number;

// LCL.First Time Flag Usr = CND.No
LCL.First_Time_Flag_Usr = 'N';

// CTL.Pmt Current Payment Date = PAR.Pmt Current Payment Date
CTL.Pmt_Current_Payment_Date = PAR.Pmt_Current_Payment_Date;

// CTL.Pmt Current Payment Step = PAR.Pmt Current Payment Step
CTL.Pmt_Current_Payment_Step = PAR.Pmt_Current_Payment_Step;

// CTL.Desc 15 USR = CON.All Tattoos
CTL.Desc_15_USR = 'All Tattoos';

// LCL.Usr Display 1 = CND.Yes
LCL.Usr_Display_1 = 'Y';

ENDIF;

//?USER: Initialize subfile record from DBF record

//?RU date selection
CASE;

// IF CTL.RU Date NE WRK.Zero USR
IF CTL.RU_Date <> WRK.Zero_USR;

CASE;

// IF CTL.RU Date EQ DB1.RU Date
IF CTL.RU_Date = DB1.RU_Date;

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?RU time selection
CASE;

// IF CTL.RU Time NE WRK.Zero USR
IF CTL.RU_Time <> WRK.Zero_USR;

CASE;

// IF CTL.RU Time EQ DB1.RU Time
IF CTL.RU_Time = DB1.RU_Time;

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?Tattoo number selection
CASE;

// IF CTL.EA Tattoo Number NE WRK.Zero USR
IF CTL.EA_Tattoo_Number <> WRK.Zero_USR;

CASE;

// IF CTL.EA Tattoo Number EQ DB1.EA Tattoo Number
IF CTL.EA_Tattoo_Number = DB1.EA_Tattoo_Number;

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?Trolley selection
CASE;

// IF CTL.EA Trolley Id NE WRK.Blank USR
IF CTL.EA_Trolley_Id <> WRK.Blank_USR;

CASE;

// IF CTL.EA Trolley Id EQ DB1.EA Trolley Id
IF CTL.EA_Trolley_Id = DB1.EA_Trolley_Id;

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?Process Flag Selection
CASE;

// IF CTL.EA Record Processed NE WRK.Blank USR
IF CTL.EA_Record_Processed <> WRK.Blank_USR;

CASE;

// IF CTL.EA Record Processed EQ DB1.EA Record Processed
IF CTL.EA_Record_Processed = DB1.EA_Record_Processed;

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

CASE;

// IF PGM.*Record selected is *YES
IF PGM.*Record_selected = 'Y';

EXECUTE FUNCTION(Val Tattoo&Held Info  RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1300620;
PARAMETER(RCD.EA_Company_Number);
PARAMETER(RCD.EA_Kill_Date);
PARAMETER(RCD.EA_Tattoo_Number);
PARAMETER(LCL.BOH_Buy_Order_Number);
PARAMETER(LCL.BOL_Load_Number);
PARAMETER(LCL.Record_Found_USR);
PARAMETER(RCD.Held_Over_Records_Y_N);
{
 //?USER: Initialize routine

 // PAR.Held Over Records Y/N = CND.Blank
 PAR.Held_Over_Records_Y_N = *BLANK;

 // PAR.Record Found USR = CND.Record Not Found
 PAR.Record_Found_USR = 'N';

 //?USER: Process Data record

 // PAR.Record Found USR = CND.Record Found
 PAR.Record_Found_USR = 'Y';

 CASE;

 // IF DB1.TH Held Over is greater than 0
 IF DB1.TH_Held_Over > *ZERO;

 // OR DB1.TH Held Over Record is Yes
 OR DB1.TH_Held_Over_Record = 'Y';

 // OR DB1.TH Held/Ovr Completed Dte is Greater than 0
 OR DB1.TH_Held_Ovr_Completed_Dte > *ZERO;

 // PAR.Held Over Records Y/N = CND.Yes
 PAR.Held_Over_Records_Y_N = 'Y';

 ENDIF;

 QUIT;

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

//?Selection on Tattoo = All
CASE;

// IF LCL.Usr Display 1 is Yes
IF LCL.Usr_Display_1 = 'Y';

CASE;

// IF DB1.EA Tattoo Number is Entered
IF DB1.EA_Tattoo_Number <> *ZERO;

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?Selection on Tattoo = 0
CASE;

// IF LCL.Usr Display 1 is No
IF LCL.Usr_Display_1 = 'N';

CASE;

// IF DB1.EA Tattoo Number is Not found
IF DB1.EA_Tattoo_Number = 0;

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?USER: Process subfile control (Pre-confirm)

//?F10 = Toggle (All or Zero Tattoos)
CASE;

// IF CTL.*CMD key is CF10
IF CTL.*CMD_key = '10';

CASE;

// IF LCL.Usr Display 1 is Yes
IF LCL.Usr_Display_1 = 'Y';

// CTL.Desc 15 USR = CON.Zero Tattoos
CTL.Desc_15_USR = 'Zero Tattoos';

// LCL.Usr Display 1 = CND.No
LCL.Usr_Display_1 = 'N';

// IF *OTHERWISE
IF *OTHERWISE;

// CTL.Desc 15 USR = CON.All Tattoos
CTL.Desc_15_USR = 'All Tattoos';

// LCL.Usr Display 1 = CND.Yes
LCL.Usr_Display_1 = 'Y';

ENDIF;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?USER: Process subfile record (Pre-confirm)

//?TF WANT to change the held over records
// LCL.User Status = CND.No
LCL.User_Status = 'N';

// Call program Rtv User Code Model   XF.
CALL PROGRAM(Rtv User Code Model   XF) ('POYBXFR');
PARAMETER(JOB.*USER);
PARAMETER(LCL.User_Code_Model_USR);

//?If ISBGUTI = OK
CASE;

// IF LCL.User Code Model USR is IS
IF LCL.User_Code_Model_USR = 'ISBGUTI';

// LCL.User Status = CND.Yes
LCL.User_Status = 'Y';

//?If ISBGUTI = OK
// IF *OTHERWISE
IF *OTHERWISE;

//?Check for 'HPE TFR Held Over Auth'
DO;

// Call program Val Application/User  XF.
CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(PAR.CC_Company_Number);
PARAMETER('HPETHO');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);

CASE;

// IF PAR.Oms Access Denied (Y/N) is Yes
IF PAR.Oms_Access_Denied_Y_N = 'Y';

RETURN;

// IF *OTHERWISE
IF *OTHERWISE;

// LCL.User Status = CND.Yes
LCL.User_Status = 'Y';

ENDIF;

ENDDO;

ENDIF;

CASE;

// IF LCL.User Status is Yes
IF LCL.User_Status = 'Y';

// IF *OTHERWISE
IF *OTHERWISE;

CASE;

// IF RCD.Held Over Records Y/N is Yes
IF RCD.Held_Over_Records_Y_N = 'Y';

// Send error message - 'Held Overs on Tattoo, please contact the Seaboard I.S. for this correction'
ERROR(PRK1242);

QUIT;

ENDIF;

ENDIF;

CASE;

// IF RCD.*SFLSEL is Select Option 2
IF RCD.*SFLSEL = '2'/'2';

// Call program Edt EvalTran Upl Mov  ER.
CALL PROGRAM(Edt EvalTran Upl Mov  ER) ('PLODE1R');
PARAMETER(RCD.EA_Company_Number);
PARAMETER(RCD.EA_Kill_Date);
PARAMETER(RCD.EA_Scale_Sequence_Number);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// IF RCD.*SFLSEL is Select Option 4
IF RCD.*SFLSEL = '4'/'4';

// Call program Edt EvalTran Upl Rmv  ER.
CALL PROGRAM(Edt EvalTran Upl Rmv  ER) ('PLO9E1R');
PARAMETER(RCD.EA_Company_Number);
PARAMETER(RCD.EA_Kill_Date);
PARAMETER(RCD.EA_Scale_Sequence_Number);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

