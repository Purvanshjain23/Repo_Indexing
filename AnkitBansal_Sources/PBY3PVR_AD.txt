// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PBY3PVR
// ?Date: 14.08.2025 Time: 03:49:50
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv and Center Hdg IF) TYPE(EXCINTFUN)                     AC1258539;
PARAMETER('C/S');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


//?USER: Load screen

MOVE *ALL (To: DTL From: PAR);

//?USER: Validate fields

CASE;

// IF DTL.Text USR 6 NE WRK.Blank 6 USR
IF DTL.Text_USR_6 <> WRK.Blank_6_USR;

EXECUTE FUNCTION(VAL Frt Charge Exists  RT) TYPE(RTVOBJ) FILE(POA9REP)          AC2074630;
PARAMETER(DTL.Text_USR_6);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

}


CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// Send error message - 'Freight Charge already exists.'
ERROR(USR3053);

// IF *OTHERWISE
IF *OTHERWISE;

ENDIF;

ENDIF;

//?USER: User defined action

CASE;

// IF DTL.Text USR 6 NE WRK.Blank 6 USR
IF DTL.Text_USR_6 <> WRK.Blank_6_USR;

//?all freight charge ___ files
EXECUTE FUNCTION(Rtv Cpy FC to New     RT) TYPE(RTVOBJ) FILE(POA9REP)           AC2129662;
PARAMETER(DTL.FC_Code);
PARAMETER(DTL.Text_USR_6);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Crt Freight Charge    CR) TYPE(CRTOBJ) FILE(POA9REP)           AC1626731;
 PARAMETER(PAR.Text_USR_6);
 PARAMETER(DB1.FC_Description);
 PARAMETER(DB1.FC_Rate_Amount);
 PARAMETER(DB1.FC_Unit_of_Measure);
 PARAMETER(DB1.FC_Act_Frt_Include_Sts);
 PARAMETER(DB1.FC_Frt_Add_Deduct);
 PARAMETER(DB1.FC_Load_Type_Select);
 PARAMETER(DB1.FC_State_Select);
 PARAMETER(DB1.FC_Export_Select);
 PARAMETER(DB1.FC_Shag_Wash_Select);
 PARAMETER(DB1.FC_Auto_Calc_Sts);
 PARAMETER(DB1.FC_Charge_Category);
 PARAMETER(DB1.FC_Shag_Wash_Comp);
 PARAMETER(DB1.FC_Edit_Sequence);
 PARAMETER(DB1.FC_Tot_Freight_Inc_Sts);
 PARAMETER(DB1.FC_Special_Type);
 PARAMETER(DB1.FC_ExpInt_FR_FZ_Select);
 PARAMETER(DB1.FC_Reference_Required);
 PARAMETER(DB1.FC_Trans_Mode_Select);
 PARAMETER(DB1.FC_Freight_Rate_Type_Sel);
 PARAMETER(DB1.FC_Company_Select);
 PARAMETER(DB1.FC_Company_Carrier_Select);
 PARAMETER(DB1.FC_Shared_Responsibility);
 PARAMETER(DB1.FC_Unused_Sts_10);
 PARAMETER(DB1.FC_Auto_Calc_Effective);
 PARAMETER(DB1.Record_Status);
 PARAMETER(DB1.Create_Date);
 PARAMETER(DB1.Create_Time);
 PARAMETER(DB1.Create_User);
 PARAMETER(DB1.Create_Program);
 PARAMETER(DB1.Change_Date);
 PARAMETER(DB1.Change_Time);
 PARAMETER(DB1.Change_User);
 PARAMETER(DB1.Change_Program);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Create_Date);
  PARAMETER(DB1.Create_Time);
  PARAMETER(DB1.Create_User);
  PARAMETER(DB1.Create_Program);
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   //?*** Set RECORD STATUS field. ***
   // PAR.Record Status = CND.Active
   PAR.Record_Status = 'A';

   //?*** Set CREATE fields. ***
   // PAR.Create Date = JOB.*Job date
   PAR.Create_Date = JOB.*Job_date;

   // PAR.Create Time = JOB.*Job time
   PAR.Create_Time = JOB.*Job_time;

   // PAR.Create User = JOB.*USER
   PAR.Create_User = JOB.*USER;

   // PAR.Create Program = JOB.*PROGRAM
   PAR.Create_Program = JOB.*PROGRAM;

   //?*** Set CHANGE fields. ***
   // PAR.Change Date = CON.*ZERO
   PAR.Change_Date = *ZERO;

   // PAR.Change Time = CON.*ZERO
   PAR.Change_Time = *ZERO;

   // PAR.Change User = CON.*BLANK
   PAR.Change_User = *BLANK;

   // PAR.Change Program = CON.*BLANK
   PAR.Change_Program = *BLANK;

  }

 }

 EXECUTE FUNCTION(Rtv Copy to New       RT) TYPE(RTVOBJ) FILE(PME5REP)           AC2129668;
 PARAMETER(DB1.FC_Code);
 PARAMETER(PAR.Text_USR_6);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Crt FC Co/Carrier     CR) TYPE(CRTOBJ) FILE(PME5REP)           AC1926354;
  PARAMETER(PAR.Text_USR_6);
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Carrier_Code);
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Create_Date);
  PARAMETER(DB1.Create_Time);
  PARAMETER(DB1.Create_User);
  PARAMETER(DB1.Create_Program);
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
 }

 EXECUTE FUNCTION(Rtv Copy to New       RT) TYPE(RTVOBJ) FILE(PMEXREP)           AC2129669;
 PARAMETER(DB1.FC_Code);
 PARAMETER(PAR.Text_USR_6);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Crt FrtChrg Comment   CR) TYPE(CRTOBJ) FILE(PMEXREP)           AC1909002;
  PARAMETER(PAR.Text_USR_6);
  PARAMETER(DB1.FCD_Sequence_Number);
  PARAMETER(DB1.FCD_Comment);
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Create_Date);
  PARAMETER(DB1.Create_Time);
  PARAMETER(DB1.Create_User);
  PARAMETER(DB1.Create_Program);
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
   PARAMETER(DB1.Record_Status);
   PARAMETER(DB1.Create_Date);
   PARAMETER(DB1.Create_Time);
   PARAMETER(DB1.Create_User);
   PARAMETER(DB1.Create_Program);
   PARAMETER(DB1.Change_Date);
   PARAMETER(DB1.Change_Time);
   PARAMETER(DB1.Change_User);
   PARAMETER(DB1.Change_Program);
   {
    //?Execute internal function

    //?*** Set RECORD STATUS field. ***
    // PAR.Record Status = CND.Active
    PAR.Record_Status = 'A';

    //?*** Set CREATE fields. ***
    // PAR.Create Date = JOB.*Job date
    PAR.Create_Date = JOB.*Job_date;

    // PAR.Create Time = JOB.*Job time
    PAR.Create_Time = JOB.*Job_time;

    // PAR.Create User = JOB.*USER
    PAR.Create_User = JOB.*USER;

    // PAR.Create Program = JOB.*PROGRAM
    PAR.Create_Program = JOB.*PROGRAM;

    //?*** Set CHANGE fields. ***
    // PAR.Change Date = CON.*ZERO
    PAR.Change_Date = *ZERO;

    // PAR.Change Time = CON.*ZERO
    PAR.Change_Time = *ZERO;

    // PAR.Change User = CON.*BLANK
    PAR.Change_User = *BLANK;

    // PAR.Change Program = CON.*BLANK
    PAR.Change_Program = *BLANK;

   }

  }

 }

 EXECUTE FUNCTION(Rtv Copy to New       RT) TYPE(RTVOBJ) FILE(PMDJREP)           AC2129670;
 PARAMETER(DB1.FC_Code);
 PARAMETER(PAR.Text_USR_6);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Crt Frt Chrg Ref      CR) TYPE(CRTOBJ) FILE(PMDJREP)           AC1866891;
  PARAMETER(PAR.Text_USR_6);
  PARAMETER(DB1.CR_Reference_Code);
  PARAMETER(DB1.Charge_Reference_Type);
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Create_Date);
  PARAMETER(DB1.Create_Time);
  PARAMETER(DB1.Create_User);
  PARAMETER(DB1.Create_Program);
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
 }

 EXECUTE FUNCTION(Rtv Copy to New       RT) TYPE(RTVOBJ) FILE(POBBCPP)           AC2129671;
 PARAMETER(DB1.FC_Code);
 PARAMETER(PAR.Text_USR_6);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Crt Frt Charge Rt onlyCR) TYPE(CRTOBJ) FILE(POBBCPP)           AC2130100;
  PARAMETER(PAR.Text_USR_6);
  PARAMETER(DB1.FCR_Week_Begin_Date);
  PARAMETER(DB1.FCR_Rate_Amount);
  PARAMETER(DB1.FCR_Doe_National_Avg_Prc);
  PARAMETER(DB1.FCR_Rate_Amount_2);
  PARAMETER(DB1.FCR_Unused_Amt_2);
  PARAMETER(DB1.FCR_Unused_Amt_3);
  PARAMETER(DB1.FCR_Unused_Sts_1);
  PARAMETER(DB1.FCR_Unused_Sts_2);
  PARAMETER(DB1.FCR_Unused_Sts_3);
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Create_Date);
  PARAMETER(DB1.Create_Time);
  PARAMETER(DB1.Create_User);
  PARAMETER(DB1.Create_Program);
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
   PARAMETER(DB1.Record_Status);
   PARAMETER(DB1.Create_Date);
   PARAMETER(DB1.Create_Time);
   PARAMETER(DB1.Create_User);
   PARAMETER(DB1.Create_Program);
   PARAMETER(DB1.Change_Date);
   PARAMETER(DB1.Change_Time);
   PARAMETER(DB1.Change_User);
   PARAMETER(DB1.Change_Program);
   {
    //?Execute internal function

    //?*** Set RECORD STATUS field. ***
    // PAR.Record Status = CND.Active
    PAR.Record_Status = 'A';

    //?*** Set CREATE fields. ***
    // PAR.Create Date = JOB.*Job date
    PAR.Create_Date = JOB.*Job_date;

    // PAR.Create Time = JOB.*Job time
    PAR.Create_Time = JOB.*Job_time;

    // PAR.Create User = JOB.*USER
    PAR.Create_User = JOB.*USER;

    // PAR.Create Program = JOB.*PROGRAM
    PAR.Create_Program = JOB.*PROGRAM;

    //?*** Set CHANGE fields. ***
    // PAR.Change Date = CON.*ZERO
    PAR.Change_Date = *ZERO;

    // PAR.Change Time = CON.*ZERO
    PAR.Change_Time = *ZERO;

    // PAR.Change User = CON.*BLANK
    PAR.Change_User = *BLANK;

    // PAR.Change Program = CON.*BLANK
    PAR.Change_Program = *BLANK;

   }

  }

 }

 EXECUTE FUNCTION(Rtv copy to new       RT) TYPE(RTVOBJ) FILE(PME4REP)           AC2129672;
 PARAMETER(DB1.FC_Code);
 PARAMETER(PAR.Text_USR_6);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Crt FC Company        CR) TYPE(CRTOBJ) FILE(PME4REP)           AC1926402;
  PARAMETER(PAR.Text_USR_6);
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Create_Date);
  PARAMETER(DB1.Create_Time);
  PARAMETER(DB1.Create_User);
  PARAMETER(DB1.Create_Program);
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
 }

 EXECUTE FUNCTION(Rtv copy to new       RT) TYPE(RTVOBJ) FILE(POBAREP)           AC2129673;
 PARAMETER(DB1.FC_Code);
 PARAMETER(PAR.Text_USR_6);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Crt Frt Charge State  CR) TYPE(CRTOBJ) FILE(POBAREP)           AC1626933;
  PARAMETER(PAR.Text_USR_6);
  PARAMETER(DB1.State_Code);
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Create_Date);
  PARAMETER(DB1.Create_Time);
  PARAMETER(DB1.Create_User);
  PARAMETER(DB1.Create_Program);
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
   PARAMETER(DB1.Record_Status);
   PARAMETER(DB1.Create_Date);
   PARAMETER(DB1.Create_Time);
   PARAMETER(DB1.Create_User);
   PARAMETER(DB1.Create_Program);
   PARAMETER(DB1.Change_Date);
   PARAMETER(DB1.Change_Time);
   PARAMETER(DB1.Change_User);
   PARAMETER(DB1.Change_Program);
   {
    //?Execute internal function

    //?*** Set RECORD STATUS field. ***
    // PAR.Record Status = CND.Active
    PAR.Record_Status = 'A';

    //?*** Set CREATE fields. ***
    // PAR.Create Date = JOB.*Job date
    PAR.Create_Date = JOB.*Job_date;

    // PAR.Create Time = JOB.*Job time
    PAR.Create_Time = JOB.*Job_time;

    // PAR.Create User = JOB.*USER
    PAR.Create_User = JOB.*USER;

    // PAR.Create Program = JOB.*PROGRAM
    PAR.Create_Program = JOB.*PROGRAM;

    //?*** Set CHANGE fields. ***
    // PAR.Change Date = CON.*ZERO
    PAR.Change_Date = *ZERO;

    // PAR.Change Time = CON.*ZERO
    PAR.Change_Time = *ZERO;

    // PAR.Change User = CON.*BLANK
    PAR.Change_User = *BLANK;

    // PAR.Change Program = CON.*BLANK
    PAR.Change_Program = *BLANK;

   }

  }

 }

}


// PAR.Text USR 6 = DTL.Text USR 6
PAR.Text_USR_6 = DTL.Text_USR_6;

ENDIF;

