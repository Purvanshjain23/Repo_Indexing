// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKFUDFR
// ?Date: 14.08.2025 Time: 02:49:17
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?H16853 ISE 11/09/2020 - Recompiled due to change in Buy Order Number
EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(WRK.CC_Company_Number);
PARAMETER('HPE');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


CASE;

// IF PAR.Oms Access Denied (Y/N) is Yes
IF PAR.Oms_Access_Denied_Y_N = 'Y';

RETURN;

ENDIF;

//?USER: Initialize subfile control

CASE;

// IF WRK.First Time Flag Usr EQ WRK.Blank USR
IF WRK.First_Time_Flag_Usr = WRK.Blank_USR;

// CTL.Company Number USR = WRK.CC Company Number
CTL.Company_Number_USR = WRK.CC_Company_Number;

// WRK.Display Print Prompt  Usr = CND.Prompt is to be displayed
WRK.Display_Print_Prompt_Usr = 'Y';

// WRK.First Time Flag Usr = CND.Yes
WRK.First_Time_Flag_Usr = 'Y';

ENDIF;

EXECUTE FUNCTION(Val Company Number    IF) TYPE(EXCINTFUN)                      AB1129077;
PARAMETER(CTL.Company_Number_USR);
PARAMETER(CTL.Oms_Name);
PARAMETER(WRK.Invalid_Y_N_USR);
{
 //?Execute internal function

 // Call program Val Company Number    XF.
 CALL PROGRAM(Val Company Number    XF) ('PDGZXFR');
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(WRK.Invalid_Y_N_USR);

 CASE;

 // IF WRK.Invalid Y/N USR is Yes
 IF WRK.Invalid_Y_N_USR = 'Y';

 // Send error message - 'Invalid Company Number'
 ERROR(PRK0299);
 MSGPARM(PAR.CC_Company_Number);

 ENDIF;

 // PAR.Invalid Y/N USR = WRK.Invalid Y/N USR
 PAR.Invalid_Y_N_USR = WRK.Invalid_Y_N_USR;

}


// WRK.Company Number USR = CTL.Company Number USR
WRK.Company_Number_USR = CTL.Company_Number_USR;

// CTL.SV Status Live usr = CTL.@Status Live (Y/N)
CTL.SV_Status_Live_usr = CTL.@Status_Live_Y_N;

// CTL.SV Status Carc usr = CTL.@Status Carcass (Y/N)
CTL.SV_Status_Carc_usr = CTL.@Status_Carcass_Y_N;

// CTL.Sv Live Price Zero Usr = CTL.Live Price Zero
CTL.Sv_Live_Price_Zero_Usr = CTL.Live_Price_Zero;

//?USER: Initialize subfile record from DBF record

// PGM.*Record selected = CND.*YES
PGM.*Record_selected = 'Y';

EXECUTE FUNCTION(Rtv UnpaidLive f/pdcr RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1151606;
PARAMETER(WRK.Company_Number_USR);
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(RCD.@Status_Live_Y_N);
{
 //?USER: Initialize routine

 // PAR.@Status Live (Y/N) = CND.No
 PAR.@Status_Live_Y_N = *BLANK;

 //?USER: Processing if Data record not found

 // PAR.@Status Live (Y/N) = CND.No
 PAR.@Status_Live_Y_N = *BLANK;

 //?USER: Process Data record

 // PAR.@Status Live (Y/N) = CND.Yes
 PAR.@Status_Live_Y_N = 'Y';

 QUIT;

}


EXECUTE FUNCTION(Rtv Payment Processing RT) TYPE(RTVOBJ) FILE(PKC4REP)          AB1147409;
PARAMETER(WRK.Company_Number_USR);
PARAMETER(WRK.Pmt_Current_Payment_Date);
PARAMETER(WRK.Pmt_Current_Payment_Step);
PARAMETER(WRK.PP_Commission_Paym_Error);
PARAMETER(WRK.PP_Payment_Error);
PARAMETER(WRK.PP_Unused_Nbr_1);
PARAMETER(WRK.PP_Repayment_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv UnpaidLive Price  RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1197644;
PARAMETER(WRK.Company_Number_USR);
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(RCD.Live_Price_Zero);
PARAMETER(WRK.Pmt_Current_Payment_Date);
{
 //?USER: Initialize routine

 // PAR.Live Price Zero = WRK.Blank Usr 1 fld Usr
 PAR.Live_Price_Zero = WRK.Blank_Usr_1_fld_Usr;

 //?USER: Processing if Data record not found

 // PAR.Live Price Zero = WRK.Blank Usr 1 fld Usr
 PAR.Live_Price_Zero = WRK.Blank_Usr_1_fld_Usr;

 //?USER: Process Data record

 CASE;

 // IF DB1.TH Purchase Date LE PAR.Pmt Current Payment Date
 IF DB1.TH_Purchase_Date <= PAR.Pmt_Current_Payment_Date;

 CASE;

 // IF DB1.TH Live Purchase Price is Zeros
 IF DB1.TH_Live_Purchase_Price = *ZERO;

 // PAR.Live Price Zero = CND.Yes
 PAR.Live_Price_Zero = 'Y';

 QUIT;

 ENDIF;

 ENDIF;

}


EXECUTE FUNCTION(Rtv UnpaidCarc f/pdcr RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1151611;
PARAMETER(WRK.Company_Number_USR);
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(RCD.@Status_Carcass_Y_N);
{
 //?USER: Initialize routine

 // PAR.@Status Carcass (Y/N) = CND.No
 PAR.@Status_Carcass_Y_N = *BLANK;

 //?USER: Processing if Data record not found

 // PAR.@Status Carcass (Y/N) = CND.No
 PAR.@Status_Carcass_Y_N = *BLANK;

 //?USER: Process Data record

 // PAR.@Status Carcass (Y/N) = CND.Yes
 PAR.@Status_Carcass_Y_N = 'Y';

 QUIT;

}


//?Check for Live
CASE;

// IF CTL.@Status Live (Y/N) EQ WRK.Blank Usr 1 fld Usr
IF CTL.@Status_Live_Y_N = WRK.Blank_Usr_1_fld_Usr;

//?Check for Live
// IF CTL.@Status Live (Y/N) EQ RCD.@Status Live (Y/N)
IF CTL.@Status_Live_Y_N = RCD.@Status_Live_Y_N;

//?Check for Live
// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?Check for Live Price
CASE;

// IF CTL.Live Price Zero EQ WRK.Blank Usr 1 fld Usr
IF CTL.Live_Price_Zero = WRK.Blank_Usr_1_fld_Usr;

//?Check for Live Price
// IF CTL.Live Price Zero EQ RCD.Live Price Zero
IF CTL.Live_Price_Zero = RCD.Live_Price_Zero;

//?Check for Live Price
// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?Check for Carcass Merit
CASE;

// IF CTL.@Status Carcass (Y/N) EQ WRK.Blank Usr 1 fld Usr
IF CTL.@Status_Carcass_Y_N = WRK.Blank_Usr_1_fld_Usr;

//?Check for Carcass Merit
// IF CTL.@Status Carcass (Y/N) EQ RCD.@Status Carcass (Y/N)
IF CTL.@Status_Carcass_Y_N = RCD.@Status_Carcass_Y_N;

//?Check for Carcass Merit
// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?USER: Process subfile control (Pre-confirm)

EXECUTE FUNCTION(Val Company Number    IF) TYPE(EXCINTFUN)                      AB1129077;
PARAMETER(CTL.Company_Number_USR);
PARAMETER(CTL.Oms_Name);
PARAMETER(WRK.Invalid_Y_N_USR);
{
 //?Execute internal function

 // Call program Val Company Number    XF.
 CALL PROGRAM(Val Company Number    XF) ('PDGZXFR');
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(WRK.Invalid_Y_N_USR);

 CASE;

 // IF WRK.Invalid Y/N USR is Yes
 IF WRK.Invalid_Y_N_USR = 'Y';

 // Send error message - 'Invalid Company Number'
 ERROR(PRK0299);
 MSGPARM(PAR.CC_Company_Number);

 ENDIF;

 // PAR.Invalid Y/N USR = WRK.Invalid Y/N USR
 PAR.Invalid_Y_N_USR = WRK.Invalid_Y_N_USR;

}


CASE;

// IF CTL.*CMD key is CF13
IF CTL.*CMD_key = '13';

// Call program Zzz Int. Resale Lv Pr PV.
CALL PROGRAM(Zzz Int. Resale Lv Pr PV) ('PKJXPVR');

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

//?USER: Process subfile record (Pre-confirm)

CASE;

// IF RCD.*SFLSEL is *WW/Display request
IF RCD.*SFLSEL = '5'/'5';

// Call program WW Live Payment       DF.
CALL PROGRAM(WW Live Payment       DF) ('PKI6DFR');
PARAMETER(CTL.Company_Number_USR);
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(CTL.Oms_Name);
PARAMETER(RCD.SR_Source_Code);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// IF RCD.*SFLSEL is *Option 7 request
IF RCD.*SFLSEL = '7'/'7';

// Call program WW Unpaid Crc Mrt Pay DF.
CALL PROGRAM(WW Unpaid Crc Mrt Pay DF) ('PKQ2DFR');
PARAMETER(CTL.Company_Number_USR);
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(RCD.PD_Name);
PARAMETER(RCD.SR_Source_Code);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// IF RCD.*SFLSEL is *option 9 request
IF RCD.*SFLSEL = '9'/'9';

// Call program Dsp Producer History  DF.
CALL PROGRAM(Dsp Producer History  DF) ('PKRUDFR');
PARAMETER(CTL.Company_Number_USR);
PARAMETER(RCD.PD_Producer_Code);
PARAMETER(PAR.Oms_System_Value_Alpha);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// IF CTL.*CMD key is CF13
IF CTL.*CMD_key = '13';

// Call program Zzz Int. Resale Lv Pr PV.
CALL PROGRAM(Zzz Int. Resale Lv Pr PV) ('PKJXPVR');

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?USER: Final processing (Pre-confirm)

CASE;

// IF CTL.SV Status Live usr NE CTL.@Status Live (Y/N)
IF CTL.SV_Status_Live_usr <> CTL.@Status_Live_Y_N;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

QUIT;

// IF CTL.SV Status Carc usr NE CTL.@Status Carcass (Y/N)
IF CTL.SV_Status_Carc_usr <> CTL.@Status_Carcass_Y_N;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

QUIT;

// IF CTL.Sv Live Price Zero Usr NE CTL.Live Price Zero
IF CTL.Sv_Live_Price_Zero_Usr <> CTL.Live_Price_Zero;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

QUIT;

ENDIF;

