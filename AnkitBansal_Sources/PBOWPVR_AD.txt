// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PBOWPVR
// ?Date: 14.08.2025 Time: 03:48:44
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modification History
DO;

//?CST/ITM Uma 07/07/25 - Recompilation due to DDS to DDL conversion of
//?"PBBOREP - DP_LOCATION , PBBPREP - DP_PRODUCT_LOCATION".
//?"US 23303: Add audit columns in DP* tables."
ENDDO;

//?USER: Load screen

// DTL.DP Product = PAR.DP Product
DTL.DP_Product = PAR.DP_Product;

//?USER: Validate fields

//?F4
CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

CASE;

// IF PGM.*Cursor field <IS> DTL.Parent Customer
IF PGM.*Cursor_field = DTL.Parent_Customer;

// Call program SEL Parent Customer    SR.
CALL PROGRAM(SEL Parent Customer    SR) ('PDWBSRR');
PARAMETER(DTL.Parent_Customer);

ENDIF;

CASE;

// IF PGM.*Cursor field <IS> DTL.Export Country Code
IF PGM.*Cursor_field = DTL.Export_Country_Code;

// Call program SEL Country Active     SR.
CALL PROGRAM(SEL Country Active     SR) ('PDEGSRR');
PARAMETER(DTL.Export_Country_Code);

ENDIF;

CASE;

// IF PGM.*Cursor field <IS> DTL.DP Salesperson Code
IF PGM.*Cursor_field = DTL.DP_Salesperson_Code;

// Call program SEL Active Salesperson SR.
CALL PROGRAM(SEL Active Salesperson SR) ('CABYSRR');
PARAMETER(DTL.DP_Salesperson_Code);

ENDIF;

ENDIF;

CASE;

// IF DTL.Parent Customer is Parent C Class
IF DTL.Parent_Customer = 99999;

// IF *OTHERWISE
IF *OTHERWISE;

// DTL.Customer Number USR 1 = CON.*ZERO
DTL.Customer_Number_USR_1 = *ZERO;

ENDIF;

//?PARENT CUSTOMER VALIDATIONS , AND CLASS C SPECIAL PROCESSING
CASE;

// IF DTL.Parent Customer is Parent C Class
IF DTL.Parent_Customer = 99999;

// DTL.DP Classification ABC = CND.Class C
DTL.DP_Classification_ABC = 'C';

//?PARENT CUSTOMER VALIDATIONS , AND CLASS C SPECIAL PROCESSING
// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(Customer Name DRV) TYPE(DRVFLD)                                AC1631131;
PARAMETER(DTL.Customer_Name_DRV);
PARAMETER(DTL.Parent_Customer);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Customer Name      RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1108159;
 PARAMETER(PAR.Ship_To_Customer);
 PARAMETER(PAR.Customer_Name_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


EXECUTE FUNCTION(RTV Type Code by Cust  RT) TYPE(RTVOBJ) FILE(CAEOREP)          AC1625687;
PARAMETER(DTL.Parent_Customer);
PARAMETER(DTL.Type_Code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF DTL.Customer Name DRV is blanks
IF DTL.Customer_Name_DRV = *BLANK;

// Send error message - 'Customer is not found.'
ERROR(USR0525);
MSGPARM(DTL.Parent_Customer);

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(Rtv CCE Class ABC-DP  RT) TYPE(RTVOBJ) FILE(PDNIREP)           AC2097330;
PARAMETER(DTL.Parent_Customer);
PARAMETER(DTL.DP_Classification_ABC);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF DTL.DP Classification ABC is Class C
IF DTL.DP_Classification_ABC = 'C';

// DTL.Customer Number USR 1 = DTL.Parent Customer
DTL.Customer_Number_USR_1 = DTL.Parent_Customer;

// DTL.Parent Customer = CND.Parent C Class
DTL.Parent_Customer = 99999;

ENDIF;

ENDIF;

ENDIF;

//?EXPORT VALIDATIONS
CASE;

// IF DTL.DP Type Code USR is Export
IF DTL.DP_Type_Code_USR = 'EX';

//?Validate country
CASE;

// IF DTL.Export Country Code is Blank
IF DTL.Export_Country_Code = *BLANK;

// Send error message - 'Country Master not found.'
ERROR(USR1158);
MSGPARM(DTL.Export_Country_Code);

//?Validate country
// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(RTV Chk if valid Cntry RT) TYPE(RTVOBJ) FILE(OME5REP)          AC1198145;
PARAMETER(DTL.Export_Country_Code);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

}


CASE;

// IF PGM.*Return code is *Record does not exist
IF PGM.*Return_code = 'Y2U0005';

// Send error message - 'Country Master not found.'
ERROR(USR1158);
MSGPARM(DTL.Export_Country_Code);

ENDIF;

ENDIF;

CASE;

// IF DTL.DP Region USR is *ALL values
IF DTL.DP_Region_USR = 'NE'/'WE'/'SE';

// Send error message - 'Region invalid for EXport location. Enter Country.'
ERROR(USR4748);
MSGPARM(DTL.DP_Region_USR);

ENDIF;

//?EXPORT VALIDATIONS
// IF *OTHERWISE
IF *OTHERWISE;

CASE;

// IF DTL.Export Country Code is Entered
IF DTL.Export_Country_Code <> *BLANK;

// Send error message - 'Country invalid if not EXport location. Enter Region.'
ERROR(USR4749);
MSGPARM(DTL.Export_Country_Code);

ENDIF;

ENDIF;

CASE;

// IF DTL.DP Region USR EQ WRK.Blank for 3          USR
IF DTL.DP_Region_USR = WRK.Blank_for_3_USR;

// AND DTL.Export Country Code is Blank
AND DTL.Export_Country_Code = *BLANK;

// Send error message - 'Region or Country must be entered.'
ERROR(USR4755);
MSGPARM(DTL.DP_Region_USR);
MSGPARM(DTL.Export_Country_Code);

ENDIF;

EXECUTE FUNCTION(Salesperson Name DRV) TYPE(DRVFLD)                             AC1828552;
PARAMETER(DTL.Salesperson_Name_DRV);
PARAMETER(DTL.DP_Salesperson_Code);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Salesperson NmeOnlyRT) TYPE(RTVOBJ) FILE(CAAPREP)          AC1739999;
 PARAMETER(PAR.Salesperson_Code);
 PARAMETER(PAR.Salesperson_Name_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


CASE;

// IF DTL.Salesperson Name DRV is blanks
IF DTL.Salesperson_Name_DRV = *BLANK;

// Send error message - 'Salesperson not found.'
ERROR(USR0039);
MSGPARM(DTL.DP_Salesperson_Code);

// IF *OTHERWISE
IF *OTHERWISE;

// DTL.DP Salesperson Name = DTL.Salesperson Name DRV
DTL.DP_Salesperson_Name = DTL.Salesperson_Name_DRV;

ENDIF;

//?Format DP Location
DO;

// PAR.DP Location = CON.*BLANK
PAR.DP_Location = *BLANK;

// PAR.DP Parent Customer Name = CON.*BLANK
PAR.DP_Parent_Customer_Name = *BLANK;

CASE;

// IF DTL.Parent Customer is GE 1000000
IF DTL.Parent_Customer >= 1000000;

// LCL.Customer Number Alpha = CVTVAR(DTL.Parent Customer)
LCL.Customer_Number_Alpha = CVTVAR(DTL.Parent_Customer);

// PAR.DP Location = LCL.Customer Number Alpha
PAR.DP_Location = LCL.Customer_Number_Alpha;

// IF *OTHERWISE
IF *OTHERWISE;

CASE;

// IF DTL.Parent Customer is GE 100000
IF DTL.Parent_Customer >= 100000;

// LCL.USR number = DTL.Parent Customer
LCL.USR_number = DTL.Parent_Customer;

// LCL.customer = CVTVAR(LCL.USR number)
LCL.customer = CVTVAR(LCL.USR_number);

// PAR.DP Location = LCL.customer
PAR.DP_Location = LCL.customer;

// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Number 5,0            USR = DTL.Parent Customer
LCL.Number_50_USR = DTL.Parent_Customer;

// LCL.Text USR 5 = CVTVAR(LCL.Number 5,0            USR)
LCL.Text_USR_5 = CVTVAR(LCL.Number_50_USR);

// PAR.DP Location = LCL.Text USR 5
PAR.DP_Location = LCL.Text_USR_5;

ENDIF;

ENDIF;

// LCL.Text 3 Length USR = CONCAT(DTL.DP Type Code USR,CON.-,CON.*ZERO)
LCL.Text_3_Length_USR = DTL.DP_Type_Code_USR + '-' (*ZERO);

CASE;

// IF DTL.DP Region USR is *ALL values
IF DTL.DP_Region_USR = 'NE'/'WE'/'SE';

// LCL.Text USR 5 = CONCAT(LCL.Text 3 Length USR,DTL.DP Region USR,CON.*ZERO)
LCL.Text_USR_5 = LCL.Text_3_Length_USR + DTL.DP_Region_USR (*ZERO);

// LCL.Text USR 6 = CONCAT(CON.-,LCL.Text USR 5,CON.*ZERO)
LCL.Text_USR_6 = '-' + LCL.Text_USR_5 (*ZERO);

// PAR.DP Location = CONCAT(PAR.DP Location,LCL.Text USR 6,CON.*ZERO)
PAR.DP_Location = PAR.DP_Location + LCL.Text_USR_6 (*ZERO);

CASE;

// IF DTL.Parent Customer is Parent C Class
IF DTL.Parent_Customer = 99999;

// PAR.DP Parent Customer Name = CONCAT(CON.C CUSTOMER,LCL.Text USR 6,CON.1)
PAR.DP_Parent_Customer_Name = 'C CUSTOMER' + LCL.Text_USR_6 (1);

ENDIF;

// IF *OTHERWISE
IF *OTHERWISE;

// LCL.TPM Country Code = DTL.Export Country Code
LCL.TPM_Country_Code = DTL.Export_Country_Code;

CASE;

// IF DTL.Parent Customer is Parent C Class
IF DTL.Parent_Customer = 99999;

// LCL.TPM Country Code = CON.EXP
LCL.TPM_Country_Code = 'EXP';

ENDIF;

// LCL.Text USR 6 = CONCAT(LCL.Text 3 Length USR,LCL.TPM Country Code,CON.*ZERO)
LCL.Text_USR_6 = LCL.Text_3_Length_USR + LCL.TPM_Country_Code (*ZERO);

// LCL.Text USR 7 = CONCAT(CON.-,LCL.Text USR 6,CON.*ZERO)
LCL.Text_USR_7 = '-' + LCL.Text_USR_6 (*ZERO);

// PAR.DP Location = CONCAT(PAR.DP Location,LCL.Text USR 7,CON.*ZERO)
PAR.DP_Location = PAR.DP_Location + LCL.Text_USR_7 (*ZERO);

CASE;

// IF DTL.Parent Customer is Parent C Class
IF DTL.Parent_Customer = 99999;

// PAR.DP Parent Customer Name = CONCAT(CON.C CUSTOMER,LCL.Text USR 7,CON.1)
PAR.DP_Parent_Customer_Name = 'C CUSTOMER' + LCL.Text_USR_7 (1);

ENDIF;

ENDIF;

ENDDO;

//?Validate after all components are entered.
CASE;

// IF DTL.Parent Customer is not equal to zero
IF DTL.Parent_Customer <> *ZERO;

// AND DTL.DP Type Code USR is *ALL values
AND DTL.DP_Type_Code_USR = 'FP'/'FS'/'RT'/'EX'/'IC';

// AND DTL.DP Region USR is *ALL values
AND ( DTL.DP_Region_USR = 'NE'/'WE'/'SE';

// OR DTL.Export Country Code is Entered
OR DTL.Export_Country_Code <> *BLANK );

// DTL.DP Location = PAR.DP Location
DTL.DP_Location = PAR.DP_Location;

EXECUTE FUNCTION(Val DP Prod Loc Exists RT) TYPE(RTVOBJ) FILE(PBBPREP)          AC2095491;
PARAMETER(DTL.DP_Product);
PARAMETER(DTL.DP_Location);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 // PGM.*Return code = CND.*Record already exists
 PGM.*Return_code = 'Y2U0003';

}


CASE;

// IF PGM.*Return code is *Record already exists
IF PGM.*Return_code = 'Y2U0003';

// Send error message - 'DP Product Location already exists for &1'
ERROR(USR4750);
MSGPARM(DTL.DP_Location);

ENDIF;

ENDIF;

//?USER: User defined action

//?Create record if all validations passed:
// Call program RTV Sys Dt yyyymmddtm UP.
CALL PROGRAM(RTV Sys Dt yyyymmddtm UP) ('PBN2UPC');
PARAMETER(DTL.DP_Date_Time_Stamp);

EXECUTE FUNCTION(Crt DP Prod Location  CR) TYPE(CRTOBJ) FILE(PBBPREP)           AC2093169;
PARAMETER('Demand');
PARAMETER('Base');
PARAMETER(DTL.DP_Product);
PARAMETER(DTL.DP_Location);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(1);
PARAMETER(1);
PARAMETER(1);
PARAMETER(1);
PARAMETER(1);
PARAMETER(1);
PARAMETER(1);
PARAMETER(*BLANK);
PARAMETER(1);
PARAMETER(1);
PARAMETER(1);
PARAMETER(DTL.DP_Salesperson_Code);
PARAMETER(DTL.DP_Salesperson_Name);
PARAMETER('AS400');
PARAMETER(DTL.DP_Date_Time_Stamp);
{
 //?USER: Processing if Data record already exists

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

}


//?Create Location if it is new too
EXECUTE FUNCTION(Rtv/Crt Location      RT) TYPE(RTVOBJ) FILE(PBBOREP)           AC2097346;
PARAMETER(DTL.DP_Location);
PARAMETER(PAR.DP_Parent_Customer_Name);
PARAMETER(DTL.DP_Classification_ABC);
PARAMETER(DTL.DP_Date_Time_Stamp);
PARAMETER(DTL.Parent_Customer);
{
 //?USER: Processing if Data record not found

 CASE;

 // IF PAR.Parent Customer is Parent C Class
 IF PAR.Parent_Customer = 99999;

 // LCL.DP Parent Customer Name = PAR.DP Parent Customer Name
 LCL.DP_Parent_Customer_Name = PAR.DP_Parent_Customer_Name;

 // LCL.DP Classification ABC = CND.Class C
 LCL.DP_Classification_ABC = 'C';

 // IF *OTHERWISE
 IF *OTHERWISE;

 EXECUTE FUNCTION(RTV Name Only          RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1493704;
 PARAMETER(PAR.Parent_Customer);
 PARAMETER(LCL.DP_Parent_Customer_Name);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  QUIT;

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 EXECUTE FUNCTION(Rtv CCE Class ABC-DP  RT) TYPE(RTVOBJ) FILE(PDNIREP)           AC2097330;
 PARAMETER(PAR.Parent_Customer);
 PARAMETER(LCL.DP_Classification_ABC);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 ENDIF;

 EXECUTE FUNCTION(Crt DP Location       CR) TYPE(CRTOBJ) FILE(PBBOREP)           AC2097288;
 PARAMETER('Demand');
 PARAMETER('Base');
 PARAMETER(PAR.DP_Location);
 PARAMETER(LCL.DP_Parent_Customer_Name);
 PARAMETER(LCL.DP_Classification_ABC);
 PARAMETER('AS400');
 PARAMETER(PAR.DP_Date_Time_Stamp);
 {
  //?USER: Processing if Data record already exists

  // PGM.*Return code = CND.*Normal
  PGM.*Return_code = *BLANK;

 }

}


