// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PLMAPVR
// ?Date: 14.08.2025 Time: 02:54:39
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

// PAR.Oms Application Code = CND.Hog Procurement & Evaluat
PAR.Oms_Application_Code = 'HPE';

EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(PAR.CC_Company_Number);
PARAMETER(PAR.Oms_Application_Code);
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


//?USER: Load screen

// DTL.Company Number USR = PAR.CC Company Number
DTL.Company_Number_USR = PAR.CC_Company_Number;

//?USER: Validate fields

//?** F4 to prompt
CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

CASE;

// IF PGM.*Cursor field <IS> DTL.Producer Code         USR
IF PGM.*Cursor_field = DTL.Producer_Code_USR;

// Call program Sel Producer Loc      SR.
CALL PROGRAM(Sel Producer Loc      SR) ('PKKMSRR');
PARAMETER(DTL.Producer_Code_USR);
PARAMETER(DTL.Location_Code_USR);

ENDIF;

CASE;

// IF PGM.*Cursor field <IS> DTL.Location Code USR
IF PGM.*Cursor_field = DTL.Location_Code_USR;

// Call program Sel Producer Loc      SR.
CALL PROGRAM(Sel Producer Loc      SR) ('PKKMSRR');
PARAMETER(DTL.Producer_Code_USR);
PARAMETER(DTL.Location_Code_USR);

ENDIF;

ENDIF;

//?** Validate multi-company
CASE;

// IF PAR.Oms Allow Multi-Company is Yes
IF PAR.Oms_Allow_Multi_Company = 'Y';

EXECUTE FUNCTION(Val Company Number    IF) TYPE(EXCINTFUN)                      AB1129077;
PARAMETER(PAR.CC_Company_Number);
PARAMETER(PAR.Oms_Name);
PARAMETER(WRK.Invalid_Y_N_USR);
{
 //?Execute internal function

 // Call program Val Company Number    XF.
 CALL PROGRAM(Val Company Number    XF) ('PDGZXFR');
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(WRK.Invalid_Y_N_USR);

 CASE;

 // IF WRK.Invalid Y/N USR is Yes
 IF WRK.Invalid_Y_N_USR = 'Y';

 // Send error message - 'Invalid Company Number'
 ERROR(PRK0299);
 MSGPARM(PAR.CC_Company_Number);

 ENDIF;

 // PAR.Invalid Y/N USR = WRK.Invalid Y/N USR
 PAR.Invalid_Y_N_USR = WRK.Invalid_Y_N_USR;

}


ENDIF;

//?** Validate screen fields
CASE;

// IF DTL.Date From             USR EQ WRK.BOH Unused Nbr 1
IF DTL.Date_From_USR = WRK.BOH_Hedge_Head_Total;

// WRK.BOH Unused Nbr 1 = CON.*ZERO
WRK.BOH_Hedge_Head_Total = *ZERO;

// Send error message - 'Date is Required'
ERROR(PRK0641);
MSGPARM(DTL.Date_From_USR);

//?** Validate screen fields
// IF DTL.Date To   USR is Not Entered
IF DTL.Date_To_USR = *ZERO;

// Send error message - 'Date is required.'
ERROR(PRK0772);
MSGPARM(DTL.Date_To_USR);

//?** Validate screen fields
// IF DTL.Date From             USR GT DTL.Date To   USR
IF DTL.Date_From_USR > DTL.Date_To_USR;

// Send error message - 'From date must be less than or equal to the to date.'
ERROR(PRK0472);

//?** Validate screen fields
// IF DTL.Company Number USR is *ZERO
IF DTL.Company_Number_USR = *ZERO;

// Send error message - 'Company is required.'
ERROR(PRK0489);

//?** Validate screen fields
// IF DTL.EMail Address is Not Entered
IF DTL.EMail_Address = *BLANK;

// Send error message - 'Email Address is required'
ERROR(PRK1196);
MSGPARM(DTL.EMail_Address);

ENDIF;

//?USER: Validate relations

//?** Validate Company
CASE;

// IF DTL.Company Number USR is *ZERO
IF DTL.Company_Number_USR = *ZERO;

// Send error message - 'Company is required.'
ERROR(PRK0489);

ENDIF;

//?** Validate Dates
CASE;

// IF DTL.Date From             USR GT DTL.Date To   USR
IF DTL.Date_From_USR > DTL.Date_To_USR;

// Send information message - '&1 must be less than or equal to &2'
MESSAGE(PRK1084 *INFO);
MSGPARM(DTL.Date_To_USR);
MSGPARM(DTL.Date_To_USR);

//?** Validate Dates
// IF DTL.Date From             USR is *Zeros
IF DTL.Date_From_USR = *ZERO;

// Send error message - 'Date is Required'
ERROR(PRK0641);
MSGPARM(DTL.Date_From_USR);

//?** Validate Dates
// IF DTL.Date To   USR is Not Entered
IF DTL.Date_To_USR = *ZERO;

// Send error message - 'Date is Required'
ERROR(PRK0641);
MSGPARM(DTL.Date_To_USR);

ENDIF;

//?USER: User defined action

// LCL.@Company Values = DTL.Company Number USR
LCL.@Company_Values = DTL.Company_Number_USR;

// LCL.Date Alpha USR = CVTVAR(DTL.Date From             USR)
LCL.Date_Alpha_USR = CVTVAR(DTL.Date_From_USR);

// LCL.Date Alpha Usr 2 = CVTVAR(DTL.Date To   USR)
LCL.Date_Alpha_Usr_2 = CVTVAR(DTL.Date_To_USR);

//?** Select which report to create
CASE;

// IF DTL.Producer Code         USR is Entered
IF DTL.Producer_Code_USR <> *BLANK;

// AND DTL.Location Code USR is Entered
AND DTL.Location_Code_USR <> *BLANK;

// LCL.Sel Option Usr = CND.*Select#1
LCL.Sel_Option_Usr = 1;

//?** Select which report to create
// IF DTL.Producer Code         USR is Entered
IF DTL.Producer_Code_USR <> *BLANK;

// AND DTL.Location Code USR is Not Entered
AND DTL.Location_Code_USR = *BLANK;

// LCL.Sel Option Usr = CND.*Revise
LCL.Sel_Option_Usr = 2;

//?** Select which report to create
// IF DTL.Producer Code         USR is Not Entered
IF DTL.Producer_Code_USR = *BLANK;

// AND DTL.Location Code USR is Entered
AND DTL.Location_Code_USR <> *BLANK;

// LCL.Sel Option Usr = CND.*Option 3 (Reusable)
LCL.Sel_Option_Usr = 3;

//?** Select which report to create
// IF DTL.Producer Code         USR is Not Entered
IF DTL.Producer_Code_USR = *BLANK;

// AND DTL.Location Code USR is Not Entered
AND DTL.Location_Code_USR = *BLANK;

// LCL.Sel Option Usr = CND.*Delete#1
LCL.Sel_Option_Usr = 4;

ENDIF;

// Call program SBD Buy Ord/Ld Downld  CL.
SBMJOB;
CALL PROGRAM(SBD Buy Ord/Ld Downld  CL) ('PLMKUPC');
PARAMETER(LCL.@Company_Values);
PARAMETER(LCL.Date_Alpha_USR);
PARAMETER(LCL.Date_Alpha_Usr_2);
PARAMETER('PLMLUPC');
PARAMETER(LCL.Sel_Option_Usr);
PARAMETER(DTL.Producer_Code_USR);
PARAMETER(DTL.Location_Code_USR);
PARAMETER(DTL.EMail_Address);
SBMJOBOVR JOB(BUYORDDWNL);
SBMJOBOVR LOG(4;
SBMJOBOVR 00;
SBMJOBOVR *SECLVL);
SBMJOBEND;

// Send information message - 'Report has been emailed'
MESSAGE(PRK1200 *INFO);

