// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for OMD0BKP
// ?Date: 14.08.2025 Time: 12:03:10
// ?------------------------------------------------------------------------------------------------

//?USER: Print required level headings

// SUPPRESSED PRINT Accounting Company Number header format

//?USER: On print of detail format

CASE;

// IF PAR.Manifest Type STS is Summary
IF PAR.Manifest_Type_STS = 'CS'/'SS';

// CUR.Text USR 7 = CON.SUMMARY
CUR.Text_USR_7 = 'SUMMARY';

// IF PAR.Manifest Type STS is Detail
IF PAR.Manifest_Type_STS = 'CD'/'SD';

// CUR.Text USR 7 = CON.DETAIL
CUR.Text_USR_7 = 'DETAIL';

ENDIF;

EXECUTE FUNCTION(RTV for B.O.L.         RT) TYPE(RTVOBJ) FILE(OMFJCPP)          AC1376991;
PARAMETER(CUR.Load_ID);
PARAMETER(WRK.Reefer_Temperature);
PARAMETER(CUR.Seal_1);
PARAMETER(CUR.Seal_2);
PARAMETER(CUR.Seal_3);
PARAMETER(WRK.Total_Stops);
PARAMETER(WRK.Trailer_Id);
PARAMETER(WRK.BOL_Time);
PARAMETER(WRK.Number_Pallets_Received);
PARAMETER(WRK.Number_Pallets_Loaded);
PARAMETER(WRK.Load_Carrier_Pay_Amt);
PARAMETER(WRK.Product_Temperature);
PARAMETER(WRK.Number_Spacers_Loaded);
PARAMETER(WRK.Car_Veh_Initials);
PARAMETER(WRK.Recorder_ID);
PARAMETER(WRK.Shipping_Method);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Co Address & Phone RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1203423;
PARAMETER(CUR.Company_Number);
PARAMETER(WRK.Name);
PARAMETER(WRK.Address_Line_1);
PARAMETER(WRK.Address_Line_2);
PARAMETER(WRK.Address_Line_3);
PARAMETER(WRK.City);
PARAMETER(WRK.Zip_Postal_Code);
PARAMETER(CUR.USR_Telephone_Code);
PARAMETER(WRK.State_Code);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// WRK.State = WRK.State Code
WRK.State = WRK.State_Code;

// Execute function CLC Compress Name/Addr US.
EXECUTE FUNCTION(CLC Compress Name/Addr US) TYPE(EXCUSRSRC) ('PDRWUFR');
PARAMETER(WRK.Name);
PARAMETER(WRK.Address_Line_1);
PARAMETER(WRK.Address_Line_2);
PARAMETER(WRK.Address_Line_3);
PARAMETER(WRK.City);
PARAMETER(WRK.State);
PARAMETER(WRK.Zip_Postal_Code);
PARAMETER(CUR.USR_Compressed_Address_1);
PARAMETER(CUR.USR_Compressed_Address_2);
PARAMETER(CUR.USR_Compressed_Address_3);
PARAMETER(CUR.USR_Compressed_Address_4);
PARAMETER(WRK.USR_Compressed_Address_5);
{
 * Use this function to compress name/address information
 *
 E                    UAD         5 34               Name/Address
 *
 C                     MOVEL#IADTX    UADTX            Name
 C                     MOVEL#IACNA    UACNA            Address 1
 C                     MOVEL#IADNA    UADNA            Address 2
 C                     MOVEL#IAENA    UAENA            Address 3
 C                     MOVEL#IAJNA    UAJNA            City
 C                     MOVEL#IEINA    UEINA            State
 C                     MOVEL#IBTTX    UBTTX            Zip
 C                     EXSR UJ1UF
 C                     MOVELUAD,1     #OEJNA
 C                     MOVELUAD,2     #OEKNA
 C                     MOVELUAD,3     #OELNA
 C                     MOVELUAD,4     #OEMNA
 C                     MOVELUAD,5     #OENNA
 C           UJ1UF     BEGSR
 *=============================================================
 * UJ1UF - COMPRESS NAME/ADDRESS INFORMATION
 *=============================================================
 *
 C           *LIKE     DEFN #IADTX    UADTX
 C           *LIKE     DEFN #IACNA    UACNA
 C           *LIKE     DEFN #IADNA    UADNA
 C           *LIKE     DEFN #IAENA    UAENA
 C           *LIKE     DEFN #IAJNA    UAJNA
 C           *LIKE     DEFN #IEINA    UEINA
 C           *LIKE     DEFN #IBTTX    UBTTX - 1
 * CLEAR OUTPUT ARRAY
 C                     MOVE *BLANK    UAD
 C                     Z-ADD1         UX      20
 C                     MOVELUADTX     UAD,UX
 C                     ADD  1         UX
 C           UACNA     IFNE *BLANK
 C                     MOVELUACNA     UAD,UX
 C                     ADD  1         UX
 C                     END
 C           UADNA     IFNE *BLANK
 C                     MOVELUADNA     UAD,UX
 C                     ADD  1         UX
 C                     END
 C           UAENA     IFNE *BLANK
 C                     MOVELUAENA     UAD,UX
 C                     ADD  1         UX
 C                     END
 C                     MOVE *BLANK    UCSTZ  34
 C                     MOVELUAJNA     UCST   23
 C                     MOVE UEINA     UCST
 C                     MOVELUCST      UCSTZ
 C                     MOVE UBTTX     UCSTZ
 C                     MOVELUCSTZ     UAD,UX
 *============================================================
 C                     ENDSR
}


// CUR.USR Date - ATR = JOB.*Job date
CUR.USR_Date_ATR = JOB.*Job_date;

// CUR.USR Time = JOB.*Job time
CUR.USR_Time = JOB.*Job_time;

EXECUTE FUNCTION(Sales Route Desc      DRV) TYPE(DRVFLD)                        AC1575490;
PARAMETER(CUR.Sales_Route_Desc_DRV);
PARAMETER(CUR.Sales_Route_Code);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Description        RT) TYPE(RTVOBJ) FILE(PDJEREP)          AC1270614;
 PARAMETER(PAR.Sales_Route_Code);
 PARAMETER(PAR.Sales_Route_Desc_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


EXECUTE FUNCTION(RTV All fields         RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1478652;
PARAMETER(CUR.Ship_To_Customer);
PARAMETER(NLL.Customer_Name);
PARAMETER(NLL.Address_Line_1);
PARAMETER(NLL.Address_Line_2);
PARAMETER(NLL.Address_Line_3);
PARAMETER(NLL.City);
PARAMETER(NLL.State_Code);
PARAMETER(NLL.County_Code);
PARAMETER(NLL.Zip_Postal_Code);
PARAMETER(CUR.Telephone_Number_FF);
PARAMETER(CUR.Fax_Number_FF);
PARAMETER(NLL.Alpha_Search);
PARAMETER(NLL.Federal_Tax_Id);
PARAMETER(NLL.New_Customer_Status);
PARAMETER(NLL.SIC_Number);
PARAMETER(NLL.D_B_Number);
PARAMETER(NLL.D_B_Rating);
PARAMETER(NLL.Date_of_D_B_Rating);
PARAMETER(NLL.Credit_Line_Expire_Date);
PARAMETER(NLL.AR_Customer_Number);
PARAMETER(NLL.Parent_Customer);
PARAMETER(NLL.Credit_Check_AR_Customer);
PARAMETER(NLL.Credit_Check_Parent_Cust);
PARAMETER(NLL.Country_Code);
PARAMETER(NLL.EDI_Invoice_Sts);
PARAMETER(NLL.Order_Entry_Hold);
PARAMETER(NLL.Parent_Credit_Limit);
PARAMETER(NLL.AR_Credit_Limit);
PARAMETER(NLL.Order_Entry_Hold_Date);
PARAMETER(NLL.Ship_To_Customer_Flag);
PARAMETER(NLL.Field_vs_In_House_flag);
PARAMETER(NLL.Email_When_Order_Shipped);
PARAMETER(NLL.Print_Invoice_Sts);
PARAMETER(NLL.Item_Reference_Status);
PARAMETER(NLL.Statement_Print_Frequency);
PARAMETER(NLL.EDI_Status_1);
PARAMETER(NLL.EDI_Status_2);
PARAMETER(NLL.EDI_Status_3);
PARAMETER(NLL.Record_Status);
PARAMETER(NLL.Job_Time);
PARAMETER(NLL.User_Id);
PARAMETER(NLL.Job_Name);
PARAMETER(NLL.Job_Date);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?PRTOBJ calls after print of detail format

//?Embedded PRTOBJ : Prt Manifest Detail   PO
CASE;

// IF PAR.Manifest Type STS is Customer Detail
IF PAR.Manifest_Type_STS = 'CD';

QUIT;

ENDIF;

EXECUTE FUNCTION(Prt ManifestDtl SALES PO) TYPE(PRTOBJ);
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Order_Number);
PARAMETER(PAR.Manifest_Type_STS);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?USER: Print required level totals

// SUPPRESSED PRINT Accounting Company Number totals format

