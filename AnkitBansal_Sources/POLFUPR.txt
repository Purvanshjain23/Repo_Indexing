      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Order Management System
      * PROGRAM:     POLFUPR
      * TITLE:       Potential Late Deliveries
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     06/20/01
      *
      *  FUNCTION:   Read load id records selected by open query. Check
      *              system time against deadline departure time. Send an
      *              e-mail to the salesman alerting him to a potential
      *              late delivery.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      * 08/14/01  LeAnne Fedor
      *           Changed the logic for sending messages to non-salesmen.
      *
      * 05/07/04  Susan Mason
      *           Remove fjaic3 from the key list.
      * 07/17/14  Rose Centonze
      *           pass in company to get correct mplus dist list
      * 11/21/16  Danny Nguyen    E7891
      *           Send all Customer PO# & Ship To Name data to the email body message content
      *           for a given Load ID. Added xxmessage parameter to call of POLEUPR.
      *           Only managers will see all Customer PO's & Ship To Name for a given Load.
      *           Salesperson will only see Customer PO's & Ship To Name for their own Orders.
      *           Commented out call POMSUPC & will use ESNDMAIL instead since SNDPGRMSG
      *           command does not support email body message content.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fomfjcpl0  if   e           k disk
      *    Load header (records selected by open query)
      *
      *
     Fopbfcplh  if   e           k disk
      *    Order header
      *
      *
     Fpdjerel2  if   e           k disk
      *    Sales route
      *
      *
     Fpdkmrel1  if   e           k disk
      *    Company values
      *
      *
     Fpdnfrel1  if   e           k disk
      *    Salesperson electronic
      *
      *
     Fomfjcpl1  uf   e           k disk
      *    Load header
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
E7891 ****************************************************************
  |   * DATA STRUCTURE ARRAY
  |   ****************************************************************
  |   ** Array for Manager - Save Customer PO# & Ship To Name
  |  d arraymgr        DS                  qualified dim(25)
  |  d  wkpo#                  1     15                                         Customer PO#
  |  d  wkconst1              16     18    inz(' | ')
  |  d  wkstn                 19     48                                         Ship To Name
  |  d  wkconst2              49     51    inz(' &N')                           Force msg to new lin
  |   *
  |   ** Array for Salesman - Save Customer PO# & Ship To Name
  |  d arraysls        DS                  qualified dim(25)
  |  d  wkpo#                  1     15                                         Customer PO#
  |  d  wkconst1              16     18    inz(' | ')
  |  d  wkstn                 19     48                                         Ship To Name
  |  d  wkconst2              49     51    inz(' &N')                           Force msg to new lin
E7891 *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
E7891 ** Column heading text & values for ESNDMAIL in body message content.
  |  D emailmsgconst   c                   'Customer PO#:   | Ship To +
  |  D                                      Customer: &N'
  |  D pipe            c                   ' | '
E7891D newl            c                   ' &N'                                Force msg to new lin
      *
      * Control fields
      *
     D svr4cd          s                   like(ber4cd)
      *
      *
      * Work fields
      *
     d wktime          s              6  0
     D wkv8cd          s                   like(kmv8cd)
     D wkaic3          s                   like(kmaic3)
     D wkrmnbalph      s              7
E7891D cntmgr          s              2  0
  |  D cntsls          s              2  0
  |  D wkmsg           s             51    inz(*blank)
E7891D wk1sttime       s              1
      *
      *
      * Parms
      *
     d xxlist          s             10
     d xxaddress       s            150
     d xxsubject       s             45
     d xxendtime       s              6  0
     d xxcomp          s              3  0
E7891 ** Commented out.
  |  d**xxlistmsg       s            132
E7891D xxmessage       s           1500    inz(*blank)
      *
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      *
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    Externally defined as UTPGFR (RECORD FORMAT: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
      * Process the Load Id records selected by the open query.
      * If deadline departure time less system time is one hour or less,
      * process the orders on this load.
      *
      *
     C                   dou       *in90 = *on                                  Do load loop
     C                   time                    wktime
     C                   read      omfjcpl0                               90
     C                   if        *in90 = *off and                             If not EOF
     C                             ((fjaxtm - wktime) <= 010000)
      *
      *
      * Prepare the subject line for any/all e-mails for this Load ID by
      * concatenating the load ID with hardcoded text.
      *
     C                   move(p)   fjrmnb        wkrmnbalph
     C                   eval      xxsubject = 'Load ' + %trim(wkrmnbalph) +
     C                                        ' is in danger of shipping LATE.'
      *
      * If you were able to retrieve a distribution list in the initialization
      * subroutine, then call Purva's SYNON program to e-mail the shipping
      * manager and all non-salesmen who want the late delivery message.
      *
E7891 ** Commented out call of POMSUPC. SNDPGRMSG does not support sending data to the
  |   ** email body content. Will use ESNDMAIL instead.
  |  C**                 if        xxlist <> *blank
  |  C**                 movel(p)  xxsubject     xxlistmsg
  |  C**                 call      'POMSUPC'
  |  C**                 parm                    xxlist
  |  C**                 parm                    xxlistmsg
E7891C**                 endif
      *
      * Process orders on this load so you can e-mail salesmen.
      *
     C                   exsr      $orders
      *
      * Flag this Load Id record as 'e-mailed' so that you do not process
      * it at a future time.
      *
     C                   exsr      $update
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do lood loop
      *
      *---------------------------------------------------------------
      * EOF processing
      *---------------------------------------------------------------
      *
      * We must send back the 'end job' time to the Driver CL. We had originally
      * hardcoded 7:00pm in the driver CL.  But, Judy Schaub wanted easy control
      * of the end time. So, it has been put into a record in the Company Values
      * file. Retrieve this record and pass the end time back to the Driver CL.
      *
     C                   move      'LATEDEL   '  wkv8cd
     C                   move      xxcomp        wkaic3
     C     key02         chain     pdkmrel1                           92
     C                   if        *in92 = *off
     C                   z-add     kmm8nb        xxendtime
     C                   endif
     C                   seton                                        lr
      /EJECT
      *---------------------------------------------------------------
      * Process all the order header records for this load
      *---------------------------------------------------------------
      *
      * Only issue one E-mail to a Salesman per Load. (ie: If he has 2 orders on the
      * load, just issue one message.)
      *
E7891 ** Build array to save Customer PO's and Ship To Name & send this data to the body
  |   ** message of the email via ESNDMAIL. Managers will see all Orders per Load ID.
  |   ** Salesman will only see their own Orders.
E7891 *
     C     $orders       begsr
      *
E7891C                   clear                   arraymgr
  |  C                   clear                   arraysls
  |  C                   eval      cntmgr = 1
  |  C                   eval      cntsls = 1
E7891C                   eval      wk1sttime = 'Y'
     C                   move      *blank        svr4cd
      *
     C     key01         setll     opbfcplh
      *
     C                   dou       *in91 = *on                                  Do orders
     C     key01         reade     opbfcplh                               91
     C                   if        *in91 = *off                                 If not EOF
E7891 *
  |   ** Save Sales Route Code if first time through.
  |  C                   if        wk1sttime = 'Y'
  |  C                   eval      wk1sttime = 'N'
  |  C                   eval      svr4cd = BER4CD
  |  C                   endif
  |   *
  |   ** Build Managers Array.
  |  C                   eval      arraymgr(cntmgr).wkpo# = %subst(BEBCNA:1:15)
  |  C                   eval      arraymgr(cntmgr).wkconst1 = %subst(pipe:1:3)
  |  C                   eval      arraymgr(cntmgr).wkstn = %subst(BEBRTX:1:30)
  |  C                   eval      arraymgr(cntmgr).wkconst2 = %subst(newl:1:3)
  |  C                   eval      cntmgr = cntmgr + 1
E7891 *
      *
E7891 ** Send email to Salesman each time Sales Route changes.
     C                   if        ber4cd <> svr4cd
E7891 *
  |   ** Process previous record saved.
  |  C                   exsr      $bldslsemail
E7891 *
     C                   exsr      $salesman
     C                   move      ber4cd        svr4cd
E7891 *
  |   ** Clear & rebuild Salesman array for current record read.
  |  C                   clear                   arraysls
  |  C                   eval      cntsls = 1
  |  C                   eval      arraysls(cntsls).wkpo# = %subst(BEBCNA:1:15)
  |  C                   eval      arraysls(cntsls).wkconst1 = %subst(pipe:1:3)
  |  C                   eval      arraysls(cntsls).wkstn = %subst(BEBRTX:1:30)
  |  C                   eval      arraysls(cntsls).wkconst2 = %subst(newl:1:3)
  |  C                   eval      cntsls = cntsls + 1
  |   *
  |  C                   else
  |   *
  |   ** Build Salesman Array for the same Sales Route.
  |  C                   eval      arraysls(cntsls).wkpo# = %subst(BEBCNA:1:15)
  |  C                   eval      arraysls(cntsls).wkconst1 = %subst(pipe:1:3)
  |  C                   eval      arraysls(cntsls).wkstn = %subst(BEBRTX:1:30)
  |  C                   eval      arraysls(cntsls).wkconst2 = %subst(newl:1:3)
  |  C                   eval      cntsls = cntsls + 1
E7891 *
     C                   endif
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do orders
      *
E7891 ** LAST RECORD PROCESSING:
  |   *
  |   * Send Email to Managers:
  |   * If you were able to retrieve a distribution list in the initialization
  |   * subroutine, then send e-mail to the shipping managers and all non-salesman
  |   * who want the late delivery message.
  |  C                   if        xxlist <> *blank
  |   *
  |   ** Use distribution list for email address.
  |  C                   eval      xxaddress = xxlist
  |   *
  |   ** Build email message from Managers Array.
  |  C                   eval      xxmessage = *blank
  |  C                   eval      xxmessage = %trimr(xxmessage) + emailmsgconst
  |  C                   eval      cntmgr = 1
  |  C                   dou       arraymgr(cntmgr).wkpo# = *blank
  |  C                   eval      %subst(wkmsg:1:51) = arraymgr(cntmgr)
  |  C                   eval      xxmessage = %trimr(xxmessage) + ' ' + wkmsg
  |  C                   eval      cntmgr = cntmgr + 1
  |  C                   enddo
  |   ** Send email.
  |  C                   exsr      $email
  |   *
  |  C                   endif
  |   *
  |   * Build & Send Email to Salesman:
  |  C                   exsr      $bldslsemail
  |  C                   exsr      $salesman
E7891 *
     C                   endsr
      /EJECT
E7891 *---------------------------------------------------------------
  |   * Build Salesman Email Message from Salesman Array.
  |   *---------------------------------------------------------------
  |   *
  |  C     $bldslsemail  begsr
  |   *
  |  C                   eval      xxmessage = *blank
  |  C                   eval      xxmessage = %trimr(xxmessage) + emailmsgconst
  |  C                   eval      cntsls = 1
  |  C                   dou       arraysls(cntsls).wkpo# = *blank
  |  C                   eval      %subst(wkmsg:1:51) = arraysls(cntsls)
  |  C                   eval      xxmessage = %trimr(xxmessage) + ' ' + wkmsg
  |  C                   eval      cntsls = cntsls + 1
  |  C                   enddo
  |   *
E7891C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Retrieve salesman info
      *---------------------------------------------------------------
      *
     C     $salesman     begsr
      *
      * Using Sales Route from the Order Header file, retrieve the associated
      * Sales Person code.
      *
E7891 ** Use previous saved Sales Route to process.
  |  C**   ber4cd        chain     pdjerel2                           92
E7891C     svr4cd        chain     pdjerel2                           92
     C                   if        *in92 = *off                                 If person hit
      *
      * Using the Sales Person code, retrieve the E-mail address for salesman.
      * Then, if the e-mail address is not blank, send a message.
      *
     C     jebccd        chain     pdnfrel1                           92
     C                   if        *in92 = *off and nfugtx <> *blank            If address hit
     C                   eval      xxaddress = nfugtx
     C                   exsr      $email
     C                   endif                                                  If address hit
      *
     C                   endif                                                  If person hit
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Call the CL that will send the E-mail
      *---------------------------------------------------------------
      *
     C     $email        begsr
      *
     C                   call      'POLEUPR   '
     C                   parm                    xxaddress
     C                   parm                    xxsubject
E7891C                   parm                    xxmessage
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Update Load Id record
      *---------------------------------------------------------------
      *
     C     $update       begsr
      *
     C     key01         chain     omfjcpl1                           92
     C                   if        *in92 = *off
     C                   move      yes           fjrrst
     C                   update    @fjcpbo
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm lists
      *
     C     *entry        plist
     C                   parm                    xxendtime
     C                   parm                    xxcomp
      *
      *
      * Key lists
      *
     C     key01         klist
SLM**C****               kfld                    fjaic3
     C                   kfld                    fjrmnb
      *
     C     key02         klist
     C                   kfld                    wkaic3
     C                   kfld                    wkv8cd
      *
      *
      * We must E-Mail the shipping manager and his buddies when a load will be
      * late. We will use a distribution list to do this. To get the name of the
      * distribution list we go to the Company Values file with a hard-coded value.
      * (The name of the list is in the first 10 positions of the field named
      * "system alpha value".)
      *
      * So, hardcode the value need to retrieve the Company Values record; get the
      * record and move the name of the list to a parm field.
      *
      * RMC C2685 pass in company and use rather than hardcoding
     C                   move      'LATEDLVMSG'  wkv8cd
     C                   move      xxcomp        wkaic3
     C     key02         chain     pdkmrel1                           92
     C                   if        *in92 = *off
     C                   movel     kmbxtx        xxlist
     C                   endif
      *
      *
     C                   endsr
      /EJECT
