     H/TITLE Exc TRG POB5CPP ProcessXF Execute external functio
     H DATFMT(*YMD) DATEDIT(*YMD) DEBUG(*YES)
     Z* CRTBNDRPG
     Z* DFTACTGRP(*NO) BNDDIR(YBNDDIR) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
      *
     H* SYNOPSIS :
     H*  Perform user function
     H*  As defined by action diagram
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Execute external function
     H* Object type   : *PGM
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISDNGUY
     H* Date          : 03/10/20  Time  : 15:22:46
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPUBVCPL0  IF A E           K DISK
      * UPD : Order Detail Sched-InvTRG Update index
      *
      * Long constants
     D @CN#            S              6    DIM(01)CTDATA PERRCD(1)
     D @CN             S             25    DIM(01) ALT(@CN#)
      /EJECT
      * Data structures:
     D PGMDS         ESDS                  EXTNAME(Y2PGDSP)
      * Modified Program data structure
     D JBDTTM          DS
      * Job date/time
     D  ##JDT                  1      7  0
     D  ##JCC                  1      1  0
     D  ##JYY                  2      3  0
     D  ##JMM                  4      5  0
     D  ##JDD                  6      7  0
     D  ##JTM                  8     13  0
     D  ##JHH                  8      9  0
     D  ##JNN                 10     11  0
     D  ##JSS                 12     13  0
     D QPUBV1        E DS                  EXTNAME(PUBVCPL0)
      * UPD : Order Detail Sched-InvTRG Update index
      * Renamed input format fields
     D  WAAIC3       E                     EXTFLD(BVAIC3)
     D  WAC4NB       E                     EXTFLD(BVC4NB)
     D  WADPNB       E                     EXTFLD(BVDPNB)
     D  WAUENB       E                     EXTFLD(BVUENB)
     D  WAJGDT       E                     EXTFLD(BVJGDT)
     D  WAA4TS       E                     EXTFLD(BVA4TS)
     D  WAKPSC       E                     EXTFLD(BVKPSC)
     D  WAKQSC       E                     EXTFLD(BVKQSC)
     D  WABLDX       E                     EXTFLD(BVBLDX)
      *
      *
      * Declared stand-alone variables
     D  P0RTN          S              7
     D  WP0001         S              1
     D  W0ICL          S              1
     D  W0RTN          S              7
     D  W0RSL          S              1
     D  W0RSF          S              1
     D  W0RTW          S              9  0
     D  W0ENV          S              3
     D  ##TME          S              6  0
     D  XDTSDL         S             26
     D  WL0001         S              3  0
     D  WL0002         S              7  0
     D  WL0003         S              3  0
     D  WL0004         S              3  0
     D  WL0005         S              7  0
     D  WL0006         S              1
     D  WL0007         S              2
     D  WL0008         S              8  0
     D  WN0001         S             26
     D  ##TMS          S             26
     D  ZADFMF         S             10
     D  ZAPGMQ         S             10
     D  ZAPGRL         S              5
     D  ZAMSID         S              7
     D  ZAMSGF         S             10
     D  ZAMSTP         S              7
     D  YILE           S              1
     D  W0PMT          S              1
      /EJECT
      * Parameter declarations
     D P1PARM          DS            69
      * RCD: Order Detail Sched-Inv    Retrieval index
      * I :  Company Number
     D  P1AIC3                 1      2P 0
      * I :  Order Number
     D  P1C4NB                 3      6P 0
      * I :  Order Sequence Number
     D  P1DPNB                 7      8P 0
      * I :  Order Secondary Line Seq
     D  P1UENB                 9     10P 0
      * I :  OD Production Date
     D  P1JGDT                11     14P 0
      * I :  Scheduled Ship Date
     D  P1AODT                15     18P 0
      * I :  Warehouse Code
     D  P1AJCD                19     21
      * I :  Item Code
     D  P1HGCD                22     25P 0
      * I :  OD Quantity Inv Sched
     D  P1IUQT                26     31P 2
      * I :  OD Weight Inv Sched
     D  P1F3WG                32     37P 2
      * I :  EDI Status 1
     D  P1UVST                38     38
      * I :  EDI Status 2
     D  P1UWST                39     39
      * I :  EDI Status 3
     D  P1UXST                40     40
      * I :  Record Status
     D  P1VSST                41     41
      * I :  Job Time
     D  P1AATM                42     45P 0
      * I :  User Id
     D  P1AYNA                46     55
      * I :  Job Name
     D  P1A0NA                56     65
      * I :  Job Date
     D  P1AXDT                66     69P 0
     D P2PARM          DS            69
      * RCD: Order Detail Sched-Inv    Retrieval index
      * I :  Company Number
     D  P2AIC3                 1      2P 0
      * I :  Order Number
     D  P2C4NB                 3      6P 0
      * I :  Order Sequence Number
     D  P2DPNB                 7      8P 0
      * I :  Order Secondary Line Seq
     D  P2UENB                 9     10P 0
      * I :  OD Production Date
     D  P2JGDT                11     14P 0
      * I :  Scheduled Ship Date
     D  P2AODT                15     18P 0
      * I :  Warehouse Code
     D  P2AJCD                19     21
      * I :  Item Code
     D  P2HGCD                22     25P 0
      * I :  OD Quantity Inv Sched
     D  P2IUQT                26     31P 2
      * I :  OD Weight Inv Sched
     D  P2F3WG                32     37P 2
      * I :  EDI Status 1
     D  P2UVST                38     38
      * I :  EDI Status 2
     D  P2UWST                39     39
      * I :  EDI Status 3
     D  P2UXST                40     40
      * I :  Record Status
     D  P2VSST                41     41
      * I :  Job Time
     D  P2AATM                42     45P 0
      * I :  User Id
     D  P2AYNA                46     55
      * I :  Job Name
     D  P2A0NA                56     65
      * I :  Job Date
     D  P2AXDT                66     69P 0
     D P3PARM          DS
      * I :  TRG Database Event
     D  P3D8SC                 1      1
     D                 DS
     D  ZAMSDA                 1    132
     I@BVCPGV
      * Order Detail Sched-InvTRG Update index
      * Renamed input format fields
     I              BVAIC3                      WAAIC3
     I              BVC4NB                      WAC4NB
     I              BVDPNB                      WADPNB
     I              BVUENB                      WAUENB
     I              BVJGDT                      WAJGDT
     I              BVA4TS                      WAA4TS
     I              BVKPSC                      WAKPSC
     I              BVKQSC                      WAKQSC
     I              BVBLDX                      WABLDX
      *
      /EJECT
      *****************************************************************
      * Entry parameters
     C     *ENTRY        PLIST
     C                   PARM                    P0RTN
     C                   PARM                    P1PARM                         RCD: Order Deta
     C                   PARM                    P2PARM                         RCD: Order Deta
     C     P3D8SC        PARM                    WP0001                         TRG Database Ev
      *****************************************************************
      * Initialize
     C                   EXSR      ZZINIT
      *
      * Exc TRG POB5CPP ProcessXF
      * *****************************************************************
      * ** PR1 Parms Represent Old Record Fields (Will be blank for Inser
      * ** PR2 Parms Represent New Record Fields (Will be blank for Delet
      * *****************************************************************
      * Trigger Processing for Insert Event.
      * CASE: PR3.TRG Database Event is Insert
      * Crt Ord Dtl Schd-InvTRGCR - Order Detail Sched-InvTRG  * 
      * Move input parameters to subroutine local variables.
     C                   IF        P3D8SC = '1'
     C                   Z-ADD     P2AIC3        WL0001                         Company Number
     C                   Z-ADD     P2C4NB        WL0002                         Order Number
     C                   Z-ADD     P2DPNB        WL0003                         Order Sequence
     C                   Z-ADD     P2UENB        WL0004                         Order Secondary
     C                   Z-ADD     P2JGDT        WL0005                         OD Production D
     C                   MOVEL(P)  P3D8SC        WL0006                         ODSI TRG Databa
     C                   MOVEL(P)  '0'           WL0007                         ODSI Process St
     C                   Z-ADD     0             WL0008                         ODSI Process Da
     C                   EXSR      SACRRC
     C                   END                                                    *FI
      * Trigger Processing for Update Event.
      * CASE: PR3.TRG Database Event is Update
      * Update If Any Non-Key Fields Have Changed.
      * CASE:
      *  - c1ORc2ORc3ORc4ORc5ORc6ORc7ORc8ORc9
      *   |- c1    : PR1.Scheduled Ship Date NE PR2.Scheduled Ship Date
      *   |- c2    : PR1.Warehouse Code NE PR2.Warehouse Code
      *   |- c3    : PR1.Item Code NE PR2.Item Code
      *   |- c4    : PR1.OD Quantity Inv Sched NE PR2.OD Quantity Inv Sch
      *   |- c5    : PR1.OD Weight Inv Sched NE PR2.OD Weight Inv Sched
      *   |- c6    : PR1.EDI Status 1 NE PR2.EDI Status 1
      *   |- c7    : PR1.EDI Status 2 NE PR2.EDI Status 2
      *   |- c8    : PR1.EDI Status 3 NE PR2.EDI Status 3
      *   |- c9    : PR1.Record Status NE PR2.Record Status
      *   '-
     C                   IF        P3D8SC = '3'
      * Crt Ord Dtl Schd-InvTRGCR - Order Detail Sched-InvTRG  * 
      * Move input parameters to subroutine local variables.
     C                   IF        P1AODT <> P2AODT OR
     C                             P1AJCD <> P2AJCD OR
     C                             P1HGCD <> P2HGCD OR
     C                             P1IUQT <> P2IUQT OR
     C                             P1F3WG <> P2F3WG OR
     C                             P1UVST <> P2UVST OR
     C                             P1UWST <> P2UWST OR
     C                             P1UXST <> P2UXST OR
     C                             P1VSST <> P2VSST
     C                   Z-ADD     P2AIC3        WL0001                         Company Number
     C                   Z-ADD     P2C4NB        WL0002                         Order Number
     C                   Z-ADD     P2DPNB        WL0003                         Order Sequence
     C                   Z-ADD     P2UENB        WL0004                         Order Secondary
     C                   Z-ADD     P2JGDT        WL0005                         OD Production D
     C                   MOVEL(P)  P3D8SC        WL0006                         ODSI TRG Databa
     C                   MOVEL(P)  '0'           WL0007                         ODSI Process St
     C                   Z-ADD     0             WL0008                         ODSI Process Da
     C                   EXSR      SACRRC
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Trigger Processing for Delete Event.
      * CASE: PR3.TRG Database Event is Delete
      * Crt Ord Dtl Schd-InvTRGCR - Order Detail Sched-InvTRG  * 
      * Move input parameters to subroutine local variables.
     C                   IF        P3D8SC = '2'
     C                   Z-ADD     P1AIC3        WL0001                         Company Number
     C                   Z-ADD     P1C4NB        WL0002                         Order Number
     C                   Z-ADD     P1DPNB        WL0003                         Order Sequence
     C                   Z-ADD     P1UENB        WL0004                         Order Secondary
     C                   Z-ADD     P1JGDT        WL0005                         OD Production D
     C                   MOVEL(P)  P3D8SC        WL0006                         ODSI TRG Databa
     C                   MOVEL(P)  '0'           WL0007                         ODSI Process St
     C                   Z-ADD     0             WL0008                         ODSI Process Da
     C                   EXSR      SACRRC
     C                   END                                                    *FI
      *----------------------------------------------------------------
      * Exit program
     C     AAEXIT        TAG
     C                   EVAL      P0RTN = ' '
     C                   EXSR      ZYEXPG
      *================================================================
      /EJECT
     CSR   SACRRC        BEGSR
      *================================================================
      * Crt Ord Dtl Schd-InvTRGCR - Order Detail Sched-InvTRG  * 
      *================================================================
      *
     C                   MOVEL     XDTSDL        WN0001                         ODSI Timestamp
      *
     C                   EVAL      W0RTN = ' '
      * Move all fields to @BVCPGV
     C                   Z-ADD     WL0001        WAAIC3                         Company Number
     C                   Z-ADD     WL0002        WAC4NB                         Order Number
     C                   Z-ADD     WL0003        WADPNB                         Order Sequence
     C                   Z-ADD     WL0004        WAUENB                         Order Secondary
     C                   Z-ADD     WL0005        WAJGDT                         OD Production D
     C                   MOVEL     WL0006        WAKPSC                         ODSI TRG Databa
     C                   MOVEL     WL0007        WAKQSC                         ODSI Process St
     C                   Z-ADD     WL0008        WABLDX                         ODSI Process Da
      *
      * USER: Processing before Data update
      * Set Timestamp TS#     IF
      * PAR.@Timestamp TS# = JOB.*System timestamp
     C                   EXSR      XSTMS
     C                   MOVEL     ##TMS         WAA4TS                         @Timestamp TS#
     C     KLCRSA        KLIST
     C                   KFLD                    WAAIC3                         Company Number
     C                   KFLD                    WAC4NB                         Order Number
     C                   KFLD                    WADPNB                         Order Sequence
     C                   KFLD                    WAUENB                         Order Secondary
     C                   KFLD                    WAJGDT                         OD Production D
     C                   KFLD                    WAA4TS                         ODSI Timestamp
      * Check for duplicate primary key
     C     KLCRSA        SETLL     @BVCPGV                                90    *
     C                   IF        *IN90
     C                   MOVEL     'USR5168'     W0RTN
      * Send message 'Order Dtl Sched-InvTRG EX'
     C                   MOVEL     'USR5168'     ZAMSID
     C                   EXSR      ZASNMS
     C                   GOTO      SAEXIT
     C                   ENDIF
      *
     C                   WRITE     @BVCPGV                              91      *
      *
      * Write error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
     C                   ENDIF
      *================================================================
     CSR   SAEXIT        ENDSR
      /EJECT
     CSR   XSTMS         BEGSR
      *================================================================
      * Refresh System timestamp
      *================================================================
     C                   CALL      'Y2RTTSK'
     C                   PARM                    ##TMS                          System timestam
      *================================================================
     CSR   XSTMSE        ENDSR
      /EJECT
     CSR   ZASNMS        BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C                   IF        ZAPGMQ = ' '
     C                   MOVEL     ##PGM         ZAPGMQ
     C                   END
      * If no message file specified, use default
     C                   IF        ZAMSGF = ' '
     C                   MOVEL     ZADFMF        ZAMSGF
     C                   END
     C                   CALL      'Y2SNMGC'
     C                   PARM                    ZAPGMQ                         Program queue
     C                   PARM                    ZAPGRL                         Rel queue
     C                   PARM                    ZAMSID                         Message ID
     C                   PARM                    ZAMSGF                         Message file
     C                   PARM                    ZAMSDA                         Message data
     C                   PARM                    ZAMSTP                         Message type
     C                   PARM      'Y'           YILE
      * Clear all fields for default mechanism next time
     C                   EVAL      ZAPGMQ = ' '
     C                   EVAL      ZAPGRL = ' '
     C                   EVAL      ZAMSID = ' '
     C                   EVAL      ZAMSGF = ' '
     C                   EVAL      ZAMSDA = ' '
     C                   EVAL      ZAMSTP = ' '
      *================================================================
     CSR   ZAEXIT        ENDSR
      /EJECT
     CSR   ZXEXPG        BEGSR
      *================================================================
      * Exit program: Normal
      *================================================================
     C                   EXSR      ZYEXPG
      *================================================================
     CSR   ZXEXIT        ENDSR
      /EJECT
     CSR   ZYEXPG        BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                   SETON                                        LR
      *
      * Exit program
     C                   RETURN
      *
      *================================================================
     CSR   ZYEXIT        ENDSR
      /EJECT
     CSR   ZZINIT        BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C                   IF        W0ICL = ' '
     C                   MOVEL     'Y'           W0ICL                          *Initial call
     C                   ELSE
     C                   MOVEL     'N'           W0ICL
     C                   END
     C                   EVALR     P0RTN = ' '
     C                   EVALR     W0RTN = ' '
     C                   EVAL      W0RSL = ' '
     C                   EVAL      W0RSF = ' '
     C                   MOVEL     *ZEROS        W0RTW
     C                   MOVEL     '400'         W0ENV
      * Retrieve job attributes
     C                   CALL      'Y2RTJCR'
     C                   PARM                    PGMDS
      * Setup job date/time
     C                   Z-ADD     ##SD7         ##JDT
     C                   TIME                    ##JTM
      * Update screen time
     C                   TIME                    ##TME
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WAAIC3                         Company Number
     C                   Z-ADD     *ZERO         WAC4NB                         Order Number
     C                   Z-ADD     *ZERO         WADPNB                         Order Sequence
     C                   Z-ADD     *ZERO         WAUENB                         Order Secondary
     C                   Z-ADD     *ZERO         WAJGDT                         OD Production D
     C                   MOVE(P)   '0'           XDTSDL
     C                   MOVEL     @CN(001)      XDTSDL
     C                   MOVEL     XDTSDL        WAA4TS                         ODSI Timestamp
     C                   Z-ADD     *ZERO         WABLDX                         ODSI Process Da
      * Obtain default message file
     C     *DTAARA       DEFINE    CAMGFLA       ZADFMF
     C                   IN        ZADFMF
      * Dummy move for compiler
     C                   MOVE      '0'           @CN#(1)
     C                   MOVEL     'N'           W0PMT
      * Define local variables for subroutine SACRRC.
     C                   Z-ADD     *ZERO         WL0001
     C                   Z-ADD     *ZERO         WL0002
     C                   Z-ADD     *ZERO         WL0003
     C                   Z-ADD     *ZERO         WL0004
     C                   Z-ADD     *ZERO         WL0005
     C                   EVAL      WL0006 = ' '
     C                   EVAL      WL0007 = ' '
     C                   Z-ADD     *ZERO         WL0008
      *================================================================
     CSR   ZZEXIT        ENDSR
** @CN
00001 0001-01-01-00.00.00.00000
