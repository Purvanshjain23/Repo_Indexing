// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PUVAXFR
// ?Date: 14.08.2025 Time: 03:51:30
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Modification history
DO;

//?12/03/2021 JBB WI464 - Pallet Management
//?                       Function created.  This returns a Yes/No
//?                       flag.  If a Rental Pallet is found in any
//?                       of the 4 pallet types, set the flag to
//?                       Yes, otherwise it will be No.
ENDDO;

EXECUTE FUNCTION(Rtv OH Rental Pallet  RT) TYPE(RTVOBJ) FILE(PUB7CPP)           AC2200300;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Pallet_Type_1);
PARAMETER(PAR.Pallet_Qty_1);
PARAMETER(PAR.Pallet_Type_2);
PARAMETER(PAR.Pallet_Qty_2);
PARAMETER(PAR.Pallet_Type_3);
PARAMETER(PAR.Pallet_Qty_3);
PARAMETER(PAR.Pallet_Type_4);
PARAMETER(PAR.Pallet_Qty_4);
PARAMETER(PAR.EDI_ASN_Status);
PARAMETER(PAR.Record_Status);
PARAMETER(PAR.Rental_Pallet);
PARAMETER(PAR.Rental_Pallet_Qty);
{
 //?USER: Initialize routine

 //?This function retrieves the OH Pallet Table Shipped record for
 //?the Company and Order Number.  If any one of the four Pallet Types
 //?are for a rental pallet, then move that Pallet Type and Pallet Qty
 //?to the Rental Pallet and Rental Pallet Qty fields.
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 //?If Pallet Type 1 is entered, check if rental
 CASE;

 // IF NOT DB1.Pallet Type 1 is None
 IF ! DB1.Pallet_Type_1 = *BLANK;

 EXECUTE FUNCTION(Rtv Pallet Master     RT) TYPE(RTVOBJ) FILE(PUB6CPP)           AC2198688;
 PARAMETER(DB1.Pallet_Type_1);
 PARAMETER(NLL.PM_Description);
 PARAMETER(NLL.Misc_Tare_Weight);
 PARAMETER(LCL.Rental_Y_N);
 PARAMETER(NLL.Effective_Date);
 PARAMETER(NLL.Product_ID_GTIN);
 PARAMETER(NLL.Interchange_Code);
 PARAMETER(NLL.Class_Code);
 PARAMETER(NLL.EDI_Trading_Partner_No);
 PARAMETER(NLL.EDI_Whs_Duns_Number);
 PARAMETER(NLL.Contact_Name);
 PARAMETER(NLL.ASN_Ready_Y_N);
 PARAMETER(NLL.Status_1_Unused);
 PARAMETER(NLL.Status_2_Unused);
 PARAMETER(NLL.Text_75_Unused);
 PARAMETER(NLL.Record_Status);
 PARAMETER(NLL.Record_Found_USR);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PAR.Record Found USR = CND.Record Not Found
  PAR.Record_Found_USR = 'N';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  // PAR.Record Found USR = CND.Record Found
  PAR.Record_Found_USR = 'Y';

 }

 //?If Pallet Type 1 is a rental, populate rental fields
 CASE;

 // IF LCL.Rental (Y/N) is Yes
 IF LCL.Rental_Y_N = 'Y';

 // PAR.Rental Pallet = DB1.Pallet Type 1
 PAR.Rental_Pallet = DB1.Pallet_Type_1;

 // PAR.Rental Pallet Qty = DB1.Pallet Qty 1
 PAR.Rental_Pallet_Qty = DB1.Pallet_Qty_1;

 QUIT;

 ENDIF;

 ENDIF;

 //?If Pallet Type 2 is entered, check if rental
 CASE;

 // IF NOT DB1.Pallet Type 2 is None
 IF ! DB1.Pallet_Type_2 = *BLANK;

 EXECUTE FUNCTION(Rtv Pallet Master     RT) TYPE(RTVOBJ) FILE(PUB6CPP)           AC2198688;
 PARAMETER(DB1.Pallet_Type_2);
 PARAMETER(NLL.PM_Description);
 PARAMETER(NLL.Misc_Tare_Weight);
 PARAMETER(LCL.Rental_Y_N);
 PARAMETER(NLL.Effective_Date);
 PARAMETER(NLL.Product_ID_GTIN);
 PARAMETER(NLL.Interchange_Code);
 PARAMETER(NLL.Class_Code);
 PARAMETER(NLL.EDI_Trading_Partner_No);
 PARAMETER(NLL.EDI_Whs_Duns_Number);
 PARAMETER(NLL.Contact_Name);
 PARAMETER(NLL.ASN_Ready_Y_N);
 PARAMETER(NLL.Status_1_Unused);
 PARAMETER(NLL.Status_2_Unused);
 PARAMETER(NLL.Text_75_Unused);
 PARAMETER(NLL.Record_Status);
 PARAMETER(NLL.Record_Found_USR);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PAR.Record Found USR = CND.Record Not Found
  PAR.Record_Found_USR = 'N';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  // PAR.Record Found USR = CND.Record Found
  PAR.Record_Found_USR = 'Y';

 }

 //?If Pallet Type 1 is a rental, populate rental fields
 CASE;

 // IF LCL.Rental (Y/N) is Yes
 IF LCL.Rental_Y_N = 'Y';

 // PAR.Rental Pallet = DB1.Pallet Type 2
 PAR.Rental_Pallet = DB1.Pallet_Type_2;

 // PAR.Rental Pallet Qty = DB1.Pallet Qty 2
 PAR.Rental_Pallet_Qty = DB1.Pallet_Qty_2;

 QUIT;

 ENDIF;

 ENDIF;

 //?If Pallet Type 3 is entered, check if rental
 CASE;

 // IF NOT DB1.Pallet Type 3 is None
 IF ! DB1.Pallet_Type_3 = *BLANK;

 EXECUTE FUNCTION(Rtv Pallet Master     RT) TYPE(RTVOBJ) FILE(PUB6CPP)           AC2198688;
 PARAMETER(DB1.Pallet_Type_3);
 PARAMETER(NLL.PM_Description);
 PARAMETER(NLL.Misc_Tare_Weight);
 PARAMETER(LCL.Rental_Y_N);
 PARAMETER(NLL.Effective_Date);
 PARAMETER(NLL.Product_ID_GTIN);
 PARAMETER(NLL.Interchange_Code);
 PARAMETER(NLL.Class_Code);
 PARAMETER(NLL.EDI_Trading_Partner_No);
 PARAMETER(NLL.EDI_Whs_Duns_Number);
 PARAMETER(NLL.Contact_Name);
 PARAMETER(NLL.ASN_Ready_Y_N);
 PARAMETER(NLL.Status_1_Unused);
 PARAMETER(NLL.Status_2_Unused);
 PARAMETER(NLL.Text_75_Unused);
 PARAMETER(NLL.Record_Status);
 PARAMETER(NLL.Record_Found_USR);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PAR.Record Found USR = CND.Record Not Found
  PAR.Record_Found_USR = 'N';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  // PAR.Record Found USR = CND.Record Found
  PAR.Record_Found_USR = 'Y';

 }

 //?If Pallet Type 3 is a rental, populate rental fields
 CASE;

 // IF LCL.Rental (Y/N) is Yes
 IF LCL.Rental_Y_N = 'Y';

 // PAR.Rental Pallet = DB1.Pallet Type 3
 PAR.Rental_Pallet = DB1.Pallet_Type_3;

 // PAR.Rental Pallet Qty = DB1.Pallet Qty 3
 PAR.Rental_Pallet_Qty = DB1.Pallet_Qty_3;

 QUIT;

 ENDIF;

 ENDIF;

 //?If Pallet Type 4 is entered, check if rental
 CASE;

 // IF NOT DB1.Pallet Type 4 is None
 IF ! DB1.Pallet_Type_4 = *BLANK;

 EXECUTE FUNCTION(Rtv Pallet Master     RT) TYPE(RTVOBJ) FILE(PUB6CPP)           AC2198688;
 PARAMETER(DB1.Pallet_Type_4);
 PARAMETER(NLL.PM_Description);
 PARAMETER(NLL.Misc_Tare_Weight);
 PARAMETER(LCL.Rental_Y_N);
 PARAMETER(NLL.Effective_Date);
 PARAMETER(NLL.Product_ID_GTIN);
 PARAMETER(NLL.Interchange_Code);
 PARAMETER(NLL.Class_Code);
 PARAMETER(NLL.EDI_Trading_Partner_No);
 PARAMETER(NLL.EDI_Whs_Duns_Number);
 PARAMETER(NLL.Contact_Name);
 PARAMETER(NLL.ASN_Ready_Y_N);
 PARAMETER(NLL.Status_1_Unused);
 PARAMETER(NLL.Status_2_Unused);
 PARAMETER(NLL.Text_75_Unused);
 PARAMETER(NLL.Record_Status);
 PARAMETER(NLL.Record_Found_USR);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PAR.Record Found USR = CND.Record Not Found
  PAR.Record_Found_USR = 'N';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  // PAR.Record Found USR = CND.Record Found
  PAR.Record_Found_USR = 'Y';

 }

 //?If Pallet Type 4 is a rental, populate rental fields
 CASE;

 // IF LCL.Rental (Y/N) is Yes
 IF LCL.Rental_Y_N = 'Y';

 // PAR.Rental Pallet = DB1.Pallet Type 4
 PAR.Rental_Pallet = DB1.Pallet_Type_4;

 // PAR.Rental Pallet Qty = DB1.Pallet Qty 4
 PAR.Rental_Pallet_Qty = DB1.Pallet_Qty_4;

 QUIT;

 ENDIF;

 ENDIF;

}


