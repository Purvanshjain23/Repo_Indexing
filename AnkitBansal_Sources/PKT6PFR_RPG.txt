     H/TITLE Prt Carc Mrt Pgm Lean% PF Print file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Print report of file contents
      *
     H* Generated by  : 2E  Version:  1135
     H* Function type : Print file
      *
     H* Company       : HPEDEVMDL                     n
     H* System        : HPEDEVMDL
     H* User name     : ISSMASO
     H* Date          : 05/02/06  Time  : 07:26:26
     H* Copyright     : HPEDEVMDL                     n
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPKARREL0IF  E           K        DISK
      * RTV : Carcass Merit Program     Retrieval index
      *
     FPKBZREL2IF  E           K        DISK
      * RSQ : Carcass Merit Matrix Col  Cmp/Row/Lean%
      *
     FPKBZREL4IF  E           K        DISK
      * RSQ : Carcass Merit Matrix Col  CMP/Lean%(d)
      *
     FPKBYREL1IF  E           K        DISK
      * RTV : Carcass Merit Matrix Row  Retrieval index
      *
     FPKBZREL1IF  E           K        DISK
      * RTV : Carcass Merit Matrix Col  Retrieval index
      *
     FPKB0REL1IF  E           K        DISK
      * RTV : Carcass Merit Prog Com    Retrieval index
      *
     FPKT6PFR$O   E             97     PRINTER
     F                                              KINFDS INFDS$
      * PRT: Prt Carc Mrt Pgm Lean% PF Print file
      *
     I@BZREQJ
      * Carcass Merit Matrix Col  CMP/Lean%(d)
      * Renamed input format fields
     I              BZAMCD                          WAAMCD
     I              BZE8NB                          WAE8NB
     I              BZE4NB                          WAE4NB
     I              BZA1PC                          WAA1PC
     I              BZE7NB                          WAE7NB
     I              BZCHCD                          WACHCD
     I              BZERNB                          WAERNB
     I              BZAAVN                          WAAAVN
     I              BZAADT                          WAAADT
     I              BZAMTM                          WAAMTM
     I              BZAJST                          WAAJST
     I              BZAHVN                          WAAHVN
     I              BZAGVN                          WAAGVN
     I              BZABVN                          WAABVN
     I              BZABDT                          WAABDT
     I              BZABTM                          WAABTM
      *
     I@BZREGI
      * Carcass Merit Matrix Col  Retrieval index
      * Renamed input format fields
     I              BZAMCD                          WBAMCD
     I              BZE8NB                          WBE8NB
     I              BZE4NB                          WBE4NB
     I              BZA1PC                          WBA1PC
     I              BZE7NB                          WBE7NB
     I              BZCHCD                          WBCHCD
     I              BZERNB                          WBERNB
     I              BZAAVN                          WBAAVN
     I              BZAADT                          WBAADT
     I              BZAMTM                          WBAMTM
     I              BZAJST                          WBAJST
     I              BZAHVN                          WBAHVN
     I              BZAGVN                          WBAGVN
     I              BZABVN                          WBABVN
     I              BZABDT                          WBABDT
     I              BZABTM                          WBABTM
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
     IINFDS$    E DSY2I$DSP
      * Printer file information data structure
      *
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Carcass Merit Program
      * I : RST CMP Program Code
     I                                        1   3 P1AMCD
     IP2PARM      DS
      * I :  Oms System Value Alpha
     I                                        1  40 P2EVTX
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1AMCD    PARM           WP0001  3        CMP Program Cod
     C           P2EVTX    PARM           WP0002 40        Oms System Valu
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Prt Carc Mrt Pgm Lean% PF: Mainline
     C                     EXSR A0MAIN
      * Print headers then End of report format
     C                     EXSR Q0PRNT
     C                     WRITE$KENDRPT
      * Exit program
     C                     EXSR ZXEXPG
      * ------------------------------------------------------
      /EJECT
     CSR         A0MAIN    BEGSR
      *================================================================
      * Prt Carc Mrt Pgm Lean% PF: Mainline
      *================================================================
      * Declare restrictor key work fields
     C           *LIKE     DEFN ARAMCD    WQKA01           CMP Program Cod
      * Define keylist
     C           KRSA      KLIST
     C                     KFLD           WQKA01           CMP Program Cod
      * Setup key
     C                     MOVELP1AMCD    WQKA01           CMP Program Cod
      * Establish starting position
     C           KRSA      SETLL@ARREBF                    *
      * Read first record with user selection
     C                     EXSR A3READ
     C           W0EOFA    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0AL1P  1        First page
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      * Print report body
     C           W0EOFA    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR A1PHDR
      * Print report detail line
     C                     EXSR A2PDTL
      * Read next record with user selection
     C                     EXSR A3READ
      * Print totals
     C                     EXSR A4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         A0EXIT    ENDSR
      /EJECT
     CSR         A1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0AL1P    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP1P  1
     C                     END
      *
      *================================================================
     CSR         A1EXIT    ENDSR
      /EJECT
     CSR         A2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     MOVELARAMCD    $BAMCD           CMP Program Cod
     C                     MOVELARA3TX    $BA3TX           CMP Description
     C                     MOVELARDLST    $BDLST           CMP Grading Typ
     C                     MOVEL*BLANK    $BC4TX           Condition Name
     C                     Z-ADDARAZPC    $BAZPC           CMP Std Lean Pe
     C                     Z-ADDARA0PC    $BA0PC           CMP Lean Factor
     C                     MOVELARDMST    $BDMST           CMP Sort Basis
     C                     MOVEL*BLANK    $BI1TX           Condition Name
     C                     MOVELARDQST    $BDQST           CMP Carc Wgt Ty
     C                     MOVEL*BLANK    $BI2TX           Condition Name
     C                     MOVELARDTST    $BDTST           CMP Optimal Row
     C                     MOVELARF5ST    $BF5ST           CMP Type
     C                     MOVEL*BLANK    $BI3TX           Condition Name
     C                     Z-ADDARI1PR    $BI1PR           CMP Market Add/
     C                     Z-ADDARVEPR    $BVEPR           CMP % of Carcas
     C                     Z-ADDARVFPR    $BVFPR           CMP Fixed Cost
     C                     Z-ADDARVHPR    $BVHPR           CMP Unused Pric
     C                     Z-ADDARVIPR    $BVIPR           CMP Unused Pric
     C                     Z-ADDARVJPR    $BVJPR           CMP Unused Pric
     C                     MOVELARZ2ST    $BZ2ST           CMP CLC Premium
     C                     MOVELARZ3ST    $BZ3ST           CMP Unused Sts
     C                     MOVELARZ4ST    $BZ4ST           CMP Unused Sts
     C                     MOVELARDOST    $BDOST           CMP Sts
     C                     MOVEL*BLANK    $BI4TX           Condition Name
     C                     MOVELARAAVN    $BAAVN           RS User Changed
     C                     Z-ADDARAADT    $BAADT           RS Date Changed
     C                     Z-ADDARAMTM    $BAMTM           RS Time Changed
     C                     MOVELARAJST    $BAJST           RS Record Statu
     C                     MOVELARAHVN    $BAHVN           RS Job
     C                     MOVELARAGVN    $BAGVN           RS Program
     C                     MOVELARABVN    $BABVN           RS User Added
     C                     Z-ADDARABDT    $BABDT           RS Date Added
     C                     Z-ADDARABTM    $BABTM           RS Time Added
      * USER: Process before print of detail format
      * Rtv CMP Description  RT - Carcass Merit Program  * 
     C                     EXSR SARVGN
      * *RT.VCND           1182898*Bu = Condition name of ilt. in functio
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1103347   Y2LSNO  70       List number
     C                     PARM $BDLST    W0INVL 25        CMP Grading Typ
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $BC4TX    PARM           W0CNNM 25        Condition Name
      *
      * *RT.VCND           1182898*Bu = Condition name of ilt. in functio
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1103350   Y2LSNO  70       List number
     C                     PARM $BDMST    W0INVL 25        CMP Sort Basis
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $BI1TX    PARM           W0CNNM 25        Condition Name
      *
      * *RT.VCND           1182898*Bu = Condition name of ilt. in functio
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1103354   Y2LSNO  70       List number
     C                     PARM $BDQST    W0INVL 25        CMP Carc Wgt Ty
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $BI2TX    PARM           W0CNNM 25        Condition Name
      *
      * *RT.VCND           1182898*Bu = Condition name of ilt. in functio
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1115889   Y2LSNO  70       List number
     C                     PARM $BF5ST    W0INVL 25        CMP Type
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $BI3TX    PARM           W0CNNM 25        Condition Name
      *
      * *RT.VCND           1182898*Bu = Condition name of ilt. in functio
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1100039   Y2LSNO  70       List number
     C                     PARM $BDOST    W0INVL 25        CMP Sts
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $BI4TX    PARM           W0CNNM 25        Condition Name
      *
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0APDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      * PRTOBJ calls after print of detail format
      * Embedded PRTOBJ : Prt CMP Lean %        PO
     C                     EXSR UASUBR                     Embedded PRTOBJ
      * Embedded PRTOBJ : Prt Lean% Row         PO
     C                     EXSR UBSUBR                     Embedded PRTOBJ
      * Embedded PRTOBJ : Prt Cmp Comments      PO
     C                     EXSR UDSUBR                     Embedded PRTOBJ
      *
      *================================================================
     CSR         A2EXIT    ENDSR
      /EJECT
     CSR         A3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFA    OREQ '1'
     C           KRSA      READE@ARREBF                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFA  1
      * Quit if no record read
     C           W0EOFA    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C           W0EOFA    IFEQ '1'
      * End of file - Signal all level breaks
     C                     ELSE
      * Next record - Detect level breaks
     C                     END
      *================================================================
     CSR         A3EXIT    ENDSR
      /EJECT
     CSR         A4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0EOFA    IFEQ '1'
     C                     END
      *
      *================================================================
     CSR         A4EXIT    ENDSR
      /EJECT
     CSR         B0MAIN    BEGSR
      *================================================================
      * Prt CMP Lean %        PO: Mainline
      *================================================================
      * Declare restrictor key work fields
     C           *LIKE     DEFN BZAMCD    WQKB01           CMP Program Cod
      * Define keylist
     C           KRSB      KLIST
     C                     KFLD           WQKB01           CMP Program Cod
      * Setup key
     C                     MOVEL$BAMCD    WQKB01           CMP Program Cod
      * Establish starting position
     C           KRSB      SETLL@BZREKA                    *
      * Read first record with user selection
     C                     EXSR B3READ
     C           W0EOFB    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0BL1P  1        First page
     C                     MOVEL'Y'       W0BL00  1        CMP Program Cod
     C                     MOVEL'Y'       W0BL01  1        CMMR Row Number
     C                     MOVEL'Y'       W0BL02  1        CMMC Lean Perce
      * Set column headings flag
     C                     MOVE 'Y'       W0BCDT
      * Print report body
     C           W0EOFB    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR B1PHDR
      * Print report detail line
     C                     EXSR B2PDTL
      * Read next record with user selection
     C                     EXSR B3READ
      * Print totals
     C                     EXSR B4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         B0EXIT    ENDSR
      /EJECT
     CSR         B1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0BL1P    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP1P  1
     C                     END
      *
     C           W0BL00    IFEQ 'Y'
      * Load key header format
     C                     MOVELBZAMCD    $DAMCD           CMP Program Cod
     C                     Z-ADD*ZERO     $DD3PC           Lean % 1 USR
     C                     Z-ADD*ZERO     $DD4PC           Lean % 2 USR
     C                     Z-ADD*ZERO     $DD5PC           Lean % 3 USR
     C                     Z-ADD*ZERO     $DD6PC           Lean % 4 USR
     C                     Z-ADD*ZERO     $DD7PC           Lean % 5 USR
     C                     Z-ADD*ZERO     $DD8PC           Lean % 6 USR
     C                     Z-ADD*ZERO     $DD9PC           Lean % 7 USR
     C                     Z-ADD*ZERO     $DEAPC           Lean % 8 USR
     C                     Z-ADD*ZERO     $DEBPC           Lean % 9 USR
     C                     Z-ADD*ZERO     $DECPC           Lean % 10 USR
     C                     Z-ADD*ZERO     $DEDPC           Lean % 11 USR
     C                     Z-ADD*ZERO     $DEEPC           Lean % 12 USR
     C                     Z-ADD*ZERO     $DEFPC           Lean % 13 USR
     C                     Z-ADD*ZERO     $DEGPC           Lean % 14 USR
     C                     Z-ADD*ZERO     $DEHPC           Lean % 15 USR
     C                     Z-ADD*ZERO     $DEIPC           Lean % 16 USR
     C                     Z-ADD*ZERO     $DEJPC           Lean % 17 USR
     C                     Z-ADD*ZERO     $DEKPC           Lean % 18 USR
     C                     Z-ADD*ZERO     $DELPC           Lean % 19 USR
     C                     Z-ADD*ZERO     $DEMPC           Lean % 20 USR
      * USER: Process before print of CMP Program Code format
      * Rtv Lean % (Prt CMP)  RT - Carcass Merit Matrix Col  * 
     C                     EXSR SBRVGN
      * CUR = PAR By name
     C                     MOVEL$BAMCD    $DAMCD           CMP Program Cod
     C                     Z-ADDWN0001    $DD3PC           Lean % 1 USR
     C                     Z-ADDWN0002    $DD4PC           Lean % 2 USR
     C                     Z-ADDWN0003    $DD5PC           Lean % 3 USR
     C                     Z-ADDWN0004    $DD6PC           Lean % 4 USR
     C                     Z-ADDWN0005    $DD7PC           Lean % 5 USR
     C                     Z-ADDWN0006    $DD8PC           Lean % 6 USR
     C                     Z-ADDWN0007    $DD9PC           Lean % 7 USR
     C                     Z-ADDWN0008    $DEAPC           Lean % 8 USR
     C                     Z-ADDWN0009    $DEBPC           Lean % 9 USR
     C                     Z-ADDWN0010    $DECPC           Lean % 10 USR
     C                     Z-ADDWN0011    $DEDPC           Lean % 11 USR
     C                     Z-ADDWN0012    $DEEPC           Lean % 12 USR
     C                     Z-ADDWN0013    $DEFPC           Lean % 13 USR
     C                     Z-ADDWN0014    $DEGPC           Lean % 14 USR
     C                     Z-ADDWN0015    $DEHPC           Lean % 15 USR
     C                     Z-ADDWN0016    $DEIPC           Lean % 16 USR
     C                     Z-ADDWN0017    $DEJPC           Lean % 17 USR
     C                     Z-ADDWN0018    $DEKPC           Lean % 18 USR
     C                     Z-ADDWN0019    $DELPC           Lean % 19 USR
     C                     Z-ADDWN0020    $DEMPC           Lean % 20 USR
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP00  1
     C                     END
      *
     C           W0BL01    IFEQ 'Y'
      * Load related totals format
     C                     Z-ADD*ZERO     $FEJNB           CMMR Live Wgt M
     C                     Z-ADD*ZERO     $FEKNB           CMMR Live Wgt M
     C                     Z-ADD*ZERO     $FEGNB           CMMR Carc Wgt M
     C                     Z-ADD*ZERO     $FEHNB           CMMR Carc Wgt M
     C                     Z-ADD*ZERO     $FAQPC           CMMR Std Dressi
     C                     Z-ADD*ZERO     $FE2NB           CMMR Unused Fie
     C                     Z-ADD*ZERO     $FEMNB           CMMR Sort Disco
     C                     Z-ADD*ZERO     $FPLNB           Lean Premium Va
     C                     Z-ADD*ZERO     $FPMNB           Lean Premium Va
     C                     Z-ADD*ZERO     $FPNNB           Lean Premium Va
     C                     Z-ADD*ZERO     $FPONB           Lean Premium Va
     C                     Z-ADD*ZERO     $FPPNB           Lean Premium Va
     C                     Z-ADD*ZERO     $FPQNB           Lean Premium Va
     C                     Z-ADD*ZERO     $FPRNB           Lean Premium Va
     C                     Z-ADD*ZERO     $FPSNB           Lean Premium Va
     C                     Z-ADD*ZERO     $FPTNB           Lean Premium Va
     C                     Z-ADD*ZERO     $FPUNB           Lean Premium Va
     C                     Z-ADD*ZERO     $FPVNB           Lean Premium Va
     C                     Z-ADD*ZERO     $FPWNB           Lean Premium Va
     C                     Z-ADD*ZERO     $FPXNB           Lean Premium Va
     C                     Z-ADD*ZERO     $FPYNB           Lean Premium Va
     C                     Z-ADD*ZERO     $FPZNB           Lean Premium Va
     C                     Z-ADD*ZERO     $FP1NB           Lean Premium Va
     C                     Z-ADD*ZERO     $FP2NB           Lean Premium Va
     C                     Z-ADD*ZERO     $FP3NB           Lean Premium Va
     C                     Z-ADD*ZERO     $FP4NB           Lean Premium Va
     C                     Z-ADD*ZERO     $FP5NB           Lean Premium Va
     C                     MOVELBZAMCD    $FAMCD           CMP Program Cod
     C                     Z-ADDBZE8NB    $FE8NB           CMMR Row Number
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP01  1
     C                     END
      *
     C           W0BL02    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP02  1
     C                     END
      *
      *================================================================
     CSR         B1EXIT    ENDSR
      /EJECT
     CSR         B2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     MOVELBZAMCD    $EAMCD           CMP Program Cod
     C                     Z-ADDBZE8NB    $EE8NB           CMMR Row Number
     C                     Z-ADDBZE4NB    $EE4NB           CMMC Column Num
     C                     Z-ADDBZA1PC    $EA1PC           CMMC Lean Perce
     C                     Z-ADDBZE7NB    $EE7NB           CMMC Backfat In
     C                     MOVELBZCHCD    $ECHCD           CMMC Grade
     C                     Z-ADDBZERNB    $EERNB           CMMC Premium Va
     C                     MOVELBZAAVN    $EAAVN           RS User Changed
     C                     Z-ADDBZAADT    $EAADT           RS Date Changed
     C                     Z-ADDBZAMTM    $EAMTM           RS Time Changed
     C                     MOVELBZAJST    $EAJST           RS Record Statu
     C                     MOVELBZAHVN    $EAHVN           RS Job
     C                     MOVELBZAGVN    $EAGVN           RS Program
     C                     MOVELBZABVN    $EABVN           RS User Added
     C                     Z-ADDBZABDT    $EABDT           RS Date Added
     C                     Z-ADDBZABTM    $EABTM           RS Time Added
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BPDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      *
      *================================================================
     CSR         B2EXIT    ENDSR
      /EJECT
     CSR         B3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN BZAMCD    WZB001           CMP Program Cod
     C                     MOVELBZAMCD    WZB001
     C           *LIKE     DEFN BZE8NB    WZB002           CMMR Row Number
     C                     Z-ADDBZE8NB    WZB002
     C           *LIKE     DEFN BZA1PC    WZB003           CMMC Lean Perce
     C                     Z-ADDBZA1PC    WZB003
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFB    OREQ '1'
     C           KRSB      READE@BZREKA                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFB  1
      * Quit if no record read
     C           W0EOFB    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0BL00  1        CMP Program Cod
     C                     MOVEL*BLANK    W0BL01  1        CMMR Row Number
     C                     MOVEL*BLANK    W0BL02  1        CMMC Lean Perce
     C           W0EOFB    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0BL00  1        CMP Program Cod
     C                     MOVEL'Y'       W0BL01  1        CMMR Row Number
     C                     MOVEL'Y'       W0BL02  1        CMMC Lean Perce
     C                     ELSE
      * Next record - Detect level breaks
     C           BZAMCD    IFNE WZB001                     CMP Program Cod
      * Set on level break indicator
     C                     MOVEL'Y'       W0BL00
     C                     END
     C           BZE8NB    IFNE WZB002                     CMMR Row Number
     C           W0BL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0BL01
     C                     END
     C           BZA1PC    IFNE WZB003                     CMMC Lean Perce
     C           W0BL01    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0BL02
     C                     END
     C                     END
      *================================================================
     CSR         B3EXIT    ENDSR
      /EJECT
     CSR         B4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0BL02    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0BP02
     C                     END
      *
     C           W0BL01    IFEQ 'Y'
      * USER: Process before print of CMMR Row Number format
      * Rtv Row Info          RT - Carcass Merit Matrix Row  * 
     C                     EXSR SCRVGN
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 1
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Print format
     C                     WRITE$FKEYTTL
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0BP01
     C                     END
      *
     C           W0BL00    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0BP00
     C                     END
      *
     C           W0EOFB    IFEQ '1'
     C                     END
      *
      *================================================================
     CSR         B4EXIT    ENDSR
      /EJECT
     CSR         C0MAIN    BEGSR
      *================================================================
      * Prt Lean% Row         PO: Mainline
      *================================================================
      * Declare restrictor key work fields
     C           *LIKE     DEFN BYAMCD    WQKC01           CMP Program Cod
      * Define keylist
     C           KRSC      KLIST
     C                     KFLD           WQKC01           CMP Program Cod
      * Setup key
     C                     MOVEL$BAMCD    WQKC01           CMP Program Cod
      * Establish starting position
     C           KRSC      SETLL@BYREGF                    *
      * Read first record with user selection
     C                     EXSR C3READ
     C           W0EOFC    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0CL1P  1        First page
     C                     MOVEL'Y'       W0CL00  1        CMP Program Cod
      * Set column headings flag
     C                     MOVE 'Y'       W0CCDT
      * Print report body
     C           W0EOFC    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR C1PHDR
      * Print report detail line
     C                     EXSR C2PDTL
      * Read next record with user selection
     C                     EXSR C3READ
      * Print totals
     C                     EXSR C4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         C0EXIT    ENDSR
      /EJECT
     CSR         C1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0CL1P    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0CP1P  1
     C                     END
      *
     C           W0CL00    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0CP00  1
     C                     END
      *
      *================================================================
     CSR         C1EXIT    ENDSR
      /EJECT
     CSR         C2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     MOVELBYAMCD    $GAMCD           CMP Program Cod
     C                     Z-ADDBYE8NB    $GE8NB           CMMR Row Number
     C                     Z-ADDBYEGNB    $GEGNB           CMMR Carc Wgt M
     C                     Z-ADDBYEHNB    $GEHNB           CMMR Carc Wgt M
     C                     Z-ADDBYEINB    $GEINB           CMMR Carc Wgt M
     C                     Z-ADDBYEJNB    $GEJNB           CMMR Live Wgt M
     C                     Z-ADDBYEKNB    $GEKNB           CMMR Live Wgt M
     C                     Z-ADDBYAQPC    $GAQPC           CMMR Std Dressi
     C                     Z-ADDBYEMNB    $GEMNB           CMMR Sort Disco
     C                     Z-ADDBYE2NB    $GE2NB           CMMR Unused Fie
     C                     Z-ADDBYLJA1    $GLJA1           CMMR Midpoint
     C                     Z-ADDBYAMTM    $GAMTM           RS Time Changed
     C                     MOVELBYAHVN    $GAHVN           RS Job
     C                     MOVELBYAGVN    $GAGVN           RS Program
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0CPDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      * PRTOBJ calls after print of detail format
      * Embedded PRTOBJ : Prt Lean% Premium     PO
     C                     EXSR UCSUBR                     Embedded PRTOBJ
      *
      *================================================================
     CSR         C2EXIT    ENDSR
      /EJECT
     CSR         C3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN BYAMCD    WZC001           CMP Program Cod
     C                     MOVELBYAMCD    WZC001
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFC    OREQ '1'
     C           KRSC      READE@BYREGF                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFC  1
      * Quit if no record read
     C           W0EOFC    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0CL00  1        CMP Program Cod
     C           W0EOFC    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0CL00  1        CMP Program Cod
     C                     ELSE
      * Next record - Detect level breaks
     C           BYAMCD    IFNE WZC001                     CMP Program Cod
      * Set on level break indicator
     C                     MOVEL'Y'       W0CL00
     C                     END
     C                     END
      *================================================================
     CSR         C3EXIT    ENDSR
      /EJECT
     CSR         C4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0CL00    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0CP00
     C                     END
      *
     C           W0EOFC    IFEQ '1'
     C                     END
      *
      *================================================================
     CSR         C4EXIT    ENDSR
      /EJECT
     CSR         D0MAIN    BEGSR
      *================================================================
      * Prt Lean% Premium     PO: Mainline
      *================================================================
      * Declare restrictor key work fields
     C           *LIKE     DEFN WBAMCD    WQKD01           CMP Program Cod
     C           *LIKE     DEFN WBE8NB    WQKD02           CMMR Row Number
      * Define keylist
     C           KRSD      KLIST
     C                     KFLD           WQKD01           CMP Program Cod
     C                     KFLD           WQKD02           CMMR Row Number
      * Setup key
     C                     MOVEL$GAMCD    WQKD01           CMP Program Cod
     C                     Z-ADD$GE8NB    WQKD02           CMMR Row Number
      * Establish starting position
     C           KRSD      SETLL@BZREGI                    *
      * Read first record with user selection
     C                     EXSR D3READ
     C           W0EOFD    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0DL1P  1        First page
     C                     MOVEL'Y'       W0DL00  1        CMP Program Cod
     C                     MOVEL'Y'       W0DL01  1        CMMR Row Number
      * Set column headings flag
     C                     MOVE 'Y'       W0DCDT
      * Print report body
     C           W0EOFD    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR D1PHDR
      * Print report detail line
     C                     EXSR D2PDTL
      * Read next record with user selection
     C                     EXSR D3READ
      * Print totals
     C                     EXSR D4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         D0EXIT    ENDSR
      /EJECT
     CSR         D1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0DL1P    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0DP1P  1
     C                     END
      *
     C           W0DL00    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0DP00  1
     C                     END
      *
     C           W0DL01    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0DP01  1
     C                     END
      *
      *================================================================
     CSR         D1EXIT    ENDSR
      /EJECT
     CSR         D2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     MOVELWBAMCD    $HAMCD           CMP Program Cod
     C                     Z-ADDWBE8NB    $HE8NB           CMMR Row Number
     C                     Z-ADDWBE4NB    $HE4NB           CMMC Column Num
     C                     Z-ADDWBA1PC    $HA1PC           CMMC Lean Perce
     C                     Z-ADDWBE7NB    $HE7NB           CMMC Backfat In
     C                     MOVELWBCHCD    $HCHCD           CMMC Grade
     C                     Z-ADDWBERNB    $HERNB           CMMC Premium Va
     C                     Z-ADDWBAMTM    $HAMTM           RS Time Changed
     C                     MOVELWBAHVN    $HAHVN           RS Job
     C                     MOVELWBAGVN    $HAGVN           RS Program
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0DPDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      *
      *================================================================
     CSR         D2EXIT    ENDSR
      /EJECT
     CSR         D3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN WBAMCD    WZD001           CMP Program Cod
     C                     MOVELWBAMCD    WZD001
     C           *LIKE     DEFN WBE8NB    WZD002           CMMR Row Number
     C                     Z-ADDWBE8NB    WZD002
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFD    OREQ '1'
     C           KRSD      READE@BZREGI                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFD  1
      * Quit if no record read
     C           W0EOFD    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0DL00  1        CMP Program Cod
     C                     MOVEL*BLANK    W0DL01  1        CMMR Row Number
     C           W0EOFD    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0DL00  1        CMP Program Cod
     C                     MOVEL'Y'       W0DL01  1        CMMR Row Number
     C                     ELSE
      * Next record - Detect level breaks
     C           WBAMCD    IFNE WZD001                     CMP Program Cod
      * Set on level break indicator
     C                     MOVEL'Y'       W0DL00
     C                     END
     C           WBE8NB    IFNE WZD002                     CMMR Row Number
     C           W0DL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0DL01
     C                     END
     C                     END
      *================================================================
     CSR         D3EXIT    ENDSR
      /EJECT
     CSR         D4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0DL01    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0DP01
     C                     END
      *
     C           W0DL00    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0DP00
     C                     END
      *
     C           W0EOFD    IFEQ '1'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 2
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Print format
     C                     WRITE$IFINTTL
     C                     END
      *
      *================================================================
     CSR         D4EXIT    ENDSR
      /EJECT
     CSR         E0MAIN    BEGSR
      *================================================================
      * Prt Cmp Comments      PO: Mainline
      *================================================================
      * Declare restrictor key work fields
     C           *LIKE     DEFN B0AMCD    WQKE01           CMP Program Cod
      * Define keylist
     C           KRSE      KLIST
     C                     KFLD           WQKE01           CMP Program Cod
      * Setup key
     C                     MOVEL$BAMCD    WQKE01           CMP Program Cod
      * Establish starting position
     C           KRSE      SETLL@B0REGL                    *
      * Read first record with user selection
     C                     EXSR E3READ
     C           W0EOFE    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0EL1P  1        First page
     C                     MOVEL'Y'       W0EL00  1        CMP Program Cod
      * Set column headings flag
     C                     MOVE 'Y'       W0ECDT
      * Print report body
     C           W0EOFE    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR E1PHDR
      * Print report detail line
     C                     EXSR E2PDTL
      * Read next record with user selection
     C                     EXSR E3READ
      * Print totals
     C                     EXSR E4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         E0EXIT    ENDSR
      /EJECT
     CSR         E1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0EL1P    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0EP1P  1
     C                     END
      *
     C           W0EL00    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0EP00  1
     C                     END
      *
      *================================================================
     CSR         E1EXIT    ENDSR
      /EJECT
     CSR         E2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     MOVELB0AMCD    $JAMCD           CMP Program Cod
     C                     Z-ADDB0ESNB    $JESNB           CMPC Comment Li
     C                     MOVELB0B5TX    $JB5TX           CMPC Comment
     C                     MOVELB0ENST    $JENST           CMPC Comment Ty
     C                     MOVELB0AAVN    $JAAVN           RS User Changed
     C                     Z-ADDB0AADT    $JAADT           RS Date Changed
     C                     Z-ADDB0AMTM    $JAMTM           RS Time Changed
     C                     MOVELB0AJST    $JAJST           RS Record Statu
     C                     MOVELB0AHVN    $JAHVN           RS Job
     C                     MOVELB0AGVN    $JAGVN           RS Program
     C                     MOVELB0ABVN    $JABVN           RS User Added
     C                     Z-ADDB0ABDT    $JABDT           RS Date Added
     C                     Z-ADDB0ABTM    $JABTM           RS Time Added
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0EPDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      *
      *================================================================
     CSR         E2EXIT    ENDSR
      /EJECT
     CSR         E3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN B0AMCD    WZE001           CMP Program Cod
     C                     MOVELB0AMCD    WZE001
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFE    OREQ '1'
     C           KRSE      READE@B0REGL                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFE  1
      * Quit if no record read
     C           W0EOFE    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0EL00  1        CMP Program Cod
     C           W0EOFE    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0EL00  1        CMP Program Cod
     C                     ELSE
      * Next record - Detect level breaks
     C           B0AMCD    IFNE WZE001                     CMP Program Cod
      * Set on level break indicator
     C                     MOVEL'Y'       W0EL00
     C                     END
     C                     END
      *================================================================
     CSR         E3EXIT    ENDSR
      /EJECT
     CSR         E4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0EL00    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0EP00
     C                     END
      *
     C           W0EOFE    IFEQ '1'
     C                     END
      *
      *================================================================
     CSR         E4EXIT    ENDSR
      /EJECT
     CSR         Q0PRNT    BEGSR
      *================================================================
      * Print report formats
      *================================================================
      * Select formats to print
     C                     EXSR Q1FSEL
      * Calculate length of formats selected for printing
     C                     EXSR Q2PLEN
      * Add column heading length to print length
     C                     ADD  W0COLN    W0FSUM
     C           W0NEWP    IFNE 'Y'
      * Signal overflow if requested headings would cause
      * detail format to start past the overflow line
     C           W0FSUM    IFGT W0OFL
     C                     MOVE 'Y'       W0NEWP
     C                     ELSE
      * Signal overflow if requested headings would cause
      * Detail format to be printed past end of page
     C                     ADD  W0DTLN    W0FSUM
     C           W0FSUM    IFGT W0PGL
     C                     MOVE 'Y'       W0NEWP
     C                     END
     C                     END
     C                     END
      * Print Standard report header of Prt Carc Mrt Pgm Lean% PF
      * If it is ready to print, then do so,
     C           W0NEWP    IFEQ 'Y'                        IF
     C                     EXSR Q3PTNP
     C                     END                             FI
      *
      * Print First Page Format of Prt Carc Mrt Pgm Lean% PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP1P    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0AL1P
     C                     END                             FI
      * Print Detail line. of Prt Carc Mrt Pgm Lean% PF
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0ACDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0APDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0APDT    ANDEQ'P'
      * Convert fields to external form
     C                     MOVEL'0'       *IN79
     C           $BDLST    IFEQ 'B'                        *IF
     C           $BDLST    OREQ 'G'
     C           $BDLST    OREQ 'L'
     C           $BDLST    OREQ 'P'
     C           $BDLST    OREQ 'C'
     C           $BDLST    OREQ 'S'
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
      * Print column headings if required
     C           W0ACDT    IFEQ 'Y'
     C                     WRITE$BCOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0ACDT
     C                     END                             FI
      * Print format
     C                     WRITE$BDTLRCD
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0APDT
     C                     END                             FI
      * Print First Page Format of Prt CMP Lean %        PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP1P    ANDEQ'P'
      * Print format
     C                     WRITE$C1STPAG
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0BP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0BL1P
     C                     END                             FI
      * Print CMP Program Code of Prt CMP Lean %        PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP00    ANDEQ'P'
     C                     MOVEL'0'       *IN79
     C           WN0001    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
     C                     MOVEL'0'       *IN78
     C           WN0002    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       *IN78
     C                     END                             *FI
     C                     MOVEL'0'       *IN77
     C           WN0003    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       *IN77
     C                     END                             *FI
     C                     MOVEL'0'       *IN76
     C           WN0004    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       *IN76
     C                     END                             *FI
     C                     MOVEL'0'       *IN75
     C           WN0005    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       *IN75
     C                     END                             *FI
     C                     MOVEL'0'       *IN74
     C           WN0006    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       *IN74
     C                     END                             *FI
     C                     MOVEL'0'       *IN73
     C           WN0007    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       *IN73
     C                     END                             *FI
     C                     MOVEL'0'       *IN72
     C           WN0008    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       *IN72
     C                     END                             *FI
     C                     MOVEL'0'       *IN71
     C           WN0009    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       *IN71
     C                     END                             *FI
     C                     MOVEL'0'       *IN70
     C           WN0010    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       *IN70
     C                     END                             *FI
     C                     MOVEL'0'       *IN69
     C           WN0011    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       *IN69
     C                     END                             *FI
     C                     MOVEL'0'       *IN68
     C           WN0012    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       *IN68
     C                     END                             *FI
     C                     MOVEL'0'       *IN67
     C           WN0013    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       *IN67
     C                     END                             *FI
     C                     MOVEL'0'       *IN66
     C           WN0014    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       *IN66
     C                     END                             *FI
     C                     MOVEL'0'       *IN65
     C           WN0015    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       *IN65
     C                     END                             *FI
     C                     MOVEL'0'       *IN64
     C           WN0017    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       *IN64
     C                     END                             *FI
     C                     MOVEL'0'       *IN63
     C           WN0018    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       *IN63
     C                     END                             *FI
     C                     MOVEL'0'       *IN62
     C           WN0019    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       *IN62
     C                     END                             *FI
     C                     MOVEL'0'       *IN61
     C           WN0020    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       *IN61
     C                     END                             *FI
      * Print format
     C                     WRITE$DKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0BCDT
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0BP00
     C                     END                             FI
      * Print CMMR Row Number of Prt CMP Lean %        PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP01    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0BP01
     C                     END                             FI
      * Print CMMC Lean Percent of Prt CMP Lean %        PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP02    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP02    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0BP02
     C                     END                             FI
      * Print Detail line. of Prt CMP Lean %        PO
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0BCDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BPDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BPDT    ANDEQ'P'
      * USER: On print of detail format
      * Move Premium Value
      * CASE: PAR.Lean % 1 USR EQ DB1.CMMC Lean Percent
     C           WN0001    IFEQ BZA1PC                     *IF
     C                     Z-ADDBZERNB    $FPLNB           Lean Premium Va
     C                     ELSE
      * CASE: PAR.Lean % 2 USR EQ DB1.CMMC Lean Percent
     C           WN0002    IFEQ BZA1PC                     *IF
     C                     Z-ADDBZERNB    $FPMNB           Lean Premium Va
     C                     ELSE
      * CASE: PAR.Lean % 3 USR EQ DB1.CMMC Lean Percent
     C           WN0003    IFEQ BZA1PC                     *IF
     C                     Z-ADDBZERNB    $FPNNB           Lean Premium Va
     C                     ELSE
      * CASE: PAR.Lean % 4 USR EQ DB1.CMMC Lean Percent
     C           WN0004    IFEQ BZA1PC                     *IF
     C                     Z-ADDBZERNB    $FPONB           Lean Premium Va
     C                     ELSE
      * CASE: PAR.Lean % 5 USR EQ DB1.CMMC Lean Percent
     C           WN0005    IFEQ BZA1PC                     *IF
     C                     Z-ADDBZERNB    $FPPNB           Lean Premium Va
     C                     ELSE
      * CASE: PAR.Lean % 6 USR EQ DB1.CMMC Lean Percent
     C           WN0006    IFEQ BZA1PC                     *IF
     C                     Z-ADDBZERNB    $FPQNB           Lean Premium Va
     C                     ELSE
      * CASE: PAR.Lean % 7 USR EQ DB1.CMMC Lean Percent
     C           WN0007    IFEQ BZA1PC                     *IF
     C                     Z-ADDBZERNB    $FPRNB           Lean Premium Va
     C                     ELSE
      * CASE: PAR.Lean % 8 USR EQ DB1.CMMC Lean Percent
     C           WN0008    IFEQ BZA1PC                     *IF
     C                     Z-ADDBZERNB    $FPSNB           Lean Premium Va
     C                     ELSE
      * CASE: PAR.Lean % 9 USR EQ DB1.CMMC Lean Percent
     C           WN0009    IFEQ BZA1PC                     *IF
     C                     Z-ADDBZERNB    $FPTNB           Lean Premium Va
     C                     ELSE
      * CASE: PAR.Lean % 10 USR EQ DB1.CMMC Lean Percent
     C           WN0010    IFEQ BZA1PC                     *IF
     C                     Z-ADDBZERNB    $FPUNB           Lean Premium Va
     C                     ELSE
      * CASE: PAR.Lean % 11 USR EQ DB1.CMMC Lean Percent
     C           WN0011    IFEQ BZA1PC                     *IF
     C                     Z-ADDBZERNB    $FPVNB           Lean Premium Va
     C                     ELSE
      * CASE: PAR.Lean % 12 USR EQ DB1.CMMC Lean Percent
     C           WN0012    IFEQ BZA1PC                     *IF
     C                     Z-ADDBZERNB    $FPWNB           Lean Premium Va
     C                     ELSE
      * CASE: PAR.Lean % 13 USR EQ DB1.CMMC Lean Percent
     C           WN0013    IFEQ BZA1PC                     *IF
     C                     Z-ADDBZERNB    $FPXNB           Lean Premium Va
     C                     ELSE
      * CASE: PAR.Lean % 14 USR EQ DB1.CMMC Lean Percent
     C           WN0014    IFEQ BZA1PC                     *IF
     C                     Z-ADDBZERNB    $FPYNB           Lean Premium Va
     C                     ELSE
      * CASE: PAR.Lean % 15 USR EQ DB1.CMMC Lean Percent
     C           WN0015    IFEQ BZA1PC                     *IF
     C                     Z-ADDBZERNB    $FPZNB           Lean Premium Va
     C                     ELSE
      * CASE: PAR.Lean % 16 USR EQ DB1.CMMC Lean Percent
     C           WN0016    IFEQ BZA1PC                     *IF
     C                     Z-ADDBZERNB    $FP1NB           Lean Premium Va
     C                     ELSE
      * CASE: PAR.Lean % 17 USR EQ DB1.CMMC Lean Percent
     C           WN0017    IFEQ BZA1PC                     *IF
     C                     Z-ADDBZERNB    $FP2NB           Lean Premium Va
     C                     ELSE
      * CASE: PAR.Lean % 18 USR EQ DB1.CMMC Lean Percent
     C           WN0018    IFEQ BZA1PC                     *IF
     C                     Z-ADDBZERNB    $FP3NB           Lean Premium Va
     C                     ELSE
      * CASE: PAR.Lean % 19 USR EQ DB1.CMMC Lean Percent
     C           WN0019    IFEQ BZA1PC                     *IF
     C                     Z-ADDBZERNB    $FP4NB           Lean Premium Va
     C                     ELSE
      * CASE: PAR.Lean % 20 USR EQ DB1.CMMC Lean Percent
     C           WN0020    IFEQ BZA1PC                     *IF
     C                     Z-ADDBZERNB    $FP5NB           Lean Premium Va
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Mention hidden format
     C   99N99             WRITE$EDTLRCD
      * Reset format print flag
     C                     MOVE *BLANK    W0BPDT
     C                     END                             FI
      * Print First Page Format of Prt Lean% Row         PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0CP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0CP1P    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0CP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0CL1P
     C                     END                             FI
      * Print CMP Program Code of Prt Lean% Row         PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0CP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0CP00    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0CP00
     C                     END                             FI
      * Print Detail line. of Prt Lean% Row         PO
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0CCDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0CPDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0CPDT    ANDEQ'P'
      * Print column headings if required
     C           W0CCDT    IFEQ 'Y'
     C                     WRITE$GCOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0CCDT
     C                     END                             FI
      * Print format
     C                     WRITE$GDTLRCD
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0CPDT
     C                     END                             FI
      * Print First Page Format of Prt Lean% Premium     PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0DP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0DP1P    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0DP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0DL1P
     C                     END                             FI
      * Print CMP Program Code of Prt Lean% Premium     PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0DP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0DP00    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0DP00
     C                     END                             FI
      * Print CMMR Row Number of Prt Lean% Premium     PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0DP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0DP01    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0DP01
     C                     END                             FI
      * Print Detail line. of Prt Lean% Premium     PO
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0DCDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0DPDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0DPDT    ANDEQ'P'
      * Print column headings if required
     C           W0DCDT    IFEQ 'Y'
     C                     WRITE$HCOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0DCDT
     C                     END                             FI
      * Print format
     C                     WRITE$HDTLRCD
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0DPDT
     C                     END                             FI
      * Print First Page Format of Prt Cmp Comments      PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0EP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0EP1P    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0EP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0EL1P
     C                     END                             FI
      * Print CMP Program Code of Prt Cmp Comments      PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0EP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0EP00    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0EP00
     C                     END                             FI
      * Print Detail line. of Prt Cmp Comments      PO
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0ECDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0EPDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0EPDT    ANDEQ'P'
      * Print column headings if required
     C           W0ECDT    IFEQ 'Y'
     C                     WRITE$JCOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0ECDT
     C                     END                             FI
      * Print format
     C                     WRITE$JDTLRCD
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0EPDT
     C                     END                             FI
      * Clear new page flag
     C                     MOVE *BLANK    W0NEWP
      *================================================================
     CSR         Q0EXIT    ENDSR
      /EJECT
     CSR         Q1FSEL    BEGSR
      *================================================================
      * Format select
      *================================================================
      *================================================================
     CSR         Q1EXIT    ENDSR
      /EJECT
     CSR         Q2PLEN    BEGSR
      *================================================================
      * Evaluate print length
      *================================================================
     C           *LIKE     DEFN @$CLN     W0FSUM
     C           *LIKE     DEFN @$CLN     W0DTLN
     C           *LIKE     DEFN @$CLN     W0COLN
     C                     Z-ADD@$CLN     W0FSUM
     C                     Z-ADD*ZERO     W0DTLN
     C                     Z-ADD*ZERO     W0COLN
      * * First Page Format of Prt Carc Mrt Pgm Lean% PF
     C           W0AP1P    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of Prt Carc Mrt Pgm Lean% PF
     C           W0APDT    IFEQ 'Y'
     C                     Z-ADD6         W0DTLN
     C           W0ACDT    IFEQ 'Y'
     C                     Z-ADD0         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      * * First Page Format of Prt CMP Lean %        PO
     C           W0BP1P    IFEQ 'Y'
     C                     ADD  3         W0FSUM
     C                     END                             FI
      *
      * * CMP Program Code of Prt CMP Lean %        PO
     C           W0BP00    IFEQ 'Y'
     C                     ADD  2         W0FSUM
     C                     END                             FI
      *
      * * CMMR Row Number of Prt CMP Lean %        PO
     C           W0BP01    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * CMMC Lean Percent of Prt CMP Lean %        PO
     C           W0BP02    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of Prt CMP Lean %        PO
     C           W0BPDT    IFEQ 'Y'
     C                     Z-ADD0         W0DTLN
     C           W0BCDT    IFEQ 'Y'
     C                     Z-ADD0         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      * * First Page Format of Prt Lean% Row         PO
     C           W0CP1P    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * CMP Program Code of Prt Lean% Row         PO
     C           W0CP00    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of Prt Lean% Row         PO
     C           W0CPDT    IFEQ 'Y'
     C                     Z-ADD1         W0DTLN
     C           W0CCDT    IFEQ 'Y'
     C                     Z-ADD3         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      * * First Page Format of Prt Lean% Premium     PO
     C           W0DP1P    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * CMP Program Code of Prt Lean% Premium     PO
     C           W0DP00    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * CMMR Row Number of Prt Lean% Premium     PO
     C           W0DP01    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of Prt Lean% Premium     PO
     C           W0DPDT    IFEQ 'Y'
     C                     Z-ADD1         W0DTLN
     C           W0DCDT    IFEQ 'Y'
     C                     Z-ADD2         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      * * First Page Format of Prt Cmp Comments      PO
     C           W0EP1P    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * CMP Program Code of Prt Cmp Comments      PO
     C           W0EP00    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of Prt Cmp Comments      PO
     C           W0EPDT    IFEQ 'Y'
     C                     Z-ADD1         W0DTLN
     C           W0ECDT    IFEQ 'Y'
     C                     Z-ADD3         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      *================================================================
     CSR         Q2EXIT    ENDSR
      /EJECT
     CSR         Q3PTNP    BEGSR
      *================================================================
      * Format select
      *================================================================
     C                     WRITE$APAGHDR
      * Clear page overflow indicator
     C                     SETOF                     97    *
      *================================================================
     CSR         Q3EXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Rtv CMP Description  RT - Carcass Merit Program  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           ARAMCD           CMP Program Cod
      * Setup key
     C                     MOVEL$BAMCD    ARAMCD           CMP Program Cod
      * Establish starting position
     C           KRSSA     CHAIN@ARREBF              90    *
      * Data record not found
     C   90                MOVEL'PRK0039' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELARA3TX    $BA3TX           CMP Description
     C                     MOVEL*BLANK    W0RTN            *Return code
     C                     MOVEL'999'     W0RTN            *Return code
     C                     ENDIF
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * Rtv Lean % (Prt CMP)  RT - Carcass Merit Matrix Col  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     MOVEL'Y'       WUHBST           First Time Flag
     C                     Z-ADD1         WUP0NB           Count USR
      * Declare restrictor key work fields
     C           *LIKE     DEFN WAAMCD    WQSB01           CMP Program Cod
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           CMP Program Cod
      * Setup key
     C                     MOVEL$DAMCD    WQSB01           CMP Program Cod
      * Establish starting position
     C           KRSSB     SETLL@BZREQJ                    *
     C           KRSSB     READE@BZREQJ                  90*
      * Data record not found
     C   90                MOVEL'PRK0134' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: WRK.First Time Flag Usr is Yes
     C           WUHBST    IFEQ 'Y'                        *IF
     C                     Z-ADDWAA1PC    WUA1PC           CMMC Lean Perce
     C                     Z-ADDWAA1PC    WN0001           Lean % 1 USR
     C                     ADD  1         WUP0NB           Count USR
     C                     MOVEL'N'       WUHBST           First Time Flag
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: WRK.CMMC Lean Percent NE DB1.CMMC Lean Percent
     C           WUA1PC    IFNE WAA1PC                     *IF
      * Move DB1 to PAR (2 - 20)
      * CASE: WRK.Count USR is Two
     C           WUP0NB    IFEQ 2                          *IF
     C                     Z-ADDWAA1PC    WN0002           Lean % 2 USR
     C                     ELSE
      * CASE: WRK.Count USR is Three
     C           WUP0NB    IFEQ 3                          *IF
     C                     Z-ADDWAA1PC    WN0003           Lean % 3 USR
     C                     ELSE
      * CASE: WRK.Count USR is Four
     C           WUP0NB    IFEQ 4                          *IF
     C                     Z-ADDWAA1PC    WN0004           Lean % 4 USR
     C                     ELSE
      * CASE: WRK.Count USR is Five
     C           WUP0NB    IFEQ 5                          *IF
     C                     Z-ADDWAA1PC    WN0005           Lean % 5 USR
     C                     ELSE
      * CASE: WRK.Count USR is Six
     C           WUP0NB    IFEQ 6                          *IF
     C                     Z-ADDWAA1PC    WN0006           Lean % 6 USR
     C                     ELSE
      * CASE: WRK.Count USR is Seven
     C           WUP0NB    IFEQ 7                          *IF
     C                     Z-ADDWAA1PC    WN0007           Lean % 7 USR
     C                     ELSE
      * CASE: WRK.Count USR is Eight
     C           WUP0NB    IFEQ 8                          *IF
     C                     Z-ADDWAA1PC    WN0008           Lean % 8 USR
     C                     ELSE
      * CASE: WRK.Count USR is Nine
     C           WUP0NB    IFEQ 9                          *IF
     C                     Z-ADDWAA1PC    WN0009           Lean % 9 USR
     C                     ELSE
      * CASE: WRK.Count USR is Ten
     C           WUP0NB    IFEQ 10                         *IF
     C                     Z-ADDWAA1PC    WN0010           Lean % 10 USR
     C                     ELSE
      * CASE: WRK.Count USR is Eleven
     C           WUP0NB    IFEQ 11                         *IF
     C                     Z-ADDWAA1PC    WN0011           Lean % 11 USR
     C                     ELSE
      * CASE: WRK.Count USR is Twelve
     C           WUP0NB    IFEQ 12                         *IF
     C                     Z-ADDWAA1PC    WN0012           Lean % 12 USR
     C                     ELSE
      * CASE: WRK.Count USR is Thirteen
     C           WUP0NB    IFEQ 13                         *IF
     C                     Z-ADDWAA1PC    WN0013           Lean % 13 USR
     C                     ELSE
      * CASE: WRK.Count USR is Fourteen
     C           WUP0NB    IFEQ 14                         *IF
     C                     Z-ADDWAA1PC    WN0014           Lean % 14 USR
     C                     ELSE
      * CASE: WRK.Count USR is Fifteen
     C           WUP0NB    IFEQ 15                         *IF
     C                     Z-ADDWAA1PC    WN0015           Lean % 15 USR
     C                     ELSE
      * CASE: WRK.Count USR is Sixteen
     C           WUP0NB    IFEQ 16                         *IF
     C                     Z-ADDWAA1PC    WN0016           Lean % 16 USR
     C                     ELSE
      * CASE: WRK.Count USR is Seventeen
     C           WUP0NB    IFEQ 17                         *IF
     C                     Z-ADDWAA1PC    WN0017           Lean % 17 USR
     C                     ELSE
      * CASE: WRK.Count USR is Eighteen
     C           WUP0NB    IFEQ 18                         *IF
     C                     Z-ADDWAA1PC    WN0018           Lean % 18 USR
     C                     ELSE
      * CASE: WRK.Count USR is Nineteen
     C           WUP0NB    IFEQ 19                         *IF
     C                     Z-ADDWAA1PC    WN0019           Lean % 19 USR
     C                     ELSE
      * CASE: WRK.Count USR is Twenty
     C           WUP0NB    IFEQ 20                         *IF
     C                     Z-ADDWAA1PC    WN0020           Lean % 20 USR
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADDWAA1PC    WUA1PC           CMMC Lean Perce
     C                     ADD  1         WUP0NB           Count USR
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSB     READE@BZREQJ                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * Rtv Row Info          RT - Carcass Merit Matrix Row  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           BYAMCD           CMP Program Cod
     C                     KFLD           BYE8NB           CMMR Row Number
      * Setup key
     C                     MOVEL$FAMCD    BYAMCD           CMP Program Cod
     C                     Z-ADD$FE8NB    BYE8NB           CMMR Row Number
      * Establish starting position
     C           KRSSC     CHAIN@BYREGF              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0132' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     $FEGNB           CMMR Carc Wgt M
     C                     Z-ADD*ZERO     $FEHNB           CMMR Carc Wgt M
     C                     Z-ADD*ZERO     $FEJNB           CMMR Live Wgt M
     C                     Z-ADD*ZERO     $FEKNB           CMMR Live Wgt M
     C                     Z-ADD*ZERO     $FAQPC           CMMR Std Dressi
     C                     Z-ADD*ZERO     $FEMNB           CMMR Sort Disco
     C                     Z-ADD*ZERO     $FE2NB           CMMR Unused Fie
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDBYEGNB    $FEGNB           CMMR Carc Wgt M
     C                     Z-ADDBYEHNB    $FEHNB           CMMR Carc Wgt M
     C                     Z-ADDBYEJNB    $FEJNB           CMMR Live Wgt M
     C                     Z-ADDBYEKNB    $FEKNB           CMMR Live Wgt M
     C                     Z-ADDBYAQPC    $FAQPC           CMMR Std Dressi
     C                     Z-ADDBYEMNB    $FEMNB           CMMR Sort Disco
     C                     Z-ADDBYE2NB    $FE2NB           CMMR Unused Fie
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Embedded PRTOBJ : Prt CMP Lean %        PO
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0001  31       Lean % 1 USR
     C                     Z-ADD*ZERO     WN0002  31       Lean % 2 USR
     C                     Z-ADD*ZERO     WN0003  31       Lean % 3 USR
     C                     Z-ADD*ZERO     WN0004  31       Lean % 4 USR
     C                     Z-ADD*ZERO     WN0005  31       Lean % 5 USR
     C                     Z-ADD*ZERO     WN0006  31       Lean % 6 USR
     C                     Z-ADD*ZERO     WN0007  31       Lean % 7 USR
     C                     Z-ADD*ZERO     WN0008  31       Lean % 8 USR
     C                     Z-ADD*ZERO     WN0009  31       Lean % 9 USR
     C                     Z-ADD*ZERO     WN0010  31       Lean % 10 USR
     C                     Z-ADD*ZERO     WN0011  31       Lean % 11 USR
     C                     Z-ADD*ZERO     WN0012  31       Lean % 12 USR
     C                     Z-ADD*ZERO     WN0013  31       Lean % 13 USR
     C                     Z-ADD*ZERO     WN0014  31       Lean % 14 USR
     C                     Z-ADD*ZERO     WN0015  31       Lean % 15 USR
     C                     Z-ADD*ZERO     WN0016  31       Lean % 16 USR
     C                     Z-ADD*ZERO     WN0017  31       Lean % 17 USR
     C                     Z-ADD*ZERO     WN0018  31       Lean % 18 USR
     C                     Z-ADD*ZERO     WN0019  31       Lean % 19 USR
     C                     Z-ADD*ZERO     WN0020  31       Lean % 20 USR
      *
      * Prt CMP Lean %        PO: Mainline
     C                     EXSR B0MAIN
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * Embedded PRTOBJ : Prt Lean% Row         PO
      *================================================================
     C                     GOTO UBEXIT                     *QUIT
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(CUR) $BAMCD' defaulted for 'CMP Program Code'.
      * Prt Lean% Row         PO: Mainline
     C                     EXSR C0MAIN
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         UCSUBR    BEGSR
      *================================================================
      * Embedded PRTOBJ : Prt Lean% Premium     PO
      *================================================================
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(CUR) $GAMCD' defaulted for 'CMP Program Code'.
      * Field '(CUR) $GE8NB' defaulted for 'CMMR Row Number'.
      * Prt Lean% Premium     PO: Mainline
     C                     EXSR D0MAIN
      *================================================================
     CSR         UCEXIT    ENDSR
      /EJECT
     CSR         UDSUBR    BEGSR
      *================================================================
      * Embedded PRTOBJ : Prt Cmp Comments      PO
      *================================================================
     C                     GOTO UDEXIT                     *QUIT
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(CUR) $BAMCD' defaulted for 'CMP Program Code'.
      * Prt Cmp Comments      PO: Mainline
     C                     EXSR E0MAIN
      *================================================================
     CSR         UDEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Copy any undisplayed messages back to caller
     C                     CALL 'Y2CPMSC'
     C                     PARM           ##PGM
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    ARAMCD           CMP Program Cod
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    BZAMCD           CMP Program Cod
     C                     MOVEL*LOVAL    BZE8NB           CMMR Row Number
     C                     MOVEL*HIVAL    BZA1PC           CMMC Lean Perce
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAE8NB           CMMR Row Number
     C                     Z-ADD*ZERO     WAE4NB           CMMC Column Num
     C                     Z-ADD*ZERO     WAA1PC           CMMC Lean Perce
     C                     Z-ADD*ZERO     WAE7NB           CMMC Backfat In
     C                     Z-ADD*ZERO     WAERNB           CMMC Premium Va
     C                     Z-ADD*ZERO     WAAADT           RS Date Changed
     C                     Z-ADD*ZERO     WAAMTM           RS Time Changed
     C                     Z-ADD*ZERO     WAABDT           RS Date Added
     C                     Z-ADD*ZERO     WAABTM           RS Time Added
      * Define work field First Time Flag Usr
     C                     MOVEL*BLANK    WUHBST  1
      * Define work field Count USR
     C                     Z-ADD*ZERO     WUP0NB  30
      * Define work field CMMC Lean Percent
     C                     Z-ADD*ZERO     WUA1PC  31
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    BYAMCD           CMP Program Cod
     C                     MOVEL*LOVAL    BYE8NB           CMMR Row Number
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    WBAMCD           CMP Program Cod
     C                     MOVEL*LOVAL    WBE8NB           CMMR Row Number
     C                     MOVEL*LOVAL    WBE4NB           CMMC Column Num
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    B0AMCD           CMP Program Cod
     C                     MOVEL*LOVAL    B0ESNB           CMPC Comment Li
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C                     MOVEL'N'       W0PMT   1
      * Declare initial value data areas
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   $ACMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL##PGM     $APGM
     C                     MOVEL##USR     $AUSR
     C                     MOVEL*BLANK    W0PFM   1
     C                     Z-ADD*ZERO     @$WRK   40
     C                     Z-ADD*ZERO     @$HDL   40
     C                     Z-ADD*ZERO     @$CLN
     C                     Z-ADD*ZERO     @$PGN
      * Adjust page length and overflow as necessary
     C           @$PGL     SUB  2         W0PGL   40
     C           @$OFL     IFGE W0PGL
     C           W0PGL     SUB  2         W0OFL   40
     C                     ELSE
     C                     Z-ADD@$OFL     W0OFL
     C                     END
      * Clear overflow indicator
     C                     SETOF                     97
      * Request new page
     C                     MOVEL'Y'       W0NEWP  1
      * USER: Initialize program
      * Mov ApplN to Co-PRINT US - STR User Source Functions  * 
     C***   MOVE USER SOURCE                      ***
     C                     MOVELP2EVTX    $ACMP
      *================================================================
     CSR         ZZEXIT    ENDSR
