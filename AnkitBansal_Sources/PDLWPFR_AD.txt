// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDLWPFR
// ?Date: 14.08.2025 Time: 12:04:04
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('OMS');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


//?USER: On print of first page format

MOVE *ALL (To: 1PG From: DB1);

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(X1PG_Company_Number);
PARAMETER(X1PG_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// 1PG.Deadline Departure MM/DD = CVTVAR(DB1.Deadline Departure Date)
X1PG_Deadline_Departure_MM_DD = CVTVAR(DB1.Deadline_Departure_Date);

// 1PG.USR Deadline Deprt Time = DB1.Deadline Departure Time / CON.100 *
X1PG_USR_Deadline_Deprt_Time = DB1.Deadline_Departure_Time / 100;

//?add getting the date of the last refresh
EXECUTE FUNCTION(RTV Newest Rcd         RT) TYPE(RTVOBJ) FILE(PDMHCPP)          AC1542212;
PARAMETER(X1PG_Job_Time);
PARAMETER(X1PG_Job_Date);
PARAMETER(X1PG_Thru_Scheduled_Ship_Date);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


//?USER: Print required level headings

CASE;

IF NEW LSP_Order_Company;
// Print LSP Order Company header format
PRINT LSP Order Company header format;

ENDIF;

CASE;

IF NEW Scheduled_Ship_Date;
// SUPPRESSED PRINT Scheduled Ship Date header format

ENDIF;

CASE;

IF NEW Deadline_Departure_Date;
// SUPPRESSED PRINT Deadline Departure Date header format

ENDIF;

CASE;

IF NEW Deadline_Departure_Time;
// SUPPRESSED PRINT Deadline Departure Time header format

ENDIF;

CASE;

IF NEW Load_ID;
// SUPPRESSED PRINT Load ID header format

ENDIF;

CASE;

IF NEW Item_Code;
// SUPPRESSED PRINT Item Code header format

ENDIF;

CASE;

IF NEW LSP_Order_Warehouse;
// SUPPRESSED PRINT LSP Order Warehouse header format

ENDIF;

//?USER: On print of detail format

// CUR.Condition Desc. 2  USR = Condition name of CUR.Order Grade
CUR.Condition_Desc_2_USR = RTVCND(CUR.Order_Grade);

//?USER: Process after print of detail format

// WRK.Actual Production = WRK.Actual Production + CUR.Actual Production
WRK.Actual_Production = WRK.Actual_Production + CUR.Actual_Production;

// WRK.Scheduled Quantity = WRK.Scheduled Quantity + CUR.Scheduled Quantity
WRK.Scheduled_Quantity = WRK.Scheduled_Quantity + CUR.Scheduled_Quantity;

//?USER: Print required level totals

CASE;

IF NEW LSP_Order_Warehouse;
// SUPPRESSED PRINT LSP Order Warehouse totals format

ENDIF;

CASE;

IF NEW Item_Code;
// SUPPRESSED PRINT Item Code totals format

ENDIF;

CASE;

IF NEW Load_ID;
// CUR.Qty Produced SUM = WRK.Actual Production
CUR.Qty_Produced_SUM = WRK.Actual_Production;

// WRK.Actual Production = CON.*ZERO
WRK.Actual_Production = *ZERO;

// CUR.USR Quantity 7,0 SUM = WRK.Scheduled Quantity
CUR.USR_Quantity_70_SUM = WRK.Scheduled_Quantity;

// WRK.Scheduled Quantity = CON.*ZERO
WRK.Scheduled_Quantity = *ZERO;

// SUPPRESSED PRINT Load ID totals format

ENDIF;

CASE;

IF NEW Deadline_Departure_Time;
// SUPPRESSED PRINT Deadline Departure Time totals format

ENDIF;

CASE;

IF NEW Deadline_Departure_Date;
// SUPPRESSED PRINT Deadline Departure Date totals format

ENDIF;

CASE;

IF NEW Scheduled_Ship_Date;
// SUPPRESSED PRINT Scheduled Ship Date totals format

ENDIF;

CASE;

IF NEW LSP_Order_Company;
// Print LSP Order Company totals format
PRINT LSP Order Company totals format;

ENDIF;

