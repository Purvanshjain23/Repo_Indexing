     H/TITLE Prt Truck Scale Wgts  PF  Print file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Print report of file contents
      *
     H* Generated by CA 2E release 8.7 (1632)
     H* Function type : Print file
      *
     H* Company       : HPEDEVMDL
     H* System        : HPEDEVMDL
     H* User name     : ISJBADE
     H* Date          : 03/23/21  Time  : 08:52:45
     H* Copyright     : HPEDEVMDL
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPKEJCPL4IF  E           K        DISK
      * RSQ : Buy Order Load Weight     Co/WgtDte/Prod/Mve IN
      *
     FPKACREL1IF  E           K        DISK
      * RTV : Producer                  Retrieval index
      *
     FPKA1CPL0IF  E           K        DISK
      * RTV : Tattoo Header             Retrieval index
      *
     FPKEJCPL1IF  E           K        DISK
      * RTV : Buy Order Load Weight     Retrieval index
      *
     FPLAFCPL2IF  E           K        DISK
      * RSQ : Delivery Tracking         BOH CO/BO/BOL/KillDt
      *
     FPKFGCPL0IF  E           K        DISK                      A
      * UPD : Truckscale Log OUTF       Update index
      *
     FPKVYPFR$O   E             97     PRINTER
     F                                              KINFDS INFDS$
      * PRT: Prt Truck Scale Wgts  PF  Print file
      *
      * Long constants
     E                    @CN#    1  02  6   @CN    25
     E                    YDOW        7  1               *Days of week
     I@EJCPBI
      * Buy Order Load Weight     Retrieval index
      * Renamed input format fields
     I              EJHONB                          WAHONB
     I              EJABCD                          WAABCD
     I              EJAECD                          WAAECD
     I              EJBOMV                          WABOMV
     I              EJSRST                          WASRST
     I              EJBOSW                          WABOSW
     I              EJDQDT                          WADQDT
     I              EJA2TM                          WAA2TM
     I              EJSSST                          WASSST
     I              EJSTST                          WASTST
     I              EJSUST                          WASUST
     I              EJHMNB                          WAHMNB
     I              EJBNNB                          WABNNB
     I              EJBONB                          WABONB
     I              EJAAVN                          WAAAVN
     I              EJAADT                          WAAADT
     I              EJAMTM                          WAAMTM
     I              EJAJST                          WAAJST
     I              EJAHVN                          WAAHVN
     I              EJAGVN                          WAAGVN
     I              EJABVN                          WAABVN
     I              EJABDT                          WAABDT
     I              EJABTM                          WAABTM
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
     IINFDS$    E DSY2I$DSP
      * Printer file information data structure
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
     IXTCK        DS
      * Time: hours, minutes, seconds
     I                                        1   60XTTIM
     I                                        1   20XTHH
     I                                        3   40XTNN
     I                                        5   60XTSS
      /EJECT
     IXD2T        DS
      * Internal date
     I                                        1   70XDINT2
     I                                        1   30XDINY2
     I                                        4   50XDINM2
     I                                        6   70XDIND2
      /EJECT
     IXTCK2       DS
      * Time: hours, minutes, seconds (2)
     I                                        1   60XTTIM2
     I                                        1   20XTHH2
     I                                        3   40XTNN2
     I                                        5   60XTSS2
     IQPKFG1    E DSPKFGCPL0
      * UPD : Truckscale Log OUTF       Update index
      *
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Buy Order Load Weight
      * I : RST CC Company Number
     I                                    P   1   20P1HONB
      * I :  PD Producer Code
     I                                        3   8 P1ABCD
      * I : POS BOLW Scale Weight Date
     I                                    P   9  120P1DQDT
     IP2PARM      DS
      * I :  Date To   USR
     I                                    P   1   40P2B4DT
     IP3PARM      DS
      * I :  Status 1
     I                                        1   1 P3P4ST
     IP4PARM      DS
      * I :  SR Type
     I                                        1   1 P4IXST
     IP5PARM      DS
      * FLD: *Arrays
      * N :  Oms Warehouse Code
     I                                        1   3 P5J8NB
      * N :  Oms Application Code
     I                                        4   9 P5C7CD
      * N :  Oms SalesPerson Code
     I                                       10  12 P5C8CD
      * N :  Oms Allow Multi-Company
     I                                       13  13 P5G8ST
      * N :  Oms Default Printer
     I                                       14  23 P5G9ST
      * N :  Oms Name
     I                                       24  53 P5EUTX
      * N :  Oms System Value Alpha
     I                                       54  93 P5EVTX
      * N :  Oms Access Denied (Y/N)
     I                                       94  94 P5HAST
     IP6PARM      DS
      * N :  Load Number
     I                                    P   1   30P6LOAD
     IP7PARM      DS
      * N :  Seconds USR
     I                                    P   1   40P7AAA1
     IP8PARM      DS
      * N :  Minutes USR
     I                                    P   1   30P8CVA1
     IP9PARM      DS
      * N :  Hours USR
     I                                    P   1   30P9CWA1
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1HONB    PARM           WP0001  30       CC Company Numb
     C           P1ABCD    PARM           WP0002  6        PD Producer Cod
     C           P1DQDT    PARM           WP0003  70       BOLW Scale Weig
     C           P2B4DT    PARM           WP0004  70       Date To   USR
     C           P3P4ST    PARM           WP0005  1        Status 1
     C           P4IXST    PARM           WP0006  1        SR Type
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Prt Truck Scale Wgts  PF: Mainline
     C                     EXSR A0MAIN
      * Print headers then End of report format
     C                     EXSR Q0PRNT
     C                     WRITE$FENDRPT
      * Exit program
     C                     EXSR ZXEXPG
      * ------------------------------------------------------
      /EJECT
     CSR         A0MAIN    BEGSR
      *================================================================
      * Prt Truck Scale Wgts  PF: Mainline
      *================================================================
      * Declare restrictor key work fields
     C           *LIKE     DEFN EJHONB    WQKA01           CC Company Numb
      * Define keylist
     C           KPSA      KLIST
     C                     KFLD           WQKA01           CC Company Numb
     C                     KFLD           EJDQDT           BOLW Scale Weig
      * Define keylist
     C           KRSA      KLIST
     C                     KFLD           WQKA01           CC Company Numb
      * Setup key
     C                     Z-ADDP1HONB    WQKA01           CC Company Numb
     C                     Z-ADDP1DQDT    EJDQDT           BOLW Scale Weig
      * Establish starting position
     C           KPSA      SETLL@EJCPFX                    *
      * Read first record with user selection
     C                     EXSR A3READ
     C           W0EOFA    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0AL1P  1        First page
     C                     MOVEL'Y'       W0AL00  1        CC Company Numb
     C                     MOVEL'Y'       W0AL01  1        BOLW Scale Weig
     C                     MOVEL'Y'       W0AL02  1        PD Producer Cod
     C                     MOVEL'Y'       W0AL03  1        BOLW Scale Weig
     C                     MOVEL'Y'       W0AL04  1        BOLW Movement N
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      * Print report body
     C           W0EOFA    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR A1PHDR
      * Print report detail line
     C                     EXSR A2PDTL
      * Read next record with user selection
     C                     EXSR A3READ
      * Print totals
     C                     EXSR A4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         A0EXIT    ENDSR
      /EJECT
     CSR         A1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0AL1P    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP1P  1
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP00  1
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDEJHONB    $BHONB           CC Company Numb
     C                     Z-ADDEJDQDT    $BDQDT           BOLW Scale Weig
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP01  1
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDEJHONB    $CHONB           CC Company Numb
     C                     MOVEL*BLANK    $CBSTX           Name USR
     C                     Z-ADDEJDQDT    $CDQDT           BOLW Scale Weig
     C                     MOVELEJABCD    $CABCD           PD Producer Cod
     C                     MOVEL*BLANK    $CA4TX           Producer Name
      * Load related totals format
     C                     Z-ADDEJHONB    $EHONB           CC Company Numb
     C                     MOVELEJABCD    $EABCD           PD Producer Cod
     C                     Z-ADDEJBONB    $EBONB           BOL Load Number
     C                     Z-ADD*ZERO     $ELOAD           Load Number
     C                     Z-ADD*ZERO     $ECWA1           Hours USR
     C                     Z-ADD*ZERO     $ECVA1           Minutes USR
     C                     Z-ADD*ZERO     $EAAA1           Seconds USR
     C                     Z-ADD*ZERO     $ECXA1           Minutes Avg USR
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP02  1
     C                     END
      *
     C           W0AL03    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP03  1
     C                     END
      *
     C           W0AL04    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP04  1
     C                     END
      *
      *================================================================
     CSR         A1EXIT    ENDSR
      /EJECT
     CSR         A2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     Z-ADDEJHONB    $DHONB           CC Company Numb
     C                     MOVELEJABCD    $DABCD           PD Producer Cod
     C                     Z-ADDEJDQDT    $DDQDT           BOLW Scale Weig
     C                     Z-ADD*ZERO     $DKVA1           Movement # 8.0
     C                     Z-ADDEJBOMV    $DBOMV           BOLW Movement N
     C                     Z-ADDEJBNNB    $DBNNB           BOH Buy Order N
     C                     Z-ADDEJBONB    $DBONB           BOL Load Number
     C                     MOVELEJAECD    $DAECD           PL Location Cod
     C                     Z-ADD*ZERO     $DCGDT           Kill Date Usr
     C                     Z-ADD*ZERO     $DTHHD           TH HPS Farm Sit
     C                     MOVEL*BLANK    $DJ8CD           DT Driver
     C                     Z-ADD*ZERO     $DHRSB           Head Received S
     C                     Z-ADD*ZERO     $DLEA1           Head Received 3
     C                     Z-ADD*ZERO     $DCRA1           Dead On Arrival
     C                     Z-ADD*ZERO     $DLFA1           Head DOA 3.0 US
     C                     Z-ADD*ZERO     $DCSA1           Resale Head Rec
     C                     Z-ADD*ZERO     $DLGA1           Head Resale 3.0
     C                     Z-ADD*ZERO     $DWHNB           Yard Dead
     C                     Z-ADD*ZERO     $DLHA1           Head Yard Dead
     C                     MOVELEJSRST    $DSRST           BOLW Weight Typ
     C                     Z-ADDEJBOSW    $DBOSW           BOLW Scale Weig
     C                     Z-ADD*ZERO     $DCTA1           Weight Out USR
     C                     Z-ADD*ZERO     $DVBNB           Net Live Weight
     C                     Z-ADD*ZERO     $DOVNB           Avg Live Wgt Us
     C                     Z-ADDEJA2TM    $DA2TM           BOLW Scale Weig
     C                     Z-ADD*ZERO     $DB4DT           Date To   USR
     C                     Z-ADD*ZERO     $DA6TM           Time Out USR
     C                     Z-ADD*ZERO     $DA7TM           Time 6.0 USR
     C                     MOVEL*BLANK    $DPETX           Text 1
     C                     Z-ADD*ZERO     $DADTH           Time USR
     C                     Z-ADD*ZERO     $DAWTM           Time Diff Usr
     C                     MOVELEJSSST    $DSSST           BOLW Spread Sta
     C                     MOVELEJSTST    $DSTST           BOLW Unused Sts
     C                     MOVELEJSUST    $DSUST           BOLW Unused Sts
     C                     Z-ADDEJHMNB    $DHMNB           BOH Company Num
     C                     MOVELEJAAVN    $DAAVN           RS User Changed
     C                     Z-ADDEJAADT    $DAADT           RS Date Changed
     C                     Z-ADDEJAMTM    $DAMTM           RS Time Changed
     C                     MOVELEJAJST    $DAJST           RS Record Statu
     C                     MOVELEJAHVN    $DAHVN           RS Job
     C                     MOVELEJAGVN    $DAGVN           RS Program
     C                     MOVELEJABVN    $DABVN           RS User Added
     C                     Z-ADDEJABDT    $DABDT           RS Date Added
     C                     Z-ADDEJABTM    $DABTM           RS Time Added
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0APDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      * USER: Process after print of detail format
      * Accumulate Loads
     C                     ADD  1         P6LOAD           Load Number
     C                     Z-ADD*ZERO     YL0007           Seconds USR
     C                     ADD  YL0007    P7AAA1           Seconds USR
      * Accumulate Minutes
      * LCL.Minutes USR = CUR.Time Diff Usr *MINUTES
     C                     Z-ADD$DAWTM    XTTIM
     C                     Z-ADDXTNN      YL0008
     C                     ADD  YL0008    P8CVA1           Minutes USR
      * Accumulate Hours
      * LCL.Hours USR = CUR.Time Diff Usr *HOURS
     C                     Z-ADD$DAWTM    XTTIM
     C                     Z-ADDXTHH      YL0009
     C                     ADD  YL0009    P9CWA1           Hours USR
      * CASE: PAR.Status 1 is Yes
     C           P3P4ST    IFEQ 'Y'                        *IF
     C           $DADTH    MULT 100       YL0010           Time Total USR
      * Crt TrkScale Log OUTF CR - Truckscale Log OUTF  * 
     C                     EXSR SECRRC
     C                     END                             *FI
      *
      *================================================================
     CSR         A2EXIT    ENDSR
      /EJECT
     CSR         A3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN EJHONB    WZA001           CC Company Numb
     C                     Z-ADDEJHONB    WZA001
     C           *LIKE     DEFN EJDQDT    WZA002           BOLW Scale Weig
     C                     Z-ADDEJDQDT    WZA002
     C           *LIKE     DEFN EJABCD    WZA003           PD Producer Cod
     C                     MOVELEJABCD    WZA003
     C           *LIKE     DEFN EJA2TM    WZA004           BOLW Scale Weig
     C                     Z-ADDEJA2TM    WZA004
     C           *LIKE     DEFN EJBOMV    WZA005           BOLW Movement N
     C                     Z-ADDEJBOMV    WZA005
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFA    OREQ '1'
     C           KRSA      READE@EJCPFX                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFA  1
      * Quit if no record read
     C           W0EOFA    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
      * USER: Record selection processing
      * EOF:  Scale Date > To Date
      * CASE: DB1.BOLW Scale Weight Date GT PAR.Date To   USR
     C           EJDQDT    IFGT P2B4DT                     *IF
      * EOF File A            US - STR User Source Functions  * 
     C                     MOVEL'1'       W0EOFA           END OF FILE
     C                     END                             *FI
      * SEL:  Producer Code
      * CASE: PAR.PD Producer Code is Entered
     C           P1ABCD    IFNE *BLANK                     *IF
      * CASE: PAR.PD Producer Code NE DB1.PD Producer Code
     C           P1ABCD    IFNE EJABCD                     *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
      * SEL:  Source Type
      * CASE: PAR.SR Type is *ALL values
     C           P4IXST    IFEQ 'E'                        *IF
     C           P4IXST    OREQ 'I'
      * CASE: PAR.SR Type is External
     C           P4IXST    IFEQ 'E'                        *IF
      * CASE: DB1.PD Producer Code is SEABOA
     C           EJABCD    IFEQ @CN,002                    *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.SR Type is Internal
     C           P4IXST    IFEQ 'I'                        *IF
      * CASE: DB1.PD Producer Code is Not Seaboard
     C           EJABCD    IFNE @CN,002                    *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0AL00  1        CC Company Numb
     C                     MOVEL*BLANK    W0AL01  1        BOLW Scale Weig
     C                     MOVEL*BLANK    W0AL02  1        PD Producer Cod
     C                     MOVEL*BLANK    W0AL03  1        BOLW Scale Weig
     C                     MOVEL*BLANK    W0AL04  1        BOLW Movement N
     C           W0EOFA    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0AL00  1        CC Company Numb
     C                     MOVEL'Y'       W0AL01  1        BOLW Scale Weig
     C                     MOVEL'Y'       W0AL02  1        PD Producer Cod
     C                     MOVEL'Y'       W0AL03  1        BOLW Scale Weig
     C                     MOVEL'Y'       W0AL04  1        BOLW Movement N
     C                     ELSE
      * Next record - Detect level breaks
     C           EJHONB    IFNE WZA001                     CC Company Numb
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL00
     C                     END
     C           EJDQDT    IFNE WZA002                     BOLW Scale Weig
     C           W0AL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL01
     C                     END
     C           EJABCD    IFNE WZA003                     PD Producer Cod
     C           W0AL01    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL02
     C                     END
     C           EJA2TM    IFNE WZA004                     BOLW Scale Weig
     C           W0AL02    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL03
     C                     END
     C           EJBOMV    IFNE WZA005                     BOLW Movement N
     C           W0AL03    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL04
     C                     END
     C                     END
      *================================================================
     CSR         A3EXIT    ENDSR
      /EJECT
     CSR         A4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0AL04    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP04
     C                     END
      *
     C           W0AL03    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP03
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of PD Producer Code format
      * CUR = PAR By name
     C                     Z-ADDP1HONB    $EHONB           CC Company Numb
     C                     MOVELP1ABCD    $EABCD           PD Producer Cod
     C                     Z-ADDP6LOAD    $ELOAD           Load Number
     C                     Z-ADDP9CWA1    $ECWA1           Hours USR
     C                     Z-ADDP8CVA1    $ECVA1           Minutes USR
     C                     Z-ADDP7AAA1    $EAAA1           Seconds USR
      * Total Minutes
      * LCL.Minutes USR =
      *    *COMPUTE (x1 + (x2 * x3) + (x4 / x5))
      * x1    : CUR.Minutes USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : CUR.Hours USR
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : CON.60
      * +     : PGM.*Synon (15,0) work field
      * x4    : CUR.Seconds USR
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x5    : CON.60
     C           $ECWA1    MULT 60        W0WJ02           *Synon (15,0) w
     C           $ECVA1    ADD  W0WJ02    W0WJ01           *Synon (15,0) w
     C           $EAAA1    DIV  60        W0WJ03    H      *Synon (15,0) w
     C           W0WJ01    ADD  W0WJ03    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    YL0008           Minutes USR
     C           YL0008    DIV  P6LOAD    $ECXA1    H      Minutes Avg USR
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 4
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Print format
     C                     WRITE$EKEYTTL
     C                     END
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP02
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP01
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP00
     C                     END
      *
     C           W0EOFA    IFEQ '1'
     C                     END
      *
      *================================================================
     CSR         A4EXIT    ENDSR
      /EJECT
     CSR         Q0PRNT    BEGSR
      *================================================================
      * Print report formats
      *================================================================
      * Select formats to print
     C                     EXSR Q1FSEL
      * Calculate length of formats selected for printing
     C                     EXSR Q2PLEN
      * Add column heading length to print length
     C                     ADD  W0COLN    W0FSUM
     C           W0NEWP    IFNE 'Y'
      * Signal overflow if requested headings would cause
      * detail format to start past the overflow line
     C           W0FSUM    IFGT W0OFL
     C                     MOVE 'Y'       W0NEWP
     C                     ELSE
      * Signal overflow if requested headings would cause
      * Detail format to be printed past end of page
     C                     ADD  W0DTLN    W0FSUM
     C           W0FSUM    IFGT W0PGL
     C                     MOVE 'Y'       W0NEWP
     C                     END
     C                     END
     C                     END
      * Print Standard report header of Prt Truck Scale Wgts  PF
      * If it is ready to print, then do so,
     C           W0NEWP    IFEQ 'Y'                        IF
     C                     EXSR Q3PTNP
     C                     END                             FI
      *
      * Print First Page Format of Prt Truck Scale Wgts  PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP1P    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0AL1P
     C                     END                             FI
      * Print CC Company Number of Prt Truck Scale Wgts  PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP00    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP00
     C                     END                             FI
      * Print BOLW Scale Weight Date of Prt Truck Scale Wgts  PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP01    ANDEQ'P'
      * Mention hidden format
     C   99N99             WRITE$BKEYHDR
      * Reset format print flag
     C                     MOVE *BLANK    W0AP01
     C                     END                             FI
      * Print PD Producer Code of Prt Truck Scale Wgts  PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP02    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP02    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of PD Producer Code format
     C                     MOVEL*BLANK    $CBSTX           Name USR
     C                     MOVELP5EUTX    $CBSTX           Name USR
     C                     MOVEL*BLANK    $CA4TX           Producer Name
      * Producer Name         DRV
      * Rtv Producer Name     RT - Producer  * 
     C                     EXSR SARVGN
     C                     Z-ADD*ZERO     P6LOAD           Load Number
     C                     Z-ADD*ZERO     P7AAA1           Seconds USR
     C                     Z-ADD*ZERO     P8CVA1           Minutes USR
     C                     Z-ADD*ZERO     P9CWA1           Hours USR
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert BOLW Scale Weight Date to display format
      * Convert date
     C           1000000   ADD  $CDQDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCDQDT
      * Print format
     C                     WRITE$CKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP02
     C                     END                             FI
      * Print BOLW Scale Weight Time of Prt Truck Scale Wgts  PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP03    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP03    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP03
     C                     END                             FI
      * Print BOLW Movement Number of Prt Truck Scale Wgts  PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP04    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP04    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP04
     C                     END                             FI
      * Print Detail line. of Prt Truck Scale Wgts  PF
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0ACDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0APDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0APDT    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of detail format
      * Rtv Movement Info     RT - Tattoo Header  * 
     C                     EXSR SBRVGN
     C                     Z-ADD$DHRSB    $DLEA1           Head Received 3
     C                     Z-ADD$DCRA1    $DLFA1           Head DOA 3.0 US
     C                     Z-ADD$DCSA1    $DLGA1           Head Resale 3.0
     C                     Z-ADD$DWHNB    $DLHA1           Head Yard Dead
      * Rtv Time Out/Tare Wgt RT - Buy Order Load Weight  * 
     C                     EXSR SCRVGN
     C           $DBOSW    SUB  $DCTA1    $DVBNB           Net Live Weight
      * CASE: CUR.Head Received 3.0 USR is Entered
     C           $DLEA1    IFGT *ZERO                      *IF
     C           $DVBNB    DIV  $DLEA1    $DOVNB    H      Avg Live Wgt Us
     C                     END                             *FI
      * CASE: CUR.PD Producer Code is SEABOA
     C           $DABCD    IFEQ @CN,002                    *IF
     C                     MOVEL*BLANK    $DAECD           PL Location Cod
     C                     MOVEL$DTHHD    $DAECD           PL Location Cod
     C                     END                             *FI
      * *-------------------------------------------------------------*
      * 11/12/03 PKD Print Actual Unload Time instead of the Standard.
      *              Print the driver from the tracking files also.
      * Rtv Driver, Unload Tm RT - Delivery Tracking  * 
     C                     EXSR SDRVGN
     C           YL0004    MULT 100       $DA7TM           Time 6.0 USR
      * CASE: CUR.Time 6.0 USR is EQ Zero
     C           $DA7TM    IFEQ *ZERO                      *IF
     C                     MOVEL'*'       $DPETX           Text 1
     C                     Z-ADD001500    $DA7TM           Time 6.0 USR
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    $DPETX           Text 1
     C                     END                             *FI
      * LCL.Time 6.0 USR = CUR.BOLW Scale Weight Time + CUR.Time 6.0 USR
     C                     Z-ADD$DA2TM    XTTIM
     C                     Z-ADD*ZERO     XASC    80
     C                     EXSR XTAD1
     C                     Z-ADD$DA7TM    XTTIM
     C                     EXSR XTAD1
     C                     EXSR XTCT1
     C                     Z-ADDXTTIM     YL0005
      * *-------------------------------------------------------------*
      *
     C                     Z-ADD*ZERO     WN0001  80       *Duration (resu
      *
      * Time Elapsed          IF
      * PAR.*Duration (result) = PAR.Date End USR - PAR.Date Beg USR *DAY
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C           $DDQDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C           $DB4DT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
      * Negative duration, when date1<date2
     C           XDAY1     IFGE XDAY2
     C                     Z-ADDXDURR     WN0001
     C                     ELSE
     C           XDURR     MULT -1        WN0001
     C                     END
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.*Duration (result) is GT Zero
      *   |- c2    : PAR.Time Beg USR GT PAR.Time End USR
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0001    IFGT 0                          *IF
     C           YL0005    IFGT $DA6TM                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * PAR.Elapsed Time USR = CON.240000 - PAR.Time Beg USR *HHMMSS
     C                     Z-ADDYL0005    XTTIM2
     C                     Z-ADD240000    XTTIM
     C                     EXSR XTCEL
     C           XTHH      MULT 100       $DAWTM
     C                     ADD  XTNN      $DAWTM
     C                     MULT 100       $DAWTM
     C                     ADD  XTSS      $DAWTM
     C                     MULT XSGN      $DAWTM
      * LCL.Elapsed Time USR = PAR.Time End USR - CON.*ZERO *HHMMSS
     C                     Z-ADD000000    XTTIM2
     C                     Z-ADD$DA6TM    XTTIM
     C                     EXSR XTCEL
     C           XTHH      MULT 100       YL0006
     C                     ADD  XTNN      YL0006
     C                     MULT 100       YL0006
     C                     ADD  XTSS      YL0006
     C                     MULT XSGN      YL0006
      * PAR.Elapsed Time USR = PAR.Elapsed Time USR + LCL.Elapsed Time US
     C                     Z-ADD$DAWTM    XTTIM
     C                     Z-ADD*ZERO     XASC    80
     C                     EXSR XTAD1
     C                     Z-ADDYL0006    XTTIM
     C                     EXSR XTAD1
     C                     EXSR XTCT1
     C                     Z-ADDXTTIM     $DAWTM
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.Time Beg USR GT PAR.Time End USR
     C           YL0005    IFGT $DA6TM                     *IF
     C                     Z-ADD*ZERO     $DAWTM           Elapsed Time US
     C                     ELSE
      * CASE: *OTHERWISE
      * PAR.Elapsed Time USR = PAR.Time End USR - PAR.Time Beg USR *HHMMS
     C                     Z-ADDYL0005    XTTIM2
     C                     Z-ADD$DA6TM    XTTIM
     C                     EXSR XTCEL
     C           XTHH      MULT 100       $DAWTM
     C                     ADD  XTNN      $DAWTM
     C                     MULT 100       $DAWTM
     C                     ADD  XTSS      $DAWTM
     C                     MULT XSGN      $DAWTM
     C                     END                             *FI
     C                     END                             *FI
      * CUR.Time USR = CUR.Time Diff Usr *HHMM
     C                     Z-ADD$DAWTM    XTTIM
     C           XTTIM     DIV  100       $DADTH
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert BOLW Scale Weight Date to display format
      * Convert date
     C           1000000   ADD  $DDQDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VDDQDT
      * Print column headings if required
     C           W0ACDT    IFEQ 'Y'
     C                     WRITE$DCOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0ACDT
     C                     END                             FI
      * Print format
     C                     WRITE$DDTLRCD
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0APDT
     C                     END                             FI
      * Clear new page flag
     C                     MOVE *BLANK    W0NEWP
      *================================================================
     CSR         Q0EXIT    ENDSR
      /EJECT
     CSR         Q1FSEL    BEGSR
      *================================================================
      * Format select
      *================================================================
     C                     MOVEL*BLANK    W0SKP   1
      * Cascade skip to new page requests upwards
     C           W0AP02    IFEQ 'Y'
     C                     MOVEL'Y'       W0SKP
     C                     END
      * Request new page if required
     C           W0SKP     IFEQ 'Y'                        IF
     C                     MOVE 'Y'       W0NEWP
     C                     END                             FI
      *================================================================
     CSR         Q1EXIT    ENDSR
      /EJECT
     CSR         Q2PLEN    BEGSR
      *================================================================
      * Evaluate print length
      *================================================================
     C           *LIKE     DEFN @$CLN     W0FSUM
     C           *LIKE     DEFN @$CLN     W0DTLN
     C           *LIKE     DEFN @$CLN     W0COLN
     C                     Z-ADD@$CLN     W0FSUM
     C                     Z-ADD*ZERO     W0DTLN
     C                     Z-ADD*ZERO     W0COLN
      * * First Page Format of Prt Truck Scale Wgts  PF
     C           W0AP1P    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * CC Company Number of Prt Truck Scale Wgts  PF
     C           W0AP00    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * BOLW Scale Weight Date of Prt Truck Scale Wgts  PF
     C           W0AP01    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * PD Producer Code of Prt Truck Scale Wgts  PF
     C           W0AP02    IFEQ 'Y'
     C                     ADD  3         W0FSUM
     C                     END                             FI
      *
      * * BOLW Scale Weight Time of Prt Truck Scale Wgts  PF
     C           W0AP03    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * BOLW Movement Number of Prt Truck Scale Wgts  PF
     C           W0AP04    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of Prt Truck Scale Wgts  PF
     C           W0APDT    IFEQ 'Y'
     C                     Z-ADD1         W0DTLN
     C           W0ACDT    IFEQ 'Y'
     C                     Z-ADD4         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      *================================================================
     CSR         Q2EXIT    ENDSR
      /EJECT
     CSR         Q3PTNP    BEGSR
      *================================================================
      * Format select
      *================================================================
     C                     WRITE$APAGHDR
      * Clear page overflow indicator
     C                     SETOF                     97    *
      *================================================================
     CSR         Q3EXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Rtv Producer Name     RT - Producer  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           ACABCD           PD Producer Cod
      * Setup key
     C                     MOVEL$CABCD    ACABCD           PD Producer Cod
      * Establish starting position
     C           KRSSA     CHAIN@ACREAI              90    *
      * Data record not found
     C   90                MOVEL'PRK0009' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELACAGTX    $CA4TX           PD Name
     C                     ENDIF
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * Rtv Movement Info     RT - Tattoo Header  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     $DHRSB           Head Received S
     C                     Z-ADD*ZERO     $DCRA1           Dead On Arrival
     C                     Z-ADD*ZERO     $DCSA1           Resale Head Rec
     C                     Z-ADD*ZERO     $DWHNB           Yard Dead
     C                     Z-ADD*ZERO     $DTHHD           TH HPS Farm Sit
     C                     Z-ADD*ZERO     $DCGDT           Kill Date Usr
     C                     MOVEL'Y'       YL0002           First Time Flag
      * E2423 Mtech Live or Not Live *** Interfaces to HPS ***
      * Get the MTech Live Yes or No
     C                     EXSR UASUBR                     Get the MTech L
      * Declare restrictor key work fields
     C           *LIKE     DEFN A1HMNB    WQSB01           BOH Company Num
     C           *LIKE     DEFN A1BNNB    WQSB02           BOH Buy Order N
     C           *LIKE     DEFN A1BONB    WQSB03           BOL Load Number
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           BOH Company Num
     C                     KFLD           WQSB02           BOH Buy Order N
     C                     KFLD           WQSB03           BOL Load Number
      * Setup key
     C                     Z-ADD$DHMNB    WQSB01           BOH Company Num
     C                     Z-ADD$DBNNB    WQSB02           BOH Buy Order N
     C                     Z-ADD$DBONB    WQSB03           BOL Load Number
      * Establish starting position
     C           KRSSB     SETLL@A1CPC4                    *
     C           KRSSB     READE@A1CPC4                  90*
      * Data record not found
     C   90                MOVEL'PRK0061' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: LCL.First Time Flag Usr is Yes
     C           YL0002    IFEQ 'Y'                        *IF
      * CASE: LCL.MTech Live Yes or No is No MTech not Live
     C           YL0003    IFEQ 'N'                        *IF
      * CASE: DB1.TH HPS Farm Site is *Zeros
     C           A1THHD    IFEQ 0                          *IF
      * Z1v HPS Farm Info     UP - STR HPS Interface  * 
     C                     CALL 'HP249'                90  Z1v HPS Farm In
     C           W0RTN     PARM W0RTN     WQ0013  7        *Return code
     C                     PARM A1OXNB    WQ0014  70       TH HPS Movement
     C           WUKQTX    PARM *BLANK    WQ0015 25        Farm site Name
     C           $DTHHD    PARM *ZERO     WQ0016  50       Farm Site USR
     C           WUG4CD    PARM *BLANK    WQ0017  5        HPS FS Comp Rel
     C           WUDRTX    PARM *BLANK    WQ0018  3        State
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'HP249'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     END
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDA1THHD    $DTHHD           TH HPS Farm Sit
     C                     END                             *FI
     C                     ELSE
      * CASE: LCL.MTech Live Yes or No is Yes MTech is Live
     C           YL0003    IFEQ 'Y'                        *IF
     C                     Z-ADDA1THHD    $DTHHD           TH HPS Farm Sit
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADDA1B0DT    $DCGDT           Kill Date Usr
     C                     MOVEL'N'       YL0002           First Time Flag
     C                     END                             *FI
     C                     ADD  A1CWNB    $DHRSB           Head Received S
     C                     ADD  A1CXNB    $DCRA1           Dead On Arrival
     C                     ADD  A1FCNB    $DWHNB           Yard Dead
      * CASE: DB1.TH Hog Class Type is Resale
     C           A1LLST    IFEQ 'R'                        *IF
     C                     ADD  A1CWNB    $DCSA1           Resale Head Rec
     C                     END                             *FI
     C           KRSSB     READE@A1CPC4                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * Rtv Time Out/Tare Wgt RT - Buy Order Load Weight  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           WAHONB           CC Company Numb
     C                     KFLD           WAABCD           PD Producer Cod
     C                     KFLD           WAAECD           PL Location Cod
     C                     KFLD           WABOMV           BOLW Movement N
     C                     KFLD           WASRST           BOLW Weight Typ
      * Setup key
     C                     Z-ADD$DHONB    WAHONB           CC Company Numb
     C                     MOVEL$DABCD    WAABCD           PD Producer Cod
     C                     MOVEL$DAECD    WAAECD           PL Location Cod
     C                     Z-ADD$DBOMV    WABOMV           BOLW Movement N
     C                     MOVEL'O'       WASRST           BOLW Weight Typ
      * Establish starting position
     C           KRSSC     CHAIN@EJCPBI              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0841' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     $DCTA1           BOLW Scale Weig
     C                     Z-ADD*ZERO     $DB4DT           BOLW Scale Weig
     C                     Z-ADD*ZERO     $DA6TM           BOLW Scale Weig
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWABOSW    $DCTA1           BOLW Scale Weig
     C                     Z-ADDWADQDT    $DB4DT           BOLW Scale Weig
     C                     Z-ADDWAA2TM    $DA6TM           BOLW Scale Weig
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * Rtv Driver, Unload Tm RT - Delivery Tracking  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN AFHMNB    WQSD01           BOH Company Num
     C           *LIKE     DEFN AFBNNB    WQSD02           BOH Buy Order N
     C           *LIKE     DEFN AFBONB    WQSD03           BOL Load Number
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           WQSD01           BOH Company Num
     C                     KFLD           WQSD02           BOH Buy Order N
     C                     KFLD           WQSD03           BOL Load Number
      * Setup key
     C                     Z-ADD$DHMNB    WQSD01           BOH Company Num
     C                     Z-ADD$DBNNB    WQSD02           BOH Buy Order N
     C                     Z-ADD$DBONB    WQSD03           BOL Load Number
      * Establish starting position
     C           KRSSD     SETLL@AFCPI4                    *
     C           KRSSD     READE@AFCPI4                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK1030' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $DJ8CD           DT Driver
     C                     Z-ADD*ZERO     YL0004           DT Unload Time
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELAFJ8CD    $DJ8CD           DT Driver
     C                     Z-ADDAFA4TH    YL0004           DT Unload Time
     C           KRSSD     READE@AFCPI4                  90*
     C                     ENDDO
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SECRRC    BEGSR
      *================================================================
      * Crt TrkScale Log OUTF CR - Truckscale Log OUTF  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move all fields to @FGCPHJ
     C                     Z-ADD$DHONB    FGHONB           CC Company Numb
     C                     Z-ADD$DBNNB    FGBNNB           BOH Buy Order N
     C                     Z-ADD$DBONB    FGBONB           BOL Load Number
     C                     Z-ADD$DDQDT    FGEYDT           Scale Date
     C                     Z-ADD$DBOMV    FGOXNB           TH HPS Movement
     C                     Z-ADD$DTHHD    FGTHHD           TH HPS Farm Sit
     C                     MOVEL$DJ8CD    FGJ8CD           DT Driver
     C                     Z-ADD$DHRSB    FGCWNB           TH Head Receive
     C                     Z-ADD$DCRA1    FGCXNB           TH Dead On Arri
     C                     Z-ADD$DCSA1    FGHHA1           Resale Head
     C                     Z-ADD$DWHNB    FGFCNB           TH Yard Deads
     C                     Z-ADD$DBOSW    FGHIA1           Gross Weight
     C                     Z-ADD$DA2TM    FGBGTM           Weigh Time In
     C                     Z-ADD$DCTA1    FGHJA1           Tare Weight
     C                     Z-ADD$DA6TM    FGBHTM           Weigh Time Out
     C                     Z-ADD$DA7TM    FGBITM           Standard Unload
     C                     Z-ADDYL0010    FGBJTM           Wait Time
      *
     C           KLCRSE    KLIST
     C                     KFLD           FGHONB           CC Company Numb
     C                     KFLD           FGBNNB           BOH Buy Order N
     C                     KFLD           FGBONB           BOL Load Number
      * Check for duplicate primary key
     C           KLCRSE    SETLL@FGCPHJ                  90*
     C           *IN90     IFEQ '1'
     C                     MOVEL'PRK1007' W0RTN   7
      * Send message 'Truckscale Log OUTF    EX'
     C                     MOVEL'PRK1007' ZAMSID
     C                     EXSR ZASNMS
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C                     WRITE@FGCPHJ                91  *
      *
     C           *IN91     IFEQ '1'
      * Write error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Get the MTech Live Yes or No
      *================================================================
      * Mtech Live Yes or no
      * Rtv Company Values    XF - STR Order Management Sys  * 
     C                     CALL 'PDGKXFR'              90  Rtv Company Val
     C                     PARM *BLANK    W0RTN   7
     C                     PARM $DHMNB    WQ0010  30       BOH Company Num
     C                     PARM @CN,001   WQ0011 10        Company Value C
     C           WUKBTX    PARM *BLANK    WQ0012 40        System Value Al
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDGKXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     MOVELWUKBTX    YL0003           MTech Live Yes
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         XCVTA     BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C           XDINYY    SUB  1         XDWK1   80
     C           XDWK1     MULT 365.25    XDAY1   60
     C           XDWK1     IFGE 300
     C                     SUB  2         XDAY1
     C                     ELSE
     C           XDWK1     IFGE 100
     C                     SUB  1         XDAY1
     C                     END
     C                     END
      * (from the beginning of the year to the beginning of the month:)
     C           XDINMM    SUB  1         XDWK1
     C           XDINMM    IFLT 3
      *     ...+31*(MM-1) (for January-February) ...
     C                     MULT 31        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                     MULT 30        XDWK1
     C                     ADD  XDWK1     XDAY1
      *         ...-2 (for preceding February) ...
     C                     SUB  2         XDAY1
     C           XDINYY    IFNE 100
     C           XDINYY    ANDNE300
      *         ...+1 (for preceding February, if leap year) ...
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     ADD  1         XDAY1
     C                     END
     C                     END
     C           XDINMM    IFLT 8
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C           XDINMM    MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C           XDINMM    ADD  1         XDWK1
     C                     MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     END
     C                     END
      * ...+DD (days in the month up to the ending date)
     C                     ADD  XDINDD    XDAY1
      *================================================================
     CSR         XCVTAE    ENDSR
      /EJECT
     CSR         XDOWS     BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                     MOVEAXDCDW     YDOW
     C                     Z-ADD0         XDWSL   10
     C                     Z-ADD1         YY
     C           YY        DOWLE7
     C           YDOW,YY   IFEQ XDSEL
     C                     ADD  1         XDWSL
     C                     END
     C                     ADD  1         YY
     C                     END
      *================================================================
     CSR         XDOWSE    ENDSR
      /EJECT
     CSR         XDUDY     BEGSR
      *================================================================
      * Calculate duration, *DAYS
      *================================================================
     C           XDAY1     IFLT 1
     C           XDAY2     ORLT 1
     C                     Z-ADD0         XDURR
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     GOTO XDUDYE
     C                     END
     C           XDAY1     IFGE XDAY2
      * From date2 to date1
     C                     Z-ADDXDAY2     XABEG   60
     C                     Z-ADDXDAY1     XAEND   60
     C                     ELSE
      * From date1 to date2
     C                     Z-ADDXDAY1     XABEG   60
     C                     Z-ADDXDAY2     XAEND   60
     C                     END
     C           XDWSL     IFEQ 0
      * None days of week selected
     C                     Z-ADD0         XDURR
     C                     GOTO XDUDYC
     C                     END
     C           XAEND     SUB  XABEG     XDURR   80
     C           XDWSL     IFEQ 7
      * All days of week selected
     C                     GOTO XDUDYC
     C                     END
      * Some days of week selected
     C                     DIV  7         XDURR
     C                     MVR            XDLSW   10
     C                     MULT XDWSL     XDURR
     C           XDLSW     IFNE 0
      * Determine day of week of the beginning date
     C           XABEG     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
      * Loop: Increment the date by the last week
     C           XDLSW     DOWGT0
      * Increment the day of week
     C                     ADD  1         YY
     C                     SUB  1         XDLSW
      * Put day of week into the range 1-7
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     END
      * Selected day of the last week has been processed
     C           YDOW,YY   IFEQ XDSEL
      * Increment duration
     C                     ADD  1         XDURR
     C                     END
      * End of loop
     C                     END
     C                     END
     C           XDUDYC    TAG
     C           XDURR     IFEQ 0
      * Return Code: Unable to calculate duration
     C                     MOVEL'Y2U0060' W0RTN   7
     C                     ELSE
     C                     MOVEL*BLANK    W0RTN   7
     C                     END
      *================================================================
     CSR         XDUDYE    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         XTAD1     BEGSR
      *================================================================
      * Add TME to absolute time (seconds)
      *================================================================
     C           XTHH      MULT 3600      XDWK1   80
     C                     ADD  XDWK1     XASC
     C           XTNN      MULT 60        XDWK1
     C                     ADD  XDWK1     XASC
     C                     ADD  XTSS      XASC
      *================================================================
     CSR         XTAD1E    ENDSR
      /EJECT
     CSR         XTCEL     BEGSR
      *================================================================
      * Calculate elapsed time from TME2 to TME1
      *================================================================
     C           XTTIM     IFGE XTTIM2
     C                     Z-ADD1         XSGN    10
     C                     Z-ADDXTNN      XTNNL   30
     C                     Z-ADDXTSS      XTSSL   30
     C           XTSSL     IFLT XTSS2
     C                     ADD  60        XTSSL
     C                     SUB  1         XTNNL
     C                     END
     C           XTSSL     SUB  XTSS2     XTSS
     C           XTNNL     IFLT XTNN2
     C                     ADD  60        XTNNL
     C                     SUB  1         XTHH
     C                     END
     C           XTNNL     SUB  XTNN2     XTNN
     C                     SUB  XTHH2     XTHH
     C                     ELSE
     C                     Z-ADD-1        XSGN
     C                     Z-ADDXTNN2     XTNNL
     C                     Z-ADDXTSS2     XTSSL
     C           XTSSL     IFLT XTSS
     C                     ADD  60        XTSSL
     C                     SUB  1         XTNNL
     C                     END
     C           XTSSL     SUB  XTSS      XTSS
     C           XTNNL     IFLT XTNN
     C                     ADD  60        XTNNL
     C                     SUB  1         XTHH2
     C                     END
     C           XTNNL     SUB  XTNN      XTNN
     C           XTHH2     SUB  XTHH      XTHH
     C                     END
      *================================================================
     CSR         XTCELE    ENDSR
      /EJECT
     CSR         XTCT1     BEGSR
      *================================================================
      * Convert absolute time (seconds) to TME
      *================================================================
     C                     EXSR XTFCT
     C           XASC      DIV  60        XASC
     C                     MVR            XTSS
     C           XASC      DIV  60        XASC
     C                     MVR            XTNN
     C                     Z-ADDXASC      XTHH
      *================================================================
     CSR         XTCT1E    ENDSR
      /EJECT
     CSR         XTFCT     BEGSR
      *================================================================
      * Factorize absolute date (seconds) by 24 hours
      *================================================================
     C           XASC      IFGE 86400
     C                     DIV  86400     XASC    80
     C                     MVR            XASC
     C                     ELSE
     C           XASC      IFLE *ZERO
     C                     DIV  86400     XASC
     C                     MVR            XASC
     C           XASC      IFNE *ZERO
     C                     ADD  86400     XASC
     C                     END
     C                     END
     C                     END
      *================================================================
     CSR         XTFCTE    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Copy any undisplayed messages back to caller
     C                     CALL 'Y2CPMSC'
     C                     PARM           ##PGM
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     MOVEL*BLANK    P5J8NB           Oms Warehouse C
     C                     MOVEL*BLANK    P5C7CD           Oms Application
     C                     MOVEL*BLANK    P5C8CD           Oms SalesPerson
     C                     MOVEL*BLANK    P5G8ST           Oms Allow Multi
     C                     MOVEL*BLANK    P5G9ST           Oms Default Pri
     C                     MOVEL*BLANK    P5EUTX           Oms Name
     C                     MOVEL*BLANK    P5EVTX           Oms System Valu
     C                     MOVEL*BLANK    P5HAST           Oms Access Deni
     C                     Z-ADD*ZERO     P6LOAD           Load Number
     C                     Z-ADD*ZERO     P7AAA1           Seconds USR
     C                     Z-ADD*ZERO     P8CVA1           Minutes USR
     C                     Z-ADD*ZERO     P9CWA1           Hours USR
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Obtain default message file
     C           *NAMVAR   DEFN PKMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    EJHONB           CC Company Numb
     C                     MOVEL*LOVAL    EJDQDT           BOLW Scale Weig
     C                     MOVEL*LOVAL    EJABCD           PD Producer Cod
     C                     MOVEL*LOVAL    EJA2TM           BOLW Scale Weig
     C                     MOVEL*LOVAL    EJBOMV           BOLW Movement N
      * Define work field System Value Alpha    USR
     C                     MOVEL*BLANK    WUKBTX 40
      * Define work field Farm site Name f/ HPS USR
     C                     MOVEL*BLANK    WUKQTX 25
      * Define work field HPS FS Comp Relation USR
     C                     MOVEL*BLANK    WUG4CD  5
      * Define work field State
     C                     MOVEL*BLANK    WUDRTX  3
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAHONB           CC Company Numb
     C                     Z-ADD*ZERO     WABOMV           BOLW Movement N
     C                     Z-ADD*ZERO     WABOSW           BOLW Scale Weig
     C                     Z-ADD*ZERO     WADQDT           BOLW Scale Weig
     C                     Z-ADD*ZERO     WAA2TM           BOLW Scale Weig
     C                     Z-ADD*ZERO     WAHMNB           BOH Company Num
     C                     Z-ADD*ZERO     WABNNB           BOH Buy Order N
     C                     Z-ADD*ZERO     WABONB           BOL Load Number
     C                     Z-ADD*ZERO     WAAADT           RS Date Changed
     C                     Z-ADD*ZERO     WAAMTM           RS Time Changed
     C                     Z-ADD*ZERO     WAABDT           RS Date Added
     C                     Z-ADD*ZERO     WAABTM           RS Time Added
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    W0WJ02 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WJ01 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WJ03 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WJ00 150       *Synon (15,0) w
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'N'       W0PMT   1
      * Define local work field CC Company Number
     C                     Z-ADD*ZERO     YL0001  30
      * Define local work field First Time Flag Usr
     C                     MOVEL*BLANK    YL0002  1
      * Define local work field MTech Live Yes or No
     C                     MOVEL*BLANK    YL0003  1
      * Define local work field Time USR
     C                     Z-ADD*ZERO     YL0004  40
      * Define local work field Time 6.0 USR
     C                     Z-ADD*ZERO     YL0005  60
      * Define local work field Elapsed Time USR
     C                     Z-ADD*ZERO     YL0006  60
      * Define local work field Seconds USR
     C                     Z-ADD*ZERO     YL0007  70
      * Define local work field Minutes USR
     C                     Z-ADD*ZERO     YL0008  50
      * Define local work field Hours USR
     C                     Z-ADD*ZERO     YL0009  50
      * Define local work field Time Total USR
     C                     Z-ADD*ZERO     YL0010  60
      * Declare initial value data areas
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   $ACMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL##PGM     $APGM
     C                     MOVEL##USR     $AUSR
     C                     MOVEL*BLANK    W0PFM   1
     C                     Z-ADD*ZERO     @$WRK   40
     C                     Z-ADD*ZERO     @$HDL   40
     C                     Z-ADD*ZERO     @$CLN
     C                     Z-ADD*ZERO     @$PGN
      * Adjust page length and overflow as necessary
     C           @$PGL     SUB  2         W0PGL   40
     C           @$OFL     IFGE W0PGL
     C           W0PGL     SUB  2         W0OFL   40
     C                     ELSE
     C                     Z-ADD@$OFL     W0OFL
     C                     END
      * Clear overflow indicator
     C                     SETOF                     97
      * Request new page
     C                     MOVEL'Y'       W0NEWP  1
      * USER: Initialize program
      * H16853 ISE 01/23/2021 - Increased the length from 5 to 7 and
      *                         corrected the alignment of Buy Order Numb
      * Val Appl/User Only    IF
      * Val Application/User  XF - STR Order Management Sys  * 
     C                     CALL 'PDGXXFR'              90  Val Application
     C                     PARM *BLANK    W0RTN   7
     C           P5J8NB    PARM *BLANK    WQ0001  3        Oms Warehouse C
     C           YL0001    PARM *ZERO     WQ0002  30       CC Company Numb
     C                     PARM 'HPE'     WQ0003  6        Oms Application
     C           P5C8CD    PARM *BLANK    WQ0004  3        Oms SalesPerson
     C           P5G8ST    PARM *BLANK    WQ0005  1        Oms Allow Multi
     C           P5G9ST    PARM *BLANK    WQ0006 10        Oms Default Pri
     C           P5EUTX    PARM *BLANK    WQ0007 30        Oms Name
     C           P5EVTX    PARM *BLANK    WQ0008 40        Oms System Valu
     C           P5HAST    PARM *BLANK    WQ0009  1        Oms Access Deni
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDGXXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PAR.Oms Access Denied (Y/N) is Yes
     C           P5HAST    IFEQ 'Y'                        *IF
      * Send message 'Access Denied for User'
     C                     MOVEL'PRK0298' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     END                             *FI
      * Mov ApplN to Co-PRINT US - STR User Source Functions  * 
     C***   MOVE USER SOURCE                      ***
     C                     MOVELP5EVTX    $ACMP
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      *================================================================
     CSR         ZZEXIT    ENDSR
** @CN
00001 MTECHLIVE
00002 SEABOA
