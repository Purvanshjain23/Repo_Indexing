// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDYAE1R
// ?Date: 14.08.2025 Time: 03:30:35
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv and Center Hdg IF) TYPE(EXCINTFUN)                     AC1258539;
PARAMETER('OMS');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


//?USER: Initialize key screen

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(KEY.Company_Number);
PARAMETER(KEY.Company_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?USER: Validate key screen

//?Select Company Number
CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

// AND PGM.*Cursor field <IS> KEY.Company Number
AND PGM.*Cursor_field = KEY.Company_Number;

// Call program SEL Co By Number       SR.
CALL PROGRAM(SEL Co By Number       SR) ('PDMESRR');
PARAMETER(KEY.Company_Number);
PARAMETER(KEY.Company_Name);

ENDIF;

//?USER: Initialize detail screen (new record)

// DTL.Record Status = CND.Active
DTL.Record_Status = 'A';

//?USER: Initialize detail screen (existing record)

// DTL.USR Description - 15 = Condition name of DTL.Financial Type
DTL.USR_Description_15 = RTVCND(DTL.Financial_Type);

// DTL.USR Record Status Desc = Condition name of DTL.Record Status
DTL.USR_Record_Status_Desc = RTVCND(DTL.Record_Status);

// Call program Val G/L Act Cde 2 HPE XF.
CALL PROGRAM(Val G/L Act Cde 2 HPE XF) ('PKVBXFR');
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.G_L_Code_Dr);
PARAMETER(DTL.G_L_Code_Desc_USR);
PARAMETER(WRK.G_L_Account_Id_USR);
PARAMETER('OMS');
PARAMETER(WRK.G_L_Account_Type_2_USR);
PARAMETER(WRK.Record_Found_USR);

// Call program Val G/L Act Cde 2 HPE XF.
CALL PROGRAM(Val G/L Act Cde 2 HPE XF) ('PKVBXFR');
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.G_L_Code_Cr);
PARAMETER(DTL.USR_G_L_Account_Desc);
PARAMETER(WRK.G_L_Account_Id_USR);
PARAMETER('OMS');
PARAMETER(WRK.G_L_Account_Type_2_USR);
PARAMETER(WRK.Record_Found_USR);

// DTL.Company Name = KEY.Company Name
DTL.Company_Name = KEY.Company_Name;

//?USER: Process key screen request

CASE;

// IF PGM.*Program mode is *CHANGE
IF PGM.*Program_mode = 'CHG';

// Send error message - 'Function not allowed.'
ERROR(USR1833);

QUIT;

ENDIF;

//?USER: Validate detail screen fields

//?Select G/L Code Dr
CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

// AND PGM.*Cursor field <IS> DTL.G/L Code Dr
AND PGM.*Cursor_field = DTL.G_L_Code_Dr;

// Call program Sel G/L Act Cde 2 HPE XF.
CALL PROGRAM(Sel G/L Act Cde 2 HPE XF) ('PKVCSRR');
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.G_L_Code_Dr);
PARAMETER(DTL.G_L_Code_Desc_USR);
PARAMETER(WRK.G_L_Account_Id_USR);
PARAMETER('OMS');
PARAMETER(WRK.G_L_Account_Type_2_USR);

ENDIF;

//?Select G/L Code Cr
CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

// AND PGM.*Cursor field <IS> DTL.G/L Code Cr
AND PGM.*Cursor_field = DTL.G_L_Code_Cr;

// Call program Sel G/L Act Cde 2 HPE XF.
CALL PROGRAM(Sel G/L Act Cde 2 HPE XF) ('PKVCSRR');
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.G_L_Code_Cr);
PARAMETER(DTL.USR_G_L_Account_Desc);
PARAMETER(WRK.G_L_Account_Id_USR);
PARAMETER('OMS');
PARAMETER(WRK.G_L_Account_Type_2_USR);

ENDIF;

//?USER: Validate detail screen relations

// DTL.USR Description - 15 = Condition name of DTL.Financial Type
DTL.USR_Description_15 = RTVCND(DTL.Financial_Type);

// DTL.USR Record Status Desc = Condition name of DTL.Record Status
DTL.USR_Record_Status_Desc = RTVCND(DTL.Record_Status);

//?Validate G/L Code Dr
CASE;

// IF DTL.G/L Code Dr is Entered
IF DTL.G_L_Code_Dr <> *BLANK;

// Call program Val G/L Act Cde 2 HPE XF.
CALL PROGRAM(Val G/L Act Cde 2 HPE XF) ('PKVBXFR');
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.G_L_Code_Dr);
PARAMETER(DTL.G_L_Code_Desc_USR);
PARAMETER(WRK.G_L_Account_Id_USR);
PARAMETER('OMS');
PARAMETER(WRK.G_L_Account_Type_2_USR);
PARAMETER(WRK.Record_Found_USR);

CASE;

// IF WRK.Record Found USR is Record Not Found
IF WRK.Record_Found_USR = 'N';

// Send error message - 'G/L Code &2 entry is invalid.'
ERROR(USR2131);
MSGPARM(DTL.G_L_Code_Dr);
MSGPARM('DR');

ENDIF;

ENDIF;

//?Validate G/L Code Cr
CASE;

// IF DTL.G/L Code Cr is Entered
IF DTL.G_L_Code_Cr <> *BLANK;

// Call program Val G/L Act Cde 2 HPE XF.
CALL PROGRAM(Val G/L Act Cde 2 HPE XF) ('PKVBXFR');
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.G_L_Code_Cr);
PARAMETER(DTL.USR_G_L_Account_Desc);
PARAMETER(WRK.G_L_Account_Id_USR);
PARAMETER('OMS');
PARAMETER(WRK.G_L_Account_Type_2_USR);
PARAMETER(WRK.Record_Found_USR);

CASE;

// IF WRK.Record Found USR is Record Not Found
IF WRK.Record_Found_USR = 'N';

// Send error message - 'G/L Code &2 entry is invalid.'
ERROR(USR2131);
MSGPARM(DTL.G_L_Code_Cr);
MSGPARM('CR');

ENDIF;

ENDIF;

//?USER: Create DBF record

EXECUTE FUNCTION(CRT PD Financial Code  CR) TYPE(CRTOBJ) FILE(PDJ6REP)          AC1351390;
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Financial_Code);
PARAMETER(DTL.Financial_Code_Descr);
PARAMETER(DTL.Financial_Type);
PARAMETER(*MISSING);
PARAMETER(*MISSING);
PARAMETER(DTL.EDI_Status_1);
PARAMETER(DTL.EDI_Status_2);
PARAMETER(DTL.EDI_Status_3);
PARAMETER(DTL.Record_Status);
PARAMETER(DTL.Job_Time);
PARAMETER(DTL.User_Id);
PARAMETER(DTL.Job_Name);
PARAMETER(DTL.Job_Date);

//?USER: Change DBF record

EXECUTE FUNCTION(CHG PD Financial Code  CH) TYPE(CHGOBJ) FILE(PDJ6REP)          AC1351391;
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Financial_Code);
PARAMETER(DTL.Financial_Code_Descr);
PARAMETER(DTL.Financial_Type);
PARAMETER(*MISSING);
PARAMETER(*MISSING);
PARAMETER(DTL.EDI_Status_1);
PARAMETER(DTL.EDI_Status_2);
PARAMETER(DTL.EDI_Status_3);
PARAMETER(DTL.Record_Status);
PARAMETER(DTL.Job_Time);
PARAMETER(DTL.User_Id);
PARAMETER(DTL.Job_Name);
PARAMETER(DTL.Job_Date);

//?USER: Process command keys

CASE;

// IF PGM.*Program mode is *CHANGE
IF PGM.*Program_mode = 'CHG';

RETURN;

ENDIF;

