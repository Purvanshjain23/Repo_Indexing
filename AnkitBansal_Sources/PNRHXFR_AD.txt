// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PNRHXFR
// ?Date: 14.08.2025 Time: 03:46:16
// ?------------------------------------------------------------------------------------------------

//?Execute user function

EXECUTE FUNCTION(Bld Price Sheet       RT) TYPE(RTVOBJ) FILE(PNF1REP)           AC1987420;
PARAMETER(PAR.Commodity_Market_Code);
PARAMETER(PAR.Sales_Type_Code);
PARAMETER(PAR.CIP_Price_Date);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Bld Price Sheet       RT) TYPE(RTVOBJ) FILE(PNGBREP)           AC2009720;
 PARAMETER(DB1.Commodity_Market_Code);
 PARAMETER(DB1.Commodity_Price_Group);
 PARAMETER(PAR.CIP_Price_Date);
 PARAMETER(DB1.Sales_Type_Code);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(RTV IP Item Prcing Dt RT) TYPE(RTVOBJ) FILE(PNFZREP)           AC1981129;
  PARAMETER(DB1.Item_Code);
  PARAMETER(NLL.Price_Sheet_Item_Sts);
  PARAMETER(LCL.IPD_Price_Sheet_Price_Mth);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  EXECUTE FUNCTION(Bld Price Sheet       RT) TYPE(RTVOBJ) FILE(PNF3REP)           AC1987426;
  PARAMETER(DB1.Item_Code);
  PARAMETER(PAR.CIP_Price_Date);
  PARAMETER(LCL.IPD_Price_Sheet_Price_Mth);
  PARAMETER(PAR.Sales_Type_Code);
  PARAMETER(DB1.Commodity_Market_Code);
  PARAMETER(DB1.Commodity_Price_Group);
  {
   //?USER: Initialize routine

   EXECUTE FUNCTION(RTV Default Co No App IF) TYPE(EXCINTFUN)                      AC1628378;
   PARAMETER(LCL.Company_Number);
   {
    //?Execute internal function

    EXECUTE FUNCTION(RTV Program Setup w/Co RT) TYPE(RTVOBJ) FILE(CADRREP)          AC1935572;
    PARAMETER(JOB.*USER);
    PARAMETER(NLL.Allow_Multi_Company);
    PARAMETER(NLL.Default_Printer);
    PARAMETER(NLL.Salesperson_Code);
    PARAMETER(LCL.Company_Number);
    PARAMETER(PAR.User_Code_Model);
    {
     //?USER: Processing if Data record not found

     // PGM.*Return code = CND.*Record does not exist
     PGM.*Return_code = 'Y2U0005';

     //?USER: Process Data record

     MOVE *ALL (To: PAR From: DB1);

    }

    CASE;

    // IF LCL.Company Number is Equal to zero
    IF LCL.Company_Number = *ZERO;

    CASE;

    // IF PAR.User Code Model is equal to blank
    IF PAR.User_Code_Model = *BLANK;

    EXECUTE FUNCTION(RTV First Default Co  RT) TYPE(RTVOBJ) FILE(CADTREP)           AC1628379;
    PARAMETER(JOB.*USER);
    PARAMETER(PAR.Company_Number);
    {
     //?USER: Processing if Data record not found

     MOVE *ALL (To: PAR From: CON);

     //?USER: Process Data record

     MOVE *ALL (To: PAR From: DB1);

     QUIT;

    }

    // IF *OTHERWISE
    IF *OTHERWISE;

    EXECUTE FUNCTION(RTV First Default Co  RT) TYPE(RTVOBJ) FILE(CADTREP)           AC1628379;
    PARAMETER(PAR.User_Code_Model);
    PARAMETER(PAR.Company_Number);
    {
     //?USER: Processing if Data record not found

     MOVE *ALL (To: PAR From: CON);

     //?USER: Process Data record

     MOVE *ALL (To: PAR From: DB1);

     QUIT;

    }

    ENDIF;

    // IF *OTHERWISE
    IF *OTHERWISE;

    // PAR.Company Number = LCL.Company Number
    PAR.Company_Number = LCL.Company_Number;

    ENDIF;

   }

   //?USER: Process Data record

   // LCL.Error Status = CND.blank
   LCL.Error_Status = *BLANK;

   // Call program CLC Price Item         XF.
   CALL PROGRAM(CLC Price Item         XF) ('PDG9XFR');
   PARAMETER(LCL.Company_Number);
   PARAMETER(PAR.IPD_Price_Sheet_Price_Mth);
   PARAMETER(DB1.Ship_To_Customer);
   PARAMETER(PAR.CIP_Price_Date);
   PARAMETER(99);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(PAR.CIP_Price_Date);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(LCL.Error_Return);
   PARAMETER('S');

   CASE;

   // IF PAR.CIP Price Date NE LCL.Pricing Date Used
   IF PAR.CIP_Price_Date <> LCL.Pricing_Date_Used;

   // PAR.CIP Error Sts = CND.Error
   PAR.CIP_Error_Sts = 'E';

   // PAR.CIP Error Reason = CND.Market Date
   PAR.CIP_Error_Reason = 'MKTDTE';

   ENDIF;

   EXECUTE FUNCTION(RTV Sales Route        RT) TYPE(RTVOBJ) FILE(CAEOREP)          AC1371227;
   PARAMETER(LCL.Company_Number);
   PARAMETER(DB1.Ship_To_Customer);
   PARAMETER(PAR.Sales_Route_Code);
   {
    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   EXECUTE FUNCTION(Rtv Cust Mkt Broker   RT) TYPE(RTVOBJ) FILE(PDNEREP)           AC1993451;
   PARAMETER(DB1.Ship_To_Customer);
   PARAMETER(LCL.Customer_Market_Code);
   PARAMETER(PAR.Broker_Code);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

    EXECUTE FUNCTION(Rtv All values        RT) TYPE(RTVOBJ) FILE(PMDDREP)           AC1927464;
    PARAMETER(DB1.Customer_Market_Code);
    PARAMETER(NLL.Market_Desc);
    PARAMETER(NLL.Market_Type);
    PARAMETER(PAR.Broker_Code);
    PARAMETER(NLL.Salesperson_Code);
    PARAMETER(NLL.Regional_Salesperson);
    {
     //?USER: Processing if Data record not found

     MOVE *ALL (To: PAR From: CON);

     //?USER: Process Data record

     MOVE *ALL (To: PAR From: DB1);

    }

   }

   EXECUTE FUNCTION(Rtv Buyer Code        RT) TYPE(RTVOBJ) FILE(PNF4REP)           AC1993509;
   PARAMETER(DB1.Ship_To_Customer);
   PARAMETER(PAR.Buyer_Code);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   EXECUTE FUNCTION(Rtv Prior Day Price   RT) TYPE(RTVOBJ) FILE(PNF5CPP)           AC1993641;
   PARAMETER(DB1.Ship_To_Customer);
   PARAMETER('SBD');
   PARAMETER(DB1.Item_Code);
   PARAMETER(PAR.CIP_Price_Date);
   PARAMETER(LCL.CIP_Item_Price);
   PARAMETER(LCL.USR_Date_Priced);
   {
    //?USER: Processing if Data record not found

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    MOVE *ALL (To: PAR From: CON);

    //?USER: Process Data record

    CASE;

    // IF DB1.CIP Price Date EQ PAR.CIP Price Date
    IF DB1.CIP_Price_Date = PAR.CIP_Price_Date;

    // IF *OTHERWISE
    IF *OTHERWISE;

    CASE;

    // IF DB1.CIP Item Price Override is Not Zeros
    IF DB1.CIP_Item_Price_Override <> *ZERO;

    // PAR.CIP Item Price = DB1.CIP Item Price Override
    PAR.CIP_Item_Price = DB1.CIP_Item_Price_Override;

    // IF *OTHERWISE
    IF *OTHERWISE;

    // PAR.CIP Item Price = DB1.CIP Item Price
    PAR.CIP_Item_Price = DB1.CIP_Item_Price;

    ENDIF;

    // PAR.USR Date Priced = DB1.CIP Price Date
    PAR.USR_Date_Priced = DB1.CIP_Price_Date;

    QUIT;

    ENDIF;

   }

   //?PAR.CIP Item Price Chg Sts
   CASE;

   // IF LCL.Unit Price NE LCL.CIP Item Price
   IF LCL.Unit_Price <> LCL.CIP_Item_Price;

   // PAR.CIP Item Price Chg Sts = CND.Change from Prior Day
   PAR.CIP_Item_Price_Chg_Sts = 'Y';

   //?PAR.CIP Item Price Chg Sts
   // IF *OTHERWISE
   IF *OTHERWISE;

   // PAR.CIP Item Price Chg Sts = CND.No Change
   PAR.CIP_Item_Price_Chg_Sts = 'N';

   ENDIF;

   EXECUTE FUNCTION(Upd Cust Item Price   RT) TYPE(RTVOBJ) FILE(PNF5CPP)           AC1987477;
   PARAMETER(DB1.Ship_To_Customer);
   PARAMETER(PAR.Commodity_Market_Code);
   PARAMETER(DB1.Item_Code);
   PARAMETER(PAR.CIP_Price_Date);
   PARAMETER(LCL.Unit_Price);
   PARAMETER(PAR.CIP_Item_Price_Chg_Sts);
   PARAMETER(PAR.Sales_Type_Code);
   PARAMETER(PAR.Sales_Route_Code);
   PARAMETER(PAR.Broker_Code);
   PARAMETER(PAR.Buyer_Code);
   PARAMETER(PAR.Commodity_Price_Group);
   PARAMETER(PAR.CIP_Error_Sts);
   PARAMETER(PAR.CIP_Error_Reason);
   {
    //?USER: Processing if Data record not found

    EXECUTE FUNCTION(Crt Cust Item Price   CR) TYPE(CRTOBJ) FILE(PNF5CPP)           AC1979195;
    PARAMETER(PAR.Ship_To_Customer);
    PARAMETER(PAR.Commodity_Market_Code);
    PARAMETER(PAR.Item_Code);
    PARAMETER(PAR.CIP_Price_Date);
    PARAMETER(PAR.CIP_Item_Price);
    PARAMETER(PAR.CIP_Item_Price_Override);
    PARAMETER(PAR.CIP_Item_Price_Chg_Sts);
    PARAMETER(PAR.Sales_Type_Code);
    PARAMETER(PAR.Sales_Route_Code);
    PARAMETER(PAR.Broker_Code);
    PARAMETER(PAR.Buyer_Code);
    PARAMETER(PAR.Commodity_Price_Group);
    PARAMETER(PAR.CIP_Error_Sts);
    PARAMETER(PAR.CIP_Error_Reason);
    PARAMETER(PAR.Record_Status);
    PARAMETER(PAR.Create_Date);
    PARAMETER(PAR.Create_Time);
    PARAMETER(PAR.Create_User);
    PARAMETER(PAR.Create_Program);
    PARAMETER(PAR.Change_Date);
    PARAMETER(PAR.Change_Time);
    PARAMETER(PAR.Change_User);
    PARAMETER(PAR.Change_Program);
    {
     //?USER: Processing before Data update

     EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
     PARAMETER(DB1.Record_Status);
     PARAMETER(DB1.Create_Date);
     PARAMETER(DB1.Create_Time);
     PARAMETER(DB1.Create_User);
     PARAMETER(DB1.Create_Program);
     PARAMETER(DB1.Change_Date);
     PARAMETER(DB1.Change_Time);
     PARAMETER(DB1.Change_User);
     PARAMETER(DB1.Change_Program);
     {
      //?Execute internal function

      //?*** Set RECORD STATUS field. ***
      // PAR.Record Status = CND.Active
      PAR.Record_Status = 'A';

      //?*** Set CREATE fields. ***
      // PAR.Create Date = JOB.*Job date
      PAR.Create_Date = JOB.*Job_date;

      // PAR.Create Time = JOB.*Job time
      PAR.Create_Time = JOB.*Job_time;

      // PAR.Create User = JOB.*USER
      PAR.Create_User = JOB.*USER;

      // PAR.Create Program = JOB.*PROGRAM
      PAR.Create_Program = JOB.*PROGRAM;

      //?*** Set CHANGE fields. ***
      // PAR.Change Date = CON.*ZERO
      PAR.Change_Date = *ZERO;

      // PAR.Change Time = CON.*ZERO
      PAR.Change_Time = *ZERO;

      // PAR.Change User = CON.*BLANK
      PAR.Change_User = *BLANK;

      // PAR.Change Program = CON.*BLANK
      PAR.Change_Program = *BLANK;

     }

    }

    //?USER: Process Data record

    EXECUTE FUNCTION(Chg Cust Item Price   CH) TYPE(CHGOBJ) FILE(PNF5CPP)           AC1979197;
    PARAMETER(DB1.Ship_To_Customer);
    PARAMETER(DB1.Commodity_Market_Code);
    PARAMETER(DB1.Item_Code);
    PARAMETER(DB1.CIP_Price_Date);
    PARAMETER(PAR.CIP_Item_Price);
    PARAMETER(PAR.CIP_Item_Price_Chg_Sts);
    PARAMETER(DB1.Sales_Type_Code);
    PARAMETER(PAR.Sales_Route_Code);
    PARAMETER(PAR.Broker_Code);
    PARAMETER(PAR.Buyer_Code);
    PARAMETER(PAR.Commodity_Price_Group);
    PARAMETER(PAR.CIP_Error_Sts);
    PARAMETER(PAR.CIP_Error_Reason);
    {
     //?USER: Processing before Data update

     EXECUTE FUNCTION(Set Chg Date/Time      IF) TYPE(EXCINTFUN)                     AC1523476;
     PARAMETER(DB1.Change_Date);
     PARAMETER(DB1.Change_Time);
     PARAMETER(DB1.Change_User);
     PARAMETER(DB1.Change_Program);
     {
      //?Execute internal function

      // PAR.Change Date = JOB.*Job date
      PAR.Change_Date = JOB.*Job_date;

      // PAR.Change Time = JOB.*Job time
      PAR.Change_Time = JOB.*Job_time;

      // PAR.Change User = JOB.*USER
      PAR.Change_User = JOB.*USER;

      // PAR.Change Program = JOB.*PROGRAM
      PAR.Change_Program = JOB.*PROGRAM;

     }

    }

   }

  }

 }

}


