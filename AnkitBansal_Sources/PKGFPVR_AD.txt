// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKGFPVR
// ?Date: 14.08.2025 Time: 02:51:36
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modification history
DO;

//?SDN440 RMC 5/20/21 E1 - check for TRK VND Address
//?H16853 ISE 11/02/20 - Increased the Buy Order Number field length
//? from 5 to 7.
//?E7519  JJH 07/05/17 - Trucker/Producer Address
//?- This program has been failing because users have been entereing
//?  ZERO for the Number of Copies.  Add logic to set the Number of
//?  Copies to 1 if it is ZERO, before processign the EXCMSG.
//?E7519  JJH 06/27/17 - Trucker/Producer Address
//?- Change Company to be Output only.
//?- This will force users in Production to use the proper User ID
//?  to access the proper Company to process.
//?- In TEST environment, you will have to change the User Profile
//?  Applications HPE and HPERCV for User Profile ISBGUTI.
//?- This will also insure that the Payment Date and Step is for the
//?  correct Company
//?- This will also insure that logic to test for Missing M3 Suppliers
//?  for Truckers and Producers is applied to the correct company.
//?E7519 JJH 06/26/17 - M3Supplier/Producer/Trk/Loc
//?- Determine if there are any Truckers with a missing M3 Supplier
//?- If no Truckers with missing M3 Supplier, do not print the Prt
//?  Trucker Validation Error's report (PWBJPFR).
//?R10690 JJH 06/22/17 - Trucker Address
//?- Set Default Printer Options
//?- Correct Call to EXCMSG for PKGGUPC
//? 5/25/2017 JBB C9890 - Don't Allow Trucker Payments
//?                       Check Company Values record for Company
//?                       Number and DALWTRKPMT for the Don't Allow
//?                       Trucker Payments flag.  If flag is "Y",
//?                       display error message stating that the
//?                       company does not do trucker payments.
ENDDO;

EXECUTE FUNCTION(HPE044) TYPE(EXCINTFUN)                                        AB1188420;
{
 //?Execute internal function

 //?Create a Trucker edit. - Dwight Shepard
 //?Purpose:
 //?Clone the Trucker report that post and remove
 //?all update of vouchers.  Producer the report
 //?for the user to sight review before continue on.
 //?Modification History
 //?Date        Person   Description
}


EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(WRK.PPWS_Company_Number);
PARAMETER('HPE');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


CASE;

// IF PAR.Oms Access Denied (Y/N) is Yes
IF PAR.Oms_Access_Denied_Y_N = 'Y';

RETURN;

ENDIF;

// Call program Rtv Company Values    XF.
CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
PARAMETER(WRK.PPWS_Company_Number);
PARAMETER('M3VEND');
PARAMETER(LCL.System_Value_Alpha_USR);

//?R10690 JJH 06/22/17 - Set Default Print Values
// PAR.PRT Hold Output Sts = CND.*No
PAR.PRT_Hold_Output_Sts = *NO;

// PAR.PRT Save Output Sts = CND.*Yes
PAR.PRT_Save_Output_Sts = *YES;

//?USER: Load screen

CASE;

// IF WRK.First Time Flag Usr EQ WRK.Blank USR
IF WRK.First_Time_Flag_Usr = WRK.Blank_USR;

// DTL.CC Company Number = WRK.PPWS Company Number
DTL.CC_Company_Number = WRK.PPWS_Company_Number;

// WRK.Display Print Prompt  Usr = CND.Prompt is to be displayed
WRK.Display_Print_Prompt_Usr = 'Y';

// WRK.First Time Flag Usr = CND.Yes
WRK.First_Time_Flag_Usr = 'Y';

ENDIF;

EXECUTE FUNCTION(Val Company Number    IF) TYPE(EXCINTFUN)                      AB1129077;
PARAMETER(DTL.CC_Company_Number);
PARAMETER(DTL.Oms_Name);
PARAMETER(WRK.Invalid_Y_N_USR);
{
 //?Execute internal function

 // Call program Val Company Number    XF.
 CALL PROGRAM(Val Company Number    XF) ('PDGZXFR');
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(WRK.Invalid_Y_N_USR);

 CASE;

 // IF WRK.Invalid Y/N USR is Yes
 IF WRK.Invalid_Y_N_USR = 'Y';

 // Send error message - 'Invalid Company Number'
 ERROR(PRK0299);
 MSGPARM(PAR.CC_Company_Number);

 ENDIF;

 // PAR.Invalid Y/N USR = WRK.Invalid Y/N USR
 PAR.Invalid_Y_N_USR = WRK.Invalid_Y_N_USR;

}


EXECUTE FUNCTION(Rtv Payment Processing RT) TYPE(RTVOBJ) FILE(PKC4REP)          AB1147409;
PARAMETER(DTL.CC_Company_Number);
PARAMETER(DTL.Pmt_Current_Payment_Date);
PARAMETER(DTL.Pmt_Current_Payment_Step);
PARAMETER(WRK.PP_Commission_Paym_Error);
PARAMETER(DTL.Pmt_Payment_Error);
PARAMETER(WRK.PP_Unused_Nbr_1);
PARAMETER(WRK.PP_Repayment_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?4/7/2017 slm get the values to validate the m3 supplier
// Call program Rtv Company Values    XF.
CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
PARAMETER(DTL.CC_Company_Number);
PARAMETER('M3VEND');
PARAMETER(LCL.System_Value_Alpha_USR);

//?6/7/2017 slm get the values to validate the m3 supplier
// DTL.PP Trucker Error = CND.No Errors
DTL.PP_Trucker_Error = 'N';

//?USER: Validate relations

//? 5/22/2016 JBB C9890 Block Trucker Payments for Company 961
// Call program Rtv Company Values    XF.
CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
PARAMETER(DTL.CC_Company_Number);
PARAMETER('DALWTRKPMT');
PARAMETER(LCL.Don_t_Allow_Trucker_Pymt);

//?If Don't Allow Trucker Payment is Yes, send error message
CASE;

// IF LCL.Don't Allow Trucker Pymt is Yes
IF LCL.Don_t_Allow_Trucker_Pymt = 'Y';

// Send error message - 'Trucker Payments are not allowed for Company &1.'
ERROR(PRK1437);
MSGPARM(DTL.CC_Company_Number);

//?If Don't Allow Trucker Payment is Yes, send error message
// IF *OTHERWISE
IF *OTHERWISE;

//?SDN440 RMC 5/20/21 E1 - check for TRK VND Address
EXECUTE FUNCTION(Val Trucker M3/E1 Vnd RT) TYPE(RTVOBJ) FILE(PKAXCPP)           AB1337695;
PARAMETER(DTL.CC_Company_Number);
PARAMETER(DTL.Pmt_Current_Payment_Date);
PARAMETER(DTL.PP_Trucker_Error);
{
 //?USER: Initialize routine

 //?SDN440 RMC 5/20/21  if E1 is live , validate VND
 // PAR.PP Trucker Error = CND.No Errors
 PAR.PP_Trucker_Error = 'N';

 //?get live with M3
 // Call program Rtv Company Values    XF.
 CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
 PARAMETER(PAR.BOH_Company_Number);
 PARAMETER('M3LIVE');
 PARAMETER(WRK.Live_with_M3_USR);

 // Call program Rtv Company Values    XF.
 CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
 PARAMETER(PAR.BOH_Company_Number);
 PARAMETER('E1LIVE');
 PARAMETER(WRK.Live_with_E1);

 //?USER: Process Data record

 CASE;

 // IF DB1.BOL Kill Date LE PAR.Pmt Current Payment Date
 IF DB1.BOL_Kill_Date <= PAR.Pmt_Current_Payment_Date;

 EXECUTE FUNCTION(Rtv Trucker Vnd Add#M3RT) TYPE(RTVOBJ) FILE(PKBAREP)           AB1332333;
 PARAMETER(DB1.TRK_Trucker_Code);
 PARAMETER(NLL.TRK_Name);
 PARAMETER(LCL.TRK_VND_Address_Number);
 PARAMETER(LCL.TRK_M3_Supplier_Id);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  // PGM.*Return code = CND.Record Found
  PGM.*Return_code = 999;

 }

 //?Check for  M3
 CASE;

 // IF LCL.TRK M3 Supplier Id is Not Entered
 IF LCL.TRK_M3_Supplier_Id = *BLANK;

 // AND WRK.Live with M3   USR is Live or Parallel
 AND WRK.Live_with_M3_USR = 'P'/'Y';

 // PAR.PP Trucker Error = CND.Errors
 PAR.PP_Trucker_Error = 'E';

 ENDIF;

 //?Check E1 Vendor -- added for SDN440
 CASE;

 // IF LCL.TRK VND Address Number is Zero
 IF LCL.TRK_VND_Address_Number = *ZERO;

 // AND WRK.Live with E1 is Yes
 AND WRK.Live_with_E1 = 'Y';

 // PAR.PP Trucker Error = CND.Errors
 PAR.PP_Trucker_Error = 'E';

 ENDIF;

 ENDIF;

}


CASE;

// IF DTL.PP Trucker Error is Errors
IF DTL.PP_Trucker_Error = 'E';

// Call program Prt TruckerPaymentEdOnlPF.
CALL PROGRAM(Prt TruckerPaymentEdOnlPF) ('PWCDPFR');
PARAMETER(DTL.CC_Company_Number);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(DTL.Pmt_Current_Payment_Date);
PARAMETER(DTL.PP_Trucker_Error);

ENDIF;

CASE;

// IF DTL.PP Trucker Error is Errors
IF DTL.PP_Trucker_Error = 'E';

// Send information message - 'Trucker Missing Vendor'
MESSAGE(PRK1444 *INFO);

ENDIF;

ENDIF;

//?E7519 JJH 06/26/17 - Determine if there are any Truckers without
//?  M3 Supplier ID. If no, do not print Prt Trucker Valiation Error's
//?RMC MOVED UP TO CASE ABOVE
//?USER: User defined action

// WRK.Return Code USR = WRK.Blank USR
WRK.Return_Code_USR = WRK.Blank_USR;

// DTL.Text Hdr 1 Usr = WRK.Blank USR
DTL.Text_Hdr_1_Usr = WRK.Blank_USR;

//?M3 vendor live or parallel or otherwise
CASE;

// IF LCL.System Value Alpha    USR is Yes
IF LCL.System_Value_Alpha_USR = 'Y';

// OR LCL.System Value Alpha    USR is Parallel
OR LCL.System_Value_Alpha_USR = 'P';

// OR LCL.System Value Alpha    USR is No
OR LCL.System_Value_Alpha_USR = 'N';

//?RMC  - added no to the above. not sure why its checking for m3 anyways
// WRK.PRT Night Queue Run Sts = CND.No
WRK.PRT_Night_Queue_Run_Sts = 'N';

// Call program Pmt Print Options     XF.
CALL PROGRAM(Pmt Print Options     XF) ('PDG0PVR');
PARAMETER('Trucker Payment Edit');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER(WRK.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER('P/S');

//?E7519 JJH 07/05/17 - Set Prt Copies to 1 if Zero
CASE;

// IF PAR.PRT Copies is Zero
IF PAR.PRT_Copies = *ZERO;

// PAR.PRT Copies = CON.1
PAR.PRT_Copies = 1;

ENDIF;

// Execute command - 'SBM Prt Trucker Pym Edit'
EXECUTE COMMAND(PRK0684);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(DTL.CC_Company_Number);
PARAMETER(DTL.Oms_System_Value_Alpha);

RETURN;

//?Return is normal otherwise *error
CASE;

// IF WRK.Return Code USR is *Normal
IF WRK.Return_Code_USR = *BLANK;

//?Return is normal otherwise *error
// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'M3 Supplier not found.'
ERROR(PRK1325);

// DTL.Text Hdr 1 Usr = CON.Trucker is missing M3 Sup
DTL.Text_Hdr_1_Usr = 'Trucker is missing M3 Sup';

// DTL.Text Hdr 1 Usr = CONCAT(DTL.Text Hdr 1 Usr,CON.plier - see report,CON.*ZERO)
DTL.Text_Hdr_1_Usr = DTL.Text_Hdr_1_Usr + 'plier - see report' (0);

ENDIF;

ENDIF;

