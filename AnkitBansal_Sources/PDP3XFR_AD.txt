// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDP3XFR
// ?Date: 14.08.2025 Time: 03:32:48
// ?------------------------------------------------------------------------------------------------

//?Execute user function

CASE;

// IF PAR.File Name is OM Commodity Mrkt Price
IF PAR.File_Name = 'OMF0CPP';

EXECUTE FUNCTION(UPD Prc Ad-Mrk Prc ADD RT) TYPE(RTVOBJ) FILE(CABZREP)          AC1429388;
PARAMETER(PAR.Commodity_Price_Group);
PARAMETER(PAR.USR_Formula_Meth_Type_Sts);
PARAMETER(PAR.USR_Market_Meth_Type_Sts);
PARAMETER(PAR.USR_Manual_Meth_Type_Sts);
PARAMETER(PAR.USR_Extend_Meth_Type_Sts);
PARAMETER(PAR.Commodity_Market_Code);
{
 //?USER: Process Data record

 CASE;

 // IF DB1.Record Status is Active
 IF DB1.Record_Status = 'A';

 EXECUTE FUNCTION(UPD Prc Ad-Mkt Prc ADD RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1429405;
 PARAMETER(DB1.Item_Code);
 PARAMETER(PAR.Commodity_Market_Code);
 PARAMETER('CMP');
 PARAMETER(DB1.Commodity_Price_Group);
 PARAMETER(PAR.USR_Formula_Meth_Type_Sts);
 PARAMETER(PAR.USR_Market_Meth_Type_Sts);
 PARAMETER(PAR.USR_Manual_Meth_Type_Sts);
 PARAMETER(PAR.USR_Extend_Meth_Type_Sts);
 {
  //?USER: Initialize routine

  // PAR.Company Number = CON.*ZERO
  PAR.Company_Number = *ZERO;

  // PAR.Order Number = CON.*ZERO
  PAR.Order_Number = *ZERO;

  //?USER: Process Data record

  //?Order Number break
  CASE;

  // IF PAR.Accounting Company Number NE DB1.Accounting Company Number
  IF PAR.Company_Number <> DB1.Company_Number;

  // OR PAR.Order Number NE DB1.Order Number
  OR PAR.Order_Number <> DB1.Order_Number;

  EXECUTE FUNCTION(RTV Bill Type, Event   RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC1366339;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(PAR.Event_Code);
  PARAMETER(PAR.Billing_Activity_Type);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // PAR.Accounting Company Number = DB1.Accounting Company Number
  PAR.Company_Number = DB1.Company_Number;

  // PAR.Order Number = DB1.Order Number
  PAR.Order_Number = DB1.Order_Number;

  ENDIF;

  CASE;

  // IF PAR.Billing Activity Type is Credit or Debit Memo
  IF PAR.Billing_Activity_Type = '2'/'3';

  // IF PAR.Billing Activity Type is Warehouse Transfer
  IF PAR.Billing_Activity_Type = '4';

  // IF DB1.Event Code is Invoiced thru History
  IF DB1.Event_Code >= '06';
  AND DB1.Event_Code <= '07';

  // IF DB1.Detail Line Status is Cancelled
  IF DB1.Detail_Line_Status = 'X';

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(RTV Price Meth Type    RT) TYPE(RTVOBJ) FILE(PDIHREP)          AC1268519;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Price_Method_Code);
  PARAMETER(PAR.Price_Method_Type);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  CASE;

  // IF PAR.Price Method Type is Formula Pricing
  IF ( PAR.Price_Method_Type = 'F';

  // AND PAR.USR Formula Meth Type Sts is yes
  AND PAR.USR_Formula_Meth_Type_Sts = 'Y' );

  // OR PAR.Price Method Type is Market Pricing
  OR ( PAR.Price_Method_Type = 'K';

  // AND PAR.USR Market Meth Type Sts is yes
  AND PAR.USR_Market_Meth_Type_Sts = 'Y' );

  // OR PAR.Price Method Type is Manual Pricing
  OR ( PAR.Price_Method_Type = 'M';

  // AND PAR.USR Manual Meth Type Sts is yes
  AND PAR.USR_Manual_Meth_Type_Sts = 'Y' );

  // OR PAR.Price Method Type is Extended Pricing
  OR ( PAR.Price_Method_Type = 'X';

  // AND PAR.USR Extend Meth Type Sts is yes
  AND PAR.USR_Extend_Meth_Type_Sts = 'Y' );

  // Call program CLC Price/Price Audit  XF.
  CALL PROGRAM(CLC Price/Price Audit  XF) ('PDPRXFR');
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER('MPC');
  PARAMETER(WRK.Unused_Parm_Value_USR);
  PARAMETER(WRK.Order_Weight_Total);
  PARAMETER(WRK.Production_Hold);
  PARAMETER(*NO);

  ENDIF;

  ENDIF;

 }

 ENDIF;

}


ENDIF;

