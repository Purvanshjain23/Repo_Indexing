// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PNY8XFR
// ?Date: 14.08.2025 Time: 03:47:09
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Modificaitions and Comments
DO;

//?E4057 JJH 05/06/15 - Price Credit Memo Fixes
//?- Recompiled because $/Quantity by qty shipped QR
//?  removed from Cases LST of Accrual Rate Type.
ENDDO;

// PAR.Accrual Rate = CON.*ZERO
PAR.Accrual_Rate = *ZERO;

// PAR.Accrual Rate Type = WRK.BLANK
PAR.Accrual_Rate_Type = WRK.BLANK;

EXECUTE FUNCTION(RTV Unit Weight        RT) TYPE(RTVOBJ) FILE(CABZREP)          AC1298772;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Item_Code);
PARAMETER(PAR.Unit_Weight);
PARAMETER(NLL.Quality_Level);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv Discount Rate     RT) TYPE(RTVOBJ) FILE(OMHLREP)           AC2025982;
PARAMETER(PAR.Item_Code);
PARAMETER(PAR.Ship_To_Customer);
PARAMETER(PAR.U_M_Base_Price);
PARAMETER(PAR.Scheduled_Ship_Date);
PARAMETER(PAR.Item_Structure_Type_Code);
PARAMETER(PAR.Item_Structure_Group_Code);
PARAMETER(PAR.Item_Structure_Class_Code);
PARAMETER(PAR.Accrual_Rate);
PARAMETER(PAR.Unit_Weight);
PARAMETER(PAR.Accrual_Rate_Type);
{
 //?USER: Process Data record

 CASE;

 // IF DB1.Rate Usage is Customer Accrual
 IF DB1.Rate_Usage = 'C';

 EXECUTE FUNCTION(Rtv Discount Rate     RT) TYPE(RTVOBJ) FILE(OMHOREP)           AC2025983;
 PARAMETER(PAR.Ship_To_Customer);
 PARAMETER(DB1.Accrual_Code);
 PARAMETER(PAR.Item_Code);
 PARAMETER(PAR.U_M_Base_Price);
 PARAMETER(PAR.Scheduled_Ship_Date);
 PARAMETER(PAR.Item_Structure_Type_Code);
 PARAMETER(PAR.Item_Structure_Group_Code);
 PARAMETER(PAR.Item_Structure_Class_Code);
 PARAMETER(PAR.Unit_Weight);
 PARAMETER(PAR.Accrual_Rate);
 PARAMETER(PAR.Accrual_Rate_Type);
 {
  //?USER: Process Data record

  CASE;

  // IF PAR.Scheduled Ship Date GE DB1.Period Beginning Date
  IF PAR.Scheduled_Ship_Date >= DB1.Period_Beginning_Date;

  // AND PAR.Scheduled Ship Date LE DB1.Period Ending Date
  AND PAR.Scheduled_Ship_Date <= DB1.Period_Ending_Date;

  //?LCL.Accrual Rate
  CASE;

  // IF DB1.All Products (Y/N) is Yes
  IF DB1.All_Products_Y_N = 'Y';

  // LCL.Accrual Rate = DB1.Accrual Rate
  LCL.Accrual_Rate = DB1.Accrual_Rate;

  // PAR.Accrual Rate Type = DB1.Accrual Rate Type
  PAR.Accrual_Rate_Type = DB1.Accrual_Rate_Type;

  //?LCL.Accrual Rate
  // IF DB1.All Products (Y/N) is No
  IF DB1.All_Products_Y_N = 'N';

  //?ALL Product = No
  CASE;

  // IF DB1.Accrual Detail Search is Item
  IF DB1.Accrual_Detail_Search = 'I';

  EXECUTE FUNCTION(RTV & Chk Rate Exists  RT) TYPE(RTVOBJ) FILE(OMHPREP)          AC1222497;
  PARAMETER(DB1.Ship_To_Customer);
  PARAMETER(DB1.Accrual_Code);
  PARAMETER(DB1.CAH_Sequence_No);
  PARAMETER(PAR.Item_Code);
  PARAMETER(LCL.Accrual_Rate);
  PARAMETER(PAR.Accrual_Rate_Type);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   // PGM.*Return code = CND.*Normal
   PGM.*Return_code = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

  }

  //?ALL Product = No
  // IF DB1.Accrual Detail Search is Item Structure
  IF DB1.Accrual_Detail_Search = 'S';

  EXECUTE FUNCTION(RTV & Chk Rate Exists RT) TYPE(RTVOBJ) FILE(POC8REP)           AC1679311;
  PARAMETER(DB1.Ship_To_Customer);
  PARAMETER(DB1.Accrual_Code);
  PARAMETER(DB1.CAH_Sequence_No);
  PARAMETER(PAR.Item_Structure_Type_Code);
  PARAMETER(PAR.Item_Structure_Group_Code);
  PARAMETER(PAR.Item_Structure_Class_Code);
  PARAMETER(LCL.Accrual_Rate);
  PARAMETER(PAR.Accrual_Rate_Type);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

   // PGM.*Return code = CND.*Normal
   PGM.*Return_code = *BLANK;

  }

  CASE;

  // IF PGM.*Return code is *Record does not exist
  IF PGM.*Return_code = 'Y2U0005';

  EXECUTE FUNCTION(RTV & Chk Rate n/clas RT) TYPE(RTVOBJ) FILE(POC8REP)           AC1856279;
  PARAMETER(DB1.Ship_To_Customer);
  PARAMETER(DB1.Accrual_Code);
  PARAMETER(DB1.CAH_Sequence_No);
  PARAMETER(PAR.Item_Structure_Type_Code);
  PARAMETER(PAR.Item_Structure_Group_Code);
  PARAMETER(LCL.Accrual_Rate);
  PARAMETER(PAR.Accrual_Rate_Type);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   CASE;

   // IF DB1.Item Structure Class Code is Equal Zero
   IF DB1.Item_Structure_Class_Code = *ZERO;

   MOVE *ALL (To: PAR From: DB1);

   QUIT;

   ENDIF;

  }

  ENDIF;

  ENDIF;

  //?LCL.Accrual Rate
  // IF DB1.All Products (Y/N) is Yes + Exceptions
  IF DB1.All_Products_Y_N = 'X';

  // LCL.Accrual Rate = DB1.Accrual Rate
  LCL.Accrual_Rate = DB1.Accrual_Rate;

  //?ALL Product Except
  CASE;

  // IF DB1.Accrual Detail Search is Item
  IF DB1.Accrual_Detail_Search = 'I';

  EXECUTE FUNCTION(RTV & Chk Rate Exists  RT) TYPE(RTVOBJ) FILE(OMHPREP)          AC1222497;
  PARAMETER(DB1.Ship_To_Customer);
  PARAMETER(DB1.Accrual_Code);
  PARAMETER(DB1.CAH_Sequence_No);
  PARAMETER(PAR.Item_Code);
  PARAMETER(LCL.Accrual_Rate_USR);
  PARAMETER(PAR.Accrual_Rate_Type);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   // PGM.*Return code = CND.*Normal
   PGM.*Return_code = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

  }

  CASE;

  // IF PGM.*Return code is *Record does not exist
  IF PGM.*Return_code = 'Y2U0005';

  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.Accrual Rate = LCL.Accrual Rate USR
  LCL.Accrual_Rate = LCL.Accrual_Rate_USR;

  ENDIF;

  //?ALL Product Except
  // IF DB1.Accrual Detail Search is Item Structure
  IF DB1.Accrual_Detail_Search = 'S';

  EXECUTE FUNCTION(RTV & Chk Rate Exists RT) TYPE(RTVOBJ) FILE(POC8REP)           AC1679311;
  PARAMETER(DB1.Ship_To_Customer);
  PARAMETER(DB1.Accrual_Code);
  PARAMETER(DB1.CAH_Sequence_No);
  PARAMETER(PAR.Item_Structure_Type_Code);
  PARAMETER(PAR.Item_Structure_Group_Code);
  PARAMETER(PAR.Item_Structure_Class_Code);
  PARAMETER(LCL.Accrual_Rate_USR);
  PARAMETER(PAR.Accrual_Rate_Type);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

   // PGM.*Return code = CND.*Normal
   PGM.*Return_code = *BLANK;

  }

  //?CHK: Without Class Code
  CASE;

  // IF PGM.*Return code is *Record does not exist
  IF PGM.*Return_code = 'Y2U0005';

  EXECUTE FUNCTION(RTV & Chk Rate n/clas RT) TYPE(RTVOBJ) FILE(POC8REP)           AC1856279;
  PARAMETER(DB1.Ship_To_Customer);
  PARAMETER(DB1.Accrual_Code);
  PARAMETER(DB1.CAH_Sequence_No);
  PARAMETER(PAR.Item_Structure_Type_Code);
  PARAMETER(PAR.Item_Structure_Group_Code);
  PARAMETER(LCL.Accrual_Rate_USR);
  PARAMETER(PAR.Accrual_Rate_Type);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   CASE;

   // IF DB1.Item Structure Class Code is Equal Zero
   IF DB1.Item_Structure_Class_Code = *ZERO;

   MOVE *ALL (To: PAR From: DB1);

   QUIT;

   ENDIF;

  }

  //?LCL. Accrual Rate
  CASE;

  // IF PGM.*Return code is *Record does not exist
  IF PGM.*Return_code = 'Y2U0005';

  //?LCL. Accrual Rate
  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.Accrual Rate = LCL.Accrual Rate USR
  LCL.Accrual_Rate = LCL.Accrual_Rate_USR;

  ENDIF;

  //?CHK: Without Class Code
  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.Accrual Rate = LCL.Accrual Rate USR
  LCL.Accrual_Rate = LCL.Accrual_Rate_USR;

  ENDIF;

  ENDIF;

  ENDIF;

  //?CVT: Pounds to Case
  CASE;

  // IF PAR.U/M - Base Price is Cases
  IF PAR.U_M_Base_Price = 'CS';

  CASE;

  // IF PAR.Accrual Rate Type is Cases
  IF PAR.Accrual_Rate_Type = 'Q';

  // LCL.Accrual Rate USR = LCL.Accrual Rate
  LCL.Accrual_Rate_USR = LCL.Accrual_Rate;

  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.Accrual Rate USR = LCL.Accrual Rate * PAR.Unit Weight *Rounded
  LCL.Accrual_Rate_USR = LCL.Accrual_Rate * PAR.Unit_Weight 'H';

  ENDIF;

  //?CVT: Pounds to Case
  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.Accrual Rate USR = LCL.Accrual Rate
  LCL.Accrual_Rate_USR = LCL.Accrual_Rate;

  ENDIF;

  // PAR.Accrual Rate = PAR.Accrual Rate + LCL.Accrual Rate USR
  PAR.Accrual_Rate = PAR.Accrual_Rate + LCL.Accrual_Rate_USR;

  ENDIF;

 }

 // IF DB1.Rate Usage is Product Accrual
 IF DB1.Rate_Usage = 'P';

 EXECUTE FUNCTION(Rtv Discount Rate     RT) TYPE(RTVOBJ) FILE(PMD2REP)           AC2026001;
 PARAMETER(DB1.Accrual_Code);
 PARAMETER(PAR.Item_Code);
 PARAMETER(PAR.Ship_To_Customer);
 PARAMETER(PAR.U_M_Base_Price);
 PARAMETER(PAR.Scheduled_Ship_Date);
 PARAMETER(PAR.Unit_Weight);
 PARAMETER(PAR.Accrual_Rate);
 PARAMETER(PAR.Accrual_Rate_Type);
 {
  //?USER: Process Data record

  CASE;

  // IF PAR.Scheduled Ship Date GE DB1.AD Period Beginning Date
  IF PAR.Scheduled_Ship_Date >= DB1.AD_Period_Beginning_Date;

  // AND PAR.Scheduled Ship Date LE DB1.AD Period Ending Date
  AND PAR.Scheduled_Ship_Date <= DB1.AD_Period_Ending_Date;

  EXECUTE FUNCTION(RTV & Chk Rate Exists  RT) TYPE(RTVOBJ) FILE(PMD3REP)          AC1892140;
  PARAMETER(DB1.Accrual_Code);
  PARAMETER(DB1.AD_Program_Number);
  PARAMETER(PAR.Item_Code);
  PARAMETER(PAR.Accrual_Rate_Type);
  PARAMETER(LCL.Accrual_Rate_USR);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   // PGM.*Return code = CND.*Normal
   PGM.*Return_code = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

  }

  CASE;

  // IF PGM.*Return code is *Record does not exist
  IF PGM.*Return_code = 'Y2U0005';

  // LCL.Accrual Rate = LCL.Accrual Rate USR
  LCL.Accrual_Rate = LCL.Accrual_Rate_USR;

  // IF *OTHERWISE
  IF *OTHERWISE;

  //?ALL Customer = Y/N
  CASE;

  // IF DB1.AD All Customers is yes
  IF DB1.AD_All_Customers = 'Y';

  // LCL.Accrual Rate = LCL.Accrual Rate USR
  LCL.Accrual_Rate = LCL.Accrual_Rate_USR;

  //?ALL Customer = Y/N
  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(RTV & Chk Cust Exists  RT) TYPE(RTVOBJ) FILE(PNFJREP)          AC2026043;
  PARAMETER(DB1.Accrual_Code);
  PARAMETER(DB1.AD_Program_Number);
  PARAMETER(PAR.Ship_To_Customer);
  PARAMETER(LCL.Record_Found_USR);
  {
   //?USER: Processing if Data record not found

   // PAR.Record Found USR = CND.Record Not Found
   PAR.Record_Found_USR = 'N';

   //?USER: Process Data record

   // PAR.Record Found USR = CND.Record Found
   PAR.Record_Found_USR = 'Y';

  }

  CASE;

  // IF LCL.Record Found USR is Record Found
  IF LCL.Record_Found_USR = 'Y';

  // LCL.Accrual Rate = LCL.Accrual Rate USR
  LCL.Accrual_Rate = LCL.Accrual_Rate_USR;

  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.Accrual Rate = CON.*ZERO
  LCL.Accrual_Rate = *ZERO;

  ENDIF;

  ENDIF;

  ENDIF;

  //?CVT: Pounds to Case
  CASE;

  // IF PAR.U/M - Base Price is Cases
  IF PAR.U_M_Base_Price = 'CS';

  CASE;

  // IF PAR.Accrual Rate Type is Cases
  IF PAR.Accrual_Rate_Type = 'Q';

  // LCL.Accrual Rate USR = LCL.Accrual Rate
  LCL.Accrual_Rate_USR = LCL.Accrual_Rate;

  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.Accrual Rate USR = LCL.Accrual Rate * PAR.Unit Weight *Rounded
  LCL.Accrual_Rate_USR = LCL.Accrual_Rate * PAR.Unit_Weight 'H';

  ENDIF;

  //?CVT: Pounds to Case
  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.Accrual Rate USR = LCL.Accrual Rate
  LCL.Accrual_Rate_USR = LCL.Accrual_Rate;

  ENDIF;

  // PAR.Accrual Rate = PAR.Accrual Rate + LCL.Accrual Rate USR
  PAR.Accrual_Rate = PAR.Accrual_Rate + LCL.Accrual_Rate_USR;

  ENDIF;

 }

 ENDIF;

}


CASE;

// IF PAR.U/M - Base Price is Cases
IF PAR.U_M_Base_Price = 'CS';

// PAR.Accrual Rate Type = CND.$/Quantity
PAR.Accrual_Rate_Type = 'Q';

// IF *OTHERWISE
IF *OTHERWISE;

// PAR.Accrual Rate Type = CND.$/Lb
PAR.Accrual_Rate_Type = 'W';

ENDIF;

