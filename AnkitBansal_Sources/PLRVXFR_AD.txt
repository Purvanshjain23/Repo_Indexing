// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PLRVXFR
// ?Date: 14.08.2025 Time: 02:55:17
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?***** Build File LS119A: MPR Daily Purchase Summary Estimated fields ****
//?This happens every morning. Jancie can maintain it throughout the day.
//?11/18/16 R7841 Read BOL by Kill date, not reporting
//?12/09/02 Create detail here too, with reporting time=1
//?12/19/08 E00315 RMC dont report est purch for purch type 1,5 for 960
EXECUTE FUNCTION(MPR Bld Estimtd f/Sch RT) TYPE(RTVOBJ) FILE(PKAXCPP)           AB1238357;
PARAMETER(PAR.Company_Number_USR);
PARAMETER(PAR.BOL_Kill_Date);
PARAMETER(PAR.MPR_Identification_Num);
PARAMETER(PAR.MPR_Reporting_Date);
{
 //?USER: Process Data record

 //?R7841 chg from BOL Pln Head Delv TO TH Head Received
 CASE;

 // IF DB1.RS Record Status is Active
 IF DB1.RS_Record_Status = 'A';

 EXECUTE FUNCTION(Rtv Tattoo Market Hd  RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1257803;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(LCL.Head_Total_USR);
 {
  //?USER: Initialize routine

  // PAR.Head Total USR = CON.*ZERO
  PAR.Head_Total_USR = *ZERO;

  //?USER: Process Data record

  CASE;

  // IF DB1.TH Hog Class Type is Market
  IF DB1.TH_Hog_Class_Type = 'M';

  // PAR.Head Total USR = PAR.Head Total USR + DB1.TH Head Received
  PAR.Head_Total_USR = PAR.Head_Total_USR + DB1.TH_Head_Received;

  ENDIF;

 }

 //?R7805 11/04/16 RMC R7805 Use new BOH Purch Type
 EXECUTE FUNCTION(Rtv BOH Reporting Dt  RT) TYPE(RTVOBJ) FILE(PKAWCPP)           AB1351682;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(LCL.BOH_MPR_Reporting_Date);
 PARAMETER(LCL.BOH_MPR_EST_RPT_STS);
 PARAMETER(LCL.BOH_MPR_Purchase_Type);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF LCL.BOH MPR Purchase Type is *ALL values
 IF LCL.BOH_MPR_Purchase_Type = '01'/'02'/'03'/'04'/'05'/'06'/'07'/'08'/'09'/'10'/'11';

 // WRK.MPR Purchase Type = CVTVAR(LCL.BOH MPR Purchase Type)
 WRK.MPR_Purchase_Type = CVTVAR(LCL.BOH_MPR_Purchase_Type);

 // IF *OTHERWISE
 IF *OTHERWISE;

 EXECUTE FUNCTION(RTV MPR Prdcr Purch TpRT) TYPE(RTVOBJ) FILE(PKE3CPP)           AB1235599;
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(WRK.MPR_Purchase_Type);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 ENDIF;

 CASE;

 // IF WRK.MPR Purchase Type is Negotiated
 IF WRK.MPR_Purchase_Type = 1;

 //?Report negotiated on same day 118a is reported 5.20.19 - and not already
 CASE;

 // IF LCL.BOH MPR Reporting Date EQ PAR.MPR Reporting Date
 IF LCL.BOH_MPR_Reporting_Date = PAR.MPR_Reporting_Date;

 // AND LCL.BOH Status 2 is Not Yes
 AND LCL.BOH_MPR_EST_RPT_STS = *BLANK;

 // PAR.MPR Est Purch Type 1 Hd = PAR.MPR Est Purch Type 1 Hd + LCL.Head Total USR
 PAR.MPR_Est_Purch_Type_1_Hd = PAR.MPR_Est_Purch_Type_1_Hd + LCL.Head_Total_USR;

 ENDIF;

 // IF WRK.MPR Purchase Type is Oth Mkt Formula
 IF WRK.MPR_Purchase_Type = 2;

 // PAR.MPR Est Purch Type 2 Hd = PAR.MPR Est Purch Type 2 Hd + LCL.Head Total USR
 PAR.MPR_Est_Purch_Type_2_Hd = PAR.MPR_Est_Purch_Type_2_Hd + LCL.Head_Total_USR;

 // IF WRK.MPR Purchase Type is Pork Mkt Formula
 IF WRK.MPR_Purchase_Type = 3;

 // PAR.MPR Est Purch Type 3 Hd = PAR.MPR Est Purch Type 3 Hd + LCL.Head Total USR
 PAR.MPR_Est_Purch_Type_3_Hd = PAR.MPR_Est_Purch_Type_3_Hd + LCL.Head_Total_USR;

 // IF WRK.MPR Purchase Type is Oth Purchase Arng
 IF WRK.MPR_Purchase_Type = 4;

 // PAR.MPR Est Purch Type 4 Hd = PAR.MPR Est Purch Type 4 Hd + LCL.Head Total USR
 PAR.MPR_Est_Purch_Type_4_Hd = PAR.MPR_Est_Purch_Type_4_Hd + LCL.Head_Total_USR;

 // IF WRK.MPR Purchase Type is PckSld Negotiated
 IF WRK.MPR_Purchase_Type = 5;

 //?Report negotiated on same day 118a is reported 5.20.19
 CASE;

 // IF LCL.BOH MPR Reporting Date EQ PAR.MPR Reporting Date
 IF LCL.BOH_MPR_Reporting_Date = PAR.MPR_Reporting_Date;

 // AND LCL.BOH Status 2 is Not Yes
 AND LCL.BOH_MPR_EST_RPT_STS = *BLANK;

 // PAR.MPR Est Purch Type 5 Hd = PAR.MPR Est Purch Type 5 Hd + LCL.Head Total USR
 PAR.MPR_Est_Purch_Type_5_Hd = PAR.MPR_Est_Purch_Type_5_Hd + LCL.Head_Total_USR;

 ENDIF;

 // IF WRK.MPR Purchase Type is PckSld Oth Mkt Formula
 IF WRK.MPR_Purchase_Type = 6;

 // PAR.MPR Est Purch Type 6 Hd = PAR.MPR Est Purch Type 6 Hd + LCL.Head Total USR
 PAR.MPR_Est_Purch_Type_6_Hd = PAR.MPR_Est_Purch_Type_6_Hd + LCL.Head_Total_USR;

 // IF WRK.MPR Purchase Type is PckSld Pork Mkt Formula
 IF WRK.MPR_Purchase_Type = 7;

 // PAR.MPR Est Purch Type 7 Hd = PAR.MPR Est Purch Type 7 Hd + LCL.Head Total USR
 PAR.MPR_Est_Purch_Type_7_Hd = PAR.MPR_Est_Purch_Type_7_Hd + LCL.Head_Total_USR;

 // IF WRK.MPR Purchase Type is PckSld Oth Purchase Arng
 IF WRK.MPR_Purchase_Type = 8;

 // PAR.MPR Est Purch Type 8 Hd = PAR.MPR Est Purch Type 8 Hd + LCL.Head Total USR
 PAR.MPR_Est_Purch_Type_8_Hd = PAR.MPR_Est_Purch_Type_8_Hd + LCL.Head_Total_USR;

 // IF WRK.MPR Purchase Type is Other Neg Formula
 IF WRK.MPR_Purchase_Type = 10;

 // PAR.MPR Est Purch Type 10 Hd = PAR.MPR Est Purch Type 10 Hd + LCL.Head Total USR
 PAR.MPR_Est_Purch_Type_10_Hd = PAR.MPR_Est_Purch_Type_10_Hd + LCL.Head_Total_USR;

 // IF WRK.MPR Purchase Type is PckSld Neg Formula
 IF WRK.MPR_Purchase_Type = 11;

 // PAR.MPR Est Purch Type 11 Hd = PAR.MPR Est Purch Type 11 Hd + LCL.Head Total USR
 PAR.MPR_Est_Purch_Type_11_Hd = PAR.MPR_Est_Purch_Type_11_Hd + LCL.Head_Total_USR;

 ENDIF;

 EXECUTE FUNCTION(Rtv Crt/Chg Prior Dtl RT) TYPE(RTVOBJ) FILE(PKFHCPP)           AB1243291;
 PARAMETER(PAR.MPR_Identification_Num);
 PARAMETER(PAR.MPR_Reporting_Date);
 PARAMETER(1);
 PARAMETER(DB1.BOL_Kill_Date);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(DB1.PL_Location_Code);
 PARAMETER(LCL.Head_Total_USR);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt MPR Prior Day Sch CR) TYPE(CRTOBJ) FILE(PKFHCPP)           AB1243269;
  PARAMETER(PAR.MPR_Identification_Num);
  PARAMETER(PAR.MPR_Reporting_Date);
  PARAMETER(PAR.MPR_Reporting_Time);
  PARAMETER(PAR.BOL_Kill_Date);
  PARAMETER(PAR.BOH_Buy_Order_Number);
  PARAMETER(PAR.BOL_Load_Number);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.PL_Location_Code);
  PARAMETER(PAR.BOL_Pln_Head_Delv);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER('A');
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp-Sys Dt  IF) TYPE(EXCINTFUN)                      AB1237005;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // Call program Rtv System Date & Tim UP.
    CALL PROGRAM(Rtv System Date & Tim UP) ('PKWDUPC');
    PARAMETER(PAR.RS_Date_Added);
    PARAMETER(PAR.RS_Time_Added);

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  //?USER: Process Data record

  EXECUTE FUNCTION(Change MPR Prior Day Sche) TYPE(CHGOBJ) FILE(PKFHCPP)          AB1243270;
  PARAMETER(DB1.MPR_Identification_Num);
  PARAMETER(DB1.MPR_Reporting_Date);
  PARAMETER(DB1.MPR_Reporting_Time);
  PARAMETER(DB1.BOL_Kill_Date);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.PD_Producer_Code);
  PARAMETER(DB1.PL_Location_Code);
  PARAMETER(PAR.BOL_Pln_Head_Delv);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER('A');
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp-SysDtIF) TYPE(EXCINTFUN)                      AB1237006;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // Call program Rtv System Date & Tim UP.
    CALL PROGRAM(Rtv System Date & Tim UP) ('PKWDUPC');
    PARAMETER(PAR.RS_Date_Changed);
    PARAMETER(PAR.RS_Time_Changed);

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

  }

 }

 //?ADDED 6.3.19 RMC
 CASE;

 // IF LCL.BOH Status 2 is Not Yes
 IF LCL.BOH_MPR_EST_RPT_STS = *BLANK;

 EXECUTE FUNCTION(Chg BOH MPR Est Sts   CH) TYPE(CHGOBJ) FILE(PKAWCPP)           AB1351990;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER('Y');
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

 ENDIF;

 ENDIF;

 //?USER: Exit processing

 //?E00315 12/19/08 Dont report Estimated Purch for 960 purch types 1,5
 //?  by checking Company Value MPRRPTEST
 // Call program Rtv Company Values    XF.
 CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER('MPRRPTEST');
 PARAMETER(LCL.Status_1);

 CASE;

 // IF PAR.MPR Est Purch Type 1 Hd is ne Zero
 IF PAR.MPR_Est_Purch_Type_1_Hd <> 0;

 CASE;

 // IF LCL.Status 1 is Yes
 IF LCL.Status_1 = 'Y';

 EXECUTE FUNCTION(Rtv Upd Estmtd Purch  RT) TYPE(RTVOBJ) FILE(PKE4CPP)           AB1238358;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(PAR.MPR_Reporting_Date);
 PARAMETER(1);
 PARAMETER(PAR.MPR_Est_Purch_Type_1_Hd);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt MPR Estmtd Purch  CR) TYPE(CRTOBJ) FILE(PKE4CPP)           AB1235480;
  PARAMETER(PAR.CC_Company_Number);
  PARAMETER(PAR.MPR_Reporting_Date);
  PARAMETER(PAR.MPR_Purchase_Type_Code);
  PARAMETER(PAR.MPR_Estimated_Head);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(WRK.RS_Record_Status);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  //?USER: Process Data record

  // LCL.MPR Estimated Head = DB1.MPR Estimated Head + PAR.MPR Estimated Head
  LCL.MPR_Estimated_Head = DB1.MPR_Estimated_Head + PAR.MPR_Estimated_Head;

  EXECUTE FUNCTION(Chg MPR Estmtd Purch  CH) TYPE(CHGOBJ) FILE(PKE4CPP)           AB1235481;
  PARAMETER(DB1.CC_Company_Number);
  PARAMETER(DB1.MPR_Reporting_Date);
  PARAMETER(DB1.MPR_Purchase_Type_Code);
  PARAMETER(LCL.MPR_Estimated_Head);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(WRK.RS_Record_Status);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // PAR.RS Date Changed = JOB.*Job date
    PAR.RS_Date_Changed = JOB.*Job_date;

    // PAR.RS Time Changed = JOB.*Job time
    PAR.RS_Time_Changed = JOB.*Job_time;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

  }

 }

 ENDIF;

 ENDIF;

 CASE;

 // IF PAR.MPR Est Purch Type 2 Hd is ne Zero
 IF PAR.MPR_Est_Purch_Type_2_Hd <> 0;

 EXECUTE FUNCTION(Rtv Upd Estmtd Purch  RT) TYPE(RTVOBJ) FILE(PKE4CPP)           AB1238358;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(PAR.MPR_Reporting_Date);
 PARAMETER(2);
 PARAMETER(PAR.MPR_Est_Purch_Type_2_Hd);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt MPR Estmtd Purch  CR) TYPE(CRTOBJ) FILE(PKE4CPP)           AB1235480;
  PARAMETER(PAR.CC_Company_Number);
  PARAMETER(PAR.MPR_Reporting_Date);
  PARAMETER(PAR.MPR_Purchase_Type_Code);
  PARAMETER(PAR.MPR_Estimated_Head);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(WRK.RS_Record_Status);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  //?USER: Process Data record

  // LCL.MPR Estimated Head = DB1.MPR Estimated Head + PAR.MPR Estimated Head
  LCL.MPR_Estimated_Head = DB1.MPR_Estimated_Head + PAR.MPR_Estimated_Head;

  EXECUTE FUNCTION(Chg MPR Estmtd Purch  CH) TYPE(CHGOBJ) FILE(PKE4CPP)           AB1235481;
  PARAMETER(DB1.CC_Company_Number);
  PARAMETER(DB1.MPR_Reporting_Date);
  PARAMETER(DB1.MPR_Purchase_Type_Code);
  PARAMETER(LCL.MPR_Estimated_Head);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(WRK.RS_Record_Status);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // PAR.RS Date Changed = JOB.*Job date
    PAR.RS_Date_Changed = JOB.*Job_date;

    // PAR.RS Time Changed = JOB.*Job time
    PAR.RS_Time_Changed = JOB.*Job_time;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

  }

 }

 ENDIF;

 CASE;

 // IF PAR.MPR Est Purch Type 3 Hd is ne Zero
 IF PAR.MPR_Est_Purch_Type_3_Hd <> 0;

 EXECUTE FUNCTION(Rtv Upd Estmtd Purch  RT) TYPE(RTVOBJ) FILE(PKE4CPP)           AB1238358;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(PAR.MPR_Reporting_Date);
 PARAMETER(3);
 PARAMETER(PAR.MPR_Est_Purch_Type_3_Hd);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt MPR Estmtd Purch  CR) TYPE(CRTOBJ) FILE(PKE4CPP)           AB1235480;
  PARAMETER(PAR.CC_Company_Number);
  PARAMETER(PAR.MPR_Reporting_Date);
  PARAMETER(PAR.MPR_Purchase_Type_Code);
  PARAMETER(PAR.MPR_Estimated_Head);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(WRK.RS_Record_Status);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  //?USER: Process Data record

  // LCL.MPR Estimated Head = DB1.MPR Estimated Head + PAR.MPR Estimated Head
  LCL.MPR_Estimated_Head = DB1.MPR_Estimated_Head + PAR.MPR_Estimated_Head;

  EXECUTE FUNCTION(Chg MPR Estmtd Purch  CH) TYPE(CHGOBJ) FILE(PKE4CPP)           AB1235481;
  PARAMETER(DB1.CC_Company_Number);
  PARAMETER(DB1.MPR_Reporting_Date);
  PARAMETER(DB1.MPR_Purchase_Type_Code);
  PARAMETER(LCL.MPR_Estimated_Head);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(WRK.RS_Record_Status);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // PAR.RS Date Changed = JOB.*Job date
    PAR.RS_Date_Changed = JOB.*Job_date;

    // PAR.RS Time Changed = JOB.*Job time
    PAR.RS_Time_Changed = JOB.*Job_time;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

  }

 }

 ENDIF;

 CASE;

 // IF PAR.MPR Est Purch Type 4 Hd is ne Zero
 IF PAR.MPR_Est_Purch_Type_4_Hd <> 0;

 EXECUTE FUNCTION(Rtv Upd Estmtd Purch  RT) TYPE(RTVOBJ) FILE(PKE4CPP)           AB1238358;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(PAR.MPR_Reporting_Date);
 PARAMETER(4);
 PARAMETER(PAR.MPR_Est_Purch_Type_4_Hd);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt MPR Estmtd Purch  CR) TYPE(CRTOBJ) FILE(PKE4CPP)           AB1235480;
  PARAMETER(PAR.CC_Company_Number);
  PARAMETER(PAR.MPR_Reporting_Date);
  PARAMETER(PAR.MPR_Purchase_Type_Code);
  PARAMETER(PAR.MPR_Estimated_Head);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(WRK.RS_Record_Status);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  //?USER: Process Data record

  // LCL.MPR Estimated Head = DB1.MPR Estimated Head + PAR.MPR Estimated Head
  LCL.MPR_Estimated_Head = DB1.MPR_Estimated_Head + PAR.MPR_Estimated_Head;

  EXECUTE FUNCTION(Chg MPR Estmtd Purch  CH) TYPE(CHGOBJ) FILE(PKE4CPP)           AB1235481;
  PARAMETER(DB1.CC_Company_Number);
  PARAMETER(DB1.MPR_Reporting_Date);
  PARAMETER(DB1.MPR_Purchase_Type_Code);
  PARAMETER(LCL.MPR_Estimated_Head);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(WRK.RS_Record_Status);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // PAR.RS Date Changed = JOB.*Job date
    PAR.RS_Date_Changed = JOB.*Job_date;

    // PAR.RS Time Changed = JOB.*Job time
    PAR.RS_Time_Changed = JOB.*Job_time;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

  }

 }

 ENDIF;

 CASE;

 // IF PAR.MPR Est Purch Type 5 Hd is ne Zero
 IF PAR.MPR_Est_Purch_Type_5_Hd <> 0;

 CASE;

 // IF LCL.Status 1 is Yes
 IF LCL.Status_1 = 'Y';

 EXECUTE FUNCTION(Rtv Upd Estmtd Purch  RT) TYPE(RTVOBJ) FILE(PKE4CPP)           AB1238358;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(PAR.MPR_Reporting_Date);
 PARAMETER(5);
 PARAMETER(PAR.MPR_Est_Purch_Type_5_Hd);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt MPR Estmtd Purch  CR) TYPE(CRTOBJ) FILE(PKE4CPP)           AB1235480;
  PARAMETER(PAR.CC_Company_Number);
  PARAMETER(PAR.MPR_Reporting_Date);
  PARAMETER(PAR.MPR_Purchase_Type_Code);
  PARAMETER(PAR.MPR_Estimated_Head);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(WRK.RS_Record_Status);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  //?USER: Process Data record

  // LCL.MPR Estimated Head = DB1.MPR Estimated Head + PAR.MPR Estimated Head
  LCL.MPR_Estimated_Head = DB1.MPR_Estimated_Head + PAR.MPR_Estimated_Head;

  EXECUTE FUNCTION(Chg MPR Estmtd Purch  CH) TYPE(CHGOBJ) FILE(PKE4CPP)           AB1235481;
  PARAMETER(DB1.CC_Company_Number);
  PARAMETER(DB1.MPR_Reporting_Date);
  PARAMETER(DB1.MPR_Purchase_Type_Code);
  PARAMETER(LCL.MPR_Estimated_Head);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(WRK.RS_Record_Status);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // PAR.RS Date Changed = JOB.*Job date
    PAR.RS_Date_Changed = JOB.*Job_date;

    // PAR.RS Time Changed = JOB.*Job time
    PAR.RS_Time_Changed = JOB.*Job_time;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

  }

 }

 ENDIF;

 ENDIF;

 CASE;

 // IF PAR.MPR Est Purch Type 6 Hd is ne Zero
 IF PAR.MPR_Est_Purch_Type_6_Hd <> 0;

 EXECUTE FUNCTION(Rtv Upd Estmtd Purch  RT) TYPE(RTVOBJ) FILE(PKE4CPP)           AB1238358;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(PAR.MPR_Reporting_Date);
 PARAMETER(6);
 PARAMETER(PAR.MPR_Est_Purch_Type_6_Hd);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt MPR Estmtd Purch  CR) TYPE(CRTOBJ) FILE(PKE4CPP)           AB1235480;
  PARAMETER(PAR.CC_Company_Number);
  PARAMETER(PAR.MPR_Reporting_Date);
  PARAMETER(PAR.MPR_Purchase_Type_Code);
  PARAMETER(PAR.MPR_Estimated_Head);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(WRK.RS_Record_Status);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  //?USER: Process Data record

  // LCL.MPR Estimated Head = DB1.MPR Estimated Head + PAR.MPR Estimated Head
  LCL.MPR_Estimated_Head = DB1.MPR_Estimated_Head + PAR.MPR_Estimated_Head;

  EXECUTE FUNCTION(Chg MPR Estmtd Purch  CH) TYPE(CHGOBJ) FILE(PKE4CPP)           AB1235481;
  PARAMETER(DB1.CC_Company_Number);
  PARAMETER(DB1.MPR_Reporting_Date);
  PARAMETER(DB1.MPR_Purchase_Type_Code);
  PARAMETER(LCL.MPR_Estimated_Head);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(WRK.RS_Record_Status);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // PAR.RS Date Changed = JOB.*Job date
    PAR.RS_Date_Changed = JOB.*Job_date;

    // PAR.RS Time Changed = JOB.*Job time
    PAR.RS_Time_Changed = JOB.*Job_time;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

  }

 }

 ENDIF;

 CASE;

 // IF PAR.MPR Est Purch Type 7 Hd is ne Zero
 IF PAR.MPR_Est_Purch_Type_7_Hd <> 0;

 EXECUTE FUNCTION(Rtv Upd Estmtd Purch  RT) TYPE(RTVOBJ) FILE(PKE4CPP)           AB1238358;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(PAR.MPR_Reporting_Date);
 PARAMETER(7);
 PARAMETER(PAR.MPR_Est_Purch_Type_7_Hd);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt MPR Estmtd Purch  CR) TYPE(CRTOBJ) FILE(PKE4CPP)           AB1235480;
  PARAMETER(PAR.CC_Company_Number);
  PARAMETER(PAR.MPR_Reporting_Date);
  PARAMETER(PAR.MPR_Purchase_Type_Code);
  PARAMETER(PAR.MPR_Estimated_Head);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(WRK.RS_Record_Status);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  //?USER: Process Data record

  // LCL.MPR Estimated Head = DB1.MPR Estimated Head + PAR.MPR Estimated Head
  LCL.MPR_Estimated_Head = DB1.MPR_Estimated_Head + PAR.MPR_Estimated_Head;

  EXECUTE FUNCTION(Chg MPR Estmtd Purch  CH) TYPE(CHGOBJ) FILE(PKE4CPP)           AB1235481;
  PARAMETER(DB1.CC_Company_Number);
  PARAMETER(DB1.MPR_Reporting_Date);
  PARAMETER(DB1.MPR_Purchase_Type_Code);
  PARAMETER(LCL.MPR_Estimated_Head);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(WRK.RS_Record_Status);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // PAR.RS Date Changed = JOB.*Job date
    PAR.RS_Date_Changed = JOB.*Job_date;

    // PAR.RS Time Changed = JOB.*Job time
    PAR.RS_Time_Changed = JOB.*Job_time;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

  }

 }

 ENDIF;

 CASE;

 // IF PAR.MPR Est Purch Type 8 Hd is ne Zero
 IF PAR.MPR_Est_Purch_Type_8_Hd <> 0;

 EXECUTE FUNCTION(Rtv Upd Estmtd Purch  RT) TYPE(RTVOBJ) FILE(PKE4CPP)           AB1238358;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(PAR.MPR_Reporting_Date);
 PARAMETER(8);
 PARAMETER(PAR.MPR_Est_Purch_Type_8_Hd);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt MPR Estmtd Purch  CR) TYPE(CRTOBJ) FILE(PKE4CPP)           AB1235480;
  PARAMETER(PAR.CC_Company_Number);
  PARAMETER(PAR.MPR_Reporting_Date);
  PARAMETER(PAR.MPR_Purchase_Type_Code);
  PARAMETER(PAR.MPR_Estimated_Head);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(WRK.RS_Record_Status);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  //?USER: Process Data record

  // LCL.MPR Estimated Head = DB1.MPR Estimated Head + PAR.MPR Estimated Head
  LCL.MPR_Estimated_Head = DB1.MPR_Estimated_Head + PAR.MPR_Estimated_Head;

  EXECUTE FUNCTION(Chg MPR Estmtd Purch  CH) TYPE(CHGOBJ) FILE(PKE4CPP)           AB1235481;
  PARAMETER(DB1.CC_Company_Number);
  PARAMETER(DB1.MPR_Reporting_Date);
  PARAMETER(DB1.MPR_Purchase_Type_Code);
  PARAMETER(LCL.MPR_Estimated_Head);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(WRK.RS_Record_Status);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // PAR.RS Date Changed = JOB.*Job date
    PAR.RS_Date_Changed = JOB.*Job_date;

    // PAR.RS Time Changed = JOB.*Job time
    PAR.RS_Time_Changed = JOB.*Job_time;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

  }

 }

 ENDIF;

 CASE;

 // IF PAR.MPR Est Purch Type 10 Hd is ne Zero
 IF PAR.MPR_Est_Purch_Type_10_Hd <> 0;

 EXECUTE FUNCTION(Rtv Upd Estmtd Purch  RT) TYPE(RTVOBJ) FILE(PKE4CPP)           AB1238358;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(PAR.MPR_Reporting_Date);
 PARAMETER(10);
 PARAMETER(PAR.MPR_Est_Purch_Type_10_Hd);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt MPR Estmtd Purch  CR) TYPE(CRTOBJ) FILE(PKE4CPP)           AB1235480;
  PARAMETER(PAR.CC_Company_Number);
  PARAMETER(PAR.MPR_Reporting_Date);
  PARAMETER(PAR.MPR_Purchase_Type_Code);
  PARAMETER(PAR.MPR_Estimated_Head);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(WRK.RS_Record_Status);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  //?USER: Process Data record

  // LCL.MPR Estimated Head = DB1.MPR Estimated Head + PAR.MPR Estimated Head
  LCL.MPR_Estimated_Head = DB1.MPR_Estimated_Head + PAR.MPR_Estimated_Head;

  EXECUTE FUNCTION(Chg MPR Estmtd Purch  CH) TYPE(CHGOBJ) FILE(PKE4CPP)           AB1235481;
  PARAMETER(DB1.CC_Company_Number);
  PARAMETER(DB1.MPR_Reporting_Date);
  PARAMETER(DB1.MPR_Purchase_Type_Code);
  PARAMETER(LCL.MPR_Estimated_Head);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(WRK.RS_Record_Status);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // PAR.RS Date Changed = JOB.*Job date
    PAR.RS_Date_Changed = JOB.*Job_date;

    // PAR.RS Time Changed = JOB.*Job time
    PAR.RS_Time_Changed = JOB.*Job_time;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

  }

 }

 ENDIF;

 CASE;

 // IF PAR.MPR Est Purch Type 11 Hd is ne Zero
 IF PAR.MPR_Est_Purch_Type_11_Hd <> 0;

 EXECUTE FUNCTION(Rtv Upd Estmtd Purch  RT) TYPE(RTVOBJ) FILE(PKE4CPP)           AB1238358;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(PAR.MPR_Reporting_Date);
 PARAMETER(11);
 PARAMETER(PAR.MPR_Est_Purch_Type_11_Hd);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt MPR Estmtd Purch  CR) TYPE(CRTOBJ) FILE(PKE4CPP)           AB1235480;
  PARAMETER(PAR.CC_Company_Number);
  PARAMETER(PAR.MPR_Reporting_Date);
  PARAMETER(PAR.MPR_Purchase_Type_Code);
  PARAMETER(PAR.MPR_Estimated_Head);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(WRK.RS_Record_Status);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  //?USER: Process Data record

  // LCL.MPR Estimated Head = DB1.MPR Estimated Head + PAR.MPR Estimated Head
  LCL.MPR_Estimated_Head = DB1.MPR_Estimated_Head + PAR.MPR_Estimated_Head;

  EXECUTE FUNCTION(Chg MPR Estmtd Purch  CH) TYPE(CHGOBJ) FILE(PKE4CPP)           AB1235481;
  PARAMETER(DB1.CC_Company_Number);
  PARAMETER(DB1.MPR_Reporting_Date);
  PARAMETER(DB1.MPR_Purchase_Type_Code);
  PARAMETER(LCL.MPR_Estimated_Head);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(WRK.RS_Record_Status);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // PAR.RS Date Changed = JOB.*Job date
    PAR.RS_Date_Changed = JOB.*Job_date;

    // PAR.RS Time Changed = JOB.*Job time
    PAR.RS_Time_Changed = JOB.*Job_time;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

  }

 }

 ENDIF;

}


//?11/05/2020 ISE H16853 - Recompiled due to change in Buy Order Number
