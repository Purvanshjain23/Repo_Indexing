// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for OMWLXFR
// ?Date: 14.08.2025 Time: 03:27:28
// ?------------------------------------------------------------------------------------------------

//?Execute user function

EXECUTE FUNCTION(RTV Bld Cust Pnd & Dol RT) TYPE(RTVOBJ) FILE(OMHSTPP)          AC1242226;
PARAMETER(PAR.USR_Sales_Realiz_Flag);
PARAMETER(PAR.USR_Active_Flag);
PARAMETER(PAR.USR_Input_2);
PARAMETER(PAR.USR_Customer_Type);
PARAMETER(PAR.Company_Number);
{
 //?USER: Initialize routine

 //?***** Change Log and Comments
 DO;

 EXECUTE FUNCTION(FP1309 Inventory Age  IF) TYPE(EXCINTFUN)                      AC1981251;
 {
  //?Execute internal function

  //?FP1309 Inventory Age Code Description
 }

 //?** 02/07/2007 LJB L70117a
 //?** Write a record to the work file even if Co# is passed in and
 //?** there is Zeros for the amount or weight. The record needs to
 //?** be there in order to retrieve the history for this customer
 //?** since there may be history with no records for the
 //?** requested date range.
 //?** Just zero out the amount when the company is passed in.
 ENDDO;

 //?USER: Process Data record

 //?** 02/07/2007 LJB L70117a
 //?** Don't skip the record if a Company is passed in. The record
 //?** needs to be written so history can be retrieved when the report
 //?** is printed. Just zero out the amount if the company is passed in.
 EXECUTE FUNCTION(RTV Billing Type       RT) TYPE(RTVOBJ) FILE(OPEXREP)          AC1316455;
 PARAMETER(DB1.Order_Type_Sales);
 PARAMETER(WRK.Billing_Activity_Type);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?FOB Gross Amount and Weight Billed
 CASE;

 // IF WRK.Billing Activity Type is Invoice
 IF WRK.Billing_Activity_Type = '1';

 CASE;

 // IF DB1.Affect Sales Doll Status is no
 IF DB1.Affect_Sales_Doll_Status = 'N';

 // WRK.FOB Gross Amount = CON.*ZERO
 WRK.FOB_Gross_Amount = *ZERO;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // WRK.FOB Gross Amount = DB1.FOB Gross Amount
 WRK.FOB_Gross_Amount = DB1.FOB_Gross_Amount;

 ENDIF;

 CASE;

 // IF DB1.Affect Sales Pnds Status is no
 IF DB1.Affect_Sales_Pnds_Status = 'N';

 // WRK.Weight Billed = CON.*ZERO
 WRK.Weight_Billed = *ZERO;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // WRK.Weight Billed = DB1.Weight Billed
 WRK.Weight_Billed = DB1.Weight_Billed;

 ENDIF;

 //?FOB Gross Amount and Weight Billed
 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Credit or Debit memo
 CASE;

 // IF PAR.USR Sales Realiz. Flag is Process by Flags
 IF PAR.USR_Sales_Realiz_Flag = 'P';

 CASE;

 // IF DB1.Affect Sales Doll Status is no
 IF DB1.Affect_Sales_Doll_Status = 'N';

 // WRK.FOB Gross Amount = CON.*ZERO
 WRK.FOB_Gross_Amount = *ZERO;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // WRK.FOB Gross Amount = DB1.FOB Gross Amount
 WRK.FOB_Gross_Amount = DB1.FOB_Gross_Amount;

 ENDIF;

 CASE;

 // IF DB1.Affect Sales Pnds Status is no
 IF DB1.Affect_Sales_Pnds_Status = 'N';

 // WRK.Weight Billed = CON.*ZERO
 WRK.Weight_Billed = *ZERO;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // WRK.Weight Billed = DB1.Weight Billed
 WRK.Weight_Billed = DB1.Weight_Billed;

 ENDIF;

 //?Credit or Debit memo
 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF PAR.USR Sales Realiz. Flag is All
 IF PAR.USR_Sales_Realiz_Flag = 'A';

 CASE;

 // IF DB1.Affect Sales Doll Status is no
 IF DB1.Affect_Sales_Doll_Status = 'N';

 // AND DB1.Affect Sales Pnds Status is yes
 AND DB1.Affect_Sales_Pnds_Status = 'Y';

 // WRK.FOB Gross Amount = CON.*ZERO
 WRK.FOB_Gross_Amount = *ZERO;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // WRK.FOB Gross Amount = DB1.FOB Gross Amount
 WRK.FOB_Gross_Amount = DB1.FOB_Gross_Amount;

 ENDIF;

 CASE;

 // IF DB1.Affect Sales Pnds Status is no
 IF DB1.Affect_Sales_Pnds_Status = 'N';

 // AND DB1.Affect Sales Doll Status is yes
 AND DB1.Affect_Sales_Doll_Status = 'Y';

 // WRK.Weight Billed = CON.*ZERO
 WRK.Weight_Billed = *ZERO;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // WRK.Weight Billed = DB1.Weight Billed
 WRK.Weight_Billed = DB1.Weight_Billed;

 ENDIF;

 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF PAR.USR Sales Realiz. Flag is None
 IF PAR.USR_Sales_Realiz_Flag = 'N';

 // WRK.FOB Gross Amount = CON.*ZERO
 WRK.FOB_Gross_Amount = *ZERO;

 // WRK.Weight Billed = CON.*ZERO
 WRK.Weight_Billed = *ZERO;

 ENDIF;

 ENDIF;

 ENDIF;

 //?If Credit Memo weight is greater than zero, reverse the sign
 CASE;

 // IF WRK.Weight Billed is Greater than zero
 IF WRK.Weight_Billed > *ZERO;

 // AND WRK.Billing Activity Type is Credit Memo
 AND WRK.Billing_Activity_Type = '2';

 // WRK.Weight Billed = CON.*ZERO - WRK.Weight Billed
 WRK.Weight_Billed = *ZERO - WRK.Weight_Billed;

 ENDIF;

 ENDIF;

 //?Determine primary customer on report
 CASE;

 // IF PAR.USR Customer Type is Parent
 IF PAR.USR_Customer_Type = '1';

 // WRK.Customer Number       NBR = DB1.Parent Customer
 WRK.Customer_Number_NBR = DB1.Parent_Customer;

 //?Determine primary customer on report
 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF PAR.USR Customer Type is A/R
 IF PAR.USR_Customer_Type = '2';

 // WRK.Customer Number       NBR = DB1.A/R Customer Number
 WRK.Customer_Number_NBR = DB1.AR_Customer_Number;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // WRK.Customer Number       NBR = DB1.Ship To Customer
 WRK.Customer_Number_NBR = DB1.Ship_To_Customer;

 ENDIF;

 ENDIF;

 //?Retrieve Group Code only if report is by Group Code
 CASE;

 // IF PAR.USR Active Flag is Record Found
 IF PAR.USR_Active_Flag = 'Y';

 EXECUTE FUNCTION(RTV Cust Ordering Dflt2RT) TYPE(RTVOBJ) FILE(CAEOREP)          AC1981275;
 PARAMETER(DB1.Company_Number);
 PARAMETER(WRK.Customer_Number_NBR);
 PARAMETER(WRK.Terms_Code);
 PARAMETER(WRK.Sales_Route_Code);
 PARAMETER(WRK.Special_Instructions_2);
 PARAMETER(WRK.Special_Instructions);
 PARAMETER(NLL.Carrier_Code);
 PARAMETER(WRK.P_O_Required_Flag);
 PARAMETER(WRK.Deliver_after_time);
 PARAMETER(WRK.Type_Code);
 PARAMETER(WRK.Absorbed_Freight_Rate_CWT);
 PARAMETER(WRK.Mileage_To_Customer);
 PARAMETER(WRK.Warehouse_Code);
 PARAMETER(WRK.Outside_Warehouse_Flag);
 PARAMETER(WRK.Customer_Group_Code);
 PARAMETER(WRK.Customer_Group_Code_2);
 PARAMETER(NLL.Ord_Ent_Default_Sls_Rte);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?Retrieve Group Code only if report is by Group Code
 // IF *OTHERWISE
 IF *OTHERWISE;

 // WRK.Customer Group Code = CON.*BLANK
 WRK.Customer_Group_Code = *BLANK;

 ENDIF;

 //?Use only one customer field for now.
 EXECUTE FUNCTION(RTV Check Existance    RT) TYPE(RTVOBJ) FILE(OMH4REP)          AC1242238;
 PARAMETER(WRK.ZERO);
 PARAMETER(WRK.ZERO);
 PARAMETER(PAR.Company_Number);
 PARAMETER(WRK.Customer_Number_NBR);
 PARAMETER(WRK.Customer_Group_Code);
 PARAMETER(WRK.Ranking_Sort_Field);
 PARAMETER(WRK.Weight_Shipped_Total);
 PARAMETER(WRK.Billing_Amount);
 {
  //?USER: Process Data record

  // PGM.*Return code = CND.*Normal
  PGM.*Return_code = *BLANK;

  MOVE *ALL (To: PAR From: DB1);

 }

 //?Update existing record or create a new one
 CASE;

 // IF PGM.*Return code is *Normal
 IF PGM.*Return_code = *BLANK;

 //?** If Co# was passed in and db1 co doesn't match, zero amount & wt
 //?**                                             LJB L70117a
 CASE;

 // IF PAR.Company Number is not equal to zero
 IF PAR.Company_Number <> *ZERO;

 CASE;

 // IF DB1.Company Number NE PAR.Company Number
 IF DB1.Company_Number <> PAR.Company_Number;

 // WRK.FOB Gross Amount = CON.*ZERO
 WRK.FOB_Gross_Amount = *ZERO;

 // WRK.Weight Billed = CON.*ZERO
 WRK.Weight_Billed = *ZERO;

 ENDIF;

 ENDIF;

 // WRK.Weight Shipped Total = WRK.Weight Shipped Total + WRK.Weight Billed
 WRK.Weight_Shipped_Total = WRK.Weight_Shipped_Total + WRK.Weight_Billed;

 // WRK.Billing Amount = WRK.Billing Amount + WRK.FOB Gross Amount
 WRK.Billing_Amount = WRK.Billing_Amount + WRK.FOB_Gross_Amount;

 //?Determine if ranking sort field is pounds or dollars
 CASE;

 // IF PAR.USR Input 2 is Yes
 IF PAR.USR_Input_2 = 'Y';

 // WRK.Ranking Sort Field = WRK.Billing Amount
 WRK.Ranking_Sort_Field = WRK.Billing_Amount;

 //?Determine if ranking sort field is pounds or dollars
 // IF *OTHERWISE
 IF *OTHERWISE;

 // WRK.Ranking Sort Field = WRK.Weight Shipped Total
 WRK.Ranking_Sort_Field = WRK.Weight_Shipped_Total;

 ENDIF;

 EXECUTE FUNCTION(CHG OM Cust Pound & Do CH) TYPE(CHGOBJ) FILE(OMH4REP)          AC1242228;
 PARAMETER(WRK.ZERO);
 PARAMETER(WRK.ZERO);
 PARAMETER(PAR.Company_Number);
 PARAMETER(WRK.Customer_Number_NBR);
 PARAMETER(WRK.Customer_Group_Code);
 PARAMETER(WRK.Ranking_Sort_Field);
 PARAMETER(WRK.Weight_Shipped_Total);
 PARAMETER(WRK.Billing_Amount);
 //?Update existing record or create a new one
 // IF *OTHERWISE
 IF *OTHERWISE;

 //?** If Co# was passed in and db1 co doesn't match, zero amount & wt
 //?**                                             LJB L70117a
 CASE;

 // IF PAR.Company Number is not equal to zero
 IF PAR.Company_Number <> *ZERO;

 CASE;

 // IF DB1.Company Number NE PAR.Company Number
 IF DB1.Company_Number <> PAR.Company_Number;

 // WRK.FOB Gross Amount = CON.*ZERO
 WRK.FOB_Gross_Amount = *ZERO;

 // WRK.Weight Billed = CON.*ZERO
 WRK.Weight_Billed = *ZERO;

 ENDIF;

 ENDIF;

 //?Determine if ranking sort field is pounds or dollars
 CASE;

 // IF PAR.USR Input 2 is Yes
 IF PAR.USR_Input_2 = 'Y';

 // WRK.Ranking Sort Field = WRK.FOB Gross Amount
 WRK.Ranking_Sort_Field = WRK.FOB_Gross_Amount;

 //?Determine if ranking sort field is pounds or dollars
 // IF *OTHERWISE
 IF *OTHERWISE;

 // WRK.Ranking Sort Field = WRK.Weight Billed
 WRK.Ranking_Sort_Field = WRK.Weight_Billed;

 ENDIF;

 EXECUTE FUNCTION(CRT OM Cust Pnd & Dlr  CR) TYPE(CRTOBJ) FILE(OMH4REP)          AC1242227;
 PARAMETER(WRK.ZERO);
 PARAMETER(WRK.ZERO);
 PARAMETER(PAR.Company_Number);
 PARAMETER(WRK.Customer_Number_NBR);
 PARAMETER(WRK.Customer_Group_Code);
 PARAMETER(WRK.Ranking_Sort_Field);
 PARAMETER(WRK.Weight_Billed);
 PARAMETER(WRK.FOB_Gross_Amount);
 ENDIF;

}


//?***** Change Log and Comments
DO;

//?** 02/07/2007 LJB L70117a
//?** Write a record to the file even if the company number is
//?** passed in and it doesn't match. The company/customer fields
//?** are needed to retrieve the history amount & weight
ENDDO;

